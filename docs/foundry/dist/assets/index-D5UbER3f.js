const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DTJyLF7j.js","assets/index-CZxYc6i7.js","assets/overview-CkRr14Kh.js","assets/reference-DjWd1X7B.js","assets/overview-BpbU4GMD.js","assets/continuous-integration-B-7mB7fT.js","assets/dynamic-test-linking-Bd1uW_1t.js","assets/hardhat-BDW4IcXv.js","assets/overview-CGNzJ-RE.js","assets/shell-autocompletion-ClwXsyK_.js","assets/static-analyzers-Dsx18FKV.js","assets/vscode-BU3oXwPP.js","assets/vyper-DFdlNt4t.js","assets/overview-DNP4FZ84.js","assets/reference-Z9HIgxPn.js","assets/debugger-DJsKM2RU.js","assets/deploying-BKbGoJNK.js","assets/overview-Ctwomb3V.js","assets/deterministic-deployments-using-create2-BmkwJwV4.js","assets/eip712-Co2qYY7u.js","assets/forking-mainnet-with-cast-anvil-CwLXVHpQ.js","assets/foundry-in-docker-D68LKNH5.js","assets/scripting-with-solidity-DgAt30dN.js","assets/video-tutorials-B9cufcBZ.js","assets/getting-started-Dk0fDlUd.js","assets/installation-DZZoIjvR.js","assets/overview-BSFhmphK.js","assets/prompting-BkLm2yF4.js","assets/README-CSYW1AUr.js","assets/faq-BHrRe-zQ.js","assets/struct-encoding-DZUdczvp.js","assets/v1.0-migration-B2mlm6T5.js","assets/README-CmapAn8K.js","assets/ds-test-DE0Wye68.js","assets/abi-commands-CwFRSCOZ.js","assets/account-commands-OxoYF-jr.js","assets/block-commands-BStS28yk.js","assets/cast-4byte-calldata-RBOmf5x1.js","assets/common-options-OsAHhg-o.js","assets/cast-4byte-event-DG8eQIaD.js","assets/cast-4byte-BhsJypMz.js","assets/cast-abi-encode-Ds0MAWHl.js","assets/cast-access-list-BXOwUrTo.js","assets/sig-description-BQxkyap_.js","assets/wallet-options-Il0ZuM8R.js","assets/wallet-options-raw-DUA3oCjg.js","assets/wallet-options-keystore-DuC5PFVS.js","assets/wallet-options-hardware-CzqFrXbI.js","assets/wallet-options-remote-D7IykmrK.js","assets/rpc-options-D0SEoQy0.js","assets/rpc-url-option-Bdlv6sNx.js","assets/etherscan-options-CLooEQsH.js","assets/cast-address-zero-Ci5VbQnz.js","assets/cast-age-CbayrzDO.js","assets/cast-balance-COOsDLO8.js","assets/cast-basefee-4KXqFjqi.js","assets/cast-block-number-Cq24MSIK.js","assets/cast-block-DmwPOBN4.js","assets/display-options-CoE2BSKN.js","assets/cast-call-oCTnwwKi.js","assets/cast-calldata--9EUB6v7.js","assets/cast-chain-id-BEkP1EEm.js","assets/cast-chain-C5TiUcWG.js","assets/cast-client-B17cm6G9.js","assets/cast-code-BieKZBbR.js","assets/cast-codesize-Bpee713B.js","assets/cast-completions-D_nNgxZe.js","assets/cast-compute-address-DIQ4NXQw.js","assets/cast-concat-hex-BqcSHAlZ.js","assets/cast-create2-CG5GwO0g.js","assets/cast-decode-abi-DQl5FXgI.js","assets/cast-decode-calldata-BCviujYq.js","assets/cast-estimate-bm-Jpilz.js","assets/tx-value-option-CLXgq6c9.js","assets/cast-etherscan-source-DV6S-1h6.js","assets/cast-find-block-DN3dO4_5.js","assets/cast-format-bytes32-string-BrCc1RAp.js","assets/cast-from-bin-wpI0T2Qo.js","assets/cast-from-fixed-point-ChjnHDc1.js","assets/cast-from-rlp-C4WzrQt_.js","assets/cast-from-utf8-BulKWbVk.js","assets/cast-from-wei-Dt-bNlMK.js","assets/cast-gas-price-6ZJqJEEJ.js","assets/cast-help-DJEc0aim.js","assets/cast-index-D0E_i1zL.js","assets/cast-interface-Ciwsh8KK.js","assets/cast-keccak-BF_SnuCI.js","assets/cast-logs-Df5Ar7Mp.js","assets/cast-lookup-address-DUqfmQ__.js","assets/cast-max-int-qCWR_49x.js","assets/cast-max-uint-D0pNqalK.js","assets/cast-min-int-B5mrezQY.js","assets/cast-mktx-CIYuDHP1.js","assets/transaction-options-DcX8sy4C.js","assets/cast-namehash-DJEHTegs.js","assets/cast-nonce-DbgV7Ln2.js","assets/cast-parse-bytes32-address-BlmF_XOr.js","assets/cast-parse-bytes32-string-MJ2iR5QG.js","assets/cast-pretty-calldata-C7UeaOb_.js","assets/cast-proof-BnsYGPiB.js","assets/cast-publish-CGjTgahU.js","assets/cast-receipt-CmmLJaut.js","assets/cast-resolve-name-DEeMSUq3.js","assets/cast-rpc-B8fQvzjh.js","assets/cast-run-B5JSof9G.js","assets/cast-selectors-Bds5qGdf.js","assets/cast-send-CIvv5kuC.js","assets/cast-shl-C_j7Sts_.js","assets/base-options-COy46lTc.js","assets/cast-shr-PWSSdpHF.js","assets/cast-sig-event-D8uSDH94.js","assets/cast-sig-DVGxFMwz.js","assets/cast-storage-DqfrEj22.js","assets/cast-to-ascii-2QckEDL0.js","assets/cast-to-base-C58MPeqP.js","assets/cast-to-bytes32-DMQJ8GjS.js","assets/cast-to-check-sum-address-Cx8Iq7E5.js","assets/cast-to-dec-C_UxxHlO.js","assets/cast-to-fixed-point-D-oTrvwG.js","assets/cast-to-hex-sB1Oux0P.js","assets/cast-to-hexdata-BTiRU2Z-.js","assets/cast-to-int256-Cn9ZHuKd.js","assets/cast-to-rlp-BVFkpDbC.js","assets/cast-to-uint256-Baf07IE3.js","assets/cast-to-unit-BHT6rAk1.js","assets/cast-to-wei-wjt4rvab.js","assets/cast-tx-jwAtAgf_.js","assets/cast-upload-signature-C8jl9OM_.js","assets/cast-wallet-address-DLAPEzMs.js","assets/cast-wallet-import-B6hopvn7.js","assets/cast-wallet-list-D1wJTmzD.js","assets/cast-wallet-new-mnemonic-CLKo0Hwv.js","assets/cast-wallet-new-n4WMiqgY.js","assets/cast-wallet-sign-auth-Ha9HhTlz.js","assets/cast-wallet-sign-6Tch9ugB.js","assets/cast-wallet-vanity-kT-qF7xH.js","assets/cast-wallet-verify-CpDPcxy3.js","assets/cast-wallet-CfSfQq78.js","assets/chain-commands-DgvuUqXf.js","assets/conversion-commands-H74k2keJ.js","assets/ens-commands-6PL9prJG.js","assets/etherscan-commands-CewAt3K5.js","assets/general-commands-CBaIrL1S.js","assets/overview-Dn16VZwH.js","assets/transaction-commands-CvA6L3d5.js","assets/utility-commands-djlhjx1z.js","assets/wallet-commands-DvaTfTtl.js","assets/README-CxzjTI-v.js","assets/default-config-Csu-yt_v.js","assets/doc-generator-BHXq0-bU.js","assets/etherscan-DLtBaWT8.js","assets/formatter-0oIEISvG.js","assets/inline-test-config-ChEAJJwS.js","assets/linter-lF5Q3BMN.js","assets/overview-BSe8whY6.js","assets/project-BP5jLkM0.js","assets/solidity-compiler-CleE3q8O.js","assets/testing-PZ0kVD32.js","assets/differential-ffi-testing-DHfAOxu8.js","assets/fuzz-testing-BqetK0Ro.js","assets/invariant-testing-DtBeT8Hz.js","assets/overview-CLgIobcx.js","assets/table-testing-Bn5pb0D3.js","assets/gas-function-snapshots-CGyZD2u7.js","assets/gas-reports-BFstDH-O.js","assets/gas-section-snapshots-z5qAwNlS.js","assets/gas-snapshots-Dbbj5z80.js","assets/overview-WQNOddVC.js","assets/README-CyzlaiFo.js","assets/build-commands-D7P19DfK.js","assets/common-options-GfkPOrEd.js","assets/compiler-options-BCpvSNbq.js","assets/core-build-options-Dgi0sYgk.js","assets/project-options-BKric660.js","assets/deploy-commands-n0zDVeJq.js","assets/evm-options-CIv_ltnd.js","assets/executor-options-CW-TDtAD.js","assets/forge-bind-Daq4ywdu.js","assets/forge-build-Mln5RKiW.js","assets/watch-options-BnHHaP1Q.js","assets/forge-cache-clean-DzxW27I7.js","assets/forge-cache-ls-BQwmYFvF.js","assets/forge-cache-CmvCX3Kw.js","assets/forge-clean-ar4HYAjK.js","assets/forge-clone-Dy6nTaq2.js","assets/forge-completions-Bf1MzCYD.js","assets/forge-config-CH-4N-BR.js","assets/forge-coverage-D4_rnI4N.js","assets/forge-create-BsTqwbQD.js","assets/verifier-options-CpvTEhIE.js","assets/forge-doc-CCBmlRM_.js","assets/forge-flatten-CmxZ-6Pd.js","assets/forge-geiger-C6IDb56C.js","assets/forge-help-92WlvSO8.js","assets/forge-init-CJV6pX5m.js","assets/forge-inspect-GAxAV_4y.js","assets/forge-install-BKZyH6ej.js","assets/forge-lint-B0QSymET.js","assets/forge-remappings-D0WTf1Ge.js","assets/forge-remove-DWEHqDZv.js","assets/forge-script-BRhlpuO9.js","assets/retry-options-C3vuy_IN.js","assets/multi-wallet-options-BqzPGYEC.js","assets/multi-wallet-options-raw-Dgk7jeJz.js","assets/multi-wallet-options-keystore-Bt51C-Z_.js","assets/multi-wallet-options-hardware-CHv4J4zC.js","assets/multi-wallet-options-remote-BmXbdRkz.js","assets/forge-snapshot-B1Ewxgz-.js","assets/test-options-C0nj2loq.js","assets/forge-test-D3-1eRsi.js","assets/forge-tree-D69idRBX.js","assets/forge-update-Dyx6eoSy.js","assets/forge-upload-selectors-CsoyAtAK.js","assets/forge-verify-check-CfXhrxTv.js","assets/forge-verify-contract-z7_y3Cth.js","assets/general-commands-DoCrkbCw.js","assets/overview-CB0eHgN2.js","assets/project-commands-d2YQHd7I.js","assets/test-commands-cm3371U3.js","assets/utility-commands-D5MahUFc.js","assets/cheatcodes-RTfpa-Q5.js","assets/forge-std-D9tbbClt.js","assets/fork-testing-DRxNbPMB.js","assets/overview-Bw5cXeOG.js","assets/replay-testing-lHXYdTAN.js","assets/traces-CWHuxsGR.js","assets/writing-tests-QojKhHzZ.js","assets/commenting-D0qW4myY.js","assets/key-management-CixyyPP6.js","assets/security-zgh-TEiQ.js","assets/writing-contracts-CDv7MhCG.js","assets/writing-scripts-D-OlGY3I.js","assets/writing-tests-DwsVKwWf.js","assets/clone-a-verified-contract-3NXx_a9T.js","assets/creating-a-new-project-De-ExfW_.js","assets/dependencies-C80kxeXl.js","assets/project-layout-CupgnoaV.js","assets/soldeer-Bm_Rt05U.js","assets/accesses-Cmgyil3H.js","assets/active-fork-CvMywvet.js","assets/addr-DcWk6olJ.js","assets/allow-cheatcodes-CnvQW6Fj.js","assets/assertions-Dtij6WZp.js","assets/assume-no-revert-B-OOO6-P.js","assets/assume-BvwQG90v.js","assets/breakpoint-BvV2MB2C.js","assets/broadcast-DjYz-6zJ.js","assets/chain-id-CNopaoKd.js","assets/clear-mocked-calls-BOc4Mi5P.js","assets/coinbase-9pt1o6YU.js","assets/copy-storage-7Y-LGsQp.js","assets/create-fork-C0y22euq.js","assets/create-select-fork-D4LyLbuZ.js","assets/create-wallet-CUi6fQWn.js","assets/deal-DQjz96e1.js","assets/derive-key-C8FA7nvJ.js","assets/difficulty-CNHBsKgA.js","assets/env-address-DG5Hf_KJ.js","assets/env-bool-BgZ8zg0s.js","assets/env-bytes-Bfi3Jkzr.js","assets/env-bytes32-5hDNjjbz.js","assets/env-int-dtcLIkfy.js","assets/env-or-5xtT1u9z.js","assets/env-string-hnAV-LUu.js","assets/env-uint-BWc0ArgH.js","assets/environment-BJSikMF7.js","assets/etch-Ds3F2gjX.js","assets/expect-call-B35QNRCR.js","assets/expect-emit-BvBHqzgx.js","assets/expect-revert-CHmrgZ6X.js","assets/external-DfNC5ei6.js","assets/fee-D9B0-lRU.js","assets/ffi-CwhGnLIO.js","assets/forking-Clou0BmQ.js","assets/fs-CVXAH0MF.js","assets/fuzzer-C35dGGY8.js","assets/get-block-number-BXA0m1DE.js","assets/get-block-timestamp-Bun8Zuwd.js","assets/get-code-iO2GTv_G.js","assets/get-deployed-code-9H-CFuBe.js","assets/get-label-CXMC0PXV.js","assets/get-nonce-BWAoJ26g.js","assets/get-recorded-logs-BA1nIY_s.js","assets/is-context-DvduE3uK.js","assets/is-persistent-DxTW8-y9.js","assets/key-exists-json-B6FG_ODZ.js","assets/key-exists-toml-DgBBK2kz.js","assets/key-exists-CNsZBZv8.js","assets/label-C9b9y2Cr.js","assets/load-RBh_TRgP.js","assets/make-persistent-l4oa3KgW.js","assets/mock-call-revert-FO51qUWo.js","assets/mock-call-B743-VGo.js","assets/mock-calls-HJWTciz6.js","assets/mock-function-BIzE4Pl1.js","assets/overview-BGwfDfGi.js","assets/parse-address-5XAteDDN.js","assets/parse-bool-_Xb16ADf.js","assets/parse-bytes-DPlb_5Jw.js","assets/parse-bytes32-BpiWh1Vz.js","assets/parse-int-C5Rm4BiF.js","assets/parse-json-keys-6s7sh6k_.js","assets/parse-json-B3O0Y5ED.js","assets/parse-toml-keys-DkE6Xfc3.js","assets/parse-toml-DOu-M9VL.js","assets/parse-uint-Dwg8-ZSo.js","assets/pause-gas-metering-YYBVqfa1.js","assets/prank-C6JNGe2o.js","assets/prevrandao-MD9Vx1_-.js","assets/project-root-dU4veg-d.js","assets/prompt-D-BAPZfE.js","assets/read-callers-C3elB6s7.js","assets/record-logs-CNFNvobn.js","assets/record-B7WR-VNX.js","assets/remember-key-BKUG4urT.js","assets/reset-gas-metering-BbD02xhp.js","assets/resume-gas-metering-iaW4NxOR.js","assets/revoke-persistent-QQT-uiP3.js","assets/roll-fork-BaxJRgFv.js","assets/roll-Doymi_69.js","assets/rpc-ILl4MRg7.js","assets/select-fork-BkNnw_2F.js","assets/serialize-json-Ci73l_4A.js","assets/set-arbitrary-storage-jGmqaQR8.js","assets/set-env-DTkE37xF.js","assets/set-nonce-DxV8RfWD.js","assets/sign-delegation-CjqCxTVe.js","assets/sign-CTHc1t8t.js","assets/signing-7TVzniI1.js","assets/skip-BmbRI-oo.js","assets/sleep-BK_UORTh.js","assets/start-broadcast-D3XnQ7hC.js","assets/start-prank-nvJJnFbT.js","assets/start-state-diff-recording-BmlHyp_q.js","assets/state-snapshots-nD7JZ3SS.js","assets/stop-and-return-state-diff-Cc2rTwce.js","assets/stop-broadcast-BxsDMLGI.js","assets/stop-prank-Bp13tWWT.js","assets/store-c0oSNVBa.js","assets/to-string-I2U7a-m_.js","assets/transact-CEyZd9Pp.js","assets/tx-gas-price-BykAJJU2.js","assets/unix-time-DgEkCYSq.js","assets/utilities-Cxbufo1t.js","assets/warp-BmajZMKE.js","assets/write-json-Bbkmt2zb.js","assets/write-toml-BtPY98t6.js","assets/abs-ZXJeoE4m.js","assets/arithmeticError-B1Ax9-1m.js","assets/assertApproxEqAbs-CXoVUPnU.js","assets/assertApproxEqAbsDecimal-C9MjBdoD.js","assets/assertApproxEqRel-DQKHas0i.js","assets/assertApproxEqRelDecimal-B87KoNK-.js","assets/assertEq-CwVWdrAo.js","assets/assertEqDecimal-BRelRqbL.js","assets/assertFalse-BK5Q5o4c.js","assets/assertGe-Y8r2HPad.js","assets/assertGeDecimal-Z8mRC9wi.js","assets/assertGt-BhxydPBo.js","assets/assertGtDecimal-BhRBBXju.js","assets/assertLe-CRYdfFWu.js","assets/assertLeDecimal-B5Z6tV2f.js","assets/assertLt-CrLdfl5J.js","assets/assertLtDecimal-DVuMiWNG.js","assets/assertNotEq-BWWiKsqw.js","assets/assertNotEqDecimal-BPakzpnV.js","assets/assertTrue-CWxoRtGn.js","assets/assertionError-BRPBDu_H.js","assets/assume-no-precompiles-C9zTysY-.js","assets/assume-payable-CvIUHrKs.js","assets/bound-vi6sLnY4.js","assets/change-prank-_da6GZFN.js","assets/checked_write-CmwUGMSH.js","assets/compute-create-address-BR8qOURK.js","assets/console-log-DoAA0JoU.js","assets/deal-DtpYGkQ-.js","assets/delta-D_vvnJ-X.js","assets/deployCode-DMuY2xDB.js","assets/deployCodeTo-DaIikkpY.js","assets/depth-mPwod3qr.js","assets/derive-remember-key-CPSnlB_F.js","assets/divisionError-qRevoCSv.js","assets/enable_packed_slots-BaKsB0MV.js","assets/encodeStorageError-BalU0UCD.js","assets/enumConversionError-Or1emTqL.js","assets/fail-DbtbqpNg.js","assets/find-Wj1ISNdD.js","assets/hoax-CYmQSIgC.js","assets/indexOOBError-07HWLdJM.js","assets/make-addr-and-key-PYQAWjvX.js","assets/make-addr-DZ8Uz83u.js","assets/memOverflowError-BWDA2rw8.js","assets/noGasMetering-BH0X-8pI.js","assets/overview-Cte4KJiu.js","assets/percentDelta-lo0zY_tv.js","assets/popError-DCimdZZ7.js","assets/read-CYe3Vjje.js","assets/rewind-C5Rj-SCb.js","assets/script-utils-ByqwCSqu.js","assets/sig-OcWHcoiN.js","assets/skip-Bxr4s6ak.js","assets/startHoax-CEuBQXDq.js","assets/std-assertions-CCMbXKo-.js","assets/std-cheats-45Lw3CJX.js","assets/std-errors-BtIrE8Ro.js","assets/std-logs--Vm_6my0.js","assets/std-math-DcvnQroB.js","assets/std-storage-DVT4DlDW.js","assets/target-DRDGC7ky.js","assets/with_key-DAdA1pf2.js","assets/zeroVarError-C8YeAnaX.js"])))=>i.map(i=>d[i]);
function Mm(t,a){for(var s=0;s<a.length;s++){const o=a[s];if(typeof o!="string"&&!Array.isArray(o)){for(const c in o)if(c!=="default"&&!(c in t)){const A=Object.getOwnPropertyDescriptor(o,c);A&&Object.defineProperty(t,c,A.get?A:{enumerable:!0,get:()=>o[c]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))o(c);new MutationObserver(c=>{for(const A of c)if(A.type==="childList")for(const d of A.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function s(c){const A={};return c.integrity&&(A.integrity=c.integrity),c.referrerPolicy&&(A.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?A.credentials="include":c.crossOrigin==="anonymous"?A.credentials="omit":A.credentials="same-origin",A}function o(c){if(c.ep)return;c.ep=!0;const A=s(c);fetch(c.href,A)}})();function yi(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var KA={exports:{}},Gr={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Kf;function dF(){if(Kf)return Gr;Kf=1;var t=Symbol.for("react.transitional.element"),a=Symbol.for("react.fragment");function s(o,c,A){var d=null;if(A!==void 0&&(d=""+A),c.key!==void 0&&(d=""+c.key),"key"in c){A={};for(var u in c)u!=="key"&&(A[u]=c[u])}else A=c;return c=A.ref,{$$typeof:t,type:o,key:d,ref:c!==void 0?c:null,props:A}}return Gr.Fragment=a,Gr.jsx=s,Gr.jsxs=s,Gr}var Xf;function uF(){return Xf||(Xf=1,KA.exports=dF()),KA.exports}var C=uF();const fF=yi(C),pF=Mm({__proto__:null,default:fF},[C]);var XA={exports:{}},qr={},JA={exports:{}},ZA={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Jf;function mF(){return Jf||(Jf=1,function(t){function a(z,Y){var $=z.length;z.push(Y);e:for(;0<$;){var Z=$-1>>>1,P=z[Z];if(0<c(P,Y))z[Z]=Y,z[$]=P,$=Z;else break e}}function s(z){return z.length===0?null:z[0]}function o(z){if(z.length===0)return null;var Y=z[0],$=z.pop();if($!==Y){z[0]=$;e:for(var Z=0,P=z.length,Q=P>>>1;Z<Q;){var e0=2*(Z+1)-1,a0=z[e0],f0=e0+1,B0=z[f0];if(0>c(a0,$))f0<P&&0>c(B0,a0)?(z[Z]=B0,z[f0]=$,Z=f0):(z[Z]=a0,z[e0]=$,Z=e0);else if(f0<P&&0>c(B0,$))z[Z]=B0,z[f0]=$,Z=f0;else break e}}return Y}function c(z,Y){var $=z.sortIndex-Y.sortIndex;return $!==0?$:z.id-Y.id}if(t.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var A=performance;t.unstable_now=function(){return A.now()}}else{var d=Date,u=d.now();t.unstable_now=function(){return d.now()-u}}var h=[],m=[],y=1,g=null,F=3,E=!1,B=!1,v=!1,x=!1,_=typeof setTimeout=="function"?setTimeout:null,k=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;function O(z){for(var Y=s(m);Y!==null;){if(Y.callback===null)o(m);else if(Y.startTime<=z)o(m),Y.sortIndex=Y.expirationTime,a(h,Y);else break;Y=s(m)}}function R(z){if(v=!1,O(z),!B)if(s(h)!==null)B=!0,T||(T=!0,i0());else{var Y=s(m);Y!==null&&u0(R,Y.startTime-z)}}var T=!1,L=-1,j=5,q=-1;function r0(){return x?!0:!(t.unstable_now()-q<j)}function d0(){if(x=!1,T){var z=t.unstable_now();q=z;var Y=!0;try{e:{B=!1,v&&(v=!1,k(L),L=-1),E=!0;var $=F;try{t:{for(O(z),g=s(h);g!==null&&!(g.expirationTime>z&&r0());){var Z=g.callback;if(typeof Z=="function"){g.callback=null,F=g.priorityLevel;var P=Z(g.expirationTime<=z);if(z=t.unstable_now(),typeof P=="function"){g.callback=P,O(z),Y=!0;break t}g===s(h)&&o(h),O(z)}else o(h);g=s(h)}if(g!==null)Y=!0;else{var Q=s(m);Q!==null&&u0(R,Q.startTime-z),Y=!1}}break e}finally{g=null,F=$,E=!1}Y=void 0}}finally{Y?i0():T=!1}}}var i0;if(typeof w=="function")i0=function(){w(d0)};else if(typeof MessageChannel<"u"){var A0=new MessageChannel,W=A0.port2;A0.port1.onmessage=d0,i0=function(){W.postMessage(null)}}else i0=function(){_(d0,0)};function u0(z,Y){L=_(function(){z(t.unstable_now())},Y)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(z){z.callback=null},t.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):j=0<z?Math.floor(1e3/z):5},t.unstable_getCurrentPriorityLevel=function(){return F},t.unstable_next=function(z){switch(F){case 1:case 2:case 3:var Y=3;break;default:Y=F}var $=F;F=Y;try{return z()}finally{F=$}},t.unstable_requestPaint=function(){x=!0},t.unstable_runWithPriority=function(z,Y){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var $=F;F=z;try{return Y()}finally{F=$}},t.unstable_scheduleCallback=function(z,Y,$){var Z=t.unstable_now();switch(typeof $=="object"&&$!==null?($=$.delay,$=typeof $=="number"&&0<$?Z+$:Z):$=Z,z){case 1:var P=-1;break;case 2:P=250;break;case 5:P=1073741823;break;case 4:P=1e4;break;default:P=5e3}return P=$+P,z={id:y++,callback:Y,priorityLevel:z,startTime:$,expirationTime:P,sortIndex:-1},$>Z?(z.sortIndex=$,a(m,z),s(h)===null&&z===s(m)&&(v?(k(L),L=-1):v=!0,u0(R,$-Z))):(z.sortIndex=P,a(h,z),B||E||(B=!0,T||(T=!0,i0()))),z},t.unstable_shouldYield=r0,t.unstable_wrapCallback=function(z){var Y=F;return function(){var $=F;F=Y;try{return z.apply(this,arguments)}finally{F=$}}}}(ZA)),ZA}var Zf;function hF(){return Zf||(Zf=1,JA.exports=mF()),JA.exports}var $A={exports:{}},O0={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var $f;function gF(){if($f)return O0;$f=1;var t=Symbol.for("react.transitional.element"),a=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),c=Symbol.for("react.profiler"),A=Symbol.for("react.consumer"),d=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),g=Symbol.iterator;function F(P){return P===null||typeof P!="object"?null:(P=g&&P[g]||P["@@iterator"],typeof P=="function"?P:null)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B=Object.assign,v={};function x(P,Q,e0){this.props=P,this.context=Q,this.refs=v,this.updater=e0||E}x.prototype.isReactComponent={},x.prototype.setState=function(P,Q){if(typeof P!="object"&&typeof P!="function"&&P!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,P,Q,"setState")},x.prototype.forceUpdate=function(P){this.updater.enqueueForceUpdate(this,P,"forceUpdate")};function _(){}_.prototype=x.prototype;function k(P,Q,e0){this.props=P,this.context=Q,this.refs=v,this.updater=e0||E}var w=k.prototype=new _;w.constructor=k,B(w,x.prototype),w.isPureReactComponent=!0;var O=Array.isArray,R={H:null,A:null,T:null,S:null,V:null},T=Object.prototype.hasOwnProperty;function L(P,Q,e0,a0,f0,B0){return e0=B0.ref,{$$typeof:t,type:P,key:Q,ref:e0!==void 0?e0:null,props:B0}}function j(P,Q){return L(P.type,Q,void 0,void 0,void 0,P.props)}function q(P){return typeof P=="object"&&P!==null&&P.$$typeof===t}function r0(P){var Q={"=":"=0",":":"=2"};return"$"+P.replace(/[=:]/g,function(e0){return Q[e0]})}var d0=/\/+/g;function i0(P,Q){return typeof P=="object"&&P!==null&&P.key!=null?r0(""+P.key):Q.toString(36)}function A0(){}function W(P){switch(P.status){case"fulfilled":return P.value;case"rejected":throw P.reason;default:switch(typeof P.status=="string"?P.then(A0,A0):(P.status="pending",P.then(function(Q){P.status==="pending"&&(P.status="fulfilled",P.value=Q)},function(Q){P.status==="pending"&&(P.status="rejected",P.reason=Q)})),P.status){case"fulfilled":return P.value;case"rejected":throw P.reason}}throw P}function u0(P,Q,e0,a0,f0){var B0=typeof P;(B0==="undefined"||B0==="boolean")&&(P=null);var g0=!1;if(P===null)g0=!0;else switch(B0){case"bigint":case"string":case"number":g0=!0;break;case"object":switch(P.$$typeof){case t:case a:g0=!0;break;case y:return g0=P._init,u0(g0(P._payload),Q,e0,a0,f0)}}if(g0)return f0=f0(P),g0=a0===""?"."+i0(P,0):a0,O(f0)?(e0="",g0!=null&&(e0=g0.replace(d0,"$&/")+"/"),u0(f0,Q,e0,"",function(R0){return R0})):f0!=null&&(q(f0)&&(f0=j(f0,e0+(f0.key==null||P&&P.key===f0.key?"":(""+f0.key).replace(d0,"$&/")+"/")+g0)),Q.push(f0)),1;g0=0;var K0=a0===""?".":a0+":";if(O(P))for(var x0=0;x0<P.length;x0++)a0=P[x0],B0=K0+i0(a0,x0),g0+=u0(a0,Q,e0,B0,f0);else if(x0=F(P),typeof x0=="function")for(P=x0.call(P),x0=0;!(a0=P.next()).done;)a0=a0.value,B0=K0+i0(a0,x0++),g0+=u0(a0,Q,e0,B0,f0);else if(B0==="object"){if(typeof P.then=="function")return u0(W(P),Q,e0,a0,f0);throw Q=String(P),Error("Objects are not valid as a React child (found: "+(Q==="[object Object]"?"object with keys {"+Object.keys(P).join(", ")+"}":Q)+"). If you meant to render a collection of children, use an array instead.")}return g0}function z(P,Q,e0){if(P==null)return P;var a0=[],f0=0;return u0(P,a0,"","",function(B0){return Q.call(e0,B0,f0++)}),a0}function Y(P){if(P._status===-1){var Q=P._result;Q=Q(),Q.then(function(e0){(P._status===0||P._status===-1)&&(P._status=1,P._result=e0)},function(e0){(P._status===0||P._status===-1)&&(P._status=2,P._result=e0)}),P._status===-1&&(P._status=0,P._result=Q)}if(P._status===1)return P._result.default;throw P._result}var $=typeof reportError=="function"?reportError:function(P){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var Q=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof P=="object"&&P!==null&&typeof P.message=="string"?String(P.message):String(P),error:P});if(!window.dispatchEvent(Q))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",P);return}console.error(P)};function Z(){}return O0.Children={map:z,forEach:function(P,Q,e0){z(P,function(){Q.apply(this,arguments)},e0)},count:function(P){var Q=0;return z(P,function(){Q++}),Q},toArray:function(P){return z(P,function(Q){return Q})||[]},only:function(P){if(!q(P))throw Error("React.Children.only expected to receive a single React element child.");return P}},O0.Component=x,O0.Fragment=s,O0.Profiler=c,O0.PureComponent=k,O0.StrictMode=o,O0.Suspense=h,O0.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=R,O0.__COMPILER_RUNTIME={__proto__:null,c:function(P){return R.H.useMemoCache(P)}},O0.cache=function(P){return function(){return P.apply(null,arguments)}},O0.cloneElement=function(P,Q,e0){if(P==null)throw Error("The argument must be a React element, but you passed "+P+".");var a0=B({},P.props),f0=P.key,B0=void 0;if(Q!=null)for(g0 in Q.ref!==void 0&&(B0=void 0),Q.key!==void 0&&(f0=""+Q.key),Q)!T.call(Q,g0)||g0==="key"||g0==="__self"||g0==="__source"||g0==="ref"&&Q.ref===void 0||(a0[g0]=Q[g0]);var g0=arguments.length-2;if(g0===1)a0.children=e0;else if(1<g0){for(var K0=Array(g0),x0=0;x0<g0;x0++)K0[x0]=arguments[x0+2];a0.children=K0}return L(P.type,f0,void 0,void 0,B0,a0)},O0.createContext=function(P){return P={$$typeof:d,_currentValue:P,_currentValue2:P,_threadCount:0,Provider:null,Consumer:null},P.Provider=P,P.Consumer={$$typeof:A,_context:P},P},O0.createElement=function(P,Q,e0){var a0,f0={},B0=null;if(Q!=null)for(a0 in Q.key!==void 0&&(B0=""+Q.key),Q)T.call(Q,a0)&&a0!=="key"&&a0!=="__self"&&a0!=="__source"&&(f0[a0]=Q[a0]);var g0=arguments.length-2;if(g0===1)f0.children=e0;else if(1<g0){for(var K0=Array(g0),x0=0;x0<g0;x0++)K0[x0]=arguments[x0+2];f0.children=K0}if(P&&P.defaultProps)for(a0 in g0=P.defaultProps,g0)f0[a0]===void 0&&(f0[a0]=g0[a0]);return L(P,B0,void 0,void 0,null,f0)},O0.createRef=function(){return{current:null}},O0.forwardRef=function(P){return{$$typeof:u,render:P}},O0.isValidElement=q,O0.lazy=function(P){return{$$typeof:y,_payload:{_status:-1,_result:P},_init:Y}},O0.memo=function(P,Q){return{$$typeof:m,type:P,compare:Q===void 0?null:Q}},O0.startTransition=function(P){var Q=R.T,e0={};R.T=e0;try{var a0=P(),f0=R.S;f0!==null&&f0(e0,a0),typeof a0=="object"&&a0!==null&&typeof a0.then=="function"&&a0.then(Z,$)}catch(B0){$(B0)}finally{R.T=Q}},O0.unstable_useCacheRefresh=function(){return R.H.useCacheRefresh()},O0.use=function(P){return R.H.use(P)},O0.useActionState=function(P,Q,e0){return R.H.useActionState(P,Q,e0)},O0.useCallback=function(P,Q){return R.H.useCallback(P,Q)},O0.useContext=function(P){return R.H.useContext(P)},O0.useDebugValue=function(){},O0.useDeferredValue=function(P,Q){return R.H.useDeferredValue(P,Q)},O0.useEffect=function(P,Q,e0){var a0=R.H;if(typeof e0=="function")throw Error("useEffect CRUD overload is not enabled in this build of React.");return a0.useEffect(P,Q)},O0.useId=function(){return R.H.useId()},O0.useImperativeHandle=function(P,Q,e0){return R.H.useImperativeHandle(P,Q,e0)},O0.useInsertionEffect=function(P,Q){return R.H.useInsertionEffect(P,Q)},O0.useLayoutEffect=function(P,Q){return R.H.useLayoutEffect(P,Q)},O0.useMemo=function(P,Q){return R.H.useMemo(P,Q)},O0.useOptimistic=function(P,Q){return R.H.useOptimistic(P,Q)},O0.useReducer=function(P,Q,e0){return R.H.useReducer(P,Q,e0)},O0.useRef=function(P){return R.H.useRef(P)},O0.useState=function(P){return R.H.useState(P)},O0.useSyncExternalStore=function(P,Q,e0){return R.H.useSyncExternalStore(P,Q,e0)},O0.useTransition=function(){return R.H.useTransition()},O0.version="19.1.0",O0}var Qf;function ud(){return Qf||(Qf=1,$A.exports=gF()),$A.exports}var QA={exports:{}},N2={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ep;function CF(){if(ep)return N2;ep=1;var t=ud();function a(h){var m="https://react.dev/errors/"+h;if(1<arguments.length){m+="?args[]="+encodeURIComponent(arguments[1]);for(var y=2;y<arguments.length;y++)m+="&args[]="+encodeURIComponent(arguments[y])}return"Minified React error #"+h+"; visit "+m+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function s(){}var o={d:{f:s,r:function(){throw Error(a(522))},D:s,C:s,L:s,m:s,X:s,S:s,M:s},p:0,findDOMNode:null},c=Symbol.for("react.portal");function A(h,m,y){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:c,key:g==null?null:""+g,children:h,containerInfo:m,implementation:y}}var d=t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function u(h,m){if(h==="font")return"";if(typeof m=="string")return m==="use-credentials"?m:""}return N2.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=o,N2.createPortal=function(h,m){var y=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!m||m.nodeType!==1&&m.nodeType!==9&&m.nodeType!==11)throw Error(a(299));return A(h,m,null,y)},N2.flushSync=function(h){var m=d.T,y=o.p;try{if(d.T=null,o.p=2,h)return h()}finally{d.T=m,o.p=y,o.d.f()}},N2.preconnect=function(h,m){typeof h=="string"&&(m?(m=m.crossOrigin,m=typeof m=="string"?m==="use-credentials"?m:"":void 0):m=null,o.d.C(h,m))},N2.prefetchDNS=function(h){typeof h=="string"&&o.d.D(h)},N2.preinit=function(h,m){if(typeof h=="string"&&m&&typeof m.as=="string"){var y=m.as,g=u(y,m.crossOrigin),F=typeof m.integrity=="string"?m.integrity:void 0,E=typeof m.fetchPriority=="string"?m.fetchPriority:void 0;y==="style"?o.d.S(h,typeof m.precedence=="string"?m.precedence:void 0,{crossOrigin:g,integrity:F,fetchPriority:E}):y==="script"&&o.d.X(h,{crossOrigin:g,integrity:F,fetchPriority:E,nonce:typeof m.nonce=="string"?m.nonce:void 0})}},N2.preinitModule=function(h,m){if(typeof h=="string")if(typeof m=="object"&&m!==null){if(m.as==null||m.as==="script"){var y=u(m.as,m.crossOrigin);o.d.M(h,{crossOrigin:y,integrity:typeof m.integrity=="string"?m.integrity:void 0,nonce:typeof m.nonce=="string"?m.nonce:void 0})}}else m==null&&o.d.M(h)},N2.preload=function(h,m){if(typeof h=="string"&&typeof m=="object"&&m!==null&&typeof m.as=="string"){var y=m.as,g=u(y,m.crossOrigin);o.d.L(h,y,{crossOrigin:g,integrity:typeof m.integrity=="string"?m.integrity:void 0,nonce:typeof m.nonce=="string"?m.nonce:void 0,type:typeof m.type=="string"?m.type:void 0,fetchPriority:typeof m.fetchPriority=="string"?m.fetchPriority:void 0,referrerPolicy:typeof m.referrerPolicy=="string"?m.referrerPolicy:void 0,imageSrcSet:typeof m.imageSrcSet=="string"?m.imageSrcSet:void 0,imageSizes:typeof m.imageSizes=="string"?m.imageSizes:void 0,media:typeof m.media=="string"?m.media:void 0})}},N2.preloadModule=function(h,m){if(typeof h=="string")if(m){var y=u(m.as,m.crossOrigin);o.d.m(h,{as:typeof m.as=="string"&&m.as!=="script"?m.as:void 0,crossOrigin:y,integrity:typeof m.integrity=="string"?m.integrity:void 0})}else o.d.m(h)},N2.requestFormReset=function(h){o.d.r(h)},N2.unstable_batchedUpdates=function(h,m){return h(m)},N2.useFormState=function(h,m,y){return d.H.useFormState(h,m,y)},N2.useFormStatus=function(){return d.H.useHostTransitionStatus()},N2.version="19.1.0",N2}var tp;function Um(){if(tp)return QA.exports;tp=1;function t(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(a){console.error(a)}}return t(),QA.exports=CF(),QA.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var np;function yF(){if(np)return qr;np=1;var t=hF(),a=ud(),s=Um();function o(e){var n="https://react.dev/errors/"+e;if(1<arguments.length){n+="?args[]="+encodeURIComponent(arguments[1]);for(var r=2;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r])}return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function c(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function A(e){var n=e,r=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do n=e,(n.flags&4098)!==0&&(r=n.return),e=n.return;while(e)}return n.tag===3?r:null}function d(e){if(e.tag===13){var n=e.memoizedState;if(n===null&&(e=e.alternate,e!==null&&(n=e.memoizedState)),n!==null)return n.dehydrated}return null}function u(e){if(A(e)!==e)throw Error(o(188))}function h(e){var n=e.alternate;if(!n){if(n=A(e),n===null)throw Error(o(188));return n!==e?null:e}for(var r=e,i=n;;){var l=r.return;if(l===null)break;var p=l.alternate;if(p===null){if(i=l.return,i!==null){r=i;continue}break}if(l.child===p.child){for(p=l.child;p;){if(p===r)return u(l),e;if(p===i)return u(l),n;p=p.sibling}throw Error(o(188))}if(r.return!==i.return)r=l,i=p;else{for(var D=!1,S=l.child;S;){if(S===r){D=!0,r=l,i=p;break}if(S===i){D=!0,i=l,r=p;break}S=S.sibling}if(!D){for(S=p.child;S;){if(S===r){D=!0,r=p,i=l;break}if(S===i){D=!0,i=p,r=l;break}S=S.sibling}if(!D)throw Error(o(189))}}if(r.alternate!==i)throw Error(o(190))}if(r.tag!==3)throw Error(o(188));return r.stateNode.current===r?e:n}function m(e){var n=e.tag;if(n===5||n===26||n===27||n===6)return e;for(e=e.child;e!==null;){if(n=m(e),n!==null)return n;e=e.sibling}return null}var y=Object.assign,g=Symbol.for("react.element"),F=Symbol.for("react.transitional.element"),E=Symbol.for("react.portal"),B=Symbol.for("react.fragment"),v=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),k=Symbol.for("react.consumer"),w=Symbol.for("react.context"),O=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),j=Symbol.for("react.lazy"),q=Symbol.for("react.activity"),r0=Symbol.for("react.memo_cache_sentinel"),d0=Symbol.iterator;function i0(e){return e===null||typeof e!="object"?null:(e=d0&&e[d0]||e["@@iterator"],typeof e=="function"?e:null)}var A0=Symbol.for("react.client.reference");function W(e){if(e==null)return null;if(typeof e=="function")return e.$$typeof===A0?null:e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case B:return"Fragment";case x:return"Profiler";case v:return"StrictMode";case R:return"Suspense";case T:return"SuspenseList";case q:return"Activity"}if(typeof e=="object")switch(e.$$typeof){case E:return"Portal";case w:return(e.displayName||"Context")+".Provider";case k:return(e._context.displayName||"Context")+".Consumer";case O:var n=e.render;return e=e.displayName,e||(e=n.displayName||n.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case L:return n=e.displayName||null,n!==null?n:W(e.type)||"Memo";case j:n=e._payload,e=e._init;try{return W(e(n))}catch{}}return null}var u0=Array.isArray,z=a.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Y=s.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,$={pending:!1,data:null,method:null,action:null},Z=[],P=-1;function Q(e){return{current:e}}function e0(e){0>P||(e.current=Z[P],Z[P]=null,P--)}function a0(e,n){P++,Z[P]=e.current,e.current=n}var f0=Q(null),B0=Q(null),g0=Q(null),K0=Q(null);function x0(e,n){switch(a0(g0,n),a0(B0,e),a0(f0,null),n.nodeType){case 9:case 11:e=(e=n.documentElement)&&(e=e.namespaceURI)?Ef(e):0;break;default:if(e=n.tagName,n=n.namespaceURI)n=Ef(n),e=Bf(n,e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}e0(f0),a0(f0,e)}function R0(){e0(f0),e0(B0),e0(g0)}function G0(e){e.memoizedState!==null&&a0(K0,e);var n=f0.current,r=Bf(n,e.type);n!==r&&(a0(B0,e),a0(f0,r))}function u2(e){B0.current===e&&(e0(f0),e0(B0)),K0.current===e&&(e0(K0),zr._currentValue=$)}var R2=Object.prototype.hasOwnProperty,Se=t.unstable_scheduleCallback,q2=t.unstable_cancelCallback,Ga=t.unstable_shouldYield,qa=t.unstable_requestPaint,M2=t.unstable_now,Ha=t.unstable_getCurrentPriorityLevel,tt=t.unstable_ImmediatePriority,ys=t.unstable_UserBlockingPriority,jn=t.unstable_NormalPriority,nt=t.unstable_LowPriority,Bt=t.unstable_IdlePriority,bs=t.log,Ya=t.unstable_setDisableYieldValue,H2=null,A2=null;function ke(e){if(typeof bs=="function"&&Ya(e),A2&&typeof A2.setStrictMode=="function")try{A2.setStrictMode(H2,e)}catch{}}var w2=Math.clz32?Math.clz32:Fs,qi=Math.log,je=Math.LN2;function Fs(e){return e>>>=0,e===0?32:31-(qi(e)/je|0)|0}var sn=256,on=4194304;function at(e){var n=e&42;if(n!==0)return n;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194048;case 4194304:case 8388608:case 16777216:case 33554432:return e&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function cn(e,n,r){var i=e.pendingLanes;if(i===0)return 0;var l=0,p=e.suspendedLanes,D=e.pingedLanes;e=e.warmLanes;var S=i&134217727;return S!==0?(i=S&~p,i!==0?l=at(i):(D&=S,D!==0?l=at(D):r||(r=S&~e,r!==0&&(l=at(r))))):(S=i&~p,S!==0?l=at(S):D!==0?l=at(D):r||(r=i&~e,r!==0&&(l=at(r)))),l===0?0:n!==0&&n!==l&&(n&p)===0&&(p=l&-l,r=n&-n,p>=r||p===32&&(r&4194048)!==0)?n:l}function Ve(e,n){return(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&n)===0}function Es(e,n){switch(e){case 1:case 2:case 4:case 8:case 64:return n+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Vn(){var e=sn;return sn<<=1,(sn&4194048)===0&&(sn=256),e}function Bs(){var e=on;return on<<=1,(on&62914560)===0&&(on=4194304),e}function Gn(e){for(var n=[],r=0;31>r;r++)n.push(e);return n}function An(e,n){e.pendingLanes|=n,n!==268435456&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function vs(e,n,r,i,l,p){var D=e.pendingLanes;e.pendingLanes=r,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=r,e.entangledLanes&=r,e.errorRecoveryDisabledLanes&=r,e.shellSuspendCounter=0;var S=e.entanglements,I=e.expirationTimes,H=e.hiddenUpdates;for(r=D&~r;0<r;){var t0=31-w2(r),s0=1<<t0;S[t0]=0,I[t0]=-1;var K=H[t0];if(K!==null)for(H[t0]=null,t0=0;t0<K.length;t0++){var X=K[t0];X!==null&&(X.lane&=-536870913)}r&=~s0}i!==0&&ln(e,i,0),p!==0&&l===0&&e.tag!==0&&(e.suspendedLanes|=p&~(D&~n))}function ln(e,n,r){e.pendingLanes|=n,e.suspendedLanes&=~n;var i=31-w2(n);e.entangledLanes|=n,e.entanglements[i]=e.entanglements[i]|1073741824|r&4194090}function dn(e,n){var r=e.entangledLanes|=n;for(e=e.entanglements;r;){var i=31-w2(r),l=1<<i;l&n|e[i]&n&&(e[i]|=n),r&=~l}}function Wa(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function Ka(e){return e&=-e,2<e?8<e?(e&134217727)!==0?32:268435456:8:2}function N(){var e=Y.p;return e!==0?e:(e=window.event,e===void 0?32:Vf(e.type))}function V(e,n){var r=Y.p;try{return Y.p=e,n()}finally{Y.p=r}}var J=Math.random().toString(36).slice(2),o0="__reactFiber$"+J,l0="__reactProps$"+J,C0="__reactContainer$"+J,v0="__reactEvents$"+J,p0="__reactListeners$"+J,F0="__reactHandles$"+J,E0="__reactResources$"+J,w0="__reactMarker$"+J;function y0(e){delete e[o0],delete e[l0],delete e[v0],delete e[p0],delete e[F0]}function k0(e){var n=e[o0];if(n)return n;for(var r=e.parentNode;r;){if(n=r[C0]||r[o0]){if(r=n.alternate,n.child!==null||r!==null&&r.child!==null)for(e=_f(e);e!==null;){if(r=e[o0])return r;e=_f(e)}return n}e=r,r=e.parentNode}return null}function q0(e){if(e=e[o0]||e[C0]){var n=e.tag;if(n===5||n===6||n===13||n===26||n===27||n===3)return e}return null}function o2(e){var n=e.tag;if(n===5||n===26||n===27||n===6)return e.stateNode;throw Error(o(33))}function l2(e){var n=e[E0];return n||(n=e[E0]={hoistableStyles:new Map,hoistableScripts:new Map}),n}function H0(e){e[w0]=!0}var j0=new Set,vt={};function U2(e,n){de(e,n),de(e+"Capture",n)}function de(e,n){for(vt[e]=n,e=0;e<n.length;e++)j0.add(n[e])}var Y2=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),Dt={},xt={};function Xa(e){return R2.call(xt,e)?!0:R2.call(Dt,e)?!1:Y2.test(e)?xt[e]=!0:(Dt[e]=!0,!1)}function ue(e,n,r){if(Xa(n))if(r===null)e.removeAttribute(n);else{switch(typeof r){case"undefined":case"function":case"symbol":e.removeAttribute(n);return;case"boolean":var i=n.toLowerCase().slice(0,5);if(i!=="data-"&&i!=="aria-"){e.removeAttribute(n);return}}e.setAttribute(n,""+r)}}function rt(e,n,r){if(r===null)e.removeAttribute(n);else{switch(typeof r){case"undefined":case"function":case"symbol":case"boolean":e.removeAttribute(n);return}e.setAttribute(n,""+r)}}function L0(e,n,r,i){if(i===null)e.removeAttribute(r);else{switch(typeof i){case"undefined":case"function":case"symbol":case"boolean":e.removeAttribute(r);return}e.setAttributeNS(n,r,""+i)}}var P2,Te;function Oe(e){if(P2===void 0)try{throw Error()}catch(r){var n=r.stack.trim().match(/\n( *(at )?)/);P2=n&&n[1]||"",Te=-1<r.stack.indexOf(`
    at`)?" (<anonymous>)":-1<r.stack.indexOf("@")?"@unknown:0:0":""}return`
`+P2+e+Te}var un=!1;function i2(e,n){if(!e||un)return"";un=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var i={DetermineComponentFrameRoot:function(){try{if(n){var s0=function(){throw Error()};if(Object.defineProperty(s0.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(s0,[])}catch(X){var K=X}Reflect.construct(e,[],s0)}else{try{s0.call()}catch(X){K=X}e.call(s0.prototype)}}else{try{throw Error()}catch(X){K=X}(s0=e())&&typeof s0.catch=="function"&&s0.catch(function(){})}}catch(X){if(X&&K&&typeof X.stack=="string")return[X.stack,K.stack]}return[null,null]}};i.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var l=Object.getOwnPropertyDescriptor(i.DetermineComponentFrameRoot,"name");l&&l.configurable&&Object.defineProperty(i.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var p=i.DetermineComponentFrameRoot(),D=p[0],S=p[1];if(D&&S){var I=D.split(`
`),H=S.split(`
`);for(l=i=0;i<I.length&&!I[i].includes("DetermineComponentFrameRoot");)i++;for(;l<H.length&&!H[l].includes("DetermineComponentFrameRoot");)l++;if(i===I.length||l===H.length)for(i=I.length-1,l=H.length-1;1<=i&&0<=l&&I[i]!==H[l];)l--;for(;1<=i&&0<=l;i--,l--)if(I[i]!==H[l]){if(i!==1||l!==1)do if(i--,l--,0>l||I[i]!==H[l]){var t0=`
`+I[i].replace(" at new "," at ");return e.displayName&&t0.includes("<anonymous>")&&(t0=t0.replace("<anonymous>",e.displayName)),t0}while(1<=i&&0<=l);break}}}finally{un=!1,Error.prepareStackTrace=r}return(r=e?e.displayName||e.name:"")?Oe(r):""}function _t(e){switch(e.tag){case 26:case 27:case 5:return Oe(e.type);case 16:return Oe("Lazy");case 13:return Oe("Suspense");case 19:return Oe("SuspenseList");case 0:case 15:return i2(e.type,!1);case 11:return i2(e.type.render,!1);case 1:return i2(e.type,!0);case 31:return Oe("Activity");default:return""}}function Ja(e){try{var n="";do n+=_t(e),e=e.return;while(e);return n}catch(r){return`
Error generating stack: `+r.message+`
`+r.stack}}function W2(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function h6(e){var n=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function oy(e){var n=h6(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),i=""+e[n];if(!e.hasOwnProperty(n)&&typeof r<"u"&&typeof r.get=="function"&&typeof r.set=="function"){var l=r.get,p=r.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return l.call(this)},set:function(D){i=""+D,p.call(this,D)}}),Object.defineProperty(e,n,{enumerable:r.enumerable}),{getValue:function(){return i},setValue:function(D){i=""+D},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}function Ds(e){e._valueTracker||(e._valueTracker=oy(e))}function g6(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var r=n.getValue(),i="";return e&&(i=h6(e)?e.checked?"true":"false":e.value),e=i,e!==r?(n.setValue(e),!0):!1}function xs(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}var iy=/[\n"\\]/g;function fe(e){return e.replace(iy,function(n){return"\\"+n.charCodeAt(0).toString(16)+" "})}function Hi(e,n,r,i,l,p,D,S){e.name="",D!=null&&typeof D!="function"&&typeof D!="symbol"&&typeof D!="boolean"?e.type=D:e.removeAttribute("type"),n!=null?D==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+W2(n)):e.value!==""+W2(n)&&(e.value=""+W2(n)):D!=="submit"&&D!=="reset"||e.removeAttribute("value"),n!=null?Yi(e,D,W2(n)):r!=null?Yi(e,D,W2(r)):i!=null&&e.removeAttribute("value"),l==null&&p!=null&&(e.defaultChecked=!!p),l!=null&&(e.checked=l&&typeof l!="function"&&typeof l!="symbol"),S!=null&&typeof S!="function"&&typeof S!="symbol"&&typeof S!="boolean"?e.name=""+W2(S):e.removeAttribute("name")}function C6(e,n,r,i,l,p,D,S){if(p!=null&&typeof p!="function"&&typeof p!="symbol"&&typeof p!="boolean"&&(e.type=p),n!=null||r!=null){if(!(p!=="submit"&&p!=="reset"||n!=null))return;r=r!=null?""+W2(r):"",n=n!=null?""+W2(n):r,S||n===e.value||(e.value=n),e.defaultValue=n}i=i??l,i=typeof i!="function"&&typeof i!="symbol"&&!!i,e.checked=S?e.checked:!!i,e.defaultChecked=!!i,D!=null&&typeof D!="function"&&typeof D!="symbol"&&typeof D!="boolean"&&(e.name=D)}function Yi(e,n,r){n==="number"&&xs(e.ownerDocument)===e||e.defaultValue===""+r||(e.defaultValue=""+r)}function qn(e,n,r,i){if(e=e.options,n){n={};for(var l=0;l<r.length;l++)n["$"+r[l]]=!0;for(r=0;r<e.length;r++)l=n.hasOwnProperty("$"+e[r].value),e[r].selected!==l&&(e[r].selected=l),l&&i&&(e[r].defaultSelected=!0)}else{for(r=""+W2(r),n=null,l=0;l<e.length;l++){if(e[l].value===r){e[l].selected=!0,i&&(e[l].defaultSelected=!0);return}n!==null||e[l].disabled||(n=e[l])}n!==null&&(n.selected=!0)}}function y6(e,n,r){if(n!=null&&(n=""+W2(n),n!==e.value&&(e.value=n),r==null)){e.defaultValue!==n&&(e.defaultValue=n);return}e.defaultValue=r!=null?""+W2(r):""}function b6(e,n,r,i){if(n==null){if(i!=null){if(r!=null)throw Error(o(92));if(u0(i)){if(1<i.length)throw Error(o(93));i=i[0]}r=i}r==null&&(r=""),n=r}r=W2(n),e.defaultValue=r,i=e.textContent,i===r&&i!==""&&i!==null&&(e.value=i)}function Hn(e,n){if(n){var r=e.firstChild;if(r&&r===e.lastChild&&r.nodeType===3){r.nodeValue=n;return}}e.textContent=n}var cy=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function F6(e,n,r){var i=n.indexOf("--")===0;r==null||typeof r=="boolean"||r===""?i?e.setProperty(n,""):n==="float"?e.cssFloat="":e[n]="":i?e.setProperty(n,r):typeof r!="number"||r===0||cy.has(n)?n==="float"?e.cssFloat=r:e[n]=(""+r).trim():e[n]=r+"px"}function E6(e,n,r){if(n!=null&&typeof n!="object")throw Error(o(62));if(e=e.style,r!=null){for(var i in r)!r.hasOwnProperty(i)||n!=null&&n.hasOwnProperty(i)||(i.indexOf("--")===0?e.setProperty(i,""):i==="float"?e.cssFloat="":e[i]="");for(var l in n)i=n[l],n.hasOwnProperty(l)&&r[l]!==i&&F6(e,l,i)}else for(var p in n)n.hasOwnProperty(p)&&F6(e,p,n[p])}function Wi(e){if(e.indexOf("-")===-1)return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ay=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),ly=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function _s(e){return ly.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var Ki=null;function Xi(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Yn=null,Wn=null;function B6(e){var n=q0(e);if(n&&(e=n.stateNode)){var r=e[l0]||null;e:switch(e=n.stateNode,n.type){case"input":if(Hi(e,r.value,r.defaultValue,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name),n=r.name,r.type==="radio"&&n!=null){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll('input[name="'+fe(""+n)+'"][type="radio"]'),n=0;n<r.length;n++){var i=r[n];if(i!==e&&i.form===e.form){var l=i[l0]||null;if(!l)throw Error(o(90));Hi(i,l.value,l.defaultValue,l.defaultValue,l.checked,l.defaultChecked,l.type,l.name)}}for(n=0;n<r.length;n++)i=r[n],i.form===e.form&&g6(i)}break e;case"textarea":y6(e,r.value,r.defaultValue);break e;case"select":n=r.value,n!=null&&qn(e,!!r.multiple,n,!1)}}}var Ji=!1;function v6(e,n,r){if(Ji)return e(n,r);Ji=!0;try{var i=e(n);return i}finally{if(Ji=!1,(Yn!==null||Wn!==null)&&(fo(),Yn&&(n=Yn,e=Wn,Wn=Yn=null,B6(n),e)))for(n=0;n<e.length;n++)B6(e[n])}}function Za(e,n){var r=e.stateNode;if(r===null)return null;var i=r[l0]||null;if(i===null)return null;r=i[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(e=e.type,i=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!i;break e;default:e=!1}if(e)return null;if(r&&typeof r!="function")throw Error(o(231,n,typeof r));return r}var st=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Zi=!1;if(st)try{var $a={};Object.defineProperty($a,"passive",{get:function(){Zi=!0}}),window.addEventListener("test",$a,$a),window.removeEventListener("test",$a,$a)}catch{Zi=!1}var wt=null,$i=null,ws=null;function D6(){if(ws)return ws;var e,n=$i,r=n.length,i,l="value"in wt?wt.value:wt.textContent,p=l.length;for(e=0;e<r&&n[e]===l[e];e++);var D=r-e;for(i=1;i<=D&&n[r-i]===l[p-i];i++);return ws=l.slice(e,1<i?1-i:void 0)}function Ss(e){var n=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&n===13&&(e=13)):e=n,e===10&&(e=13),32<=e||e===13?e:0}function ks(){return!0}function x6(){return!1}function K2(e){function n(r,i,l,p,D){this._reactName=r,this._targetInst=l,this.type=i,this.nativeEvent=p,this.target=D,this.currentTarget=null;for(var S in e)e.hasOwnProperty(S)&&(r=e[S],this[S]=r?r(p):p[S]);return this.isDefaultPrevented=(p.defaultPrevented!=null?p.defaultPrevented:p.returnValue===!1)?ks:x6,this.isPropagationStopped=x6,this}return y(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var r=this.nativeEvent;r&&(r.preventDefault?r.preventDefault():typeof r.returnValue!="unknown"&&(r.returnValue=!1),this.isDefaultPrevented=ks)},stopPropagation:function(){var r=this.nativeEvent;r&&(r.stopPropagation?r.stopPropagation():typeof r.cancelBubble!="unknown"&&(r.cancelBubble=!0),this.isPropagationStopped=ks)},persist:function(){},isPersistent:ks}),n}var fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Ts=K2(fn),Qa=y({},fn,{view:0,detail:0}),dy=K2(Qa),Qi,ec,er,Os=y({},Qa,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:nc,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==er&&(er&&e.type==="mousemove"?(Qi=e.screenX-er.screenX,ec=e.screenY-er.screenY):ec=Qi=0,er=e),Qi)},movementY:function(e){return"movementY"in e?e.movementY:ec}}),_6=K2(Os),uy=y({},Os,{dataTransfer:0}),fy=K2(uy),py=y({},Qa,{relatedTarget:0}),tc=K2(py),my=y({},fn,{animationName:0,elapsedTime:0,pseudoElement:0}),hy=K2(my),gy=y({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Cy=K2(gy),yy=y({},fn,{data:0}),w6=K2(yy),by={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Fy={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ey={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function By(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):(e=Ey[e])?!!n[e]:!1}function nc(){return By}var vy=y({},Qa,{key:function(e){if(e.key){var n=by[e.key]||e.key;if(n!=="Unidentified")return n}return e.type==="keypress"?(e=Ss(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?Fy[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:nc,charCode:function(e){return e.type==="keypress"?Ss(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Ss(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Dy=K2(vy),xy=y({},Os,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),S6=K2(xy),_y=y({},Qa,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:nc}),wy=K2(_y),Sy=y({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0}),ky=K2(Sy),Ty=y({},Os,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Oy=K2(Ty),Ry=y({},fn,{newState:0,oldState:0}),Py=K2(Ry),Iy=[9,13,27,32],ac=st&&"CompositionEvent"in window,tr=null;st&&"documentMode"in document&&(tr=document.documentMode);var Ny=st&&"TextEvent"in window&&!tr,k6=st&&(!ac||tr&&8<tr&&11>=tr),T6=" ",O6=!1;function R6(e,n){switch(e){case"keyup":return Iy.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function P6(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var Kn=!1;function Ly(e,n){switch(e){case"compositionend":return P6(n);case"keypress":return n.which!==32?null:(O6=!0,T6);case"textInput":return e=n.data,e===T6&&O6?null:e;default:return null}}function zy(e,n){if(Kn)return e==="compositionend"||!ac&&R6(e,n)?(e=D6(),ws=$i=wt=null,Kn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return k6&&n.locale!=="ko"?null:n.data;default:return null}}var My={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function I6(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n==="input"?!!My[e.type]:n==="textarea"}function N6(e,n,r,i){Yn?Wn?Wn.push(i):Wn=[i]:Yn=i,n=yo(n,"onChange"),0<n.length&&(r=new Ts("onChange","change",null,r,i),e.push({event:r,listeners:n}))}var nr=null,ar=null;function Uy(e){gf(e,0)}function Rs(e){var n=o2(e);if(g6(n))return e}function L6(e,n){if(e==="change")return n}var z6=!1;if(st){var rc;if(st){var sc="oninput"in document;if(!sc){var M6=document.createElement("div");M6.setAttribute("oninput","return;"),sc=typeof M6.oninput=="function"}rc=sc}else rc=!1;z6=rc&&(!document.documentMode||9<document.documentMode)}function U6(){nr&&(nr.detachEvent("onpropertychange",j6),ar=nr=null)}function j6(e){if(e.propertyName==="value"&&Rs(ar)){var n=[];N6(n,ar,e,Xi(e)),v6(Uy,n)}}function jy(e,n,r){e==="focusin"?(U6(),nr=n,ar=r,nr.attachEvent("onpropertychange",j6)):e==="focusout"&&U6()}function Vy(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Rs(ar)}function Gy(e,n){if(e==="click")return Rs(n)}function qy(e,n){if(e==="input"||e==="change")return Rs(n)}function Hy(e,n){return e===n&&(e!==0||1/e===1/n)||e!==e&&n!==n}var $2=typeof Object.is=="function"?Object.is:Hy;function rr(e,n){if($2(e,n))return!0;if(typeof e!="object"||e===null||typeof n!="object"||n===null)return!1;var r=Object.keys(e),i=Object.keys(n);if(r.length!==i.length)return!1;for(i=0;i<r.length;i++){var l=r[i];if(!R2.call(n,l)||!$2(e[l],n[l]))return!1}return!0}function V6(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function G6(e,n){var r=V6(e);e=0;for(var i;r;){if(r.nodeType===3){if(i=e+r.textContent.length,e<=n&&i>=n)return{node:r,offset:n-e};e=i}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=V6(r)}}function q6(e,n){return e&&n?e===n?!0:e&&e.nodeType===3?!1:n&&n.nodeType===3?q6(e,n.parentNode):"contains"in e?e.contains(n):e.compareDocumentPosition?!!(e.compareDocumentPosition(n)&16):!1:!1}function H6(e){e=e!=null&&e.ownerDocument!=null&&e.ownerDocument.defaultView!=null?e.ownerDocument.defaultView:window;for(var n=xs(e.document);n instanceof e.HTMLIFrameElement;){try{var r=typeof n.contentWindow.location.href=="string"}catch{r=!1}if(r)e=n.contentWindow;else break;n=xs(e.document)}return n}function oc(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&(n==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||n==="textarea"||e.contentEditable==="true")}var Yy=st&&"documentMode"in document&&11>=document.documentMode,Xn=null,ic=null,sr=null,cc=!1;function Y6(e,n,r){var i=r.window===r?r.document:r.nodeType===9?r:r.ownerDocument;cc||Xn==null||Xn!==xs(i)||(i=Xn,"selectionStart"in i&&oc(i)?i={start:i.selectionStart,end:i.selectionEnd}:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection(),i={anchorNode:i.anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset}),sr&&rr(sr,i)||(sr=i,i=yo(ic,"onSelect"),0<i.length&&(n=new Ts("onSelect","select",null,n,r),e.push({event:n,listeners:i}),n.target=Xn)))}function pn(e,n){var r={};return r[e.toLowerCase()]=n.toLowerCase(),r["Webkit"+e]="webkit"+n,r["Moz"+e]="moz"+n,r}var Jn={animationend:pn("Animation","AnimationEnd"),animationiteration:pn("Animation","AnimationIteration"),animationstart:pn("Animation","AnimationStart"),transitionrun:pn("Transition","TransitionRun"),transitionstart:pn("Transition","TransitionStart"),transitioncancel:pn("Transition","TransitionCancel"),transitionend:pn("Transition","TransitionEnd")},Ac={},W6={};st&&(W6=document.createElement("div").style,"AnimationEvent"in window||(delete Jn.animationend.animation,delete Jn.animationiteration.animation,delete Jn.animationstart.animation),"TransitionEvent"in window||delete Jn.transitionend.transition);function mn(e){if(Ac[e])return Ac[e];if(!Jn[e])return e;var n=Jn[e],r;for(r in n)if(n.hasOwnProperty(r)&&r in W6)return Ac[e]=n[r];return e}var K6=mn("animationend"),X6=mn("animationiteration"),J6=mn("animationstart"),Wy=mn("transitionrun"),Ky=mn("transitionstart"),Xy=mn("transitioncancel"),Z6=mn("transitionend"),$6=new Map,lc="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");lc.push("scrollEnd");function Re(e,n){$6.set(e,n),U2(n,[e])}var Q6=new WeakMap;function pe(e,n){if(typeof e=="object"&&e!==null){var r=Q6.get(e);return r!==void 0?r:(n={value:e,source:n,stack:Ja(n)},Q6.set(e,n),n)}return{value:e,source:n,stack:Ja(n)}}var me=[],Zn=0,dc=0;function Ps(){for(var e=Zn,n=dc=Zn=0;n<e;){var r=me[n];me[n++]=null;var i=me[n];me[n++]=null;var l=me[n];me[n++]=null;var p=me[n];if(me[n++]=null,i!==null&&l!==null){var D=i.pending;D===null?l.next=l:(l.next=D.next,D.next=l),i.pending=l}p!==0&&eu(r,l,p)}}function Is(e,n,r,i){me[Zn++]=e,me[Zn++]=n,me[Zn++]=r,me[Zn++]=i,dc|=i,e.lanes|=i,e=e.alternate,e!==null&&(e.lanes|=i)}function uc(e,n,r,i){return Is(e,n,r,i),Ns(e)}function $n(e,n){return Is(e,null,null,n),Ns(e)}function eu(e,n,r){e.lanes|=r;var i=e.alternate;i!==null&&(i.lanes|=r);for(var l=!1,p=e.return;p!==null;)p.childLanes|=r,i=p.alternate,i!==null&&(i.childLanes|=r),p.tag===22&&(e=p.stateNode,e===null||e._visibility&1||(l=!0)),e=p,p=p.return;return e.tag===3?(p=e.stateNode,l&&n!==null&&(l=31-w2(r),e=p.hiddenUpdates,i=e[l],i===null?e[l]=[n]:i.push(n),n.lane=r|536870912),p):null}function Ns(e){if(50<kr)throw kr=0,CA=null,Error(o(185));for(var n=e.return;n!==null;)e=n,n=e.return;return e.tag===3?e.stateNode:null}var Qn={};function Jy(e,n,r,i){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Q2(e,n,r,i){return new Jy(e,n,r,i)}function fc(e){return e=e.prototype,!(!e||!e.isReactComponent)}function ot(e,n){var r=e.alternate;return r===null?(r=Q2(e.tag,n,e.key,e.mode),r.elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=n,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=e.flags&65011712,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,n=e.dependencies,r.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r.refCleanup=e.refCleanup,r}function tu(e,n){e.flags&=65011714;var r=e.alternate;return r===null?(e.childLanes=0,e.lanes=n,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=r.childLanes,e.lanes=r.lanes,e.child=r.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=r.memoizedProps,e.memoizedState=r.memoizedState,e.updateQueue=r.updateQueue,e.type=r.type,n=r.dependencies,e.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext}),e}function Ls(e,n,r,i,l,p){var D=0;if(i=e,typeof e=="function")fc(e)&&(D=1);else if(typeof e=="string")D=$b(e,r,f0.current)?26:e==="html"||e==="head"||e==="body"?27:5;else e:switch(e){case q:return e=Q2(31,r,n,l),e.elementType=q,e.lanes=p,e;case B:return hn(r.children,l,p,n);case v:D=8,l|=24;break;case x:return e=Q2(12,r,n,l|2),e.elementType=x,e.lanes=p,e;case R:return e=Q2(13,r,n,l),e.elementType=R,e.lanes=p,e;case T:return e=Q2(19,r,n,l),e.elementType=T,e.lanes=p,e;default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case _:case w:D=10;break e;case k:D=9;break e;case O:D=11;break e;case L:D=14;break e;case j:D=16,i=null;break e}D=29,r=Error(o(130,e===null?"null":typeof e,"")),i=null}return n=Q2(D,r,n,l),n.elementType=e,n.type=i,n.lanes=p,n}function hn(e,n,r,i){return e=Q2(7,e,i,n),e.lanes=r,e}function pc(e,n,r){return e=Q2(6,e,null,n),e.lanes=r,e}function mc(e,n,r){return n=Q2(4,e.children!==null?e.children:[],e.key,n),n.lanes=r,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}var ea=[],ta=0,zs=null,Ms=0,he=[],ge=0,gn=null,it=1,ct="";function Cn(e,n){ea[ta++]=Ms,ea[ta++]=zs,zs=e,Ms=n}function nu(e,n,r){he[ge++]=it,he[ge++]=ct,he[ge++]=gn,gn=e;var i=it;e=ct;var l=32-w2(i)-1;i&=~(1<<l),r+=1;var p=32-w2(n)+l;if(30<p){var D=l-l%5;p=(i&(1<<D)-1).toString(32),i>>=D,l-=D,it=1<<32-w2(n)+l|r<<l|i,ct=p+e}else it=1<<p|r<<l|i,ct=e}function hc(e){e.return!==null&&(Cn(e,1),nu(e,1,0))}function gc(e){for(;e===zs;)zs=ea[--ta],ea[ta]=null,Ms=ea[--ta],ea[ta]=null;for(;e===gn;)gn=he[--ge],he[ge]=null,ct=he[--ge],he[ge]=null,it=he[--ge],he[ge]=null}var j2=null,f2=null,W0=!1,yn=null,Ge=!1,Cc=Error(o(519));function bn(e){var n=Error(o(418,""));throw cr(pe(n,e)),Cc}function au(e){var n=e.stateNode,r=e.type,i=e.memoizedProps;switch(n[o0]=e,n[l0]=i,r){case"dialog":U0("cancel",n),U0("close",n);break;case"iframe":case"object":case"embed":U0("load",n);break;case"video":case"audio":for(r=0;r<Or.length;r++)U0(Or[r],n);break;case"source":U0("error",n);break;case"img":case"image":case"link":U0("error",n),U0("load",n);break;case"details":U0("toggle",n);break;case"input":U0("invalid",n),C6(n,i.value,i.defaultValue,i.checked,i.defaultChecked,i.type,i.name,!0),Ds(n);break;case"select":U0("invalid",n);break;case"textarea":U0("invalid",n),b6(n,i.value,i.defaultValue,i.children),Ds(n)}r=i.children,typeof r!="string"&&typeof r!="number"&&typeof r!="bigint"||n.textContent===""+r||i.suppressHydrationWarning===!0||Ff(n.textContent,r)?(i.popover!=null&&(U0("beforetoggle",n),U0("toggle",n)),i.onScroll!=null&&U0("scroll",n),i.onScrollEnd!=null&&U0("scrollend",n),i.onClick!=null&&(n.onclick=bo),n=!0):n=!1,n||bn(e)}function ru(e){for(j2=e.return;j2;)switch(j2.tag){case 5:case 13:Ge=!1;return;case 27:case 3:Ge=!0;return;default:j2=j2.return}}function or(e){if(e!==j2)return!1;if(!W0)return ru(e),W0=!0,!1;var n=e.tag,r;if((r=n!==3&&n!==27)&&((r=n===5)&&(r=e.type,r=!(r!=="form"&&r!=="button")||PA(e.type,e.memoizedProps)),r=!r),r&&f2&&bn(e),ru(e),n===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(e.nodeType===8)if(r=e.data,r==="/$"){if(n===0){f2=Ie(e.nextSibling);break e}n--}else r!=="$"&&r!=="$!"&&r!=="$?"||n++;e=e.nextSibling}f2=null}}else n===27?(n=f2,qt(e.type)?(e=zA,zA=null,f2=e):f2=n):f2=j2?Ie(e.stateNode.nextSibling):null;return!0}function ir(){f2=j2=null,W0=!1}function su(){var e=yn;return e!==null&&(Z2===null?Z2=e:Z2.push.apply(Z2,e),yn=null),e}function cr(e){yn===null?yn=[e]:yn.push(e)}var yc=Q(null),Fn=null,At=null;function St(e,n,r){a0(yc,n._currentValue),n._currentValue=r}function lt(e){e._currentValue=yc.current,e0(yc)}function bc(e,n,r){for(;e!==null;){var i=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,i!==null&&(i.childLanes|=n)):i!==null&&(i.childLanes&n)!==n&&(i.childLanes|=n),e===r)break;e=e.return}}function Fc(e,n,r,i){var l=e.child;for(l!==null&&(l.return=e);l!==null;){var p=l.dependencies;if(p!==null){var D=l.child;p=p.firstContext;e:for(;p!==null;){var S=p;p=l;for(var I=0;I<n.length;I++)if(S.context===n[I]){p.lanes|=r,S=p.alternate,S!==null&&(S.lanes|=r),bc(p.return,r,e),i||(D=null);break e}p=S.next}}else if(l.tag===18){if(D=l.return,D===null)throw Error(o(341));D.lanes|=r,p=D.alternate,p!==null&&(p.lanes|=r),bc(D,r,e),D=null}else D=l.child;if(D!==null)D.return=l;else for(D=l;D!==null;){if(D===e){D=null;break}if(l=D.sibling,l!==null){l.return=D.return,D=l;break}D=D.return}l=D}}function Ar(e,n,r,i){e=null;for(var l=n,p=!1;l!==null;){if(!p){if((l.flags&524288)!==0)p=!0;else if((l.flags&262144)!==0)break}if(l.tag===10){var D=l.alternate;if(D===null)throw Error(o(387));if(D=D.memoizedProps,D!==null){var S=l.type;$2(l.pendingProps.value,D.value)||(e!==null?e.push(S):e=[S])}}else if(l===K0.current){if(D=l.alternate,D===null)throw Error(o(387));D.memoizedState.memoizedState!==l.memoizedState.memoizedState&&(e!==null?e.push(zr):e=[zr])}l=l.return}e!==null&&Fc(n,e,r,i),n.flags|=262144}function Us(e){for(e=e.firstContext;e!==null;){if(!$2(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function En(e){Fn=e,At=null,e=e.dependencies,e!==null&&(e.firstContext=null)}function I2(e){return ou(Fn,e)}function js(e,n){return Fn===null&&En(e),ou(e,n)}function ou(e,n){var r=n._currentValue;if(n={context:n,memoizedValue:r,next:null},At===null){if(e===null)throw Error(o(308));At=n,e.dependencies={lanes:0,firstContext:n},e.flags|=524288}else At=At.next=n;return r}var Zy=typeof AbortController<"u"?AbortController:function(){var e=[],n=this.signal={aborted:!1,addEventListener:function(r,i){e.push(i)}};this.abort=function(){n.aborted=!0,e.forEach(function(r){return r()})}},$y=t.unstable_scheduleCallback,Qy=t.unstable_NormalPriority,E2={$$typeof:w,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Ec(){return{controller:new Zy,data:new Map,refCount:0}}function lr(e){e.refCount--,e.refCount===0&&$y(Qy,function(){e.controller.abort()})}var dr=null,Bc=0,na=0,aa=null;function eb(e,n){if(dr===null){var r=dr=[];Bc=0,na=DA(),aa={status:"pending",value:void 0,then:function(i){r.push(i)}}}return Bc++,n.then(iu,iu),n}function iu(){if(--Bc===0&&dr!==null){aa!==null&&(aa.status="fulfilled");var e=dr;dr=null,na=0,aa=null;for(var n=0;n<e.length;n++)(0,e[n])()}}function tb(e,n){var r=[],i={status:"pending",value:null,reason:null,then:function(l){r.push(l)}};return e.then(function(){i.status="fulfilled",i.value=n;for(var l=0;l<r.length;l++)(0,r[l])(n)},function(l){for(i.status="rejected",i.reason=l,l=0;l<r.length;l++)(0,r[l])(void 0)}),i}var cu=z.S;z.S=function(e,n){typeof n=="object"&&n!==null&&typeof n.then=="function"&&eb(e,n),cu!==null&&cu(e,n)};var Bn=Q(null);function vc(){var e=Bn.current;return e!==null?e:t2.pooledCache}function Vs(e,n){n===null?a0(Bn,Bn.current):a0(Bn,n.pool)}function Au(){var e=vc();return e===null?null:{parent:E2._currentValue,pool:e}}var ur=Error(o(460)),lu=Error(o(474)),Gs=Error(o(542)),Dc={then:function(){}};function du(e){return e=e.status,e==="fulfilled"||e==="rejected"}function qs(){}function uu(e,n,r){switch(r=e[r],r===void 0?e.push(n):r!==n&&(n.then(qs,qs),n=r),n.status){case"fulfilled":return n.value;case"rejected":throw e=n.reason,pu(e),e;default:if(typeof n.status=="string")n.then(qs,qs);else{if(e=t2,e!==null&&100<e.shellSuspendCounter)throw Error(o(482));e=n,e.status="pending",e.then(function(i){if(n.status==="pending"){var l=n;l.status="fulfilled",l.value=i}},function(i){if(n.status==="pending"){var l=n;l.status="rejected",l.reason=i}})}switch(n.status){case"fulfilled":return n.value;case"rejected":throw e=n.reason,pu(e),e}throw fr=n,ur}}var fr=null;function fu(){if(fr===null)throw Error(o(459));var e=fr;return fr=null,e}function pu(e){if(e===ur||e===Gs)throw Error(o(483))}var kt=!1;function xc(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function _c(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function Tt(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function Ot(e,n,r){var i=e.updateQueue;if(i===null)return null;if(i=i.shared,(X0&2)!==0){var l=i.pending;return l===null?n.next=n:(n.next=l.next,l.next=n),i.pending=n,n=Ns(e),eu(e,null,r),n}return Is(e,i,n,r),Ns(e)}function pr(e,n,r){if(n=n.updateQueue,n!==null&&(n=n.shared,(r&4194048)!==0)){var i=n.lanes;i&=e.pendingLanes,r|=i,n.lanes=r,dn(e,r)}}function wc(e,n){var r=e.updateQueue,i=e.alternate;if(i!==null&&(i=i.updateQueue,r===i)){var l=null,p=null;if(r=r.firstBaseUpdate,r!==null){do{var D={lane:r.lane,tag:r.tag,payload:r.payload,callback:null,next:null};p===null?l=p=D:p=p.next=D,r=r.next}while(r!==null);p===null?l=p=n:p=p.next=n}else l=p=n;r={baseState:i.baseState,firstBaseUpdate:l,lastBaseUpdate:p,shared:i.shared,callbacks:i.callbacks},e.updateQueue=r;return}e=r.lastBaseUpdate,e===null?r.firstBaseUpdate=n:e.next=n,r.lastBaseUpdate=n}var Sc=!1;function mr(){if(Sc){var e=aa;if(e!==null)throw e}}function hr(e,n,r,i){Sc=!1;var l=e.updateQueue;kt=!1;var p=l.firstBaseUpdate,D=l.lastBaseUpdate,S=l.shared.pending;if(S!==null){l.shared.pending=null;var I=S,H=I.next;I.next=null,D===null?p=H:D.next=H,D=I;var t0=e.alternate;t0!==null&&(t0=t0.updateQueue,S=t0.lastBaseUpdate,S!==D&&(S===null?t0.firstBaseUpdate=H:S.next=H,t0.lastBaseUpdate=I))}if(p!==null){var s0=l.baseState;D=0,t0=H=I=null,S=p;do{var K=S.lane&-536870913,X=K!==S.lane;if(X?(V0&K)===K:(i&K)===K){K!==0&&K===na&&(Sc=!0),t0!==null&&(t0=t0.next={lane:0,tag:S.tag,payload:S.payload,callback:null,next:null});e:{var S0=e,D0=S;K=n;var Q0=r;switch(D0.tag){case 1:if(S0=D0.payload,typeof S0=="function"){s0=S0.call(Q0,s0,K);break e}s0=S0;break e;case 3:S0.flags=S0.flags&-65537|128;case 0:if(S0=D0.payload,K=typeof S0=="function"?S0.call(Q0,s0,K):S0,K==null)break e;s0=y({},s0,K);break e;case 2:kt=!0}}K=S.callback,K!==null&&(e.flags|=64,X&&(e.flags|=8192),X=l.callbacks,X===null?l.callbacks=[K]:X.push(K))}else X={lane:K,tag:S.tag,payload:S.payload,callback:S.callback,next:null},t0===null?(H=t0=X,I=s0):t0=t0.next=X,D|=K;if(S=S.next,S===null){if(S=l.shared.pending,S===null)break;X=S,S=X.next,X.next=null,l.lastBaseUpdate=X,l.shared.pending=null}}while(!0);t0===null&&(I=s0),l.baseState=I,l.firstBaseUpdate=H,l.lastBaseUpdate=t0,p===null&&(l.shared.lanes=0),Ut|=D,e.lanes=D,e.memoizedState=s0}}function mu(e,n){if(typeof e!="function")throw Error(o(191,e));e.call(n)}function hu(e,n){var r=e.callbacks;if(r!==null)for(e.callbacks=null,e=0;e<r.length;e++)mu(r[e],n)}var ra=Q(null),Hs=Q(0);function gu(e,n){e=gt,a0(Hs,e),a0(ra,n),gt=e|n.baseLanes}function kc(){a0(Hs,gt),a0(ra,ra.current)}function Tc(){gt=Hs.current,e0(ra),e0(Hs)}var Rt=0,P0=null,Z0=null,b2=null,Ys=!1,sa=!1,vn=!1,Ws=0,gr=0,oa=null,nb=0;function h2(){throw Error(o(321))}function Oc(e,n){if(n===null)return!1;for(var r=0;r<n.length&&r<e.length;r++)if(!$2(e[r],n[r]))return!1;return!0}function Rc(e,n,r,i,l,p){return Rt=p,P0=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,z.H=e===null||e.memoizedState===null?e3:t3,vn=!1,p=r(i,l),vn=!1,sa&&(p=yu(n,r,i,l)),Cu(e),p}function Cu(e){z.H=Qs;var n=Z0!==null&&Z0.next!==null;if(Rt=0,b2=Z0=P0=null,Ys=!1,gr=0,oa=null,n)throw Error(o(300));e===null||v2||(e=e.dependencies,e!==null&&Us(e)&&(v2=!0))}function yu(e,n,r,i){P0=e;var l=0;do{if(sa&&(oa=null),gr=0,sa=!1,25<=l)throw Error(o(301));if(l+=1,b2=Z0=null,e.updateQueue!=null){var p=e.updateQueue;p.lastEffect=null,p.events=null,p.stores=null,p.memoCache!=null&&(p.memoCache.index=0)}z.H=Ab,p=n(r,i)}while(sa);return p}function ab(){var e=z.H,n=e.useState()[0];return n=typeof n.then=="function"?Cr(n):n,e=e.useState()[0],(Z0!==null?Z0.memoizedState:null)!==e&&(P0.flags|=1024),n}function Pc(){var e=Ws!==0;return Ws=0,e}function Ic(e,n,r){n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~r}function Nc(e){if(Ys){for(e=e.memoizedState;e!==null;){var n=e.queue;n!==null&&(n.pending=null),e=e.next}Ys=!1}Rt=0,b2=Z0=P0=null,sa=!1,gr=Ws=0,oa=null}function X2(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return b2===null?P0.memoizedState=b2=e:b2=b2.next=e,b2}function F2(){if(Z0===null){var e=P0.alternate;e=e!==null?e.memoizedState:null}else e=Z0.next;var n=b2===null?P0.memoizedState:b2.next;if(n!==null)b2=n,Z0=e;else{if(e===null)throw P0.alternate===null?Error(o(467)):Error(o(310));Z0=e,e={memoizedState:Z0.memoizedState,baseState:Z0.baseState,baseQueue:Z0.baseQueue,queue:Z0.queue,next:null},b2===null?P0.memoizedState=b2=e:b2=b2.next=e}return b2}function Lc(){return{lastEffect:null,events:null,stores:null,memoCache:null}}function Cr(e){var n=gr;return gr+=1,oa===null&&(oa=[]),e=uu(oa,e,n),n=P0,(b2===null?n.memoizedState:b2.next)===null&&(n=n.alternate,z.H=n===null||n.memoizedState===null?e3:t3),e}function Ks(e){if(e!==null&&typeof e=="object"){if(typeof e.then=="function")return Cr(e);if(e.$$typeof===w)return I2(e)}throw Error(o(438,String(e)))}function zc(e){var n=null,r=P0.updateQueue;if(r!==null&&(n=r.memoCache),n==null){var i=P0.alternate;i!==null&&(i=i.updateQueue,i!==null&&(i=i.memoCache,i!=null&&(n={data:i.data.map(function(l){return l.slice()}),index:0})))}if(n==null&&(n={data:[],index:0}),r===null&&(r=Lc(),P0.updateQueue=r),r.memoCache=n,r=n.data[n.index],r===void 0)for(r=n.data[n.index]=Array(e),i=0;i<e;i++)r[i]=r0;return n.index++,r}function dt(e,n){return typeof n=="function"?n(e):n}function Xs(e){var n=F2();return Mc(n,Z0,e)}function Mc(e,n,r){var i=e.queue;if(i===null)throw Error(o(311));i.lastRenderedReducer=r;var l=e.baseQueue,p=i.pending;if(p!==null){if(l!==null){var D=l.next;l.next=p.next,p.next=D}n.baseQueue=l=p,i.pending=null}if(p=e.baseState,l===null)e.memoizedState=p;else{n=l.next;var S=D=null,I=null,H=n,t0=!1;do{var s0=H.lane&-536870913;if(s0!==H.lane?(V0&s0)===s0:(Rt&s0)===s0){var K=H.revertLane;if(K===0)I!==null&&(I=I.next={lane:0,revertLane:0,action:H.action,hasEagerState:H.hasEagerState,eagerState:H.eagerState,next:null}),s0===na&&(t0=!0);else if((Rt&K)===K){H=H.next,K===na&&(t0=!0);continue}else s0={lane:0,revertLane:H.revertLane,action:H.action,hasEagerState:H.hasEagerState,eagerState:H.eagerState,next:null},I===null?(S=I=s0,D=p):I=I.next=s0,P0.lanes|=K,Ut|=K;s0=H.action,vn&&r(p,s0),p=H.hasEagerState?H.eagerState:r(p,s0)}else K={lane:s0,revertLane:H.revertLane,action:H.action,hasEagerState:H.hasEagerState,eagerState:H.eagerState,next:null},I===null?(S=I=K,D=p):I=I.next=K,P0.lanes|=s0,Ut|=s0;H=H.next}while(H!==null&&H!==n);if(I===null?D=p:I.next=S,!$2(p,e.memoizedState)&&(v2=!0,t0&&(r=aa,r!==null)))throw r;e.memoizedState=p,e.baseState=D,e.baseQueue=I,i.lastRenderedState=p}return l===null&&(i.lanes=0),[e.memoizedState,i.dispatch]}function Uc(e){var n=F2(),r=n.queue;if(r===null)throw Error(o(311));r.lastRenderedReducer=e;var i=r.dispatch,l=r.pending,p=n.memoizedState;if(l!==null){r.pending=null;var D=l=l.next;do p=e(p,D.action),D=D.next;while(D!==l);$2(p,n.memoizedState)||(v2=!0),n.memoizedState=p,n.baseQueue===null&&(n.baseState=p),r.lastRenderedState=p}return[p,i]}function bu(e,n,r){var i=P0,l=F2(),p=W0;if(p){if(r===void 0)throw Error(o(407));r=r()}else r=n();var D=!$2((Z0||l).memoizedState,r);D&&(l.memoizedState=r,v2=!0),l=l.queue;var S=Bu.bind(null,i,l,e);if(yr(2048,8,S,[e]),l.getSnapshot!==n||D||b2!==null&&b2.memoizedState.tag&1){if(i.flags|=2048,ia(9,Js(),Eu.bind(null,i,l,r,n),null),t2===null)throw Error(o(349));p||(Rt&124)!==0||Fu(i,n,r)}return r}function Fu(e,n,r){e.flags|=16384,e={getSnapshot:n,value:r},n=P0.updateQueue,n===null?(n=Lc(),P0.updateQueue=n,n.stores=[e]):(r=n.stores,r===null?n.stores=[e]:r.push(e))}function Eu(e,n,r,i){n.value=r,n.getSnapshot=i,vu(n)&&Du(e)}function Bu(e,n,r){return r(function(){vu(n)&&Du(e)})}function vu(e){var n=e.getSnapshot;e=e.value;try{var r=n();return!$2(e,r)}catch{return!0}}function Du(e){var n=$n(e,2);n!==null&&re(n,e,2)}function jc(e){var n=X2();if(typeof e=="function"){var r=e;if(e=r(),vn){ke(!0);try{r()}finally{ke(!1)}}}return n.memoizedState=n.baseState=e,n.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:dt,lastRenderedState:e},n}function xu(e,n,r,i){return e.baseState=r,Mc(e,Z0,typeof i=="function"?i:dt)}function rb(e,n,r,i,l){if($s(e))throw Error(o(485));if(e=n.action,e!==null){var p={payload:l,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(D){p.listeners.push(D)}};z.T!==null?r(!0):p.isTransition=!1,i(p),r=n.pending,r===null?(p.next=n.pending=p,_u(n,p)):(p.next=r.next,n.pending=r.next=p)}}function _u(e,n){var r=n.action,i=n.payload,l=e.state;if(n.isTransition){var p=z.T,D={};z.T=D;try{var S=r(l,i),I=z.S;I!==null&&I(D,S),wu(e,n,S)}catch(H){Vc(e,n,H)}finally{z.T=p}}else try{p=r(l,i),wu(e,n,p)}catch(H){Vc(e,n,H)}}function wu(e,n,r){r!==null&&typeof r=="object"&&typeof r.then=="function"?r.then(function(i){Su(e,n,i)},function(i){return Vc(e,n,i)}):Su(e,n,r)}function Su(e,n,r){n.status="fulfilled",n.value=r,ku(n),e.state=r,n=e.pending,n!==null&&(r=n.next,r===n?e.pending=null:(r=r.next,n.next=r,_u(e,r)))}function Vc(e,n,r){var i=e.pending;if(e.pending=null,i!==null){i=i.next;do n.status="rejected",n.reason=r,ku(n),n=n.next;while(n!==i)}e.action=null}function ku(e){e=e.listeners;for(var n=0;n<e.length;n++)(0,e[n])()}function Tu(e,n){return n}function Ou(e,n){if(W0){var r=t2.formState;if(r!==null){e:{var i=P0;if(W0){if(f2){t:{for(var l=f2,p=Ge;l.nodeType!==8;){if(!p){l=null;break t}if(l=Ie(l.nextSibling),l===null){l=null;break t}}p=l.data,l=p==="F!"||p==="F"?l:null}if(l){f2=Ie(l.nextSibling),i=l.data==="F!";break e}}bn(i)}i=!1}i&&(n=r[0])}}return r=X2(),r.memoizedState=r.baseState=n,i={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Tu,lastRenderedState:n},r.queue=i,r=Zu.bind(null,P0,i),i.dispatch=r,i=jc(!1),p=Wc.bind(null,P0,!1,i.queue),i=X2(),l={state:n,dispatch:null,action:e,pending:null},i.queue=l,r=rb.bind(null,P0,l,p,r),l.dispatch=r,i.memoizedState=e,[n,r,!1]}function Ru(e){var n=F2();return Pu(n,Z0,e)}function Pu(e,n,r){if(n=Mc(e,n,Tu)[0],e=Xs(dt)[0],typeof n=="object"&&n!==null&&typeof n.then=="function")try{var i=Cr(n)}catch(D){throw D===ur?Gs:D}else i=n;n=F2();var l=n.queue,p=l.dispatch;return r!==n.memoizedState&&(P0.flags|=2048,ia(9,Js(),sb.bind(null,l,r),null)),[i,p,e]}function sb(e,n){e.action=n}function Iu(e){var n=F2(),r=Z0;if(r!==null)return Pu(n,r,e);F2(),n=n.memoizedState,r=F2();var i=r.queue.dispatch;return r.memoizedState=e,[n,i,!1]}function ia(e,n,r,i){return e={tag:e,create:r,deps:i,inst:n,next:null},n=P0.updateQueue,n===null&&(n=Lc(),P0.updateQueue=n),r=n.lastEffect,r===null?n.lastEffect=e.next=e:(i=r.next,r.next=e,e.next=i,n.lastEffect=e),e}function Js(){return{destroy:void 0,resource:void 0}}function Nu(){return F2().memoizedState}function Zs(e,n,r,i){var l=X2();i=i===void 0?null:i,P0.flags|=e,l.memoizedState=ia(1|n,Js(),r,i)}function yr(e,n,r,i){var l=F2();i=i===void 0?null:i;var p=l.memoizedState.inst;Z0!==null&&i!==null&&Oc(i,Z0.memoizedState.deps)?l.memoizedState=ia(n,p,r,i):(P0.flags|=e,l.memoizedState=ia(1|n,p,r,i))}function Lu(e,n){Zs(8390656,8,e,n)}function zu(e,n){yr(2048,8,e,n)}function Mu(e,n){return yr(4,2,e,n)}function Uu(e,n){return yr(4,4,e,n)}function ju(e,n){if(typeof n=="function"){e=e();var r=n(e);return function(){typeof r=="function"?r():n(null)}}if(n!=null)return e=e(),n.current=e,function(){n.current=null}}function Vu(e,n,r){r=r!=null?r.concat([e]):null,yr(4,4,ju.bind(null,n,e),r)}function Gc(){}function Gu(e,n){var r=F2();n=n===void 0?null:n;var i=r.memoizedState;return n!==null&&Oc(n,i[1])?i[0]:(r.memoizedState=[e,n],e)}function qu(e,n){var r=F2();n=n===void 0?null:n;var i=r.memoizedState;if(n!==null&&Oc(n,i[1]))return i[0];if(i=e(),vn){ke(!0);try{e()}finally{ke(!1)}}return r.memoizedState=[i,n],i}function qc(e,n,r){return r===void 0||(Rt&1073741824)!==0?e.memoizedState=n:(e.memoizedState=r,e=W3(),P0.lanes|=e,Ut|=e,r)}function Hu(e,n,r,i){return $2(r,n)?r:ra.current!==null?(e=qc(e,r,i),$2(e,n)||(v2=!0),e):(Rt&42)===0?(v2=!0,e.memoizedState=r):(e=W3(),P0.lanes|=e,Ut|=e,n)}function Yu(e,n,r,i,l){var p=Y.p;Y.p=p!==0&&8>p?p:8;var D=z.T,S={};z.T=S,Wc(e,!1,n,r);try{var I=l(),H=z.S;if(H!==null&&H(S,I),I!==null&&typeof I=="object"&&typeof I.then=="function"){var t0=tb(I,i);br(e,n,t0,ae(e))}else br(e,n,i,ae(e))}catch(s0){br(e,n,{then:function(){},status:"rejected",reason:s0},ae())}finally{Y.p=p,z.T=D}}function ob(){}function Hc(e,n,r,i){if(e.tag!==5)throw Error(o(476));var l=Wu(e).queue;Yu(e,l,n,$,r===null?ob:function(){return Ku(e),r(i)})}function Wu(e){var n=e.memoizedState;if(n!==null)return n;n={memoizedState:$,baseState:$,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:dt,lastRenderedState:$},next:null};var r={};return n.next={memoizedState:r,baseState:r,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:dt,lastRenderedState:r},next:null},e.memoizedState=n,e=e.alternate,e!==null&&(e.memoizedState=n),n}function Ku(e){var n=Wu(e).next.queue;br(e,n,{},ae())}function Yc(){return I2(zr)}function Xu(){return F2().memoizedState}function Ju(){return F2().memoizedState}function ib(e){for(var n=e.return;n!==null;){switch(n.tag){case 24:case 3:var r=ae();e=Tt(r);var i=Ot(n,e,r);i!==null&&(re(i,n,r),pr(i,n,r)),n={cache:Ec()},e.payload=n;return}n=n.return}}function cb(e,n,r){var i=ae();r={lane:i,revertLane:0,action:r,hasEagerState:!1,eagerState:null,next:null},$s(e)?$u(n,r):(r=uc(e,n,r,i),r!==null&&(re(r,e,i),Qu(r,n,i)))}function Zu(e,n,r){var i=ae();br(e,n,r,i)}function br(e,n,r,i){var l={lane:i,revertLane:0,action:r,hasEagerState:!1,eagerState:null,next:null};if($s(e))$u(n,l);else{var p=e.alternate;if(e.lanes===0&&(p===null||p.lanes===0)&&(p=n.lastRenderedReducer,p!==null))try{var D=n.lastRenderedState,S=p(D,r);if(l.hasEagerState=!0,l.eagerState=S,$2(S,D))return Is(e,n,l,0),t2===null&&Ps(),!1}catch{}finally{}if(r=uc(e,n,l,i),r!==null)return re(r,e,i),Qu(r,n,i),!0}return!1}function Wc(e,n,r,i){if(i={lane:2,revertLane:DA(),action:i,hasEagerState:!1,eagerState:null,next:null},$s(e)){if(n)throw Error(o(479))}else n=uc(e,r,i,2),n!==null&&re(n,e,2)}function $s(e){var n=e.alternate;return e===P0||n!==null&&n===P0}function $u(e,n){sa=Ys=!0;var r=e.pending;r===null?n.next=n:(n.next=r.next,r.next=n),e.pending=n}function Qu(e,n,r){if((r&4194048)!==0){var i=n.lanes;i&=e.pendingLanes,r|=i,n.lanes=r,dn(e,r)}}var Qs={readContext:I2,use:Ks,useCallback:h2,useContext:h2,useEffect:h2,useImperativeHandle:h2,useLayoutEffect:h2,useInsertionEffect:h2,useMemo:h2,useReducer:h2,useRef:h2,useState:h2,useDebugValue:h2,useDeferredValue:h2,useTransition:h2,useSyncExternalStore:h2,useId:h2,useHostTransitionStatus:h2,useFormState:h2,useActionState:h2,useOptimistic:h2,useMemoCache:h2,useCacheRefresh:h2},e3={readContext:I2,use:Ks,useCallback:function(e,n){return X2().memoizedState=[e,n===void 0?null:n],e},useContext:I2,useEffect:Lu,useImperativeHandle:function(e,n,r){r=r!=null?r.concat([e]):null,Zs(4194308,4,ju.bind(null,n,e),r)},useLayoutEffect:function(e,n){return Zs(4194308,4,e,n)},useInsertionEffect:function(e,n){Zs(4,2,e,n)},useMemo:function(e,n){var r=X2();n=n===void 0?null:n;var i=e();if(vn){ke(!0);try{e()}finally{ke(!1)}}return r.memoizedState=[i,n],i},useReducer:function(e,n,r){var i=X2();if(r!==void 0){var l=r(n);if(vn){ke(!0);try{r(n)}finally{ke(!1)}}}else l=n;return i.memoizedState=i.baseState=l,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:l},i.queue=e,e=e.dispatch=cb.bind(null,P0,e),[i.memoizedState,e]},useRef:function(e){var n=X2();return e={current:e},n.memoizedState=e},useState:function(e){e=jc(e);var n=e.queue,r=Zu.bind(null,P0,n);return n.dispatch=r,[e.memoizedState,r]},useDebugValue:Gc,useDeferredValue:function(e,n){var r=X2();return qc(r,e,n)},useTransition:function(){var e=jc(!1);return e=Yu.bind(null,P0,e.queue,!0,!1),X2().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,n,r){var i=P0,l=X2();if(W0){if(r===void 0)throw Error(o(407));r=r()}else{if(r=n(),t2===null)throw Error(o(349));(V0&124)!==0||Fu(i,n,r)}l.memoizedState=r;var p={value:r,getSnapshot:n};return l.queue=p,Lu(Bu.bind(null,i,p,e),[e]),i.flags|=2048,ia(9,Js(),Eu.bind(null,i,p,r,n),null),r},useId:function(){var e=X2(),n=t2.identifierPrefix;if(W0){var r=ct,i=it;r=(i&~(1<<32-w2(i)-1)).toString(32)+r,n="«"+n+"R"+r,r=Ws++,0<r&&(n+="H"+r.toString(32)),n+="»"}else r=nb++,n="«"+n+"r"+r.toString(32)+"»";return e.memoizedState=n},useHostTransitionStatus:Yc,useFormState:Ou,useActionState:Ou,useOptimistic:function(e){var n=X2();n.memoizedState=n.baseState=e;var r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return n.queue=r,n=Wc.bind(null,P0,!0,r),r.dispatch=n,[e,n]},useMemoCache:zc,useCacheRefresh:function(){return X2().memoizedState=ib.bind(null,P0)}},t3={readContext:I2,use:Ks,useCallback:Gu,useContext:I2,useEffect:zu,useImperativeHandle:Vu,useInsertionEffect:Mu,useLayoutEffect:Uu,useMemo:qu,useReducer:Xs,useRef:Nu,useState:function(){return Xs(dt)},useDebugValue:Gc,useDeferredValue:function(e,n){var r=F2();return Hu(r,Z0.memoizedState,e,n)},useTransition:function(){var e=Xs(dt)[0],n=F2().memoizedState;return[typeof e=="boolean"?e:Cr(e),n]},useSyncExternalStore:bu,useId:Xu,useHostTransitionStatus:Yc,useFormState:Ru,useActionState:Ru,useOptimistic:function(e,n){var r=F2();return xu(r,Z0,e,n)},useMemoCache:zc,useCacheRefresh:Ju},Ab={readContext:I2,use:Ks,useCallback:Gu,useContext:I2,useEffect:zu,useImperativeHandle:Vu,useInsertionEffect:Mu,useLayoutEffect:Uu,useMemo:qu,useReducer:Uc,useRef:Nu,useState:function(){return Uc(dt)},useDebugValue:Gc,useDeferredValue:function(e,n){var r=F2();return Z0===null?qc(r,e,n):Hu(r,Z0.memoizedState,e,n)},useTransition:function(){var e=Uc(dt)[0],n=F2().memoizedState;return[typeof e=="boolean"?e:Cr(e),n]},useSyncExternalStore:bu,useId:Xu,useHostTransitionStatus:Yc,useFormState:Iu,useActionState:Iu,useOptimistic:function(e,n){var r=F2();return Z0!==null?xu(r,Z0,e,n):(r.baseState=e,[e,r.queue.dispatch])},useMemoCache:zc,useCacheRefresh:Ju},ca=null,Fr=0;function eo(e){var n=Fr;return Fr+=1,ca===null&&(ca=[]),uu(ca,e,n)}function Er(e,n){n=n.props.ref,e.ref=n!==void 0?n:null}function to(e,n){throw n.$$typeof===g?Error(o(525)):(e=Object.prototype.toString.call(n),Error(o(31,e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e)))}function n3(e){var n=e._init;return n(e._payload)}function a3(e){function n(U,M){if(e){var G=U.deletions;G===null?(U.deletions=[M],U.flags|=16):G.push(M)}}function r(U,M){if(!e)return null;for(;M!==null;)n(U,M),M=M.sibling;return null}function i(U){for(var M=new Map;U!==null;)U.key!==null?M.set(U.key,U):M.set(U.index,U),U=U.sibling;return M}function l(U,M){return U=ot(U,M),U.index=0,U.sibling=null,U}function p(U,M,G){return U.index=G,e?(G=U.alternate,G!==null?(G=G.index,G<M?(U.flags|=67108866,M):G):(U.flags|=67108866,M)):(U.flags|=1048576,M)}function D(U){return e&&U.alternate===null&&(U.flags|=67108866),U}function S(U,M,G,n0){return M===null||M.tag!==6?(M=pc(G,U.mode,n0),M.return=U,M):(M=l(M,G),M.return=U,M)}function I(U,M,G,n0){var m0=G.type;return m0===B?t0(U,M,G.props.children,n0,G.key):M!==null&&(M.elementType===m0||typeof m0=="object"&&m0!==null&&m0.$$typeof===j&&n3(m0)===M.type)?(M=l(M,G.props),Er(M,G),M.return=U,M):(M=Ls(G.type,G.key,G.props,null,U.mode,n0),Er(M,G),M.return=U,M)}function H(U,M,G,n0){return M===null||M.tag!==4||M.stateNode.containerInfo!==G.containerInfo||M.stateNode.implementation!==G.implementation?(M=mc(G,U.mode,n0),M.return=U,M):(M=l(M,G.children||[]),M.return=U,M)}function t0(U,M,G,n0,m0){return M===null||M.tag!==7?(M=hn(G,U.mode,n0,m0),M.return=U,M):(M=l(M,G),M.return=U,M)}function s0(U,M,G){if(typeof M=="string"&&M!==""||typeof M=="number"||typeof M=="bigint")return M=pc(""+M,U.mode,G),M.return=U,M;if(typeof M=="object"&&M!==null){switch(M.$$typeof){case F:return G=Ls(M.type,M.key,M.props,null,U.mode,G),Er(G,M),G.return=U,G;case E:return M=mc(M,U.mode,G),M.return=U,M;case j:var n0=M._init;return M=n0(M._payload),s0(U,M,G)}if(u0(M)||i0(M))return M=hn(M,U.mode,G,null),M.return=U,M;if(typeof M.then=="function")return s0(U,eo(M),G);if(M.$$typeof===w)return s0(U,js(U,M),G);to(U,M)}return null}function K(U,M,G,n0){var m0=M!==null?M.key:null;if(typeof G=="string"&&G!==""||typeof G=="number"||typeof G=="bigint")return m0!==null?null:S(U,M,""+G,n0);if(typeof G=="object"&&G!==null){switch(G.$$typeof){case F:return G.key===m0?I(U,M,G,n0):null;case E:return G.key===m0?H(U,M,G,n0):null;case j:return m0=G._init,G=m0(G._payload),K(U,M,G,n0)}if(u0(G)||i0(G))return m0!==null?null:t0(U,M,G,n0,null);if(typeof G.then=="function")return K(U,M,eo(G),n0);if(G.$$typeof===w)return K(U,M,js(U,G),n0);to(U,G)}return null}function X(U,M,G,n0,m0){if(typeof n0=="string"&&n0!==""||typeof n0=="number"||typeof n0=="bigint")return U=U.get(G)||null,S(M,U,""+n0,m0);if(typeof n0=="object"&&n0!==null){switch(n0.$$typeof){case F:return U=U.get(n0.key===null?G:n0.key)||null,I(M,U,n0,m0);case E:return U=U.get(n0.key===null?G:n0.key)||null,H(M,U,n0,m0);case j:var z0=n0._init;return n0=z0(n0._payload),X(U,M,G,n0,m0)}if(u0(n0)||i0(n0))return U=U.get(G)||null,t0(M,U,n0,m0,null);if(typeof n0.then=="function")return X(U,M,G,eo(n0),m0);if(n0.$$typeof===w)return X(U,M,G,js(M,n0),m0);to(M,n0)}return null}function S0(U,M,G,n0){for(var m0=null,z0=null,b0=M,_0=M=0,x2=null;b0!==null&&_0<G.length;_0++){b0.index>_0?(x2=b0,b0=null):x2=b0.sibling;var Y0=K(U,b0,G[_0],n0);if(Y0===null){b0===null&&(b0=x2);break}e&&b0&&Y0.alternate===null&&n(U,b0),M=p(Y0,M,_0),z0===null?m0=Y0:z0.sibling=Y0,z0=Y0,b0=x2}if(_0===G.length)return r(U,b0),W0&&Cn(U,_0),m0;if(b0===null){for(;_0<G.length;_0++)b0=s0(U,G[_0],n0),b0!==null&&(M=p(b0,M,_0),z0===null?m0=b0:z0.sibling=b0,z0=b0);return W0&&Cn(U,_0),m0}for(b0=i(b0);_0<G.length;_0++)x2=X(b0,U,_0,G[_0],n0),x2!==null&&(e&&x2.alternate!==null&&b0.delete(x2.key===null?_0:x2.key),M=p(x2,M,_0),z0===null?m0=x2:z0.sibling=x2,z0=x2);return e&&b0.forEach(function(Xt){return n(U,Xt)}),W0&&Cn(U,_0),m0}function D0(U,M,G,n0){if(G==null)throw Error(o(151));for(var m0=null,z0=null,b0=M,_0=M=0,x2=null,Y0=G.next();b0!==null&&!Y0.done;_0++,Y0=G.next()){b0.index>_0?(x2=b0,b0=null):x2=b0.sibling;var Xt=K(U,b0,Y0.value,n0);if(Xt===null){b0===null&&(b0=x2);break}e&&b0&&Xt.alternate===null&&n(U,b0),M=p(Xt,M,_0),z0===null?m0=Xt:z0.sibling=Xt,z0=Xt,b0=x2}if(Y0.done)return r(U,b0),W0&&Cn(U,_0),m0;if(b0===null){for(;!Y0.done;_0++,Y0=G.next())Y0=s0(U,Y0.value,n0),Y0!==null&&(M=p(Y0,M,_0),z0===null?m0=Y0:z0.sibling=Y0,z0=Y0);return W0&&Cn(U,_0),m0}for(b0=i(b0);!Y0.done;_0++,Y0=G.next())Y0=X(b0,U,_0,Y0.value,n0),Y0!==null&&(e&&Y0.alternate!==null&&b0.delete(Y0.key===null?_0:Y0.key),M=p(Y0,M,_0),z0===null?m0=Y0:z0.sibling=Y0,z0=Y0);return e&&b0.forEach(function(lF){return n(U,lF)}),W0&&Cn(U,_0),m0}function Q0(U,M,G,n0){if(typeof G=="object"&&G!==null&&G.type===B&&G.key===null&&(G=G.props.children),typeof G=="object"&&G!==null){switch(G.$$typeof){case F:e:{for(var m0=G.key;M!==null;){if(M.key===m0){if(m0=G.type,m0===B){if(M.tag===7){r(U,M.sibling),n0=l(M,G.props.children),n0.return=U,U=n0;break e}}else if(M.elementType===m0||typeof m0=="object"&&m0!==null&&m0.$$typeof===j&&n3(m0)===M.type){r(U,M.sibling),n0=l(M,G.props),Er(n0,G),n0.return=U,U=n0;break e}r(U,M);break}else n(U,M);M=M.sibling}G.type===B?(n0=hn(G.props.children,U.mode,n0,G.key),n0.return=U,U=n0):(n0=Ls(G.type,G.key,G.props,null,U.mode,n0),Er(n0,G),n0.return=U,U=n0)}return D(U);case E:e:{for(m0=G.key;M!==null;){if(M.key===m0)if(M.tag===4&&M.stateNode.containerInfo===G.containerInfo&&M.stateNode.implementation===G.implementation){r(U,M.sibling),n0=l(M,G.children||[]),n0.return=U,U=n0;break e}else{r(U,M);break}else n(U,M);M=M.sibling}n0=mc(G,U.mode,n0),n0.return=U,U=n0}return D(U);case j:return m0=G._init,G=m0(G._payload),Q0(U,M,G,n0)}if(u0(G))return S0(U,M,G,n0);if(i0(G)){if(m0=i0(G),typeof m0!="function")throw Error(o(150));return G=m0.call(G),D0(U,M,G,n0)}if(typeof G.then=="function")return Q0(U,M,eo(G),n0);if(G.$$typeof===w)return Q0(U,M,js(U,G),n0);to(U,G)}return typeof G=="string"&&G!==""||typeof G=="number"||typeof G=="bigint"?(G=""+G,M!==null&&M.tag===6?(r(U,M.sibling),n0=l(M,G),n0.return=U,U=n0):(r(U,M),n0=pc(G,U.mode,n0),n0.return=U,U=n0),D(U)):r(U,M)}return function(U,M,G,n0){try{Fr=0;var m0=Q0(U,M,G,n0);return ca=null,m0}catch(b0){if(b0===ur||b0===Gs)throw b0;var z0=Q2(29,b0,null,U.mode);return z0.lanes=n0,z0.return=U,z0}finally{}}}var Aa=a3(!0),r3=a3(!1),Ce=Q(null),qe=null;function Pt(e){var n=e.alternate;a0(B2,B2.current&1),a0(Ce,e),qe===null&&(n===null||ra.current!==null||n.memoizedState!==null)&&(qe=e)}function s3(e){if(e.tag===22){if(a0(B2,B2.current),a0(Ce,e),qe===null){var n=e.alternate;n!==null&&n.memoizedState!==null&&(qe=e)}}else It()}function It(){a0(B2,B2.current),a0(Ce,Ce.current)}function ut(e){e0(Ce),qe===e&&(qe=null),e0(B2)}var B2=Q(0);function no(e){for(var n=e;n!==null;){if(n.tag===13){var r=n.memoizedState;if(r!==null&&(r=r.dehydrated,r===null||r.data==="$?"||LA(r)))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if((n.flags&128)!==0)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}function Kc(e,n,r,i){n=e.memoizedState,r=r(i,n),r=r==null?n:y({},n,r),e.memoizedState=r,e.lanes===0&&(e.updateQueue.baseState=r)}var Xc={enqueueSetState:function(e,n,r){e=e._reactInternals;var i=ae(),l=Tt(i);l.payload=n,r!=null&&(l.callback=r),n=Ot(e,l,i),n!==null&&(re(n,e,i),pr(n,e,i))},enqueueReplaceState:function(e,n,r){e=e._reactInternals;var i=ae(),l=Tt(i);l.tag=1,l.payload=n,r!=null&&(l.callback=r),n=Ot(e,l,i),n!==null&&(re(n,e,i),pr(n,e,i))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var r=ae(),i=Tt(r);i.tag=2,n!=null&&(i.callback=n),n=Ot(e,i,r),n!==null&&(re(n,e,r),pr(n,e,r))}};function o3(e,n,r,i,l,p,D){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(i,p,D):n.prototype&&n.prototype.isPureReactComponent?!rr(r,i)||!rr(l,p):!0}function i3(e,n,r,i){e=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(r,i),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(r,i),n.state!==e&&Xc.enqueueReplaceState(n,n.state,null)}function Dn(e,n){var r=n;if("ref"in n){r={};for(var i in n)i!=="ref"&&(r[i]=n[i])}if(e=e.defaultProps){r===n&&(r=y({},r));for(var l in e)r[l]===void 0&&(r[l]=e[l])}return r}var ao=typeof reportError=="function"?reportError:function(e){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var n=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof e=="object"&&e!==null&&typeof e.message=="string"?String(e.message):String(e),error:e});if(!window.dispatchEvent(n))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",e);return}console.error(e)};function c3(e){ao(e)}function A3(e){console.error(e)}function l3(e){ao(e)}function ro(e,n){try{var r=e.onUncaughtError;r(n.value,{componentStack:n.stack})}catch(i){setTimeout(function(){throw i})}}function d3(e,n,r){try{var i=e.onCaughtError;i(r.value,{componentStack:r.stack,errorBoundary:n.tag===1?n.stateNode:null})}catch(l){setTimeout(function(){throw l})}}function Jc(e,n,r){return r=Tt(r),r.tag=3,r.payload={element:null},r.callback=function(){ro(e,n)},r}function u3(e){return e=Tt(e),e.tag=3,e}function f3(e,n,r,i){var l=r.type.getDerivedStateFromError;if(typeof l=="function"){var p=i.value;e.payload=function(){return l(p)},e.callback=function(){d3(n,r,i)}}var D=r.stateNode;D!==null&&typeof D.componentDidCatch=="function"&&(e.callback=function(){d3(n,r,i),typeof l!="function"&&(jt===null?jt=new Set([this]):jt.add(this));var S=i.stack;this.componentDidCatch(i.value,{componentStack:S!==null?S:""})})}function lb(e,n,r,i,l){if(r.flags|=32768,i!==null&&typeof i=="object"&&typeof i.then=="function"){if(n=r.alternate,n!==null&&Ar(n,r,l,!0),r=Ce.current,r!==null){switch(r.tag){case 13:return qe===null?bA():r.alternate===null&&p2===0&&(p2=3),r.flags&=-257,r.flags|=65536,r.lanes=l,i===Dc?r.flags|=16384:(n=r.updateQueue,n===null?r.updateQueue=new Set([i]):n.add(i),EA(e,i,l)),!1;case 22:return r.flags|=65536,i===Dc?r.flags|=16384:(n=r.updateQueue,n===null?(n={transitions:null,markerInstances:null,retryQueue:new Set([i])},r.updateQueue=n):(r=n.retryQueue,r===null?n.retryQueue=new Set([i]):r.add(i)),EA(e,i,l)),!1}throw Error(o(435,r.tag))}return EA(e,i,l),bA(),!1}if(W0)return n=Ce.current,n!==null?((n.flags&65536)===0&&(n.flags|=256),n.flags|=65536,n.lanes=l,i!==Cc&&(e=Error(o(422),{cause:i}),cr(pe(e,r)))):(i!==Cc&&(n=Error(o(423),{cause:i}),cr(pe(n,r))),e=e.current.alternate,e.flags|=65536,l&=-l,e.lanes|=l,i=pe(i,r),l=Jc(e.stateNode,i,l),wc(e,l),p2!==4&&(p2=2)),!1;var p=Error(o(520),{cause:i});if(p=pe(p,r),Sr===null?Sr=[p]:Sr.push(p),p2!==4&&(p2=2),n===null)return!0;i=pe(i,r),r=n;do{switch(r.tag){case 3:return r.flags|=65536,e=l&-l,r.lanes|=e,e=Jc(r.stateNode,i,e),wc(r,e),!1;case 1:if(n=r.type,p=r.stateNode,(r.flags&128)===0&&(typeof n.getDerivedStateFromError=="function"||p!==null&&typeof p.componentDidCatch=="function"&&(jt===null||!jt.has(p))))return r.flags|=65536,l&=-l,r.lanes|=l,l=u3(l),f3(l,e,r,i),wc(r,l),!1}r=r.return}while(r!==null);return!1}var p3=Error(o(461)),v2=!1;function S2(e,n,r,i){n.child=e===null?r3(n,null,r,i):Aa(n,e.child,r,i)}function m3(e,n,r,i,l){r=r.render;var p=n.ref;if("ref"in i){var D={};for(var S in i)S!=="ref"&&(D[S]=i[S])}else D=i;return En(n),i=Rc(e,n,r,D,p,l),S=Pc(),e!==null&&!v2?(Ic(e,n,l),ft(e,n,l)):(W0&&S&&hc(n),n.flags|=1,S2(e,n,i,l),n.child)}function h3(e,n,r,i,l){if(e===null){var p=r.type;return typeof p=="function"&&!fc(p)&&p.defaultProps===void 0&&r.compare===null?(n.tag=15,n.type=p,g3(e,n,p,i,l)):(e=Ls(r.type,null,i,n,n.mode,l),e.ref=n.ref,e.return=n,n.child=e)}if(p=e.child,!rA(e,l)){var D=p.memoizedProps;if(r=r.compare,r=r!==null?r:rr,r(D,i)&&e.ref===n.ref)return ft(e,n,l)}return n.flags|=1,e=ot(p,i),e.ref=n.ref,e.return=n,n.child=e}function g3(e,n,r,i,l){if(e!==null){var p=e.memoizedProps;if(rr(p,i)&&e.ref===n.ref)if(v2=!1,n.pendingProps=i=p,rA(e,l))(e.flags&131072)!==0&&(v2=!0);else return n.lanes=e.lanes,ft(e,n,l)}return Zc(e,n,r,i,l)}function C3(e,n,r){var i=n.pendingProps,l=i.children,p=e!==null?e.memoizedState:null;if(i.mode==="hidden"){if((n.flags&128)!==0){if(i=p!==null?p.baseLanes|r:r,e!==null){for(l=n.child=e.child,p=0;l!==null;)p=p|l.lanes|l.childLanes,l=l.sibling;n.childLanes=p&~i}else n.childLanes=0,n.child=null;return y3(e,n,i,r)}if((r&536870912)!==0)n.memoizedState={baseLanes:0,cachePool:null},e!==null&&Vs(n,p!==null?p.cachePool:null),p!==null?gu(n,p):kc(),s3(n);else return n.lanes=n.childLanes=536870912,y3(e,n,p!==null?p.baseLanes|r:r,r)}else p!==null?(Vs(n,p.cachePool),gu(n,p),It(),n.memoizedState=null):(e!==null&&Vs(n,null),kc(),It());return S2(e,n,l,r),n.child}function y3(e,n,r,i){var l=vc();return l=l===null?null:{parent:E2._currentValue,pool:l},n.memoizedState={baseLanes:r,cachePool:l},e!==null&&Vs(n,null),kc(),s3(n),e!==null&&Ar(e,n,i,!0),null}function so(e,n){var r=n.ref;if(r===null)e!==null&&e.ref!==null&&(n.flags|=4194816);else{if(typeof r!="function"&&typeof r!="object")throw Error(o(284));(e===null||e.ref!==r)&&(n.flags|=4194816)}}function Zc(e,n,r,i,l){return En(n),r=Rc(e,n,r,i,void 0,l),i=Pc(),e!==null&&!v2?(Ic(e,n,l),ft(e,n,l)):(W0&&i&&hc(n),n.flags|=1,S2(e,n,r,l),n.child)}function b3(e,n,r,i,l,p){return En(n),n.updateQueue=null,r=yu(n,i,r,l),Cu(e),i=Pc(),e!==null&&!v2?(Ic(e,n,p),ft(e,n,p)):(W0&&i&&hc(n),n.flags|=1,S2(e,n,r,p),n.child)}function F3(e,n,r,i,l){if(En(n),n.stateNode===null){var p=Qn,D=r.contextType;typeof D=="object"&&D!==null&&(p=I2(D)),p=new r(i,p),n.memoizedState=p.state!==null&&p.state!==void 0?p.state:null,p.updater=Xc,n.stateNode=p,p._reactInternals=n,p=n.stateNode,p.props=i,p.state=n.memoizedState,p.refs={},xc(n),D=r.contextType,p.context=typeof D=="object"&&D!==null?I2(D):Qn,p.state=n.memoizedState,D=r.getDerivedStateFromProps,typeof D=="function"&&(Kc(n,r,D,i),p.state=n.memoizedState),typeof r.getDerivedStateFromProps=="function"||typeof p.getSnapshotBeforeUpdate=="function"||typeof p.UNSAFE_componentWillMount!="function"&&typeof p.componentWillMount!="function"||(D=p.state,typeof p.componentWillMount=="function"&&p.componentWillMount(),typeof p.UNSAFE_componentWillMount=="function"&&p.UNSAFE_componentWillMount(),D!==p.state&&Xc.enqueueReplaceState(p,p.state,null),hr(n,i,p,l),mr(),p.state=n.memoizedState),typeof p.componentDidMount=="function"&&(n.flags|=4194308),i=!0}else if(e===null){p=n.stateNode;var S=n.memoizedProps,I=Dn(r,S);p.props=I;var H=p.context,t0=r.contextType;D=Qn,typeof t0=="object"&&t0!==null&&(D=I2(t0));var s0=r.getDerivedStateFromProps;t0=typeof s0=="function"||typeof p.getSnapshotBeforeUpdate=="function",S=n.pendingProps!==S,t0||typeof p.UNSAFE_componentWillReceiveProps!="function"&&typeof p.componentWillReceiveProps!="function"||(S||H!==D)&&i3(n,p,i,D),kt=!1;var K=n.memoizedState;p.state=K,hr(n,i,p,l),mr(),H=n.memoizedState,S||K!==H||kt?(typeof s0=="function"&&(Kc(n,r,s0,i),H=n.memoizedState),(I=kt||o3(n,r,I,i,K,H,D))?(t0||typeof p.UNSAFE_componentWillMount!="function"&&typeof p.componentWillMount!="function"||(typeof p.componentWillMount=="function"&&p.componentWillMount(),typeof p.UNSAFE_componentWillMount=="function"&&p.UNSAFE_componentWillMount()),typeof p.componentDidMount=="function"&&(n.flags|=4194308)):(typeof p.componentDidMount=="function"&&(n.flags|=4194308),n.memoizedProps=i,n.memoizedState=H),p.props=i,p.state=H,p.context=D,i=I):(typeof p.componentDidMount=="function"&&(n.flags|=4194308),i=!1)}else{p=n.stateNode,_c(e,n),D=n.memoizedProps,t0=Dn(r,D),p.props=t0,s0=n.pendingProps,K=p.context,H=r.contextType,I=Qn,typeof H=="object"&&H!==null&&(I=I2(H)),S=r.getDerivedStateFromProps,(H=typeof S=="function"||typeof p.getSnapshotBeforeUpdate=="function")||typeof p.UNSAFE_componentWillReceiveProps!="function"&&typeof p.componentWillReceiveProps!="function"||(D!==s0||K!==I)&&i3(n,p,i,I),kt=!1,K=n.memoizedState,p.state=K,hr(n,i,p,l),mr();var X=n.memoizedState;D!==s0||K!==X||kt||e!==null&&e.dependencies!==null&&Us(e.dependencies)?(typeof S=="function"&&(Kc(n,r,S,i),X=n.memoizedState),(t0=kt||o3(n,r,t0,i,K,X,I)||e!==null&&e.dependencies!==null&&Us(e.dependencies))?(H||typeof p.UNSAFE_componentWillUpdate!="function"&&typeof p.componentWillUpdate!="function"||(typeof p.componentWillUpdate=="function"&&p.componentWillUpdate(i,X,I),typeof p.UNSAFE_componentWillUpdate=="function"&&p.UNSAFE_componentWillUpdate(i,X,I)),typeof p.componentDidUpdate=="function"&&(n.flags|=4),typeof p.getSnapshotBeforeUpdate=="function"&&(n.flags|=1024)):(typeof p.componentDidUpdate!="function"||D===e.memoizedProps&&K===e.memoizedState||(n.flags|=4),typeof p.getSnapshotBeforeUpdate!="function"||D===e.memoizedProps&&K===e.memoizedState||(n.flags|=1024),n.memoizedProps=i,n.memoizedState=X),p.props=i,p.state=X,p.context=I,i=t0):(typeof p.componentDidUpdate!="function"||D===e.memoizedProps&&K===e.memoizedState||(n.flags|=4),typeof p.getSnapshotBeforeUpdate!="function"||D===e.memoizedProps&&K===e.memoizedState||(n.flags|=1024),i=!1)}return p=i,so(e,n),i=(n.flags&128)!==0,p||i?(p=n.stateNode,r=i&&typeof r.getDerivedStateFromError!="function"?null:p.render(),n.flags|=1,e!==null&&i?(n.child=Aa(n,e.child,null,l),n.child=Aa(n,null,r,l)):S2(e,n,r,l),n.memoizedState=p.state,e=n.child):e=ft(e,n,l),e}function E3(e,n,r,i){return ir(),n.flags|=256,S2(e,n,r,i),n.child}var $c={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function Qc(e){return{baseLanes:e,cachePool:Au()}}function eA(e,n,r){return e=e!==null?e.childLanes&~r:0,n&&(e|=ye),e}function B3(e,n,r){var i=n.pendingProps,l=!1,p=(n.flags&128)!==0,D;if((D=p)||(D=e!==null&&e.memoizedState===null?!1:(B2.current&2)!==0),D&&(l=!0,n.flags&=-129),D=(n.flags&32)!==0,n.flags&=-33,e===null){if(W0){if(l?Pt(n):It(),W0){var S=f2,I;if(I=S){e:{for(I=S,S=Ge;I.nodeType!==8;){if(!S){S=null;break e}if(I=Ie(I.nextSibling),I===null){S=null;break e}}S=I}S!==null?(n.memoizedState={dehydrated:S,treeContext:gn!==null?{id:it,overflow:ct}:null,retryLane:536870912,hydrationErrors:null},I=Q2(18,null,null,0),I.stateNode=S,I.return=n,n.child=I,j2=n,f2=null,I=!0):I=!1}I||bn(n)}if(S=n.memoizedState,S!==null&&(S=S.dehydrated,S!==null))return LA(S)?n.lanes=32:n.lanes=536870912,null;ut(n)}return S=i.children,i=i.fallback,l?(It(),l=n.mode,S=oo({mode:"hidden",children:S},l),i=hn(i,l,r,null),S.return=n,i.return=n,S.sibling=i,n.child=S,l=n.child,l.memoizedState=Qc(r),l.childLanes=eA(e,D,r),n.memoizedState=$c,i):(Pt(n),tA(n,S))}if(I=e.memoizedState,I!==null&&(S=I.dehydrated,S!==null)){if(p)n.flags&256?(Pt(n),n.flags&=-257,n=nA(e,n,r)):n.memoizedState!==null?(It(),n.child=e.child,n.flags|=128,n=null):(It(),l=i.fallback,S=n.mode,i=oo({mode:"visible",children:i.children},S),l=hn(l,S,r,null),l.flags|=2,i.return=n,l.return=n,i.sibling=l,n.child=i,Aa(n,e.child,null,r),i=n.child,i.memoizedState=Qc(r),i.childLanes=eA(e,D,r),n.memoizedState=$c,n=l);else if(Pt(n),LA(S)){if(D=S.nextSibling&&S.nextSibling.dataset,D)var H=D.dgst;D=H,i=Error(o(419)),i.stack="",i.digest=D,cr({value:i,source:null,stack:null}),n=nA(e,n,r)}else if(v2||Ar(e,n,r,!1),D=(r&e.childLanes)!==0,v2||D){if(D=t2,D!==null&&(i=r&-r,i=(i&42)!==0?1:Wa(i),i=(i&(D.suspendedLanes|r))!==0?0:i,i!==0&&i!==I.retryLane))throw I.retryLane=i,$n(e,i),re(D,e,i),p3;S.data==="$?"||bA(),n=nA(e,n,r)}else S.data==="$?"?(n.flags|=192,n.child=e.child,n=null):(e=I.treeContext,f2=Ie(S.nextSibling),j2=n,W0=!0,yn=null,Ge=!1,e!==null&&(he[ge++]=it,he[ge++]=ct,he[ge++]=gn,it=e.id,ct=e.overflow,gn=n),n=tA(n,i.children),n.flags|=4096);return n}return l?(It(),l=i.fallback,S=n.mode,I=e.child,H=I.sibling,i=ot(I,{mode:"hidden",children:i.children}),i.subtreeFlags=I.subtreeFlags&65011712,H!==null?l=ot(H,l):(l=hn(l,S,r,null),l.flags|=2),l.return=n,i.return=n,i.sibling=l,n.child=i,i=l,l=n.child,S=e.child.memoizedState,S===null?S=Qc(r):(I=S.cachePool,I!==null?(H=E2._currentValue,I=I.parent!==H?{parent:H,pool:H}:I):I=Au(),S={baseLanes:S.baseLanes|r,cachePool:I}),l.memoizedState=S,l.childLanes=eA(e,D,r),n.memoizedState=$c,i):(Pt(n),r=e.child,e=r.sibling,r=ot(r,{mode:"visible",children:i.children}),r.return=n,r.sibling=null,e!==null&&(D=n.deletions,D===null?(n.deletions=[e],n.flags|=16):D.push(e)),n.child=r,n.memoizedState=null,r)}function tA(e,n){return n=oo({mode:"visible",children:n},e.mode),n.return=e,e.child=n}function oo(e,n){return e=Q2(22,e,null,n),e.lanes=0,e.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function nA(e,n,r){return Aa(n,e.child,null,r),e=tA(n,n.pendingProps.children),e.flags|=2,n.memoizedState=null,e}function v3(e,n,r){e.lanes|=n;var i=e.alternate;i!==null&&(i.lanes|=n),bc(e.return,n,r)}function aA(e,n,r,i,l){var p=e.memoizedState;p===null?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:i,tail:r,tailMode:l}:(p.isBackwards=n,p.rendering=null,p.renderingStartTime=0,p.last=i,p.tail=r,p.tailMode=l)}function D3(e,n,r){var i=n.pendingProps,l=i.revealOrder,p=i.tail;if(S2(e,n,i.children,r),i=B2.current,(i&2)!==0)i=i&1|2,n.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=n.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&v3(e,r,n);else if(e.tag===19)v3(e,r,n);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;e.sibling===null;){if(e.return===null||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}switch(a0(B2,i),l){case"forwards":for(r=n.child,l=null;r!==null;)e=r.alternate,e!==null&&no(e)===null&&(l=r),r=r.sibling;r=l,r===null?(l=n.child,n.child=null):(l=r.sibling,r.sibling=null),aA(n,!1,l,r,p);break;case"backwards":for(r=null,l=n.child,n.child=null;l!==null;){if(e=l.alternate,e!==null&&no(e)===null){n.child=l;break}e=l.sibling,l.sibling=r,r=l,l=e}aA(n,!0,r,null,p);break;case"together":aA(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function ft(e,n,r){if(e!==null&&(n.dependencies=e.dependencies),Ut|=n.lanes,(r&n.childLanes)===0)if(e!==null){if(Ar(e,n,r,!1),(r&n.childLanes)===0)return null}else return null;if(e!==null&&n.child!==e.child)throw Error(o(153));if(n.child!==null){for(e=n.child,r=ot(e,e.pendingProps),n.child=r,r.return=n;e.sibling!==null;)e=e.sibling,r=r.sibling=ot(e,e.pendingProps),r.return=n;r.sibling=null}return n.child}function rA(e,n){return(e.lanes&n)!==0?!0:(e=e.dependencies,!!(e!==null&&Us(e)))}function db(e,n,r){switch(n.tag){case 3:x0(n,n.stateNode.containerInfo),St(n,E2,e.memoizedState.cache),ir();break;case 27:case 5:G0(n);break;case 4:x0(n,n.stateNode.containerInfo);break;case 10:St(n,n.type,n.memoizedProps.value);break;case 13:var i=n.memoizedState;if(i!==null)return i.dehydrated!==null?(Pt(n),n.flags|=128,null):(r&n.child.childLanes)!==0?B3(e,n,r):(Pt(n),e=ft(e,n,r),e!==null?e.sibling:null);Pt(n);break;case 19:var l=(e.flags&128)!==0;if(i=(r&n.childLanes)!==0,i||(Ar(e,n,r,!1),i=(r&n.childLanes)!==0),l){if(i)return D3(e,n,r);n.flags|=128}if(l=n.memoizedState,l!==null&&(l.rendering=null,l.tail=null,l.lastEffect=null),a0(B2,B2.current),i)break;return null;case 22:case 23:return n.lanes=0,C3(e,n,r);case 24:St(n,E2,e.memoizedState.cache)}return ft(e,n,r)}function x3(e,n,r){if(e!==null)if(e.memoizedProps!==n.pendingProps)v2=!0;else{if(!rA(e,r)&&(n.flags&128)===0)return v2=!1,db(e,n,r);v2=(e.flags&131072)!==0}else v2=!1,W0&&(n.flags&1048576)!==0&&nu(n,Ms,n.index);switch(n.lanes=0,n.tag){case 16:e:{e=n.pendingProps;var i=n.elementType,l=i._init;if(i=l(i._payload),n.type=i,typeof i=="function")fc(i)?(e=Dn(i,e),n.tag=1,n=F3(null,n,i,e,r)):(n.tag=0,n=Zc(null,n,i,e,r));else{if(i!=null){if(l=i.$$typeof,l===O){n.tag=11,n=m3(null,n,i,e,r);break e}else if(l===L){n.tag=14,n=h3(null,n,i,e,r);break e}}throw n=W(i)||i,Error(o(306,n,""))}}return n;case 0:return Zc(e,n,n.type,n.pendingProps,r);case 1:return i=n.type,l=Dn(i,n.pendingProps),F3(e,n,i,l,r);case 3:e:{if(x0(n,n.stateNode.containerInfo),e===null)throw Error(o(387));i=n.pendingProps;var p=n.memoizedState;l=p.element,_c(e,n),hr(n,i,null,r);var D=n.memoizedState;if(i=D.cache,St(n,E2,i),i!==p.cache&&Fc(n,[E2],r,!0),mr(),i=D.element,p.isDehydrated)if(p={element:i,isDehydrated:!1,cache:D.cache},n.updateQueue.baseState=p,n.memoizedState=p,n.flags&256){n=E3(e,n,i,r);break e}else if(i!==l){l=pe(Error(o(424)),n),cr(l),n=E3(e,n,i,r);break e}else{switch(e=n.stateNode.containerInfo,e.nodeType){case 9:e=e.body;break;default:e=e.nodeName==="HTML"?e.ownerDocument.body:e}for(f2=Ie(e.firstChild),j2=n,W0=!0,yn=null,Ge=!0,r=r3(n,null,i,r),n.child=r;r;)r.flags=r.flags&-3|4096,r=r.sibling}else{if(ir(),i===l){n=ft(e,n,r);break e}S2(e,n,i,r)}n=n.child}return n;case 26:return so(e,n),e===null?(r=Tf(n.type,null,n.pendingProps,null))?n.memoizedState=r:W0||(r=n.type,e=n.pendingProps,i=Fo(g0.current).createElement(r),i[o0]=n,i[l0]=e,T2(i,r,e),H0(i),n.stateNode=i):n.memoizedState=Tf(n.type,e.memoizedProps,n.pendingProps,e.memoizedState),null;case 27:return G0(n),e===null&&W0&&(i=n.stateNode=wf(n.type,n.pendingProps,g0.current),j2=n,Ge=!0,l=f2,qt(n.type)?(zA=l,f2=Ie(i.firstChild)):f2=l),S2(e,n,n.pendingProps.children,r),so(e,n),e===null&&(n.flags|=4194304),n.child;case 5:return e===null&&W0&&((l=i=f2)&&(i=Mb(i,n.type,n.pendingProps,Ge),i!==null?(n.stateNode=i,j2=n,f2=Ie(i.firstChild),Ge=!1,l=!0):l=!1),l||bn(n)),G0(n),l=n.type,p=n.pendingProps,D=e!==null?e.memoizedProps:null,i=p.children,PA(l,p)?i=null:D!==null&&PA(l,D)&&(n.flags|=32),n.memoizedState!==null&&(l=Rc(e,n,ab,null,null,r),zr._currentValue=l),so(e,n),S2(e,n,i,r),n.child;case 6:return e===null&&W0&&((e=r=f2)&&(r=Ub(r,n.pendingProps,Ge),r!==null?(n.stateNode=r,j2=n,f2=null,e=!0):e=!1),e||bn(n)),null;case 13:return B3(e,n,r);case 4:return x0(n,n.stateNode.containerInfo),i=n.pendingProps,e===null?n.child=Aa(n,null,i,r):S2(e,n,i,r),n.child;case 11:return m3(e,n,n.type,n.pendingProps,r);case 7:return S2(e,n,n.pendingProps,r),n.child;case 8:return S2(e,n,n.pendingProps.children,r),n.child;case 12:return S2(e,n,n.pendingProps.children,r),n.child;case 10:return i=n.pendingProps,St(n,n.type,i.value),S2(e,n,i.children,r),n.child;case 9:return l=n.type._context,i=n.pendingProps.children,En(n),l=I2(l),i=i(l),n.flags|=1,S2(e,n,i,r),n.child;case 14:return h3(e,n,n.type,n.pendingProps,r);case 15:return g3(e,n,n.type,n.pendingProps,r);case 19:return D3(e,n,r);case 31:return i=n.pendingProps,r=n.mode,i={mode:i.mode,children:i.children},e===null?(r=oo(i,r),r.ref=n.ref,n.child=r,r.return=n,n=r):(r=ot(e.child,i),r.ref=n.ref,n.child=r,r.return=n,n=r),n;case 22:return C3(e,n,r);case 24:return En(n),i=I2(E2),e===null?(l=vc(),l===null&&(l=t2,p=Ec(),l.pooledCache=p,p.refCount++,p!==null&&(l.pooledCacheLanes|=r),l=p),n.memoizedState={parent:i,cache:l},xc(n),St(n,E2,l)):((e.lanes&r)!==0&&(_c(e,n),hr(n,null,null,r),mr()),l=e.memoizedState,p=n.memoizedState,l.parent!==i?(l={parent:i,cache:i},n.memoizedState=l,n.lanes===0&&(n.memoizedState=n.updateQueue.baseState=l),St(n,E2,i)):(i=p.cache,St(n,E2,i),i!==l.cache&&Fc(n,[E2],r,!0))),S2(e,n,n.pendingProps.children,r),n.child;case 29:throw n.pendingProps}throw Error(o(156,n.tag))}function pt(e){e.flags|=4}function _3(e,n){if(n.type!=="stylesheet"||(n.state.loading&4)!==0)e.flags&=-16777217;else if(e.flags|=16777216,!Nf(n)){if(n=Ce.current,n!==null&&((V0&4194048)===V0?qe!==null:(V0&62914560)!==V0&&(V0&536870912)===0||n!==qe))throw fr=Dc,lu;e.flags|=8192}}function io(e,n){n!==null&&(e.flags|=4),e.flags&16384&&(n=e.tag!==22?Bs():536870912,e.lanes|=n,fa|=n)}function Br(e,n){if(!W0)switch(e.tailMode){case"hidden":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var i=null;r!==null;)r.alternate!==null&&(i=r),r=r.sibling;i===null?n||e.tail===null?e.tail=null:e.tail.sibling=null:i.sibling=null}}function d2(e){var n=e.alternate!==null&&e.alternate.child===e.child,r=0,i=0;if(n)for(var l=e.child;l!==null;)r|=l.lanes|l.childLanes,i|=l.subtreeFlags&65011712,i|=l.flags&65011712,l.return=e,l=l.sibling;else for(l=e.child;l!==null;)r|=l.lanes|l.childLanes,i|=l.subtreeFlags,i|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=i,e.childLanes=r,n}function ub(e,n,r){var i=n.pendingProps;switch(gc(n),n.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return d2(n),null;case 1:return d2(n),null;case 3:return r=n.stateNode,i=null,e!==null&&(i=e.memoizedState.cache),n.memoizedState.cache!==i&&(n.flags|=2048),lt(E2),R0(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(or(n)?pt(n):e===null||e.memoizedState.isDehydrated&&(n.flags&256)===0||(n.flags|=1024,su())),d2(n),null;case 26:return r=n.memoizedState,e===null?(pt(n),r!==null?(d2(n),_3(n,r)):(d2(n),n.flags&=-16777217)):r?r!==e.memoizedState?(pt(n),d2(n),_3(n,r)):(d2(n),n.flags&=-16777217):(e.memoizedProps!==i&&pt(n),d2(n),n.flags&=-16777217),null;case 27:u2(n),r=g0.current;var l=n.type;if(e!==null&&n.stateNode!=null)e.memoizedProps!==i&&pt(n);else{if(!i){if(n.stateNode===null)throw Error(o(166));return d2(n),null}e=f0.current,or(n)?au(n):(e=wf(l,i,r),n.stateNode=e,pt(n))}return d2(n),null;case 5:if(u2(n),r=n.type,e!==null&&n.stateNode!=null)e.memoizedProps!==i&&pt(n);else{if(!i){if(n.stateNode===null)throw Error(o(166));return d2(n),null}if(e=f0.current,or(n))au(n);else{switch(l=Fo(g0.current),e){case 1:e=l.createElementNS("http://www.w3.org/2000/svg",r);break;case 2:e=l.createElementNS("http://www.w3.org/1998/Math/MathML",r);break;default:switch(r){case"svg":e=l.createElementNS("http://www.w3.org/2000/svg",r);break;case"math":e=l.createElementNS("http://www.w3.org/1998/Math/MathML",r);break;case"script":e=l.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e=typeof i.is=="string"?l.createElement("select",{is:i.is}):l.createElement("select"),i.multiple?e.multiple=!0:i.size&&(e.size=i.size);break;default:e=typeof i.is=="string"?l.createElement(r,{is:i.is}):l.createElement(r)}}e[o0]=n,e[l0]=i;e:for(l=n.child;l!==null;){if(l.tag===5||l.tag===6)e.appendChild(l.stateNode);else if(l.tag!==4&&l.tag!==27&&l.child!==null){l.child.return=l,l=l.child;continue}if(l===n)break e;for(;l.sibling===null;){if(l.return===null||l.return===n)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}n.stateNode=e;e:switch(T2(e,r,i),r){case"button":case"input":case"select":case"textarea":e=!!i.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&pt(n)}}return d2(n),n.flags&=-16777217,null;case 6:if(e&&n.stateNode!=null)e.memoizedProps!==i&&pt(n);else{if(typeof i!="string"&&n.stateNode===null)throw Error(o(166));if(e=g0.current,or(n)){if(e=n.stateNode,r=n.memoizedProps,i=null,l=j2,l!==null)switch(l.tag){case 27:case 5:i=l.memoizedProps}e[o0]=n,e=!!(e.nodeValue===r||i!==null&&i.suppressHydrationWarning===!0||Ff(e.nodeValue,r)),e||bn(n)}else e=Fo(e).createTextNode(i),e[o0]=n,n.stateNode=e}return d2(n),null;case 13:if(i=n.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(l=or(n),i!==null&&i.dehydrated!==null){if(e===null){if(!l)throw Error(o(318));if(l=n.memoizedState,l=l!==null?l.dehydrated:null,!l)throw Error(o(317));l[o0]=n}else ir(),(n.flags&128)===0&&(n.memoizedState=null),n.flags|=4;d2(n),l=!1}else l=su(),e!==null&&e.memoizedState!==null&&(e.memoizedState.hydrationErrors=l),l=!0;if(!l)return n.flags&256?(ut(n),n):(ut(n),null)}if(ut(n),(n.flags&128)!==0)return n.lanes=r,n;if(r=i!==null,e=e!==null&&e.memoizedState!==null,r){i=n.child,l=null,i.alternate!==null&&i.alternate.memoizedState!==null&&i.alternate.memoizedState.cachePool!==null&&(l=i.alternate.memoizedState.cachePool.pool);var p=null;i.memoizedState!==null&&i.memoizedState.cachePool!==null&&(p=i.memoizedState.cachePool.pool),p!==l&&(i.flags|=2048)}return r!==e&&r&&(n.child.flags|=8192),io(n,n.updateQueue),d2(n),null;case 4:return R0(),e===null&&SA(n.stateNode.containerInfo),d2(n),null;case 10:return lt(n.type),d2(n),null;case 19:if(e0(B2),l=n.memoizedState,l===null)return d2(n),null;if(i=(n.flags&128)!==0,p=l.rendering,p===null)if(i)Br(l,!1);else{if(p2!==0||e!==null&&(e.flags&128)!==0)for(e=n.child;e!==null;){if(p=no(e),p!==null){for(n.flags|=128,Br(l,!1),e=p.updateQueue,n.updateQueue=e,io(n,e),n.subtreeFlags=0,e=r,r=n.child;r!==null;)tu(r,e),r=r.sibling;return a0(B2,B2.current&1|2),n.child}e=e.sibling}l.tail!==null&&M2()>lo&&(n.flags|=128,i=!0,Br(l,!1),n.lanes=4194304)}else{if(!i)if(e=no(p),e!==null){if(n.flags|=128,i=!0,e=e.updateQueue,n.updateQueue=e,io(n,e),Br(l,!0),l.tail===null&&l.tailMode==="hidden"&&!p.alternate&&!W0)return d2(n),null}else 2*M2()-l.renderingStartTime>lo&&r!==536870912&&(n.flags|=128,i=!0,Br(l,!1),n.lanes=4194304);l.isBackwards?(p.sibling=n.child,n.child=p):(e=l.last,e!==null?e.sibling=p:n.child=p,l.last=p)}return l.tail!==null?(n=l.tail,l.rendering=n,l.tail=n.sibling,l.renderingStartTime=M2(),n.sibling=null,e=B2.current,a0(B2,i?e&1|2:e&1),n):(d2(n),null);case 22:case 23:return ut(n),Tc(),i=n.memoizedState!==null,e!==null?e.memoizedState!==null!==i&&(n.flags|=8192):i&&(n.flags|=8192),i?(r&536870912)!==0&&(n.flags&128)===0&&(d2(n),n.subtreeFlags&6&&(n.flags|=8192)):d2(n),r=n.updateQueue,r!==null&&io(n,r.retryQueue),r=null,e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(r=e.memoizedState.cachePool.pool),i=null,n.memoizedState!==null&&n.memoizedState.cachePool!==null&&(i=n.memoizedState.cachePool.pool),i!==r&&(n.flags|=2048),e!==null&&e0(Bn),null;case 24:return r=null,e!==null&&(r=e.memoizedState.cache),n.memoizedState.cache!==r&&(n.flags|=2048),lt(E2),d2(n),null;case 25:return null;case 30:return null}throw Error(o(156,n.tag))}function fb(e,n){switch(gc(n),n.tag){case 1:return e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 3:return lt(E2),R0(),e=n.flags,(e&65536)!==0&&(e&128)===0?(n.flags=e&-65537|128,n):null;case 26:case 27:case 5:return u2(n),null;case 13:if(ut(n),e=n.memoizedState,e!==null&&e.dehydrated!==null){if(n.alternate===null)throw Error(o(340));ir()}return e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 19:return e0(B2),null;case 4:return R0(),null;case 10:return lt(n.type),null;case 22:case 23:return ut(n),Tc(),e!==null&&e0(Bn),e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 24:return lt(E2),null;case 25:return null;default:return null}}function w3(e,n){switch(gc(n),n.tag){case 3:lt(E2),R0();break;case 26:case 27:case 5:u2(n);break;case 4:R0();break;case 13:ut(n);break;case 19:e0(B2);break;case 10:lt(n.type);break;case 22:case 23:ut(n),Tc(),e!==null&&e0(Bn);break;case 24:lt(E2)}}function vr(e,n){try{var r=n.updateQueue,i=r!==null?r.lastEffect:null;if(i!==null){var l=i.next;r=l;do{if((r.tag&e)===e){i=void 0;var p=r.create,D=r.inst;i=p(),D.destroy=i}r=r.next}while(r!==l)}}catch(S){e2(n,n.return,S)}}function Nt(e,n,r){try{var i=n.updateQueue,l=i!==null?i.lastEffect:null;if(l!==null){var p=l.next;i=p;do{if((i.tag&e)===e){var D=i.inst,S=D.destroy;if(S!==void 0){D.destroy=void 0,l=n;var I=r,H=S;try{H()}catch(t0){e2(l,I,t0)}}}i=i.next}while(i!==p)}}catch(t0){e2(n,n.return,t0)}}function S3(e){var n=e.updateQueue;if(n!==null){var r=e.stateNode;try{hu(n,r)}catch(i){e2(e,e.return,i)}}}function k3(e,n,r){r.props=Dn(e.type,e.memoizedProps),r.state=e.memoizedState;try{r.componentWillUnmount()}catch(i){e2(e,n,i)}}function Dr(e,n){try{var r=e.ref;if(r!==null){switch(e.tag){case 26:case 27:case 5:var i=e.stateNode;break;case 30:i=e.stateNode;break;default:i=e.stateNode}typeof r=="function"?e.refCleanup=r(i):r.current=i}}catch(l){e2(e,n,l)}}function He(e,n){var r=e.ref,i=e.refCleanup;if(r!==null)if(typeof i=="function")try{i()}catch(l){e2(e,n,l)}finally{e.refCleanup=null,e=e.alternate,e!=null&&(e.refCleanup=null)}else if(typeof r=="function")try{r(null)}catch(l){e2(e,n,l)}else r.current=null}function T3(e){var n=e.type,r=e.memoizedProps,i=e.stateNode;try{e:switch(n){case"button":case"input":case"select":case"textarea":r.autoFocus&&i.focus();break e;case"img":r.src?i.src=r.src:r.srcSet&&(i.srcset=r.srcSet)}}catch(l){e2(e,e.return,l)}}function sA(e,n,r){try{var i=e.stateNode;Pb(i,e.type,r,n),i[l0]=n}catch(l){e2(e,e.return,l)}}function O3(e){return e.tag===5||e.tag===3||e.tag===26||e.tag===27&&qt(e.type)||e.tag===4}function oA(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||O3(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.tag===27&&qt(e.type)||e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function iA(e,n,r){var i=e.tag;if(i===5||i===6)e=e.stateNode,n?(r.nodeType===9?r.body:r.nodeName==="HTML"?r.ownerDocument.body:r).insertBefore(e,n):(n=r.nodeType===9?r.body:r.nodeName==="HTML"?r.ownerDocument.body:r,n.appendChild(e),r=r._reactRootContainer,r!=null||n.onclick!==null||(n.onclick=bo));else if(i!==4&&(i===27&&qt(e.type)&&(r=e.stateNode,n=null),e=e.child,e!==null))for(iA(e,n,r),e=e.sibling;e!==null;)iA(e,n,r),e=e.sibling}function co(e,n,r){var i=e.tag;if(i===5||i===6)e=e.stateNode,n?r.insertBefore(e,n):r.appendChild(e);else if(i!==4&&(i===27&&qt(e.type)&&(r=e.stateNode),e=e.child,e!==null))for(co(e,n,r),e=e.sibling;e!==null;)co(e,n,r),e=e.sibling}function R3(e){var n=e.stateNode,r=e.memoizedProps;try{for(var i=e.type,l=n.attributes;l.length;)n.removeAttributeNode(l[0]);T2(n,i,r),n[o0]=e,n[l0]=r}catch(p){e2(e,e.return,p)}}var mt=!1,g2=!1,cA=!1,P3=typeof WeakSet=="function"?WeakSet:Set,D2=null;function pb(e,n){if(e=e.containerInfo,OA=_o,e=H6(e),oc(e)){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{r=(r=e.ownerDocument)&&r.defaultView||window;var i=r.getSelection&&r.getSelection();if(i&&i.rangeCount!==0){r=i.anchorNode;var l=i.anchorOffset,p=i.focusNode;i=i.focusOffset;try{r.nodeType,p.nodeType}catch{r=null;break e}var D=0,S=-1,I=-1,H=0,t0=0,s0=e,K=null;t:for(;;){for(var X;s0!==r||l!==0&&s0.nodeType!==3||(S=D+l),s0!==p||i!==0&&s0.nodeType!==3||(I=D+i),s0.nodeType===3&&(D+=s0.nodeValue.length),(X=s0.firstChild)!==null;)K=s0,s0=X;for(;;){if(s0===e)break t;if(K===r&&++H===l&&(S=D),K===p&&++t0===i&&(I=D),(X=s0.nextSibling)!==null)break;s0=K,K=s0.parentNode}s0=X}r=S===-1||I===-1?null:{start:S,end:I}}else r=null}r=r||{start:0,end:0}}else r=null;for(RA={focusedElem:e,selectionRange:r},_o=!1,D2=n;D2!==null;)if(n=D2,e=n.child,(n.subtreeFlags&1024)!==0&&e!==null)e.return=n,D2=e;else for(;D2!==null;){switch(n=D2,p=n.alternate,e=n.flags,n.tag){case 0:break;case 11:case 15:break;case 1:if((e&1024)!==0&&p!==null){e=void 0,r=n,l=p.memoizedProps,p=p.memoizedState,i=r.stateNode;try{var S0=Dn(r.type,l,r.elementType===r.type);e=i.getSnapshotBeforeUpdate(S0,p),i.__reactInternalSnapshotBeforeUpdate=e}catch(D0){e2(r,r.return,D0)}}break;case 3:if((e&1024)!==0){if(e=n.stateNode.containerInfo,r=e.nodeType,r===9)NA(e);else if(r===1)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":NA(e);break;default:e.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((e&1024)!==0)throw Error(o(163))}if(e=n.sibling,e!==null){e.return=n.return,D2=e;break}D2=n.return}}function I3(e,n,r){var i=r.flags;switch(r.tag){case 0:case 11:case 15:Lt(e,r),i&4&&vr(5,r);break;case 1:if(Lt(e,r),i&4)if(e=r.stateNode,n===null)try{e.componentDidMount()}catch(D){e2(r,r.return,D)}else{var l=Dn(r.type,n.memoizedProps);n=n.memoizedState;try{e.componentDidUpdate(l,n,e.__reactInternalSnapshotBeforeUpdate)}catch(D){e2(r,r.return,D)}}i&64&&S3(r),i&512&&Dr(r,r.return);break;case 3:if(Lt(e,r),i&64&&(e=r.updateQueue,e!==null)){if(n=null,r.child!==null)switch(r.child.tag){case 27:case 5:n=r.child.stateNode;break;case 1:n=r.child.stateNode}try{hu(e,n)}catch(D){e2(r,r.return,D)}}break;case 27:n===null&&i&4&&R3(r);case 26:case 5:Lt(e,r),n===null&&i&4&&T3(r),i&512&&Dr(r,r.return);break;case 12:Lt(e,r);break;case 13:Lt(e,r),i&4&&z3(e,r),i&64&&(e=r.memoizedState,e!==null&&(e=e.dehydrated,e!==null&&(r=Bb.bind(null,r),jb(e,r))));break;case 22:if(i=r.memoizedState!==null||mt,!i){n=n!==null&&n.memoizedState!==null||g2,l=mt;var p=g2;mt=i,(g2=n)&&!p?zt(e,r,(r.subtreeFlags&8772)!==0):Lt(e,r),mt=l,g2=p}break;case 30:break;default:Lt(e,r)}}function N3(e){var n=e.alternate;n!==null&&(e.alternate=null,N3(n)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(n=e.stateNode,n!==null&&y0(n)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var c2=null,J2=!1;function ht(e,n,r){for(r=r.child;r!==null;)L3(e,n,r),r=r.sibling}function L3(e,n,r){if(A2&&typeof A2.onCommitFiberUnmount=="function")try{A2.onCommitFiberUnmount(H2,r)}catch{}switch(r.tag){case 26:g2||He(r,n),ht(e,n,r),r.memoizedState?r.memoizedState.count--:r.stateNode&&(r=r.stateNode,r.parentNode.removeChild(r));break;case 27:g2||He(r,n);var i=c2,l=J2;qt(r.type)&&(c2=r.stateNode,J2=!1),ht(e,n,r),Pr(r.stateNode),c2=i,J2=l;break;case 5:g2||He(r,n);case 6:if(i=c2,l=J2,c2=null,ht(e,n,r),c2=i,J2=l,c2!==null)if(J2)try{(c2.nodeType===9?c2.body:c2.nodeName==="HTML"?c2.ownerDocument.body:c2).removeChild(r.stateNode)}catch(p){e2(r,n,p)}else try{c2.removeChild(r.stateNode)}catch(p){e2(r,n,p)}break;case 18:c2!==null&&(J2?(e=c2,xf(e.nodeType===9?e.body:e.nodeName==="HTML"?e.ownerDocument.body:e,r.stateNode),Vr(e)):xf(c2,r.stateNode));break;case 4:i=c2,l=J2,c2=r.stateNode.containerInfo,J2=!0,ht(e,n,r),c2=i,J2=l;break;case 0:case 11:case 14:case 15:g2||Nt(2,r,n),g2||Nt(4,r,n),ht(e,n,r);break;case 1:g2||(He(r,n),i=r.stateNode,typeof i.componentWillUnmount=="function"&&k3(r,n,i)),ht(e,n,r);break;case 21:ht(e,n,r);break;case 22:g2=(i=g2)||r.memoizedState!==null,ht(e,n,r),g2=i;break;default:ht(e,n,r)}}function z3(e,n){if(n.memoizedState===null&&(e=n.alternate,e!==null&&(e=e.memoizedState,e!==null&&(e=e.dehydrated,e!==null))))try{Vr(e)}catch(r){e2(n,n.return,r)}}function mb(e){switch(e.tag){case 13:case 19:var n=e.stateNode;return n===null&&(n=e.stateNode=new P3),n;case 22:return e=e.stateNode,n=e._retryCache,n===null&&(n=e._retryCache=new P3),n;default:throw Error(o(435,e.tag))}}function AA(e,n){var r=mb(e);n.forEach(function(i){var l=vb.bind(null,e,i);r.has(i)||(r.add(i),i.then(l,l))})}function ee(e,n){var r=n.deletions;if(r!==null)for(var i=0;i<r.length;i++){var l=r[i],p=e,D=n,S=D;e:for(;S!==null;){switch(S.tag){case 27:if(qt(S.type)){c2=S.stateNode,J2=!1;break e}break;case 5:c2=S.stateNode,J2=!1;break e;case 3:case 4:c2=S.stateNode.containerInfo,J2=!0;break e}S=S.return}if(c2===null)throw Error(o(160));L3(p,D,l),c2=null,J2=!1,p=l.alternate,p!==null&&(p.return=null),l.return=null}if(n.subtreeFlags&13878)for(n=n.child;n!==null;)M3(n,e),n=n.sibling}var Pe=null;function M3(e,n){var r=e.alternate,i=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:ee(n,e),te(e),i&4&&(Nt(3,e,e.return),vr(3,e),Nt(5,e,e.return));break;case 1:ee(n,e),te(e),i&512&&(g2||r===null||He(r,r.return)),i&64&&mt&&(e=e.updateQueue,e!==null&&(i=e.callbacks,i!==null&&(r=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=r===null?i:r.concat(i))));break;case 26:var l=Pe;if(ee(n,e),te(e),i&512&&(g2||r===null||He(r,r.return)),i&4){var p=r!==null?r.memoizedState:null;if(i=e.memoizedState,r===null)if(i===null)if(e.stateNode===null){e:{i=e.type,r=e.memoizedProps,l=l.ownerDocument||l;t:switch(i){case"title":p=l.getElementsByTagName("title")[0],(!p||p[w0]||p[o0]||p.namespaceURI==="http://www.w3.org/2000/svg"||p.hasAttribute("itemprop"))&&(p=l.createElement(i),l.head.insertBefore(p,l.querySelector("head > title"))),T2(p,i,r),p[o0]=e,H0(p),i=p;break e;case"link":var D=Pf("link","href",l).get(i+(r.href||""));if(D){for(var S=0;S<D.length;S++)if(p=D[S],p.getAttribute("href")===(r.href==null||r.href===""?null:r.href)&&p.getAttribute("rel")===(r.rel==null?null:r.rel)&&p.getAttribute("title")===(r.title==null?null:r.title)&&p.getAttribute("crossorigin")===(r.crossOrigin==null?null:r.crossOrigin)){D.splice(S,1);break t}}p=l.createElement(i),T2(p,i,r),l.head.appendChild(p);break;case"meta":if(D=Pf("meta","content",l).get(i+(r.content||""))){for(S=0;S<D.length;S++)if(p=D[S],p.getAttribute("content")===(r.content==null?null:""+r.content)&&p.getAttribute("name")===(r.name==null?null:r.name)&&p.getAttribute("property")===(r.property==null?null:r.property)&&p.getAttribute("http-equiv")===(r.httpEquiv==null?null:r.httpEquiv)&&p.getAttribute("charset")===(r.charSet==null?null:r.charSet)){D.splice(S,1);break t}}p=l.createElement(i),T2(p,i,r),l.head.appendChild(p);break;default:throw Error(o(468,i))}p[o0]=e,H0(p),i=p}e.stateNode=i}else If(l,e.type,e.stateNode);else e.stateNode=Rf(l,i,e.memoizedProps);else p!==i?(p===null?r.stateNode!==null&&(r=r.stateNode,r.parentNode.removeChild(r)):p.count--,i===null?If(l,e.type,e.stateNode):Rf(l,i,e.memoizedProps)):i===null&&e.stateNode!==null&&sA(e,e.memoizedProps,r.memoizedProps)}break;case 27:ee(n,e),te(e),i&512&&(g2||r===null||He(r,r.return)),r!==null&&i&4&&sA(e,e.memoizedProps,r.memoizedProps);break;case 5:if(ee(n,e),te(e),i&512&&(g2||r===null||He(r,r.return)),e.flags&32){l=e.stateNode;try{Hn(l,"")}catch(X){e2(e,e.return,X)}}i&4&&e.stateNode!=null&&(l=e.memoizedProps,sA(e,l,r!==null?r.memoizedProps:l)),i&1024&&(cA=!0);break;case 6:if(ee(n,e),te(e),i&4){if(e.stateNode===null)throw Error(o(162));i=e.memoizedProps,r=e.stateNode;try{r.nodeValue=i}catch(X){e2(e,e.return,X)}}break;case 3:if(vo=null,l=Pe,Pe=Eo(n.containerInfo),ee(n,e),Pe=l,te(e),i&4&&r!==null&&r.memoizedState.isDehydrated)try{Vr(n.containerInfo)}catch(X){e2(e,e.return,X)}cA&&(cA=!1,U3(e));break;case 4:i=Pe,Pe=Eo(e.stateNode.containerInfo),ee(n,e),te(e),Pe=i;break;case 12:ee(n,e),te(e);break;case 13:ee(n,e),te(e),e.child.flags&8192&&e.memoizedState!==null!=(r!==null&&r.memoizedState!==null)&&(mA=M2()),i&4&&(i=e.updateQueue,i!==null&&(e.updateQueue=null,AA(e,i)));break;case 22:l=e.memoizedState!==null;var I=r!==null&&r.memoizedState!==null,H=mt,t0=g2;if(mt=H||l,g2=t0||I,ee(n,e),g2=t0,mt=H,te(e),i&8192)e:for(n=e.stateNode,n._visibility=l?n._visibility&-2:n._visibility|1,l&&(r===null||I||mt||g2||xn(e)),r=null,n=e;;){if(n.tag===5||n.tag===26){if(r===null){I=r=n;try{if(p=I.stateNode,l)D=p.style,typeof D.setProperty=="function"?D.setProperty("display","none","important"):D.display="none";else{S=I.stateNode;var s0=I.memoizedProps.style,K=s0!=null&&s0.hasOwnProperty("display")?s0.display:null;S.style.display=K==null||typeof K=="boolean"?"":(""+K).trim()}}catch(X){e2(I,I.return,X)}}}else if(n.tag===6){if(r===null){I=n;try{I.stateNode.nodeValue=l?"":I.memoizedProps}catch(X){e2(I,I.return,X)}}}else if((n.tag!==22&&n.tag!==23||n.memoizedState===null||n===e)&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break e;for(;n.sibling===null;){if(n.return===null||n.return===e)break e;r===n&&(r=null),n=n.return}r===n&&(r=null),n.sibling.return=n.return,n=n.sibling}i&4&&(i=e.updateQueue,i!==null&&(r=i.retryQueue,r!==null&&(i.retryQueue=null,AA(e,r))));break;case 19:ee(n,e),te(e),i&4&&(i=e.updateQueue,i!==null&&(e.updateQueue=null,AA(e,i)));break;case 30:break;case 21:break;default:ee(n,e),te(e)}}function te(e){var n=e.flags;if(n&2){try{for(var r,i=e.return;i!==null;){if(O3(i)){r=i;break}i=i.return}if(r==null)throw Error(o(160));switch(r.tag){case 27:var l=r.stateNode,p=oA(e);co(e,p,l);break;case 5:var D=r.stateNode;r.flags&32&&(Hn(D,""),r.flags&=-33);var S=oA(e);co(e,S,D);break;case 3:case 4:var I=r.stateNode.containerInfo,H=oA(e);iA(e,H,I);break;default:throw Error(o(161))}}catch(t0){e2(e,e.return,t0)}e.flags&=-3}n&4096&&(e.flags&=-4097)}function U3(e){if(e.subtreeFlags&1024)for(e=e.child;e!==null;){var n=e;U3(n),n.tag===5&&n.flags&1024&&n.stateNode.reset(),e=e.sibling}}function Lt(e,n){if(n.subtreeFlags&8772)for(n=n.child;n!==null;)I3(e,n.alternate,n),n=n.sibling}function xn(e){for(e=e.child;e!==null;){var n=e;switch(n.tag){case 0:case 11:case 14:case 15:Nt(4,n,n.return),xn(n);break;case 1:He(n,n.return);var r=n.stateNode;typeof r.componentWillUnmount=="function"&&k3(n,n.return,r),xn(n);break;case 27:Pr(n.stateNode);case 26:case 5:He(n,n.return),xn(n);break;case 22:n.memoizedState===null&&xn(n);break;case 30:xn(n);break;default:xn(n)}e=e.sibling}}function zt(e,n,r){for(r=r&&(n.subtreeFlags&8772)!==0,n=n.child;n!==null;){var i=n.alternate,l=e,p=n,D=p.flags;switch(p.tag){case 0:case 11:case 15:zt(l,p,r),vr(4,p);break;case 1:if(zt(l,p,r),i=p,l=i.stateNode,typeof l.componentDidMount=="function")try{l.componentDidMount()}catch(H){e2(i,i.return,H)}if(i=p,l=i.updateQueue,l!==null){var S=i.stateNode;try{var I=l.shared.hiddenCallbacks;if(I!==null)for(l.shared.hiddenCallbacks=null,l=0;l<I.length;l++)mu(I[l],S)}catch(H){e2(i,i.return,H)}}r&&D&64&&S3(p),Dr(p,p.return);break;case 27:R3(p);case 26:case 5:zt(l,p,r),r&&i===null&&D&4&&T3(p),Dr(p,p.return);break;case 12:zt(l,p,r);break;case 13:zt(l,p,r),r&&D&4&&z3(l,p);break;case 22:p.memoizedState===null&&zt(l,p,r),Dr(p,p.return);break;case 30:break;default:zt(l,p,r)}n=n.sibling}}function lA(e,n){var r=null;e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(r=e.memoizedState.cachePool.pool),e=null,n.memoizedState!==null&&n.memoizedState.cachePool!==null&&(e=n.memoizedState.cachePool.pool),e!==r&&(e!=null&&e.refCount++,r!=null&&lr(r))}function dA(e,n){e=null,n.alternate!==null&&(e=n.alternate.memoizedState.cache),n=n.memoizedState.cache,n!==e&&(n.refCount++,e!=null&&lr(e))}function Ye(e,n,r,i){if(n.subtreeFlags&10256)for(n=n.child;n!==null;)j3(e,n,r,i),n=n.sibling}function j3(e,n,r,i){var l=n.flags;switch(n.tag){case 0:case 11:case 15:Ye(e,n,r,i),l&2048&&vr(9,n);break;case 1:Ye(e,n,r,i);break;case 3:Ye(e,n,r,i),l&2048&&(e=null,n.alternate!==null&&(e=n.alternate.memoizedState.cache),n=n.memoizedState.cache,n!==e&&(n.refCount++,e!=null&&lr(e)));break;case 12:if(l&2048){Ye(e,n,r,i),e=n.stateNode;try{var p=n.memoizedProps,D=p.id,S=p.onPostCommit;typeof S=="function"&&S(D,n.alternate===null?"mount":"update",e.passiveEffectDuration,-0)}catch(I){e2(n,n.return,I)}}else Ye(e,n,r,i);break;case 13:Ye(e,n,r,i);break;case 23:break;case 22:p=n.stateNode,D=n.alternate,n.memoizedState!==null?p._visibility&2?Ye(e,n,r,i):xr(e,n):p._visibility&2?Ye(e,n,r,i):(p._visibility|=2,la(e,n,r,i,(n.subtreeFlags&10256)!==0)),l&2048&&lA(D,n);break;case 24:Ye(e,n,r,i),l&2048&&dA(n.alternate,n);break;default:Ye(e,n,r,i)}}function la(e,n,r,i,l){for(l=l&&(n.subtreeFlags&10256)!==0,n=n.child;n!==null;){var p=e,D=n,S=r,I=i,H=D.flags;switch(D.tag){case 0:case 11:case 15:la(p,D,S,I,l),vr(8,D);break;case 23:break;case 22:var t0=D.stateNode;D.memoizedState!==null?t0._visibility&2?la(p,D,S,I,l):xr(p,D):(t0._visibility|=2,la(p,D,S,I,l)),l&&H&2048&&lA(D.alternate,D);break;case 24:la(p,D,S,I,l),l&&H&2048&&dA(D.alternate,D);break;default:la(p,D,S,I,l)}n=n.sibling}}function xr(e,n){if(n.subtreeFlags&10256)for(n=n.child;n!==null;){var r=e,i=n,l=i.flags;switch(i.tag){case 22:xr(r,i),l&2048&&lA(i.alternate,i);break;case 24:xr(r,i),l&2048&&dA(i.alternate,i);break;default:xr(r,i)}n=n.sibling}}var _r=8192;function da(e){if(e.subtreeFlags&_r)for(e=e.child;e!==null;)V3(e),e=e.sibling}function V3(e){switch(e.tag){case 26:da(e),e.flags&_r&&e.memoizedState!==null&&eF(Pe,e.memoizedState,e.memoizedProps);break;case 5:da(e);break;case 3:case 4:var n=Pe;Pe=Eo(e.stateNode.containerInfo),da(e),Pe=n;break;case 22:e.memoizedState===null&&(n=e.alternate,n!==null&&n.memoizedState!==null?(n=_r,_r=16777216,da(e),_r=n):da(e));break;default:da(e)}}function G3(e){var n=e.alternate;if(n!==null&&(e=n.child,e!==null)){n.child=null;do n=e.sibling,e.sibling=null,e=n;while(e!==null)}}function wr(e){var n=e.deletions;if((e.flags&16)!==0){if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];D2=i,H3(i,e)}G3(e)}if(e.subtreeFlags&10256)for(e=e.child;e!==null;)q3(e),e=e.sibling}function q3(e){switch(e.tag){case 0:case 11:case 15:wr(e),e.flags&2048&&Nt(9,e,e.return);break;case 3:wr(e);break;case 12:wr(e);break;case 22:var n=e.stateNode;e.memoizedState!==null&&n._visibility&2&&(e.return===null||e.return.tag!==13)?(n._visibility&=-3,Ao(e)):wr(e);break;default:wr(e)}}function Ao(e){var n=e.deletions;if((e.flags&16)!==0){if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];D2=i,H3(i,e)}G3(e)}for(e=e.child;e!==null;){switch(n=e,n.tag){case 0:case 11:case 15:Nt(8,n,n.return),Ao(n);break;case 22:r=n.stateNode,r._visibility&2&&(r._visibility&=-3,Ao(n));break;default:Ao(n)}e=e.sibling}}function H3(e,n){for(;D2!==null;){var r=D2;switch(r.tag){case 0:case 11:case 15:Nt(8,r,n);break;case 23:case 22:if(r.memoizedState!==null&&r.memoizedState.cachePool!==null){var i=r.memoizedState.cachePool.pool;i!=null&&i.refCount++}break;case 24:lr(r.memoizedState.cache)}if(i=r.child,i!==null)i.return=r,D2=i;else e:for(r=e;D2!==null;){i=D2;var l=i.sibling,p=i.return;if(N3(i),i===r){D2=null;break e}if(l!==null){l.return=p,D2=l;break e}D2=p}}}var hb={getCacheForType:function(e){var n=I2(E2),r=n.data.get(e);return r===void 0&&(r=e(),n.data.set(e,r)),r}},gb=typeof WeakMap=="function"?WeakMap:Map,X0=0,t2=null,M0=null,V0=0,J0=0,ne=null,Mt=!1,ua=!1,uA=!1,gt=0,p2=0,Ut=0,_n=0,fA=0,ye=0,fa=0,Sr=null,Z2=null,pA=!1,mA=0,lo=1/0,uo=null,jt=null,k2=0,Vt=null,pa=null,ma=0,hA=0,gA=null,Y3=null,kr=0,CA=null;function ae(){if((X0&2)!==0&&V0!==0)return V0&-V0;if(z.T!==null){var e=na;return e!==0?e:DA()}return N()}function W3(){ye===0&&(ye=(V0&536870912)===0||W0?Vn():536870912);var e=Ce.current;return e!==null&&(e.flags|=32),ye}function re(e,n,r){(e===t2&&(J0===2||J0===9)||e.cancelPendingCommit!==null)&&(ha(e,0),Gt(e,V0,ye,!1)),An(e,r),((X0&2)===0||e!==t2)&&(e===t2&&((X0&2)===0&&(_n|=r),p2===4&&Gt(e,V0,ye,!1)),We(e))}function K3(e,n,r){if((X0&6)!==0)throw Error(o(327));var i=!r&&(n&124)===0&&(n&e.expiredLanes)===0||Ve(e,n),l=i?bb(e,n):FA(e,n,!0),p=i;do{if(l===0){ua&&!i&&Gt(e,n,0,!1);break}else{if(r=e.current.alternate,p&&!Cb(r)){l=FA(e,n,!1),p=!1;continue}if(l===2){if(p=n,e.errorRecoveryDisabledLanes&p)var D=0;else D=e.pendingLanes&-536870913,D=D!==0?D:D&536870912?536870912:0;if(D!==0){n=D;e:{var S=e;l=Sr;var I=S.current.memoizedState.isDehydrated;if(I&&(ha(S,D).flags|=256),D=FA(S,D,!1),D!==2){if(uA&&!I){S.errorRecoveryDisabledLanes|=p,_n|=p,l=4;break e}p=Z2,Z2=l,p!==null&&(Z2===null?Z2=p:Z2.push.apply(Z2,p))}l=D}if(p=!1,l!==2)continue}}if(l===1){ha(e,0),Gt(e,n,0,!0);break}e:{switch(i=e,p=l,p){case 0:case 1:throw Error(o(345));case 4:if((n&4194048)!==n)break;case 6:Gt(i,n,ye,!Mt);break e;case 2:Z2=null;break;case 3:case 5:break;default:throw Error(o(329))}if((n&62914560)===n&&(l=mA+300-M2(),10<l)){if(Gt(i,n,ye,!Mt),cn(i,0,!0)!==0)break e;i.timeoutHandle=vf(X3.bind(null,i,r,Z2,uo,pA,n,ye,_n,fa,Mt,p,2,-0,0),l);break e}X3(i,r,Z2,uo,pA,n,ye,_n,fa,Mt,p,0,-0,0)}}break}while(!0);We(e)}function X3(e,n,r,i,l,p,D,S,I,H,t0,s0,K,X){if(e.timeoutHandle=-1,s0=n.subtreeFlags,(s0&8192||(s0&16785408)===16785408)&&(Lr={stylesheets:null,count:0,unsuspend:Qb},V3(n),s0=tF(),s0!==null)){e.cancelPendingCommit=s0(nf.bind(null,e,n,p,r,i,l,D,S,I,t0,1,K,X)),Gt(e,p,D,!H);return}nf(e,n,p,r,i,l,D,S,I)}function Cb(e){for(var n=e;;){var r=n.tag;if((r===0||r===11||r===15)&&n.flags&16384&&(r=n.updateQueue,r!==null&&(r=r.stores,r!==null)))for(var i=0;i<r.length;i++){var l=r[i],p=l.getSnapshot;l=l.value;try{if(!$2(p(),l))return!1}catch{return!1}}if(r=n.child,n.subtreeFlags&16384&&r!==null)r.return=n,n=r;else{if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}function Gt(e,n,r,i){n&=~fA,n&=~_n,e.suspendedLanes|=n,e.pingedLanes&=~n,i&&(e.warmLanes|=n),i=e.expirationTimes;for(var l=n;0<l;){var p=31-w2(l),D=1<<p;i[p]=-1,l&=~D}r!==0&&ln(e,r,n)}function fo(){return(X0&6)===0?(Tr(0),!1):!0}function yA(){if(M0!==null){if(J0===0)var e=M0.return;else e=M0,At=Fn=null,Nc(e),ca=null,Fr=0,e=M0;for(;e!==null;)w3(e.alternate,e),e=e.return;M0=null}}function ha(e,n){var r=e.timeoutHandle;r!==-1&&(e.timeoutHandle=-1,Nb(r)),r=e.cancelPendingCommit,r!==null&&(e.cancelPendingCommit=null,r()),yA(),t2=e,M0=r=ot(e.current,null),V0=n,J0=0,ne=null,Mt=!1,ua=Ve(e,n),uA=!1,fa=ye=fA=_n=Ut=p2=0,Z2=Sr=null,pA=!1,(n&8)!==0&&(n|=n&32);var i=e.entangledLanes;if(i!==0)for(e=e.entanglements,i&=n;0<i;){var l=31-w2(i),p=1<<l;n|=e[l],i&=~p}return gt=n,Ps(),r}function J3(e,n){P0=null,z.H=Qs,n===ur||n===Gs?(n=fu(),J0=3):n===lu?(n=fu(),J0=4):J0=n===p3?8:n!==null&&typeof n=="object"&&typeof n.then=="function"?6:1,ne=n,M0===null&&(p2=1,ro(e,pe(n,e.current)))}function Z3(){var e=z.H;return z.H=Qs,e===null?Qs:e}function $3(){var e=z.A;return z.A=hb,e}function bA(){p2=4,Mt||(V0&4194048)!==V0&&Ce.current!==null||(ua=!0),(Ut&134217727)===0&&(_n&134217727)===0||t2===null||Gt(t2,V0,ye,!1)}function FA(e,n,r){var i=X0;X0|=2;var l=Z3(),p=$3();(t2!==e||V0!==n)&&(uo=null,ha(e,n)),n=!1;var D=p2;e:do try{if(J0!==0&&M0!==null){var S=M0,I=ne;switch(J0){case 8:yA(),D=6;break e;case 3:case 2:case 9:case 6:Ce.current===null&&(n=!0);var H=J0;if(J0=0,ne=null,ga(e,S,I,H),r&&ua){D=0;break e}break;default:H=J0,J0=0,ne=null,ga(e,S,I,H)}}yb(),D=p2;break}catch(t0){J3(e,t0)}while(!0);return n&&e.shellSuspendCounter++,At=Fn=null,X0=i,z.H=l,z.A=p,M0===null&&(t2=null,V0=0,Ps()),D}function yb(){for(;M0!==null;)Q3(M0)}function bb(e,n){var r=X0;X0|=2;var i=Z3(),l=$3();t2!==e||V0!==n?(uo=null,lo=M2()+500,ha(e,n)):ua=Ve(e,n);e:do try{if(J0!==0&&M0!==null){n=M0;var p=ne;t:switch(J0){case 1:J0=0,ne=null,ga(e,n,p,1);break;case 2:case 9:if(du(p)){J0=0,ne=null,ef(n);break}n=function(){J0!==2&&J0!==9||t2!==e||(J0=7),We(e)},p.then(n,n);break e;case 3:J0=7;break e;case 4:J0=5;break e;case 7:du(p)?(J0=0,ne=null,ef(n)):(J0=0,ne=null,ga(e,n,p,7));break;case 5:var D=null;switch(M0.tag){case 26:D=M0.memoizedState;case 5:case 27:var S=M0;if(!D||Nf(D)){J0=0,ne=null;var I=S.sibling;if(I!==null)M0=I;else{var H=S.return;H!==null?(M0=H,po(H)):M0=null}break t}}J0=0,ne=null,ga(e,n,p,5);break;case 6:J0=0,ne=null,ga(e,n,p,6);break;case 8:yA(),p2=6;break e;default:throw Error(o(462))}}Fb();break}catch(t0){J3(e,t0)}while(!0);return At=Fn=null,z.H=i,z.A=l,X0=r,M0!==null?0:(t2=null,V0=0,Ps(),p2)}function Fb(){for(;M0!==null&&!Ga();)Q3(M0)}function Q3(e){var n=x3(e.alternate,e,gt);e.memoizedProps=e.pendingProps,n===null?po(e):M0=n}function ef(e){var n=e,r=n.alternate;switch(n.tag){case 15:case 0:n=b3(r,n,n.pendingProps,n.type,void 0,V0);break;case 11:n=b3(r,n,n.pendingProps,n.type.render,n.ref,V0);break;case 5:Nc(n);default:w3(r,n),n=M0=tu(n,gt),n=x3(r,n,gt)}e.memoizedProps=e.pendingProps,n===null?po(e):M0=n}function ga(e,n,r,i){At=Fn=null,Nc(n),ca=null,Fr=0;var l=n.return;try{if(lb(e,l,n,r,V0)){p2=1,ro(e,pe(r,e.current)),M0=null;return}}catch(p){if(l!==null)throw M0=l,p;p2=1,ro(e,pe(r,e.current)),M0=null;return}n.flags&32768?(W0||i===1?e=!0:ua||(V0&536870912)!==0?e=!1:(Mt=e=!0,(i===2||i===9||i===3||i===6)&&(i=Ce.current,i!==null&&i.tag===13&&(i.flags|=16384))),tf(n,e)):po(n)}function po(e){var n=e;do{if((n.flags&32768)!==0){tf(n,Mt);return}e=n.return;var r=ub(n.alternate,n,gt);if(r!==null){M0=r;return}if(n=n.sibling,n!==null){M0=n;return}M0=n=e}while(n!==null);p2===0&&(p2=5)}function tf(e,n){do{var r=fb(e.alternate,e);if(r!==null){r.flags&=32767,M0=r;return}if(r=e.return,r!==null&&(r.flags|=32768,r.subtreeFlags=0,r.deletions=null),!n&&(e=e.sibling,e!==null)){M0=e;return}M0=e=r}while(e!==null);p2=6,M0=null}function nf(e,n,r,i,l,p,D,S,I){e.cancelPendingCommit=null;do mo();while(k2!==0);if((X0&6)!==0)throw Error(o(327));if(n!==null){if(n===e.current)throw Error(o(177));if(p=n.lanes|n.childLanes,p|=dc,vs(e,r,p,D,S,I),e===t2&&(M0=t2=null,V0=0),pa=n,Vt=e,ma=r,hA=p,gA=l,Y3=i,(n.subtreeFlags&10256)!==0||(n.flags&10256)!==0?(e.callbackNode=null,e.callbackPriority=0,Db(jn,function(){return cf(),null})):(e.callbackNode=null,e.callbackPriority=0),i=(n.flags&13878)!==0,(n.subtreeFlags&13878)!==0||i){i=z.T,z.T=null,l=Y.p,Y.p=2,D=X0,X0|=4;try{pb(e,n,r)}finally{X0=D,Y.p=l,z.T=i}}k2=1,af(),rf(),sf()}}function af(){if(k2===1){k2=0;var e=Vt,n=pa,r=(n.flags&13878)!==0;if((n.subtreeFlags&13878)!==0||r){r=z.T,z.T=null;var i=Y.p;Y.p=2;var l=X0;X0|=4;try{M3(n,e);var p=RA,D=H6(e.containerInfo),S=p.focusedElem,I=p.selectionRange;if(D!==S&&S&&S.ownerDocument&&q6(S.ownerDocument.documentElement,S)){if(I!==null&&oc(S)){var H=I.start,t0=I.end;if(t0===void 0&&(t0=H),"selectionStart"in S)S.selectionStart=H,S.selectionEnd=Math.min(t0,S.value.length);else{var s0=S.ownerDocument||document,K=s0&&s0.defaultView||window;if(K.getSelection){var X=K.getSelection(),S0=S.textContent.length,D0=Math.min(I.start,S0),Q0=I.end===void 0?D0:Math.min(I.end,S0);!X.extend&&D0>Q0&&(D=Q0,Q0=D0,D0=D);var U=G6(S,D0),M=G6(S,Q0);if(U&&M&&(X.rangeCount!==1||X.anchorNode!==U.node||X.anchorOffset!==U.offset||X.focusNode!==M.node||X.focusOffset!==M.offset)){var G=s0.createRange();G.setStart(U.node,U.offset),X.removeAllRanges(),D0>Q0?(X.addRange(G),X.extend(M.node,M.offset)):(G.setEnd(M.node,M.offset),X.addRange(G))}}}}for(s0=[],X=S;X=X.parentNode;)X.nodeType===1&&s0.push({element:X,left:X.scrollLeft,top:X.scrollTop});for(typeof S.focus=="function"&&S.focus(),S=0;S<s0.length;S++){var n0=s0[S];n0.element.scrollLeft=n0.left,n0.element.scrollTop=n0.top}}_o=!!OA,RA=OA=null}finally{X0=l,Y.p=i,z.T=r}}e.current=n,k2=2}}function rf(){if(k2===2){k2=0;var e=Vt,n=pa,r=(n.flags&8772)!==0;if((n.subtreeFlags&8772)!==0||r){r=z.T,z.T=null;var i=Y.p;Y.p=2;var l=X0;X0|=4;try{I3(e,n.alternate,n)}finally{X0=l,Y.p=i,z.T=r}}k2=3}}function sf(){if(k2===4||k2===3){k2=0,qa();var e=Vt,n=pa,r=ma,i=Y3;(n.subtreeFlags&10256)!==0||(n.flags&10256)!==0?k2=5:(k2=0,pa=Vt=null,of(e,e.pendingLanes));var l=e.pendingLanes;if(l===0&&(jt=null),Ka(r),n=n.stateNode,A2&&typeof A2.onCommitFiberRoot=="function")try{A2.onCommitFiberRoot(H2,n,void 0,(n.current.flags&128)===128)}catch{}if(i!==null){n=z.T,l=Y.p,Y.p=2,z.T=null;try{for(var p=e.onRecoverableError,D=0;D<i.length;D++){var S=i[D];p(S.value,{componentStack:S.stack})}}finally{z.T=n,Y.p=l}}(ma&3)!==0&&mo(),We(e),l=e.pendingLanes,(r&4194090)!==0&&(l&42)!==0?e===CA?kr++:(kr=0,CA=e):kr=0,Tr(0)}}function of(e,n){(e.pooledCacheLanes&=n)===0&&(n=e.pooledCache,n!=null&&(e.pooledCache=null,lr(n)))}function mo(e){return af(),rf(),sf(),cf()}function cf(){if(k2!==5)return!1;var e=Vt,n=hA;hA=0;var r=Ka(ma),i=z.T,l=Y.p;try{Y.p=32>r?32:r,z.T=null,r=gA,gA=null;var p=Vt,D=ma;if(k2=0,pa=Vt=null,ma=0,(X0&6)!==0)throw Error(o(331));var S=X0;if(X0|=4,q3(p.current),j3(p,p.current,D,r),X0=S,Tr(0,!1),A2&&typeof A2.onPostCommitFiberRoot=="function")try{A2.onPostCommitFiberRoot(H2,p)}catch{}return!0}finally{Y.p=l,z.T=i,of(e,n)}}function Af(e,n,r){n=pe(r,n),n=Jc(e.stateNode,n,2),e=Ot(e,n,2),e!==null&&(An(e,2),We(e))}function e2(e,n,r){if(e.tag===3)Af(e,e,r);else for(;n!==null;){if(n.tag===3){Af(n,e,r);break}else if(n.tag===1){var i=n.stateNode;if(typeof n.type.getDerivedStateFromError=="function"||typeof i.componentDidCatch=="function"&&(jt===null||!jt.has(i))){e=pe(r,e),r=u3(2),i=Ot(n,r,2),i!==null&&(f3(r,i,n,e),An(i,2),We(i));break}}n=n.return}}function EA(e,n,r){var i=e.pingCache;if(i===null){i=e.pingCache=new gb;var l=new Set;i.set(n,l)}else l=i.get(n),l===void 0&&(l=new Set,i.set(n,l));l.has(r)||(uA=!0,l.add(r),e=Eb.bind(null,e,n,r),n.then(e,e))}function Eb(e,n,r){var i=e.pingCache;i!==null&&i.delete(n),e.pingedLanes|=e.suspendedLanes&r,e.warmLanes&=~r,t2===e&&(V0&r)===r&&(p2===4||p2===3&&(V0&62914560)===V0&&300>M2()-mA?(X0&2)===0&&ha(e,0):fA|=r,fa===V0&&(fa=0)),We(e)}function lf(e,n){n===0&&(n=Bs()),e=$n(e,n),e!==null&&(An(e,n),We(e))}function Bb(e){var n=e.memoizedState,r=0;n!==null&&(r=n.retryLane),lf(e,r)}function vb(e,n){var r=0;switch(e.tag){case 13:var i=e.stateNode,l=e.memoizedState;l!==null&&(r=l.retryLane);break;case 19:i=e.stateNode;break;case 22:i=e.stateNode._retryCache;break;default:throw Error(o(314))}i!==null&&i.delete(n),lf(e,r)}function Db(e,n){return Se(e,n)}var ho=null,Ca=null,BA=!1,go=!1,vA=!1,wn=0;function We(e){e!==Ca&&e.next===null&&(Ca===null?ho=Ca=e:Ca=Ca.next=e),go=!0,BA||(BA=!0,_b())}function Tr(e,n){if(!vA&&go){vA=!0;do for(var r=!1,i=ho;i!==null;){if(e!==0){var l=i.pendingLanes;if(l===0)var p=0;else{var D=i.suspendedLanes,S=i.pingedLanes;p=(1<<31-w2(42|e)+1)-1,p&=l&~(D&~S),p=p&201326741?p&201326741|1:p?p|2:0}p!==0&&(r=!0,pf(i,p))}else p=V0,p=cn(i,i===t2?p:0,i.cancelPendingCommit!==null||i.timeoutHandle!==-1),(p&3)===0||Ve(i,p)||(r=!0,pf(i,p));i=i.next}while(r);vA=!1}}function xb(){df()}function df(){go=BA=!1;var e=0;wn!==0&&(Ib()&&(e=wn),wn=0);for(var n=M2(),r=null,i=ho;i!==null;){var l=i.next,p=uf(i,n);p===0?(i.next=null,r===null?ho=l:r.next=l,l===null&&(Ca=r)):(r=i,(e!==0||(p&3)!==0)&&(go=!0)),i=l}Tr(e)}function uf(e,n){for(var r=e.suspendedLanes,i=e.pingedLanes,l=e.expirationTimes,p=e.pendingLanes&-62914561;0<p;){var D=31-w2(p),S=1<<D,I=l[D];I===-1?((S&r)===0||(S&i)!==0)&&(l[D]=Es(S,n)):I<=n&&(e.expiredLanes|=S),p&=~S}if(n=t2,r=V0,r=cn(e,e===n?r:0,e.cancelPendingCommit!==null||e.timeoutHandle!==-1),i=e.callbackNode,r===0||e===n&&(J0===2||J0===9)||e.cancelPendingCommit!==null)return i!==null&&i!==null&&q2(i),e.callbackNode=null,e.callbackPriority=0;if((r&3)===0||Ve(e,r)){if(n=r&-r,n===e.callbackPriority)return n;switch(i!==null&&q2(i),Ka(r)){case 2:case 8:r=ys;break;case 32:r=jn;break;case 268435456:r=Bt;break;default:r=jn}return i=ff.bind(null,e),r=Se(r,i),e.callbackPriority=n,e.callbackNode=r,n}return i!==null&&i!==null&&q2(i),e.callbackPriority=2,e.callbackNode=null,2}function ff(e,n){if(k2!==0&&k2!==5)return e.callbackNode=null,e.callbackPriority=0,null;var r=e.callbackNode;if(mo()&&e.callbackNode!==r)return null;var i=V0;return i=cn(e,e===t2?i:0,e.cancelPendingCommit!==null||e.timeoutHandle!==-1),i===0?null:(K3(e,i,n),uf(e,M2()),e.callbackNode!=null&&e.callbackNode===r?ff.bind(null,e):null)}function pf(e,n){if(mo())return null;K3(e,n,!0)}function _b(){Lb(function(){(X0&6)!==0?Se(tt,xb):df()})}function DA(){return wn===0&&(wn=Vn()),wn}function mf(e){return e==null||typeof e=="symbol"||typeof e=="boolean"?null:typeof e=="function"?e:_s(""+e)}function hf(e,n){var r=n.ownerDocument.createElement("input");return r.name=n.name,r.value=n.value,e.id&&r.setAttribute("form",e.id),n.parentNode.insertBefore(r,n),e=new FormData(e),r.parentNode.removeChild(r),e}function wb(e,n,r,i,l){if(n==="submit"&&r&&r.stateNode===l){var p=mf((l[l0]||null).action),D=i.submitter;D&&(n=(n=D[l0]||null)?mf(n.formAction):D.getAttribute("formAction"),n!==null&&(p=n,D=null));var S=new Ts("action","action",null,i,l);e.push({event:S,listeners:[{instance:null,listener:function(){if(i.defaultPrevented){if(wn!==0){var I=D?hf(l,D):new FormData(l);Hc(r,{pending:!0,data:I,method:l.method,action:p},null,I)}}else typeof p=="function"&&(S.preventDefault(),I=D?hf(l,D):new FormData(l),Hc(r,{pending:!0,data:I,method:l.method,action:p},p,I))},currentTarget:l}]})}}for(var xA=0;xA<lc.length;xA++){var _A=lc[xA],Sb=_A.toLowerCase(),kb=_A[0].toUpperCase()+_A.slice(1);Re(Sb,"on"+kb)}Re(K6,"onAnimationEnd"),Re(X6,"onAnimationIteration"),Re(J6,"onAnimationStart"),Re("dblclick","onDoubleClick"),Re("focusin","onFocus"),Re("focusout","onBlur"),Re(Wy,"onTransitionRun"),Re(Ky,"onTransitionStart"),Re(Xy,"onTransitionCancel"),Re(Z6,"onTransitionEnd"),de("onMouseEnter",["mouseout","mouseover"]),de("onMouseLeave",["mouseout","mouseover"]),de("onPointerEnter",["pointerout","pointerover"]),de("onPointerLeave",["pointerout","pointerover"]),U2("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),U2("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),U2("onBeforeInput",["compositionend","keypress","textInput","paste"]),U2("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),U2("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),U2("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Or="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Tb=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Or));function gf(e,n){n=(n&4)!==0;for(var r=0;r<e.length;r++){var i=e[r],l=i.event;i=i.listeners;e:{var p=void 0;if(n)for(var D=i.length-1;0<=D;D--){var S=i[D],I=S.instance,H=S.currentTarget;if(S=S.listener,I!==p&&l.isPropagationStopped())break e;p=S,l.currentTarget=H;try{p(l)}catch(t0){ao(t0)}l.currentTarget=null,p=I}else for(D=0;D<i.length;D++){if(S=i[D],I=S.instance,H=S.currentTarget,S=S.listener,I!==p&&l.isPropagationStopped())break e;p=S,l.currentTarget=H;try{p(l)}catch(t0){ao(t0)}l.currentTarget=null,p=I}}}}function U0(e,n){var r=n[v0];r===void 0&&(r=n[v0]=new Set);var i=e+"__bubble";r.has(i)||(Cf(n,e,2,!1),r.add(i))}function wA(e,n,r){var i=0;n&&(i|=4),Cf(r,e,i,n)}var Co="_reactListening"+Math.random().toString(36).slice(2);function SA(e){if(!e[Co]){e[Co]=!0,j0.forEach(function(r){r!=="selectionchange"&&(Tb.has(r)||wA(r,!1,e),wA(r,!0,e))});var n=e.nodeType===9?e:e.ownerDocument;n===null||n[Co]||(n[Co]=!0,wA("selectionchange",!1,n))}}function Cf(e,n,r,i){switch(Vf(n)){case 2:var l=rF;break;case 8:l=sF;break;default:l=GA}r=l.bind(null,n,r,e),l=void 0,!Zi||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(l=!0),i?l!==void 0?e.addEventListener(n,r,{capture:!0,passive:l}):e.addEventListener(n,r,!0):l!==void 0?e.addEventListener(n,r,{passive:l}):e.addEventListener(n,r,!1)}function kA(e,n,r,i,l){var p=i;if((n&1)===0&&(n&2)===0&&i!==null)e:for(;;){if(i===null)return;var D=i.tag;if(D===3||D===4){var S=i.stateNode.containerInfo;if(S===l)break;if(D===4)for(D=i.return;D!==null;){var I=D.tag;if((I===3||I===4)&&D.stateNode.containerInfo===l)return;D=D.return}for(;S!==null;){if(D=k0(S),D===null)return;if(I=D.tag,I===5||I===6||I===26||I===27){i=p=D;continue e}S=S.parentNode}}i=i.return}v6(function(){var H=p,t0=Xi(r),s0=[];e:{var K=$6.get(e);if(K!==void 0){var X=Ts,S0=e;switch(e){case"keypress":if(Ss(r)===0)break e;case"keydown":case"keyup":X=Dy;break;case"focusin":S0="focus",X=tc;break;case"focusout":S0="blur",X=tc;break;case"beforeblur":case"afterblur":X=tc;break;case"click":if(r.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":X=_6;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":X=fy;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":X=wy;break;case K6:case X6:case J6:X=hy;break;case Z6:X=ky;break;case"scroll":case"scrollend":X=dy;break;case"wheel":X=Oy;break;case"copy":case"cut":case"paste":X=Cy;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":X=S6;break;case"toggle":case"beforetoggle":X=Py}var D0=(n&4)!==0,Q0=!D0&&(e==="scroll"||e==="scrollend"),U=D0?K!==null?K+"Capture":null:K;D0=[];for(var M=H,G;M!==null;){var n0=M;if(G=n0.stateNode,n0=n0.tag,n0!==5&&n0!==26&&n0!==27||G===null||U===null||(n0=Za(M,U),n0!=null&&D0.push(Rr(M,n0,G))),Q0)break;M=M.return}0<D0.length&&(K=new X(K,S0,null,r,t0),s0.push({event:K,listeners:D0}))}}if((n&7)===0){e:{if(K=e==="mouseover"||e==="pointerover",X=e==="mouseout"||e==="pointerout",K&&r!==Ki&&(S0=r.relatedTarget||r.fromElement)&&(k0(S0)||S0[C0]))break e;if((X||K)&&(K=t0.window===t0?t0:(K=t0.ownerDocument)?K.defaultView||K.parentWindow:window,X?(S0=r.relatedTarget||r.toElement,X=H,S0=S0?k0(S0):null,S0!==null&&(Q0=A(S0),D0=S0.tag,S0!==Q0||D0!==5&&D0!==27&&D0!==6)&&(S0=null)):(X=null,S0=H),X!==S0)){if(D0=_6,n0="onMouseLeave",U="onMouseEnter",M="mouse",(e==="pointerout"||e==="pointerover")&&(D0=S6,n0="onPointerLeave",U="onPointerEnter",M="pointer"),Q0=X==null?K:o2(X),G=S0==null?K:o2(S0),K=new D0(n0,M+"leave",X,r,t0),K.target=Q0,K.relatedTarget=G,n0=null,k0(t0)===H&&(D0=new D0(U,M+"enter",S0,r,t0),D0.target=G,D0.relatedTarget=Q0,n0=D0),Q0=n0,X&&S0)t:{for(D0=X,U=S0,M=0,G=D0;G;G=ya(G))M++;for(G=0,n0=U;n0;n0=ya(n0))G++;for(;0<M-G;)D0=ya(D0),M--;for(;0<G-M;)U=ya(U),G--;for(;M--;){if(D0===U||U!==null&&D0===U.alternate)break t;D0=ya(D0),U=ya(U)}D0=null}else D0=null;X!==null&&yf(s0,K,X,D0,!1),S0!==null&&Q0!==null&&yf(s0,Q0,S0,D0,!0)}}e:{if(K=H?o2(H):window,X=K.nodeName&&K.nodeName.toLowerCase(),X==="select"||X==="input"&&K.type==="file")var m0=L6;else if(I6(K))if(z6)m0=qy;else{m0=Vy;var z0=jy}else X=K.nodeName,!X||X.toLowerCase()!=="input"||K.type!=="checkbox"&&K.type!=="radio"?H&&Wi(H.elementType)&&(m0=L6):m0=Gy;if(m0&&(m0=m0(e,H))){N6(s0,m0,r,t0);break e}z0&&z0(e,K,H),e==="focusout"&&H&&K.type==="number"&&H.memoizedProps.value!=null&&Yi(K,"number",K.value)}switch(z0=H?o2(H):window,e){case"focusin":(I6(z0)||z0.contentEditable==="true")&&(Xn=z0,ic=H,sr=null);break;case"focusout":sr=ic=Xn=null;break;case"mousedown":cc=!0;break;case"contextmenu":case"mouseup":case"dragend":cc=!1,Y6(s0,r,t0);break;case"selectionchange":if(Yy)break;case"keydown":case"keyup":Y6(s0,r,t0)}var b0;if(ac)e:{switch(e){case"compositionstart":var _0="onCompositionStart";break e;case"compositionend":_0="onCompositionEnd";break e;case"compositionupdate":_0="onCompositionUpdate";break e}_0=void 0}else Kn?R6(e,r)&&(_0="onCompositionEnd"):e==="keydown"&&r.keyCode===229&&(_0="onCompositionStart");_0&&(k6&&r.locale!=="ko"&&(Kn||_0!=="onCompositionStart"?_0==="onCompositionEnd"&&Kn&&(b0=D6()):(wt=t0,$i="value"in wt?wt.value:wt.textContent,Kn=!0)),z0=yo(H,_0),0<z0.length&&(_0=new w6(_0,e,null,r,t0),s0.push({event:_0,listeners:z0}),b0?_0.data=b0:(b0=P6(r),b0!==null&&(_0.data=b0)))),(b0=Ny?Ly(e,r):zy(e,r))&&(_0=yo(H,"onBeforeInput"),0<_0.length&&(z0=new w6("onBeforeInput","beforeinput",null,r,t0),s0.push({event:z0,listeners:_0}),z0.data=b0)),wb(s0,e,H,r,t0)}gf(s0,n)})}function Rr(e,n,r){return{instance:e,listener:n,currentTarget:r}}function yo(e,n){for(var r=n+"Capture",i=[];e!==null;){var l=e,p=l.stateNode;if(l=l.tag,l!==5&&l!==26&&l!==27||p===null||(l=Za(e,r),l!=null&&i.unshift(Rr(e,l,p)),l=Za(e,n),l!=null&&i.push(Rr(e,l,p))),e.tag===3)return i;e=e.return}return[]}function ya(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5&&e.tag!==27);return e||null}function yf(e,n,r,i,l){for(var p=n._reactName,D=[];r!==null&&r!==i;){var S=r,I=S.alternate,H=S.stateNode;if(S=S.tag,I!==null&&I===i)break;S!==5&&S!==26&&S!==27||H===null||(I=H,l?(H=Za(r,p),H!=null&&D.unshift(Rr(r,H,I))):l||(H=Za(r,p),H!=null&&D.push(Rr(r,H,I)))),r=r.return}D.length!==0&&e.push({event:n,listeners:D})}var Ob=/\r\n?/g,Rb=/\u0000|\uFFFD/g;function bf(e){return(typeof e=="string"?e:""+e).replace(Ob,`
`).replace(Rb,"")}function Ff(e,n){return n=bf(n),bf(e)===n}function bo(){}function $0(e,n,r,i,l,p){switch(r){case"children":typeof i=="string"?n==="body"||n==="textarea"&&i===""||Hn(e,i):(typeof i=="number"||typeof i=="bigint")&&n!=="body"&&Hn(e,""+i);break;case"className":rt(e,"class",i);break;case"tabIndex":rt(e,"tabindex",i);break;case"dir":case"role":case"viewBox":case"width":case"height":rt(e,r,i);break;case"style":E6(e,i,p);break;case"data":if(n!=="object"){rt(e,"data",i);break}case"src":case"href":if(i===""&&(n!=="a"||r!=="href")){e.removeAttribute(r);break}if(i==null||typeof i=="function"||typeof i=="symbol"||typeof i=="boolean"){e.removeAttribute(r);break}i=_s(""+i),e.setAttribute(r,i);break;case"action":case"formAction":if(typeof i=="function"){e.setAttribute(r,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof p=="function"&&(r==="formAction"?(n!=="input"&&$0(e,n,"name",l.name,l,null),$0(e,n,"formEncType",l.formEncType,l,null),$0(e,n,"formMethod",l.formMethod,l,null),$0(e,n,"formTarget",l.formTarget,l,null)):($0(e,n,"encType",l.encType,l,null),$0(e,n,"method",l.method,l,null),$0(e,n,"target",l.target,l,null)));if(i==null||typeof i=="symbol"||typeof i=="boolean"){e.removeAttribute(r);break}i=_s(""+i),e.setAttribute(r,i);break;case"onClick":i!=null&&(e.onclick=bo);break;case"onScroll":i!=null&&U0("scroll",e);break;case"onScrollEnd":i!=null&&U0("scrollend",e);break;case"dangerouslySetInnerHTML":if(i!=null){if(typeof i!="object"||!("__html"in i))throw Error(o(61));if(r=i.__html,r!=null){if(l.children!=null)throw Error(o(60));e.innerHTML=r}}break;case"multiple":e.multiple=i&&typeof i!="function"&&typeof i!="symbol";break;case"muted":e.muted=i&&typeof i!="function"&&typeof i!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(i==null||typeof i=="function"||typeof i=="boolean"||typeof i=="symbol"){e.removeAttribute("xlink:href");break}r=_s(""+i),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",r);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":i!=null&&typeof i!="function"&&typeof i!="symbol"?e.setAttribute(r,""+i):e.removeAttribute(r);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":i&&typeof i!="function"&&typeof i!="symbol"?e.setAttribute(r,""):e.removeAttribute(r);break;case"capture":case"download":i===!0?e.setAttribute(r,""):i!==!1&&i!=null&&typeof i!="function"&&typeof i!="symbol"?e.setAttribute(r,i):e.removeAttribute(r);break;case"cols":case"rows":case"size":case"span":i!=null&&typeof i!="function"&&typeof i!="symbol"&&!isNaN(i)&&1<=i?e.setAttribute(r,i):e.removeAttribute(r);break;case"rowSpan":case"start":i==null||typeof i=="function"||typeof i=="symbol"||isNaN(i)?e.removeAttribute(r):e.setAttribute(r,i);break;case"popover":U0("beforetoggle",e),U0("toggle",e),ue(e,"popover",i);break;case"xlinkActuate":L0(e,"http://www.w3.org/1999/xlink","xlink:actuate",i);break;case"xlinkArcrole":L0(e,"http://www.w3.org/1999/xlink","xlink:arcrole",i);break;case"xlinkRole":L0(e,"http://www.w3.org/1999/xlink","xlink:role",i);break;case"xlinkShow":L0(e,"http://www.w3.org/1999/xlink","xlink:show",i);break;case"xlinkTitle":L0(e,"http://www.w3.org/1999/xlink","xlink:title",i);break;case"xlinkType":L0(e,"http://www.w3.org/1999/xlink","xlink:type",i);break;case"xmlBase":L0(e,"http://www.w3.org/XML/1998/namespace","xml:base",i);break;case"xmlLang":L0(e,"http://www.w3.org/XML/1998/namespace","xml:lang",i);break;case"xmlSpace":L0(e,"http://www.w3.org/XML/1998/namespace","xml:space",i);break;case"is":ue(e,"is",i);break;case"innerText":case"textContent":break;default:(!(2<r.length)||r[0]!=="o"&&r[0]!=="O"||r[1]!=="n"&&r[1]!=="N")&&(r=Ay.get(r)||r,ue(e,r,i))}}function TA(e,n,r,i,l,p){switch(r){case"style":E6(e,i,p);break;case"dangerouslySetInnerHTML":if(i!=null){if(typeof i!="object"||!("__html"in i))throw Error(o(61));if(r=i.__html,r!=null){if(l.children!=null)throw Error(o(60));e.innerHTML=r}}break;case"children":typeof i=="string"?Hn(e,i):(typeof i=="number"||typeof i=="bigint")&&Hn(e,""+i);break;case"onScroll":i!=null&&U0("scroll",e);break;case"onScrollEnd":i!=null&&U0("scrollend",e);break;case"onClick":i!=null&&(e.onclick=bo);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!vt.hasOwnProperty(r))e:{if(r[0]==="o"&&r[1]==="n"&&(l=r.endsWith("Capture"),n=r.slice(2,l?r.length-7:void 0),p=e[l0]||null,p=p!=null?p[r]:null,typeof p=="function"&&e.removeEventListener(n,p,l),typeof i=="function")){typeof p!="function"&&p!==null&&(r in e?e[r]=null:e.hasAttribute(r)&&e.removeAttribute(r)),e.addEventListener(n,i,l);break e}r in e?e[r]=i:i===!0?e.setAttribute(r,""):ue(e,r,i)}}}function T2(e,n,r){switch(n){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":U0("error",e),U0("load",e);var i=!1,l=!1,p;for(p in r)if(r.hasOwnProperty(p)){var D=r[p];if(D!=null)switch(p){case"src":i=!0;break;case"srcSet":l=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(o(137,n));default:$0(e,n,p,D,r,null)}}l&&$0(e,n,"srcSet",r.srcSet,r,null),i&&$0(e,n,"src",r.src,r,null);return;case"input":U0("invalid",e);var S=p=D=l=null,I=null,H=null;for(i in r)if(r.hasOwnProperty(i)){var t0=r[i];if(t0!=null)switch(i){case"name":l=t0;break;case"type":D=t0;break;case"checked":I=t0;break;case"defaultChecked":H=t0;break;case"value":p=t0;break;case"defaultValue":S=t0;break;case"children":case"dangerouslySetInnerHTML":if(t0!=null)throw Error(o(137,n));break;default:$0(e,n,i,t0,r,null)}}C6(e,p,S,I,H,D,l,!1),Ds(e);return;case"select":U0("invalid",e),i=D=p=null;for(l in r)if(r.hasOwnProperty(l)&&(S=r[l],S!=null))switch(l){case"value":p=S;break;case"defaultValue":D=S;break;case"multiple":i=S;default:$0(e,n,l,S,r,null)}n=p,r=D,e.multiple=!!i,n!=null?qn(e,!!i,n,!1):r!=null&&qn(e,!!i,r,!0);return;case"textarea":U0("invalid",e),p=l=i=null;for(D in r)if(r.hasOwnProperty(D)&&(S=r[D],S!=null))switch(D){case"value":i=S;break;case"defaultValue":l=S;break;case"children":p=S;break;case"dangerouslySetInnerHTML":if(S!=null)throw Error(o(91));break;default:$0(e,n,D,S,r,null)}b6(e,i,l,p),Ds(e);return;case"option":for(I in r)if(r.hasOwnProperty(I)&&(i=r[I],i!=null))switch(I){case"selected":e.selected=i&&typeof i!="function"&&typeof i!="symbol";break;default:$0(e,n,I,i,r,null)}return;case"dialog":U0("beforetoggle",e),U0("toggle",e),U0("cancel",e),U0("close",e);break;case"iframe":case"object":U0("load",e);break;case"video":case"audio":for(i=0;i<Or.length;i++)U0(Or[i],e);break;case"image":U0("error",e),U0("load",e);break;case"details":U0("toggle",e);break;case"embed":case"source":case"link":U0("error",e),U0("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(H in r)if(r.hasOwnProperty(H)&&(i=r[H],i!=null))switch(H){case"children":case"dangerouslySetInnerHTML":throw Error(o(137,n));default:$0(e,n,H,i,r,null)}return;default:if(Wi(n)){for(t0 in r)r.hasOwnProperty(t0)&&(i=r[t0],i!==void 0&&TA(e,n,t0,i,r,void 0));return}}for(S in r)r.hasOwnProperty(S)&&(i=r[S],i!=null&&$0(e,n,S,i,r,null))}function Pb(e,n,r,i){switch(n){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var l=null,p=null,D=null,S=null,I=null,H=null,t0=null;for(X in r){var s0=r[X];if(r.hasOwnProperty(X)&&s0!=null)switch(X){case"checked":break;case"value":break;case"defaultValue":I=s0;default:i.hasOwnProperty(X)||$0(e,n,X,null,i,s0)}}for(var K in i){var X=i[K];if(s0=r[K],i.hasOwnProperty(K)&&(X!=null||s0!=null))switch(K){case"type":p=X;break;case"name":l=X;break;case"checked":H=X;break;case"defaultChecked":t0=X;break;case"value":D=X;break;case"defaultValue":S=X;break;case"children":case"dangerouslySetInnerHTML":if(X!=null)throw Error(o(137,n));break;default:X!==s0&&$0(e,n,K,X,i,s0)}}Hi(e,D,S,I,H,t0,p,l);return;case"select":X=D=S=K=null;for(p in r)if(I=r[p],r.hasOwnProperty(p)&&I!=null)switch(p){case"value":break;case"multiple":X=I;default:i.hasOwnProperty(p)||$0(e,n,p,null,i,I)}for(l in i)if(p=i[l],I=r[l],i.hasOwnProperty(l)&&(p!=null||I!=null))switch(l){case"value":K=p;break;case"defaultValue":S=p;break;case"multiple":D=p;default:p!==I&&$0(e,n,l,p,i,I)}n=S,r=D,i=X,K!=null?qn(e,!!r,K,!1):!!i!=!!r&&(n!=null?qn(e,!!r,n,!0):qn(e,!!r,r?[]:"",!1));return;case"textarea":X=K=null;for(S in r)if(l=r[S],r.hasOwnProperty(S)&&l!=null&&!i.hasOwnProperty(S))switch(S){case"value":break;case"children":break;default:$0(e,n,S,null,i,l)}for(D in i)if(l=i[D],p=r[D],i.hasOwnProperty(D)&&(l!=null||p!=null))switch(D){case"value":K=l;break;case"defaultValue":X=l;break;case"children":break;case"dangerouslySetInnerHTML":if(l!=null)throw Error(o(91));break;default:l!==p&&$0(e,n,D,l,i,p)}y6(e,K,X);return;case"option":for(var S0 in r)if(K=r[S0],r.hasOwnProperty(S0)&&K!=null&&!i.hasOwnProperty(S0))switch(S0){case"selected":e.selected=!1;break;default:$0(e,n,S0,null,i,K)}for(I in i)if(K=i[I],X=r[I],i.hasOwnProperty(I)&&K!==X&&(K!=null||X!=null))switch(I){case"selected":e.selected=K&&typeof K!="function"&&typeof K!="symbol";break;default:$0(e,n,I,K,i,X)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var D0 in r)K=r[D0],r.hasOwnProperty(D0)&&K!=null&&!i.hasOwnProperty(D0)&&$0(e,n,D0,null,i,K);for(H in i)if(K=i[H],X=r[H],i.hasOwnProperty(H)&&K!==X&&(K!=null||X!=null))switch(H){case"children":case"dangerouslySetInnerHTML":if(K!=null)throw Error(o(137,n));break;default:$0(e,n,H,K,i,X)}return;default:if(Wi(n)){for(var Q0 in r)K=r[Q0],r.hasOwnProperty(Q0)&&K!==void 0&&!i.hasOwnProperty(Q0)&&TA(e,n,Q0,void 0,i,K);for(t0 in i)K=i[t0],X=r[t0],!i.hasOwnProperty(t0)||K===X||K===void 0&&X===void 0||TA(e,n,t0,K,i,X);return}}for(var U in r)K=r[U],r.hasOwnProperty(U)&&K!=null&&!i.hasOwnProperty(U)&&$0(e,n,U,null,i,K);for(s0 in i)K=i[s0],X=r[s0],!i.hasOwnProperty(s0)||K===X||K==null&&X==null||$0(e,n,s0,K,i,X)}var OA=null,RA=null;function Fo(e){return e.nodeType===9?e:e.ownerDocument}function Ef(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function Bf(e,n){if(e===0)switch(n){case"svg":return 1;case"math":return 2;default:return 0}return e===1&&n==="foreignObject"?0:e}function PA(e,n){return e==="textarea"||e==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.children=="bigint"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var IA=null;function Ib(){var e=window.event;return e&&e.type==="popstate"?e===IA?!1:(IA=e,!0):(IA=null,!1)}var vf=typeof setTimeout=="function"?setTimeout:void 0,Nb=typeof clearTimeout=="function"?clearTimeout:void 0,Df=typeof Promise=="function"?Promise:void 0,Lb=typeof queueMicrotask=="function"?queueMicrotask:typeof Df<"u"?function(e){return Df.resolve(null).then(e).catch(zb)}:vf;function zb(e){setTimeout(function(){throw e})}function qt(e){return e==="head"}function xf(e,n){var r=n,i=0,l=0;do{var p=r.nextSibling;if(e.removeChild(r),p&&p.nodeType===8)if(r=p.data,r==="/$"){if(0<i&&8>i){r=i;var D=e.ownerDocument;if(r&1&&Pr(D.documentElement),r&2&&Pr(D.body),r&4)for(r=D.head,Pr(r),D=r.firstChild;D;){var S=D.nextSibling,I=D.nodeName;D[w0]||I==="SCRIPT"||I==="STYLE"||I==="LINK"&&D.rel.toLowerCase()==="stylesheet"||r.removeChild(D),D=S}}if(l===0){e.removeChild(p),Vr(n);return}l--}else r==="$"||r==="$?"||r==="$!"?l++:i=r.charCodeAt(0)-48;else i=0;r=p}while(r);Vr(n)}function NA(e){var n=e.firstChild;for(n&&n.nodeType===10&&(n=n.nextSibling);n;){var r=n;switch(n=n.nextSibling,r.nodeName){case"HTML":case"HEAD":case"BODY":NA(r),y0(r);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(r.rel.toLowerCase()==="stylesheet")continue}e.removeChild(r)}}function Mb(e,n,r,i){for(;e.nodeType===1;){var l=r;if(e.nodeName.toLowerCase()!==n.toLowerCase()){if(!i&&(e.nodeName!=="INPUT"||e.type!=="hidden"))break}else if(i){if(!e[w0])switch(n){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if(p=e.getAttribute("rel"),p==="stylesheet"&&e.hasAttribute("data-precedence"))break;if(p!==l.rel||e.getAttribute("href")!==(l.href==null||l.href===""?null:l.href)||e.getAttribute("crossorigin")!==(l.crossOrigin==null?null:l.crossOrigin)||e.getAttribute("title")!==(l.title==null?null:l.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(p=e.getAttribute("src"),(p!==(l.src==null?null:l.src)||e.getAttribute("type")!==(l.type==null?null:l.type)||e.getAttribute("crossorigin")!==(l.crossOrigin==null?null:l.crossOrigin))&&p&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else if(n==="input"&&e.type==="hidden"){var p=l.name==null?null:""+l.name;if(l.type==="hidden"&&e.getAttribute("name")===p)return e}else return e;if(e=Ie(e.nextSibling),e===null)break}return null}function Ub(e,n,r){if(n==="")return null;for(;e.nodeType!==3;)if((e.nodeType!==1||e.nodeName!=="INPUT"||e.type!=="hidden")&&!r||(e=Ie(e.nextSibling),e===null))return null;return e}function LA(e){return e.data==="$!"||e.data==="$?"&&e.ownerDocument.readyState==="complete"}function jb(e,n){var r=e.ownerDocument;if(e.data!=="$?"||r.readyState==="complete")n();else{var i=function(){n(),r.removeEventListener("DOMContentLoaded",i)};r.addEventListener("DOMContentLoaded",i),e._reactRetry=i}}function Ie(e){for(;e!=null;e=e.nextSibling){var n=e.nodeType;if(n===1||n===3)break;if(n===8){if(n=e.data,n==="$"||n==="$!"||n==="$?"||n==="F!"||n==="F")break;if(n==="/$")return null}}return e}var zA=null;function _f(e){e=e.previousSibling;for(var n=0;e;){if(e.nodeType===8){var r=e.data;if(r==="$"||r==="$!"||r==="$?"){if(n===0)return e;n--}else r==="/$"&&n++}e=e.previousSibling}return null}function wf(e,n,r){switch(n=Fo(r),e){case"html":if(e=n.documentElement,!e)throw Error(o(452));return e;case"head":if(e=n.head,!e)throw Error(o(453));return e;case"body":if(e=n.body,!e)throw Error(o(454));return e;default:throw Error(o(451))}}function Pr(e){for(var n=e.attributes;n.length;)e.removeAttributeNode(n[0]);y0(e)}var be=new Map,Sf=new Set;function Eo(e){return typeof e.getRootNode=="function"?e.getRootNode():e.nodeType===9?e:e.ownerDocument}var Ct=Y.d;Y.d={f:Vb,r:Gb,D:qb,C:Hb,L:Yb,m:Wb,X:Xb,S:Kb,M:Jb};function Vb(){var e=Ct.f(),n=fo();return e||n}function Gb(e){var n=q0(e);n!==null&&n.tag===5&&n.type==="form"?Ku(n):Ct.r(e)}var ba=typeof document>"u"?null:document;function kf(e,n,r){var i=ba;if(i&&typeof n=="string"&&n){var l=fe(n);l='link[rel="'+e+'"][href="'+l+'"]',typeof r=="string"&&(l+='[crossorigin="'+r+'"]'),Sf.has(l)||(Sf.add(l),e={rel:e,crossOrigin:r,href:n},i.querySelector(l)===null&&(n=i.createElement("link"),T2(n,"link",e),H0(n),i.head.appendChild(n)))}}function qb(e){Ct.D(e),kf("dns-prefetch",e,null)}function Hb(e,n){Ct.C(e,n),kf("preconnect",e,n)}function Yb(e,n,r){Ct.L(e,n,r);var i=ba;if(i&&e&&n){var l='link[rel="preload"][as="'+fe(n)+'"]';n==="image"&&r&&r.imageSrcSet?(l+='[imagesrcset="'+fe(r.imageSrcSet)+'"]',typeof r.imageSizes=="string"&&(l+='[imagesizes="'+fe(r.imageSizes)+'"]')):l+='[href="'+fe(e)+'"]';var p=l;switch(n){case"style":p=Fa(e);break;case"script":p=Ea(e)}be.has(p)||(e=y({rel:"preload",href:n==="image"&&r&&r.imageSrcSet?void 0:e,as:n},r),be.set(p,e),i.querySelector(l)!==null||n==="style"&&i.querySelector(Ir(p))||n==="script"&&i.querySelector(Nr(p))||(n=i.createElement("link"),T2(n,"link",e),H0(n),i.head.appendChild(n)))}}function Wb(e,n){Ct.m(e,n);var r=ba;if(r&&e){var i=n&&typeof n.as=="string"?n.as:"script",l='link[rel="modulepreload"][as="'+fe(i)+'"][href="'+fe(e)+'"]',p=l;switch(i){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":p=Ea(e)}if(!be.has(p)&&(e=y({rel:"modulepreload",href:e},n),be.set(p,e),r.querySelector(l)===null)){switch(i){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(r.querySelector(Nr(p)))return}i=r.createElement("link"),T2(i,"link",e),H0(i),r.head.appendChild(i)}}}function Kb(e,n,r){Ct.S(e,n,r);var i=ba;if(i&&e){var l=l2(i).hoistableStyles,p=Fa(e);n=n||"default";var D=l.get(p);if(!D){var S={loading:0,preload:null};if(D=i.querySelector(Ir(p)))S.loading=5;else{e=y({rel:"stylesheet",href:e,"data-precedence":n},r),(r=be.get(p))&&MA(e,r);var I=D=i.createElement("link");H0(I),T2(I,"link",e),I._p=new Promise(function(H,t0){I.onload=H,I.onerror=t0}),I.addEventListener("load",function(){S.loading|=1}),I.addEventListener("error",function(){S.loading|=2}),S.loading|=4,Bo(D,n,i)}D={type:"stylesheet",instance:D,count:1,state:S},l.set(p,D)}}}function Xb(e,n){Ct.X(e,n);var r=ba;if(r&&e){var i=l2(r).hoistableScripts,l=Ea(e),p=i.get(l);p||(p=r.querySelector(Nr(l)),p||(e=y({src:e,async:!0},n),(n=be.get(l))&&UA(e,n),p=r.createElement("script"),H0(p),T2(p,"link",e),r.head.appendChild(p)),p={type:"script",instance:p,count:1,state:null},i.set(l,p))}}function Jb(e,n){Ct.M(e,n);var r=ba;if(r&&e){var i=l2(r).hoistableScripts,l=Ea(e),p=i.get(l);p||(p=r.querySelector(Nr(l)),p||(e=y({src:e,async:!0,type:"module"},n),(n=be.get(l))&&UA(e,n),p=r.createElement("script"),H0(p),T2(p,"link",e),r.head.appendChild(p)),p={type:"script",instance:p,count:1,state:null},i.set(l,p))}}function Tf(e,n,r,i){var l=(l=g0.current)?Eo(l):null;if(!l)throw Error(o(446));switch(e){case"meta":case"title":return null;case"style":return typeof r.precedence=="string"&&typeof r.href=="string"?(n=Fa(r.href),r=l2(l).hoistableStyles,i=r.get(n),i||(i={type:"style",instance:null,count:0,state:null},r.set(n,i)),i):{type:"void",instance:null,count:0,state:null};case"link":if(r.rel==="stylesheet"&&typeof r.href=="string"&&typeof r.precedence=="string"){e=Fa(r.href);var p=l2(l).hoistableStyles,D=p.get(e);if(D||(l=l.ownerDocument||l,D={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},p.set(e,D),(p=l.querySelector(Ir(e)))&&!p._p&&(D.instance=p,D.state.loading=5),be.has(e)||(r={rel:"preload",as:"style",href:r.href,crossOrigin:r.crossOrigin,integrity:r.integrity,media:r.media,hrefLang:r.hrefLang,referrerPolicy:r.referrerPolicy},be.set(e,r),p||Zb(l,e,r,D.state))),n&&i===null)throw Error(o(528,""));return D}if(n&&i!==null)throw Error(o(529,""));return null;case"script":return n=r.async,r=r.src,typeof r=="string"&&n&&typeof n!="function"&&typeof n!="symbol"?(n=Ea(r),r=l2(l).hoistableScripts,i=r.get(n),i||(i={type:"script",instance:null,count:0,state:null},r.set(n,i)),i):{type:"void",instance:null,count:0,state:null};default:throw Error(o(444,e))}}function Fa(e){return'href="'+fe(e)+'"'}function Ir(e){return'link[rel="stylesheet"]['+e+"]"}function Of(e){return y({},e,{"data-precedence":e.precedence,precedence:null})}function Zb(e,n,r,i){e.querySelector('link[rel="preload"][as="style"]['+n+"]")?i.loading=1:(n=e.createElement("link"),i.preload=n,n.addEventListener("load",function(){return i.loading|=1}),n.addEventListener("error",function(){return i.loading|=2}),T2(n,"link",r),H0(n),e.head.appendChild(n))}function Ea(e){return'[src="'+fe(e)+'"]'}function Nr(e){return"script[async]"+e}function Rf(e,n,r){if(n.count++,n.instance===null)switch(n.type){case"style":var i=e.querySelector('style[data-href~="'+fe(r.href)+'"]');if(i)return n.instance=i,H0(i),i;var l=y({},r,{"data-href":r.href,"data-precedence":r.precedence,href:null,precedence:null});return i=(e.ownerDocument||e).createElement("style"),H0(i),T2(i,"style",l),Bo(i,r.precedence,e),n.instance=i;case"stylesheet":l=Fa(r.href);var p=e.querySelector(Ir(l));if(p)return n.state.loading|=4,n.instance=p,H0(p),p;i=Of(r),(l=be.get(l))&&MA(i,l),p=(e.ownerDocument||e).createElement("link"),H0(p);var D=p;return D._p=new Promise(function(S,I){D.onload=S,D.onerror=I}),T2(p,"link",i),n.state.loading|=4,Bo(p,r.precedence,e),n.instance=p;case"script":return p=Ea(r.src),(l=e.querySelector(Nr(p)))?(n.instance=l,H0(l),l):(i=r,(l=be.get(p))&&(i=y({},r),UA(i,l)),e=e.ownerDocument||e,l=e.createElement("script"),H0(l),T2(l,"link",i),e.head.appendChild(l),n.instance=l);case"void":return null;default:throw Error(o(443,n.type))}else n.type==="stylesheet"&&(n.state.loading&4)===0&&(i=n.instance,n.state.loading|=4,Bo(i,r.precedence,e));return n.instance}function Bo(e,n,r){for(var i=r.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),l=i.length?i[i.length-1]:null,p=l,D=0;D<i.length;D++){var S=i[D];if(S.dataset.precedence===n)p=S;else if(p!==l)break}p?p.parentNode.insertBefore(e,p.nextSibling):(n=r.nodeType===9?r.head:r,n.insertBefore(e,n.firstChild))}function MA(e,n){e.crossOrigin==null&&(e.crossOrigin=n.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=n.referrerPolicy),e.title==null&&(e.title=n.title)}function UA(e,n){e.crossOrigin==null&&(e.crossOrigin=n.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=n.referrerPolicy),e.integrity==null&&(e.integrity=n.integrity)}var vo=null;function Pf(e,n,r){if(vo===null){var i=new Map,l=vo=new Map;l.set(r,i)}else l=vo,i=l.get(r),i||(i=new Map,l.set(r,i));if(i.has(e))return i;for(i.set(e,null),r=r.getElementsByTagName(e),l=0;l<r.length;l++){var p=r[l];if(!(p[w0]||p[o0]||e==="link"&&p.getAttribute("rel")==="stylesheet")&&p.namespaceURI!=="http://www.w3.org/2000/svg"){var D=p.getAttribute(n)||"";D=e+D;var S=i.get(D);S?S.push(p):i.set(D,[p])}}return i}function If(e,n,r){e=e.ownerDocument||e,e.head.insertBefore(r,n==="title"?e.querySelector("head > title"):null)}function $b(e,n,r){if(r===1||n.itemProp!=null)return!1;switch(e){case"meta":case"title":return!0;case"style":if(typeof n.precedence!="string"||typeof n.href!="string"||n.href==="")break;return!0;case"link":if(typeof n.rel!="string"||typeof n.href!="string"||n.href===""||n.onLoad||n.onError)break;switch(n.rel){case"stylesheet":return e=n.disabled,typeof n.precedence=="string"&&e==null;default:return!0}case"script":if(n.async&&typeof n.async!="function"&&typeof n.async!="symbol"&&!n.onLoad&&!n.onError&&n.src&&typeof n.src=="string")return!0}return!1}function Nf(e){return!(e.type==="stylesheet"&&(e.state.loading&3)===0)}var Lr=null;function Qb(){}function eF(e,n,r){if(Lr===null)throw Error(o(475));var i=Lr;if(n.type==="stylesheet"&&(typeof r.media!="string"||matchMedia(r.media).matches!==!1)&&(n.state.loading&4)===0){if(n.instance===null){var l=Fa(r.href),p=e.querySelector(Ir(l));if(p){e=p._p,e!==null&&typeof e=="object"&&typeof e.then=="function"&&(i.count++,i=Do.bind(i),e.then(i,i)),n.state.loading|=4,n.instance=p,H0(p);return}p=e.ownerDocument||e,r=Of(r),(l=be.get(l))&&MA(r,l),p=p.createElement("link"),H0(p);var D=p;D._p=new Promise(function(S,I){D.onload=S,D.onerror=I}),T2(p,"link",r),n.instance=p}i.stylesheets===null&&(i.stylesheets=new Map),i.stylesheets.set(n,e),(e=n.state.preload)&&(n.state.loading&3)===0&&(i.count++,n=Do.bind(i),e.addEventListener("load",n),e.addEventListener("error",n))}}function tF(){if(Lr===null)throw Error(o(475));var e=Lr;return e.stylesheets&&e.count===0&&jA(e,e.stylesheets),0<e.count?function(n){var r=setTimeout(function(){if(e.stylesheets&&jA(e,e.stylesheets),e.unsuspend){var i=e.unsuspend;e.unsuspend=null,i()}},6e4);return e.unsuspend=n,function(){e.unsuspend=null,clearTimeout(r)}}:null}function Do(){if(this.count--,this.count===0){if(this.stylesheets)jA(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}}var xo=null;function jA(e,n){e.stylesheets=null,e.unsuspend!==null&&(e.count++,xo=new Map,n.forEach(nF,e),xo=null,Do.call(e))}function nF(e,n){if(!(n.state.loading&4)){var r=xo.get(e);if(r)var i=r.get(null);else{r=new Map,xo.set(e,r);for(var l=e.querySelectorAll("link[data-precedence],style[data-precedence]"),p=0;p<l.length;p++){var D=l[p];(D.nodeName==="LINK"||D.getAttribute("media")!=="not all")&&(r.set(D.dataset.precedence,D),i=D)}i&&r.set(null,i)}l=n.instance,D=l.getAttribute("data-precedence"),p=r.get(D)||i,p===i&&r.set(null,l),r.set(D,l),this.count++,i=Do.bind(this),l.addEventListener("load",i),l.addEventListener("error",i),p?p.parentNode.insertBefore(l,p.nextSibling):(e=e.nodeType===9?e.head:e,e.insertBefore(l,e.firstChild)),n.state.loading|=4}}var zr={$$typeof:w,Provider:null,Consumer:null,_currentValue:$,_currentValue2:$,_threadCount:0};function aF(e,n,r,i,l,p,D,S){this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Gn(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Gn(0),this.hiddenUpdates=Gn(null),this.identifierPrefix=i,this.onUncaughtError=l,this.onCaughtError=p,this.onRecoverableError=D,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=S,this.incompleteTransitions=new Map}function Lf(e,n,r,i,l,p,D,S,I,H,t0,s0){return e=new aF(e,n,r,D,S,I,H,s0),n=1,p===!0&&(n|=24),p=Q2(3,null,null,n),e.current=p,p.stateNode=e,n=Ec(),n.refCount++,e.pooledCache=n,n.refCount++,p.memoizedState={element:i,isDehydrated:r,cache:n},xc(p),e}function zf(e){return e?(e=Qn,e):Qn}function Mf(e,n,r,i,l,p){l=zf(l),i.context===null?i.context=l:i.pendingContext=l,i=Tt(n),i.payload={element:r},p=p===void 0?null:p,p!==null&&(i.callback=p),r=Ot(e,i,n),r!==null&&(re(r,e,n),pr(r,e,n))}function Uf(e,n){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var r=e.retryLane;e.retryLane=r!==0&&r<n?r:n}}function VA(e,n){Uf(e,n),(e=e.alternate)&&Uf(e,n)}function jf(e){if(e.tag===13){var n=$n(e,67108864);n!==null&&re(n,e,67108864),VA(e,67108864)}}var _o=!0;function rF(e,n,r,i){var l=z.T;z.T=null;var p=Y.p;try{Y.p=2,GA(e,n,r,i)}finally{Y.p=p,z.T=l}}function sF(e,n,r,i){var l=z.T;z.T=null;var p=Y.p;try{Y.p=8,GA(e,n,r,i)}finally{Y.p=p,z.T=l}}function GA(e,n,r,i){if(_o){var l=qA(i);if(l===null)kA(e,n,i,wo,r),Gf(e,i);else if(iF(l,e,n,r,i))i.stopPropagation();else if(Gf(e,i),n&4&&-1<oF.indexOf(e)){for(;l!==null;){var p=q0(l);if(p!==null)switch(p.tag){case 3:if(p=p.stateNode,p.current.memoizedState.isDehydrated){var D=at(p.pendingLanes);if(D!==0){var S=p;for(S.pendingLanes|=2,S.entangledLanes|=2;D;){var I=1<<31-w2(D);S.entanglements[1]|=I,D&=~I}We(p),(X0&6)===0&&(lo=M2()+500,Tr(0))}}break;case 13:S=$n(p,2),S!==null&&re(S,p,2),fo(),VA(p,2)}if(p=qA(i),p===null&&kA(e,n,i,wo,r),p===l)break;l=p}l!==null&&i.stopPropagation()}else kA(e,n,i,null,r)}}function qA(e){return e=Xi(e),HA(e)}var wo=null;function HA(e){if(wo=null,e=k0(e),e!==null){var n=A(e);if(n===null)e=null;else{var r=n.tag;if(r===13){if(e=d(n),e!==null)return e;e=null}else if(r===3){if(n.stateNode.current.memoizedState.isDehydrated)return n.tag===3?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null)}}return wo=e,null}function Vf(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(Ha()){case tt:return 2;case ys:return 8;case jn:case nt:return 32;case Bt:return 268435456;default:return 32}default:return 32}}var YA=!1,Ht=null,Yt=null,Wt=null,Mr=new Map,Ur=new Map,Kt=[],oF="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function Gf(e,n){switch(e){case"focusin":case"focusout":Ht=null;break;case"dragenter":case"dragleave":Yt=null;break;case"mouseover":case"mouseout":Wt=null;break;case"pointerover":case"pointerout":Mr.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ur.delete(n.pointerId)}}function jr(e,n,r,i,l,p){return e===null||e.nativeEvent!==p?(e={blockedOn:n,domEventName:r,eventSystemFlags:i,nativeEvent:p,targetContainers:[l]},n!==null&&(n=q0(n),n!==null&&jf(n)),e):(e.eventSystemFlags|=i,n=e.targetContainers,l!==null&&n.indexOf(l)===-1&&n.push(l),e)}function iF(e,n,r,i,l){switch(n){case"focusin":return Ht=jr(Ht,e,n,r,i,l),!0;case"dragenter":return Yt=jr(Yt,e,n,r,i,l),!0;case"mouseover":return Wt=jr(Wt,e,n,r,i,l),!0;case"pointerover":var p=l.pointerId;return Mr.set(p,jr(Mr.get(p)||null,e,n,r,i,l)),!0;case"gotpointercapture":return p=l.pointerId,Ur.set(p,jr(Ur.get(p)||null,e,n,r,i,l)),!0}return!1}function qf(e){var n=k0(e.target);if(n!==null){var r=A(n);if(r!==null){if(n=r.tag,n===13){if(n=d(r),n!==null){e.blockedOn=n,V(e.priority,function(){if(r.tag===13){var i=ae();i=Wa(i);var l=$n(r,i);l!==null&&re(l,r,i),VA(r,i)}});return}}else if(n===3&&r.stateNode.current.memoizedState.isDehydrated){e.blockedOn=r.tag===3?r.stateNode.containerInfo:null;return}}}e.blockedOn=null}function So(e){if(e.blockedOn!==null)return!1;for(var n=e.targetContainers;0<n.length;){var r=qA(e.nativeEvent);if(r===null){r=e.nativeEvent;var i=new r.constructor(r.type,r);Ki=i,r.target.dispatchEvent(i),Ki=null}else return n=q0(r),n!==null&&jf(n),e.blockedOn=r,!1;n.shift()}return!0}function Hf(e,n,r){So(e)&&r.delete(n)}function cF(){YA=!1,Ht!==null&&So(Ht)&&(Ht=null),Yt!==null&&So(Yt)&&(Yt=null),Wt!==null&&So(Wt)&&(Wt=null),Mr.forEach(Hf),Ur.forEach(Hf)}function ko(e,n){e.blockedOn===n&&(e.blockedOn=null,YA||(YA=!0,t.unstable_scheduleCallback(t.unstable_NormalPriority,cF)))}var To=null;function Yf(e){To!==e&&(To=e,t.unstable_scheduleCallback(t.unstable_NormalPriority,function(){To===e&&(To=null);for(var n=0;n<e.length;n+=3){var r=e[n],i=e[n+1],l=e[n+2];if(typeof i!="function"){if(HA(i||r)===null)continue;break}var p=q0(r);p!==null&&(e.splice(n,3),n-=3,Hc(p,{pending:!0,data:l,method:r.method,action:i},i,l))}}))}function Vr(e){function n(I){return ko(I,e)}Ht!==null&&ko(Ht,e),Yt!==null&&ko(Yt,e),Wt!==null&&ko(Wt,e),Mr.forEach(n),Ur.forEach(n);for(var r=0;r<Kt.length;r++){var i=Kt[r];i.blockedOn===e&&(i.blockedOn=null)}for(;0<Kt.length&&(r=Kt[0],r.blockedOn===null);)qf(r),r.blockedOn===null&&Kt.shift();if(r=(e.ownerDocument||e).$$reactFormReplay,r!=null)for(i=0;i<r.length;i+=3){var l=r[i],p=r[i+1],D=l[l0]||null;if(typeof p=="function")D||Yf(r);else if(D){var S=null;if(p&&p.hasAttribute("formAction")){if(l=p,D=p[l0]||null)S=D.formAction;else if(HA(l)!==null)continue}else S=D.action;typeof S=="function"?r[i+1]=S:(r.splice(i,3),i-=3),Yf(r)}}}function WA(e){this._internalRoot=e}Oo.prototype.render=WA.prototype.render=function(e){var n=this._internalRoot;if(n===null)throw Error(o(409));var r=n.current,i=ae();Mf(r,i,e,n,null,null)},Oo.prototype.unmount=WA.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var n=e.containerInfo;Mf(e.current,2,null,e,null,null),fo(),n[C0]=null}};function Oo(e){this._internalRoot=e}Oo.prototype.unstable_scheduleHydration=function(e){if(e){var n=N();e={blockedOn:null,target:e,priority:n};for(var r=0;r<Kt.length&&n!==0&&n<Kt[r].priority;r++);Kt.splice(r,0,e),r===0&&qf(e)}};var Wf=a.version;if(Wf!=="19.1.0")throw Error(o(527,Wf,"19.1.0"));Y.findDOMNode=function(e){var n=e._reactInternals;if(n===void 0)throw typeof e.render=="function"?Error(o(188)):(e=Object.keys(e).join(","),Error(o(268,e)));return e=h(n),e=e!==null?m(e):null,e=e===null?null:e.stateNode,e};var AF={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:z,reconcilerVersion:"19.1.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ro=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ro.isDisabled&&Ro.supportsFiber)try{H2=Ro.inject(AF),A2=Ro}catch{}}return qr.createRoot=function(e,n){if(!c(e))throw Error(o(299));var r=!1,i="",l=c3,p=A3,D=l3,S=null;return n!=null&&(n.unstable_strictMode===!0&&(r=!0),n.identifierPrefix!==void 0&&(i=n.identifierPrefix),n.onUncaughtError!==void 0&&(l=n.onUncaughtError),n.onCaughtError!==void 0&&(p=n.onCaughtError),n.onRecoverableError!==void 0&&(D=n.onRecoverableError),n.unstable_transitionCallbacks!==void 0&&(S=n.unstable_transitionCallbacks)),n=Lf(e,1,!1,null,null,r,i,l,p,D,S,null),e[C0]=n.current,SA(e),new WA(n)},qr.hydrateRoot=function(e,n,r){if(!c(e))throw Error(o(299));var i=!1,l="",p=c3,D=A3,S=l3,I=null,H=null;return r!=null&&(r.unstable_strictMode===!0&&(i=!0),r.identifierPrefix!==void 0&&(l=r.identifierPrefix),r.onUncaughtError!==void 0&&(p=r.onUncaughtError),r.onCaughtError!==void 0&&(D=r.onCaughtError),r.onRecoverableError!==void 0&&(S=r.onRecoverableError),r.unstable_transitionCallbacks!==void 0&&(I=r.unstable_transitionCallbacks),r.formState!==void 0&&(H=r.formState)),n=Lf(e,1,!0,n,r??null,i,l,p,D,S,I,H),n.context=zf(null),r=n.current,i=ae(),i=Wa(i),l=Tt(i),l.callback=null,Ot(r,l,i),r=i,n.current.lanes=r,An(n,r),We(n),e[C0]=n.current,SA(e),new Oo(n)},qr.version="19.1.0",qr}var ap;function bF(){if(ap)return XA.exports;ap=1;function t(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(a){console.error(a)}}return t(),XA.exports=yF(),XA.exports}var FF=bF(),b=ud();const a2=yi(b),bi=Mm({__proto__:null,default:a2},[b]);var Hr={},rp;function EF(){if(rp)return Hr;rp=1,Object.defineProperty(Hr,"__esModule",{value:!0}),Hr.parse=d,Hr.serialize=m;const t=/^[\u0021-\u003A\u003C\u003E-\u007E]+$/,a=/^[\u0021-\u003A\u003C-\u007E]*$/,s=/^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i,o=/^[\u0020-\u003A\u003D-\u007E]*$/,c=Object.prototype.toString,A=(()=>{const F=function(){};return F.prototype=Object.create(null),F})();function d(F,E){const B=new A,v=F.length;if(v<2)return B;const x=(E==null?void 0:E.decode)||y;let _=0;do{const k=F.indexOf("=",_);if(k===-1)break;const w=F.indexOf(";",_),O=w===-1?v:w;if(k>O){_=F.lastIndexOf(";",k-1)+1;continue}const R=u(F,_,k),T=h(F,k,R),L=F.slice(R,T);if(B[L]===void 0){let j=u(F,k+1,O),q=h(F,O,j);const r0=x(F.slice(j,q));B[L]=r0}_=O+1}while(_<v);return B}function u(F,E,B){do{const v=F.charCodeAt(E);if(v!==32&&v!==9)return E}while(++E<B);return B}function h(F,E,B){for(;E>B;){const v=F.charCodeAt(--E);if(v!==32&&v!==9)return E+1}return B}function m(F,E,B){const v=(B==null?void 0:B.encode)||encodeURIComponent;if(!t.test(F))throw new TypeError(`argument name is invalid: ${F}`);const x=v(E);if(!a.test(x))throw new TypeError(`argument val is invalid: ${E}`);let _=F+"="+x;if(!B)return _;if(B.maxAge!==void 0){if(!Number.isInteger(B.maxAge))throw new TypeError(`option maxAge is invalid: ${B.maxAge}`);_+="; Max-Age="+B.maxAge}if(B.domain){if(!s.test(B.domain))throw new TypeError(`option domain is invalid: ${B.domain}`);_+="; Domain="+B.domain}if(B.path){if(!o.test(B.path))throw new TypeError(`option path is invalid: ${B.path}`);_+="; Path="+B.path}if(B.expires){if(!g(B.expires)||!Number.isFinite(B.expires.valueOf()))throw new TypeError(`option expires is invalid: ${B.expires}`);_+="; Expires="+B.expires.toUTCString()}if(B.httpOnly&&(_+="; HttpOnly"),B.secure&&(_+="; Secure"),B.partitioned&&(_+="; Partitioned"),B.priority)switch(typeof B.priority=="string"?B.priority.toLowerCase():void 0){case"low":_+="; Priority=Low";break;case"medium":_+="; Priority=Medium";break;case"high":_+="; Priority=High";break;default:throw new TypeError(`option priority is invalid: ${B.priority}`)}if(B.sameSite)switch(typeof B.sameSite=="string"?B.sameSite.toLowerCase():B.sameSite){case!0:case"strict":_+="; SameSite=Strict";break;case"lax":_+="; SameSite=Lax";break;case"none":_+="; SameSite=None";break;default:throw new TypeError(`option sameSite is invalid: ${B.sameSite}`)}return _}function y(F){if(F.indexOf("%")===-1)return F;try{return decodeURIComponent(F)}catch{return F}}function g(F){return c.call(F)==="[object Date]"}return Hr}EF();/**
 * react-router v7.6.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */var jm=t=>{throw TypeError(t)},BF=(t,a,s)=>a.has(t)||jm("Cannot "+s),el=(t,a,s)=>(BF(t,a,"read from private field"),s?s.call(t):a.get(t)),vF=(t,a,s)=>a.has(t)?jm("Cannot add the same private member more than once"):a instanceof WeakSet?a.add(t):a.set(t,s),sp="popstate";function DF(t={}){function a(o,c){let{pathname:A,search:d,hash:u}=o.location;return ns("",{pathname:A,search:d,hash:u},c.state&&c.state.usr||null,c.state&&c.state.key||"default")}function s(o,c){return typeof c=="string"?c:$t(c)}return _F(a,s,null,t)}function N0(t,a){if(t===!1||t===null||typeof t>"u")throw new Error(a)}function y2(t,a){if(!t){typeof console<"u"&&console.warn(a);try{throw new Error(a)}catch{}}}function xF(){return Math.random().toString(36).substring(2,10)}function op(t,a){return{usr:t.state,key:t.key,idx:a}}function ns(t,a,s=null,o){return{pathname:typeof t=="string"?t:t.pathname,search:"",hash:"",...typeof a=="string"?tn(a):a,state:s,key:a&&a.key||o||xF()}}function $t({pathname:t="/",search:a="",hash:s=""}){return a&&a!=="?"&&(t+=a.charAt(0)==="?"?a:"?"+a),s&&s!=="#"&&(t+=s.charAt(0)==="#"?s:"#"+s),t}function tn(t){let a={};if(t){let s=t.indexOf("#");s>=0&&(a.hash=t.substring(s),t=t.substring(0,s));let o=t.indexOf("?");o>=0&&(a.search=t.substring(o),t=t.substring(0,o)),t&&(a.pathname=t)}return a}function _F(t,a,s,o={}){let{window:c=document.defaultView,v5Compat:A=!1}=o,d=c.history,u="POP",h=null,m=y();m==null&&(m=0,d.replaceState({...d.state,idx:m},""));function y(){return(d.state||{idx:null}).idx}function g(){u="POP";let x=y(),_=x==null?null:x-m;m=x,h&&h({action:u,location:v.location,delta:_})}function F(x,_){u="PUSH";let k=ns(v.location,x,_);m=y()+1;let w=op(k,m),O=v.createHref(k);try{d.pushState(w,"",O)}catch(R){if(R instanceof DOMException&&R.name==="DataCloneError")throw R;c.location.assign(O)}A&&h&&h({action:u,location:v.location,delta:1})}function E(x,_){u="REPLACE";let k=ns(v.location,x,_);m=y();let w=op(k,m),O=v.createHref(k);d.replaceState(w,"",O),A&&h&&h({action:u,location:v.location,delta:0})}function B(x){return Vm(x)}let v={get action(){return u},get location(){return t(c,d)},listen(x){if(h)throw new Error("A history only accepts one active listener");return c.addEventListener(sp,g),h=x,()=>{c.removeEventListener(sp,g),h=null}},createHref(x){return a(c,x)},createURL:B,encodeLocation(x){let _=B(x);return{pathname:_.pathname,search:_.search,hash:_.hash}},push:F,replace:E,go(x){return d.go(x)}};return v}function Vm(t,a=!1){let s="http://localhost";typeof window<"u"&&(s=window.location.origin!=="null"?window.location.origin:window.location.href),N0(s,"No window.location.(origin|href) available to create URL");let o=typeof t=="string"?t:$t(t);return o=o.replace(/ $/,"%20"),!a&&o.startsWith("//")&&(o=s+o),new URL(o,s)}var Jr,ip=class{constructor(t){if(vF(this,Jr,new Map),t)for(let[a,s]of t)this.set(a,s)}get(t){if(el(this,Jr).has(t))return el(this,Jr).get(t);if(t.defaultValue!==void 0)return t.defaultValue;throw new Error("No value found for context")}set(t,a){el(this,Jr).set(t,a)}};Jr=new WeakMap;var wF=new Set(["lazy","caseSensitive","path","id","index","children"]);function SF(t){return wF.has(t)}var kF=new Set(["lazy","caseSensitive","path","id","index","unstable_middleware","children"]);function TF(t){return kF.has(t)}function OF(t){return t.index===!0}function ri(t,a,s=[],o={}){return t.map((c,A)=>{let d=[...s,String(A)],u=typeof c.id=="string"?c.id:d.join("-");if(N0(c.index!==!0||!c.children,"Cannot specify children on an index route"),N0(!o[u],`Found a route id collision on id "${u}".  Route id's must be globally unique within Data Router usages`),OF(c)){let h={...c,...a(c),id:u};return o[u]=h,h}else{let h={...c,...a(c),id:u,children:void 0};return o[u]=h,c.children&&(h.children=ri(c.children,a,d,o)),h}})}function yt(t,a,s="/"){return Jo(t,a,s,!1)}function Jo(t,a,s,o){let c=typeof a=="string"?tn(a):a,A=le(c.pathname||"/",s);if(A==null)return null;let d=qm(t);RF(d);let u=null;for(let h=0;u==null&&h<d.length;++h){let m=Ym(A);u=VF(d[h],m,o)}return u}function Gm(t,a){let{route:s,pathname:o,params:c}=t;return{id:s.id,pathname:o,params:c,data:a[s.id],handle:s.handle}}function qm(t,a=[],s=[],o=""){let c=(A,d,u)=>{let h={relativePath:u===void 0?A.path||"":u,caseSensitive:A.caseSensitive===!0,childrenIndex:d,route:A};h.relativePath.startsWith("/")&&(N0(h.relativePath.startsWith(o),`Absolute route path "${h.relativePath}" nested under path "${o}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`),h.relativePath=h.relativePath.slice(o.length));let m=Je([o,h.relativePath]),y=s.concat(h);A.children&&A.children.length>0&&(N0(A.index!==!0,`Index routes must not have child routes. Please remove all child routes from route path "${m}".`),qm(A.children,a,y,m)),!(A.path==null&&!A.index)&&a.push({path:m,score:UF(m,A.index),routesMeta:y})};return t.forEach((A,d)=>{var u;if(A.path===""||!((u=A.path)!=null&&u.includes("?")))c(A,d);else for(let h of Hm(A.path))c(A,d,h)}),a}function Hm(t){let a=t.split("/");if(a.length===0)return[];let[s,...o]=a,c=s.endsWith("?"),A=s.replace(/\?$/,"");if(o.length===0)return c?[A,""]:[A];let d=Hm(o.join("/")),u=[];return u.push(...d.map(h=>h===""?A:[A,h].join("/"))),c&&u.push(...d),u.map(h=>t.startsWith("/")&&h===""?"/":h)}function RF(t){t.sort((a,s)=>a.score!==s.score?s.score-a.score:jF(a.routesMeta.map(o=>o.childrenIndex),s.routesMeta.map(o=>o.childrenIndex)))}var PF=/^:[\w-]+$/,IF=3,NF=2,LF=1,zF=10,MF=-2,cp=t=>t==="*";function UF(t,a){let s=t.split("/"),o=s.length;return s.some(cp)&&(o+=MF),a&&(o+=NF),s.filter(c=>!cp(c)).reduce((c,A)=>c+(PF.test(A)?IF:A===""?LF:zF),o)}function jF(t,a){return t.length===a.length&&t.slice(0,-1).every((o,c)=>o===a[c])?t[t.length-1]-a[a.length-1]:0}function VF(t,a,s=!1){let{routesMeta:o}=t,c={},A="/",d=[];for(let u=0;u<o.length;++u){let h=o[u],m=u===o.length-1,y=A==="/"?a:a.slice(A.length)||"/",g=Tn({path:h.relativePath,caseSensitive:h.caseSensitive,end:m},y),F=h.route;if(!g&&m&&s&&!o[o.length-1].route.index&&(g=Tn({path:h.relativePath,caseSensitive:h.caseSensitive,end:!1},y)),!g)return null;Object.assign(c,g.params),d.push({params:c,pathname:Je([A,g.pathname]),pathnameBase:YF(Je([A,g.pathnameBase])),route:F}),g.pathnameBase!=="/"&&(A=Je([A,g.pathnameBase]))}return d}function Tn(t,a){typeof t=="string"&&(t={path:t,caseSensitive:!1,end:!0});let[s,o]=GF(t.path,t.caseSensitive,t.end),c=a.match(s);if(!c)return null;let A=c[0],d=A.replace(/(.)\/+$/,"$1"),u=c.slice(1);return{params:o.reduce((m,{paramName:y,isOptional:g},F)=>{if(y==="*"){let B=u[F]||"";d=A.slice(0,A.length-B.length).replace(/(.)\/+$/,"$1")}const E=u[F];return g&&!E?m[y]=void 0:m[y]=(E||"").replace(/%2F/g,"/"),m},{}),pathname:A,pathnameBase:d,pattern:t}}function GF(t,a=!1,s=!0){y2(t==="*"||!t.endsWith("*")||t.endsWith("/*"),`Route path "${t}" will be treated as if it were "${t.replace(/\*$/,"/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${t.replace(/\*$/,"/*")}".`);let o=[],c="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(d,u,h)=>(o.push({paramName:u,isOptional:h!=null}),h?"/?([^\\/]+)?":"/([^\\/]+)"));return t.endsWith("*")?(o.push({paramName:"*"}),c+=t==="*"||t==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):s?c+="\\/*$":t!==""&&t!=="/"&&(c+="(?:(?=\\/|$))"),[new RegExp(c,a?void 0:"i"),o]}function Ym(t){try{return t.split("/").map(a=>decodeURIComponent(a).replace(/\//g,"%2F")).join("/")}catch(a){return y2(!1,`The URL path "${t}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${a}).`),t}}function le(t,a){if(a==="/")return t;if(!t.toLowerCase().startsWith(a.toLowerCase()))return null;let s=a.endsWith("/")?a.length-1:a.length,o=t.charAt(s);return o&&o!=="/"?null:t.slice(s)||"/"}function qF(t,a="/"){let{pathname:s,search:o="",hash:c=""}=typeof t=="string"?tn(t):t;return{pathname:s?s.startsWith("/")?s:HF(s,a):a,search:WF(o),hash:KF(c)}}function HF(t,a){let s=a.replace(/\/+$/,"").split("/");return t.split("/").forEach(c=>{c===".."?s.length>1&&s.pop():c!=="."&&s.push(c)}),s.length>1?s.join("/"):"/"}function tl(t,a,s,o){return`Cannot include a '${t}' character in a manually specified \`to.${a}\` field [${JSON.stringify(o)}].  Please separate it out to the \`to.${s}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`}function Wm(t){return t.filter((a,s)=>s===0||a.route.path&&a.route.path.length>0)}function fd(t){let a=Wm(t);return a.map((s,o)=>o===a.length-1?s.pathname:s.pathnameBase)}function pd(t,a,s,o=!1){let c;typeof t=="string"?c=tn(t):(c={...t},N0(!c.pathname||!c.pathname.includes("?"),tl("?","pathname","search",c)),N0(!c.pathname||!c.pathname.includes("#"),tl("#","pathname","hash",c)),N0(!c.search||!c.search.includes("#"),tl("#","search","hash",c)));let A=t===""||c.pathname==="",d=A?"/":c.pathname,u;if(d==null)u=s;else{let g=a.length-1;if(!o&&d.startsWith("..")){let F=d.split("/");for(;F[0]==="..";)F.shift(),g-=1;c.pathname=F.join("/")}u=g>=0?a[g]:"/"}let h=qF(c,u),m=d&&d!=="/"&&d.endsWith("/"),y=(A||d===".")&&s.endsWith("/");return!h.pathname.endsWith("/")&&(m||y)&&(h.pathname+="/"),h}var Je=t=>t.join("/").replace(/\/\/+/g,"/"),YF=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),WF=t=>!t||t==="?"?"":t.startsWith("?")?t:"?"+t,KF=t=>!t||t==="#"?"":t.startsWith("#")?t:"#"+t,si=class{constructor(t,a,s,o=!1){this.status=t,this.statusText=a||"",this.internal=o,s instanceof Error?(this.data=s.toString(),this.error=s):this.data=s}};function as(t){return t!=null&&typeof t.status=="number"&&typeof t.statusText=="string"&&typeof t.internal=="boolean"&&"data"in t}var Km=["POST","PUT","PATCH","DELETE"],XF=new Set(Km),JF=["GET",...Km],ZF=new Set(JF),$F=new Set([301,302,303,307,308]),QF=new Set([307,308]),nl={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},eE={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},Yr={state:"unblocked",proceed:void 0,reset:void 0,location:void 0},md=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,tE=t=>({hasErrorBoundary:!!t.hasErrorBoundary}),Xm="remix-router-transitions",Jm=Symbol("ResetLoaderData");function nE(t){const a=t.window?t.window:typeof window<"u"?window:void 0,s=typeof a<"u"&&typeof a.document<"u"&&typeof a.document.createElement<"u";N0(t.routes.length>0,"You must provide a non-empty routes array to createRouter");let o=t.hydrationRouteProperties||[],c=t.mapRouteProperties||tE,A={},d=ri(t.routes,c,void 0,A),u,h=t.basename||"/",m=t.dataStrategy||iE,y={unstable_middleware:!1,...t.future},g=null,F=new Set,E=null,B=null,v=null,x=t.hydrationData!=null,_=yt(d,t.history.location,h),k=!1,w=null,O;if(_==null&&!t.patchRoutesOnNavigation){let N=Fe(404,{pathname:t.history.location.pathname}),{matches:V,route:J}=bp(d);O=!0,_=V,w={[J.id]:N}}else if(_&&!t.hydrationData&&ln(_,d,t.history.location.pathname).active&&(_=null),_)if(_.some(N=>N.route.lazy))O=!1;else if(!_.some(N=>N.route.loader))O=!0;else{let N=t.hydrationData?t.hydrationData.loaderData:null,V=t.hydrationData?t.hydrationData.errors:null;if(V){let J=_.findIndex(o0=>V[o0.route.id]!==void 0);O=_.slice(0,J+1).every(o0=>!Pl(o0.route,N,V))}else O=_.every(J=>!Pl(J.route,N,V))}else{O=!1,_=[];let N=ln(null,d,t.history.location.pathname);N.active&&N.matches&&(k=!0,_=N.matches)}let R,T={historyAction:t.history.action,location:t.history.location,matches:_,initialized:O,navigation:nl,restoreScrollPosition:t.hydrationData!=null?!1:null,preventScrollReset:!1,revalidation:"idle",loaderData:t.hydrationData&&t.hydrationData.loaderData||{},actionData:t.hydrationData&&t.hydrationData.actionData||null,errors:t.hydrationData&&t.hydrationData.errors||w,fetchers:new Map,blockers:new Map},L="POP",j=!1,q,r0=!1,d0=new Map,i0=null,A0=!1,W=!1,u0=new Set,z=new Map,Y=0,$=-1,Z=new Map,P=new Set,Q=new Map,e0=new Map,a0=new Set,f0=new Map,B0,g0=null;function K0(){if(g=t.history.listen(({action:N,location:V,delta:J})=>{if(B0){B0(),B0=void 0;return}y2(f0.size===0||J!=null,"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");let o0=Es({currentLocation:T.location,nextLocation:V,historyAction:N});if(o0&&J!=null){let l0=new Promise(C0=>{B0=C0});t.history.go(J*-1),Ve(o0,{state:"blocked",location:V,proceed(){Ve(o0,{state:"proceeding",proceed:void 0,reset:void 0,location:V}),l0.then(()=>t.history.go(J))},reset(){let C0=new Map(T.blockers);C0.set(o0,Yr),G0({blockers:C0})}});return}return q2(N,V)}),s){CE(a,d0);let N=()=>yE(a,d0);a.addEventListener("pagehide",N),i0=()=>a.removeEventListener("pagehide",N)}return T.initialized||q2("POP",T.location,{initialHydration:!0}),R}function x0(){g&&g(),i0&&i0(),F.clear(),q&&q.abort(),T.fetchers.forEach((N,V)=>w2(V)),T.blockers.forEach((N,V)=>cn(V))}function R0(N){return F.add(N),()=>F.delete(N)}function G0(N,V={}){T={...T,...N};let J=[],o0=[];T.fetchers.forEach((l0,C0)=>{l0.state==="idle"&&(a0.has(C0)?J.push(C0):o0.push(C0))}),a0.forEach(l0=>{!T.fetchers.has(l0)&&!z.has(l0)&&J.push(l0)}),[...F].forEach(l0=>l0(T,{deletedFetchers:J,viewTransitionOpts:V.viewTransitionOpts,flushSync:V.flushSync===!0})),J.forEach(l0=>w2(l0)),o0.forEach(l0=>T.fetchers.delete(l0))}function u2(N,V,{flushSync:J}={}){var E0,w0;let o0=T.actionData!=null&&T.navigation.formMethod!=null&&ie(T.navigation.formMethod)&&T.navigation.state==="loading"&&((E0=N.state)==null?void 0:E0._isRedirect)!==!0,l0;V.actionData?Object.keys(V.actionData).length>0?l0=V.actionData:l0=null:o0?l0=T.actionData:l0=null;let C0=V.loaderData?Cp(T.loaderData,V.loaderData,V.matches||[],V.errors):T.loaderData,v0=T.blockers;v0.size>0&&(v0=new Map(v0),v0.forEach((y0,k0)=>v0.set(k0,Yr)));let p0=j===!0||T.navigation.formMethod!=null&&ie(T.navigation.formMethod)&&((w0=N.state)==null?void 0:w0._isRedirect)!==!0;u&&(d=u,u=void 0),A0||L==="POP"||(L==="PUSH"?t.history.push(N,N.state):L==="REPLACE"&&t.history.replace(N,N.state));let F0;if(L==="POP"){let y0=d0.get(T.location.pathname);y0&&y0.has(N.pathname)?F0={currentLocation:T.location,nextLocation:N}:d0.has(N.pathname)&&(F0={currentLocation:N,nextLocation:T.location})}else if(r0){let y0=d0.get(T.location.pathname);y0?y0.add(N.pathname):(y0=new Set([N.pathname]),d0.set(T.location.pathname,y0)),F0={currentLocation:T.location,nextLocation:N}}G0({...V,actionData:l0,loaderData:C0,historyAction:L,location:N,initialized:!0,navigation:nl,revalidation:"idle",restoreScrollPosition:vs(N,V.matches||T.matches),preventScrollReset:p0,blockers:v0},{viewTransitionOpts:F0,flushSync:J===!0}),L="POP",j=!1,r0=!1,A0=!1,W=!1,g0==null||g0.resolve(),g0=null}async function R2(N,V){if(typeof N=="number"){t.history.go(N);return}let J=Rl(T.location,T.matches,h,N,V==null?void 0:V.fromRouteId,V==null?void 0:V.relative),{path:o0,submission:l0,error:C0}=Ap(!1,J,V),v0=T.location,p0=ns(T.location,o0,V&&V.state);p0={...p0,...t.history.encodeLocation(p0)};let F0=V&&V.replace!=null?V.replace:void 0,E0="PUSH";F0===!0?E0="REPLACE":F0===!1||l0!=null&&ie(l0.formMethod)&&l0.formAction===T.location.pathname+T.location.search&&(E0="REPLACE");let w0=V&&"preventScrollReset"in V?V.preventScrollReset===!0:void 0,y0=(V&&V.flushSync)===!0,k0=Es({currentLocation:v0,nextLocation:p0,historyAction:E0});if(k0){Ve(k0,{state:"blocked",location:p0,proceed(){Ve(k0,{state:"proceeding",proceed:void 0,reset:void 0,location:p0}),R2(N,V)},reset(){let q0=new Map(T.blockers);q0.set(k0,Yr),G0({blockers:q0})}});return}await q2(E0,p0,{submission:l0,pendingError:C0,preventScrollReset:w0,replace:V&&V.replace,enableViewTransition:V&&V.viewTransition,flushSync:y0})}function Se(){g0||(g0=bE()),Ya(),G0({revalidation:"loading"});let N=g0.promise;return T.navigation.state==="submitting"?N:T.navigation.state==="idle"?(q2(T.historyAction,T.location,{startUninterruptedRevalidation:!0}),N):(q2(L||T.historyAction,T.navigation.location,{overrideNavigation:T.navigation,enableViewTransition:r0===!0}),N)}async function q2(N,V,J){q&&q.abort(),q=null,L=N,A0=(J&&J.startUninterruptedRevalidation)===!0,An(T.location,T.matches),j=(J&&J.preventScrollReset)===!0,r0=(J&&J.enableViewTransition)===!0;let o0=u||d,l0=J&&J.overrideNavigation,C0=J!=null&&J.initialHydration&&T.matches&&T.matches.length>0&&!k?T.matches:yt(o0,V,h),v0=(J&&J.flushSync)===!0;if(C0&&T.initialized&&!W&&fE(T.location,V)&&!(J&&J.submission&&ie(J.submission.formMethod))){u2(V,{matches:C0},{flushSync:v0});return}let p0=ln(C0,o0,V.pathname);if(p0.active&&p0.matches&&(C0=p0.matches),!C0){let{error:l2,notFoundMatches:H0,route:j0}=Vn(V.pathname);u2(V,{matches:H0,loaderData:{},errors:{[j0.id]:l2}},{flushSync:v0});return}q=new AbortController;let F0=_a(t.history,V,q.signal,J&&J.submission),E0=new ip(t.unstable_getContext?await t.unstable_getContext():void 0),w0;if(J&&J.pendingError)w0=[Sn(C0).route.id,{type:"error",error:J.pendingError}];else if(J&&J.submission&&ie(J.submission.formMethod)){let l2=await Ga(F0,V,J.submission,C0,E0,p0.active,J&&J.initialHydration===!0,{replace:J.replace,flushSync:v0});if(l2.shortCircuited)return;if(l2.pendingActionResult){let[H0,j0]=l2.pendingActionResult;if(oe(j0)&&as(j0.error)&&j0.error.status===404){q=null,u2(V,{matches:l2.matches,loaderData:{},errors:{[H0]:j0.error}});return}}C0=l2.matches||C0,w0=l2.pendingActionResult,l0=al(V,J.submission),v0=!1,p0.active=!1,F0=_a(t.history,F0.url,F0.signal)}let{shortCircuited:y0,matches:k0,loaderData:q0,errors:o2}=await qa(F0,V,C0,E0,p0.active,l0,J&&J.submission,J&&J.fetcherSubmission,J&&J.replace,J&&J.initialHydration===!0,v0,w0);y0||(q=null,u2(V,{matches:k0||C0,...yp(w0),loaderData:q0,errors:o2}))}async function Ga(N,V,J,o0,l0,C0,v0,p0={}){Ya();let F0=hE(V,J);if(G0({navigation:F0},{flushSync:p0.flushSync===!0}),C0){let y0=await dn(o0,V.pathname,N.signal);if(y0.type==="aborted")return{shortCircuited:!0};if(y0.type==="error"){let k0=Sn(y0.partialMatches).route.id;return{matches:y0.partialMatches,pendingActionResult:[k0,{type:"error",error:y0.error}]}}else if(y0.matches)o0=y0.matches;else{let{notFoundMatches:k0,error:q0,route:o2}=Vn(V.pathname);return{matches:k0,pendingActionResult:[o2.id,{type:"error",error:q0}]}}}let E0,w0=Zr(o0,V);if(!w0.route.action&&!w0.route.lazy)E0={type:"error",error:Fe(405,{method:N.method,pathname:V.pathname,routeId:w0.route.id})};else{let y0=Sa(c,A,N,o0,w0,v0?[]:o,l0),k0=await Bt(N,y0,l0,null);if(E0=k0[w0.route.id],!E0){for(let q0 of o0)if(k0[q0.route.id]){E0=k0[q0.route.id];break}}if(N.signal.aborted)return{shortCircuited:!0}}if(kn(E0)){let y0;return p0&&p0.replace!=null?y0=p0.replace:y0=mp(E0.response.headers.get("Location"),new URL(N.url),h)===T.location.pathname+T.location.search,await nt(N,E0,!0,{submission:J,replace:y0}),{shortCircuited:!0}}if(oe(E0)){let y0=Sn(o0,w0.route.id);return(p0&&p0.replace)!==!0&&(L="PUSH"),{matches:o0,pendingActionResult:[y0.route.id,E0,w0.route.id]}}return{matches:o0,pendingActionResult:[w0.route.id,E0]}}async function qa(N,V,J,o0,l0,C0,v0,p0,F0,E0,w0,y0){let k0=C0||al(V,v0),q0=v0||p0||Ep(k0),o2=!A0&&!E0;if(l0){if(o2){let P2=M2(y0);G0({navigation:k0,...P2!==void 0?{actionData:P2}:{}},{flushSync:w0})}let L0=await dn(J,V.pathname,N.signal);if(L0.type==="aborted")return{shortCircuited:!0};if(L0.type==="error"){let P2=Sn(L0.partialMatches).route.id;return{matches:L0.partialMatches,loaderData:{},errors:{[P2]:L0.error}}}else if(L0.matches)J=L0.matches;else{let{error:P2,notFoundMatches:Te,route:Oe}=Vn(V.pathname);return{matches:Te,loaderData:{},errors:{[Oe.id]:P2}}}}let l2=u||d,{dsMatches:H0,revalidatingFetchers:j0}=lp(N,o0,c,A,t.history,T,J,q0,V,E0?[]:o,E0===!0,W,u0,a0,Q,P,l2,h,t.patchRoutesOnNavigation!=null,y0);if($=++Y,!t.dataStrategy&&!H0.some(L0=>L0.shouldLoad)&&j0.length===0){let L0=sn();return u2(V,{matches:J,loaderData:{},errors:y0&&oe(y0[1])?{[y0[0]]:y0[1].error}:null,...yp(y0),...L0?{fetchers:new Map(T.fetchers)}:{}},{flushSync:w0}),{shortCircuited:!0}}if(o2){let L0={};if(!l0){L0.navigation=k0;let P2=M2(y0);P2!==void 0&&(L0.actionData=P2)}j0.length>0&&(L0.fetchers=Ha(j0)),G0(L0,{flushSync:w0})}j0.forEach(L0=>{je(L0.key),L0.controller&&z.set(L0.key,L0.controller)});let vt=()=>j0.forEach(L0=>je(L0.key));q&&q.signal.addEventListener("abort",vt);let{loaderResults:U2,fetcherResults:de}=await bs(H0,j0,N,o0);if(N.signal.aborted)return{shortCircuited:!0};q&&q.signal.removeEventListener("abort",vt),j0.forEach(L0=>z.delete(L0.key));let Y2=Po(U2);if(Y2)return await nt(N,Y2.result,!0,{replace:F0}),{shortCircuited:!0};if(Y2=Po(de),Y2)return P.add(Y2.key),await nt(N,Y2.result,!0,{replace:F0}),{shortCircuited:!0};let{loaderData:Dt,errors:xt}=gp(T,J,U2,y0,j0,de);E0&&T.errors&&(xt={...T.errors,...xt});let Xa=sn(),ue=on($),rt=Xa||ue||j0.length>0;return{matches:J,loaderData:Dt,errors:xt,...rt?{fetchers:new Map(T.fetchers)}:{}}}function M2(N){if(N&&!oe(N[1]))return{[N[0]]:N[1].data};if(T.actionData)return Object.keys(T.actionData).length===0?null:T.actionData}function Ha(N){return N.forEach(V=>{let J=T.fetchers.get(V.key),o0=Wr(void 0,J?J.data:void 0);T.fetchers.set(V.key,o0)}),new Map(T.fetchers)}async function tt(N,V,J,o0){je(N);let l0=(o0&&o0.flushSync)===!0,C0=u||d,v0=Rl(T.location,T.matches,h,J,V,o0==null?void 0:o0.relative),p0=yt(C0,v0,h),F0=ln(p0,C0,v0);if(F0.active&&F0.matches&&(p0=F0.matches),!p0){A2(N,V,Fe(404,{pathname:v0}),{flushSync:l0});return}let{path:E0,submission:w0,error:y0}=Ap(!0,v0,o0);if(y0){A2(N,V,y0,{flushSync:l0});return}let k0=Zr(p0,E0),q0=new ip(t.unstable_getContext?await t.unstable_getContext():void 0),o2=(o0&&o0.preventScrollReset)===!0;if(w0&&ie(w0.formMethod)){await ys(N,V,E0,k0,p0,q0,F0.active,l0,o2,w0);return}Q.set(N,{routeId:V,path:E0}),await jn(N,V,E0,k0,p0,q0,F0.active,l0,o2,w0)}async function ys(N,V,J,o0,l0,C0,v0,p0,F0,E0){Ya(),Q.delete(N);function w0(i2){if(!i2.route.action&&!i2.route.lazy){let _t=Fe(405,{method:E0.formMethod,pathname:J,routeId:V});return A2(N,V,_t,{flushSync:p0}),!0}return!1}if(!v0&&w0(o0))return;let y0=T.fetchers.get(N);H2(N,gE(E0,y0),{flushSync:p0});let k0=new AbortController,q0=_a(t.history,J,k0.signal,E0);if(v0){let i2=await dn(l0,J,q0.signal,N);if(i2.type==="aborted")return;if(i2.type==="error"){A2(N,V,i2.error,{flushSync:p0});return}else if(i2.matches){if(l0=i2.matches,o0=Zr(l0,J),w0(o0))return}else{A2(N,V,Fe(404,{pathname:J}),{flushSync:p0});return}}z.set(N,k0);let o2=Y,l2=Sa(c,A,q0,l0,o0,o,C0),j0=(await Bt(q0,l2,C0,N))[o0.route.id];if(q0.signal.aborted){z.get(N)===k0&&z.delete(N);return}if(a0.has(N)){if(kn(j0)||oe(j0)){H2(N,Jt(void 0));return}}else{if(kn(j0))if(z.delete(N),$>o2){H2(N,Jt(void 0));return}else return P.add(N),H2(N,Wr(E0)),nt(q0,j0,!1,{fetcherSubmission:E0,preventScrollReset:F0});if(oe(j0)){A2(N,V,j0.error);return}}let vt=T.navigation.location||T.location,U2=_a(t.history,vt,k0.signal),de=u||d,Y2=T.navigation.state!=="idle"?yt(de,T.navigation.location,h):T.matches;N0(Y2,"Didn't find any matches after fetcher action");let Dt=++Y;Z.set(N,Dt);let xt=Wr(E0,j0.data);T.fetchers.set(N,xt);let{dsMatches:Xa,revalidatingFetchers:ue}=lp(U2,C0,c,A,t.history,T,Y2,E0,vt,o,!1,W,u0,a0,Q,P,de,h,t.patchRoutesOnNavigation!=null,[o0.route.id,j0]);ue.filter(i2=>i2.key!==N).forEach(i2=>{let _t=i2.key,Ja=T.fetchers.get(_t),W2=Wr(void 0,Ja?Ja.data:void 0);T.fetchers.set(_t,W2),je(_t),i2.controller&&z.set(_t,i2.controller)}),G0({fetchers:new Map(T.fetchers)});let rt=()=>ue.forEach(i2=>je(i2.key));k0.signal.addEventListener("abort",rt);let{loaderResults:L0,fetcherResults:P2}=await bs(Xa,ue,U2,C0);if(k0.signal.aborted)return;if(k0.signal.removeEventListener("abort",rt),Z.delete(N),z.delete(N),ue.forEach(i2=>z.delete(i2.key)),T.fetchers.has(N)){let i2=Jt(j0.data);T.fetchers.set(N,i2)}let Te=Po(L0);if(Te)return nt(U2,Te.result,!1,{preventScrollReset:F0});if(Te=Po(P2),Te)return P.add(Te.key),nt(U2,Te.result,!1,{preventScrollReset:F0});let{loaderData:Oe,errors:un}=gp(T,Y2,L0,void 0,ue,P2);on(Dt),T.navigation.state==="loading"&&Dt>$?(N0(L,"Expected pending action"),q&&q.abort(),u2(T.navigation.location,{matches:Y2,loaderData:Oe,errors:un,fetchers:new Map(T.fetchers)})):(G0({errors:un,loaderData:Cp(T.loaderData,Oe,Y2,un),fetchers:new Map(T.fetchers)}),W=!1)}async function jn(N,V,J,o0,l0,C0,v0,p0,F0,E0){let w0=T.fetchers.get(N);H2(N,Wr(E0,w0?w0.data:void 0),{flushSync:p0});let y0=new AbortController,k0=_a(t.history,J,y0.signal);if(v0){let j0=await dn(l0,J,k0.signal,N);if(j0.type==="aborted")return;if(j0.type==="error"){A2(N,V,j0.error,{flushSync:p0});return}else if(j0.matches)l0=j0.matches,o0=Zr(l0,J);else{A2(N,V,Fe(404,{pathname:J}),{flushSync:p0});return}}z.set(N,y0);let q0=Y,o2=Sa(c,A,k0,l0,o0,o,C0),H0=(await Bt(k0,o2,C0,N))[o0.route.id];if(z.get(N)===y0&&z.delete(N),!k0.signal.aborted){if(a0.has(N)){H2(N,Jt(void 0));return}if(kn(H0))if($>q0){H2(N,Jt(void 0));return}else{P.add(N),await nt(k0,H0,!1,{preventScrollReset:F0});return}if(oe(H0)){A2(N,V,H0.error);return}H2(N,Jt(H0.data))}}async function nt(N,V,J,{submission:o0,fetcherSubmission:l0,preventScrollReset:C0,replace:v0}={}){V.response.headers.has("X-Remix-Revalidate")&&(W=!0);let p0=V.response.headers.get("Location");N0(p0,"Expected a Location header on the redirect Response"),p0=mp(p0,new URL(N.url),h);let F0=ns(T.location,p0,{_isRedirect:!0});if(s){let o2=!1;if(V.response.headers.has("X-Remix-Reload-Document"))o2=!0;else if(md.test(p0)){const l2=Vm(p0,!0);o2=l2.origin!==a.location.origin||le(l2.pathname,h)==null}if(o2){v0?a.location.replace(p0):a.location.assign(p0);return}}q=null;let E0=v0===!0||V.response.headers.has("X-Remix-Replace")?"REPLACE":"PUSH",{formMethod:w0,formAction:y0,formEncType:k0}=T.navigation;!o0&&!l0&&w0&&y0&&k0&&(o0=Ep(T.navigation));let q0=o0||l0;if(QF.has(V.response.status)&&q0&&ie(q0.formMethod))await q2(E0,F0,{submission:{...q0,formAction:p0},preventScrollReset:C0||j,enableViewTransition:J?r0:void 0});else{let o2=al(F0,o0);await q2(E0,F0,{overrideNavigation:o2,fetcherSubmission:l0,preventScrollReset:C0||j,enableViewTransition:J?r0:void 0})}}async function Bt(N,V,J,o0){let l0,C0={};try{l0=await cE(m,N,V,o0,J,!1)}catch(v0){return V.filter(p0=>p0.shouldLoad).forEach(p0=>{C0[p0.route.id]={type:"error",error:v0}}),C0}if(N.signal.aborted)return C0;for(let[v0,p0]of Object.entries(l0))if(pE(p0)){let F0=p0.result;C0[v0]={type:"redirect",response:dE(F0,N,v0,V,h)}}else C0[v0]=await lE(p0);return C0}async function bs(N,V,J,o0){let l0=Bt(J,N,o0,null),C0=Promise.all(V.map(async F0=>{if(F0.matches&&F0.match&&F0.request&&F0.controller){let w0=(await Bt(F0.request,F0.matches,o0,F0.key))[F0.match.route.id];return{[F0.key]:w0}}else return Promise.resolve({[F0.key]:{type:"error",error:Fe(404,{pathname:F0.path})}})})),v0=await l0,p0=(await C0).reduce((F0,E0)=>Object.assign(F0,E0),{});return{loaderResults:v0,fetcherResults:p0}}function Ya(){W=!0,Q.forEach((N,V)=>{z.has(V)&&u0.add(V),je(V)})}function H2(N,V,J={}){T.fetchers.set(N,V),G0({fetchers:new Map(T.fetchers)},{flushSync:(J&&J.flushSync)===!0})}function A2(N,V,J,o0={}){let l0=Sn(T.matches,V);w2(N),G0({errors:{[l0.route.id]:J},fetchers:new Map(T.fetchers)},{flushSync:(o0&&o0.flushSync)===!0})}function ke(N){return e0.set(N,(e0.get(N)||0)+1),a0.has(N)&&a0.delete(N),T.fetchers.get(N)||eE}function w2(N){let V=T.fetchers.get(N);z.has(N)&&!(V&&V.state==="loading"&&Z.has(N))&&je(N),Q.delete(N),Z.delete(N),P.delete(N),a0.delete(N),u0.delete(N),T.fetchers.delete(N)}function qi(N){let V=(e0.get(N)||0)-1;V<=0?(e0.delete(N),a0.add(N)):e0.set(N,V),G0({fetchers:new Map(T.fetchers)})}function je(N){let V=z.get(N);V&&(V.abort(),z.delete(N))}function Fs(N){for(let V of N){let J=ke(V),o0=Jt(J.data);T.fetchers.set(V,o0)}}function sn(){let N=[],V=!1;for(let J of P){let o0=T.fetchers.get(J);N0(o0,`Expected fetcher: ${J}`),o0.state==="loading"&&(P.delete(J),N.push(J),V=!0)}return Fs(N),V}function on(N){let V=[];for(let[J,o0]of Z)if(o0<N){let l0=T.fetchers.get(J);N0(l0,`Expected fetcher: ${J}`),l0.state==="loading"&&(je(J),Z.delete(J),V.push(J))}return Fs(V),V.length>0}function at(N,V){let J=T.blockers.get(N)||Yr;return f0.get(N)!==V&&f0.set(N,V),J}function cn(N){T.blockers.delete(N),f0.delete(N)}function Ve(N,V){let J=T.blockers.get(N)||Yr;N0(J.state==="unblocked"&&V.state==="blocked"||J.state==="blocked"&&V.state==="blocked"||J.state==="blocked"&&V.state==="proceeding"||J.state==="blocked"&&V.state==="unblocked"||J.state==="proceeding"&&V.state==="unblocked",`Invalid blocker state transition: ${J.state} -> ${V.state}`);let o0=new Map(T.blockers);o0.set(N,V),G0({blockers:o0})}function Es({currentLocation:N,nextLocation:V,historyAction:J}){if(f0.size===0)return;f0.size>1&&y2(!1,"A router only supports one blocker at a time");let o0=Array.from(f0.entries()),[l0,C0]=o0[o0.length-1],v0=T.blockers.get(l0);if(!(v0&&v0.state==="proceeding")&&C0({currentLocation:N,nextLocation:V,historyAction:J}))return l0}function Vn(N){let V=Fe(404,{pathname:N}),J=u||d,{matches:o0,route:l0}=bp(J);return{notFoundMatches:o0,route:l0,error:V}}function Bs(N,V,J){if(E=N,v=V,B=J||null,!x&&T.navigation===nl){x=!0;let o0=vs(T.location,T.matches);o0!=null&&G0({restoreScrollPosition:o0})}return()=>{E=null,v=null,B=null}}function Gn(N,V){return B&&B(N,V.map(o0=>Gm(o0,T.loaderData)))||N.key}function An(N,V){if(E&&v){let J=Gn(N,V);E[J]=v()}}function vs(N,V){if(E){let J=Gn(N,V),o0=E[J];if(typeof o0=="number")return o0}return null}function ln(N,V,J){if(t.patchRoutesOnNavigation)if(N){if(Object.keys(N[0].params).length>0)return{active:!0,matches:Jo(V,J,h,!0)}}else return{active:!0,matches:Jo(V,J,h,!0)||[]};return{active:!1,matches:null}}async function dn(N,V,J,o0){if(!t.patchRoutesOnNavigation)return{type:"success",matches:N};let l0=N;for(;;){let C0=u==null,v0=u||d,p0=A;try{await t.patchRoutesOnNavigation({signal:J,path:V,matches:l0,fetcherKey:o0,patch:(w0,y0)=>{J.aborted||dp(w0,y0,v0,p0,c)}})}catch(w0){return{type:"error",error:w0,partialMatches:l0}}finally{C0&&!J.aborted&&(d=[...d])}if(J.aborted)return{type:"aborted"};let F0=yt(v0,V,h);if(F0)return{type:"success",matches:F0};let E0=Jo(v0,V,h,!0);if(!E0||l0.length===E0.length&&l0.every((w0,y0)=>w0.route.id===E0[y0].route.id))return{type:"success",matches:null};l0=E0}}function Wa(N){A={},u=ri(N,c,void 0,A)}function Ka(N,V){let J=u==null;dp(N,V,u||d,A,c),J&&(d=[...d],G0({}))}return R={get basename(){return h},get future(){return y},get state(){return T},get routes(){return d},get window(){return a},initialize:K0,subscribe:R0,enableScrollRestoration:Bs,navigate:R2,fetch:tt,revalidate:Se,createHref:N=>t.history.createHref(N),encodeLocation:N=>t.history.encodeLocation(N),getFetcher:ke,deleteFetcher:qi,dispose:x0,getBlocker:at,deleteBlocker:cn,patchRoutes:Ka,_internalFetchControllers:z,_internalSetRoutes:Wa},R}function aE(t){return t!=null&&("formData"in t&&t.formData!=null||"body"in t&&t.body!==void 0)}function Rl(t,a,s,o,c,A){let d,u;if(c){d=[];for(let m of a)if(d.push(m),m.route.id===c){u=m;break}}else d=a,u=a[a.length-1];let h=pd(o||".",fd(d),le(t.pathname,s)||t.pathname,A==="path");if(o==null&&(h.search=t.search,h.hash=t.hash),(o==null||o===""||o===".")&&u){let m=hd(h.search);if(u.route.index&&!m)h.search=h.search?h.search.replace(/^\?/,"?index&"):"?index";else if(!u.route.index&&m){let y=new URLSearchParams(h.search),g=y.getAll("index");y.delete("index"),g.filter(E=>E).forEach(E=>y.append("index",E));let F=y.toString();h.search=F?`?${F}`:""}}return s!=="/"&&(h.pathname=h.pathname==="/"?s:Je([s,h.pathname])),$t(h)}function Ap(t,a,s){if(!s||!aE(s))return{path:a};if(s.formMethod&&!mE(s.formMethod))return{path:a,error:Fe(405,{method:s.formMethod})};let o=()=>({path:a,error:Fe(400,{type:"invalid-body"})}),A=(s.formMethod||"get").toUpperCase(),d=nh(a);if(s.body!==void 0){if(s.formEncType==="text/plain"){if(!ie(A))return o();let g=typeof s.body=="string"?s.body:s.body instanceof FormData||s.body instanceof URLSearchParams?Array.from(s.body.entries()).reduce((F,[E,B])=>`${F}${E}=${B}
`,""):String(s.body);return{path:a,submission:{formMethod:A,formAction:d,formEncType:s.formEncType,formData:void 0,json:void 0,text:g}}}else if(s.formEncType==="application/json"){if(!ie(A))return o();try{let g=typeof s.body=="string"?JSON.parse(s.body):s.body;return{path:a,submission:{formMethod:A,formAction:d,formEncType:s.formEncType,formData:void 0,json:g,text:void 0}}}catch{return o()}}}N0(typeof FormData=="function","FormData is not available in this environment");let u,h;if(s.formData)u=Nl(s.formData),h=s.formData;else if(s.body instanceof FormData)u=Nl(s.body),h=s.body;else if(s.body instanceof URLSearchParams)u=s.body,h=hp(u);else if(s.body==null)u=new URLSearchParams,h=new FormData;else try{u=new URLSearchParams(s.body),h=hp(u)}catch{return o()}let m={formMethod:A,formAction:d,formEncType:s&&s.formEncType||"application/x-www-form-urlencoded",formData:h,json:void 0,text:void 0};if(ie(m.formMethod))return{path:a,submission:m};let y=tn(a);return t&&y.search&&hd(y.search)&&u.append("index",""),y.search=`?${u}`,{path:$t(y),submission:m}}function lp(t,a,s,o,c,A,d,u,h,m,y,g,F,E,B,v,x,_,k,w){var A0;let O=w?oe(w[1])?w[1].error:w[1].data:void 0,R=c.createURL(A.location),T=c.createURL(h),L;if(y&&A.errors){let W=Object.keys(A.errors)[0];L=d.findIndex(u0=>u0.route.id===W)}else if(w&&oe(w[1])){let W=w[0];L=d.findIndex(u0=>u0.route.id===W)-1}let j=w?w[1].statusCode:void 0,q=j&&j>=400,r0={currentUrl:R,currentParams:((A0=A.matches[0])==null?void 0:A0.params)||{},nextUrl:T,nextParams:d[0].params,...u,actionResult:O,actionStatus:j},d0=d.map((W,u0)=>{let{route:z}=W,Y=null;if(L!=null&&u0>L?Y=!1:z.lazy?Y=!0:z.loader==null?Y=!1:y?Y=Pl(z,A.loaderData,A.errors):rE(A.loaderData,A.matches[u0],W)&&(Y=!0),Y!==null)return Il(s,o,t,W,m,a,Y);let $=q?!1:g||R.pathname+R.search===T.pathname+T.search||R.search!==T.search||sE(A.matches[u0],W),Z={...r0,defaultShouldRevalidate:$},P=oi(W,Z);return Il(s,o,t,W,m,a,P,Z)}),i0=[];return B.forEach((W,u0)=>{if(y||!d.some(a0=>a0.route.id===W.routeId)||E.has(u0))return;let z=A.fetchers.get(u0),Y=z&&z.state!=="idle"&&z.data===void 0,$=yt(x,W.path,_);if(!$){if(k&&Y)return;i0.push({key:u0,routeId:W.routeId,path:W.path,matches:null,match:null,request:null,controller:null});return}if(v.has(u0))return;let Z=Zr($,W.path),P=new AbortController,Q=_a(c,W.path,P.signal),e0=null;if(F.has(u0))F.delete(u0),e0=Sa(s,o,Q,$,Z,m,a);else if(Y)g&&(e0=Sa(s,o,Q,$,Z,m,a));else{let a0={...r0,defaultShouldRevalidate:q?!1:g};oi(Z,a0)&&(e0=Sa(s,o,Q,$,Z,m,a,a0))}e0&&i0.push({key:u0,routeId:W.routeId,path:W.path,matches:e0,match:Z,request:Q,controller:P})}),{dsMatches:d0,revalidatingFetchers:i0}}function Pl(t,a,s){if(t.lazy)return!0;if(!t.loader)return!1;let o=a!=null&&t.id in a,c=s!=null&&s[t.id]!==void 0;return!o&&c?!1:typeof t.loader=="function"&&t.loader.hydrate===!0?!0:!o&&!c}function rE(t,a,s){let o=!a||s.route.id!==a.route.id,c=!t.hasOwnProperty(s.route.id);return o||c}function sE(t,a){let s=t.route.path;return t.pathname!==a.pathname||s!=null&&s.endsWith("*")&&t.params["*"]!==a.params["*"]}function oi(t,a){if(t.route.shouldRevalidate){let s=t.route.shouldRevalidate(a);if(typeof s=="boolean")return s}return a.defaultShouldRevalidate}function dp(t,a,s,o,c){let A;if(t){let h=o[t];N0(h,`No route found to patch children into: routeId = ${t}`),h.children||(h.children=[]),A=h.children}else A=s;let d=a.filter(h=>!A.some(m=>Zm(h,m))),u=ri(d,c,[t||"_","patch",String((A==null?void 0:A.length)||"0")],o);A.push(...u)}function Zm(t,a){return"id"in t&&"id"in a&&t.id===a.id?!0:t.index===a.index&&t.path===a.path&&t.caseSensitive===a.caseSensitive?(!t.children||t.children.length===0)&&(!a.children||a.children.length===0)?!0:t.children.every((s,o)=>{var c;return(c=a.children)==null?void 0:c.some(A=>Zm(s,A))}):!1}var up=new WeakMap,$m=({key:t,route:a,manifest:s,mapRouteProperties:o})=>{let c=s[a.id];if(N0(c,"No route found in manifest"),!c.lazy||typeof c.lazy!="object")return;let A=c.lazy[t];if(!A)return;let d=up.get(c);d||(d={},up.set(c,d));let u=d[t];if(u)return u;let h=(async()=>{let m=SF(t),g=c[t]!==void 0&&t!=="hasErrorBoundary";if(m)y2(!m,"Route property "+t+" is not a supported lazy route property. This property will be ignored."),d[t]=Promise.resolve();else if(g)y2(!1,`Route "${c.id}" has a static property "${t}" defined. The lazy property will be ignored.`);else{let F=await A();F!=null&&(Object.assign(c,{[t]:F}),Object.assign(c,o(c)))}typeof c.lazy=="object"&&(c.lazy[t]=void 0,Object.values(c.lazy).every(F=>F===void 0)&&(c.lazy=void 0))})();return d[t]=h,h},fp=new WeakMap;function oE(t,a,s,o,c){let A=s[t.id];if(N0(A,"No route found in manifest"),!t.lazy)return{lazyRoutePromise:void 0,lazyHandlerPromise:void 0};if(typeof t.lazy=="function"){let y=fp.get(A);if(y)return{lazyRoutePromise:y,lazyHandlerPromise:y};let g=(async()=>{N0(typeof t.lazy=="function","No lazy route function found");let F=await t.lazy(),E={};for(let B in F){let v=F[B];if(v===void 0)continue;let x=TF(B),k=A[B]!==void 0&&B!=="hasErrorBoundary";x?y2(!x,"Route property "+B+" is not a supported property to be returned from a lazy route function. This property will be ignored."):k?y2(!k,`Route "${A.id}" has a static property "${B}" defined but its lazy function is also returning a value for this property. The lazy route property "${B}" will be ignored.`):E[B]=v}Object.assign(A,E),Object.assign(A,{...o(A),lazy:void 0})})();return fp.set(A,g),g.catch(()=>{}),{lazyRoutePromise:g,lazyHandlerPromise:g}}let d=Object.keys(t.lazy),u=[],h;for(let y of d){if(c&&c.includes(y))continue;let g=$m({key:y,route:t,manifest:s,mapRouteProperties:o});g&&(u.push(g),y===a&&(h=g))}let m=u.length>0?Promise.all(u).then(()=>{}):void 0;return m==null||m.catch(()=>{}),h==null||h.catch(()=>{}),{lazyRoutePromise:m,lazyHandlerPromise:h}}async function pp(t){let a=t.matches.filter(c=>c.shouldLoad),s={};return(await Promise.all(a.map(c=>c.resolve()))).forEach((c,A)=>{s[a[A].route.id]=c}),s}async function iE(t){return t.matches.some(a=>a.route.unstable_middleware)?Qm(t,!1,()=>pp(t),(a,s)=>({[s]:{type:"error",result:a}})):pp(t)}async function Qm(t,a,s,o){let{matches:c,request:A,params:d,context:u}=t,h={handlerResult:void 0};try{let m=c.flatMap(g=>g.route.unstable_middleware?g.route.unstable_middleware.map(F=>[g.route.id,F]):[]),y=await eh({request:A,params:d,context:u},m,a,h,s);return a?y:h.handlerResult}catch(m){if(!h.middlewareError)throw m;let y=await o(h.middlewareError.error,h.middlewareError.routeId);return h.handlerResult?Object.assign(h.handlerResult,y):y}}async function eh(t,a,s,o,c,A=0){let{request:d}=t;if(d.signal.aborted)throw d.signal.reason?d.signal.reason:new Error(`Request aborted without an \`AbortSignal.reason\`: ${d.method} ${d.url}`);let u=a[A];if(!u)return o.handlerResult=await c(),o.handlerResult;let[h,m]=u,y=!1,g,F=async()=>{if(y)throw new Error("You may only call `next()` once per middleware");y=!0,await eh(t,a,s,o,c,A+1)};try{let E=await m({request:t.request,params:t.params,context:t.context},F);return y?E===void 0?g:E:F()}catch(E){throw o.middlewareError?o.middlewareError.error!==E&&(o.middlewareError={routeId:h,error:E}):o.middlewareError={routeId:h,error:E},E}}function th(t,a,s,o,c){let A=$m({key:"unstable_middleware",route:o.route,manifest:a,mapRouteProperties:t}),d=oE(o.route,ie(s.method)?"action":"loader",a,t,c);return{middleware:A,route:d.lazyRoutePromise,handler:d.lazyHandlerPromise}}function Il(t,a,s,o,c,A,d,u=null){let h=!1,m=th(t,a,s,o,c);return{...o,_lazyPromises:m,shouldLoad:d,unstable_shouldRevalidateArgs:u,unstable_shouldCallHandler(y){return h=!0,u?typeof y=="boolean"?oi(o,{...u,defaultShouldRevalidate:y}):oi(o,u):d},resolve(y){return h||d||y&&s.method==="GET"&&(o.route.lazy||o.route.loader)?AE({request:s,match:o,lazyHandlerPromise:m==null?void 0:m.handler,lazyRoutePromise:m==null?void 0:m.route,handlerOverride:y,scopedContext:A}):Promise.resolve({type:"data",result:void 0})}}}function Sa(t,a,s,o,c,A,d,u=null){return o.map(h=>h.route.id!==c.route.id?{...h,shouldLoad:!1,unstable_shouldRevalidateArgs:u,unstable_shouldCallHandler:()=>!1,_lazyPromises:th(t,a,s,h,A),resolve:()=>Promise.resolve({type:"data",result:void 0})}:Il(t,a,s,h,A,d,!0,u))}async function cE(t,a,s,o,c,A){s.some(m=>{var y;return(y=m._lazyPromises)==null?void 0:y.middleware})&&await Promise.all(s.map(m=>{var y;return(y=m._lazyPromises)==null?void 0:y.middleware}));let d={request:a,params:s[0].params,context:c,matches:s},h=await t({...d,fetcherKey:o,unstable_runClientMiddleware:m=>{let y=d;return Qm(y,!1,()=>m({...y,fetcherKey:o,unstable_runClientMiddleware:()=>{throw new Error("Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler")}}),(g,F)=>({[F]:{type:"error",result:g}}))}});try{await Promise.all(s.flatMap(m=>{var y,g;return[(y=m._lazyPromises)==null?void 0:y.handler,(g=m._lazyPromises)==null?void 0:g.route]}))}catch{}return h}async function AE({request:t,match:a,lazyHandlerPromise:s,lazyRoutePromise:o,handlerOverride:c,scopedContext:A}){let d,u,h=ie(t.method),m=h?"action":"loader",y=g=>{let F,E=new Promise((x,_)=>F=_);u=()=>F(),t.signal.addEventListener("abort",u);let B=x=>typeof g!="function"?Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean "${m}" [routeId: ${a.route.id}]`)):g({request:t,params:a.params,context:A},...x!==void 0?[x]:[]),v=(async()=>{try{return{type:"data",result:await(c?c(_=>B(_)):B())}}catch(x){return{type:"error",result:x}}})();return Promise.race([v,E])};try{let g=h?a.route.action:a.route.loader;if(s||o)if(g){let F,[E]=await Promise.all([y(g).catch(B=>{F=B}),s,o]);if(F!==void 0)throw F;d=E}else{await s;let F=h?a.route.action:a.route.loader;if(F)[d]=await Promise.all([y(F),o]);else if(m==="action"){let E=new URL(t.url),B=E.pathname+E.search;throw Fe(405,{method:t.method,pathname:B,routeId:a.route.id})}else return{type:"data",result:void 0}}else if(g)d=await y(g);else{let F=new URL(t.url),E=F.pathname+F.search;throw Fe(404,{pathname:E})}}catch(g){return{type:"error",result:g}}finally{u&&t.signal.removeEventListener("abort",u)}return d}async function lE(t){var o,c,A,d,u,h;let{result:a,type:s}=t;if(ah(a)){let m;try{let y=a.headers.get("Content-Type");y&&/\bapplication\/json\b/.test(y)?a.body==null?m=null:m=await a.json():m=await a.text()}catch(y){return{type:"error",error:y}}return s==="error"?{type:"error",error:new si(a.status,a.statusText,m),statusCode:a.status,headers:a.headers}:{type:"data",data:m,statusCode:a.status,headers:a.headers}}return s==="error"?Fp(a)?a.data instanceof Error?{type:"error",error:a.data,statusCode:(o=a.init)==null?void 0:o.status,headers:(c=a.init)!=null&&c.headers?new Headers(a.init.headers):void 0}:{type:"error",error:new si(((A=a.init)==null?void 0:A.status)||500,void 0,a.data),statusCode:as(a)?a.status:void 0,headers:(d=a.init)!=null&&d.headers?new Headers(a.init.headers):void 0}:{type:"error",error:a,statusCode:as(a)?a.status:void 0}:Fp(a)?{type:"data",data:a.data,statusCode:(u=a.init)==null?void 0:u.status,headers:(h=a.init)!=null&&h.headers?new Headers(a.init.headers):void 0}:{type:"data",data:a}}function dE(t,a,s,o,c){let A=t.headers.get("Location");if(N0(A,"Redirects returned/thrown from loaders/actions must have a Location header"),!md.test(A)){let d=o.slice(0,o.findIndex(u=>u.route.id===s)+1);A=Rl(new URL(a.url),d,c,A),t.headers.set("Location",A)}return t}function mp(t,a,s){if(md.test(t)){let o=t,c=o.startsWith("//")?new URL(a.protocol+o):new URL(o),A=le(c.pathname,s)!=null;if(c.origin===a.origin&&A)return c.pathname+c.search+c.hash}return t}function _a(t,a,s,o){let c=t.createURL(nh(a)).toString(),A={signal:s};if(o&&ie(o.formMethod)){let{formMethod:d,formEncType:u}=o;A.method=d.toUpperCase(),u==="application/json"?(A.headers=new Headers({"Content-Type":u}),A.body=JSON.stringify(o.json)):u==="text/plain"?A.body=o.text:u==="application/x-www-form-urlencoded"&&o.formData?A.body=Nl(o.formData):A.body=o.formData}return new Request(c,A)}function Nl(t){let a=new URLSearchParams;for(let[s,o]of t.entries())a.append(s,typeof o=="string"?o:o.name);return a}function hp(t){let a=new FormData;for(let[s,o]of t.entries())a.append(s,o);return a}function uE(t,a,s,o=!1,c=!1){let A={},d=null,u,h=!1,m={},y=s&&oe(s[1])?s[1].error:void 0;return t.forEach(g=>{if(!(g.route.id in a))return;let F=g.route.id,E=a[F];if(N0(!kn(E),"Cannot handle redirect results in processLoaderData"),oe(E)){let B=E.error;if(y!==void 0&&(B=y,y=void 0),d=d||{},c)d[F]=B;else{let v=Sn(t,F);d[v.route.id]==null&&(d[v.route.id]=B)}o||(A[F]=Jm),h||(h=!0,u=as(E.error)?E.error.status:500),E.headers&&(m[F]=E.headers)}else A[F]=E.data,E.statusCode&&E.statusCode!==200&&!h&&(u=E.statusCode),E.headers&&(m[F]=E.headers)}),y!==void 0&&s&&(d={[s[0]]:y},s[2]&&(A[s[2]]=void 0)),{loaderData:A,errors:d,statusCode:u||200,loaderHeaders:m}}function gp(t,a,s,o,c,A){let{loaderData:d,errors:u}=uE(a,s,o);return c.filter(h=>!h.matches||h.matches.some(m=>m.shouldLoad)).forEach(h=>{let{key:m,match:y,controller:g}=h,F=A[m];if(N0(F,"Did not find corresponding fetcher result"),!(g&&g.signal.aborted))if(oe(F)){let E=Sn(t.matches,y==null?void 0:y.route.id);u&&u[E.route.id]||(u={...u,[E.route.id]:F.error}),t.fetchers.delete(m)}else if(kn(F))N0(!1,"Unhandled fetcher revalidation redirect");else{let E=Jt(F.data);t.fetchers.set(m,E)}}),{loaderData:d,errors:u}}function Cp(t,a,s,o){let c=Object.entries(a).filter(([,A])=>A!==Jm).reduce((A,[d,u])=>(A[d]=u,A),{});for(let A of s){let d=A.route.id;if(!a.hasOwnProperty(d)&&t.hasOwnProperty(d)&&A.route.loader&&(c[d]=t[d]),o&&o.hasOwnProperty(d))break}return c}function yp(t){return t?oe(t[1])?{actionData:{}}:{actionData:{[t[0]]:t[1].data}}:{}}function Sn(t,a){return(a?t.slice(0,t.findIndex(o=>o.route.id===a)+1):[...t]).reverse().find(o=>o.route.hasErrorBoundary===!0)||t[0]}function bp(t){let a=t.length===1?t[0]:t.find(s=>s.index||!s.path||s.path==="/")||{id:"__shim-error-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:a}],route:a}}function Fe(t,{pathname:a,routeId:s,method:o,type:c,message:A}={}){let d="Unknown Server Error",u="Unknown @remix-run/router error";return t===400?(d="Bad Request",o&&a&&s?u=`You made a ${o} request to "${a}" but did not provide a \`loader\` for route "${s}", so there is no way to handle the request.`:c==="invalid-body"&&(u="Unable to encode submission body")):t===403?(d="Forbidden",u=`Route "${s}" does not match URL "${a}"`):t===404?(d="Not Found",u=`No route matches URL "${a}"`):t===405&&(d="Method Not Allowed",o&&a&&s?u=`You made a ${o.toUpperCase()} request to "${a}" but did not provide an \`action\` for route "${s}", so there is no way to handle the request.`:o&&(u=`Invalid request method "${o.toUpperCase()}"`)),new si(t||500,d,new Error(u),!0)}function Po(t){let a=Object.entries(t);for(let s=a.length-1;s>=0;s--){let[o,c]=a[s];if(kn(c))return{key:o,result:c}}}function nh(t){let a=typeof t=="string"?tn(t):t;return $t({...a,hash:""})}function fE(t,a){return t.pathname!==a.pathname||t.search!==a.search?!1:t.hash===""?a.hash!=="":t.hash===a.hash?!0:a.hash!==""}function pE(t){return ah(t.result)&&$F.has(t.result.status)}function oe(t){return t.type==="error"}function kn(t){return(t&&t.type)==="redirect"}function Fp(t){return typeof t=="object"&&t!=null&&"type"in t&&"data"in t&&"init"in t&&t.type==="DataWithResponseInit"}function ah(t){return t!=null&&typeof t.status=="number"&&typeof t.statusText=="string"&&typeof t.headers=="object"&&typeof t.body<"u"}function mE(t){return ZF.has(t.toUpperCase())}function ie(t){return XF.has(t.toUpperCase())}function hd(t){return new URLSearchParams(t).getAll("index").some(a=>a==="")}function Zr(t,a){let s=typeof a=="string"?tn(a).search:a.search;if(t[t.length-1].route.index&&hd(s||""))return t[t.length-1];let o=Wm(t);return o[o.length-1]}function Ep(t){let{formMethod:a,formAction:s,formEncType:o,text:c,formData:A,json:d}=t;if(!(!a||!s||!o)){if(c!=null)return{formMethod:a,formAction:s,formEncType:o,formData:void 0,json:void 0,text:c};if(A!=null)return{formMethod:a,formAction:s,formEncType:o,formData:A,json:void 0,text:void 0};if(d!==void 0)return{formMethod:a,formAction:s,formEncType:o,formData:void 0,json:d,text:void 0}}}function al(t,a){return a?{state:"loading",location:t,formMethod:a.formMethod,formAction:a.formAction,formEncType:a.formEncType,formData:a.formData,json:a.json,text:a.text}:{state:"loading",location:t,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0}}function hE(t,a){return{state:"submitting",location:t,formMethod:a.formMethod,formAction:a.formAction,formEncType:a.formEncType,formData:a.formData,json:a.json,text:a.text}}function Wr(t,a){return t?{state:"loading",formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text,data:a}:{state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:a}}function gE(t,a){return{state:"submitting",formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text,data:a?a.data:void 0}}function Jt(t){return{state:"idle",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:t}}function CE(t,a){try{let s=t.sessionStorage.getItem(Xm);if(s){let o=JSON.parse(s);for(let[c,A]of Object.entries(o||{}))A&&Array.isArray(A)&&a.set(c,new Set(A||[]))}}catch{}}function yE(t,a){if(a.size>0){let s={};for(let[o,c]of a)s[o]=[...c];try{t.sessionStorage.setItem(Xm,JSON.stringify(s))}catch(o){y2(!1,`Failed to save applied view transitions in sessionStorage (${o}).`)}}}function bE(){let t,a,s=new Promise((o,c)=>{t=async A=>{o(A);try{await s}catch{}},a=async A=>{c(A);try{await s}catch{}}});return{promise:s,resolve:t,reject:a}}var Nn=b.createContext(null);Nn.displayName="DataRouter";var La=b.createContext(null);La.displayName="DataRouterState";var gd=b.createContext({isTransitioning:!1});gd.displayName="ViewTransition";var rh=b.createContext(new Map);rh.displayName="Fetchers";var FE=b.createContext(null);FE.displayName="Await";var _e=b.createContext(null);_e.displayName="Navigation";var Fi=b.createContext(null);Fi.displayName="Location";var Et=b.createContext({outlet:null,matches:[],isDataRoute:!1});Et.displayName="Route";var Cd=b.createContext(null);Cd.displayName="RouteError";function EE(t,{relative:a}={}){N0(za(),"useHref() may be used only in the context of a <Router> component.");let{basename:s,navigator:o}=b.useContext(_e),{hash:c,pathname:A,search:d}=cs(t,{relative:a}),u=A;return s!=="/"&&(u=A==="/"?s:Je([s,A])),o.createHref({pathname:u,search:d,hash:c})}function za(){return b.useContext(Fi)!=null}function s2(){return N0(za(),"useLocation() may be used only in the context of a <Router> component."),b.useContext(Fi).location}function BE(t){N0(za(),"useMatch() may be used only in the context of a <Router> component.");let{pathname:a}=s2();return b.useMemo(()=>Tn(t,Ym(a)),[a,t])}var sh="You should call navigate() in a React.useEffect(), not when your component is first rendered.";function oh(t){b.useContext(_e).static||b.useLayoutEffect(t)}function yd(){let{isDataRoute:t}=b.useContext(Et);return t?NE():vE()}function vE(){N0(za(),"useNavigate() may be used only in the context of a <Router> component.");let t=b.useContext(Nn),{basename:a,navigator:s}=b.useContext(_e),{matches:o}=b.useContext(Et),{pathname:c}=s2(),A=JSON.stringify(fd(o)),d=b.useRef(!1);return oh(()=>{d.current=!0}),b.useCallback((h,m={})=>{if(y2(d.current,sh),!d.current)return;if(typeof h=="number"){s.go(h);return}let y=pd(h,JSON.parse(A),c,m.relative==="path");t==null&&a!=="/"&&(y.pathname=y.pathname==="/"?a:Je([a,y.pathname])),(m.replace?s.replace:s.push)(y,m.state,m)},[a,s,A,c,t])}b.createContext(null);function cs(t,{relative:a}={}){let{matches:s}=b.useContext(Et),{pathname:o}=s2(),c=JSON.stringify(fd(s));return b.useMemo(()=>pd(t,JSON.parse(c),o,a==="path"),[t,c,o,a])}function DE(t,a,s,o){N0(za(),"useRoutes() may be used only in the context of a <Router> component.");let{navigator:c}=b.useContext(_e),{matches:A}=b.useContext(Et),d=A[A.length-1],u=d?d.params:{},h=d?d.pathname:"/",m=d?d.pathnameBase:"/",y=d&&d.route;{let _=y&&y.path||"";ch(h,!y||_.endsWith("*")||_.endsWith("*?"),`You rendered descendant <Routes> (or called \`useRoutes()\`) at "${h}" (under <Route path="${_}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${_}"> to <Route path="${_==="/"?"*":`${_}/*`}">.`)}let g=s2(),F;F=g;let E=F.pathname||"/",B=E;if(m!=="/"){let _=m.replace(/^\//,"").split("/");B="/"+E.replace(/^\//,"").split("/").slice(_.length).join("/")}let v=yt(t,{pathname:B});return y2(y||v!=null,`No routes matched location "${F.pathname}${F.search}${F.hash}" `),y2(v==null||v[v.length-1].route.element!==void 0||v[v.length-1].route.Component!==void 0||v[v.length-1].route.lazy!==void 0,`Matched leaf route at location "${F.pathname}${F.search}${F.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`),kE(v&&v.map(_=>Object.assign({},_,{params:Object.assign({},u,_.params),pathname:Je([m,c.encodeLocation?c.encodeLocation(_.pathname).pathname:_.pathname]),pathnameBase:_.pathnameBase==="/"?m:Je([m,c.encodeLocation?c.encodeLocation(_.pathnameBase).pathname:_.pathnameBase])})),A,s,o)}function xE(){let t=IE(),a=as(t)?`${t.status} ${t.statusText}`:t instanceof Error?t.message:JSON.stringify(t),s=t instanceof Error?t.stack:null,o="rgba(200,200,200, 0.5)",c={padding:"0.5rem",backgroundColor:o},A={padding:"2px 4px",backgroundColor:o},d=null;return console.error("Error handled by React Router default ErrorBoundary:",t),d=b.createElement(b.Fragment,null,b.createElement("p",null,"💿 Hey developer 👋"),b.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",b.createElement("code",{style:A},"ErrorBoundary")," or"," ",b.createElement("code",{style:A},"errorElement")," prop on your route.")),b.createElement(b.Fragment,null,b.createElement("h2",null,"Unexpected Application Error!"),b.createElement("h3",{style:{fontStyle:"italic"}},a),s?b.createElement("pre",{style:c},s):null,d)}var _E=b.createElement(xE,null),wE=class extends b.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,a){return a.location!==t.location||a.revalidation!=="idle"&&t.revalidation==="idle"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error!==void 0?t.error:a.error,location:a.location,revalidation:t.revalidation||a.revalidation}}componentDidCatch(t,a){console.error("React Router caught the following error during render",t,a)}render(){return this.state.error!==void 0?b.createElement(Et.Provider,{value:this.props.routeContext},b.createElement(Cd.Provider,{value:this.state.error,children:this.props.component})):this.props.children}};function SE({routeContext:t,match:a,children:s}){let o=b.useContext(Nn);return o&&o.static&&o.staticContext&&(a.route.errorElement||a.route.ErrorBoundary)&&(o.staticContext._deepestRenderedBoundaryId=a.route.id),b.createElement(Et.Provider,{value:t},s)}function kE(t,a=[],s=null,o=null){if(t==null){if(!s)return null;if(s.errors)t=s.matches;else if(a.length===0&&!s.initialized&&s.matches.length>0)t=s.matches;else return null}let c=t,A=s==null?void 0:s.errors;if(A!=null){let h=c.findIndex(m=>m.route.id&&(A==null?void 0:A[m.route.id])!==void 0);N0(h>=0,`Could not find a matching route for errors on route IDs: ${Object.keys(A).join(",")}`),c=c.slice(0,Math.min(c.length,h+1))}let d=!1,u=-1;if(s)for(let h=0;h<c.length;h++){let m=c[h];if((m.route.HydrateFallback||m.route.hydrateFallbackElement)&&(u=h),m.route.id){let{loaderData:y,errors:g}=s,F=m.route.loader&&!y.hasOwnProperty(m.route.id)&&(!g||g[m.route.id]===void 0);if(m.route.lazy||F){d=!0,u>=0?c=c.slice(0,u+1):c=[c[0]];break}}}return c.reduceRight((h,m,y)=>{let g,F=!1,E=null,B=null;s&&(g=A&&m.route.id?A[m.route.id]:void 0,E=m.route.errorElement||_E,d&&(u<0&&y===0?(ch("route-fallback",!1,"No `HydrateFallback` element provided to render during initial hydration"),F=!0,B=null):u===y&&(F=!0,B=m.route.hydrateFallbackElement||null)));let v=a.concat(c.slice(0,y+1)),x=()=>{let _;return g?_=E:F?_=B:m.route.Component?_=b.createElement(m.route.Component,null):m.route.element?_=m.route.element:_=h,b.createElement(SE,{match:m,routeContext:{outlet:h,matches:v,isDataRoute:s!=null},children:_})};return s&&(m.route.ErrorBoundary||m.route.errorElement||y===0)?b.createElement(wE,{location:s.location,revalidation:s.revalidation,component:E,error:g,children:x(),routeContext:{outlet:null,matches:v,isDataRoute:!0}}):x()},null)}function bd(t){return`${t} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function TE(t){let a=b.useContext(Nn);return N0(a,bd(t)),a}function Fd(t){let a=b.useContext(La);return N0(a,bd(t)),a}function OE(t){let a=b.useContext(Et);return N0(a,bd(t)),a}function Ed(t){let a=OE(t),s=a.matches[a.matches.length-1];return N0(s.route.id,`${t} can only be used on routes that contain a unique "id"`),s.route.id}function RE(){return Ed("useRouteId")}function PE(){return Fd("useNavigation").navigation}function ih(){let{matches:t,loaderData:a}=Fd("useMatches");return b.useMemo(()=>t.map(s=>Gm(s,a)),[t,a])}function IE(){var o;let t=b.useContext(Cd),a=Fd("useRouteError"),s=Ed("useRouteError");return t!==void 0?t:(o=a.errors)==null?void 0:o[s]}function NE(){let{router:t}=TE("useNavigate"),a=Ed("useNavigate"),s=b.useRef(!1);return oh(()=>{s.current=!0}),b.useCallback(async(c,A={})=>{y2(s.current,sh),s.current&&(typeof c=="number"?t.navigate(c):await t.navigate(c,{fromRouteId:a,...A}))},[t,a])}var Bp={};function ch(t,a,s){!a&&!Bp[t]&&(Bp[t]=!0,y2(!1,s))}var vp={};function Dp(t,a){!t&&!vp[a]&&(vp[a]=!0,console.warn(a))}function LE(t){let a={hasErrorBoundary:t.hasErrorBoundary||t.ErrorBoundary!=null||t.errorElement!=null};return t.Component&&(t.element&&y2(!1,"You should not include both `Component` and `element` on your route - `Component` will be used."),Object.assign(a,{element:b.createElement(t.Component),Component:void 0})),t.HydrateFallback&&(t.hydrateFallbackElement&&y2(!1,"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used."),Object.assign(a,{hydrateFallbackElement:b.createElement(t.HydrateFallback),HydrateFallback:void 0})),t.ErrorBoundary&&(t.errorElement&&y2(!1,"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used."),Object.assign(a,{errorElement:b.createElement(t.ErrorBoundary),ErrorBoundary:void 0})),a}var zE=["HydrateFallback","hydrateFallbackElement"],ME=class{constructor(){this.status="pending",this.promise=new Promise((t,a)=>{this.resolve=s=>{this.status==="pending"&&(this.status="resolved",t(s))},this.reject=s=>{this.status==="pending"&&(this.status="rejected",a(s))}})}};function UE({router:t,flushSync:a}){let[s,o]=b.useState(t.state),[c,A]=b.useState(),[d,u]=b.useState({isTransitioning:!1}),[h,m]=b.useState(),[y,g]=b.useState(),[F,E]=b.useState(),B=b.useRef(new Map),v=b.useCallback((w,{deletedFetchers:O,flushSync:R,viewTransitionOpts:T})=>{w.fetchers.forEach((j,q)=>{j.data!==void 0&&B.current.set(q,j.data)}),O.forEach(j=>B.current.delete(j)),Dp(R===!1||a!=null,'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from "react-router/dom"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');let L=t.window!=null&&t.window.document!=null&&typeof t.window.document.startViewTransition=="function";if(Dp(T==null||L,"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available."),!T||!L){a&&R?a(()=>o(w)):b.startTransition(()=>o(w));return}if(a&&R){a(()=>{y&&(h&&h.resolve(),y.skipTransition()),u({isTransitioning:!0,flushSync:!0,currentLocation:T.currentLocation,nextLocation:T.nextLocation})});let j=t.window.document.startViewTransition(()=>{a(()=>o(w))});j.finished.finally(()=>{a(()=>{m(void 0),g(void 0),A(void 0),u({isTransitioning:!1})})}),a(()=>g(j));return}y?(h&&h.resolve(),y.skipTransition(),E({state:w,currentLocation:T.currentLocation,nextLocation:T.nextLocation})):(A(w),u({isTransitioning:!0,flushSync:!1,currentLocation:T.currentLocation,nextLocation:T.nextLocation}))},[t.window,a,y,h]);b.useLayoutEffect(()=>t.subscribe(v),[t,v]),b.useEffect(()=>{d.isTransitioning&&!d.flushSync&&m(new ME)},[d]),b.useEffect(()=>{if(h&&c&&t.window){let w=c,O=h.promise,R=t.window.document.startViewTransition(async()=>{b.startTransition(()=>o(w)),await O});R.finished.finally(()=>{m(void 0),g(void 0),A(void 0),u({isTransitioning:!1})}),g(R)}},[c,h,t.window]),b.useEffect(()=>{h&&c&&s.location.key===c.location.key&&h.resolve()},[h,y,s.location,c]),b.useEffect(()=>{!d.isTransitioning&&F&&(A(F.state),u({isTransitioning:!0,flushSync:!1,currentLocation:F.currentLocation,nextLocation:F.nextLocation}),E(void 0))},[d.isTransitioning,F]);let x=b.useMemo(()=>({createHref:t.createHref,encodeLocation:t.encodeLocation,go:w=>t.navigate(w),push:(w,O,R)=>t.navigate(w,{state:O,preventScrollReset:R==null?void 0:R.preventScrollReset}),replace:(w,O,R)=>t.navigate(w,{replace:!0,state:O,preventScrollReset:R==null?void 0:R.preventScrollReset})}),[t]),_=t.basename||"/",k=b.useMemo(()=>({router:t,navigator:x,static:!1,basename:_}),[t,x,_]);return b.createElement(b.Fragment,null,b.createElement(Nn.Provider,{value:k},b.createElement(La.Provider,{value:s},b.createElement(rh.Provider,{value:B.current},b.createElement(gd.Provider,{value:d},b.createElement(GE,{basename:_,location:s.location,navigationType:s.historyAction,navigator:x},b.createElement(jE,{routes:t.routes,future:t.future,state:s})))))),null)}var jE=b.memo(VE);function VE({routes:t,future:a,state:s}){return DE(t,void 0,s,a)}function GE({basename:t="/",children:a=null,location:s,navigationType:o="POP",navigator:c,static:A=!1}){N0(!za(),"You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");let d=t.replace(/^\/*/,"/"),u=b.useMemo(()=>({basename:d,navigator:c,static:A,future:{}}),[d,c,A]);typeof s=="string"&&(s=tn(s));let{pathname:h="/",search:m="",hash:y="",state:g=null,key:F="default"}=s,E=b.useMemo(()=>{let B=le(h,d);return B==null?null:{location:{pathname:B,search:m,hash:y,state:g,key:F},navigationType:o}},[d,h,m,y,g,F,o]);return y2(E!=null,`<Router basename="${d}"> is not able to match the URL "${h}${m}${y}" because it does not start with the basename, so the <Router> won't render anything.`),E==null?null:b.createElement(_e.Provider,{value:u},b.createElement(Fi.Provider,{children:a,value:E}))}var Zo="get",$o="application/x-www-form-urlencoded";function Ei(t){return t!=null&&typeof t.tagName=="string"}function qE(t){return Ei(t)&&t.tagName.toLowerCase()==="button"}function HE(t){return Ei(t)&&t.tagName.toLowerCase()==="form"}function YE(t){return Ei(t)&&t.tagName.toLowerCase()==="input"}function WE(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}function KE(t,a){return t.button===0&&(!a||a==="_self")&&!WE(t)}var Io=null;function XE(){if(Io===null)try{new FormData(document.createElement("form"),0),Io=!1}catch{Io=!0}return Io}var JE=new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);function rl(t){return t!=null&&!JE.has(t)?(y2(!1,`"${t}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${$o}"`),null):t}function ZE(t,a){let s,o,c,A,d;if(HE(t)){let u=t.getAttribute("action");o=u?le(u,a):null,s=t.getAttribute("method")||Zo,c=rl(t.getAttribute("enctype"))||$o,A=new FormData(t)}else if(qE(t)||YE(t)&&(t.type==="submit"||t.type==="image")){let u=t.form;if(u==null)throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');let h=t.getAttribute("formaction")||u.getAttribute("action");if(o=h?le(h,a):null,s=t.getAttribute("formmethod")||u.getAttribute("method")||Zo,c=rl(t.getAttribute("formenctype"))||rl(u.getAttribute("enctype"))||$o,A=new FormData(u,t),!XE()){let{name:m,type:y,value:g}=t;if(y==="image"){let F=m?`${m}.`:"";A.append(`${F}x`,"0"),A.append(`${F}y`,"0")}else m&&A.append(m,g)}}else{if(Ei(t))throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');s=Zo,o=null,c=$o,d=t}return A&&c==="text/plain"&&(d=A,A=void 0),{action:o,method:s.toLowerCase(),encType:c,formData:A,body:d}}function Bd(t,a){if(t===!1||t===null||typeof t>"u")throw new Error(a)}async function $E(t,a){if(t.id in a)return a[t.id];try{let s=await import(t.module);return a[t.id]=s,s}catch(s){return console.error(`Error loading route module \`${t.module}\`, reloading page...`),console.error(s),window.__reactRouterContext&&window.__reactRouterContext.isSpaMode,window.location.reload(),new Promise(()=>{})}}function QE(t){return t==null?!1:t.href==null?t.rel==="preload"&&typeof t.imageSrcSet=="string"&&typeof t.imageSizes=="string":typeof t.rel=="string"&&typeof t.href=="string"}async function eB(t,a,s){let o=await Promise.all(t.map(async c=>{let A=a.routes[c.route.id];if(A){let d=await $E(A,s);return d.links?d.links():[]}return[]}));return rB(o.flat(1).filter(QE).filter(c=>c.rel==="stylesheet"||c.rel==="preload").map(c=>c.rel==="stylesheet"?{...c,rel:"prefetch",as:"style"}:{...c,rel:"prefetch"}))}function xp(t,a,s,o,c,A){let d=(h,m)=>s[m]?h.route.id!==s[m].route.id:!0,u=(h,m)=>{var y;return s[m].pathname!==h.pathname||((y=s[m].route.path)==null?void 0:y.endsWith("*"))&&s[m].params["*"]!==h.params["*"]};return A==="assets"?a.filter((h,m)=>d(h,m)||u(h,m)):A==="data"?a.filter((h,m)=>{var g;let y=o.routes[h.route.id];if(!y||!y.hasLoader)return!1;if(d(h,m)||u(h,m))return!0;if(h.route.shouldRevalidate){let F=h.route.shouldRevalidate({currentUrl:new URL(c.pathname+c.search+c.hash,window.origin),currentParams:((g=s[0])==null?void 0:g.params)||{},nextUrl:new URL(t,window.origin),nextParams:h.params,defaultShouldRevalidate:!0});if(typeof F=="boolean")return F}return!0}):[]}function tB(t,a,{includeHydrateFallback:s}={}){return nB(t.map(o=>{let c=a.routes[o.route.id];if(!c)return[];let A=[c.module];return c.clientActionModule&&(A=A.concat(c.clientActionModule)),c.clientLoaderModule&&(A=A.concat(c.clientLoaderModule)),s&&c.hydrateFallbackModule&&(A=A.concat(c.hydrateFallbackModule)),c.imports&&(A=A.concat(c.imports)),A}).flat(1))}function nB(t){return[...new Set(t)]}function aB(t){let a={},s=Object.keys(t).sort();for(let o of s)a[o]=t[o];return a}function rB(t,a){let s=new Set;return new Set(a),t.reduce((o,c)=>{let A=JSON.stringify(aB(c));return s.has(A)||(s.add(A),o.push({key:A,link:c})),o},[])}Object.getOwnPropertyNames(Object.prototype).sort().join("\0");var sB=new Set([100,101,204,205]);function oB(t,a){let s=typeof t=="string"?new URL(t,typeof window>"u"?"server://singlefetch/":window.location.origin):t;return s.pathname==="/"?s.pathname="_root.data":a&&le(s.pathname,a)==="/"?s.pathname=`${a.replace(/\/$/,"")}/_root.data`:s.pathname=`${s.pathname.replace(/\/$/,"")}.data`,s}function Ah(){let t=b.useContext(Nn);return Bd(t,"You must render this element inside a <DataRouterContext.Provider> element"),t}function iB(){let t=b.useContext(La);return Bd(t,"You must render this element inside a <DataRouterStateContext.Provider> element"),t}var Bi=b.createContext(void 0);Bi.displayName="FrameworkContext";function lh(){let t=b.useContext(Bi);return Bd(t,"You must render this element inside a <HydratedRouter> element"),t}function cB(t,a){let s=b.useContext(Bi),[o,c]=b.useState(!1),[A,d]=b.useState(!1),{onFocus:u,onBlur:h,onMouseEnter:m,onMouseLeave:y,onTouchStart:g}=a,F=b.useRef(null);b.useEffect(()=>{if(t==="render"&&d(!0),t==="viewport"){let v=_=>{_.forEach(k=>{d(k.isIntersecting)})},x=new IntersectionObserver(v,{threshold:.5});return F.current&&x.observe(F.current),()=>{x.disconnect()}}},[t]),b.useEffect(()=>{if(o){let v=setTimeout(()=>{d(!0)},100);return()=>{clearTimeout(v)}}},[o]);let E=()=>{c(!0)},B=()=>{c(!1),d(!1)};return s?t!=="intent"?[A,F,{}]:[A,F,{onFocus:Kr(u,E),onBlur:Kr(h,B),onMouseEnter:Kr(m,E),onMouseLeave:Kr(y,B),onTouchStart:Kr(g,E)}]:[!1,F,{}]}function Kr(t,a){return s=>{t&&t(s),s.defaultPrevented||a(s)}}function AB({page:t,...a}){let{router:s}=Ah(),o=b.useMemo(()=>yt(s.routes,t,s.basename),[s.routes,t,s.basename]);return o?b.createElement(dB,{page:t,matches:o,...a}):null}function lB(t){let{manifest:a,routeModules:s}=lh(),[o,c]=b.useState([]);return b.useEffect(()=>{let A=!1;return eB(t,a,s).then(d=>{A||c(d)}),()=>{A=!0}},[t,a,s]),o}function dB({page:t,matches:a,...s}){let o=s2(),{manifest:c,routeModules:A}=lh(),{basename:d}=Ah(),{loaderData:u,matches:h}=iB(),m=b.useMemo(()=>xp(t,a,h,c,o,"data"),[t,a,h,c,o]),y=b.useMemo(()=>xp(t,a,h,c,o,"assets"),[t,a,h,c,o]),g=b.useMemo(()=>{if(t===o.pathname+o.search+o.hash)return[];let B=new Set,v=!1;if(a.forEach(_=>{var w;let k=c.routes[_.route.id];!k||!k.hasLoader||(!m.some(O=>O.route.id===_.route.id)&&_.route.id in u&&((w=A[_.route.id])!=null&&w.shouldRevalidate)||k.hasClientLoader?v=!0:B.add(_.route.id))}),B.size===0)return[];let x=oB(t,d);return v&&B.size>0&&x.searchParams.set("_routes",a.filter(_=>B.has(_.route.id)).map(_=>_.route.id).join(",")),[x.pathname+x.search]},[d,u,o,c,m,a,t,A]),F=b.useMemo(()=>tB(y,c),[y,c]),E=lB(y);return b.createElement(b.Fragment,null,g.map(B=>b.createElement("link",{key:B,rel:"prefetch",as:"fetch",href:B,...s})),F.map(B=>b.createElement("link",{key:B,rel:"modulepreload",href:B,...s})),E.map(({key:B,link:v})=>b.createElement("link",{key:B,...v})))}function uB(...t){return a=>{t.forEach(s=>{typeof s=="function"?s(a):s!=null&&(s.current=a)})}}var dh=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u";try{dh&&(window.__reactRouterVersion="7.6.3")}catch{}function fB(t,a){return nE({basename:a==null?void 0:a.basename,unstable_getContext:a==null?void 0:a.unstable_getContext,future:a==null?void 0:a.future,history:DF({window:a==null?void 0:a.window}),hydrationData:(a==null?void 0:a.hydrationData)||pB(),routes:t,mapRouteProperties:LE,hydrationRouteProperties:zE,dataStrategy:a==null?void 0:a.dataStrategy,patchRoutesOnNavigation:a==null?void 0:a.patchRoutesOnNavigation,window:a==null?void 0:a.window}).initialize()}function pB(){let t=window==null?void 0:window.__staticRouterHydrationData;return t&&t.errors&&(t={...t,errors:mB(t.errors)}),t}function mB(t){if(!t)return null;let a=Object.entries(t),s={};for(let[o,c]of a)if(c&&c.__type==="RouteErrorResponse")s[o]=new si(c.status,c.statusText,c.data,c.internal===!0);else if(c&&c.__type==="Error"){if(c.__subType){let A=window[c.__subType];if(typeof A=="function")try{let d=new A(c.message);d.stack="",s[o]=d}catch{}}if(s[o]==null){let A=new Error(c.message);A.stack="",s[o]=A}}else s[o]=c;return s}var uh=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Ma=b.forwardRef(function({onClick:a,discover:s="render",prefetch:o="none",relative:c,reloadDocument:A,replace:d,state:u,target:h,to:m,preventScrollReset:y,viewTransition:g,...F},E){let{basename:B}=b.useContext(_e),v=typeof m=="string"&&uh.test(m),x,_=!1;if(typeof m=="string"&&v&&(x=m,dh))try{let q=new URL(window.location.href),r0=m.startsWith("//")?new URL(q.protocol+m):new URL(m),d0=le(r0.pathname,B);r0.origin===q.origin&&d0!=null?m=d0+r0.search+r0.hash:_=!0}catch{y2(!1,`<Link to="${m}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`)}let k=EE(m,{relative:c}),[w,O,R]=cB(o,F),T=yB(m,{replace:d,state:u,target:h,preventScrollReset:y,relative:c,viewTransition:g});function L(q){a&&a(q),q.defaultPrevented||T(q)}let j=b.createElement("a",{...F,...R,href:x||k,onClick:_||A?a:L,ref:uB(E,O),target:h,"data-discover":!v&&s==="render"?"true":void 0});return w&&!v?b.createElement(b.Fragment,null,j,b.createElement(AB,{page:k})):j});Ma.displayName="Link";var hB=b.forwardRef(function({"aria-current":a="page",caseSensitive:s=!1,className:o="",end:c=!1,style:A,to:d,viewTransition:u,children:h,...m},y){let g=cs(d,{relative:m.relative}),F=s2(),E=b.useContext(La),{navigator:B,basename:v}=b.useContext(_e),x=E!=null&&xB(g)&&u===!0,_=B.encodeLocation?B.encodeLocation(g).pathname:g.pathname,k=F.pathname,w=E&&E.navigation&&E.navigation.location?E.navigation.location.pathname:null;s||(k=k.toLowerCase(),w=w?w.toLowerCase():null,_=_.toLowerCase()),w&&v&&(w=le(w,v)||w);const O=_!=="/"&&_.endsWith("/")?_.length-1:_.length;let R=k===_||!c&&k.startsWith(_)&&k.charAt(O)==="/",T=w!=null&&(w===_||!c&&w.startsWith(_)&&w.charAt(_.length)==="/"),L={isActive:R,isPending:T,isTransitioning:x},j=R?a:void 0,q;typeof o=="function"?q=o(L):q=[o,R?"active":null,T?"pending":null,x?"transitioning":null].filter(Boolean).join(" ");let r0=typeof A=="function"?A(L):A;return b.createElement(Ma,{...m,"aria-current":j,className:q,ref:y,style:r0,to:d,viewTransition:u},typeof h=="function"?h(L):h)});hB.displayName="NavLink";var gB=b.forwardRef(({discover:t="render",fetcherKey:a,navigate:s,reloadDocument:o,replace:c,state:A,method:d=Zo,action:u,onSubmit:h,relative:m,preventScrollReset:y,viewTransition:g,...F},E)=>{let B=EB(),v=BB(u,{relative:m}),x=d.toLowerCase()==="get"?"get":"post",_=typeof u=="string"&&uh.test(u),k=w=>{if(h&&h(w),w.defaultPrevented)return;w.preventDefault();let O=w.nativeEvent.submitter,R=(O==null?void 0:O.getAttribute("formmethod"))||d;B(O||w.currentTarget,{fetcherKey:a,method:R,navigate:s,replace:c,state:A,relative:m,preventScrollReset:y,viewTransition:g})};return b.createElement("form",{ref:E,method:x,action:v,onSubmit:o?h:k,...F,"data-discover":!_&&t==="render"?"true":void 0})});gB.displayName="Form";function fh({getKey:t,storageKey:a,...s}){let o=b.useContext(Bi),{basename:c}=b.useContext(_e),A=s2(),d=ih();vB({getKey:t,storageKey:a});let u=b.useMemo(()=>{if(!o||!t)return null;let m=zl(A,d,c,t);return m!==A.key?m:null},[]);if(!o||o.isSpaMode)return null;let h=((m,y)=>{if(!window.history.state||!window.history.state.key){let g=Math.random().toString(32).slice(2);window.history.replaceState({key:g},"")}try{let F=JSON.parse(sessionStorage.getItem(m)||"{}")[y||window.history.state.key];typeof F=="number"&&window.scrollTo(0,F)}catch(g){console.error(g),sessionStorage.removeItem(m)}}).toString();return b.createElement("script",{...s,suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:`(${h})(${JSON.stringify(a||Ll)}, ${JSON.stringify(u)})`}})}fh.displayName="ScrollRestoration";function ph(t){return`${t} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function vd(t){let a=b.useContext(Nn);return N0(a,ph(t)),a}function CB(t){let a=b.useContext(La);return N0(a,ph(t)),a}function yB(t,{target:a,replace:s,state:o,preventScrollReset:c,relative:A,viewTransition:d}={}){let u=yd(),h=s2(),m=cs(t,{relative:A});return b.useCallback(y=>{if(KE(y,a)){y.preventDefault();let g=s!==void 0?s:$t(h)===$t(m);u(t,{replace:g,state:o,preventScrollReset:c,relative:A,viewTransition:d})}},[h,u,m,s,o,a,t,c,A,d])}var bB=0,FB=()=>`__${String(++bB)}__`;function EB(){let{router:t}=vd("useSubmit"),{basename:a}=b.useContext(_e),s=RE();return b.useCallback(async(o,c={})=>{let{action:A,method:d,encType:u,formData:h,body:m}=ZE(o,a);if(c.navigate===!1){let y=c.fetcherKey||FB();await t.fetch(y,s,c.action||A,{preventScrollReset:c.preventScrollReset,formData:h,body:m,formMethod:c.method||d,formEncType:c.encType||u,flushSync:c.flushSync})}else await t.navigate(c.action||A,{preventScrollReset:c.preventScrollReset,formData:h,body:m,formMethod:c.method||d,formEncType:c.encType||u,replace:c.replace,state:c.state,fromRouteId:s,flushSync:c.flushSync,viewTransition:c.viewTransition})},[t,a,s])}function BB(t,{relative:a}={}){let{basename:s}=b.useContext(_e),o=b.useContext(Et);N0(o,"useFormAction must be used inside a RouteContext");let[c]=o.matches.slice(-1),A={...cs(t||".",{relative:a})},d=s2();if(t==null){A.search=d.search;let u=new URLSearchParams(A.search),h=u.getAll("index");if(h.some(y=>y==="")){u.delete("index"),h.filter(g=>g).forEach(g=>u.append("index",g));let y=u.toString();A.search=y?`?${y}`:""}}return(!t||t===".")&&c.route.index&&(A.search=A.search?A.search.replace(/^\?/,"?index&"):"?index"),s!=="/"&&(A.pathname=A.pathname==="/"?s:Je([s,A.pathname])),$t(A)}var Ll="react-router-scroll-positions",No={};function zl(t,a,s,o){let c=null;return o&&(s!=="/"?c=o({...t,pathname:le(t.pathname,s)||t.pathname},a):c=o(t,a)),c==null&&(c=t.key),c}function vB({getKey:t,storageKey:a}={}){let{router:s}=vd("useScrollRestoration"),{restoreScrollPosition:o,preventScrollReset:c}=CB("useScrollRestoration"),{basename:A}=b.useContext(_e),d=s2(),u=ih(),h=PE();b.useEffect(()=>(window.history.scrollRestoration="manual",()=>{window.history.scrollRestoration="auto"}),[]),DB(b.useCallback(()=>{if(h.state==="idle"){let m=zl(d,u,A,t);No[m]=window.scrollY}try{sessionStorage.setItem(a||Ll,JSON.stringify(No))}catch(m){y2(!1,`Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${m}).`)}window.history.scrollRestoration="auto"},[h.state,t,A,d,u,a])),typeof document<"u"&&(b.useLayoutEffect(()=>{try{let m=sessionStorage.getItem(a||Ll);m&&(No=JSON.parse(m))}catch{}},[a]),b.useLayoutEffect(()=>{let m=s==null?void 0:s.enableScrollRestoration(No,()=>window.scrollY,t?(y,g)=>zl(y,g,A,t):void 0);return()=>m&&m()},[s,A,t]),b.useLayoutEffect(()=>{if(o!==!1){if(typeof o=="number"){window.scrollTo(0,o);return}if(d.hash){let m=document.getElementById(decodeURIComponent(d.hash.slice(1)));if(m){m.scrollIntoView();return}}c!==!0&&window.scrollTo(0,0)}},[d,o,c]))}function DB(t,a){let{capture:s}={};b.useEffect(()=>{let o=s!=null?{capture:s}:void 0;return window.addEventListener("pagehide",t,o),()=>{window.removeEventListener("pagehide",t,o)}},[t,s])}function xB(t,a={}){let s=b.useContext(gd);N0(s!=null,"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");let{basename:o}=vd("useViewTransitionState"),c=cs(t,{relative:a.relative});if(!s.isTransitioning)return!1;let A=le(s.currentLocation.pathname,o)||s.currentLocation.pathname,d=le(s.nextLocation.pathname,o)||s.nextLocation.pathname;return Tn(c.pathname,d)!=null||Tn(c.pathname,A)!=null}[...sB];function Ml(t){return Array.isArray(t)?t.map(Ml):typeof t=="object"&&t!==null?Object.keys(t).reduce((a,s)=>(a[s]=Ml(t[s]),a),{}):typeof t=="string"&&t.includes("_vocs-fn_")?new Function(`return ${t.slice(9)}`)():t}const mh=Ml({aiCta:!0,blogDir:"./pages/blog",ogImageUrl:"/og-image.png",rootDir:"docs",title:"foundry - Ethereum Development Framework",titleTemplate:"%s – foundry - Ethereum Development Framework",sidebar:[{text:"Introduction",items:[{text:"Overview",link:"/introduction/overview"},{text:"Installation",link:"/introduction/installation"},{text:"Getting Started",link:"/introduction/getting-started"},{text:"Prompting",link:"/introduction/prompting"}]},{text:"Guides",items:[{text:"Project Setup",collapsed:!0,items:[{text:"Creating a New Project",link:"/guides/project-setup/creating-a-new-project"},{text:"Clone a Verified Contract",link:"/guides/project-setup/clone-a-verified-contract"},{text:"Dependencies",link:"/guides/project-setup/dependencies"},{text:"Soldeer",link:"/guides/project-setup/soldeer"},{text:"Project Layout",link:"/guides/project-setup/project-layout"}]},{text:"Scripting with Solidity",link:"/guides/scripting-with-solidity"},{text:"Implementing and Testing EIP-712 signatures",link:"/guides/eip712"},{text:"Deterministic deployments using CREATE2",link:"/guides/deterministic-deployments-using-create2"},{text:"Forking Mainnet with Cast and Anvil",link:"/guides/forking-mainnet-with-cast-anvil"},{text:"Running Foundry inside of Docker",link:"/guides/foundry-in-docker"},{text:"Video tutorials",link:"/guides/video-tutorials"},{text:"Best Practices",collapsed:!0,items:[{text:"Writing Contracts",link:"/guides/best-practices/writing-contracts"},{text:"Writing Tests",link:"/guides/best-practices/writing-tests"},{text:"Writing Scripts",link:"/guides/best-practices/writing-scripts"},{text:"Security",link:"/guides/best-practices/security"},{text:"Key Management",link:"/guides/best-practices/key-management"},{text:"Commenting",link:"/guides/best-practices/commenting"}]}]},{text:"Forge",items:[{text:"Overview",link:"/forge/overview"},{text:"Tests",collapsed:!1,items:[{text:"Overview",link:"/forge/tests/overview"},{text:"Writing Tests",link:"/forge/tests/writing-tests"},{text:"Cheatcodes",link:"/forge/tests/cheatcodes"},{text:"Forge Standard Library Overview",link:"/forge/tests/forge-std"},{text:"Understanding Traces",link:"/forge/tests/traces"},{text:"Fork Testing",link:"/forge/tests/fork-testing"},{text:"Replaying Failures",link:"/forge/tests/replay-testing"}]},{text:"Advanced Testing",collapsed:!0,items:[{text:"Overview",link:"/forge/advanced-testing/overview"},{text:"Table Testing",link:"/forge/advanced-testing/table-testing"},{text:"Fuzz Testing",link:"/forge/advanced-testing/fuzz-testing"},{text:"Invariant Testing",link:"/forge/advanced-testing/invariant-testing"},{text:"Differential Testing",link:"/forge/advanced-testing/differential-ffi-testing"}]},{text:"Deploying and Verifying",link:"/forge/deploying"},{text:"Gas Tracking",collapsed:!0,items:[{text:"Overview",link:"/forge/gas-tracking/overview"},{text:"Gas Reports",link:"/forge/gas-tracking/gas-reports"},{text:"Gas Function Snapshots",link:"/forge/gas-tracking/gas-function-snapshots"},{text:"Gas Section Snapshots",link:"/forge/gas-tracking/gas-section-snapshots"}]},{text:"Debugger",link:"/forge/debugger"},{text:"Reference",collapsed:!0,items:[{text:"General Commands",collapsed:!0,link:"/forge/reference/general-commands",items:[{text:"forge",link:"/forge/reference/overview"},{text:"forge help",link:"/forge/reference/forge-help"},{text:"forge completions",link:"/forge/reference/forge-completions"}]},{text:"Project Commands",collapsed:!0,link:"/forge/reference/project-commands",items:[{text:"forge init",link:"/forge/reference/forge-init"},{text:"forge clone",link:"/forge/reference/forge-clone"},{text:"forge install",link:"/forge/reference/forge-install"},{text:"forge update",link:"/forge/reference/forge-update"},{text:"forge remove",link:"/forge/reference/forge-remove"},{text:"forge config",link:"/forge/reference/forge-config"},{text:"forge remappings",link:"/forge/reference/forge-remappings"},{text:"forge tree",link:"/forge/reference/forge-tree"},{text:"forge geiger",link:"/forge/reference/forge-geiger"}]},{text:"Build Commands",collapsed:!0,link:"/forge/reference/build-commands",items:[{text:"forge build",link:"/forge/reference/forge-build"},{text:"forge clean",link:"/forge/reference/forge-clean"},{text:"forge inspect",link:"/forge/reference/forge-inspect"}]},{text:"Test Commands",link:"/forge/reference/test-commands",items:[{text:"forge test",link:"/forge/reference/forge-test"},{text:"forge snapshot",link:"/forge/reference/forge-snapshot"},{text:"forge coverage",link:"/forge/reference/forge-coverage"}]},{text:"Deploy Commands",collapsed:!0,link:"/forge/reference/deploy-commands",items:[{text:"forge create",link:"/forge/reference/forge-create"},{text:"forge verify-contract",link:"/forge/reference/forge-verify-contract"},{text:"forge verify-check",link:"/forge/reference/forge-verify-check"},{text:"forge flatten",link:"/forge/reference/forge-flatten"}]},{text:"Utility Commands",collapsed:!0,link:"/forge/reference/utility-commands",items:[{text:"forge bind",link:"/forge/reference/forge-bind"},{text:"forge cache",link:"/forge/reference/forge-cache"},{text:"forge cache clean",link:"/forge/reference/forge-cache-clean"},{text:"forge cache ls",link:"/forge/reference/forge-cache-ls"},{text:"forge script",link:"/forge/reference/forge-script"},{text:"forge upload-selectors",link:"/forge/reference/forge-upload-selectors"},{text:"forge doc",link:"/forge/reference/forge-doc"}]}]}]},{text:"Cast",items:[{text:"Overview",link:"/cast/overview"},{text:"Reference",collapsed:!0,link:"/cast/reference/overview",items:[{text:"General Commands",collapsed:!0,link:"/cast/reference/general-commands",items:[{text:"cast",link:"/cast/reference/overview"},{text:"cast help",link:"/cast/reference/cast-help"},{text:"cast completions",link:"/cast/reference/cast-completions"}]},{text:"Chain Commands",collapsed:!0,link:"/cast/reference/chain-commands",items:[{text:"cast chain-id",link:"/cast/reference/cast-chain-id"},{text:"cast chain",link:"/cast/reference/cast-chain"},{text:"cast client",link:"/cast/reference/cast-client"}]},{text:"Transaction Commands",collapsed:!0,link:"/cast/reference/transaction-commands",items:[{text:"cast publish",link:"/cast/reference/cast-publish"},{text:"cast receipt",link:"/cast/reference/cast-receipt"},{text:"cast send",link:"/cast/reference/cast-send"},{text:"cast mktx",link:"/cast/reference/cast-mktx"},{text:"cast call",link:"/cast/reference/cast-call"},{text:"cast rpc",link:"/cast/reference/cast-rpc"},{text:"cast tx",link:"/cast/reference/cast-tx"},{text:"cast run",link:"/cast/reference/cast-run"},{text:"cast estimate",link:"/cast/reference/cast-estimate"},{text:"cast access-list",link:"/cast/reference/cast-access-list"},{text:"cast logs",link:"/cast/reference/cast-logs"}]},{text:"Block Commands",collapsed:!0,link:"/cast/reference/block-commands",items:[{text:"cast find-block",link:"/cast/reference/cast-find-block"},{text:"cast gas-price",link:"/cast/reference/cast-gas-price"},{text:"cast block-number",link:"/cast/reference/cast-block-number"},{text:"cast basefee",link:"/cast/reference/cast-basefee"},{text:"cast block",link:"/cast/reference/cast-block"},{text:"cast age",link:"/cast/reference/cast-age"}]},{text:"Account Commands",collapsed:!0,link:"/cast/reference/account-commands",items:[{text:"cast balance",link:"/cast/reference/cast-balance"},{text:"cast storage",link:"/cast/reference/cast-storage"},{text:"cast proof",link:"/cast/reference/cast-proof"},{text:"cast nonce",link:"/cast/reference/cast-nonce"},{text:"cast code",link:"/cast/reference/cast-code"},{text:"cast codesize",link:"/cast/reference/cast-codesize"},{text:"cast index",link:"/cast/reference/cast-"}]},{text:"ENS Commands",collapsed:!0,link:"/cast/reference/ens-commands",items:[{text:"cast lookup-address",link:"/cast/reference/cast-lookup-address"},{text:"cast resolve-name",link:"/cast/reference/cast-resolve-name"},{text:"cast namehash",link:"/cast/reference/cast-namehash"}]},{text:"Etherscan Commands",collapsed:!0,link:"/cast/reference/etherscan-commands",items:[{text:"cast etherscan-source",link:"/cast/reference/cast-etherscan-source"}]},{text:"ABI Commands",collapsed:!0,link:"/cast/reference/abi-commands",items:[{text:"cast abi-encode",link:"/cast/reference/cast-abi-encode"},{text:"cast 4byte",link:"/cast/reference/cast-4byte"},{text:"cast 4byte-calldata",link:"/cast/reference/cast-4byte-calldata"},{text:"cast 4byte-event",link:"/cast/reference/cast-4byte-event"},{text:"cast calldata",link:"/cast/reference/cast-calldata"},{text:"cast decode-abi",link:"/cast/reference/cast-decode-abi"},{text:"cast decode-calldata",link:"/cast/reference/cast-decode-calldata"},{text:"cast pretty-calldata",link:"/cast/reference/cast-pretty-calldata"},{text:"cast selectors",link:"/cast/reference/cast-selectors"},{text:"cast upload-signature",link:"/cast/reference/cast-upload-signature"}]},{text:"Conversion Commands",collapsed:!0,link:"/cast/reference/conversion-commands",items:[{text:"cast format-bytes32-string",link:"/cast/reference/cast-format-bytes32-string"},{text:"cast from-bin",link:"/cast/reference/cast-from-bin"},{text:"cast from-fixed-point",link:"/cast/reference/cast-from-fixed-point"},{text:"cast from-rlp",link:"/cast/reference/cast-from-rlp"},{text:"cast from-utf8",link:"/cast/reference/cast-from-utf8"},{text:"cast from-wei",link:"/cast/reference/cast-from-wei"},{text:"cast parse-bytes32-address",link:"/cast/reference/cast-parse-bytes32-address"},{text:"cast parse-bytes32-string",link:"/cast/reference/cast-parse-bytes32-string"},{text:"cast to-ascii",link:"/cast/reference/cast-to-ascii"},{text:"cast to-base",link:"/cast/reference/cast-to-base"},{text:"cast to-bytes32",link:"/cast/reference/cast-to-bytes32"},{text:"cast to-dec",link:"/cast/reference/cast-to-dec"},{text:"cast to-fixed-point",link:"/cast/reference/cast-to-fixed-point"},{text:"cast to-hex",link:"/cast/reference/cast-to-hex"},{text:"cast to-hexdata",link:"/cast/reference/cast-to-hexdata"},{text:"cast to-int256",link:"/cast/reference/cast-to-int256"},{text:"cast to-rlp",link:"/cast/reference/cast-to-rlp"},{text:"cast to-uint256",link:"/cast/reference/cast-to-uint256"},{text:"cast to-unit",link:"/cast/reference/cast-to-unit"},{text:"cast to-wei",link:"/cast/reference/cast-to-wei"},{text:"cast shl",link:"/cast/reference/cast-shl"},{text:"cast shr",link:"/cast/reference/cast-shr"}]},{text:"Utility Commands",collapsed:!0,link:"/cast/reference/utility-commands",items:[{text:"cast address-zero",link:"/cast/reference/cast-address-zero"},{text:"cast sig",link:"/cast/reference/cast-sig"},{text:"cast sig-event",link:"/cast/reference/cast-sig-event"},{text:"cast keccak",link:"/cast/reference/cast-keccak"},{text:"cast compute-address",link:"/cast/reference/cast-compute-address"},{text:"cast create2",link:"/cast/reference/cast-create2"},{text:"cast interface",link:"/cast/reference/cast-interface"},{text:"cast index",link:"/cast/reference/cast-index"},{text:"cast concat-hex",link:"/cast/reference/cast-concat-hex"},{text:"cast max-int",link:"/cast/reference/cast-max-int"},{text:"cast min-int",link:"/cast/reference/cast-min-int"},{text:"cast max-uint",link:"/cast/reference/cast-max-uint"},{text:"cast to-check-sum-address",link:"/cast/reference/cast-to-check-sum-address"}]},{text:"Wallet Commands",collapsed:!0,link:"/cast/reference/wallet-commands",items:[{text:"cast wallet",link:"/cast/reference/cast-wallet"},{text:"cast wallet new",link:"/cast/reference/cast-wallet-new"},{text:"cast wallet new-mnemonic",link:"/cast/reference/cast-wallet-new-mnemonic"},{text:"cast wallet address",link:"/cast/reference/cast-wallet-address"},{text:"cast wallet sign",link:"/cast/reference/cast-wallet-sign"},{text:"cast wallet vanity",link:"/cast/reference/cast-wallet-vanity"},{text:"cast wallet verify",link:"/cast/reference/cast-wallet-verify"},{text:"cast wallet import",link:"/cast/reference/cast-wallet-import"},{text:"cast wallet list",link:"/cast/reference/cast-wallet-list"},{text:"cast wallet sign-auth",link:"/cast/reference/cast-wallet-sign-auth"}]}]}]},{text:"Anvil",items:[{text:"Overview",link:"/anvil/overview"},{text:"Reference",link:"/anvil/reference"}]},{text:"Chisel",items:[{text:"Overview",link:"/chisel/overview"},{text:"Reference",link:"/chisel/reference"}]},{text:"Configuration",collapsed:!1,items:[{text:"Overview",link:"/config/overview"},{text:"Dynamic Test Linking",link:"/config/dynamic-test-linking"},{text:"Continuous Integration",link:"/config/continuous-integration"},{text:"Integrating with VSCode",link:"/config/vscode"},{text:"Shell Autocompletion",link:"/config/shell-autocompletion"},{text:"Static Analyzers",link:"/config/static-analyzers"},{text:"Integrating with Hardhat",link:"/config/hardhat"},{text:"Vyper support",link:"/config/vyper"},{text:"Reference",collapsed:!0,link:"/config/reference/overview",items:[{text:"Project",link:"/config/reference/project"},{text:"Solidity Compiler",link:"/config/reference/solidity-compiler"},{text:"Testing",link:"/config/reference/testing"},{text:"In-line Configuration Testing",link:"/config/reference/inline-test-config"},{text:"Formatter",link:"/config/reference/formatter"},{text:"Linter",link:"/config/reference/linter"},{text:"Documentation Generator",link:"/config/reference/doc-generator"},{text:"Etherscan",link:"/config/reference/etherscan"}]}]},{text:"Cheatcode Reference",collapsed:!1,link:"/reference/cheatcodes/overview",items:[{text:"Environment",link:"/reference/cheatcodes/environment",collapsed:!0,items:[{text:"warp",link:"/reference/cheatcodes/warp"},{text:"roll",link:"/reference/cheatcodes/roll"},{text:"fee",link:"/reference/cheatcodes/fee"},{text:"getBlockTimestamp",link:"/reference/cheatcodes/get-block-timestamp"},{text:"getBlockNumber",link:"/reference/cheatcodes/get-block-number"},{text:"difficulty",link:"/reference/cheatcodes/difficulty"},{text:"prevrandao",link:"/reference/cheatcodes/prevrandao"},{text:"chainId",link:"/reference/cheatcodes/chain-id"},{text:"store",link:"/reference/cheatcodes/store"},{text:"load",link:"/reference/cheatcodes/load"},{text:"etch",link:"/reference/cheatcodes/etch"},{text:"deal",link:"/reference/cheatcodes/deal"},{text:"prank",link:"/reference/cheatcodes/prank"},{text:"startPrank",link:"/reference/cheatcodes/start-prank"},{text:"stopPrank",link:"/reference/cheatcodes/stop-prank"},{text:"readCallers",link:"/reference/cheatcodes/read-callers"},{text:"record",link:"/reference/cheatcodes/record"},{text:"accesses",link:"/reference/cheatcodes/accesses"},{text:"recordLogs",link:"/reference/cheatcodes/record-logs"},{text:"getRecordedLogs",link:"/reference/cheatcodes/get-recorded-logs"},{text:"setNonce",link:"/reference/cheatcodes/set-nonce"},{text:"getNonce",link:"/reference/cheatcodes/get-nonce"},{text:"mockCall",link:"/reference/cheatcodes/mock-call"},{text:"mockCalls",link:"/reference/cheatcodes/mock-calls"},{text:"mockCallRevert",link:"/reference/cheatcodes/mock-call-revert"},{text:"mockFunction",link:"/reference/cheatcodes/mock-function"},{text:"clearMockedCalls",link:"/reference/cheatcodes/clear-mocked-calls"},{text:"coinbase",link:"/reference/cheatcodes/coinbase"},{text:"broadcast",link:"/reference/cheatcodes/broadcast"},{text:"startBroadcast",link:"/reference/cheatcodes/start-broadcast"},{text:"stopBroadcast",link:"/reference/cheatcodes/stop-broadcast"},{text:"pauseGasMetering",link:"/reference/cheatcodes/pause-gas-metering"},{text:"resetGasMetering",link:"/reference/cheatcodes/reset-gas-metering"},{text:"resumeGasMetering",link:"/reference/cheatcodes/resume-gas-metering"},{text:"txGasPrice",link:"/reference/cheatcodes/tx-gas-price"},{text:"startStateDiffRecording",link:"/reference/cheatcodes/start-state-diff-recording"},{text:"stopAndReturnStateDiff",link:"/reference/cheatcodes/stop-and-return-state-diff"},{text:"snapshotState",link:"/reference/cheatcodes/state-snapshots"},{text:"snapshotGas",link:"/reference/cheatcodes/gas-snapshots"},{text:"isContext",link:"/reference/cheatcodes/is-context"}]},{text:"Assertions",link:"/reference/cheatcodes/assertions",collapsed:!0,items:[{text:"expectRevert",link:"/reference/cheatcodes/expect-revert"},{text:"expectEmit",link:"/reference/cheatcodes/expect-emit"},{text:"expectCall",link:"/reference/cheatcodes/expect-call"}]},{text:"Fuzzer",link:"/reference/cheatcodes/fuzzer",collapsed:!0,items:[{text:"assume",link:"/reference/cheatcodes/assume"},{text:"assumeNoRevert",link:"/reference/cheatcodes/assume-no-revert"}]},{text:"Forking",link:"/reference/cheatcodes/forking",collapsed:!0,items:[{text:"createFork",link:"/reference/cheatcodes/create-fork"},{text:"selectFork",link:"/reference/cheatcodes/select-fork"},{text:"createSelectFork",link:"/reference/cheatcodes/create-select-fork"},{text:"activeFork",link:"/reference/cheatcodes/active-fork"},{text:"rollFork",link:"/reference/cheatcodes/roll-fork"},{text:"makePersistent",link:"/reference/cheatcodes/make-persistent"},{text:"revokePersistent",link:"/reference/cheatcodes/revoke-persistent"},{text:"isPersistent",link:"/reference/cheatcodes/is-persistent"},{text:"allowCheatcodes",link:"/reference/cheatcodes/allow-cheatcodes"},{text:"transact",link:"/reference/cheatcodes/transact"}]},{text:"External",link:"/reference/cheatcodes/external",collapsed:!0,items:[{text:"ffi",link:"/reference/cheatcodes/ffi"},{text:"prompt",link:"/reference/cheatcodes/prompt"},{text:"projectRoot",link:"/reference/cheatcodes/project-root"},{text:"getCode",link:"/reference/cheatcodes/get-code"},{text:"getDeployedCode",link:"/reference/cheatcodes/get-deployed-code"},{text:"sleep",link:"/reference/cheatcodes/sleep"},{text:"unixTime",link:"/reference/cheatcodes/unix-time"},{text:"setEnv",link:"/reference/cheatcodes/set-env"},{text:"envOr",link:"/reference/cheatcodes/env-or"},{text:"envBool",link:"/reference/cheatcodes/env-bool"},{text:"envUint",link:"/reference/cheatcodes/env-uint"},{text:"envInt",link:"/reference/cheatcodes/env-int"},{text:"envAddress",link:"/reference/cheatcodes/env-address"},{text:"envBytes32",link:"/reference/cheatcodes/env-bytes32"},{text:"envString",link:"/reference/cheatcodes/env-string"},{text:"envBytes",link:"/reference/cheatcodes/env-bytes"},{text:"keyExists",link:"/reference/cheatcodes/key-exists"},{text:"keyExistsJson",link:"/reference/cheatcodes/key-exists-json"},{text:"keyExistsToml",link:"/reference/cheatcodes/key-exists-toml"},{text:"parseJson",link:"/reference/cheatcodes/parse-json"},{text:"parseToml",link:"/reference/cheatcodes/parse-toml"},{text:"parseJsonKeys",link:"/reference/cheatcodes/parse-json-keys"},{text:"parseTomlKeys",link:"/reference/cheatcodes/parse-toml-keys"},{text:"serializeJson",link:"/reference/cheatcodes/serialize-json"},{text:"writeJson",link:"/reference/cheatcodes/write-json"},{text:"writeToml",link:"/reference/cheatcodes/write-toml"}]},{text:"Signing",link:"/reference/cheatcodes/signing",collapsed:!0,items:[{text:"sign",link:"/reference/cheatcodes/sign"},{text:"signDelegation",link:"/reference/cheatcodes/sign-delegation"}]},{text:"Utilities",link:"/reference/cheatcodes/utilities",collapsed:!0,items:[{text:"addr",link:"/reference/cheatcodes/addr"},{text:"skip",link:"/reference/cheatcodes/skip"},{text:"label",link:"/reference/cheatcodes/label"},{text:"getLabel",link:"/reference/cheatcodes/get-label"},{text:"deriveKey",link:"/reference/cheatcodes/derive-key"},{text:"parseBytes",link:"/reference/cheatcodes/parse-bytes"},{text:"parseAddress",link:"/reference/cheatcodes/parse-address"},{text:"parseUint",link:"/reference/cheatcodes/parse-uint"},{text:"parseInt",link:"/reference/cheatcodes/parse-int"},{text:"parseBytes32",link:"/reference/cheatcodes/parse-bytes32"},{text:"parseBool",link:"/reference/cheatcodes/parse-bool"},{text:"rememberKey",link:"/reference/cheatcodes/remember-key"},{text:"toString",link:"/reference/cheatcodes/to-string"},{text:"breakpoint",link:"/reference/cheatcodes/breakpoint"},{text:"createWallet",link:"/reference/cheatcodes/create-wallet"},{text:"copyStorage",link:"/reference/cheatcodes/copy-storage"},{text:"setArbitraryStorage",link:"/reference/cheatcodes/set-arbitrary-storage"}]},{text:"RPC",link:"/reference/cheatcodes/rpc"},{text:"Files",link:"/reference/cheatcodes/fs"},{text:"Forge-Std Reference",collapsed:!0,items:[{text:"Std Logs",link:"/reference/forge-std/std-logs"},{text:"Std Assertions",link:"/reference/forge-std/std-assertions",items:[{text:"fail",link:"/reference/forge-std/fail"},{text:"assertTrue",link:"/reference/forge-std/assertTrue"},{text:"assertFalse",link:"/reference/forge-std/assertFalse"},{text:"assertEq",link:"/reference/forge-std/assertEq"},{text:"assertEqDecimal",link:"/reference/forge-std/assertEqDecimal"},{text:"assertNotEq",link:"/reference/forge-std/assertNotEq"},{text:"assertNotEqDecimal",link:"/reference/forge-std/assertNotEqDecimal"},{text:"assertLt",link:"/reference/forge-std/assertLt"},{text:"assertLtDecimal",link:"/reference/forge-std/assertLtDecimal"},{text:"assertGt",link:"/reference/forge-std/assertGt"},{text:"assertGtDecimal",link:"/reference/forge-std/assertGtDecimal"},{text:"assertLe",link:"/reference/forge-std/assertLe"},{text:"assertLeDecimal",link:"/reference/forge-std/assertLeDecimal"},{text:"assertGe",link:"/reference/forge-std/assertGe"},{text:"assertGeDecimal",link:"/reference/forge-std/assertGeDecimal"},{text:"assertApproxEqAbs",link:"/reference/forge-std/assertApproxEqAbs"},{text:"assertApproxEqAbsDecimal",link:"/reference/forge-std/assertApproxEqAbsDecimal"},{text:"assertApproxEqRel",link:"/reference/forge-std/assertApproxEqRel"},{text:"assertApproxEqRelDecimal",link:"/reference/forge-std/assertApproxEqRelDecimal"}]},{text:"Std Cheats",link:"/reference/forge-std/std-cheats",items:[{text:"skip",link:"/reference/forge-std/skip"},{text:"rewind",link:"/reference/forge-std/rewind"},{text:"hoax",link:"/reference/forge-std/hoax"},{text:"startHoax",link:"/reference/forge-std/startHoax"},{text:"deal",link:"/reference/forge-std/deal"},{text:"deployCode",link:"/reference/forge-std/deployCode"},{text:"deployCodeTo",link:"/reference/forge-std/deployCodeTo"},{text:"bound",link:"/reference/forge-std/bound"},{text:"changePrank",link:"/reference/forge-std/change-prank"},{text:"makeAddr",link:"/reference/forge-std/make-addr"},{text:"makeAddrAndKey",link:"/reference/forge-std/make-addr-and-key"},{text:"noGasMetering",link:"/reference/forge-std/noGasMetering"},{text:"assumeNoPrecompiles",link:"/reference/forge-std/assume-no-precompiles"},{text:"assumePayable",link:"/reference/forge-std/assume-payable"}]},{text:"Std Errors",link:"/reference/forge-std/std-errors",items:[{text:"assertionError",link:"/reference/forge-std/assertionError"},{text:"arithmeticError",link:"/reference/forge-std/arithmeticError"},{text:"divisionError",link:"/reference/forge-std/divisionError"},{text:"enumConversionError",link:"/reference/forge-std/enumConversionError"},{text:"encodeStorageError",link:"/reference/forge-std/encodeStorageError"},{text:"popError",link:"/reference/forge-std/popError"},{text:"indexOOBError",link:"/reference/forge-std/indexOOBError"},{text:"memOverflowError",link:"/reference/forge-std/memOverflowError"},{text:"zeroVarError",link:"/reference/forge-std/zeroVarError"}]},{text:"Std Storage",link:"/reference/forge-std/std-storage",items:[{text:"target",link:"/reference/forge-std/target"},{text:"sig",link:"/reference/forge-std/sig"},{text:"with_key",link:"/reference/forge-std/with_key"},{text:"depth",link:"/reference/forge-std/depth"},{text:"enable_packed_slots",link:"/reference/forge-std/enable_packed_slots"},{text:"checked_write",link:"/reference/forge-std/checked_write"},{text:"find",link:"/reference/forge-std/find"},{text:"read",link:"/reference/forge-std/read"}]},{text:"Std Math",link:"/reference/forge-std/std-math",items:[{text:"abs",link:"/reference/forge-std/abs"},{text:"delta",link:"/reference/forge-std/delta"},{text:"percentDelta",link:"/reference/forge-std/percentDelta"}]},{text:"Script Utils",link:"/reference/forge-std/script-utils",items:[{text:"computeCreateAddress",link:"/reference/forge-std/compute-create-address"},{text:"deriveRememberKey",link:"/reference/forge-std/derive-remember-key"}]},{text:"Console Logging",link:"/reference/forge-std/console-log"}]},{text:"DSTest Reference",link:"/reference/ds-test"}]},{text:"Miscellaneous",items:[{text:"v1.0 migration guide",link:"/misc/v1.0-migration"},{text:"Struct Encoding",link:"/misc/struct-encoding"},{text:"FAQ",link:"/misc/faq"}]}],theme:{accentColor:{backgroundAccent:{dark:"#f9c22f",light:"#f6b128"},backgroundAccentHover:{dark:"#ebb61f",light:"#e8a517"},backgroundAccentText:{dark:"black",light:"black"},borderAccent:{dark:"#ffdb4b",light:"#e8a517"},textAccent:{dark:"#f9c22f",light:"#f6b128"},textAccentHover:{dark:"#ddaa06",light:"#da9900"}}},editLink:{pattern:"https://github.com/foundry-rs/book/edit/master/vocs/docs/pages/:path",text:"Suggest changes on GitHub"},sponsors:[{name:"Collaborator",height:120,items:[[{name:"Paradigm",link:"https://paradigm.xyz",image:"https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/paradigm-light.svg"},{name:"Ithaca",link:"https://ithaca.xyz",image:"https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/ithaca-light.svg"}]]}],logoUrl:"/foundry-logo.png",iconUrl:"/foundry-logo.png",socials:[{icon:"github",link:"https://github.com/foundry-rs/foundry",label:"GitHub",type:"github"},{icon:"telegram",link:"https://t.me/foundry_support",label:"Telegram",type:"telegram"}],topNav:[{link:"/introduction/getting-started",text:"Docs",id:360,items:[]},{link:"/guides/best-practices/writing-contracts",text:"Guides",id:361,items:[]},{text:"v1.2.2",items:[{text:"Release notes",link:"https://github.com/foundry-rs/foundry/releases/tag/v1.2.2",id:363,items:[]},{text:"Contributing",link:"https://github.com/foundry-rs/foundry/blob/master/CONTRIBUTING.md",id:364,items:[]}],id:362}],basePath:"",font:{},markdown:{code:{themes:{dark:"github-dark-dimmed",light:"github-light"}}},vite:{}}),_B="modulepreload",wB=function(t){return"/"+t},_p={},f=function(a,s,o){let c=Promise.resolve();if(s&&s.length>0){let d=function(m){return Promise.all(m.map(y=>Promise.resolve(y).then(g=>({status:"fulfilled",value:g}),g=>({status:"rejected",reason:g}))))};document.getElementsByTagName("link");const u=document.querySelector("meta[property=csp-nonce]"),h=(u==null?void 0:u.nonce)||(u==null?void 0:u.getAttribute("nonce"));c=d(s.map(m=>{if(m=wB(m),m in _p)return;_p[m]=!0;const y=m.endsWith(".css"),g=y?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${m}"]${g}`))return;const F=document.createElement("link");if(F.rel=y?"stylesheet":_B,y||(F.as="script"),F.crossOrigin="",F.href=m,h&&F.setAttribute("nonce",h),document.head.appendChild(F),y)return new Promise((E,B)=>{F.addEventListener("load",E),F.addEventListener("error",()=>B(new Error(`Unable to preload CSS for ${m}`)))})}))}function A(d){const u=new Event("vite:preloadError",{cancelable:!0});if(u.payload=d,window.dispatchEvent(u),!u.defaultPrevented)throw d}return c.then(d=>{for(const u of d||[])u.status==="rejected"&&A(u.reason);return a().catch(A)})},hh=b.createContext(mh);function gh(){return mh}function SB({children:t,config:a}){const[s,o]=b.useState(()=>a||gh());return b.useEffect(()=>{},[]),b.useEffect(()=>{},[s]),C.jsx(hh.Provider,{value:s,children:t})}function m2(){return b.useContext(hh)}const Dd=[{lazy:()=>f(()=>import("./index-DTJyLF7j.js"),__vite__mapDeps([0,1])),path:"/",type:"mdx",filePath:"index.mdx",content:"---%0Acontent%3A%0A%20%20width%3A%20100%25%0Alayout%3A%20landing%0AshowLogo%3A%20false%0Adescription%3A%20Foundry%20is%20a%20smart%20contract%20development%20toolchain.%20It%20manages%20your%20dependencies%2C%20compiles%20your%20project%2C%20runs%20tests%2C%20deploys%2C%20and%20lets%20you%20interact%20with%20the%20chain%20from%20the%20command-line%20and%20via%20Solidity%20scripts.%0A---%0A%0Aimport%20%7B%20HomePage%2C%20Sponsors%20%7D%20from%20%22vocs%2Fcomponents%22%3B%0A%0A%3Cdiv%20className%3D%22max-w-%5B1120px%5D%20mx-auto%20vp-doc%20relative%20px-%5B24px%5D%20mb-%5B64px%5D%20mt-%5B32px%5D%20md%3Apx-0%20md%3Amb-%5B32px%5D%22%3E%0A%20%20%3Cdiv%20className%3D%22pt-%5B48px%5D%20max-sm%3Apt-0%22%3E%0A%20%20%20%20%3Cdiv%20className%3D%22max-sm%3Apx-0%20space-x-2%20flex%20justify-between%20z-0%20max-md%3Ajustify-center%20max-md%3Aflex-col%20max-md%3Aitems-center%20max-md%3Aspace-y-6%22%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22space-y-4%20max-w-%5B500px%5D%20flex%20flex-col%20justify-between%20items-start%20max-md%3Aitems-center%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22space-y-4%20w-full%20lg%3Amb-%5B40px%5D%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cimg%0A%20%20%20%20%20%20%20%20%20%20src%3D%22%2Fog-image.png%22%0A%20%20%20%20%20%20%20%20%20%20alt%3D%22Foundry%22%0A%20%20%20%20%20%20%20%20%20%20className%3D%22w-full%20h-auto%20rounded-xl%22%0A%20%20%20%20%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22font-regular%20text-%5B21px%5D%20max-sm%3Atext-%5B18px%5D%20text-%5B%23919193%5D%20max-md%3Atext-center%22%3EBlazing%20fast%20smart%20contract%20development%20toolkit%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex%20justify-center%20space-x-2%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CHomePage.Button%20href%3D%22%2Fintroduction%2Fgetting-started%22%20variant%3D%22accent%22%3EGet%20started%3C%2FHomePage.Button%3E%0A%20%20%20%20%20%20%20%20%20%20%3CHomePage.Button%20href%3D%22https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%22%3EGitHub%3C%2FHomePage.Button%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex%20flex-col%20justify-between%20space-y-4%20w-full%20max-w-%5B500px%5D%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20id%3D%22home-install%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%60%60%60bash%20%5Bfoundryup%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%23%20Download%20foundry%20installer%20%60foundryup%60%0A%20%20%20%20%20%20%20%20%20%20%20%20curl%20-L%20https%3A%2F%2Ffoundry.paradigm.xyz%20%7C%20bash%0A%20%20%20%20%20%20%20%20%20%20%20%20%23%20Install%20forge%2C%20cast%2C%20anvil%2C%20chisel%0A%20%20%20%20%20%20%20%20%20%20%20%20foundryup%0A%20%20%20%20%20%20%20%20%20%20%20%20%23%20Install%20the%20latest%20nightly%20release%0A%20%20%20%20%20%20%20%20%20%20%20%20foundryup%20-i%20nightly%0A%20%20%20%20%20%20%20%20%20%20%20%20%60%60%60%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex%20justify-between%20space-x-2%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fstargazers%22%20className%3D%22cursor-pointer%20h-%5B36px%5D%20max-w-%5B120px%5D%20flex-1%20relative%20rounded-lg%20overflow-hidden%20border%20border-black%2F10%20dark%3Aborder-white%2F20%22%20style%3D%7B%7B%20color%3A%20'inherit'%20%7D%7D%20rel%3D%22noreferrer%20noopener%22%20target%3D%22_blank%22%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20flex%20z-%5B1%5D%20p-%5B6px%5D%20h-full%20w-full%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22bg-white%2F60%20dark%3Abg-black%2F40%20flex%20items-center%20justify-center%20rounded-md%20px-3%20py-1%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20className%3D%22font-medium%20text-%5B15px%5D%20opacity-80%20leading-none%20text-center%22%3Estars%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex%20items-center%20h-full%20px-2%20ml-1%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20className%3D%22font-medium%20text-%5B15px%5D%20text-center%20leading-none%20w-full%20text-black%20dark%3Atext-white%22%3E9K%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20bg-amber-500%20opacity-10%20z-%5B0%5D%22%20%2F%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-blur-%5B2px%5D%20backdrop-filter%20z-0%22%20%2F%3E%0A%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fcontributors%22%20className%3D%22cursor-pointer%20h-%5B36px%5D%20max-w-%5B160px%5D%20flex-1%20relative%20rounded-lg%20overflow-hidden%20border%20border-green-400%2F50%22%20style%3D%7B%7B%20color%3A%20'inherit'%20%7D%7D%20rel%3D%22noreferrer%20noopener%22%20target%3D%22_blank%22%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20flex%20z-%5B1%5D%20p-%5B6px%5D%20h-full%20w-full%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex-1%20bg-white%2F60%20dark%3Abg-black%2F40%20flex%20items-center%20w-full%20h-full%20rounded-md%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20className%3D%22font-medium%20text-%5B15px%5D%20leading-none%20opacity-80%20w-full%20text-center%22%3Econtributors%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex%20items-center%20h-full%20px-2%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20className%3D%22font-medium%20text-%5B15px%5D%20leading-none%20text-center%20w-full%20text-green-400%22%3E500%2B%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20bg-green-400%20opacity-10%20z-%5B0%5D%22%20%2F%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-blur-%5B2px%5D%20backdrop-filter%20z-%5B0%5D%22%20%2F%3E%0A%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fblob%2Fmaster%2FLICENSE-MIT%22%20className%3D%22cursor-pointer%20h-%5B36px%5D%20max-w-%5B130px%5D%20flex-1%20relative%20rounded-lg%20overflow-hidden%20border%20border-black%2F10%20dark%3Aborder-white%2F20%20max-lg%3Ahidden%22%20style%3D%7B%7B%20color%3A%20'inherit'%20%7D%7D%20rel%3D%22noreferrer%20noopener%22%20target%3D%22_blank%22%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20flex%20z-%5B1%5D%20p-%5B6px%5D%20h-full%20w-full%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex-1%20bg-white%2F60%20dark%3Abg-black%2F40%20flex%20items-center%20w-full%20h-full%20rounded-md%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20className%3D%22font-medium%20text-%5B15px%5D%20leading-none%20opacity-80%20w-full%20text-center%22%3Elicense%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22flex%20items-center%20h-full%20px-2%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20className%3D%22font-medium%20text-%5B15px%5D%20leading-none%20text-center%20w-full%20text-black%20dark%3Atext-white%22%3EMIT%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20bg-black%2F5%20dark%3Abg-white%2F5%20z-%5B0%5D%22%20%2F%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-blur-%5B2px%5D%20backdrop-filter%20z-%5B0%5D%22%20%2F%3E%0A%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cdiv%20className%3D%22flex%20justify-between%20flex-wrap%20mt-10%20lg%3Amt-30%22%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22pr-2%20w-1%2F4%20max-lg%3Apb-3%20max-sm%3Apx-0%20max-lg%3Aw-1%2F2%20max-sm%3Aw-full%20z-0%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22relative%20w-full%20h-%5B168px%5D%20max-lg%3Ah-%5B142px%5D%20overflow-hidden%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22%2Fforge%2Ftests%2Ffork-testing%22%20className%3D%22hover%3Abg-black%2F2%20dark%3Ahover%3Abg-white%2F2%20border-black%2F10%20dark%3Aborder-white%2F10%20border%20border-solid%20rounded-lg%20h-full%20px-5%20py-6%20absolute%20z-10%20flex%20flex-col%20justify-between%20w-full%20vocs_Link%20vocs_Link_styleless%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-xl%20font-medium%20text-black%20dark%3Atext-white%22%3EFork%20Testing%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-%5B17px%5D%20text-%5B%23919193%5D%22%3ETest%20your%20contracts%20against%20real%20world%20chain%20state%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20dark%3Abg-%5B%23313136%5D%20opacity-20%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-filter%20backdrop-blur-%5B2px%5D%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22pl-2%20pr-2%20max-sm%3Apx-0%20max-lg%3Apb-3%20max-lg%3Apr-0%20w-1%2F4%20max-lg%3Aw-1%2F2%20max-sm%3Aw-full%20z-0%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22relative%20w-full%20h-%5B168px%5D%20max-lg%3Ah-%5B142px%5D%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22%2Fconfig%2Fdynamic-test-linking%22%20className%3D%22hover%3Abg-black%2F2%20dark%3Ahover%3Abg-white%2F2%20border-black%2F10%20dark%3Aborder-white%2F10%20border%20border-solid%20rounded-lg%20h-full%20px-5%20py-6%20absolute%20z-10%20flex%20flex-col%20justify-between%20w-full%20vocs_Link%20vocs_Link_styleless%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-xl%20font-medium%20text-black%20dark%3Atext-white%22%3EUltra-fast%20compilation%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-%5B17px%5D%20text-%5B%23919193%5D%22%3ELower%20compilation%20times%20drastically%20using%20%60dynamic_test_linking%60%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20dark%3Abg-%5B%23313136%5D%20opacity-20%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-filter%20backdrop-blur-%5B2px%5D%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22pl-2%20pr-2%20max-lg%3Apb-3%20max-sm%3Apx-0%20max-lg%3Apl-0%20w-1%2F4%20max-lg%3Aw-1%2F2%20max-sm%3Aw-full%20z-0%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22relative%20w-full%20h-%5B168px%5D%20max-lg%3Ah-%5B142px%5D%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22%2Fanvil%2Foverview%22%20className%3D%22hover%3Abg-black%2F2%20dark%3Ahover%3Abg-white%2F2%20border-black%2F10%20dark%3Aborder-white%2F10%20border%20border-solid%20rounded-lg%20h-full%20px-5%20py-6%20absolute%20z-10%20flex%20flex-col%20justify-between%20w-full%20vocs_Link%20vocs_Link_styleless%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-xl%20font-medium%20text-black%20dark%3Atext-white%22%3EPerformant%20local%20node%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-%5B17px%5D%20text-%5B%23919193%5D%22%3ERun%20%60anvil%60%20to%20setup%20local%20dev%20nodes%20instantly%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20dark%3Abg-%5B%23313136%5D%20opacity-20%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-filter%20backdrop-blur-%5B2px%5D%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%20className%3D%22pl-2%20w-1%2F4%20max-sm%3Apx-0%20max-lg%3Aw-1%2F2%20max-sm%3Aw-full%20z-0%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22relative%20w-full%20h-%5B168px%5D%20max-lg%3Ah-%5B142px%5D%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22%2Fcast%2Foverview%22%20className%3D%22hover%3Abg-black%2F2%20dark%3Ahover%3Abg-white%2F2%20border-black%2F10%20dark%3Aborder-white%2F10%20border%20border-solid%20rounded-lg%20h-full%20px-5%20py-6%20absolute%20z-10%20flex%20flex-col%20justify-between%20w-full%20vocs_Link%20vocs_Link_styleless%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-xl%20font-medium%20text-black%20dark%3Atext-white%22%3EInteract%20with%20applications%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22text-%5B17px%5D%20text-%5B%23919193%5D%22%3E%60cast%60%20is%20your%20Swiss%20Army%20knife%20to%20interact%20with%20any%20chain%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fa%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20dark%3Abg-%5B%23313136%5D%20opacity-20%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%22absolute%20left-0%20right-0%20top-0%20bottom-0%20backdrop-filter%20backdrop-blur-%5B2px%5D%20z-0%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%3Carticle%20className%3D%22vocs_Content%20max-w-5xl%20mx-auto%22%3E%0A%0A%23%20Quick%20Actions%0A%0A---%0A%0A%23%23%20Forge%0A%0A%5B%60forge%60%5D(%2Fforge%2Foverview)%20helps%20you%20build%2C%20test%2C%20debug%2C%20deploy%20and%20verify%20smart%20contracts.%0A%0A%3A%3A%3Acode-group%0A%0A%60%60%60bash%20%5BInitialize%20forge%20project%5D%0A%23%20Initializes%20a%20project%20called%20%60Counter%60%0Aforge%20init%20Counter%0A%60%60%60%0A%0A%60%60%60bash%20%5BRun%20tests%5D%0A%23%20Run%20tests%20for%20the%20Counter%20contract%0Aforge%20test%0A%23%20You%20can%20run%20tests%20against%20chain%20state%20by%20forking%0Aforge%20test%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%60%60%60bash%20%5BDeploy%20contract%5D%0A%23%20Use%20forge%20scripts%20to%20deploy%20the%20Counter%20contract%0A%23%20Running%20%60anvil%60%20%40%20http%3A%2F%2Flocalhost%3A8545%0A%23%20Set%20the%20private%20key%20in%20the%20env%0Aexport%20PRIVATE_KEY%3D%220xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%22%20%23%20Address%20-%200xf39fd6e51aad88f6f4ce6ab8827279cfffb92266%0A%23%20Run%20the%20script%20and%20broadcast%20the%20deploy%20transaction%0Aforge%20script%20script%2FCounter.s.sol%20--rpc-url%20http%3A%2F%2F127.0.0.1%3A8545%20--broadcast%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%60%60%60bash%20%5BClone%20an%20onchain%20contract%5D%0A%23%20Clones%20an%20onchain%20contract%20and%20sets%20up%20a%20forge%20project%0Aforge%20clone%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%60%60%60%0A%0A%3A%3A%3A%0A%0A%23%23%20Anvil%0A%0A%5B%60anvil%60%5D(%2Fanvil%2Foverview)%20is%20your%20local%20development%20node%20that%20complies%20with%20the%20%5BEthereum%20JSON-RPC%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fapis%2Fjson-rpc)%20spec.%0A%0A%3A%3A%3Acode-group%0A%0A%60%60%60bash%20%5BStart%20a%20local%20node%5D%0A%23%20Start%20a%20fresh%20anvil%20node%20with%2010%20pre-funded%20accounts%0Aanvil%0A%60%60%60%0A%0A%60%60%60bash%20%5BForking%20mainnet%5D%0A%23%20Fork%20latest%20mainnet%20state%0Aanvil%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%60%60%60bash%20%5BLoad%20and%20Dump%20State%5D%0A%23%20Load%20and%20dump%20state%20when%20initializing%20and%20shutting%20down%20anvil%0Aanvil%20--state%20.%2Fpath%2Fto%2Fstate-file%0A%60%60%60%0A%0A%3A%3A%3A%0A%0A%23%23%20Cast%0A%0A%5B%60cast%60%5D(%2Fcast%2Foverview)%20is%20your%20swiss%20army%20knife%20for%20interacting%20with%20onchain%20applications%20from%20the%20command%20line.%0A%0A%3A%3A%3Acode-group%0A%0A%60%60%60bash%20%5BCall%20a%20contract%20function%5D%0A%23%20Perform%20an%20%60eth_call%60%20on%20a%20contract%20to%20read%20balances%0Acast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%22balanceOf(address)%22%200xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045%20%5C%0A--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%60%60%60bash%20%5BSend%20a%20transaction%5D%0A%23%20Running%20%60anvil%60%20%40%20http%3A%2F%2Flocalhost%3A8545%0A%23%20Set%20the%20private%20key%20in%20the%20env%0Aexport%20PRIVATE_KEY%3D%220xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%22%0A%23%20Send%20the%20transaction%0Acast%20send%200x70997970C51812dc3A010C7d01b50e0d17dc79C8%20--value%2010000000%20--private-key%20%24PRIVATE_KEY%20%26%26%20%5C%0A%23%20Fetch%20ETH%20balances%0Aecho%20%22%5CnBalance%20Of%200x7099%3A%22%20%26%26%20cast%20balance%200x70997970C51812dc3A010C7d01b50e0d17dc79C8%20%26%26%20%5C%0Aecho%20%22%5CnBalance%20Of%200xf39F%3A%22%20%26%26%20cast%20balance%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%0A%60%60%60%0A%0A%60%60%60bash%20%5BCall%20JSON-RPC%20methods%5D%0A%23%20Calls%20the%20%60eth_getHeaderByNumber%60%20RPC%20method%20with%20the%20number%20param%20in%20hexadecimal%0A%23%20cast%202h%20converts%20integer%20to%20hex%0Acast%20rpc%20eth_getHeaderByNumber%20%24(cast%202h%2022539851)%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%3A%3A%3A%0A%0A%23%20Community%0A%0AJoin%20the%20Community%0A%0A-%20Ask%20for%20support%20in%20the%20%5BTelegram%20chat%5D(https%3A%2F%2Ft.me%2Ffoundry_support)%20or%20create%20an%20%5Bissue%20on%20Github%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues)%0A-%20Join%20the%20500%2B%20developers%20by%20%5Bcontributing%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fblob%2Fmaster%2FCONTRIBUTING.md)%20to%20Foundry%0A%0A%23%20Supporters%0A%0A%3CSponsors%20%2F%3E%0A%0A%3C%2Farticle%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CkRr14Kh.js"),__vite__mapDeps([2,1])),path:"/anvil/overview",type:"mdx",filePath:"anvil/overview.md",content:"---%0D%0Adescription%3A%20Anvil%20is%20a%20fast%20local%20Ethereum%20development%20node.%0D%0A---%0D%0A%0D%0A%23%23%20Anvil%0D%0A%0D%0AAnvil%20is%20a%20fast%20local%20Ethereum%20development%20node.%0D%0A%0D%0AAnvil%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60forge%60%2C%20%60cast%60%20and%20%60chisel%60.%20If%20you%20haven't%20installed%20Foundry%0D%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0D%0A%0D%0A%23%23%23%20Getting%20started%0D%0A%0D%0ATo%20use%20Anvil%2C%20simply%20type%20%60anvil%60.%20To%20fork%20against%20a%20live%20Ethereum%20network%20run%20%60anvil%20--fork-url%20%3CRPC_URL%3E%60.%0D%0A%0D%0ALet's%20fork%20Ethereum%20mainnet%20at%20the%20latest%20block%3A%0D%0A%0D%0A%60%60%60bash%0D%0Aanvil%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0D%0A%60%60%60%0D%0A%0D%0A%60%60%60bash%0D%0A%0D%0A%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_%20%20%20_%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(_)%20%7C%20%7C%0D%0A%20%20%20%20%20%20__%20_%20%20%20_%20__%20%20%20__%20%20%20__%20%20_%20%20%7C%20%7C%0D%0A%20%20%20%20%20%2F%20_%60%20%7C%20%7C%20'_%20%5C%20%20%5C%20%5C%20%2F%20%2F%20%7C%20%7C%20%7C%20%7C%0D%0A%20%20%20%20%7C%20(_%7C%20%7C%20%7C%20%7C%20%7C%20%7C%20%20%5C%20V%20%2F%20%20%7C%20%7C%20%7C%20%7C%0D%0A%20%20%20%20%20%5C__%2C_%7C%20%7C_%7C%20%7C_%7C%20%20%20%5C_%2F%20%20%20%7C_%7C%20%7C_%7C%0D%0A%0D%0A%20%20%20%200.2.0%20(c4fcf12%202024-12-12T00%3A23%3A45.094165202Z)%0D%0A%20%20%20%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%0D%0A%0D%0AAvailable%20Accounts%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A(0)%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20(10000.000000000000000000%20ETH)%0D%0A(1)%200x70997970C51812dc3A010C7d01b50e0d17dc79C8%20(10000.000000000000000000%20ETH)%0D%0A(2)%200x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC%20(10000.000000000000000000%20ETH)%0D%0A(3)%200x90F79bf6EB2c4f870365E785982E1f101E93b906%20(10000.000000000000000000%20ETH)%0D%0A(4)%200x15d34AAf54267DB7D7c367839AAf71A00a2C6A65%20(10000.000000000000000000%20ETH)%0D%0A(5)%200x9965507D1a55bcC2695C58ba16FB37d819B0A4dc%20(10000.000000000000000000%20ETH)%0D%0A(6)%200x976EA74026E726554dB657fA54763abd0C3a0aa9%20(10000.000000000000000000%20ETH)%0D%0A(7)%200x14dC79964da2C08b23698B3D3cc7Ca32193d9955%20(10000.000000000000000000%20ETH)%0D%0A(8)%200x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f%20(10000.000000000000000000%20ETH)%0D%0A(9)%200xa0Ee7A142d267C1f36714E4a8F75612F20a79720%20(10000.000000000000000000%20ETH)%0D%0A%0D%0APrivate%20Keys%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A(0)%200xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%0D%0A(1)%200x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d%0D%0A(2)%200x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a%0D%0A(3)%200x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6%0D%0A(4)%200x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a%0D%0A(5)%200x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba%0D%0A(6)%200x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e%0D%0A(7)%200x4bbbf85ce3377467afe5d46f804f221813b2bb87f24d81f60f1fcdbf7cbf4356%0D%0A(8)%200xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97%0D%0A(9)%200x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6%0D%0A%0D%0AWallet%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0AMnemonic%3A%20%20%20%20%20%20%20%20%20%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%0D%0ADerivation%20path%3A%20%20%20m%2F44'%2F60'%2F0'%2F0%2F%0D%0A%0D%0A%0D%0AFork%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0AEndpoint%3A%20%20%20%20%20%20%20https%3A%2F%2Feth.merkle.io%0D%0ABlock%20number%3A%20%20%2021387064%0D%0ABlock%20hash%3A%20%20%20%20%200x904aee789b82ac0412448bc2ea9bb3774d10c2dae4a0e5b7f6451ac2ecd0787a%0D%0AChain%20ID%3A%20%20%20%20%20%20%201%0D%0A%0D%0ABase%20Fee%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A26049293674%0D%0A%0D%0AGas%20Limit%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A30000000%0D%0A%0D%0AGenesis%20Timestamp%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A1734014216%0D%0A%0D%0AListening%20on%20127.0.0.1%3A8545%0D%0A%60%60%60%0D%0A%0D%0A%3Cbr%3E%3C%2Fbr%3E%0D%0A%0D%0A%3A%3A%3Ainfo%0D%0ASee%20the%20%5B%60anvil%60%20Reference%5D(%2Fanvil%2Freference)%20for%20in%20depth%20information%20on%20Anvil%20and%20its%20capabilities.%0D%0A%3A%3A%3A%0D%0A%0D%0A%23%23%20Notes%0D%0A%0D%0A%23%23%23%20EIP-7702%20and%20Default%20Accounts%0D%0A%0D%0ASince%20the%20advent%20of%20EIP-7702%2C%20Anvil's%20default%20accounts%20have%20been%20delegated%20to%20drainers%20such%20as%20https%3A%2F%2Fetherscan.io%2Faddress%2F0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%23authlist7702%0D%0A%0D%0AThis%20can%20negatively%20impact%20developer%20experience%20when%20users%20are%20running%20Anvil%20in%20fork%20mode%20and%20are%20making%20RPC%20calls%20that%20involve%20one%20of%20the%20default%20anvil%20accounts.%20To%20avoid%20this%20issue%2C%20use%20a%20different%20mnemonic%20when%20starting%20Anvil%3A%0D%0A%0D%0A%60%60%60bash%0D%0Aanvil%20--mnemonic%20%22%3Ccustom%20mnemonic%3E%22%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0D%0A%60%60%60%0D%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CkRr14Kh.js"),__vite__mapDeps([2,1])),path:"/anvil/overview.html",type:"mdx",filePath:"anvil/overview.md",content:"---%0D%0Adescription%3A%20Anvil%20is%20a%20fast%20local%20Ethereum%20development%20node.%0D%0A---%0D%0A%0D%0A%23%23%20Anvil%0D%0A%0D%0AAnvil%20is%20a%20fast%20local%20Ethereum%20development%20node.%0D%0A%0D%0AAnvil%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60forge%60%2C%20%60cast%60%20and%20%60chisel%60.%20If%20you%20haven't%20installed%20Foundry%0D%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0D%0A%0D%0A%23%23%23%20Getting%20started%0D%0A%0D%0ATo%20use%20Anvil%2C%20simply%20type%20%60anvil%60.%20To%20fork%20against%20a%20live%20Ethereum%20network%20run%20%60anvil%20--fork-url%20%3CRPC_URL%3E%60.%0D%0A%0D%0ALet's%20fork%20Ethereum%20mainnet%20at%20the%20latest%20block%3A%0D%0A%0D%0A%60%60%60bash%0D%0Aanvil%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0D%0A%60%60%60%0D%0A%0D%0A%60%60%60bashc4fcf12%202024-12-12T00%3A23%3A45.094165202Z)%0D%0A%20%20%20%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%0D%0A%0D%0AAvailable%20Accounts%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A(0)%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20(10000.000000000000000000%20ETH)%0D%0A(1)%200x70997970C51812dc3A010C7d01b50e0d17dc79C8%20(10000.000000000000000000%20ETH)%0D%0A(2)%200x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC%20(10000.000000000000000000%20ETH)%0D%0A(3)%200x90F79bf6EB2c4f870365E785982E1f101E93b906%20(10000.000000000000000000%20ETH)%0D%0A(4)%200x15d34AAf54267DB7D7c367839AAf71A00a2C6A65%20(10000.000000000000000000%20ETH)%0D%0A(5)%200x9965507D1a55bcC2695C58ba16FB37d819B0A4dc%20(10000.000000000000000000%20ETH)%0D%0A(6)%200x976EA74026E726554dB657fA54763abd0C3a0aa9%20(10000.000000000000000000%20ETH)%0D%0A(7)%200x14dC79964da2C08b23698B3D3cc7Ca32193d9955%20(10000.000000000000000000%20ETH)%0D%0A(8)%200x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f%20(10000.000000000000000000%20ETH)%0D%0A(9)%200xa0Ee7A142d267C1f36714E4a8F75612F20a79720%20(10000.000000000000000000%20ETH)%0D%0A%0D%0APrivate%20Keys%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A(0)%200xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%0D%0A(1)%200x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d%0D%0A(2)%200x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a%0D%0A(3)%200x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6%0D%0A(4)%200x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a%0D%0A(5)%200x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba%0D%0A(6)%200x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e%0D%0A(7)%200x4bbbf85ce3377467afe5d46f804f221813b2bb87f24d81f60f1fcdbf7cbf4356%0D%0A(8)%200xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97%0D%0A(9)%200x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6%0D%0A%0D%0AWallet%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0AMnemonic%3A%20%20%20%20%20%20%20%20%20%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%0D%0ADerivation%20path%3A%20%20%20m%2F44'%2F60'%2F0'%2F0%2F%0D%0A%0D%0A%0D%0AFork%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0AEndpoint%3A%20%20%20%20%20%20%20https%3A%2F%2Feth.merkle.io%0D%0ABlock%20number%3A%20%20%2021387064%0D%0ABlock%20hash%3A%20%20%20%20%200x904aee789b82ac0412448bc2ea9bb3774d10c2dae4a0e5b7f6451ac2ecd0787a%0D%0AChain%20ID%3A%20%20%20%20%20%20%201%0D%0A%0D%0ABase%20Fee%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A26049293674%0D%0A%0D%0AGas%20Limit%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A30000000%0D%0A%0D%0AGenesis%20Timestamp%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0D%0A%0D%0A1734014216%0D%0A%0D%0AListening%20on%20127.0.0.1%3A8545%0D%0A%60%60%60%0D%0A%0D%0A%3Cbr%3E%3C%2Fbr%3E%0D%0A%0D%0A%3A%3A%3Ainfo%0D%0ASee%20the%20%5B%60anvil%60%20Reference%5D(%2Fanvil%2Freference)%20for%20in%20depth%20information%20on%20Anvil%20and%20its%20capabilities.%0D%0A%3A%3A%3A%0D%0A%0D%0A%23%23%20Notes%0D%0A%0D%0A%23%23%23%20EIP-7702%20and%20Default%20Accounts%0D%0A%0D%0ASince%20the%20advent%20of%20EIP-7702%2C%20Anvil's%20default%20accounts%20have%20been%20delegated%20to%20drainers%20such%20as%20https%3A%2F%2Fetherscan.io%2Faddress%2F0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%23authlist7702%0D%0A%0D%0AThis%20can%20negatively%20impact%20developer%20experience%20when%20users%20are%20running%20Anvil%20in%20fork%20mode%20and%20are%20making%20RPC%20calls%20that%20involve%20one%20of%20the%20default%20anvil%20accounts.%20To%20avoid%20this%20issue%2C%20use%20a%20different%20mnemonic%20when%20starting%20Anvil%3A%0D%0A%0D%0A%60%60%60bash%0D%0Aanvil%20--mnemonic%20%22%3Ccustom%20mnemonic%3E%22%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0D%0A%60%60%60%0D%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./reference-DjWd1X7B.js"),__vite__mapDeps([3,1])),path:"/anvil/reference",type:"mdx",filePath:"anvil/reference.md",content:"%23%23%20anvil%0A%0A%23%23%23%20NAME%0A%0Aanvil%20-%20Create%20a%20local%20testnet%20node%20for%20deploying%20and%20testing%20smart%20contracts.%20It%20can%20also%20be%20used%20to%20fork%20other%20EVM%20compatible%20networks.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60anvil%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20local%20testnet%20node%20for%20deploying%20and%20testing%20smart%20contracts.%20It%20can%20also%20be%20used%20to%20fork%20other%20EVM%20compatible%20networks.%0A%0AThis%20section%20covers%20an%20extensive%20list%20of%20information%20about%20Mining%20Modes%2C%20Supported%20Transport%20Layers%2C%20Supported%20RPC%20Methods%2C%20Anvil%20flags%20and%20their%20usages.%20You%20can%20run%20multiple%20flags%20at%20the%20same%20time.%0A%0A%23%23%23%23%20Mining%20Modes%0A%0AMining%20modes%20refer%20to%20how%20frequent%20blocks%20are%20mined%20using%20Anvil.%20By%20default%2C%20it%20automatically%20generates%20a%20new%20block%20as%20soon%20as%20a%20transaction%20is%20submitted.%0A%0AYou%20can%20change%20this%20setting%20to%20interval%20mining%20if%20you%20will%2C%20which%20means%20that%20a%20new%20block%20will%20be%20generated%20in%20a%20given%20period%20of%20time%20selected%20by%20the%20user.%20If%20you%20want%20to%20go%20for%20this%20type%20of%20mining%2C%20you%20can%20do%20it%20by%20adding%20the%20%60--block-time%20%3Cblock-time-in-seconds%3E%60%20flag%2C%20like%20in%20the%20following%20example.%0A%0A%60%60%60sh%0A%23%20Produces%20a%20new%20block%20every%2010%20seconds%0Aanvil%20--block-time%2010%0A%60%60%60%0A%0AThere's%20also%20a%20third%20mining%20mode%20called%20never.%20In%20this%20case%2C%20it%20disables%20auto%20and%20interval%20mining%2C%20and%20mine%20on%20demand%20instead.%20You%20can%20do%20this%20by%20typing%3A%0A%0A%60%60%60sh%0A%23%20Enables%20never%20mining%20mode%0Aanvil%20--no-mining%0A%60%60%60%0A%0ATo%20speed%20up%20the%20finalization%20of%20blocks%2C%20you%20can%20use%20the%20%60--slots-in-an-epoch%60%20flag%20with%20a%20value%20of%20%601%60%20for%20example.%20This%20will%20lead%20to%20the%20block%20at%20height%20%60N-2%60%20being%20finalized%2C%20where%20%60N%60%20is%20the%20latest%20block.%0A%0A%23%23%23%23%20Supported%20Transport%20Layers%0A%0AHTTP%20and%20Websocket%20connections%20are%20supported.%20The%20server%20listens%20on%20port%208545%20by%20default%2C%20but%20it%20can%20be%20changed%20by%20running%20the%20following%20command%3A%0A%0A%60%60%60sh%0Aanvil%20--port%20%3CPORT%3E%0A%60%60%60%0A%0A%23%23%23%23%20Default%20CREATE2%20Deployer%0A%0AAnvil%2C%20when%20used%20without%20forking%2C%20includes%20the%20%5Bdefault%20CREATE2%20deployer%20proxy%5D(https%3A%2F%2Fgithub.com%2FArachnid%2Fdeterministic-deployment-proxy)%20at%20the%20address%20%600x4e59b44847b379578588920ca78fbf26c0b4956c%60.%0A%0AThis%20allows%20you%20to%20test%20CREATE2%20deployments%20locally%20without%20forking.%0A%0A%23%23%23%23%20Supported%20RPC%20Methods%0A%0A%23%23%23%23%23%20Standard%20Methods%0A%0AThe%20standard%20methods%20are%20based%20on%20%5Bthis%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fapis%2Fjson-rpc%2F)%20reference.%0A%0A-%20%60web3_clientVersion%60%0A%0A-%20%60web3_sha3%60%0A%0A-%20%60eth_chainId%60%0A%0A-%20%60eth_networkId%60%0A%0A-%20%60eth_gasPrice%60%0A%0A-%20%60eth_accounts%60%0A%0A-%20%60eth_blockNumber%60%0A%0A-%20%60eth_getBalance%60%0A%0A-%20%60eth_getStorageAt%60%0A%0A-%20%60eth_getBlockByHash%60%0A%0A-%20%60eth_getBlockByNumber%60%0A%0A-%20%60eth_getTransactionCount%60%0A%0A-%20%60eth_getBlockTransactionCountByHash%60%0A%0A-%20%60eth_getBlockTransactionCountByNumber%60%0A%0A-%20%60eth_getUncleCountByBlockHash%60%0A%0A-%20%60eth_getUncleCountByBlockNumber%60%0A%0A-%20%60eth_getCode%60%0A%0A-%20%60eth_sign%60%0A%0A-%20%60eth_signTypedData_v4%60%0A%0A-%20%60eth_sendTransaction%60%0A%0A-%20%60eth_sendRawTransaction%60%0A%0A-%20%60eth_call%60%0A%0A-%20%60eth_createAccessList%60%0A%0A-%20%60eth_estimateGas%60%0A%0A-%20%60eth_getTransactionByHash%60%0A%0A-%20%60eth_getTransactionByBlockHashAndIndex%60%0A%0A-%20%60eth_getTransactionByBlockNumberAndIndex%60%0A%0A-%20%60eth_getTransactionReceipt%60%0A%0A-%20%60eth_getUncleByBlockHashAndIndex%60%0A%0A-%20%60eth_getUncleByBlockNumberAndIndex%60%0A%0A-%20%60eth_getLogs%60%0A%0A-%20%60eth_newFilter%60%0A%0A-%20%60eth_getFilterChanges%60%0A%0A-%20%60eth_newBlockFilter%60%0A%0A-%20%60eth_newPendingTransactionFilter%60%0A%0A-%20%60eth_getFilterLogs%60%0A%0A-%20%60eth_uninstallFilter%60%0A%0A-%20%60eth_getWork%60%0A%0A-%20%60eth_subscribe%60%0A%0A-%20%60eth_unsubscribe%60%0A%0A-%20%60eth_syncing%60%0A%0A-%20%60eth_submitWork%60%0A%0A-%20%60eth_submitHashrate%60%0A%0A-%20%60eth_feeHistory%60%0A%0A-%20%60eth_getProof%60%0A%0A-%20%60debug_traceTransaction%60%0A%20%20Use%20%60anvil%20--steps-tracing%60%20to%20get%20%60structLogs%60%0A%0A-%20%60debug_traceCall%60%0A%20%20Note%20that%20non-standard%20traces%20are%20not%20yet%20supported.%20This%20means%20you%20can't%20pass%20any%20arguments%20to%20the%20%60trace%60%20parameter.%0A%0A-%20%60trace_transaction%60%0A%0A-%20%60trace_block%60%0A%0A%23%23%23%23%23%20Custom%20Methods%0A%0AThe%20%60anvil_*%60%20namespace%20is%20an%20alias%20for%20%60hardhat%60.%20For%20more%20info%2C%20refer%20to%20the%20%5BHardhat%20documentation%5D(https%3A%2F%2Fhardhat.org%2Fhardhat-network%2Freference%23hardhat-network-methods).%0A%0A%60anvil_impersonateAccount%60%0ASend%20transactions%20impersonating%20an%20externally%20owned%20account%20or%20contract.%0A%0A%60anvil_stopImpersonatingAccount%60%0AStops%20impersonating%20an%20account%20or%20contract%20if%20previously%20set%20with%20%60anvil_impersonateAccount%60.%0A%0A%60anvil_autoImpersonateAccount%60%0AAccepts%20%60true%60%20to%20enable%20auto%20impersonation%20of%20accounts%2C%20and%20%60false%60%20to%20disable%20it.%20When%20enabled%2C%20any%20transaction's%20sender%20will%20be%20automatically%20impersonated.%20Same%20as%20%60anvil_impersonateAccount%60.%0A%0A%60anvil_getAutomine%60%0AReturns%20true%20if%20automatic%20mining%20is%20enabled%2C%20and%20false%20if%20it%20is%20not.%0A%0A%60anvil_mine%60%0AMines%20a%20series%20of%20blocks.%0A%0A%60anvil_dropTransaction%60%0ARemoves%20transactions%20from%20the%20pool.%0A%0A%60anvil_reset%60%0AReset%20the%20fork%20to%20a%20fresh%20forked%20state%2C%20and%20optionally%20update%20the%20fork%20config.%0A%0A%60anvil_setRpcUrl%60%0ASets%20the%20backend%20RPC%20URL.%0A%0A%60anvil_setBalance%60%0AModifies%20the%20balance%20of%20an%20account.%0A%0A%60anvil_setCode%60%0ASets%20the%20code%20of%20a%20contract.%0A%0A%60anvil_setNonce%60%0ASets%20the%20nonce%20of%20an%20address.%0A%0A%60anvil_setStorageAt%60%0AWrites%20a%20single%20slot%20of%20the%20account's%20storage.%0A%0A%60anvil_setCoinbase%60%0ASets%20the%20coinbase%20address.%0A%0A%60anvil_setLoggingEnabled%60%0AEnable%20or%20disable%20logging.%0A%0A%60anvil_setMinGasPrice%60%0ASet%20the%20minimum%20gas%20price%20for%20the%20node.%0A%0A%60anvil_setNextBlockBaseFeePerGas%60%0ASets%20the%20base%20fee%20of%20the%20next%20block.%0A%0A%60anvil_setChainId%60%0ASets%20the%20chain%20ID%20of%20the%20current%20EVM%20instance.%0A%0A%60anvil_dumpState%60%0AReturns%20a%20hex%20string%20representing%20the%20complete%20state%20of%20the%20chain.%20Can%20be%20re-imported%20into%20a%20fresh%2Frestarted%20instance%20of%20Anvil%20to%20reattain%20the%20same%20state.%0A%0A%60anvil_loadState%60%0AWhen%20given%20a%20hex%20string%20previously%20returned%20by%20%60anvil_dumpState%60%2C%20merges%20the%20contents%20into%20the%20current%20chain%20state.%20Will%20overwrite%20any%20colliding%20accounts%2Fstorage%20slots.%0A%0A%60anvil_nodeInfo%60%0ARetrieves%20the%20configuration%20params%20for%20the%20currently%20running%20Anvil%20node.%0A%0A%23%23%23%23%23%20Special%20Methods%0A%0AThe%20special%20methods%20come%20from%20Ganache.%20You%20can%20take%20a%20look%20at%20the%20documentation%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Ftrufflesuite%2Fganache-cli-archive%2Fblob%2Fmaster%2FREADME.md).%0A%0A%60evm_setAutomine%60%0AEnables%20or%20disables%2C%20based%20on%20the%20single%20boolean%20argument%2C%20the%20automatic%20mining%20of%20new%20blocks%20with%20each%20new%20transaction%20submitted%20to%20the%20network.%0A%0A%60evm_setIntervalMining%60%0ASets%20the%20mining%20behavior%20to%20interval%20with%20the%20given%20interval%20(seconds).%0A%0A%60evm_snapshot%60%0ASnapshot%20the%20state%20of%20the%20blockchain%20at%20the%20current%20block.%0A%0A%60evm_revert%60%0ARevert%20the%20state%20of%20the%20blockchain%20to%20a%20previous%20snapshot.%20Takes%20a%20single%20parameter%2C%20which%20is%20the%20snapshot%20id%20to%20revert%20to.%0A%0A%60evm_increaseTime%60%0AJump%20forward%20in%20time%20by%20the%20given%20amount%20of%20time%2C%20in%20seconds.%0A%0A%60evm_setNextBlockTimestamp%60%0ASimilar%20to%20%60evm_increaseTime%60%20but%20takes%20the%20exact%20timestamp%20that%20you%20want%20in%20the%20next%20block.%0A%0A%60anvil_setBlockTimestampInterval%60%0ASimilar%20to%20%60evm_increaseTime%60%20but%20sets%20a%20block%20timestamp%20%60interval%60.%20The%20timestamp%20of%20the%20next%20block%20will%20be%20computed%20as%20%60lastBlock_timestamp%20%2B%20interval%60.%0A%0A%60evm_setBlockGasLimit%60%0ASets%20the%20block%20gas%20limit%20for%20the%20following%20blocks.%0A%0A%60anvil_removeBlockTimestampInterval%60%0ARemoves%20an%20%60anvil_setBlockTimestampInterval%60%20if%20it%20exists.%0A%0A%60evm_mine%60%0AMine%20a%20single%20block.%0A%0A%60anvil_enableTraces%60%0ATurn%20on%20call%20traces%20for%20transactions%20that%20are%20returned%20to%20the%20user%20when%20they%20execute%20a%20transaction%20(instead%20of%20just%20txhash%2Freceipt).%0A%0A%60eth_sendUnsignedTransaction%60%0AExecute%20a%20transaction%20regardless%20of%20signature%20status.%0A%0AFor%20the%20next%20three%20methods%2C%20make%20sure%20to%20read%20%5BGeth's%20documentation%5D(https%3A%2F%2Fgeth.ethereum.org%2Fdocs%2Frpc%2Fns-txpool).%0A%0A%60txpool_status%60%0AReturns%20the%20number%20of%20transactions%20currently%20pending%20for%20inclusion%20in%20the%20next%20block(s)%2C%20as%20well%20as%20the%20ones%20that%20are%20being%20scheduled%20for%20future%20execution%20only.%0A%0A%60txpool_inspect%60%0AReturns%20a%20summary%20of%20all%20the%20transactions%20currently%20pending%20for%20inclusion%20in%20the%20next%20block(s)%2C%20as%20well%20as%20the%20ones%20that%20are%20being%20scheduled%20for%20future%20execution%20only.%0A%0A%60txpool_content%60%0AReturns%20the%20details%20of%20all%20transactions%20currently%20pending%20for%20inclusion%20in%20the%20next%20block(s)%2C%20as%20well%20as%20the%20ones%20that%20are%20being%20scheduled%20for%20future%20execution%20only.%0A%0A%23%23%23%23%23%20Otterscan%20Methods%0A%0AThe%20%60ots_*%60%20namespace%20implements%20the%20%5BOtterscan%20specification%5D(https%3A%2F%2Fdocs.otterscan.io%2Fapi-docs%2Fots-api).%0A%0A%60ots_getApiLevel%60%0AUsed%20by%20Otterscan%20to%20check%20if%20it%5C's%20connecting%20to%20a%20compatible%20node%20and%20display%20a%20friendly%20message%20if%20it%20is%20not.%0A%0A%60ots_getInternalOperations%60%0AReturns%20the%20internal%20ETH%20transfers%20inside%20a%20transaction.%0A%0A%60ots_hasCode%60%0ACheck%20if%20a%20certain%20address%20contains%20a%20deployed%20code.%0A%0A%60ots_getTransactionError%60%0AExtract%20the%20transaction%20raw%20error%20output.%0A%0A%60ots_traceTransaction%60%0AExtract%20all%20variations%20of%20calls%2C%20contract%20creation%20and%20self-destructs%20and%20returns%20a%20call%20tree.%0A%0A%60ots_getBlockDetails%60%0ATailor-made%20and%20expanded%20version%20of%20eth_getBlock%5C*%20for%20block%20details%20page%20in%20Otterscan.%0A%0A%60ots_getBlockTransactions%60%0AGet%20paginated%20transactions%20for%20a%20certain%20block%2C%20And%20removes%20some%20verbose%20fields%20such%20logs.%0A%0A%60ots_searchTransactionsBefore%60%0AGets%20paginated%20inbound%2Foutbound%20transaction%20calls%20for%20a%20certain%20address%2C%20and%20before%20a%20given%20target%20block.%0A%0A%60ots_searchTransactionsAfter%60%0AGets%20paginated%20inbound%2Foutbound%20transaction%20calls%20for%20a%20certain%20address%2C%20and%20after%20a%20given%20target%20block.%0A%0A%60ots_getTransactionBySenderAndNonce%60%0AGets%20the%20transaction%20hash%20for%20a%20certain%20sender%20address%2C%20given%20its%20nonce.%0A%0A%60ots_getContractCreator%60%0AGets%20the%20transaction%20hash%20and%20the%20address%20which%20created%20a%20contract.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20General%20Options%0A%0A%60-a%2C%20--accounts%20%3CACCOUNTS%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20number%20of%20accounts.%20%5Bdefault%3A%2010%5D%0A%0A%60--auto-impersonate%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Enable%20autoImpersonate%20on%20startup.%0A%0A%60-b%2C%20--block-time%20%3Cblock-time%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Block%20time%20in%20seconds%20for%20interval%20mining.%0A%0A%60--balance%20%3CBALANCE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20balance%20of%20the%20accounts.%20%5Bdefault%3A%2010000%5D%0A%0A%60--derivation-path%20%3CDERIVATION_PATH%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20derivation%20path%20of%20the%20child%20key%20to%20be%20derived.%20%5Bdefault%3A%20m%2F44'%2F60'%2F0'%2F0%2F%5D%0A%0A%60-h%2C%20--help%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Print%20help%20information.%0A%0A%60--hardfork%20%3CHARDFORK%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Choose%20the%20EVM%20hardfork%20to%20use%20e.g.%20%60prague%60%2C%20%60cancun%60%2C%20%60shanghai%60%2C%20%60paris%60%2C%20%60london%60%2C%20etc...%20%5Bdefault%3A%20latest%5D%0A%0A%60--init%20%3CPATH%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Initialize%20the%20genesis%20block%20with%20the%20given%20%60genesis.json%60%20file.%0A%0A%60-m%2C%20--mnemonic%20%3CMNEMONIC%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20BIP39%20mnemonic%20phrase%20used%20for%20generating%20accounts.%0A%0A%60--no-mining%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disable%20auto%20and%20interval%20mining%2C%20and%20mine%20on%20demand%20instead.%0A%0A%60--order%20%3CORDER%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20How%20transactions%20are%20sorted%20in%20the%20mempool.%20%5Bdefault%3A%20fees%5D%0A%0A%60-p%2C%20--port%20%3CPORT%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Port%20number%20to%20listen%20on.%20%5Bdefault%3A%208545%5D%0A%0A%60--steps-tracing%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Enable%20steps%20tracing%20used%20for%20debug%20calls%20returning%20geth-style%20traces.%20%5Baliases%3A%20tracing%5D%0A%0A%60--ipc%20%5B%3CPATH%3E%5D%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Starts%20an%20IPC%20endpoint%20at%20the%20given%20%60PATH%60%20argument%20or%20the%20default%20path%3A%20unix%3A%20%60tmp%2Fanvil.ipc%60%2C%20windows%3A%20%60%5C%5C.%5Cpipe%5Canvil.ipc%60.%0A%0A%60--silent%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Don't%20print%20anything%20on%20startup.%0A%0A%60--timestamp%20%3CTIMESTAMP%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20timestamp%20of%20the%20genesis%20block.%0A%0A%60-V%2C%20--version%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Print%20version%20information.%0A%0A%60--disable-default-create2-deployer%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disables%20deploying%20the%20default%20CREATE2%20factory%20when%20running%20Anvil%20without%20forking.%0A%0A%23%23%23%23%20EVM%20Options%0A%0A%60-f%2C%20--fork-url%20%3CURL%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Fetch%20state%20over%20a%20remote%20endpoint%20instead%20of%20starting%20from%20an%20empty%20state.%0A%0A%60--fork-block-number%20%3CBLOCK%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Fetch%20state%20from%20a%20specific%20block%20number%20over%20a%20remote%20endpoint%20(Must%20pass%20%60--fork-url%60%20in%20the%20same%20command-line).%0A%0A%60--fork-chain-id%20%3CCHAIN%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Specify%20chain%20id%20to%20skip%20fetching%20it%20from%20remote%20endpoint.%20This%20enables%20offline-start%20mode.%0AYou%20still%20must%20pass%20both%20%60--fork-url%60%20and%20%60--fork-block-number%60%2C%20and%20already%20have%20your%20required%20state%20cached%20on%20disk%2C%20anything%20missing%20locally%0Awould%20be%20fetched%20from%20the%20remote.%0A%0A%60--fork-retry-backoff%20%3CBACKOFF%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Initial%20retry%20backoff%20on%20encountering%20errors.%0A%0A%60--fork-transaction-hash%20%3CTRANSACTION%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Fetch%20state%20from%20a%20specific%20transaction%20hash%20over%20a%20remote%20endpoint%20(Must%20pass%20%60--fork-url%60%20in%20the%20same%20command-line).%0A%0A%60--retries%20%3Cretries%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Number%20of%20retry%20requests%20for%20spurious%20networks%20(timed%20out%20requests).%20%5Bdefault%3A%205%5D%0A%0A%60--timeout%20%3Ctimeout%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Timeout%20in%20ms%20for%20requests%20sent%20to%20remote%20JSON-RPC%20server%20in%20forking%20mode.%20%5Bdefault%3A%2045000%5D%0A%0A%60--compute-units-per-second%20%3CCUPS%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Sets%20the%20number%20of%20assumed%20available%20compute%20units%20per%20second%20for%20this%20provider.%20%5Bdefault%3A%20330%5D%0A%0A%60--no-rate-limit%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disables%20rate%20limiting%20for%20this%20node's%20provider.%20Will%20always%20override%20%60--compute-units-per-second%60%20if%20present.%20%5Bdefault%3A%20false%5D%0A%0A%60--no-storage-caching%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disables%20RPC%20caching%3B%20all%20storage%20slots%20are%20read%20from%20the%20endpoint.%20This%20flag%20overrides%20the%20project's%20configuration%20file%20(Must%20pass%20--fork-url%20in%20the%20same%20command-line).%0A%0A%23%23%23%23%20Executor%20Environment%20Config%0A%0A%60--base-fee%20%3CFEE%3E%60%0A%60--block-base-fee-per-gas%20%3CFEE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20base%20fee%20in%20a%20block.%0A%0A%60--chain-id%20%3CCHAIN_ID%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20chain%20ID.%20%5Bdefault%3A%2031337%5D%0A%0A%60--code-size-limit%20%3CCODE_SIZE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20EIP-170%3A%20Contract%20code%20size%20limit%20in%20bytes.%20Useful%20to%20increase%20for%20tests.%20%5Bdefault%3A%200x6000%20(~25kb)%5D%0A%0A%60--gas-limit%20%3CGAS_LIMIT%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20block%20gas%20limit.%0A%0A%60--gas-price%20%3CGAS_PRICE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20gas%20price.%0A%0A%23%23%23%23%20Server%20Options%0A%0A%60--allow-origin%20%3Callow-origin%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20CORS%20%60allow_origin%60.%20%5Bdefault%3A%20*%5D%0A%0A%60--no-cors%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disable%20CORS.%0A%0A%60--host%20%3CHOST%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20IP%20address%20the%20server%20will%20listen%20on.%0A%0A%60--config-out%20%3COUT_FILE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Writes%20output%20of%20%60anvil%60%20as%20json%20to%20user-specified%20file.%0A%0A%60--prune-history%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Don't%20keep%20full%20chain%20history.%0A%0A%60--no-request-size-limit%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disable%20the%20request%20size%20limit.%20Default%20is%202MB%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Set%20the%20number%20of%20accounts%20to%2015%20and%20their%20balance%20to%20300%20ETH%0A%0A%60%60%60sh%0Aanvil%20--accounts%2015%20--balance%20300%0A%60%60%60%0A%0A2.%20Choose%20the%20address%20which%20will%20execute%20the%20tests%0A%0A%60%60%60sh%0Aanvil%20--sender%200xC8479C45EE87E0B437c09d3b8FE8ED14ccDa825E%0A%60%60%60%0A%0A3.%20Change%20how%20transactions%20are%20sorted%20in%20the%20mempool%20to%20FIFO%0A%0A%60%60%60sh%0Aanvil%20--order%20fifo%0A%60%60%60%0A%0A%23%23%23%20Shell%20Completions%0A%0A%60anvil%20completions%60%20_shell_%0A%0AGenerates%20a%20shell%20completions%20script%20for%20the%20given%20shell.%0A%0ASupported%20shells%20are%3A%0A%0A-%20bash%0A-%20elvish%0A-%20fish%0A-%20powershell%0A-%20zsh%0A%0A%23%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20shell%20completions%20script%20for%20zsh%3A%0A%20%20%20%60%60%60sh%0A%20%20%20anvil%20completions%20zsh%20%3E%20%24HOME%2F.oh-my-zsh%2Fcompletions%2F_anvil%0A%20%20%20%60%60%60%0A%0A%23%23%23%20Usage%20within%20Docker%0A%0AIn%20order%20to%20run%20anvil%20as%20a%20service%20in%20Github%20Actions%20with%20the%20%5BDocker%20container%5D(%2Fguides%2Ffoundry-in-docker)%2C%20where%20passing%20arguments%20to%20the%20entrypoint%20command%20is%20not%20possible%2C%20use%20the%20%60ANVIL_IP_ADDR%60%20environment%20variable%20to%20set%20the%20host's%20IP.%20%60ANVIL_IP_ADDR%3D0.0.0.0%60%20is%20equivalent%20to%20providing%20the%20%60--host%20%3Cip%3E%60%20option.%0A%0A%23%23%23%23%20Using%20%60genesis.json%60%0A%0AThe%20%60genesis.json%60%20file%20in%20Anvil%20serves%20a%20similar%20purpose%20as%20in%20Geth%2C%20defining%20the%20network's%20initial%20state%2C%20consensus%20rules%2C%20and%20preallocated%20accounts%20to%20ensure%20all%20nodes%20start%20consistently%20and%20maintain%20network%20integrity.%20All%20values%2C%20including%20balance%2C%20gas%20limit%20and%20such%2C%20are%20to%20be%20defined%20as%20hexadecimals.%0A%0A-%20%60chainId%60%3A%20Identifier%20for%20the%20blockchain%2C%20unique%20to%20each%20network.%0A-%20%60nonce%60%3A%20A%20counter%20used%20in%20hashing%20algorithms%20to%20ensure%20data%20integrity.%0A-%20%60timestamp%60%3A%20The%20creation%20time%20of%20the%20genesis%20block%20in%20Unix%20time.%0A-%20%60extraData%60%3A%20Additional%20data%20that%20can%20be%20included%20by%20the%20creator%20of%20the%20genesis%20block.%0A-%20%60gasLimit%60%3A%20The%20maximum%20amount%20of%20gas%20that%20can%20be%20used%20in%20the%20block.%0A-%20%60difficulty%60%3A%20A%20measure%20of%20how%20difficult%20it%20is%20to%20mine%20a%20new%20block.%0A-%20%60mixHash%60%3A%20A%20unique%20identifier%20proving%20a%20sufficient%20amount%20of%20computation%20for%20the%20block.%0A-%20%60coinbase%60%3A%20The%20Ethereum%20address%20of%20the%20miner%20who%20mined%20this%20block.%0A-%20%60stateRoot%60%3A%20The%20root%20of%20the%20state%20trie%2C%20reflecting%20the%20final%20state%20after%20all%20transactions.%0A-%20%60alloc%60%3A%20Allows%20pre-allocating%20Ether%20to%20a%20set%20of%20addresses%20with%20predefined%20balances.%0A-%20%60number%60%3A%20The%20block%20number%2C%20with%20the%20genesis%20block%20being%200.%0A-%20%60gasUsed%60%3A%20The%20total%20gas%20used%20in%20the%20block.%0A-%20%60parentHash%60%3A%20The%20hash%20of%20the%20parent%20block%2C%20all%20zeros%20for%20the%20genesis%20block%20since%20there%20is%20no%20parent.%0A%0AA%20sample%20for%20simulating%20mainnet%20via%20genesis%20can%20be%20found%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Fparadigmxyz%2Freth%2Fblob%2F8f3e4a15738d8174d41f4aede5570ecead141a77%2Fcrates%2Fprimitives%2Fres%2Fgenesis%2Fmainnet.json).%0A%0A%60%60%60json%0A%7B%0A%20%20%22chainId%22%3A%20%220x2323%22%2C%0A%20%20%22nonce%22%3A%20%220x42%22%2C%0A%20%20%22timestamp%22%3A%20%220x0%22%2C%0A%20%20%22extraData%22%3A%20%220x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa%22%2C%0A%20%20%22gasLimit%22%3A%20%220x1388%22%2C%0A%20%20%22difficulty%22%3A%20%220x400000000%22%2C%0A%20%20%22mixHash%22%3A%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%2C%0A%20%20%22coinbase%22%3A%20%220x0000000000000000000000000000000000000000%22%2C%0A%20%20%22stateRoot%22%3A%20%220xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544%22%2C%0A%20%20%22alloc%22%3A%20%7B%0A%20%20%20%20%22000d836201318ec6899a67540690382780743280%22%3A%20%7B%0A%20%20%20%20%20%20%22balance%22%3A%20%220xad78ebc5ac6200000%22%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%22number%22%3A%20%220x0%22%2C%0A%20%20%22gasUsed%22%3A%20%220x0%22%2C%0A%20%20%22parentHash%22%3A%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./reference-DjWd1X7B.js"),__vite__mapDeps([3,1])),path:"/anvil/reference.html",type:"mdx",filePath:"anvil/reference.md",content:"%23%23%20anvil%0A%0A%23%23%23%20NAME%0A%0Aanvil%20-%20Create%20a%20local%20testnet%20node%20for%20deploying%20and%20testing%20smart%20contracts.%20It%20can%20also%20be%20used%20to%20fork%20other%20EVM%20compatible%20networks.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60anvil%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20local%20testnet%20node%20for%20deploying%20and%20testing%20smart%20contracts.%20It%20can%20also%20be%20used%20to%20fork%20other%20EVM%20compatible%20networks.%0A%0AThis%20section%20covers%20an%20extensive%20list%20of%20information%20about%20Mining%20Modes%2C%20Supported%20Transport%20Layers%2C%20Supported%20RPC%20Methods%2C%20Anvil%20flags%20and%20their%20usages.%20You%20can%20run%20multiple%20flags%20at%20the%20same%20time.%0A%0A%23%23%23%23%20Mining%20Modes%0A%0AMining%20modes%20refer%20to%20how%20frequent%20blocks%20are%20mined%20using%20Anvil.%20By%20default%2C%20it%20automatically%20generates%20a%20new%20block%20as%20soon%20as%20a%20transaction%20is%20submitted.%0A%0AYou%20can%20change%20this%20setting%20to%20interval%20mining%20if%20you%20will%2C%20which%20means%20that%20a%20new%20block%20will%20be%20generated%20in%20a%20given%20period%20of%20time%20selected%20by%20the%20user.%20If%20you%20want%20to%20go%20for%20this%20type%20of%20mining%2C%20you%20can%20do%20it%20by%20adding%20the%20%60--block-time%20%3Cblock-time-in-seconds%3E%60%20flag%2C%20like%20in%20the%20following%20example.%0A%0A%60%60%60sh%0A%23%20Produces%20a%20new%20block%20every%2010%20seconds%0Aanvil%20--block-time%2010%0A%60%60%60%0A%0AThere's%20also%20a%20third%20mining%20mode%20called%20never.%20In%20this%20case%2C%20it%20disables%20auto%20and%20interval%20mining%2C%20and%20mine%20on%20demand%20instead.%20You%20can%20do%20this%20by%20typing%3A%0A%0A%60%60%60sh%0A%23%20Enables%20never%20mining%20mode%0Aanvil%20--no-mining%0A%60%60%60%0A%0ATo%20speed%20up%20the%20finalization%20of%20blocks%2C%20you%20can%20use%20the%20%60--slots-in-an-epoch%60%20flag%20with%20a%20value%20of%20%601%60%20for%20example.%20This%20will%20lead%20to%20the%20block%20at%20height%20%60N-2%60%20being%20finalized%2C%20where%20%60N%60%20is%20the%20latest%20block.%0A%0A%23%23%23%23%20Supported%20Transport%20Layers%0A%0AHTTP%20and%20Websocket%20connections%20are%20supported.%20The%20server%20listens%20on%20port%208545%20by%20default%2C%20but%20it%20can%20be%20changed%20by%20running%20the%20following%20command%3A%0A%0A%60%60%60sh%0Aanvil%20--port%20%3CPORT%3E%0A%60%60%60%0A%0A%23%23%23%23%20Default%20CREATE2%20Deployer%0A%0AAnvil%2C%20when%20used%20without%20forking%2C%20includes%20the%20%5Bdefault%20CREATE2%20deployer%20proxy%5D(https%3A%2F%2Fgithub.com%2FArachnid%2Fdeterministic-deployment-proxy)%20at%20the%20address%20%600x4e59b44847b379578588920ca78fbf26c0b4956c%60.%0A%0AThis%20allows%20you%20to%20test%20CREATE2%20deployments%20locally%20without%20forking.%0A%0A%23%23%23%23%20Supported%20RPC%20Methods%0A%0A%23%23%23%23%23%20Standard%20Methods%0A%0AThe%20standard%20methods%20are%20based%20on%20%5Bthis%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fapis%2Fjson-rpc%2F)%20reference.%0A%0A-%20%60web3_clientVersion%60%0A%0A-%20%60web3_sha3%60%0A%0A-%20%60eth_chainId%60%0A%0A-%20%60eth_networkId%60%0A%0A-%20%60eth_gasPrice%60%0A%0A-%20%60eth_accounts%60%0A%0A-%20%60eth_blockNumber%60%0A%0A-%20%60eth_getBalance%60%0A%0A-%20%60eth_getStorageAt%60%0A%0A-%20%60eth_getBlockByHash%60%0A%0A-%20%60eth_getBlockByNumber%60%0A%0A-%20%60eth_getTransactionCount%60%0A%0A-%20%60eth_getBlockTransactionCountByHash%60%0A%0A-%20%60eth_getBlockTransactionCountByNumber%60%0A%0A-%20%60eth_getUncleCountByBlockHash%60%0A%0A-%20%60eth_getUncleCountByBlockNumber%60%0A%0A-%20%60eth_getCode%60%0A%0A-%20%60eth_sign%60%0A%0A-%20%60eth_signTypedData_v4%60%0A%0A-%20%60eth_sendTransaction%60%0A%0A-%20%60eth_sendRawTransaction%60%0A%0A-%20%60eth_call%60%0A%0A-%20%60eth_createAccessList%60%0A%0A-%20%60eth_estimateGas%60%0A%0A-%20%60eth_getTransactionByHash%60%0A%0A-%20%60eth_getTransactionByBlockHashAndIndex%60%0A%0A-%20%60eth_getTransactionByBlockNumberAndIndex%60%0A%0A-%20%60eth_getTransactionReceipt%60%0A%0A-%20%60eth_getUncleByBlockHashAndIndex%60%0A%0A-%20%60eth_getUncleByBlockNumberAndIndex%60%0A%0A-%20%60eth_getLogs%60%0A%0A-%20%60eth_newFilter%60%0A%0A-%20%60eth_getFilterChanges%60%0A%0A-%20%60eth_newBlockFilter%60%0A%0A-%20%60eth_newPendingTransactionFilter%60%0A%0A-%20%60eth_getFilterLogs%60%0A%0A-%20%60eth_uninstallFilter%60%0A%0A-%20%60eth_getWork%60%0A%0A-%20%60eth_subscribe%60%0A%0A-%20%60eth_unsubscribe%60%0A%0A-%20%60eth_syncing%60%0A%0A-%20%60eth_submitWork%60%0A%0A-%20%60eth_submitHashrate%60%0A%0A-%20%60eth_feeHistory%60%0A%0A-%20%60eth_getProof%60%0A%0A-%20%60debug_traceTransaction%60%0A%20%20Use%20%60anvil%20--steps-tracing%60%20to%20get%20%60structLogs%60%0A%0A-%20%60debug_traceCall%60%0A%20%20Note%20that%20non-standard%20traces%20are%20not%20yet%20supported.%20This%20means%20you%20can't%20pass%20any%20arguments%20to%20the%20%60trace%60%20parameter.%0A%0A-%20%60trace_transaction%60%0A%0A-%20%60trace_block%60%0A%0A%23%23%23%23%23%20Custom%20Methods%0A%0AThe%20%60anvil_*%60%20namespace%20is%20an%20alias%20for%20%60hardhat%60.%20For%20more%20info%2C%20refer%20to%20the%20%5BHardhat%20documentation%5D(https%3A%2F%2Fhardhat.org%2Fhardhat-network%2Freference%23hardhat-network-methods).%0A%0A%60anvil_impersonateAccount%60%0ASend%20transactions%20impersonating%20an%20externally%20owned%20account%20or%20contract.%0A%0A%60anvil_stopImpersonatingAccount%60%0AStops%20impersonating%20an%20account%20or%20contract%20if%20previously%20set%20with%20%60anvil_impersonateAccount%60.%0A%0A%60anvil_autoImpersonateAccount%60%0AAccepts%20%60true%60%20to%20enable%20auto%20impersonation%20of%20accounts%2C%20and%20%60false%60%20to%20disable%20it.%20When%20enabled%2C%20any%20transaction's%20sender%20will%20be%20automatically%20impersonated.%20Same%20as%20%60anvil_impersonateAccount%60.%0A%0A%60anvil_getAutomine%60%0AReturns%20true%20if%20automatic%20mining%20is%20enabled%2C%20and%20false%20if%20it%20is%20not.%0A%0A%60anvil_mine%60%0AMines%20a%20series%20of%20blocks.%0A%0A%60anvil_dropTransaction%60%0ARemoves%20transactions%20from%20the%20pool.%0A%0A%60anvil_reset%60%0AReset%20the%20fork%20to%20a%20fresh%20forked%20state%2C%20and%20optionally%20update%20the%20fork%20config.%0A%0A%60anvil_setRpcUrl%60%0ASets%20the%20backend%20RPC%20URL.%0A%0A%60anvil_setBalance%60%0AModifies%20the%20balance%20of%20an%20account.%0A%0A%60anvil_setCode%60%0ASets%20the%20code%20of%20a%20contract.%0A%0A%60anvil_setNonce%60%0ASets%20the%20nonce%20of%20an%20address.%0A%0A%60anvil_setStorageAt%60%0AWrites%20a%20single%20slot%20of%20the%20account's%20storage.%0A%0A%60anvil_setCoinbase%60%0ASets%20the%20coinbase%20address.%0A%0A%60anvil_setLoggingEnabled%60%0AEnable%20or%20disable%20logging.%0A%0A%60anvil_setMinGasPrice%60%0ASet%20the%20minimum%20gas%20price%20for%20the%20node.%0A%0A%60anvil_setNextBlockBaseFeePerGas%60%0ASets%20the%20base%20fee%20of%20the%20next%20block.%0A%0A%60anvil_setChainId%60%0ASets%20the%20chain%20ID%20of%20the%20current%20EVM%20instance.%0A%0A%60anvil_dumpState%60%0AReturns%20a%20hex%20string%20representing%20the%20complete%20state%20of%20the%20chain.%20Can%20be%20re-imported%20into%20a%20fresh%2Frestarted%20instance%20of%20Anvil%20to%20reattain%20the%20same%20state.%0A%0A%60anvil_loadState%60%0AWhen%20given%20a%20hex%20string%20previously%20returned%20by%20%60anvil_dumpState%60%2C%20merges%20the%20contents%20into%20the%20current%20chain%20state.%20Will%20overwrite%20any%20colliding%20accounts%2Fstorage%20slots.%0A%0A%60anvil_nodeInfo%60%0ARetrieves%20the%20configuration%20params%20for%20the%20currently%20running%20Anvil%20node.%0A%0A%23%23%23%23%23%20Special%20Methods%0A%0AThe%20special%20methods%20come%20from%20Ganache.%20You%20can%20take%20a%20look%20at%20the%20documentation%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Ftrufflesuite%2Fganache-cli-archive%2Fblob%2Fmaster%2FREADME.md).%0A%0A%60evm_setAutomine%60%0AEnables%20or%20disables%2C%20based%20on%20the%20single%20boolean%20argument%2C%20the%20automatic%20mining%20of%20new%20blocks%20with%20each%20new%20transaction%20submitted%20to%20the%20network.%0A%0A%60evm_setIntervalMining%60%0ASets%20the%20mining%20behavior%20to%20interval%20with%20the%20given%20interval%20(seconds).%0A%0A%60evm_snapshot%60%0ASnapshot%20the%20state%20of%20the%20blockchain%20at%20the%20current%20block.%0A%0A%60evm_revert%60%0ARevert%20the%20state%20of%20the%20blockchain%20to%20a%20previous%20snapshot.%20Takes%20a%20single%20parameter%2C%20which%20is%20the%20snapshot%20id%20to%20revert%20to.%0A%0A%60evm_increaseTime%60%0AJump%20forward%20in%20time%20by%20the%20given%20amount%20of%20time%2C%20in%20seconds.%0A%0A%60evm_setNextBlockTimestamp%60%0ASimilar%20to%20%60evm_increaseTime%60%20but%20takes%20the%20exact%20timestamp%20that%20you%20want%20in%20the%20next%20block.%0A%0A%60anvil_setBlockTimestampInterval%60%0ASimilar%20to%20%60evm_increaseTime%60%20but%20sets%20a%20block%20timestamp%20%60interval%60.%20The%20timestamp%20of%20the%20next%20block%20will%20be%20computed%20as%20%60lastBlock_timestamp%20%2B%20interval%60.%0A%0A%60evm_setBlockGasLimit%60%0ASets%20the%20block%20gas%20limit%20for%20the%20following%20blocks.%0A%0A%60anvil_removeBlockTimestampInterval%60%0ARemoves%20an%20%60anvil_setBlockTimestampInterval%60%20if%20it%20exists.%0A%0A%60evm_mine%60%0AMine%20a%20single%20block.%0A%0A%60anvil_enableTraces%60%0ATurn%20on%20call%20traces%20for%20transactions%20that%20are%20returned%20to%20the%20user%20when%20they%20execute%20a%20transaction%20(instead%20of%20just%20txhash%2Freceipt).%0A%0A%60eth_sendUnsignedTransaction%60%0AExecute%20a%20transaction%20regardless%20of%20signature%20status.%0A%0AFor%20the%20next%20three%20methods%2C%20make%20sure%20to%20read%20%5BGeth's%20documentation%5D(https%3A%2F%2Fgeth.ethereum.org%2Fdocs%2Frpc%2Fns-txpool).%0A%0A%60txpool_status%60%0AReturns%20the%20number%20of%20transactions%20currently%20pending%20for%20inclusion%20in%20the%20next%20block(s)%2C%20as%20well%20as%20the%20ones%20that%20are%20being%20scheduled%20for%20future%20execution%20only.%0A%0A%60txpool_inspect%60%0AReturns%20a%20summary%20of%20all%20the%20transactions%20currently%20pending%20for%20inclusion%20in%20the%20next%20block(s)%2C%20as%20well%20as%20the%20ones%20that%20are%20being%20scheduled%20for%20future%20execution%20only.%0A%0A%60txpool_content%60%0AReturns%20the%20details%20of%20all%20transactions%20currently%20pending%20for%20inclusion%20in%20the%20next%20block(s)%2C%20as%20well%20as%20the%20ones%20that%20are%20being%20scheduled%20for%20future%20execution%20only.%0A%0A%23%23%23%23%23%20Otterscan%20Methods%0A%0AThe%20%60ots_*%60%20namespace%20implements%20the%20%5BOtterscan%20specification%5D(https%3A%2F%2Fdocs.otterscan.io%2Fapi-docs%2Fots-api).%0A%0A%60ots_getApiLevel%60%0AUsed%20by%20Otterscan%20to%20check%20if%20it%5C's%20connecting%20to%20a%20compatible%20node%20and%20display%20a%20friendly%20message%20if%20it%20is%20not.%0A%0A%60ots_getInternalOperations%60%0AReturns%20the%20internal%20ETH%20transfers%20inside%20a%20transaction.%0A%0A%60ots_hasCode%60%0ACheck%20if%20a%20certain%20address%20contains%20a%20deployed%20code.%0A%0A%60ots_getTransactionError%60%0AExtract%20the%20transaction%20raw%20error%20output.%0A%0A%60ots_traceTransaction%60%0AExtract%20all%20variations%20of%20calls%2C%20contract%20creation%20and%20self-destructs%20and%20returns%20a%20call%20tree.%0A%0A%60ots_getBlockDetails%60%0ATailor-made%20and%20expanded%20version%20of%20eth_getBlock%5C*%20for%20block%20details%20page%20in%20Otterscan.%0A%0A%60ots_getBlockTransactions%60%0AGet%20paginated%20transactions%20for%20a%20certain%20block%2C%20And%20removes%20some%20verbose%20fields%20such%20logs.%0A%0A%60ots_searchTransactionsBefore%60%0AGets%20paginated%20inbound%2Foutbound%20transaction%20calls%20for%20a%20certain%20address%2C%20and%20before%20a%20given%20target%20block.%0A%0A%60ots_searchTransactionsAfter%60%0AGets%20paginated%20inbound%2Foutbound%20transaction%20calls%20for%20a%20certain%20address%2C%20and%20after%20a%20given%20target%20block.%0A%0A%60ots_getTransactionBySenderAndNonce%60%0AGets%20the%20transaction%20hash%20for%20a%20certain%20sender%20address%2C%20given%20its%20nonce.%0A%0A%60ots_getContractCreator%60%0AGets%20the%20transaction%20hash%20and%20the%20address%20which%20created%20a%20contract.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20General%20Options%0A%0A%60-a%2C%20--accounts%20%3CACCOUNTS%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20number%20of%20accounts.%20%5Bdefault%3A%2010%5D%0A%0A%60--auto-impersonate%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Enable%20autoImpersonate%20on%20startup.%0A%0A%60-b%2C%20--block-time%20%3Cblock-time%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Block%20time%20in%20seconds%20for%20interval%20mining.%0A%0A%60--balance%20%3CBALANCE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20balance%20of%20the%20accounts.%20%5Bdefault%3A%2010000%5D%0A%0A%60--derivation-path%20%3CDERIVATION_PATH%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20derivation%20path%20of%20the%20child%20key%20to%20be%20derived.%20%5Bdefault%3A%20m%2F44'%2F60'%2F0'%2F0%2F%5D%0A%0A%60-h%2C%20--help%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Print%20help%20information.%0A%0A%60--hardfork%20%3CHARDFORK%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Choose%20the%20EVM%20hardfork%20to%20use%20e.g.%20%60prague%60%2C%20%60cancun%60%2C%20%60shanghai%60%2C%20%60paris%60%2C%20%60london%60%2C%20etc...%20%5Bdefault%3A%20latest%5D%0A%0A%60--init%20%3CPATH%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Initialize%20the%20genesis%20block%20with%20the%20given%20%60genesis.json%60%20file.%0A%0A%60-m%2C%20--mnemonic%20%3CMNEMONIC%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20BIP39%20mnemonic%20phrase%20used%20for%20generating%20accounts.%0A%0A%60--no-mining%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disable%20auto%20and%20interval%20mining%2C%20and%20mine%20on%20demand%20instead.%0A%0A%60--order%20%3CORDER%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20How%20transactions%20are%20sorted%20in%20the%20mempool.%20%5Bdefault%3A%20fees%5D%0A%0A%60-p%2C%20--port%20%3CPORT%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Port%20number%20to%20listen%20on.%20%5Bdefault%3A%208545%5D%0A%0A%60--steps-tracing%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Enable%20steps%20tracing%20used%20for%20debug%20calls%20returning%20geth-style%20traces.%20%5Baliases%3A%20tracing%5D%0A%0A%60--ipc%20%5B%3CPATH%3E%5D%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Starts%20an%20IPC%20endpoint%20at%20the%20given%20%60PATH%60%20argument%20or%20the%20default%20path%3A%20unix%3A%20%60tmp%2Fanvil.ipc%60%2C%20windows%3A%20%60%5C%5C.%5Cpipe%5Canvil.ipc%60.%0A%0A%60--silent%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Don't%20print%20anything%20on%20startup.%0A%0A%60--timestamp%20%3CTIMESTAMP%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20timestamp%20of%20the%20genesis%20block.%0A%0A%60-V%2C%20--version%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Print%20version%20information.%0A%0A%60--disable-default-create2-deployer%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disables%20deploying%20the%20default%20CREATE2%20factory%20when%20running%20Anvil%20without%20forking.%0A%0A%23%23%23%23%20EVM%20Options%0A%0A%60-f%2C%20--fork-url%20%3CURL%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Fetch%20state%20over%20a%20remote%20endpoint%20instead%20of%20starting%20from%20an%20empty%20state.%0A%0A%60--fork-block-number%20%3CBLOCK%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Fetch%20state%20from%20a%20specific%20block%20number%20over%20a%20remote%20endpoint%20(Must%20pass%20%60--fork-url%60%20in%20the%20same%20command-line).%0A%0A%60--fork-chain-id%20%3CCHAIN%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Specify%20chain%20id%20to%20skip%20fetching%20it%20from%20remote%20endpoint.%20This%20enables%20offline-start%20mode.%0AYou%20still%20must%20pass%20both%20%60--fork-url%60%20and%20%60--fork-block-number%60%2C%20and%20already%20have%20your%20required%20state%20cached%20on%20disk%2C%20anything%20missing%20locally%0Awould%20be%20fetched%20from%20the%20remote.%0A%0A%60--fork-retry-backoff%20%3CBACKOFF%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Initial%20retry%20backoff%20on%20encountering%20errors.%0A%0A%60--fork-transaction-hash%20%3CTRANSACTION%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Fetch%20state%20from%20a%20specific%20transaction%20hash%20over%20a%20remote%20endpoint%20(Must%20pass%20%60--fork-url%60%20in%20the%20same%20command-line).%0A%0A%60--retries%20%3Cretries%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Number%20of%20retry%20requests%20for%20spurious%20networks%20(timed%20out%20requests).%20%5Bdefault%3A%205%5D%0A%0A%60--timeout%20%3Ctimeout%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Timeout%20in%20ms%20for%20requests%20sent%20to%20remote%20JSON-RPC%20server%20in%20forking%20mode.%20%5Bdefault%3A%2045000%5D%0A%0A%60--compute-units-per-second%20%3CCUPS%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Sets%20the%20number%20of%20assumed%20available%20compute%20units%20per%20second%20for%20this%20provider.%20%5Bdefault%3A%20330%5D%0A%0A%60--no-rate-limit%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disables%20rate%20limiting%20for%20this%20node's%20provider.%20Will%20always%20override%20%60--compute-units-per-second%60%20if%20present.%20%5Bdefault%3A%20false%5D%0A%0A%60--no-storage-caching%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disables%20RPC%20caching%3B%20all%20storage%20slots%20are%20read%20from%20the%20endpoint.%20This%20flag%20overrides%20the%20project's%20configuration%20file%20(Must%20pass%20--fork-url%20in%20the%20same%20command-line).%0A%0A%23%23%23%23%20Executor%20Environment%20Config%0A%0A%60--base-fee%20%3CFEE%3E%60%0A%60--block-base-fee-per-gas%20%3CFEE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20base%20fee%20in%20a%20block.%0A%0A%60--chain-id%20%3CCHAIN_ID%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20chain%20ID.%20%5Bdefault%3A%2031337%5D%0A%0A%60--code-size-limit%20%3CCODE_SIZE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20EIP-170%3A%20Contract%20code%20size%20limit%20in%20bytes.%20Useful%20to%20increase%20for%20tests.%20%5Bdefault%3A%200x6000%20(~25kb)%5D%0A%0A%60--gas-limit%20%3CGAS_LIMIT%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20block%20gas%20limit.%0A%0A%60--gas-price%20%3CGAS_PRICE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20gas%20price.%0A%0A%23%23%23%23%20Server%20Options%0A%0A%60--allow-origin%20%3Callow-origin%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Set%20the%20CORS%20%60allow_origin%60.%20%5Bdefault%3A%20*%5D%0A%0A%60--no-cors%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disable%20CORS.%0A%0A%60--host%20%3CHOST%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20IP%20address%20the%20server%20will%20listen%20on.%0A%0A%60--config-out%20%3COUT_FILE%3E%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Writes%20output%20of%20%60anvil%60%20as%20json%20to%20user-specified%20file.%0A%0A%60--prune-history%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Don't%20keep%20full%20chain%20history.%0A%0A%60--no-request-size-limit%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Disable%20the%20request%20size%20limit.%20Default%20is%202MB%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Set%20the%20number%20of%20accounts%20to%2015%20and%20their%20balance%20to%20300%20ETH%0A%0A%60%60%60sh%0Aanvil%20--accounts%2015%20--balance%20300%0A%60%60%60%0A%0A2.%20Choose%20the%20address%20which%20will%20execute%20the%20tests%0A%0A%60%60%60sh%0Aanvil%20--sender%200xC8479C45EE87E0B437c09d3b8FE8ED14ccDa825E%0A%60%60%60%0A%0A3.%20Change%20how%20transactions%20are%20sorted%20in%20the%20mempool%20to%20FIFO%0A%0A%60%60%60sh%0Aanvil%20--order%20fifo%0A%60%60%60%0A%0A%23%23%23%20Shell%20Completions%0A%0A%60anvil%20completions%60%20_shell_%0A%0AGenerates%20a%20shell%20completions%20script%20for%20the%20given%20shell.%0A%0ASupported%20shells%20are%3A%0A%0A-%20bash%0A-%20elvish%0A-%20fish%0A-%20powershell%0A-%20zsh%0A%0A%23%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20shell%20completions%20script%20for%20zsh%3A%0A%20%20%20%60%60%60sh%0A%20%20%20anvil%20completions%20zsh%20%3E%20%24HOME%2F.oh-my-zsh%2Fcompletions%2F_anvil%0A%20%20%20%60%60%60%0A%0A%23%23%23%20Usage%20within%20Docker%0A%0AIn%20order%20to%20run%20anvil%20as%20a%20service%20in%20Github%20Actions%20with%20the%20%5BDocker%20container%5D(%2Fguides%2Ffoundry-in-docker)%2C%20where%20passing%20arguments%20to%20the%20entrypoint%20command%20is%20not%20possible%2C%20use%20the%20%60ANVIL_IP_ADDR%60%20environment%20variable%20to%20set%20the%20host's%20IP.%20%60ANVIL_IP_ADDR%3D0.0.0.0%60%20is%20equivalent%20to%20providing%20the%20%60--host%20%3Cip%3E%60%20option.%0A%0A%23%23%23%23%20Using%20%60genesis.json%60%0A%0AThe%20%60genesis.json%60%20file%20in%20Anvil%20serves%20a%20similar%20purpose%20as%20in%20Geth%2C%20defining%20the%20network's%20initial%20state%2C%20consensus%20rules%2C%20and%20preallocated%20accounts%20to%20ensure%20all%20nodes%20start%20consistently%20and%20maintain%20network%20integrity.%20All%20values%2C%20including%20balance%2C%20gas%20limit%20and%20such%2C%20are%20to%20be%20defined%20as%20hexadecimals.%0A%0A-%20%60chainId%60%3A%20Identifier%20for%20the%20blockchain%2C%20unique%20to%20each%20network.%0A-%20%60nonce%60%3A%20A%20counter%20used%20in%20hashing%20algorithms%20to%20ensure%20data%20integrity.%0A-%20%60timestamp%60%3A%20The%20creation%20time%20of%20the%20genesis%20block%20in%20Unix%20time.%0A-%20%60extraData%60%3A%20Additional%20data%20that%20can%20be%20included%20by%20the%20creator%20of%20the%20genesis%20block.%0A-%20%60gasLimit%60%3A%20The%20maximum%20amount%20of%20gas%20that%20can%20be%20used%20in%20the%20block.%0A-%20%60difficulty%60%3A%20A%20measure%20of%20how%20difficult%20it%20is%20to%20mine%20a%20new%20block.%0A-%20%60mixHash%60%3A%20A%20unique%20identifier%20proving%20a%20sufficient%20amount%20of%20computation%20for%20the%20block.%0A-%20%60coinbase%60%3A%20The%20Ethereum%20address%20of%20the%20miner%20who%20mined%20this%20block.%0A-%20%60stateRoot%60%3A%20The%20root%20of%20the%20state%20trie%2C%20reflecting%20the%20final%20state%20after%20all%20transactions.%0A-%20%60alloc%60%3A%20Allows%20pre-allocating%20Ether%20to%20a%20set%20of%20addresses%20with%20predefined%20balances.%0A-%20%60number%60%3A%20The%20block%20number%2C%20with%20the%20genesis%20block%20being%200.%0A-%20%60gasUsed%60%3A%20The%20total%20gas%20used%20in%20the%20block.%0A-%20%60parentHash%60%3A%20The%20hash%20of%20the%20parent%20block%2C%20all%20zeros%20for%20the%20genesis%20block%20since%20there%20is%20no%20parent.%0A%0AA%20sample%20for%20simulating%20mainnet%20via%20genesis%20can%20be%20found%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Fparadigmxyz%2Freth%2Fblob%2F8f3e4a15738d8174d41f4aede5570ecead141a77%2Fcrates%2Fprimitives%2Fres%2Fgenesis%2Fmainnet.json).%0A%0A%60%60%60json%0A%7B%0A%20%20%22chainId%22%3A%20%220x2323%22%2C%0A%20%20%22nonce%22%3A%20%220x42%22%2C%0A%20%20%22timestamp%22%3A%20%220x0%22%2C%0A%20%20%22extraData%22%3A%20%220x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa%22%2C%0A%20%20%22gasLimit%22%3A%20%220x1388%22%2C%0A%20%20%22difficulty%22%3A%20%220x400000000%22%2C%0A%20%20%22mixHash%22%3A%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%2C%0A%20%20%22coinbase%22%3A%20%220x0000000000000000000000000000000000000000%22%2C%0A%20%20%22stateRoot%22%3A%20%220xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544%22%2C%0A%20%20%22alloc%22%3A%20%7B%0A%20%20%20%20%22000d836201318ec6899a67540690382780743280%22%3A%20%7B%0A%20%20%20%20%20%20%22balance%22%3A%20%220xad78ebc5ac6200000%22%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%22number%22%3A%20%220x0%22%2C%0A%20%20%22gasUsed%22%3A%20%220x0%22%2C%0A%20%20%22parentHash%22%3A%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BpbU4GMD.js"),__vite__mapDeps([4,1])),path:"/cast/overview",type:"mdx",filePath:"cast/overview.md",content:"---%0Adescription%3A%20Cast%20is%20a%20Swiss%20Army%20knife%20for%20interacting%20with%20Ethereum%20from%20the%20command%20line%20-%20send%20transactions%2C%20call%20contracts%2C%20and%20retrieve%20chain%20data.%0A---%0A%0A%23%23%20Cast%0A%0ACast%20is%20a%20Swiss%20Army%20knife%20for%20interacting%20with%20Ethereum%20applications%20from%20the%20command%20line.%20You%20can%20make%20smart%20contract%20calls%2C%20send%20transactions%2C%20or%20retrieve%20any%20type%20of%20chain%20data%20-%20all%20from%20your%20command-line!%0A%0AThe%20%60cast%60%20binary%20can%20be%20used%20both%20within%20and%20outside%20of%20a%20Foundry%20project.%0A%0ACast%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60forge%60%2C%20%60chisel%60%2C%20and%20%60anvil%60.%20If%20you%20haven't%20installed%20Foundry%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0A%0A%23%23%23%20Getting%20started%0A%0AHere%20are%20a%20few%20examples%20of%20what%20you%20can%20do%3A%0A%0A**Check%20the%20latest%20block%20on%20Ethereum%20Mainnet**%3A%0A%0A%60%60%60sh%0Acast%20block-number%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A**Check%20the%20Ether%20balance%20of%20%60vitalik.eth%60**%0A%0A%60%60%60sh%0Acast%20balance%20vitalik.eth%20--ether%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A**Replay%20and%20trace%20a%20transaction**%0A%0A%60%60%60sh%0Acast%20run%200x9c32042f5e997e27e67f82583839548eb19dc78c4769ad6218657c17f2a5ed31%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0AOptionally%2C%20pass%20%60--etherscan-api-key%20%3CAPI_KEY%3E%60%20to%20decode%20transaction%20traces%20using%20verified%20source%20maps%2C%20providing%20more%20detailed%20and%20human-readable%20information.%0A%0A**Retrieve%20the%20total%20supply%20of%20the%20DAI%20token**%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcast%2Fcast-call%3Aall%5D%0A%60%60%60%0A%0A**Decode%20calldata**%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcast%2Fcast-4byte-calldata%3Aall%5D%0A%60%60%60%0A%0A**Send%20messages%20between%20two%20Anvil%20accounts**%0A%0A%60%60%60sh%0Acast%20send%20--private-key%20%3CPRIVATE_KEY%3E%200x3c44cdddb6a900fa2b585dd299e03d12fa4293bc%20%24(cast%20from-utf8%20%22hello%20world%22)%20--rpc-url%20http%3A%2F%2F127.0.0.1%3A8545%2F%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60cast%60%20Reference%5D(%2Fcast%2Freference%2Foverview)%20for%20a%20complete%20overview%20of%20all%20the%20available%20subcommands.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BpbU4GMD.js"),__vite__mapDeps([4,1])),path:"/cast/overview.html",type:"mdx",filePath:"cast/overview.md",content:"---%0Adescription%3A%20Cast%20is%20a%20Swiss%20Army%20knife%20for%20interacting%20with%20Ethereum%20from%20the%20command%20line%20-%20send%20transactions%2C%20call%20contracts%2C%20and%20retrieve%20chain%20data.%0A---%0A%0A%23%23%20Cast%0A%0ACast%20is%20a%20Swiss%20Army%20knife%20for%20interacting%20with%20Ethereum%20applications%20from%20the%20command%20line.%20You%20can%20make%20smart%20contract%20calls%2C%20send%20transactions%2C%20or%20retrieve%20any%20type%20of%20chain%20data%20-%20all%20from%20your%20command-line!%0A%0AThe%20%60cast%60%20binary%20can%20be%20used%20both%20within%20and%20outside%20of%20a%20Foundry%20project.%0A%0ACast%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60forge%60%2C%20%60chisel%60%2C%20and%20%60anvil%60.%20If%20you%20haven't%20installed%20Foundry%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0A%0A%23%23%23%20Getting%20started%0A%0AHere%20are%20a%20few%20examples%20of%20what%20you%20can%20do%3A%0A%0A**Check%20the%20latest%20block%20on%20Ethereum%20Mainnet**%3A%0A%0A%60%60%60sh%0Acast%20block-number%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A**Check%20the%20Ether%20balance%20of%20%60vitalik.eth%60**%0A%0A%60%60%60sh%0Acast%20balance%20vitalik.eth%20--ether%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A**Replay%20and%20trace%20a%20transaction**%0A%0A%60%60%60sh%0Acast%20run%200x9c32042f5e997e27e67f82583839548eb19dc78c4769ad6218657c17f2a5ed31%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0AOptionally%2C%20pass%20%60--etherscan-api-key%20%3CAPI_KEY%3E%60%20to%20decode%20transaction%20traces%20using%20verified%20source%20maps%2C%20providing%20more%20detailed%20and%20human-readable%20information.%0A%0A**Retrieve%20the%20total%20supply%20of%20the%20DAI%20token**%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcast%2Fcast-call%3Aall%5D%0A%60%60%60%0A%0A**Decode%20calldata**%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcast%2Fcast-4byte-calldata%3Aall%5D%0A%60%60%60%0A%0A**Send%20messages%20between%20two%20Anvil%20accounts**%0A%0A%60%60%60sh%0Acast%20send%20--private-key%20%3CPRIVATE_KEY%3E%200x3c44cdddb6a900fa2b585dd299e03d12fa4293bc%20%24(cast%20from-utf8%20%22hello%20world%22)%20--rpc-url%20http%3A%2F%2F127.0.0.1%3A8545%2F%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60cast%60%20Reference%5D(%2Fcast%2Freference%2Foverview)%20for%20a%20complete%20overview%20of%20all%20the%20available%20subcommands.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./continuous-integration-B-7mB7fT.js"),__vite__mapDeps([5,1])),path:"/config/continuous-integration",type:"mdx",filePath:"config/continuous-integration.md",content:"%23%23%20Continuous%20Integration%0A%0A%23%23%23%20GitHub%20Actions%0A%0ATo%20test%20your%20project%20using%20GitHub%20Actions%2C%20here%20is%20a%20sample%20workflow%3A%0A%0A%60%60%60yml%0Aon%3A%20%5Bpush%5D%0A%0Aname%3A%20test%0A%0Ajobs%3A%0A%20%20check%3A%0A%20%20%20%20name%3A%20Foundry%20project%0A%20%20%20%20runs-on%3A%20ubuntu-latest%0A%20%20%20%20steps%3A%0A%20%20%20%20%20%20-%20uses%3A%20actions%2Fcheckout%40v4%0A%20%20%20%20%20%20%20%20with%3A%0A%20%20%20%20%20%20%20%20%20%20submodules%3A%20recursive%0A%0A%20%20%20%20%20%20-%20name%3A%20Install%20Foundry%0A%20%20%20%20%20%20%20%20uses%3A%20foundry-rs%2Ffoundry-toolchain%40v1%0A%20%20%20%20%20%20%20%20with%3A%0A%20%20%20%20%20%20%20%20%20%20version%3A%20stable%0A%0A%20%20%20%20%20%20-%20name%3A%20Run%20tests%0A%20%20%20%20%20%20%20%20run%3A%20forge%20test%20-vvv%0A%60%60%60%0A%0A%23%23%23%20Travis%20CI%0A%0ATo%20test%20your%20project%20using%20Travis%20CI%2C%20here%20is%20a%20sample%20workflow%3A%0A%0A%60%60%60yml%0Alanguage%3A%20rust%0Acache%3A%0A%20%20cargo%3A%20true%0A%20%20directories%3A%0A%20%20%20%20-%20%24HOME%2F.foundry%0A%0Ainstall%3A%0A%20%20-%20curl%20-L%20https%3A%2F%2Ffoundry.paradigm.xyz%20%7C%20bash%0A%20%20-%20export%20PATH%3D%24PATH%3A%24HOME%2F.foundry%2Fbin%0A%20%20-%20foundryup%20-b%20master%0A%0Ascript%3A%0A%20%20-%20forge%20test%20-vvv%0A%60%60%60%0A%0A%23%23%20GitLab%20CI%0A%0ATo%20test%20your%20project%20using%20GitLab%20CI%2C%20here%20is%20a%20sample%20workflow%3A%0ANote%3A%20check%20out%20%5BPolicy%5D(https%3A%2F%2Fdocs.gitlab.com%2Frunner%2Fexecutors%2Fdocker.html%23how-pull-policies-work)%20to%20fetch%20the%20remote%20image%0A%0A%60%60%60yml%0Avariables%3A%0A%20%20GIT_SUBMODULE_STRATEGY%3A%20recursive%0A%0Ajobs%3A%0A%20%20image%3A%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%20%20script%3A%0A%20%20%20%20-%20forge%20install%0A%20%20%20%20-%20forge%20test%20-vvv%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./continuous-integration-B-7mB7fT.js"),__vite__mapDeps([5,1])),path:"/config/continuous-integration.html",type:"mdx",filePath:"config/continuous-integration.md",content:"%23%23%20Continuous%20Integration%0A%0A%23%23%23%20GitHub%20Actions%0A%0ATo%20test%20your%20project%20using%20GitHub%20Actions%2C%20here%20is%20a%20sample%20workflow%3A%0A%0A%60%60%60yml%0Aon%3A%20%5Bpush%5D%0A%0Aname%3A%20test%0A%0Ajobs%3A%0A%20%20check%3A%0A%20%20%20%20name%3A%20Foundry%20project%0A%20%20%20%20runs-on%3A%20ubuntu-latest%0A%20%20%20%20steps%3A%0A%20%20%20%20%20%20-%20uses%3A%20actions%2Fcheckout%40v4%0A%20%20%20%20%20%20%20%20with%3A%0A%20%20%20%20%20%20%20%20%20%20submodules%3A%20recursive%0A%0A%20%20%20%20%20%20-%20name%3A%20Install%20Foundry%0A%20%20%20%20%20%20%20%20uses%3A%20foundry-rs%2Ffoundry-toolchain%40v1%0A%20%20%20%20%20%20%20%20with%3A%0A%20%20%20%20%20%20%20%20%20%20version%3A%20stable%0A%0A%20%20%20%20%20%20-%20name%3A%20Run%20tests%0A%20%20%20%20%20%20%20%20run%3A%20forge%20test%20-vvv%0A%60%60%60%0A%0A%23%23%23%20Travis%20CI%0A%0ATo%20test%20your%20project%20using%20Travis%20CI%2C%20here%20is%20a%20sample%20workflow%3A%0A%0A%60%60%60yml%0Alanguage%3A%20rust%0Acache%3A%0A%20%20cargo%3A%20true%0A%20%20directories%3A%0A%20%20%20%20-%20%24HOME%2F.foundry%0A%0Ainstall%3A%0A%20%20-%20curl%20-L%20https%3A%2F%2Ffoundry.paradigm.xyz%20%7C%20bash%0A%20%20-%20export%20PATH%3D%24PATH%3A%24HOME%2F.foundry%2Fbin%0A%20%20-%20foundryup%20-b%20master%0A%0Ascript%3A%0A%20%20-%20forge%20test%20-vvv%0A%60%60%60%0A%0A%23%23%20GitLab%20CI%0A%0ATo%20test%20your%20project%20using%20GitLab%20CI%2C%20here%20is%20a%20sample%20workflow%3A%0ANote%3A%20check%20out%20%5BPolicy%5D(https%3A%2F%2Fdocs.gitlab.com%2Frunner%2Fexecutors%2Fdocker.html%23how-pull-policies-work)%20to%20fetch%20the%20remote%20image%0A%0A%60%60%60yml%0Avariables%3A%0A%20%20GIT_SUBMODULE_STRATEGY%3A%20recursive%0A%0Ajobs%3A%0A%20%20image%3A%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%20%20script%3A%0A%20%20%20%20-%20forge%20install%0A%20%20%20%20-%20forge%20test%20-vvv%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./dynamic-test-linking-Bd1uW_1t.js"),__vite__mapDeps([6,1])),path:"/config/dynamic-test-linking",type:"mdx",filePath:"config/dynamic-test-linking.md",content:"%23%23%20Dynamic%20Test%20Linking%0A%0A%5Bv1.1%20release%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Freleases%2Ftag%2Fv1.1.0)%20comes%20with%20dynamic%20test%20linking%20feature%2C%20built%20on%20top%20of%20%5BSolar%5D(https%3A%2F%2Fgithub.com%2Fparadigmxyz%2Fsolar)%2C%20which%20eliminates%20redundant%20test%20compilation%20when%20changing%20the%20contract%20logic%2C%20Foundry%20skips%20recompiling%20large%20test%20suites%2C%20resulting%20in%20massive%20time%20savings.%0A%0AHow%20it%20works%3A%0A%0AOn%20the%20initial%20build%2C%20Foundry%20preprocesses%20test%20contracts%20by%20extracting%20constructor%20parameters%20of%20the%20contracts%20under%20test%20and%20replacing%20direct%20instantiations%20with%20%5B%60deployCode%60%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Fget-deployed-code).%0A%0ASubsequent%20compilations%20reuse%20pre-built%20artifacts%20for%20deployed%20contracts%20instead%20of%20recompiling%20both%20the%20source%20and%20all%20associated%20test%20contracts.%0ADynamic%20test%20linking%20capability%20is%20built%20on%20top%20of%20%5BSolar%5D(https%3A%2F%2Fgithub.com%2Fparadigmxyz%2Fsolar)%2C%20the%20blazingly%20fast%20and%20modular%20Solidity%20compiler.%0A%0AYou%20can%20enable%20this%20feature%20by%20setting%20the%20%60dynamic_test_linking%60%20configuration%20option%20to%20%60true%60%20in%20your%20%60foundry.toml%60%20file%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0A...%0Adynamic_test_linking%20%3D%20true%0A%60%60%60%0A%0AOR%20by%20passing%20the%20%60--dynamic-test-linking%60%20flag%20to%20the%20%60forge%20build%60%20command%3A%0A%0A%60%60%60bash%0Aforge%20build%20--dynamic-test-linking%0A%60%60%60%0A%0AWe%20are%20looking%20into%20enabling%20this%20by%20default%20in%20the%20future.%0A%0ABenchmarks%20from%20the%20%5BPR%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fpull%2F10010)%20show%20greater%20than%2010x%20speedup%20in%20compilation%20time%20for%20large%20projects%3A%0A%0A%7C%20Project%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Changeiles%20compiled%20(with%20%2F%20without%2C%20after%20initial%20compile)%20%7C%20Time%20to%20compile%20(with%20%2F%20without%2C%20after%20initial%20compile)%20%7C%0A%7C%20------------------------------------------------------------------------------------------------------------------------%20%7C%20-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%20%7C%20------------------------------------------------------%20%7C%20-------------------------------------------------------%20%7C%0A%7C%20%5Buniswap%20v4-core%5D(https%3A%2F%2Fgithub.com%2FUniswap%2Fv4-core%2Ftree%2F80311e34080fee64b6fc6c916e9a51a437d0e482)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20add%20%60Lock.lock()%3B%60%20at%20%5BPoolManager.sol%23L107%5D(https%3A%2F%2Fgithub.com%2FUniswap%2Fv4-core%2Fblob%2F80311e34080fee64b6fc6c916e9a51a437d0e482%2Fsrc%2FPoolManager.sol%23L107)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%201%20%2F%2019%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%202.25s%20%2F%20165.13s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bspark-psm%5D(https%3A%2F%2Fgithub.com%2Fsparkdotfi%2Fspark-psm%2Ftree%2F9d0bcc045e81407408368c9a4bb6e3f13db77e32)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20change%20%60amountOut%20%3C%20minAmountOut%60%20at%20%5BPSM3.sol%23L125%5D(https%3A%2F%2Fgithub.com%2Fsparkdotfi%2Fspark-psm%2Fblob%2F9d0bcc045e81407408368c9a4bb6e3f13db77e32%2Fsrc%2FPSM3.sol%23L125)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%203%20%2F%2028%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%202.14s%20%2F%2016.15s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bmorpho-blue-bundlers%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue-bundlers%2Ftree%2F1fa17256abb86c4de48fd5e251ebd46aae70ca1a)%20%7C%20change%20%60if%20(assets%20%3C%200)%60%20at%20%5BMorphoBundler.sol%23L106%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue-bundlers%2Fblob%2F1fa17256abb86c4de48fd5e251ebd46aae70ca1a%2Fsrc%2FMorphoBundler.sol%23L106)%20%20%20%7C%2011%20%2F%2036%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%2016.39s%20%2F%20251.05s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bmorpho-blue%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue%2Fcommit%2F9e2b0755b47bbe5b09bf1be8f00e060d4eab6f1c)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20add%20%60require(assets%20!%3D%200%2C%20ErrorsLib.ZERO_ASSETS)%60%20at%20%5BMorpho.sol%23L424%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue%2Fblob%2F9e2b0755b47bbe5b09bf1be8f00e060d4eab6f1c%2Fsrc%2FMorpho.sol%23L424)%20%7C%201%20%2F%2023%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%201.01s%20%2F%20133.73s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bsablier%20lockup%5D(https%3A%2F%2Fgithub.com%2Fsablier-labs%2Flockup%2Ftree%2Fb2f33926fcac72a1a855c6b8ccaa75166895f13c)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20change%20%60if%20(cliffTime%20%3C%200)%60%20at%20%5BSablierLockup.sol%23L480%5D(https%3A%2F%2Fgithub.com%2Fsablier-labs%2Flockup%2Fblob%2Fb2f33926fcac72a1a855c6b8ccaa75166895f13c%2Fsrc%2FSablierLockup.sol%23L480)%20%20%20%20%20%20%20%20%20%20%20%20%7C%201%20%2F%20104%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20781ms%20%2F%2071.29s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bsolady%5D(https%3A%2F%2Fgithub.com%2FVectorized%2Fsolady%2Fcommit%2F724c39bdfebb593157c2dfa6797c07a25dfb564c)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20add%20additional%20%60_setOwner(newOwner)%60%20at%20%5BOwnable.sol%23L182%5D(https%3A%2F%2Fgithub.com%2FVectorized%2Fsolady%2Fblob%2F724c39bdfebb593157c2dfa6797c07a25dfb564c%2Fsrc%2Fauth%2FOwnable.sol%23L182)%20%20%20%20%20%20%20%20%20%20%20%20%7C%209%20%2F%2014%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%206.17s%20%2F%206.34s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Beuler%20evc%5D(https%3A%2F%2Fgithub.com%2Feuler-xyz%2Fethereum-vault-connector%2Fcommit%2F64f6d2171a57e02a0f95bcbdecf1d92e9d253d40)%20%20%20%20%20%20%20%7C%20change%20%60SET_MAX_ELEMENTS%60%20to%20%6011%60%20at%20%5BSet.sol%23L7%5D(https%3A%2F%2Fgithub.com%2Feuler-xyz%2Fethereum-vault-connector%2Fblob%2F64f6d2171a57e02a0f95bcbdecf1d92e9d253d40%2Fsrc%2FSet.sol%23L7)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%2028%20%2F%2030%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%209.17s%20%2F%209.40s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./dynamic-test-linking-Bd1uW_1t.js"),__vite__mapDeps([6,1])),path:"/config/dynamic-test-linking.html",type:"mdx",filePath:"config/dynamic-test-linking.md",content:"%23%23%20Dynamic%20Test%20Linking%0A%0A%5Bv1.1%20release%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Freleases%2Ftag%2Fv1.1.0)%20comes%20with%20dynamic%20test%20linking%20feature%2C%20built%20on%20top%20of%20%5BSolar%5D(https%3A%2F%2Fgithub.com%2Fparadigmxyz%2Fsolar)%2C%20which%20eliminates%20redundant%20test%20compilation%20when%20changing%20the%20contract%20logic%2C%20Foundry%20skips%20recompiling%20large%20test%20suites%2C%20resulting%20in%20massive%20time%20savings.%0A%0AHow%20it%20works%3A%0A%0AOn%20the%20initial%20build%2C%20Foundry%20preprocesses%20test%20contracts%20by%20extracting%20constructor%20parameters%20of%20the%20contracts%20under%20test%20and%20replacing%20direct%20instantiations%20with%20%5B%60deployCode%60%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Fget-deployed-code).%0A%0ASubsequent%20compilations%20reuse%20pre-built%20artifacts%20for%20deployed%20contracts%20instead%20of%20recompiling%20both%20the%20source%20and%20all%20associated%20test%20contracts.%0ADynamic%20test%20linking%20capability%20is%20built%20on%20top%20of%20%5BSolar%5D(https%3A%2F%2Fgithub.com%2Fparadigmxyz%2Fsolar)%2C%20the%20blazingly%20fast%20and%20modular%20Solidity%20compiler.%0A%0AYou%20can%20enable%20this%20feature%20by%20setting%20the%20%60dynamic_test_linking%60%20configuration%20option%20to%20%60true%60%20in%20your%20%60foundry.toml%60%20file%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0A...%0Adynamic_test_linking%20%3D%20true%0A%60%60%60%0A%0AOR%20by%20passing%20the%20%60--dynamic-test-linking%60%20flag%20to%20the%20%60forge%20build%60%20command%3A%0A%0A%60%60%60bash%0Aforge%20build%20--dynamic-test-linking%0A%60%60%60%0A%0AWe%20are%20looking%20into%20enabling%20this%20by%20default%20in%20the%20future.%0A%0ABenchmarks%20from%20the%20%5BPR%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fpull%2F10010)%20show%20greater%20than%2010x%20speedup%20in%20compilation%20time%20for%20large%20projects%3A%0A%0A%7C%20Project%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Change%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Files%20compiled%20(with%20%2F%20without%2C%20after%20initial%20compile)%20%7C%20Time%20to%20compile%20(with%20%2F%20without%2C%20after%20initial%20compile)%20%7C%0A%7C%20------------------------------------------------------------------------------------------------------------------------%20%7C%20-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%20%7C%20------------------------------------------------------%20%7C%20-------------------------------------------------------%20%7C%0A%7C%20%5Buniswap%20v4-core%5D(https%3A%2F%2Fgithub.com%2FUniswap%2Fv4-core%2Ftree%2F80311e34080fee64b6fc6c916e9a51a437d0e482)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20add%20%60Lock.lock()%3B%60%20at%20%5BPoolManager.sol%23L107%5D(https%3A%2F%2Fgithub.com%2FUniswap%2Fv4-core%2Fblob%2F80311e34080fee64b6fc6c916e9a51a437d0e482%2Fsrc%2FPoolManager.sol%23L107)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%201%20%2F%2019%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%202.25s%20%2F%20165.13s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bspark-psm%5D(https%3A%2F%2Fgithub.com%2Fsparkdotfi%2Fspark-psm%2Ftree%2F9d0bcc045e81407408368c9a4bb6e3f13db77e32)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20change%20%60amountOut%20%3C%20minAmountOut%60%20at%20%5BPSM3.sol%23L125%5D(https%3A%2F%2Fgithub.com%2Fsparkdotfi%2Fspark-psm%2Fblob%2F9d0bcc045e81407408368c9a4bb6e3f13db77e32%2Fsrc%2FPSM3.sol%23L125)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%203%20%2F%2028%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%202.14s%20%2F%2016.15s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bmorpho-blue-bundlers%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue-bundlers%2Ftree%2F1fa17256abb86c4de48fd5e251ebd46aae70ca1a)%20%7C%20change%20%60if%20(assets%20%3C%200)%60%20at%20%5BMorphoBundler.sol%23L106%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue-bundlers%2Fblob%2F1fa17256abb86c4de48fd5e251ebd46aae70ca1a%2Fsrc%2FMorphoBundler.sol%23L106)%20%20%20%7C%2011%20%2F%2036%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%2016.39s%20%2F%20251.05s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bmorpho-blue%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue%2Fcommit%2F9e2b0755b47bbe5b09bf1be8f00e060d4eab6f1c)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20add%20%60require(assets%20!%3D%200%2C%20ErrorsLib.ZERO_ASSETS)%60%20at%20%5BMorpho.sol%23L424%5D(https%3A%2F%2Fgithub.com%2Fmorpho-org%2Fmorpho-blue%2Fblob%2F9e2b0755b47bbe5b09bf1be8f00e060d4eab6f1c%2Fsrc%2FMorpho.sol%23L424)%20%7C%201%20%2F%2023%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%201.01s%20%2F%20133.73s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bsablier%20lockup%5D(https%3A%2F%2Fgithub.com%2Fsablier-labs%2Flockup%2Ftree%2Fb2f33926fcac72a1a855c6b8ccaa75166895f13c)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20change%20%60if%20(cliffTime%20%3C%200)%60%20at%20%5BSablierLockup.sol%23L480%5D(https%3A%2F%2Fgithub.com%2Fsablier-labs%2Flockup%2Fblob%2Fb2f33926fcac72a1a855c6b8ccaa75166895f13c%2Fsrc%2FSablierLockup.sol%23L480)%20%20%20%20%20%20%20%20%20%20%20%20%7C%201%20%2F%20104%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20781ms%20%2F%2071.29s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Bsolady%5D(https%3A%2F%2Fgithub.com%2FVectorized%2Fsolady%2Fcommit%2F724c39bdfebb593157c2dfa6797c07a25dfb564c)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20add%20additional%20%60_setOwner(newOwner)%60%20at%20%5BOwnable.sol%23L182%5D(https%3A%2F%2Fgithub.com%2FVectorized%2Fsolady%2Fblob%2F724c39bdfebb593157c2dfa6797c07a25dfb564c%2Fsrc%2Fauth%2FOwnable.sol%23L182)%20%20%20%20%20%20%20%20%20%20%20%20%7C%209%20%2F%2014%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%206.17s%20%2F%206.34s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%5Beuler%20evc%5D(https%3A%2F%2Fgithub.com%2Feuler-xyz%2Fethereum-vault-connector%2Fcommit%2F64f6d2171a57e02a0f95bcbdecf1d92e9d253d40)%20%20%20%20%20%20%20%7C%20change%20%60SET_MAX_ELEMENTS%60%20to%20%6011%60%20at%20%5BSet.sol%23L7%5D(https%3A%2F%2Fgithub.com%2Feuler-xyz%2Fethereum-vault-connector%2Fblob%2F64f6d2171a57e02a0f95bcbdecf1d92e9d253d40%2Fsrc%2FSet.sol%23L7)%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%2028%20%2F%2030%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%209.17s%20%2F%209.40s%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./hardhat-BDW4IcXv.js"),__vite__mapDeps([7,1])),path:"/config/hardhat",type:"mdx",filePath:"config/hardhat.md",content:"%23%23%20Integrating%20with%20Hardhat%0A%0AIt's%20possible%20to%20have%20your%20Foundry%20project%20work%20alongside%20%5BHardhat%5D(https%3A%2F%2Fhardhat.org%2F).%20This%20article%20assumes%20that%20you%20have%20Foundry%20and%20node%20installed%20in%20your%20system.%20This%20article%20also%20assumes%20familiarity%20with%20both%20Foundry%20and%20Hardhat.%0A%0A%23%23%23%20Why%20does%20this%20not%20work%20out%20of%20the%20box%3F%0A%0AHardhat%20by%20default%20expects%20libraries%20to%20be%20installed%20in%20%60node_modules%60%2C%20the%20default%20folder%20for%20all%20NodeJS%20dependencies.%20Foundry%20expects%20them%20to%20be%20in%20%60lib%60.%20Of%20course%20%5Bwe%20can%20configure%20Foundry%5D(%2Fconfig%2Foverview)%20but%20not%20easily%20to%20the%20directory%20structure%20of%20%60node_modules%60.%0A%0AFor%20this%20reason%2C%20the%20recommended%20setup%20is%20to%20use%20%5Bhardhat-foundry%5D(https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40nomicfoundation%2Fhardhat-foundry).%20When%20hardhat-foundry%20is%20installed%20and%20used%20correctly%2C%20Hardhat%20will%20use%20the%20same%20contracts%20directory%20that%20is%20used%20by%20Foundry%2C%20and%20it%20will%20be%20able%20to%20use%20dependencies%20installed%20with%20forge%20install.%0A%0AIn%20this%20article%20we%20will%20cover%20both%20scenarios%3A%0A%0A1.%20Adding%20Hardhat%20to%20a%20Foundry%20project%2C%20and%2C%0A2.%20Adding%20Foundry%20to%20a%20Hardhat%20project.%0A%0A%23%23%23%20Just%20show%20me%20the%20example%20repo!%0A%0A%5BEnjoy!%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2FHardhatInFoundry)%0A%0AIf%20you%20want%20to%20adapt%20this%20to%20a%20Foundry%20project%20you%20already%20have%20or%20learn%20how%20it%20works%2C%20read%20below%3A%0A%0A%23%23%23%20Adding%20Hardhat%20to%20a%20Foundry%20project%0A%0AInside%20your%20Foundry%20project%20working%20directory%3A%0A%0A1.%20%60npm%20init%20-y%60%20-%20This%20will%20set%20up%20a%20%60package.json%60%20file.%0A2.%20%60npm%20i%20--save-dev%20hardhat%60%20-%20Install%20Hardhat%20as%20a%20dev%20dependency%20into%20your%20project.%0A3.%20%60npx%20hardhat%20init%60%20-%20Initialize%20your%20Hardhat%20project%20inside%20the%20same%20directory%20and%20choose%20the%20%20%22**Create%20an%20empty%20hardhat.config.js**%22%20option.%20This%20will%20create%20a%20basic%20%60hardhat.config.js%60%20file.%0A4.%20%60npm%20i%20--save-dev%20%40nomicfoundation%2Fhardhat-foundry%20%40nomicfoundation%2Fhardhat-toolbox%60%20-%20This%20will%20install%20the%20hardhat-foundry%20plugin%20and%20the%20Hardhat%20toolbox%20plugin%20which%20is%20a%20combination%20of%20all%20the%20basic%20dependencies%20you%20need%20to%20run%20Hardhat%20tests.%0A%0AYour%20hardhat.config.js%20file%20should%20look%20like%20this%20to%20make%20the%20plugins%20work%3A%0A%0A%60%60%60javascript%0Arequire(%22%40nomicfoundation%2Fhardhat-toolbox%22)%3B%0Arequire(%22%40nomicfoundation%2Fhardhat-foundry%22)%3B%0A%2F**%20%40type%20import('hardhat%2Fconfig').HardhatUserConfig%20*%2F%0Amodule.exports%20%3D%20%7B%0A%20%20solidity%3A%20%220.8.19%22%2C%0A%7D%3B%0A%60%60%60%0A%0A5.%20By%20default%2C%20a%20Foundry%20project%20ships%20with%20a%20simple%20%60Counter.sol%60%20contract%20and%20a%20couple%20of%20tests.%20Create%20a%20file%20named%20%60Counter.t.js%60%20inside%20the%20%60test%60%20directory%20parallel%20to%20the%20default%20%60Counter.t.sol%60%20file.%0A6.%20Add%20the%20following%20code%20to%20the%20%60Counter.t.js%60%20file%3A%0A%0A%60%60%60javascript%0Aconst%20%7B%20expect%20%7D%20%3D%20require(%22chai%22)%3B%0Aconst%20hre%20%3D%20require(%22hardhat%22)%3B%0Aconst%20%7B%20loadFixture%20%7D%20%3D%20require(%22%40nomicfoundation%2Fhardhat-toolbox%2Fnetwork-helpers%22)%3B%0A%0Adescribe(%22Counter%20contract%22%2C%20function%20()%20%7B%0A%20%20async%20function%20CounterLockFixture()%20%7B%0A%20%20%20%20const%20counter%20%3D%20await%20ethers.deployContract(%22Counter%22)%3B%0A%20%20%20%20await%20counter.setNumber(0)%3B%0A%0A%20%20%20%20return%20%7B%20counter%20%7D%3B%0A%20%20%7D%0A%0A%20%20it(%22Should%20increment%20the%20number%20correctly%22%2C%20async%20function%20()%20%7B%0A%20%20%20%20const%20%7B%20counter%20%7D%20%3D%20await%20loadFixture(CounterLockFixture)%3B%0A%20%20%20%20await%20counter.increment()%3B%0A%20%20%20%20expect(await%20counter.number()).to.equal(1)%3B%0A%20%20%7D)%3B%0A%0A%20%20%2F%2F%20This%20is%20not%20a%20fuzz%20test%20because%20Hardhat%20does%20not%20support%20fuzzing%20yet.%0A%20%20it(%22Should%20set%20the%20number%20correctly%22%2C%20async%20function%20()%20%7B%0A%20%20%20%20const%20%7B%20counter%20%7D%20%3D%20await%20loadFixture(CounterLockFixture)%3B%0A%20%20%20%20await%20counter.setNumber(100)%3B%0A%20%20%20%20expect(await%20counter.number()).to.equal(100)%3B%0A%20%20%7D)%3B%0A%7D)%3B%0A%60%60%60%0A%0AThis%20piece%20of%20code%20will%20execute%20the%20same%20tests%20as%20the%20default%20%60Counter.t.sol%60%20file.%0A%0AAnd%20this%20is%20it!%0AYou%20can%20create%20Hardhat%20and%20Foundry%20tests%20in%20the%20same%20%60test%60%20directory%20and%20run%20them%20with%20%60npx%20hardhat%20test%60%20and%20%60forge%20test%60%20respectively.%0ACheck%20out%20%5BHardhat's%20documentation%5D(https%3A%2F%2Fhardhat.org%2Fdocs)%20to%20learn%20more.%0A%0A%23%23%23%20Adding%20Foundry%20to%20a%20Hardhat%20project%0A%0AInside%20your%20Hardhat%20project%20working%20directory%3A%0A%0A1.%20%60npm%20i%20--save-dev%20%40nomicfoundation%2Fhardhat-foundry%60-%20Install%20the%20hardhat-foundry%20plugin.%0A2.%20Add%20%60require(%22%40nomicfoundation%2Fhardhat-foundry%22)%3B%60%20to%20the%20top%20of%20your%20%60hardhat.config.js%60%20file.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20Step%20number%203%20will%20only%20work%20if%20your%20directory%20is%20an%20initialized%20git%20repository.%20Run%20%60git%20init%60%20if%20you%20haven't%20already.%0A%0A3.%20Run%20%60npx%20hardhat%20init-foundry%60%20in%20your%20terminal.%20This%20will%20generate%20a%20%60foundry.toml%60%20file%20based%20on%20your%20Hardhat%20project's%20existing%20configuration%2C%20and%20will%20install%20the%20%60forge-std%60%20library.%0A%0AHardhat%20will%20now%20set%20up%20a%20basic%20Foundry%20project%20inside%20the%20same%20directory%20with%20a%20few%20configurations%20inside%20the%20%60foundry.toml%60%20file%20to%20make%20sure%20that%20Foundry%20knows%20where%20to%20look%20for%20your%20contracts%2C%20tests%20and%20dependencies.%20You%20can%20always%20change%20these%20configurations%20later%20by%20editing%20the%20%60foundry.toml%60%20file.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./hardhat-BDW4IcXv.js"),__vite__mapDeps([7,1])),path:"/config/hardhat.html",type:"mdx",filePath:"config/hardhat.md",content:"%23%23%20Integrating%20with%20Hardhat%0A%0AIt's%20possible%20to%20have%20your%20Foundry%20project%20work%20alongside%20%5BHardhat%5D(https%3A%2F%2Fhardhat.org%2F).%20This%20article%20assumes%20that%20you%20have%20Foundry%20and%20node%20installed%20in%20your%20system.%20This%20article%20also%20assumes%20familiarity%20with%20both%20Foundry%20and%20Hardhat.%0A%0A%23%23%23%20Why%20does%20this%20not%20work%20out%20of%20the%20box%3F%0A%0AHardhat%20by%20default%20expects%20libraries%20to%20be%20installed%20in%20%60node_modules%60%2C%20the%20default%20folder%20for%20all%20NodeJS%20dependencies.%20Foundry%20expects%20them%20to%20be%20in%20%60lib%60.%20Of%20course%20%5Bwe%20can%20configure%20Foundry%5D(%2Fconfig%2Foverview)%20but%20not%20easily%20to%20the%20directory%20structure%20of%20%60node_modules%60.%0A%0AFor%20this%20reason%2C%20the%20recommended%20setup%20is%20to%20use%20%5Bhardhat-foundry%5D(https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40nomicfoundation%2Fhardhat-foundry).%20When%20hardhat-foundry%20is%20installed%20and%20used%20correctly%2C%20Hardhat%20will%20use%20the%20same%20contracts%20directory%20that%20is%20used%20by%20Foundry%2C%20and%20it%20will%20be%20able%20to%20use%20dependencies%20installed%20with%20forge%20install.%0A%0AIn%20this%20article%20we%20will%20cover%20both%20scenarios%3A%0A%0A1.%20Adding%20Hardhat%20to%20a%20Foundry%20project%2C%20and%2C%0A2.%20Adding%20Foundry%20to%20a%20Hardhat%20project.%0A%0A%23%23%23%20Just%20show%20me%20the%20example%20repo!%0A%0A%5BEnjoy!%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2FHardhatInFoundry)%0A%0AIf%20you%20want%20to%20adapt%20this%20to%20a%20Foundry%20project%20you%20already%20have%20or%20learn%20how%20it%20works%2C%20read%20below%3A%0A%0A%23%23%23%20Adding%20Hardhat%20to%20a%20Foundry%20project%0A%0AInside%20your%20Foundry%20project%20working%20directory%3A%0A%0A1.%20%60npm%20init%20-y%60%20-%20This%20will%20set%20up%20a%20%60package.json%60%20file.%0A2.%20%60npm%20i%20--save-dev%20hardhat%60%20-%20Install%20Hardhat%20as%20a%20dev%20dependency%20into%20your%20project.%0A3.%20%60npx%20hardhat%20init%60%20-%20Initialize%20your%20Hardhat%20project%20inside%20the%20same%20directory%20and%20choose%20the%20%20%22**Create%20an%20empty%20hardhat.config.js**%22%20option.%20This%20will%20create%20a%20basic%20%60hardhat.config.js%60%20file.%0A4.%20%60npm%20i%20--save-dev%20%40nomicfoundation%2Fhardhat-foundry%20%40nomicfoundation%2Fhardhat-toolbox%60%20-%20This%20will%20install%20the%20hardhat-foundry%20plugin%20and%20the%20Hardhat%20toolbox%20plugin%20which%20is%20a%20combination%20of%20all%20the%20basic%20dependencies%20you%20need%20to%20run%20Hardhat%20tests.%0A%0AYour%20hardhat.config.js%20file%20should%20look%20like%20this%20to%20make%20the%20plugins%20work%3A%0A%0A%60%60%60javascript%0Arequire(%22%40nomicfoundation%2Fhardhat-toolbox%22)%3B%0Arequire(%22%40nomicfoundation%2Fhardhat-foundry%22)%3B%0A%2F**%20%40type%20import('hardhat%2Fconfig').HardhatUserConfig%20*%2F%0Amodule.exports%20%3D%20%7B%0A%20%20solidity%3A%20%220.8.19%22%2C%0A%7D%3B%0A%60%60%60%0A%0A5.%20By%20default%2C%20a%20Foundry%20project%20ships%20with%20a%20simple%20%60Counter.sol%60%20contract%20and%20a%20couple%20of%20tests.%20Create%20a%20file%20named%20%60Counter.t.js%60%20inside%20the%20%60test%60%20directory%20parallel%20to%20the%20default%20%60Counter.t.sol%60%20file.%0A6.%20Add%20the%20following%20code%20to%20the%20%60Counter.t.js%60%20file%3A%0A%0A%60%60%60javascript%0Aconst%20%7B%20expect%20%7D%20%3D%20require(%22chai%22)%3B%0Aconst%20hre%20%3D%20require(%22hardhat%22)%3B%0Aconst%20%7B%20loadFixture%20%7D%20%3D%20require(%22%40nomicfoundation%2Fhardhat-toolbox%2Fnetwork-helpers%22)%3B%0A%0Adescribe(%22Counter%20contract%22%2C%20function%20()%20%7B%0A%20%20async%20function%20CounterLockFixture()%20%7B%0A%20%20%20%20const%20counter%20%3D%20await%20ethers.deployContract(%22Counter%22)%3B%0A%20%20%20%20await%20counter.setNumber(0)%3B%0A%0A%20%20%20%20return%20%7B%20counter%20%7D%3B%0A%20%20%7D%0A%0A%20%20it(%22Should%20increment%20the%20number%20correctly%22%2C%20async%20function%20()%20%7B%0A%20%20%20%20const%20%7B%20counter%20%7D%20%3D%20await%20loadFixture(CounterLockFixture)%3B%0A%20%20%20%20await%20counter.increment()%3B%0A%20%20%20%20expect(await%20counter.number()).to.equal(1)%3B%0A%20%20%7D)%3B%0A%0A%20%20%2F%2F%20This%20is%20not%20a%20fuzz%20test%20because%20Hardhat%20does%20not%20support%20fuzzing%20yet.%0A%20%20it(%22Should%20set%20the%20number%20correctly%22%2C%20async%20function%20()%20%7B%0A%20%20%20%20const%20%7B%20counter%20%7D%20%3D%20await%20loadFixture(CounterLockFixture)%3B%0A%20%20%20%20await%20counter.setNumber(100)%3B%0A%20%20%20%20expect(await%20counter.number()).to.equal(100)%3B%0A%20%20%7D)%3B%0A%7D)%3B%0A%60%60%60%0A%0AThis%20piece%20of%20code%20will%20execute%20the%20same%20tests%20as%20the%20default%20%60Counter.t.sol%60%20file.%0A%0AAnd%20this%20is%20it!%0AYou%20can%20create%20Hardhat%20and%20Foundry%20tests%20in%20the%20same%20%60test%60%20directory%20and%20run%20them%20with%20%60npx%20hardhat%20test%60%20and%20%60forge%20test%60%20respectively.%0ACheck%20out%20%5BHardhat's%20documentation%5D(https%3A%2F%2Fhardhat.org%2Fdocs)%20to%20learn%20more.%0A%0A%23%23%23%20Adding%20Foundry%20to%20a%20Hardhat%20project%0A%0AInside%20your%20Hardhat%20project%20working%20directory%3A%0A%0A1.%20%60npm%20i%20--save-dev%20%40nomicfoundation%2Fhardhat-foundry%60-%20Install%20the%20hardhat-foundry%20plugin.%0A2.%20Add%20%60require(%22%40nomicfoundation%2Fhardhat-foundry%22)%3B%60%20to%20the%20top%20of%20your%20%60hardhat.config.js%60%20file.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20Step%20number%203%20will%20only%20work%20if%20your%20directory%20is%20an%20initialized%20git%20repository.%20Run%20%60git%20init%60%20if%20you%20haven't%20already.%0A%0A3.%20Run%20%60npx%20hardhat%20init-foundry%60%20in%20your%20terminal.%20This%20will%20generate%20a%20%60foundry.toml%60%20file%20based%20on%20your%20Hardhat%20project's%20existing%20configuration%2C%20and%20will%20install%20the%20%60forge-std%60%20library.%0A%0AHardhat%20will%20now%20set%20up%20a%20basic%20Foundry%20project%20inside%20the%20same%20directory%20with%20a%20few%20configurations%20inside%20the%20%60foundry.toml%60%20file%20to%20make%20sure%20that%20Foundry%20knows%20where%20to%20look%20for%20your%20contracts%2C%20tests%20and%20dependencies.%20You%20can%20always%20change%20these%20configurations%20later%20by%20editing%20the%20%60foundry.toml%60%20file.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CGNzJ-RE.js"),__vite__mapDeps([8,1])),path:"/config/overview",type:"mdx",filePath:"config/overview.md",content:"%23%23%20Configuring%20your%20%60foundry.toml%60%0A%0AForge%20can%20be%20configured%20using%20a%20configuration%20file%20called%20%60foundry.toml%60%2C%20which%20is%20placed%20in%20the%20root%20of%20your%20project.%0A%0AConfiguration%20can%20be%20namespaced%20by%20profiles.%20The%20default%20profile%20is%20named%20%60default%60%2C%20from%20which%20all%20other%20profiles%20inherit.%20You%20are%20free%20to%20customize%20the%20%60default%60%20profile%2C%20and%20add%20as%20many%20new%20profiles%20as%20you%20need.%0A%0AAdditionally%2C%20you%20can%20create%20a%20global%20%60foundry.toml%60%20in%20your%20home%20directory.%0A%0ALet's%20take%20a%20look%20at%20a%20configuration%20file%20that%20contains%20two%20profiles%3A%20the%20default%20profile%2C%20which%20always%20enables%20the%20optimizer%2C%20as%20well%20as%20a%20CI%20profile%2C%20that%20always%20displays%20traces%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Aoptimizer%20%3D%20true%0Aoptimizer_runs%20%3D%2020_000%0A%0A%5Bprofile.ci%5D%0Averbosity%20%3D%204%0A%60%60%60%0A%0AWhen%20running%20%60forge%60%2C%20you%20can%20specify%20the%20profile%20to%20use%20using%20the%20%60FOUNDRY_PROFILE%60%20environment%20variable.%0A%0A%23%23%23%20Standalone%20sections%0A%0ABesides%20the%20profile%20sections%2C%20the%20configuration%20file%20can%20also%20contain%20standalone%20sections%20(%60%5Bfmt%5D%60%2C%20%60%5Bfuzz%5D%60%2C%20%60%5Binvariant%5D%60%20etc).%20By%20default%2C%20each%20standalone%20section%20belongs%20to%20the%20%60default%60%20profile.%0Ai.e.%20%60%5Bfmt%5D%60%20is%20equivalent%20to%20%60%5Bprofile.default.fmt%5D%60.%0A%0ATo%20configure%20the%20standalone%20section%20for%20different%20profiles%20other%20than%20%60default%60%2C%20use%20syntax%20%60%5Bprofile.%3Cprofile%20name%3E.%3Cstandalone%3E%5D%60.%0Ai.e.%20%60%5Bprofile.ci.fuzz%5D%60.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60foundry.toml%60%20Reference%5D(%2Fconfig%2Freference%2Fdefault-config)%20for%20a%20complete%20overview%20of%20what%20you%20can%20configure.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CGNzJ-RE.js"),__vite__mapDeps([8,1])),path:"/config/overview.html",type:"mdx",filePath:"config/overview.md",content:"%23%23%20Configuring%20your%20%60foundry.toml%60%0A%0AForge%20can%20be%20configured%20using%20a%20configuration%20file%20called%20%60foundry.toml%60%2C%20which%20is%20placed%20in%20the%20root%20of%20your%20project.%0A%0AConfiguration%20can%20be%20namespaced%20by%20profiles.%20The%20default%20profile%20is%20named%20%60default%60%2C%20from%20which%20all%20other%20profiles%20inherit.%20You%20are%20free%20to%20customize%20the%20%60default%60%20profile%2C%20and%20add%20as%20many%20new%20profiles%20as%20you%20need.%0A%0AAdditionally%2C%20you%20can%20create%20a%20global%20%60foundry.toml%60%20in%20your%20home%20directory.%0A%0ALet's%20take%20a%20look%20at%20a%20configuration%20file%20that%20contains%20two%20profiles%3A%20the%20default%20profile%2C%20which%20always%20enables%20the%20optimizer%2C%20as%20well%20as%20a%20CI%20profile%2C%20that%20always%20displays%20traces%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Aoptimizer%20%3D%20true%0Aoptimizer_runs%20%3D%2020_000%0A%0A%5Bprofile.ci%5D%0Averbosity%20%3D%204%0A%60%60%60%0A%0AWhen%20running%20%60forge%60%2C%20you%20can%20specify%20the%20profile%20to%20use%20using%20the%20%60FOUNDRY_PROFILE%60%20environment%20variable.%0A%0A%23%23%23%20Standalone%20sections%0A%0ABesides%20the%20profile%20sections%2C%20the%20configuration%20file%20can%20also%20contain%20standalone%20sections%20(%60%5Bfmt%5D%60%2C%20%60%5Bfuzz%5D%60%2C%20%60%5Binvariant%5D%60%20etc).%20By%20default%2C%20each%20standalone%20section%20belongs%20to%20the%20%60default%60%20profile.%0Ai.e.%20%60%5Bfmt%5D%60%20is%20equivalent%20to%20%60%5Bprofile.default.fmt%5D%60.%0A%0ATo%20configure%20the%20standalone%20section%20for%20different%20profiles%20other%20than%20%60default%60%2C%20use%20syntax%20%60%5Bprofile.%3Cprofile%20name%3E.%3Cstandalone%3E%5D%60.%0Ai.e.%20%60%5Bprofile.ci.fuzz%5D%60.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60foundry.toml%60%20Reference%5D(%2Fconfig%2Freference%2Fdefault-config)%20for%20a%20complete%20overview%20of%20what%20you%20can%20configure.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./shell-autocompletion-ClwXsyK_.js"),__vite__mapDeps([9,1])),path:"/config/shell-autocompletion",type:"mdx",filePath:"config/shell-autocompletion.md",content:"%23%23%20Shell%20Autocompletion%0A%0AYou%20can%20generate%20autocompletion%20shell%20scripts%20for%20%60bash%60%2C%20%60elvish%60%2C%20%60fish%60%2C%20%60powershell%60%2C%20and%20%60zsh%60.%0A%0A%23%23%23%20zsh%0A%0AFirst%2C%20ensure%20that%20the%20following%20is%20present%20somewhere%20in%20your%20%60~%2F.zshrc%60%20file%20(if%20not%2C%20add%20it)%3A%0A%0A%60%60%60sh%0Aautoload%20-U%20compinit%0Acompinit%20-i%0A%60%60%60%0A%0AThen%20run%3A%0A%0A%60%60%60sh%0Aforge%20completions%20zsh%20%7C%20sudo%20tee%20%2Fusr%2Flocal%2Fshare%2Fzsh%2Fsite-functions%2F_forge%0Acast%20completions%20zsh%20%7C%20sudo%20tee%20%2Fusr%2Flocal%2Fshare%2Fzsh%2Fsite-functions%2F_cast%0Aanvil%20completions%20zsh%20%7C%20sudo%20tee%20%2Fusr%2Flocal%2Fshare%2Fzsh%2Fsite-functions%2F_anvil%0A%60%60%60%0A%0AFor%20macOS%3A%0A%0A%60%60%60sh%0Aforge%20completions%20zsh%20%3E%20%2Fopt%2Fhomebrew%2Fcompletions%2Fzsh%2F_forge%0Acast%20completions%20zsh%20%3E%20%2Fopt%2Fhomebrew%2Fcompletions%2Fzsh%2F_cast%0Aanvil%20completions%20zsh%20%3E%20%2Fopt%2Fhomebrew%2Fcompletions%2Fzsh%2F_anvil%0A%60%60%60%0A%0A%23%23%23%20fish%0A%0A%60%60%60sh%0Amkdir%20-p%20%24HOME%2F.config%2Ffish%2Fcompletions%0Aforge%20completions%20fish%20%3E%20%24HOME%2F.config%2Ffish%2Fcompletions%2Fforge.fish%0Acast%20completions%20fish%20%3E%20%24HOME%2F.config%2Ffish%2Fcompletions%2Fcast.fish%0Aanvil%20completions%20fish%20%3E%20%24HOME%2F.config%2Ffish%2Fcompletions%2Fanvil.fish%0Asource%20%24HOME%2F.config%2Ffish%2Fconfig.fish%0A%60%60%60%0A%0A%23%23%23%20bash%0A%0A%60%60%60sh%0Amkdir%20-p%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%0Aforge%20completions%20bash%20%3E%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%2Fforge%0Acast%20completions%20bash%20%3E%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%2Fcast%0Aanvil%20completions%20bash%20%3E%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%2Fanvil%0Aexec%20bash%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./shell-autocompletion-ClwXsyK_.js"),__vite__mapDeps([9,1])),path:"/config/shell-autocompletion.html",type:"mdx",filePath:"config/shell-autocompletion.md",content:"%23%23%20Shell%20Autocompletion%0A%0AYou%20can%20generate%20autocompletion%20shell%20scripts%20for%20%60bash%60%2C%20%60elvish%60%2C%20%60fish%60%2C%20%60powershell%60%2C%20and%20%60zsh%60.%0A%0A%23%23%23%20zsh%0A%0AFirst%2C%20ensure%20that%20the%20following%20is%20present%20somewhere%20in%20your%20%60~%2F.zshrc%60%20file%20(if%20not%2C%20add%20it)%3A%0A%0A%60%60%60sh%0Aautoload%20-U%20compinit%0Acompinit%20-i%0A%60%60%60%0A%0AThen%20run%3A%0A%0A%60%60%60sh%0Aforge%20completions%20zsh%20%7C%20sudo%20tee%20%2Fusr%2Flocal%2Fshare%2Fzsh%2Fsite-functions%2F_forge%0Acast%20completions%20zsh%20%7C%20sudo%20tee%20%2Fusr%2Flocal%2Fshare%2Fzsh%2Fsite-functions%2F_cast%0Aanvil%20completions%20zsh%20%7C%20sudo%20tee%20%2Fusr%2Flocal%2Fshare%2Fzsh%2Fsite-functions%2F_anvil%0A%60%60%60%0A%0AFor%20macOS%3A%0A%0A%60%60%60sh%0Aforge%20completions%20zsh%20%3E%20%2Fopt%2Fhomebrew%2Fcompletions%2Fzsh%2F_forge%0Acast%20completions%20zsh%20%3E%20%2Fopt%2Fhomebrew%2Fcompletions%2Fzsh%2F_cast%0Aanvil%20completions%20zsh%20%3E%20%2Fopt%2Fhomebrew%2Fcompletions%2Fzsh%2F_anvil%0A%60%60%60%0A%0A%23%23%23%20fish%0A%0A%60%60%60sh%0Amkdir%20-p%20%24HOME%2F.config%2Ffish%2Fcompletions%0Aforge%20completions%20fish%20%3E%20%24HOME%2F.config%2Ffish%2Fcompletions%2Fforge.fish%0Acast%20completions%20fish%20%3E%20%24HOME%2F.config%2Ffish%2Fcompletions%2Fcast.fish%0Aanvil%20completions%20fish%20%3E%20%24HOME%2F.config%2Ffish%2Fcompletions%2Fanvil.fish%0Asource%20%24HOME%2F.config%2Ffish%2Fconfig.fish%0A%60%60%60%0A%0A%23%23%23%20bash%0A%0A%60%60%60sh%0Amkdir%20-p%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%0Aforge%20completions%20bash%20%3E%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%2Fforge%0Acast%20completions%20bash%20%3E%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%2Fcast%0Aanvil%20completions%20bash%20%3E%20%24HOME%2F.local%2Fshare%2Fbash-completion%2Fcompletions%2Fanvil%0Aexec%20bash%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./static-analyzers-Dsx18FKV.js"),__vite__mapDeps([10,1])),path:"/config/static-analyzers",type:"mdx",filePath:"config/static-analyzers.md",content:"%23%23%20Static%20Analyzers%0A%0A%23%23%23%20Slither%0A%0ATo%20test%20your%20project%20using%20%5Bslither%5D(https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither)%2C%20here%20is%20a%20sample%20%60slither.config.json%60%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22filter_paths%22%3A%20%22lib%22%0A%7D%0A%60%60%60%0A%0ATo%20run%20Slither%20on%20the%20entire%20project%2C%20use%20this%20command%20in%20the%20root%20of%20the%20project%3A%0A%0A%60%60%60sh%0Aslither%20.%0A%60%60%60%0A%0ABy%20default%20(as%20of%20version%200.10.0)%2C%20this%20will%20skip%20tests%20and%20scripts.%20To%20force%20inclusion%20of%20the%20tests%20and%20scripts%2C%20add%20the%20%60--foundry-compile-all%60%20flag.%0A%0ATo%20run%20Slither%20on%20a%20single%20file%2C%20use%20this%20command%3A%0A%0A%60%60%60sh%0Aslither%20src%2FContract.sol%0A%60%60%60%0A%0ANote%2C%20this%20requires%20configuring%20the%20%5Bsolc%20version%20in%20the%20foundry%20config%20file%5D(https%3A%2F%2Fbook.getfoundry.sh%2Fconfig%2Freference%2Fsolidity-compiler%23solc_version).%0A%0AYou%20do%20not%20need%20to%20provide%20remappings%20via%20the%20%60solc_remaps%60%20option%20as%20Slither%20will%20automatically%20detect%20remappings%20in%20a%20Foundry%20project.%20Slither%20will%20invoke%20%60forge%60%20to%20perform%20the%20build.%0A%0ASee%20the%20%5BSlither%20wiki%5D(https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FUsage)%20for%20more%20information.%0A%0AIn%20order%20to%20use%20a%20custom%20configuration%2C%20such%20as%20the%20sample%20%60slither.config.json%60%20mentioned%20above%2C%20the%20following%20command%20is%20used%20as%20mentioned%20in%20the%20%5Bslither-wiki%5D(https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FUsage%23configuration-file).%20By%20default%20slither%20looks%20for%20the%20%60slither.config.json%60%20but%20you%20can%20define%20the%20path%20and%20any%20other%20%60json%60%20file%20of%20your%20choice%3A%0A%0A%60%60%60sh%0Aslither%20--config-file%20%3Cpath%3E%2Ffile.config.json%20.%0A%60%60%60%0A%0AExample%20output%20(Raw)%3A%0A%0A%60%60%60bash%0APragma%20version%5E0.8.13%20(Counter.sol%232)%20necessitates%20a%20version%20too%20recent%20to%20be%20trusted.%20Consider%20deploying%20with%200.6.12%2F0.7.6%2F0.8.7%0Asolc-0.8.13%20is%20not%20recommended%20for%20deployment%0AReference%3A%20https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FDetector-Documentation%23incorrect-versions-of-solidity%0A%0AsetNumber(uint256)%20should%20be%20declared%20external%3A%0A%20%20%20%20%20%20%20%20-%20Counter.setNumber(uint256)%20(Counter.sol%237-9)%0Aincrement()%20should%20be%20declared%20external%3A%0A%20%20%20%20%20%20%20%20-%20Counter.increment()%20(Counter.sol%2311-13)%0AReference%3A%20https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FDetector-Documentation%23public-function-that-could-be-declared-external%0ACounter.sol%20analyzed%20(1%20contracts%20with%2078%20detectors)%2C%204%20result(s)%20found%0A%60%60%60%0A%0ASlither%20also%20has%20a%20%5BGitHub%20Action%5D(https%3A%2F%2Fgithub.com%2Fmarketplace%2Factions%2Fslither-action)%20for%20CI%2FCD.%0A%0A%23%23%23%20Aderyn%0A%0ATo%20test%20your%20project%20using%20%5Baderyn%5D(https%3A%2F%2Fgithub.com%2Fcyfrin%2Faderyn)%2C%20install%20the%20%5BVS%20Code%20extension%5D(https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DCyfrin.aderyn%26ssr%3Dfalse%23overview)%20supported%20by%20Cyfrin.%0A%0ATo%20run%20the%20tool%20manually%2C%20follow%20the%20%5BQuick%20Start%5D(https%3A%2F%2Fcyfrin.gitbook.io%2Fcyfrin-docs%2Faderyn-cli%2Fquickstart)%20example%20with%20video%20guide.%0A%0A%60%60%60bash%0Acd%20path%2Fto%2Fsolidity%2Fproject%2Froot%0Aaderyn%0A%60%60%60%0A%0AExplore%20more%20CLI%20options%20%5Bhere%5D(https%3A%2F%2Fcyfrin.gitbook.io%2Fcyfrin-docs%2Fcli-options).%0A%0A%23%23%23%20Mythril%0A%0ATo%20test%20your%20project%20using%20%5Bmythril%5D(https%3A%2F%2Fgithub.com%2FConsenSys%2Fmythril)%2C%20here%20is%20a%20sample%20%60mythril.config.json%60%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22remappings%22%3A%20%5B%22ds-test%2F%3Dlib%2Fds-test%2Fsrc%2F%22%2C%20%22forge-std%2F%3Dlib%2Fforge-std%2Fsrc%2F%22%5D%2C%0A%20%20%22optimizer%22%3A%20%7B%0A%20%20%20%20%22enabled%22%3A%20true%2C%0A%20%20%20%20%22runs%22%3A%20200%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0ANote%2C%20you%20need%20switch%20%60rustc%60%20to%20nightly%20to%20install%20%60mythril%60%3A%0A%0A%60%60%60%0Arustup%20default%20nightly%0Apip3%20install%20mythril%0Amyth%20analyze%20src%2FContract.sol%20--solc-json%20mythril.config.json%0A%60%60%60%0A%0ASee%20the%20%5Bmythril%20docs%5D(https%3A%2F%2Fmythril-classic.readthedocs.io%2Fen%2Fdevelop%2F)%20for%20more%20information.%0A%0AYou%20can%20pass%20custom%20Solc%20compiler%20output%20to%20Mythril%20using%20the%20%60--solc-json%60%20flag.%20For%20example%3A%0A%0A%60%60%60bash%0Amyth%20analyze%20src%2FCounter.sol%20--solc-json%20mythril.config.json%0A.%0A.%0Amythril.laser.plugin.loader%20%5BINFO%5D%3A%20Loading%20laser%20plugin%3A%20coverage%0Amythril.laser.plugin.loader%20%5BINFO%5D%3A%20Loading%20laser%20plugin%3A%20mutation-pruner%0A.%0A.%0AAchieved%2011.56%25%20coverage%20for%20code%3A%20608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220659fce8aadca285da9206b61f95de294d3958c409cc3011ded856f421885867464736f6c63430008100033%0Amythril.laser.plugin.plugins.coverage.coverage_plugin%20%5BINFO%5D%3A%20Achieved%2090.13%25%20coverage%20for%20code%3A%206080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220659fce8aadca285da9206b61f95de294d3958c409cc3011ded856f421885867464736f6c63430008100033%0Amythril.laser.plugin.plugins.instruction_profiler%20%5BINFO%5D%3A%20Total%3A%201.0892839431762695%20s%0A%5BADD%20%20%20%20%20%20%20%20%20%5D%20%20%200.9974%20%25%2C%20%20nr%20%20%20%20%20%209%2C%20%20total%20%20%200.0109%20s%2C%20%20avg%20%20%200.0012%20s%2C%20%20min%20%20%200.0011%20s%2C%20%20max%20%20%200.0013%20s%0A.%0A.%0A%5BSWAP1%20%20%20%20%20%20%20%5D%20%20%201.8446%20%25%2C%20%20nr%20%20%20%20%2018%2C%20%20total%20%20%200.0201%20s%2C%20%20avg%20%20%200.0011%20s%2C%20%20min%20%20%200.0010%20s%2C%20%20max%20%20%200.0013%20s%0A%5BSWAP2%20%20%20%20%20%20%20%5D%20%20%200.8858%20%25%2C%20%20nr%20%20%20%20%20%209%2C%20%20total%20%20%200.0096%20s%2C%20%20avg%20%20%200.0011%20s%2C%20%20min%20%20%200.0010%20s%2C%20%20max%20%20%200.0011%20s%0A%0Amythril.analysis.security%20%5BINFO%5D%3A%20Starting%20analysis%0Amythril.mythril.mythril_analyzer%20%5BINFO%5D%3A%20Solver%20statistics%3A%0AQuery%20count%3A%2061%0ASolver%20time%3A%203.6820807456970215%0AThe%20analysis%20was%20completed%20successfully.%20No%20issues%20were%20detected.%0A%60%60%60%0A%0AThe%20findings%20will%20be%20listed%20at%20the%20end%20of%20this%20output%20if%20any.%20Since%20the%20default%20%60Counter.sol%60%20doesn't%20have%20any%20logic%2C%20%60mythx%60%20reports%20that%20no%20issues%20were%20found.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./static-analyzers-Dsx18FKV.js"),__vite__mapDeps([10,1])),path:"/config/static-analyzers.html",type:"mdx",filePath:"config/static-analyzers.md",content:"%23%23%20Static%20Analyzers%0A%0A%23%23%23%20Slither%0A%0ATo%20test%20your%20project%20using%20%5Bslither%5D(https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither)%2C%20here%20is%20a%20sample%20%60slither.config.json%60%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22filter_paths%22%3A%20%22lib%22%0A%7D%0A%60%60%60%0A%0ATo%20run%20Slither%20on%20the%20entire%20project%2C%20use%20this%20command%20in%20the%20root%20of%20the%20project%3A%0A%0A%60%60%60sh%0Aslither%20.%0A%60%60%60%0A%0ABy%20default%20(as%20of%20version%200.10.0)%2C%20this%20will%20skip%20tests%20and%20scripts.%20To%20force%20inclusion%20of%20the%20tests%20and%20scripts%2C%20add%20the%20%60--foundry-compile-all%60%20flag.%0A%0ATo%20run%20Slither%20on%20a%20single%20file%2C%20use%20this%20command%3A%0A%0A%60%60%60sh%0Aslither%20src%2FContract.sol%0A%60%60%60%0A%0ANote%2C%20this%20requires%20configuring%20the%20%5Bsolc%20version%20in%20the%20foundry%20config%20file%5D(https%3A%2F%2Fbook.getfoundry.sh%2Fconfig%2Freference%2Fsolidity-compiler%23solc_version).%0A%0AYou%20do%20not%20need%20to%20provide%20remappings%20via%20the%20%60solc_remaps%60%20option%20as%20Slither%20will%20automatically%20detect%20remappings%20in%20a%20Foundry%20project.%20Slither%20will%20invoke%20%60forge%60%20to%20perform%20the%20build.%0A%0ASee%20the%20%5BSlither%20wiki%5D(https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FUsage)%20for%20more%20information.%0A%0AIn%20order%20to%20use%20a%20custom%20configuration%2C%20such%20as%20the%20sample%20%60slither.config.json%60%20mentioned%20above%2C%20the%20following%20command%20is%20used%20as%20mentioned%20in%20the%20%5Bslither-wiki%5D(https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FUsage%23configuration-file).%20By%20default%20slither%20looks%20for%20the%20%60slither.config.json%60%20but%20you%20can%20define%20the%20path%20and%20any%20other%20%60json%60%20file%20of%20your%20choice%3A%0A%0A%60%60%60sh%0Aslither%20--config-file%20%3Cpath%3E%2Ffile.config.json%20.%0A%60%60%60%0A%0AExample%20output%20(Raw)%3A%0A%0A%60%60%60bash%0APragma%20version%5E0.8.13%20(Counter.sol%232)%20necessitates%20a%20version%20too%20recent%20to%20be%20trusted.%20Consider%20deploying%20with%200.6.12%2F0.7.6%2F0.8.7%0Asolc-0.8.13%20is%20not%20recommended%20for%20deployment%0AReference%3A%20https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FDetector-Documentation%23incorrect-versions-of-solidity%0A%0AsetNumber(uint256)%20should%20be%20declared%20external%3A%0A%20%20%20%20%20%20%20%20-%20Counter.setNumber(uint256)%20(Counter.sol%237-9)%0Aincrement()%20should%20be%20declared%20external%3A%0A%20%20%20%20%20%20%20%20-%20Counter.increment()%20(Counter.sol%2311-13)%0AReference%3A%20https%3A%2F%2Fgithub.com%2Fcrytic%2Fslither%2Fwiki%2FDetector-Documentation%23public-function-that-could-be-declared-external%0ACounter.sol%20analyzed%20(1%20contracts%20with%2078%20detectors)%2C%204%20result(s)%20found%0A%60%60%60%0A%0ASlither%20also%20has%20a%20%5BGitHub%20Action%5D(https%3A%2F%2Fgithub.com%2Fmarketplace%2Factions%2Fslither-action)%20for%20CI%2FCD.%0A%0A%23%23%23%20Aderyn%0A%0ATo%20test%20your%20project%20using%20%5Baderyn%5D(https%3A%2F%2Fgithub.com%2Fcyfrin%2Faderyn)%2C%20install%20the%20%5BVS%20Code%20extension%5D(https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DCyfrin.aderyn%26ssr%3Dfalse%23overview)%20supported%20by%20Cyfrin.%0A%0ATo%20run%20the%20tool%20manually%2C%20follow%20the%20%5BQuick%20Start%5D(https%3A%2F%2Fcyfrin.gitbook.io%2Fcyfrin-docs%2Faderyn-cli%2Fquickstart)%20example%20with%20video%20guide.%0A%0A%60%60%60bash%0Acd%20path%2Fto%2Fsolidity%2Fproject%2Froot%0Aaderyn%0A%60%60%60%0A%0AExplore%20more%20CLI%20options%20%5Bhere%5D(https%3A%2F%2Fcyfrin.gitbook.io%2Fcyfrin-docs%2Fcli-options).%0A%0A%23%23%23%20Mythril%0A%0ATo%20test%20your%20project%20using%20%5Bmythril%5D(https%3A%2F%2Fgithub.com%2FConsenSys%2Fmythril)%2C%20here%20is%20a%20sample%20%60mythril.config.json%60%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22remappings%22%3A%20%5B%22ds-test%2F%3Dlib%2Fds-test%2Fsrc%2F%22%2C%20%22forge-std%2F%3Dlib%2Fforge-std%2Fsrc%2F%22%5D%2C%0A%20%20%22optimizer%22%3A%20%7B%0A%20%20%20%20%22enabled%22%3A%20true%2C%0A%20%20%20%20%22runs%22%3A%20200%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0ANote%2C%20you%20need%20switch%20%60rustc%60%20to%20nightly%20to%20install%20%60mythril%60%3A%0A%0A%60%60%60%0Arustup%20default%20nightly%0Apip3%20install%20mythril%0Amyth%20analyze%20src%2FContract.sol%20--solc-json%20mythril.config.json%0A%60%60%60%0A%0ASee%20the%20%5Bmythril%20docs%5D(https%3A%2F%2Fmythril-classic.readthedocs.io%2Fen%2Fdevelop%2F)%20for%20more%20information.%0A%0AYou%20can%20pass%20custom%20Solc%20compiler%20output%20to%20Mythril%20using%20the%20%60--solc-json%60%20flag.%20For%20example%3A%0A%0A%60%60%60bash%0Amyth%20analyze%20src%2FCounter.sol%20--solc-json%20mythril.config.json%0A.%0A.%0Amythril.laser.plugin.loader%20%5BINFO%5D%3A%20Loading%20laser%20plugin%3A%20coverage%0Amythril.laser.plugin.loader%20%5BINFO%5D%3A%20Loading%20laser%20plugin%3A%20mutation-pruner%0A.%0A.%0AAchieved%2011.56%25%20coverage%20for%20code%3A%20608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220659fce8aadca285da9206b61f95de294d3958c409cc3011ded856f421885867464736f6c63430008100033%0Amythril.laser.plugin.plugins.coverage.coverage_plugin%20%5BINFO%5D%3A%20Achieved%2090.13%25%20coverage%20for%20code%3A%206080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220659fce8aadca285da9206b61f95de294d3958c409cc3011ded856f421885867464736f6c63430008100033%0Amythril.laser.plugin.plugins.instruction_profiler%20%5BINFO%5D%3A%20Total%3A%201.0892839431762695%20s%0A%5BADD%20%20%20%20%20%20%20%20%20%5D%20%20%200.9974%20%25%2C%20%20nr%20%20%20%20%20%209%2C%20%20total%20%20%200.0109%20s%2C%20%20avg%20%20%200.0012%20s%2C%20%20min%20%20%200.0011%20s%2C%20%20max%20%20%200.0013%20s%0A.%0A.%0A%5BSWAP1%20%20%20%20%20%20%20%5D%20%20%201.8446%20%25%2C%20%20nr%20%20%20%20%2018%2C%20%20total%20%20%200.0201%20s%2C%20%20avg%20%20%200.0011%20s%2C%20%20min%20%20%200.0010%20s%2C%20%20max%20%20%200.0013%20s%0A%5BSWAP2%20%20%20%20%20%20%20%5D%20%20%200.8858%20%25%2C%20%20nr%20%20%20%20%20%209%2C%20%20total%20%20%200.0096%20s%2C%20%20avg%20%20%200.0011%20s%2C%20%20min%20%20%200.0010%20s%2C%20%20max%20%20%200.0011%20s%0A%0Amythril.analysis.security%20%5BINFO%5D%3A%20Starting%20analysis%0Amythril.mythril.mythril_analyzer%20%5BINFO%5D%3A%20Solver%20statistics%3A%0AQuery%20count%3A%2061%0ASolver%20time%3A%203.6820807456970215%0AThe%20analysis%20was%20completed%20successfully.%20No%20issues%20were%20detected.%0A%60%60%60%0A%0AThe%20findings%20will%20be%20listed%20at%20the%20end%20of%20this%20output%20if%20any.%20Since%20the%20default%20%60Counter.sol%60%20doesn't%20have%20any%20logic%2C%20%60mythx%60%20reports%20that%20no%20issues%20were%20found.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./vscode-BU3oXwPP.js"),__vite__mapDeps([11,1])),path:"/config/vscode",type:"mdx",filePath:"config/vscode.md",content:"%23%23%20Integrating%20with%20VSCode%0A%0AYou%20can%20get%20Solidity%20support%20for%20Visual%20Studio%20Code%20by%20installing%20the%20%5BVSCode%20Solidity%20extension%5D(https%3A%2F%2Fgithub.com%2Fjuanfranblanco%2Fvscode-solidity).%0A%0ATo%20make%20the%20extension%20play%20nicely%20with%20Foundry%2C%20you%20may%20have%20to%20tweak%20a%20couple%20of%20things.%0A%0A%23%23%23%201.%20Remappings%0A%0AYou%20may%20want%20to%20place%20your%20remappings%20in%20%60remappings.txt%60.%0A%0AIf%20they%20are%20already%20in%20%60foundry.toml%60%2C%20copy%20them%20over%20and%20use%20%60remappings.txt%60%20instead.%20If%20you%20just%20use%20the%20autogenerated%20remappings%20that%20Foundry%20provides%2C%20run%20%60forge%20remappings%20%3E%20remappings.txt%60.%0A%0A%23%23%23%202.%20Dependencies%0A%0AYou%20may%20have%20to%20add%20the%20following%20to%20your%20%60.vscode%2Fsettings.json%60%20for%20the%20extension%20to%20find%20your%20dependencies%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22solidity.packageDefaultDependenciesContractsDirectory%22%3A%20%22src%22%2C%0A%20%20%22solidity.packageDefaultDependenciesDirectory%22%3A%20%22lib%22%0A%7D%0A%60%60%60%0A%0AWhere%20%60src%60%20is%20the%20source%20code%20directory%20and%20%60lib%60%20is%20your%20dependency%20directory.%0A%0A%23%23%23%203.%20Formatter%0A%0ATo%20enable%20the%20built-in%20formatter%20that%20comes%20with%20Foundry%20to%20automatically%20format%20your%20code%20on%20save%2C%20you%20can%20add%20the%20following%20settings%20to%20your%20%60.vscode%2Fsettings.json%60%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22editor.formatOnSave%22%3A%20true%2C%0A%20%20%22%5Bsolidity%5D%22%3A%20%7B%0A%20%20%20%20%22editor.defaultFormatter%22%3A%20%22JuanBlanco.solidity%22%0A%20%20%7D%2C%0A%20%20%22solidity.formatter%22%3A%20%22forge%22%0A%7D%0A%60%60%60%0A%0ATo%20configure%20the%20formatter%20settings%2C%20refer%20to%20the%20%5BFormatter%5D(%2Fconfig%2Freference%2Fformatter)%20reference.%0A%0A%23%23%23%204.%20Solc%20Version%0A%0AFinally%2C%20it%20is%20recommended%20to%20specify%20a%20Solidity%20compiler%20version%3A%0A%0A%60%60%60json%0A%22solidity.compileUsingRemoteVersion%22%3A%20%22v0.8.17%22%0A%60%60%60%0A%0ATo%20get%20Foundry%20in%20line%20with%20the%20chosen%20version%2C%20add%20the%20following%20to%20your%20%60default%60%20profile%20in%20%60foundry.toml%60.%0A%0A%60%60%60toml%0Asolc%20%3D%20%220.8.17%22%0A%60%60%60%0A%0A%23%23%23%20Example%20of%20using%20OpenZeppelin%20contracts%20and%20non-standard%20project%20layout.%0A%0A%60%60%60bash%0A.%0A%E2%94%94%E2%94%80%E2%94%80%20project%0A%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20contracts%0A%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20lib%0A%20%20%20%20%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20forge-std%0A%20%20%20%20%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20openzeppelin-contracts%0A%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20script%0A%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20src%0A%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20test%0A%60%60%60%0A%0AAdd%20line%20to%20%60remappings.txt%60%20file%20(%5B%60forge%20remapping%60%5D(%2Fguides%2Fproject-setup%2Fdependencies%23remapping-dependencies))%3A%0A%0A%60%60%60solidity%0A%40openzeppelin%2F%3Dlib%2Fopenzeppelin-contracts%2F%0A%60%60%60%0A%0AAdd%20line%20to%20%60.vscode%2Fsettings.json%60%20file%20(solidity%20extension%20settings)%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22solidity.remappings%22%3A%20%5B%0A%20%20%20%20%22%40openzeppelin%2F%3Dproject%2Fcontracts%2Flib%2Fopenzeppelin-contracts%2F%22%0A%20%20%5D%0A%7D%0A%60%60%60%0A%0ANow%20all%20contracts%20from%20the%20OpenZeppelin%20documentation%20can%20be%20used.%0A%0A%60%60%60javascript%0Aimport%20%7B%20ERC20%20%7D%20from%20%22%40openzeppelin%2Fcontracts%2Ftoken%2FERC20%2FERC20.sol%22%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./vscode-BU3oXwPP.js"),__vite__mapDeps([11,1])),path:"/config/vscode.html",type:"mdx",filePath:"config/vscode.md",content:"%23%23%20Integrating%20with%20VSCode%0A%0AYou%20can%20get%20Solidity%20support%20for%20Visual%20Studio%20Code%20by%20installing%20the%20%5BVSCode%20Solidity%20extension%5D(https%3A%2F%2Fgithub.com%2Fjuanfranblanco%2Fvscode-solidity).%0A%0ATo%20make%20the%20extension%20play%20nicely%20with%20Foundry%2C%20you%20may%20have%20to%20tweak%20a%20couple%20of%20things.%0A%0A%23%23%23%201.%20Remappings%0A%0AYou%20may%20want%20to%20place%20your%20remappings%20in%20%60remappings.txt%60.%0A%0AIf%20they%20are%20already%20in%20%60foundry.toml%60%2C%20copy%20them%20over%20and%20use%20%60remappings.txt%60%20instead.%20If%20you%20just%20use%20the%20autogenerated%20remappings%20that%20Foundry%20provides%2C%20run%20%60forge%20remappings%20%3E%20remappings.txt%60.%0A%0A%23%23%23%202.%20Dependencies%0A%0AYou%20may%20have%20to%20add%20the%20following%20to%20your%20%60.vscode%2Fsettings.json%60%20for%20the%20extension%20to%20find%20your%20dependencies%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22solidity.packageDefaultDependenciesContractsDirectory%22%3A%20%22src%22%2C%0A%20%20%22solidity.packageDefaultDependenciesDirectory%22%3A%20%22lib%22%0A%7D%0A%60%60%60%0A%0AWhere%20%60src%60%20is%20the%20source%20code%20directory%20and%20%60lib%60%20is%20your%20dependency%20directory.%0A%0A%23%23%23%203.%20Formatter%0A%0ATo%20enable%20the%20built-in%20formatter%20that%20comes%20with%20Foundry%20to%20automatically%20format%20your%20code%20on%20save%2C%20you%20can%20add%20the%20following%20settings%20to%20your%20%60.vscode%2Fsettings.json%60%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22editor.formatOnSave%22%3A%20true%2C%0A%20%20%22%5Bsolidity%5D%22%3A%20%7B%0A%20%20%20%20%22editor.defaultFormatter%22%3A%20%22JuanBlanco.solidity%22%0A%20%20%7D%2C%0A%20%20%22solidity.formatter%22%3A%20%22forge%22%0A%7D%0A%60%60%60%0A%0ATo%20configure%20the%20formatter%20settings%2C%20refer%20to%20the%20%5BFormatter%5D(%2Fconfig%2Freference%2Fformatter)%20reference.%0A%0A%23%23%23%204.%20Solc%20Version%0A%0AFinally%2C%20it%20is%20recommended%20to%20specify%20a%20Solidity%20compiler%20version%3A%0A%0A%60%60%60json%0A%22solidity.compileUsingRemoteVersion%22%3A%20%22v0.8.17%22%0A%60%60%60%0A%0ATo%20get%20Foundry%20in%20line%20with%20the%20chosen%20version%2C%20add%20the%20following%20to%20your%20%60default%60%20profile%20in%20%60foundry.toml%60.%0A%0A%60%60%60toml%0Asolc%20%3D%20%220.8.17%22%0A%60%60%60%0A%0A%23%23%23%20Example%20of%20using%20OpenZeppelin%20contracts%20and%20non-standard%20project%20layout.%0A%0A%60%60%60bash%0A.%0A%E2%94%94%E2%94%80%E2%94%80%20project%0A%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20contracts%0A%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20lib%0A%20%20%20%20%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20forge-std%0A%20%20%20%20%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20openzeppelin-contracts%0A%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20script%0A%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20src%0A%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20test%0A%60%60%60%0A%0AAdd%20line%20to%20%60remappings.txt%60%20file%20(%5B%60forge%20remapping%60%5D(%2Fguides%2Fproject-setup%2Fdependencies%23remapping-dependencies))%3A%0A%0A%60%60%60solidity%0A%40openzeppelin%2F%3Dlib%2Fopenzeppelin-contracts%2F%0A%60%60%60%0A%0AAdd%20line%20to%20%60.vscode%2Fsettings.json%60%20file%20(solidity%20extension%20settings)%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22solidity.remappings%22%3A%20%5B%0A%20%20%20%20%22%40openzeppelin%2F%3Dproject%2Fcontracts%2Flib%2Fopenzeppelin-contracts%2F%22%0A%20%20%5D%0A%7D%0A%60%60%60%0A%0ANow%20all%20contracts%20from%20the%20OpenZeppelin%20documentation%20can%20be%20used.%0A%0A%60%60%60javascript%0Aimport%20%7B%20ERC20%20%7D%20from%20%22%40openzeppelin%2Fcontracts%2Ftoken%2FERC20%2FERC20.sol%22%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./vyper-DFdlNt4t.js"),__vite__mapDeps([12,1])),path:"/config/vyper",type:"mdx",filePath:"config/vyper.md",content:"%23%23%20Vyper%20support%0A%0AFoundry%20supports%20compiling%20and%20testing%20Vyper%20contracts.%0A%0A%23%23%23%201.%20Compilation%0A%0AYou%20can%20install%20Vyper%20by%20following%20the%20instructions%20%5Bhere%5D(https%3A%2F%2Fvyper.readthedocs.io%2Fen%2Fstable%2Finstalling-vyper.html).%20If%20you%20have%20%60vyper%60%20available%20in%20your%20PATH%2C%20foundry%20will%20automatically%20use%20it.%0A%0AOtherwise%2C%20you%20can%20set%20the%20path%20to%20%60vyper%60%20in%20your%20%60foundry.toml%60%20by%20adding%20the%20following%3A%0A%60%60%60toml%0A%5Bvyper%5D%0Apath%20%3D%20%22%2Fpath%2Fto%2Fvyper%22%0A%60%60%60%0A%0A%23%23%23%23%20Vyper%20libraries%20via%20%60forge%20install%60%0A%0AIf%20you%20want%20an%20import%20like%20the%20following%20to%20work%20in%20your%20Vyper%20contract%3A%0A%0A%60%60%60vyper%0Afrom%20snekmate.utils%20import%20eip712_domain_separator%0A%60%60%60%0A%0AYou%20can%20install%20Vyper%20the%20desired%20library%20via%20%60forge%20install%60%20e.g.%20%60forge%20install%20pcaversaccio%2Fsnekmate%60.%0A%0AYou%20then%20need%20to%20adjust%20your%20%60foundry.toml%60%20as%20follows%20(replacing%20%22snekmate%22%20with%20the%20name%20of%20your%0Adesired%20package)%3A%0A%0A%60%60%60toml%0Askip%20%3D%20%5B%22**%2Flib%2Fsnekmate%2F**%22%5D%0Alibs%20%3D%20%5B%22lib%22%2C%20%22lib%2Fsnekmate%2Fsrc%22%5D%0A%60%60%60%0A%0A%23%23%23%23%20Vyper%20libraries%20via%20%60pip%60%0A%0AAlternatively%20if%20you%20want%20to%20install%20the%20package%20via%20%60pip%60%20into%20your%20system's%20python%20configuration%0Aor%20a%20virtual%20environment%20you%20can%20point%20foundry%20to%20it%20by%20modifying%20your%20%60foundry.toml%60%20as%20follows%3A%0A%0A%60%60%60toml%0A%23%20Assuming%20you%20have%20a%20virtual%20environment%20in%20%60.venv%60%20and%20are%20using%20Python%203.12%0Alibs%20%3D%20%5B%22lib%22%2C%20%22.venv%2Flib%2Fpython3.12%2Fsite-packages%2F%22%5D%0A%60%60%60%0A%0ANote%20that%20compatible%20alternative%20python%20package%20managers%20like%20%60uv%60%20will%20work%20too.%0A%0A%23%23%23%202.%20Solidity%20tests%0A%0ALet's%20write%20a%20test%20for%20this%20simple%20Counter%20contract%3A%0A%0A%60%60%60vyper%0Anumber%3A%20public(uint256)%0A%0A%40deploy%0A%40payable%0Adef%20__init__(initial_number%3A%20uint256)%3A%0A%20%20%20%20self.number%20%3D%20initial_number%0A%0A%40external%0Adef%20set_number(new_number%3A%20uint256)%3A%0A%20%20%20%20self.number%20%3D%20new_number%0A%0A%40external%0Adef%20increment()%3A%0A%20%20%20%20self.number%20%2B%3D%201%0A%60%60%60%0A%0AWe%20can%20deploy%20it%20by%20using%20the%20%60deployCode%60%20cheatcode%20from%20%60forge-std%60%20and%20test%20it%20with%20the%20following%20Solidity%20test%3A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Ainterface%20ICounter%20%7B%0A%20%20%20%20function%20increment()%20external%3B%0A%20%20%20%20function%20number()%20external%20view%20returns%20(uint256)%3B%0A%20%20%20%20function%20set_number(uint256%20newNumber)%20external%3B%0A%7D%0A%0Acontract%20CounterTest%20is%20Test%20%7B%0A%20%20%20%20ICounter%20public%20counter%3B%0A%20%20%20%20uint256%20initialNumber%20%3D%205%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20counter%20%3D%20ICounter(deployCode(%22Counter%22%2C%20abi.encode(initialNumber)))%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.number()%2C%20initialNumber)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20test_Increment()%20public%20%7B%0A%20%20%20%20%20%20%20%20counter.increment()%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.number()%2C%20initialNumber%20%2B%201)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testFuzz_SetNumber(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20counter.set_number(x)%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.number()%2C%20x)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%203.%20Deploying%0A%0AYou%20can%20deploy%20Vyper%20contracts%20via%20%60forge%20create%60%20command%3A%0A%60%60%60bash%0Aforge%20create%20Counter%20--constructor-args%20'1'%20--rpc-url%20%24RPC_URL%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0AAnd%20with%20%60deployCode%60%20you%20can%20deploy%20Vyper%20contracts%20in%20your%20scripts%20as%20well%3A%0A%60%60%60solidity%0Aimport%20%7BScript%7D%20from%20%22forge-std%2FScript.sol%22%3B%0A%0Acontract%20CounterScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.broadcast()%3B%0A%20%20%20%20%20%20%20%20deployCode(%22src%2FCounter.vy%22%2C%20abi.encode(1))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%204.%20Vyper%20scripts%0A%0AYou%20can%20write%20Vyper%20scripts%20in%20the%20same%20way%20as%20Solidity%20scripts%3A%0A%60%60%60vyper%0Ainterface%20Vm%3A%0A%20%20%20%20def%20startBroadcast()%3A%20nonpayable%0A%0Ainterface%20ICounter%3A%0A%20%20%20%20def%20increment()%3A%20nonpayable%0A%20%20%20%20def%20number()%20-%3E%20uint256%3A%20view%0A%0Avm%3A%20constant(Vm)%20%3D%20Vm(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D)%0A%0A%40external%0Adef%20run(counter%3A%20address)%3A%0A%20%20%20%20number_before%3A%20uint256%20%3D%20staticcall%20ICounter(counter).number()%0A%0A%20%20%20%20extcall%20vm.startBroadcast()%0A%20%20%20%20extcall%20ICounter(counter).increment()%0A%0A%20%20%20%20number_after%3A%20uint256%20%3D%20staticcall%20ICounter(counter).number()%0A%0A%20%20%20%20assert%20number_after%20%3D%3D%20number_before%20%2B%201%0A%60%60%60%0A%0ASuch%20script%20can%20be%20run%20with%20the%20following%20command%3A%0A%60%60%60bash%0Aforge%20script%20script%2FIncrement.s.vy%20%20--sig%20'run'%20'%3Ccounter%20address%3E'%20--rpc-url%20%24RPC_URL%20--broadcast%20%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%23%23%23%205.%20Limitations%0A%0A-%20While%20you%20can%20write%20and%20run%20tests%20and%20scripts%20in%20Vyper%2C%20there%20is%20no%20%60new%60%20keyword%20in%20Vyper%20allowing%20you%20to%20deploy%20contracts.%20This%20will%20be%20addressed%20in%20the%20future%20with%20new%20cheatcodes.%0A-%20Vyper%20does%20not%20allow%20overloads%20with%20the%20same%20names%20but%20different%20parameter%20types.%20Thus%20some%20cheatcode%20combinations%20might%20require%20workarounds%20to%20be%20used.%20(e.g.%20%60startBroadcast(address%20sender))%60%20and%20%60startBroadcast(uint256%20pk)%60)%0A-%20%60forge%20coverage%60%20currently%20does%20not%20support%20Vyper%20contracts.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./vyper-DFdlNt4t.js"),__vite__mapDeps([12,1])),path:"/config/vyper.html",type:"mdx",filePath:"config/vyper.md",content:"%23%23%20Vyper%20support%0A%0AFoundry%20supports%20compiling%20and%20testing%20Vyper%20contracts.%0A%0A%23%23%23%201.%20Compilation%0A%0AYou%20can%20install%20Vyper%20by%20following%20the%20instructions%20%5Bhere%5D(https%3A%2F%2Fvyper.readthedocs.io%2Fen%2Fstable%2Finstalling-vyper.html).%20If%20you%20have%20%60vyper%60%20available%20in%20your%20PATH%2C%20foundry%20will%20automatically%20use%20it.%0A%0AOtherwise%2C%20you%20can%20set%20the%20path%20to%20%60vyper%60%20in%20your%20%60foundry.toml%60%20by%20adding%20the%20following%3A%0A%60%60%60toml%0A%5Bvyper%5D%0Apath%20%3D%20%22%2Fpath%2Fto%2Fvyper%22%0A%60%60%60%0A%0A%23%23%23%23%20Vyper%20libraries%20via%20%60forge%20install%60%0A%0AIf%20you%20want%20an%20import%20like%20the%20following%20to%20work%20in%20your%20Vyper%20contract%3A%0A%0A%60%60%60vyper%0Afrom%20snekmate.utils%20import%20eip712_domain_separator%0A%60%60%60%0A%0AYou%20can%20install%20Vyper%20the%20desired%20library%20via%20%60forge%20install%60%20e.g.%20%60forge%20install%20pcaversaccio%2Fsnekmate%60.%0A%0AYou%20then%20need%20to%20adjust%20your%20%60foundry.toml%60%20as%20follows%20(replacing%20%22snekmate%22%20with%20the%20name%20of%20your%0Adesired%20package)%3A%0A%0A%60%60%60toml%0Askip%20%3D%20%5B%22**%2Flib%2Fsnekmate%2F**%22%5D%0Alibs%20%3D%20%5B%22lib%22%2C%20%22lib%2Fsnekmate%2Fsrc%22%5D%0A%60%60%60%0A%0A%23%23%23%23%20Vyper%20libraries%20via%20%60pip%60%0A%0AAlternatively%20if%20you%20want%20to%20install%20the%20package%20via%20%60pip%60%20into%20your%20system's%20python%20configuration%0Aor%20a%20virtual%20environment%20you%20can%20point%20foundry%20to%20it%20by%20modifying%20your%20%60foundry.toml%60%20as%20follows%3A%0A%0A%60%60%60toml%0A%23%20Assuming%20you%20have%20a%20virtual%20environment%20in%20%60.venv%60%20and%20are%20using%20Python%203.12%0Alibs%20%3D%20%5B%22lib%22%2C%20%22.venv%2Flib%2Fpython3.12%2Fsite-packages%2F%22%5D%0A%60%60%60%0A%0ANote%20that%20compatible%20alternative%20python%20package%20managers%20like%20%60uv%60%20will%20work%20too.%0A%0A%23%23%23%202.%20Solidity%20tests%0A%0ALet's%20write%20a%20test%20for%20this%20simple%20Counter%20contract%3A%0A%0A%60%60%60vyper%0Anumber%3A%20public(uint256)%0A%0A%40deploy%0A%40payable%0Adef%20__init__(initial_number%3A%20uint256)%3A%0A%20%20%20%20self.number%20%3D%20initial_number%0A%0A%40external%0Adef%20set_number(new_number%3A%20uint256)%3A%0A%20%20%20%20self.number%20%3D%20new_number%0A%0A%40external%0Adef%20increment()%3A%0A%20%20%20%20self.number%20%2B%3D%201%0A%60%60%60%0A%0AWe%20can%20deploy%20it%20by%20using%20the%20%60deployCode%60%20cheatcode%20from%20%60forge-std%60%20and%20test%20it%20with%20the%20following%20Solidity%20test%3A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Ainterface%20ICounter%20%7B%0A%20%20%20%20function%20increment()%20external%3B%0A%20%20%20%20function%20number()%20external%20view%20returns%20(uint256)%3B%0A%20%20%20%20function%20set_number(uint256%20newNumber)%20external%3B%0A%7D%0A%0Acontract%20CounterTest%20is%20Test%20%7B%0A%20%20%20%20ICounter%20public%20counter%3B%0A%20%20%20%20uint256%20initialNumber%20%3D%205%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20counter%20%3D%20ICounter(deployCode(%22Counter%22%2C%20abi.encode(initialNumber)))%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.number()%2C%20initialNumber)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20test_Increment()%20public%20%7B%0A%20%20%20%20%20%20%20%20counter.increment()%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.number()%2C%20initialNumber%20%2B%201)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testFuzz_SetNumber(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20counter.set_number(x)%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.number()%2C%20x)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%203.%20Deploying%0A%0AYou%20can%20deploy%20Vyper%20contracts%20via%20%60forge%20create%60%20command%3A%0A%60%60%60bash%0Aforge%20create%20Counter%20--constructor-args%20'1'%20--rpc-url%20%24RPC_URL%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0AAnd%20with%20%60deployCode%60%20you%20can%20deploy%20Vyper%20contracts%20in%20your%20scripts%20as%20well%3A%0A%60%60%60solidity%0Aimport%20%7BScript%7D%20from%20%22forge-std%2FScript.sol%22%3B%0A%0Acontract%20CounterScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.broadcast()%3B%0A%20%20%20%20%20%20%20%20deployCode(%22src%2FCounter.vy%22%2C%20abi.encode(1))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%204.%20Vyper%20scripts%0A%0AYou%20can%20write%20Vyper%20scripts%20in%20the%20same%20way%20as%20Solidity%20scripts%3A%0A%60%60%60vyper%0Ainterface%20Vm%3A%0A%20%20%20%20def%20startBroadcast()%3A%20nonpayable%0A%0Ainterface%20ICounter%3A%0A%20%20%20%20def%20increment()%3A%20nonpayable%0A%20%20%20%20def%20number()%20-%3E%20uint256%3A%20view%0A%0Avm%3A%20constant(Vm)%20%3D%20Vm(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D)%0A%0A%40external%0Adef%20run(counter%3A%20address)%3A%0A%20%20%20%20number_before%3A%20uint256%20%3D%20staticcall%20ICounter(counter).number()%0A%0A%20%20%20%20extcall%20vm.startBroadcast()%0A%20%20%20%20extcall%20ICounter(counter).increment()%0A%0A%20%20%20%20number_after%3A%20uint256%20%3D%20staticcall%20ICounter(counter).number()%0A%0A%20%20%20%20assert%20number_after%20%3D%3D%20number_before%20%2B%201%0A%60%60%60%0A%0ASuch%20script%20can%20be%20run%20with%20the%20following%20command%3A%0A%60%60%60bash%0Aforge%20script%20script%2FIncrement.s.vy%20%20--sig%20'run'%20'%3Ccounter%20address%3E'%20--rpc-url%20%24RPC_URL%20--broadcast%20%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%23%23%23%205.%20Limitations%0A%0A-%20While%20you%20can%20write%20and%20run%20tests%20and%20scripts%20in%20Vyper%2C%20there%20is%20no%20%60new%60%20keyword%20in%20Vyper%20allowing%20you%20to%20deploy%20contracts.%20This%20will%20be%20addressed%20in%20the%20future%20with%20new%20cheatcodes.%0A-%20Vyper%20does%20not%20allow%20overloads%20with%20the%20same%20names%20but%20different%20parameter%20types.%20Thus%20some%20cheatcode%20combinations%20might%20require%20workarounds%20to%20be%20used.%20(e.g.%20%60startBroadcast(address%20sender))%60%20and%20%60startBroadcast(uint256%20pk)%60)%0A-%20%60forge%20coverage%60%20currently%20does%20not%20support%20Vyper%20contracts.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-DNP4FZ84.js"),__vite__mapDeps([13,1])),path:"/chisel/overview",type:"mdx",filePath:"chisel/overview.md",content:"---%0Adescription%3A%20Chisel%20is%20a%20fast%20Solidity%20REPL%20for%20interactive%20prototyping%20and%20debugging%20with%20verbose%20feedback%20and%20project%20integration.%0A---%0A%0A%23%23%20Chisel%0A%0AChisel%20is%20a%20fast%2C%20utilitarian%2C%20and%20verbose%20Solidity%20REPL.%0A%0AThe%20%60chisel%60%20binary%20can%20be%20used%20both%20within%20and%20outside%20of%20a%20Foundry%20project.%0AIf%20the%20binary%20is%20executed%20in%20a%20Foundry%20project%20root%2C%20Chisel%20will%20inherit%20the%20project's%20configuration%20options.%0A%0AChisel%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60forge%60%2C%20%60cast%60%2C%20and%20%60anvil%60.%20If%20you%20haven't%20installed%20Foundry%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0A%0A%23%23%23%20Getting%20started%0A%0ATo%20use%20Chisel%2C%20simply%20type%20%60chisel%60.%0A%0A%60%60%60sh%0Achisel%0A%60%60%60%0A%0AFrom%20here%2C%20start%20writing%20Solidity%20code!%20Chisel%20will%20offer%20verbose%20feedback%20on%20each%20input.%0A%0ACreate%20a%20variable%20%60a%60%20and%20query%20it%3A%0A%0A%60%60%60console%0A%E2%9E%9C%20uint256%20a%20%3D%20123%3B%0A%E2%9E%9C%20a%0AType%3A%20uint256%0A%E2%94%9C%20Hex%3A%200x7b%0A%E2%94%9C%20Hex%20(full%20word)%3A%200x000000000000000000000000000000000000000000000000000000000000007b%0A%E2%94%94%20Decimal%3A%20123%0A%60%60%60%0A%0AFinally%2C%20run%20%60!source%60%20to%20see%20%60a%60%20was%20applied%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.28%3B%0A%0Aimport%20%7BVm%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%0Acontract%20REPL%20%7B%0A%20%20%20%20Vm%20internal%20constant%20vm%20%3D%20Vm(address(uint160(uint256(keccak256(%22hevm%20cheat%20code%22)))))%3B%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20REPL%20contract%20entry%20point%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20a%20%3D%20123%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20see%20available%20commands%2C%20type%20%60!help%60%20within%20the%20REPL.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60chisel%60%20Reference%5D(%2Fchisel%2Freference)%20for%20in%20depth%20information%20on%20Chisel%20and%20its%20capabilities.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-DNP4FZ84.js"),__vite__mapDeps([13,1])),path:"/chisel/overview.html",type:"mdx",filePath:"chisel/overview.md",content:"---%0Adescription%3A%20Chisel%20is%20a%20fast%20Solidity%20REPL%20for%20interactive%20prototyping%20and%20debugging%20with%20verbose%20feedback%20and%20project%20integration.%0A---%0A%0A%23%23%20Chisel%0A%0AChisel%20is%20a%20fast%2C%20utilitarian%2C%20and%20verbose%20Solidity%20REPL.%0A%0AThe%20%60chisel%60%20binary%20can%20be%20used%20both%20within%20and%20outside%20of%20a%20Foundry%20project.%0AIf%20the%20binary%20is%20executed%20in%20a%20Foundry%20project%20root%2C%20Chisel%20will%20inherit%20the%20project's%20configuration%20options.%0A%0AChisel%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60forge%60%2C%20%60cast%60%2C%20and%20%60anvil%60.%20If%20you%20haven't%20installed%20Foundry%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0A%0A%23%23%23%20Getting%20started%0A%0ATo%20use%20Chisel%2C%20simply%20type%20%60chisel%60.%0A%0A%60%60%60sh%0Achisel%0A%60%60%60%0A%0AFrom%20here%2C%20start%20writing%20Solidity%20code!%20Chisel%20will%20offer%20verbose%20feedback%20on%20each%20input.%0A%0ACreate%20a%20variable%20%60a%60%20and%20query%20it%3A%0A%0A%60%60%60console%0A%E2%9E%9C%20uint256%20a%20%3D%20123%3B%0A%E2%9E%9C%20a%0AType%3A%20uint256%0A%E2%94%9C%20Hex%3A%200x7b%0A%E2%94%9C%20Hex%20(full%20word)%3A%200x000000000000000000000000000000000000000000000000000000000000007b%0A%E2%94%94%20Decimal%3A%20123%0A%60%60%60%0A%0AFinally%2C%20run%20%60!source%60%20to%20see%20%60a%60%20was%20applied%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.28%3B%0A%0Aimport%20%7BVm%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%0Acontract%20REPL%20%7B%0A%20%20%20%20Vm%20internal%20constant%20vm%20%3D%20Vm(address(uint160(uint256(keccak256(%22hevm%20cheat%20code%22)))))%3B%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20REPL%20contract%20entry%20point%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20a%20%3D%20123%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20see%20available%20commands%2C%20type%20%60!help%60%20within%20the%20REPL.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60chisel%60%20Reference%5D(%2Fchisel%2Freference)%20for%20in%20depth%20information%20on%20Chisel%20and%20its%20capabilities.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./reference-Z9HIgxPn.js"),__vite__mapDeps([14,1])),path:"/chisel/reference",type:"mdx",filePath:"chisel/reference.md",content:"%23%23%20chisel%0A%0A%23%23%23%20NAME%0A%0A%60chisel%60%20-%20Test%20and%20receive%20verbose%20feedback%20on%20Solidity%20inputs%20within%20a%20REPL%20environment.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60chisel%60%20%5B*options*%5D%0A%0A%23%23%23%23%20Subcommands%20(bin)%0A%0A1.%20%60chisel%20list%60%0A%20%20%20-%20Displays%20all%20cached%20sessions%20stored%20in%20%60~%2F.foundry%2Fcache%2Fchisel%60.%0A1.%20%60chisel%20load%20%3Cid%3E%60%0A%20%20%20-%20If%20a%20cached%20session%20with%20%60id%20%3D%20%3Cid%3E%60%20exists%2C%20launches%20the%20REPL%20and%20loads%20the%20corresponding%20session.%0A1.%20%60chisel%20view%20%3Cid%3E%60%0A%20%20%20-%20If%20a%20cached%20session%20with%20%60id%20%3D%20%3Cid%3E%60%20exists%2C%20displays%20the%20source%20code%20of%20the%20session's%20REPL%20contract.%0A1.%20%60chisel%20clear-cache%60%0A%20%20%20-%20Deletes%20all%20cache%20files%20within%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%20These%20sessions%20are%20unrecoverable%2C%20so%20use%20this%20command%20with%20care.%0A%0A%23%23%23%23%20Flags%0A%0ASee%20%60man%20chisel%60%20or%20%60chisel%20--help%60%20for%20all%20available%20environment%20configuration%20flags.%0A%0A%23%23%23%20DESCRIPTION%0A%0AChisel%20is%20a%20Solidity%20REPL%20(short%20for%20%22read-eval-print%20loop%22)%20that%20allows%20developers%20to%20write%0Aand%20test%20Solidity%20code%20snippets.%20It%20provides%20an%20interactive%20environment%20for%20writing%20and%20executing%0ASolidity%20code%2C%20as%20well%20as%20a%20set%20of%20built-in%20commands%20for%20working%20with%20and%20debugging%20your%20code.%20This%0Amakes%20it%20a%20useful%20tool%20for%20quickly%20testing%20and%20experimenting%20with%20Solidity%20code%20without%20having%20to%0Aspin%20up%20a%20sandbox%20foundry%20test%20suite.%0A%0A%23%23%23%20Usage%0A%0ATo%20open%20chisel%2C%20simply%20execute%20the%20%60chisel%60%20binary.%0A%0AFrom%20there%2C%20input%20valid%20Solidity%20code.%20There%20are%20two%20kinds%20of%20inputs%20to%20the%20chisel%20prompt%20apart%20from%20commands%3A%0A%0A1.%20Expressions%0A%20%20%20-%20Expressions%20are%20statements%20that%20return%20a%20value%20or%20otherwise%20can%20be%20evaluated%20on%20their%20own.%20For%20example%2C%0A%20%20%20%20%20%601%20%3C%3C%208%60%20is%20an%20expression%20that%20will%20evaluate%20to%20a%20%60uint256%60%20with%20the%20value%20%60256%60.%20Expressions%20will%20be%0A%20%20%20%20%20evaluated%20up%20front%2C%20and%20will%20not%20persist%20in%20the%20session%20state%20past%20their%20evaluation.%0A%20%20%20-%20Examples%3A%0A%20%20%20%20%20-%20%60address(0).balance%60%0A%20%20%20%20%20-%20%60abi.encode(256%2C%20bytes32(0)%2C%20%22Chisel!%22)%60%0A%20%20%20%20%20-%20%60myViewFunc(128)%60%0A%20%20%20%20%20-%20...%0A1.%20Statements%0A%0A%20%20%20-%20Statements%20are%20snippets%20of%20code%20that%20are%20meant%20to%20persist%20in%20the%20session's%20state.%20Statements%20include%0A%20%20%20%20%20variable%20definitions%2C%20calls%20to%20non-state-mutating%20functions%20that%20return%20a%20value%2C%20and%20contract%2C%20function%2C%0A%20%20%20%20%20event%2C%20error%2C%20mapping%2C%20or%20struct%20definitions.%20If%20you%20would%20like%20an%20expression%20to%20be%20evaluated%20as%20a%20statement%2C%0A%20%20%20%20%20a%20semi-colon%20(%60%3B%60)%20can%20be%20appended%20to%20the%20end.%0A%20%20%20-%20Examples%3A%0A%0A%20%20%20%20%20-%20%60uint256%20a%20%3D%200xa57b%60%0A%20%20%20%20%20-%20%60myStateMutatingFunc(128)%60%20%7C%7C%20%60myViewFunc(128)%3B%60.%20Notice%20the%20%60%3B%60%0A%20%20%20%20%20-%20%60%60%60solidity%0A%20%20%20%20%20%20%20function%20hash64(%0A%20%20%20%20%20%20%20%20%20bytes32%20_a%2C%0A%20%20%20%20%20%20%20%20%20bytes32%20_b%0A%20%20%20%20%20%20%20)%20internal%20pure%20returns%20(bytes32%20_hash)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20assembly%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Store%20the%2064%20bytes%20we%20want%20to%20hash%20in%20scratch%20space%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x00%2C%20_a)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x20%2C%20_b)%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Hash%20the%20memory%20in%20scratch%20space%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20and%20assign%20the%20result%20to%20%60_hash%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_hash%20%3A%3D%20keccak256(0x00%2C%200x40)%0A%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%60%60%60%0A%0A%20%20%20%20%20-%20%60event%20ItHappened(bytes32%20indexed%20hash)%60%0A%20%20%20%20%20-%20%60struct%20Complex256%20%7B%20uint256%20re%3B%20uint256%20im%3B%20%7D%60%0A%20%20%20%20%20-%20...%0A%0A%23%23%23%23%20Available%20Commands%0A%0A%60%60%60text%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fchisel%2Fhelp%3Aoutput%5D%0A%60%60%60%0A%0A**General**%0A%0A%60!help%60%20%7C%20%60!h%60%0A%0ADisplay%20all%20commands.%0A%0A%60!quit%60%20%7C%20%60!q%60%0A%0AQuit%20Chisel.%0A%0A%60!exec%20%3Ccommand%3E%20%5Bargs%5D%60%20%7C%20%60!e%20%3Ccommand%3E%20%5Bargs%5D%60%0A%0AExecute%20a%20shell%20command%20and%20print%20the%20output.%0A%0AExample%3A%0A%0A%60%60%60sh%0A%E2%9E%9C%20!e%20ls%0ACHANGELOG.md%0ALICENSE%0AREADME.md%0ATESTS.md%0Aartifacts%0Acache%0Acontracts%0Acrytic-export%0Adeploy%0Adeploy-config%0Adeployments%0Adist%0Aechidna.yaml%0Aforge-artifacts%0Afoundry.toml%0Ahardhat.config.ts%0Alayout-lock.json%0Anode_modules%0Apackage.json%0Ascripts%0Aslither.config.json%0Aslither.db.json%0Asrc%0Atasks%0Atest-case-generator%0Atsconfig.build.json%0Atsconfig.build.tsbuildinfo%0Atsconfig.json%0A%60%60%60%0A%0A**Session**%0A%0A%60!clear%60%20%7C%20%60!c%60%0A%0AClear%20current%20session%20source.%0A%0AUnder%20the%20hood%2C%20each%20Chisel%20session%20has%20an%20underlying%20contract%20that%20is%20altered%20as%20you%20input%20statements.%20This%20command%20clears%20this%20contract%20and%20resets%20your%20session%20to%20the%20default%20state.%0A%0A%60!source%60%20%7C%20%60!so%60%0A%0ADisplay%20the%20source%20code%20of%20the%20current%20session.%0A%0AAs%20mentioned%20above%2C%20each%20Chisel%20session%20has%20an%20underlying%20contract.%20This%20command%20will%20display%20the%20source%20code%20of%20this%20contract.%0A%0A%60!save%20%5Bid%5D%60%20%7C%20%60!s%20%5Bid%5D%60%0A%0ASave%20the%20current%20session%20to%20cache.%0A%0AChisel%20allows%20for%20caching%20sessions%2C%20which%20can%20be%20very%20useful%20if%20you%20are%20testing%20more%20complex%20logic%20in%20Chisel%20or%20if%20you%20want%20to%20return%20to%20a%20session%20at%20a%20later%20time.%20All%20cached%20Chisel%20sessions%20are%20stored%20in%20%60~%2F.foundry%2Fcache%2Fchisel%60.%0A%0AIf%20an%20%60id%60%20argument%20is%20not%20supplied%2C%20Chisel%20will%20automatically%20assign%20a%20numerical%20ID%20to%20the%20session%20you%20are%20saving.%0A%0A%60!load%20%3Cid%3E%60%20%7C%20%60!l%20%3Cid%3E%60%0A%0ALoad%20a%20previous%20session%20ID%20from%20cache.%0A%0AThis%20command%20will%20load%20a%20previously%20cached%20session%20from%20the%20cache.%20Along%20with%20the%20session's%20source%2C%20all%20environment%20settings%20will%20also%20be%20loaded.%20The%20%60id%60%20argument%20must%20correspond%20with%20an%20existing%20cached%20session%20in%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%0A%0A%60!list%60%20%7C%20%60!ls%60%0A%0AList%20all%20cached%20sessions.%0A%0AThis%20command%20will%20display%20all%20cached%20chisel%20sessions%20within%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%0A%0A%60!clearcache%60%20%7C%20%60!cc%60%0A%0AClear%20the%20chisel%20cache%20of%20all%20stored%20sessions.%0A%0ADeletes%20all%20cache%20files%20within%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%20These%20sessions%20are%20unrecoverable%2C%20so%20use%20this%20command%20with%20care.%0A%0A%60!export%60%20%7C%20%60!ex%60%0A%0AExport%20the%20current%20session%20source%20to%20a%20script%20file.%0A%0AIf%20%60chisel%60%20was%20executed%20from%20the%20root%20directory%20of%20a%20foundry%20project%2C%20it%20is%20possible%20to%20export%20your%20current%20session%20to%20a%20foundry%20script%20in%20the%20%60scripts%60%20dir%20of%20your%20project.%0A%0A%60!fetch%20%3Caddr%3E%20%3Cname%3E%60%20%7C%20%60!fe%20%3Caddr%3E%20%3Cname%3E%60%0A%0AFetch%20the%20interface%20of%20a%20verified%20contract%20on%20Etherscan.%0A%0AThis%20command%20will%20attempt%20to%20parse%20the%20interface%20of%20a%20verified%20contract%20%40%20%60%3Caddr%3E%60%20from%20the%20Etherscan%20API.%20If%20successful%2C%20the%20interface%20will%20be%20inserted%20into%20the%20session%20source%20with%20the%20name%20%60%3Cname%3E%60.%0A%0AAt%20the%20moment%2C%20only%20interfaces%20of%20verified%20contracts%20on%20Ethereum%20mainnet%20can%20be%20fetched.%20In%20the%20future%2C%20Chisel%20will%20support%20fetching%20interfaces%20from%20multiple%20Etherscan-supported%20chains.%0A%0A%60!edit%60%0A%0AOpen%20the%20current%20session's%20%60run()%60%20function%20in%20an%20editor.%0A%0Achisel%20will%20use%20the%20editor%20defined%20in%20the%20%60%24EDITOR%60%20environment%20variable.%0A%0A**Environment**%0A%0A%60!fork%20%3Curl%3E%60%20%7C%20%60!f%20%3Curl%3E%60%0A%0AFork%20an%20RPC%20for%20the%20current%20session.%20Supply%200%20arguments%20to%20return%20to%20a%20local%20network.%0A%0AAttempts%20to%20fork%20the%20state%20of%20the%20provided%20RPC.%20If%20no%20URL%20is%20provided%2C%20returns%20to%20using%20a%20blank%2C%20local%20devnet%20state.%0A%0A%60!traces%60%20%7C%20%60!t%60%0A%0AEnable%20%2F%20disable%20traces%20for%20the%20current%20session.%0A%0AWhen%20tracing%20is%20enabled%2C%20foundry-style%20call%20tracing%20and%20logs%20will%20be%20printed%20after%20each%20statement%20is%20inserted.%0A%0A**Debug**%0A%0A%60!memdump%60%20%7C%20%60!md%60%0A%0ADump%20the%20raw%20memory%20of%20the%20current%20state.%0A%0AAttempts%20to%20dump%20the%20raw%20memory%20of%20the%20machine%20state%20after%20the%20last%20instruction%20of%20the%20REPL%20contract's%20%60run%60%20function%20has%20finished%20executing.%0A%0A%60!stackdump%60%20%7C%20%60!sd%60%0A%0ADump%20the%20raw%20stack%20of%20the%20current%20state.%0A%0AAttempts%20to%20dump%20the%20raw%20stack%20of%20the%20machine%20state%20after%20the%20last%20instruction%20of%20the%20REPL%20contract's%20%60run%60%20function%20has%20finished%20executing.%0A%0A%60!rawstack%20%3Cvar%3E%60%20%7C%20%60!rs%20%3Cvar%3E%60%0A%0ADisplay%20the%20raw%20value%20of%20a%20variable's%20stack%20allocation.%20For%20variables%20that%20are%20%3E%2032%20bytes%20in%20length%2C%20this%20will%20display%20their%20memory%20pointer.%0A%0AThis%20command%20is%20useful%20when%20you%20want%20to%20view%20the%20full%20raw%20stack%20allocation%20for%20a%20variable%20that%20is%20less%20than%2032%20bytes%20in%20length.%0A%0AExample%3A%0A%0A%60%60%60sh%0A%E2%9E%9C%20address%20addr%0A%E2%9E%9C%20assembly%20%7B%0A%20%20%20%20addr%20%3A%3D%20not(0)%0A%7D%0A%E2%9E%9C%20addr%0AType%3A%20address%0A%E2%94%94%20Data%3A%200xffffffffffffffffffffffffffffffffffffffff%0A%E2%9E%9C%20!rs%20addr%0AType%3A%20bytes32%0A%E2%94%94%20Data%3A%200xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff%0A%E2%9E%9C%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./reference-Z9HIgxPn.js"),__vite__mapDeps([14,1])),path:"/chisel/reference.html",type:"mdx",filePath:"chisel/reference.md",content:"%23%23%20chisel%0A%0A%23%23%23%20NAME%0A%0A%60chisel%60%20-%20Test%20and%20receive%20verbose%20feedback%20on%20Solidity%20inputs%20within%20a%20REPL%20environment.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60chisel%60%20%5B*options*%5D%0A%0A%23%23%23%23%20Subcommands%20(bin)%0A%0A1.%20%60chisel%20list%60%0A%20%20%20-%20Displays%20all%20cached%20sessions%20stored%20in%20%60~%2F.foundry%2Fcache%2Fchisel%60.%0A1.%20%60chisel%20load%20%3Cid%3E%60%0A%20%20%20-%20If%20a%20cached%20session%20with%20%60id%20%3D%20%3Cid%3E%60%20exists%2C%20launches%20the%20REPL%20and%20loads%20the%20corresponding%20session.%0A1.%20%60chisel%20view%20%3Cid%3E%60%0A%20%20%20-%20If%20a%20cached%20session%20with%20%60id%20%3D%20%3Cid%3E%60%20exists%2C%20displays%20the%20source%20code%20of%20the%20session's%20REPL%20contract.%0A1.%20%60chisel%20clear-cache%60%0A%20%20%20-%20Deletes%20all%20cache%20files%20within%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%20These%20sessions%20are%20unrecoverable%2C%20so%20use%20this%20command%20with%20care.%0A%0A%23%23%23%23%20Flags%0A%0ASee%20%60man%20chisel%60%20or%20%60chisel%20--help%60%20for%20all%20available%20environment%20configuration%20flags.%0A%0A%23%23%23%20DESCRIPTION%0A%0AChisel%20is%20a%20Solidity%20REPL%20(short%20for%20%22read-eval-print%20loop%22)%20that%20allows%20developers%20to%20write%0Aand%20test%20Solidity%20code%20snippets.%20It%20provides%20an%20interactive%20environment%20for%20writing%20and%20executing%0ASolidity%20code%2C%20as%20well%20as%20a%20set%20of%20built-in%20commands%20for%20working%20with%20and%20debugging%20your%20code.%20This%0Amakes%20it%20a%20useful%20tool%20for%20quickly%20testing%20and%20experimenting%20with%20Solidity%20code%20without%20having%20to%0Aspin%20up%20a%20sandbox%20foundry%20test%20suite.%0A%0A%23%23%23%20Usage%0A%0ATo%20open%20chisel%2C%20simply%20execute%20the%20%60chisel%60%20binary.%0A%0AFrom%20there%2C%20input%20valid%20Solidity%20code.%20There%20are%20two%20kinds%20of%20inputs%20to%20the%20chisel%20prompt%20apart%20from%20commands%3A%0A%0A1.%20Expressions%0A%20%20%20-%20Expressions%20are%20statements%20that%20return%20a%20value%20or%20otherwise%20can%20be%20evaluated%20on%20their%20own.%20For%20example%2C%0A%20%20%20%20%20%601%20%3C%3C%208%60%20is%20an%20expression%20that%20will%20evaluate%20to%20a%20%60uint256%60%20with%20the%20value%20%60256%60.%20Expressions%20will%20be%0A%20%20%20%20%20evaluated%20up%20front%2C%20and%20will%20not%20persist%20in%20the%20session%20state%20past%20their%20evaluation.%0A%20%20%20-%20Examples%3A%0A%20%20%20%20%20-%20%60address(0).balance%60%0A%20%20%20%20%20-%20%60abi.encode(256%2C%20bytes32(0)%2C%20%22Chisel!%22)%60%0A%20%20%20%20%20-%20%60myViewFunc(128)%60%0A%20%20%20%20%20-%20...%0A1.%20Statements%0A%0A%20%20%20-%20Statements%20are%20snippets%20of%20code%20that%20are%20meant%20to%20persist%20in%20the%20session's%20state.%20Statements%20include%0A%20%20%20%20%20variable%20definitions%2C%20calls%20to%20non-state-mutating%20functions%20that%20return%20a%20value%2C%20and%20contract%2C%20function%2C%0A%20%20%20%20%20event%2C%20error%2C%20mapping%2C%20or%20struct%20definitions.%20If%20you%20would%20like%20an%20expression%20to%20be%20evaluated%20as%20a%20statement%2C%0A%20%20%20%20%20a%20semi-colon%20(%60%3B%60)%20can%20be%20appended%20to%20the%20end.%0A%20%20%20-%20Examples%3A%0A%0A%20%20%20%20%20-%20%60uint256%20a%20%3D%200xa57b%60%0A%20%20%20%20%20-%20%60myStateMutatingFunc(128)%60%20%7C%7C%20%60myViewFunc(128)%3B%60.%20Notice%20the%20%60%3B%60%0A%20%20%20%20%20-%20%60%60%60solidity%0A%20%20%20%20%20%20%20function%20hash64(%0A%20%20%20%20%20%20%20%20%20bytes32%20_a%2C%0A%20%20%20%20%20%20%20%20%20bytes32%20_b%0A%20%20%20%20%20%20%20)%20internal%20pure%20returns%20(bytes32%20_hash)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20assembly%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Store%20the%2064%20bytes%20we%20want%20to%20hash%20in%20scratch%20space%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x00%2C%20_a)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x20%2C%20_b)%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Hash%20the%20memory%20in%20scratch%20space%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20and%20assign%20the%20result%20to%20%60_hash%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_hash%20%3A%3D%20keccak256(0x00%2C%200x40)%0A%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%60%60%60%0A%0A%20%20%20%20%20-%20%60event%20ItHappened(bytes32%20indexed%20hash)%60%0A%20%20%20%20%20-%20%60struct%20Complex256%20%7B%20uint256%20re%3B%20uint256%20im%3B%20%7D%60%0A%20%20%20%20%20-%20...%0A%0A%23%23%23%23%20Available%20Commands%0A%0A%60%60%60text%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fchisel%2Fhelp%3Aoutput%5D%0A%60%60%60%0A%0A**General**%0A%0A%60!help%60%20%7C%20%60!h%60%0A%0ADisplay%20all%20commands.%0A%0A%60!quit%60%20%7C%20%60!q%60%0A%0AQuit%20Chisel.%0A%0A%60!exec%20%3Ccommand%3E%20%5Bargs%5D%60%20%7C%20%60!e%20%3Ccommand%3E%20%5Bargs%5D%60%0A%0AExecute%20a%20shell%20command%20and%20print%20the%20output.%0A%0AExample%3A%0A%0A%60%60%60sh%0A%E2%9E%9C%20!e%20ls%0ACHANGELOG.md%0ALICENSE%0AREADME.md%0ATESTS.md%0Aartifacts%0Acache%0Acontracts%0Acrytic-export%0Adeploy%0Adeploy-config%0Adeployments%0Adist%0Aechidna.yaml%0Aforge-artifacts%0Afoundry.toml%0Ahardhat.config.ts%0Alayout-lock.json%0Anode_modules%0Apackage.json%0Ascripts%0Aslither.config.json%0Aslither.db.json%0Asrc%0Atasks%0Atest-case-generator%0Atsconfig.build.json%0Atsconfig.build.tsbuildinfo%0Atsconfig.json%0A%60%60%60%0A%0A**Session**%0A%0A%60!clear%60%20%7C%20%60!c%60%0A%0AClear%20current%20session%20source.%0A%0AUnder%20the%20hood%2C%20each%20Chisel%20session%20has%20an%20underlying%20contract%20that%20is%20altered%20as%20you%20input%20statements.%20This%20command%20clears%20this%20contract%20and%20resets%20your%20session%20to%20the%20default%20state.%0A%0A%60!source%60%20%7C%20%60!so%60%0A%0ADisplay%20the%20source%20code%20of%20the%20current%20session.%0A%0AAs%20mentioned%20above%2C%20each%20Chisel%20session%20has%20an%20underlying%20contract.%20This%20command%20will%20display%20the%20source%20code%20of%20this%20contract.%0A%0A%60!save%20%5Bid%5D%60%20%7C%20%60!s%20%5Bid%5D%60%0A%0ASave%20the%20current%20session%20to%20cache.%0A%0AChisel%20allows%20for%20caching%20sessions%2C%20which%20can%20be%20very%20useful%20if%20you%20are%20testing%20more%20complex%20logic%20in%20Chisel%20or%20if%20you%20want%20to%20return%20to%20a%20session%20at%20a%20later%20time.%20All%20cached%20Chisel%20sessions%20are%20stored%20in%20%60~%2F.foundry%2Fcache%2Fchisel%60.%0A%0AIf%20an%20%60id%60%20argument%20is%20not%20supplied%2C%20Chisel%20will%20automatically%20assign%20a%20numerical%20ID%20to%20the%20session%20you%20are%20saving.%0A%0A%60!load%20%3Cid%3E%60%20%7C%20%60!l%20%3Cid%3E%60%0A%0ALoad%20a%20previous%20session%20ID%20from%20cache.%0A%0AThis%20command%20will%20load%20a%20previously%20cached%20session%20from%20the%20cache.%20Along%20with%20the%20session's%20source%2C%20all%20environment%20settings%20will%20also%20be%20loaded.%20The%20%60id%60%20argument%20must%20correspond%20with%20an%20existing%20cached%20session%20in%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%0A%0A%60!list%60%20%7C%20%60!ls%60%0A%0AList%20all%20cached%20sessions.%0A%0AThis%20command%20will%20display%20all%20cached%20chisel%20sessions%20within%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%0A%0A%60!clearcache%60%20%7C%20%60!cc%60%0A%0AClear%20the%20chisel%20cache%20of%20all%20stored%20sessions.%0A%0ADeletes%20all%20cache%20files%20within%20the%20%60~%2F.foundry%2Fcache%2Fchisel%60%20directory.%20These%20sessions%20are%20unrecoverable%2C%20so%20use%20this%20command%20with%20care.%0A%0A%60!export%60%20%7C%20%60!ex%60%0A%0AExport%20the%20current%20session%20source%20to%20a%20script%20file.%0A%0AIf%20%60chisel%60%20was%20executed%20from%20the%20root%20directory%20of%20a%20foundry%20project%2C%20it%20is%20possible%20to%20export%20your%20current%20session%20to%20a%20foundry%20script%20in%20the%20%60scripts%60%20dir%20of%20your%20project.%0A%0A%60!fetch%20%3Caddr%3E%20%3Cname%3E%60%20%7C%20%60!fe%20%3Caddr%3E%20%3Cname%3E%60%0A%0AFetch%20the%20interface%20of%20a%20verified%20contract%20on%20Etherscan.%0A%0AThis%20command%20will%20attempt%20to%20parse%20the%20interface%20of%20a%20verified%20contract%20%40%20%60%3Caddr%3E%60%20from%20the%20Etherscan%20API.%20If%20successful%2C%20the%20interface%20will%20be%20inserted%20into%20the%20session%20source%20with%20the%20name%20%60%3Cname%3E%60.%0A%0AAt%20the%20moment%2C%20only%20interfaces%20of%20verified%20contracts%20on%20Ethereum%20mainnet%20can%20be%20fetched.%20In%20the%20future%2C%20Chisel%20will%20support%20fetching%20interfaces%20from%20multiple%20Etherscan-supported%20chains.%0A%0A%60!edit%60%0A%0AOpen%20the%20current%20session's%20%60run()%60%20function%20in%20an%20editor.%0A%0Achisel%20will%20use%20the%20editor%20defined%20in%20the%20%60%24EDITOR%60%20environment%20variable.%0A%0A**Environment**%0A%0A%60!fork%20%3Curl%3E%60%20%7C%20%60!f%20%3Curl%3E%60%0A%0AFork%20an%20RPC%20for%20the%20current%20session.%20Supply%200%20arguments%20to%20return%20to%20a%20local%20network.%0A%0AAttempts%20to%20fork%20the%20state%20of%20the%20provided%20RPC.%20If%20no%20URL%20is%20provided%2C%20returns%20to%20using%20a%20blank%2C%20local%20devnet%20state.%0A%0A%60!traces%60%20%7C%20%60!t%60%0A%0AEnable%20%2F%20disable%20traces%20for%20the%20current%20session.%0A%0AWhen%20tracing%20is%20enabled%2C%20foundry-style%20call%20tracing%20and%20logs%20will%20be%20printed%20after%20each%20statement%20is%20inserted.%0A%0A**Debug**%0A%0A%60!memdump%60%20%7C%20%60!md%60%0A%0ADump%20the%20raw%20memory%20of%20the%20current%20state.%0A%0AAttempts%20to%20dump%20the%20raw%20memory%20of%20the%20machine%20state%20after%20the%20last%20instruction%20of%20the%20REPL%20contract's%20%60run%60%20function%20has%20finished%20executing.%0A%0A%60!stackdump%60%20%7C%20%60!sd%60%0A%0ADump%20the%20raw%20stack%20of%20the%20current%20state.%0A%0AAttempts%20to%20dump%20the%20raw%20stack%20of%20the%20machine%20state%20after%20the%20last%20instruction%20of%20the%20REPL%20contract's%20%60run%60%20function%20has%20finished%20executing.%0A%0A%60!rawstack%20%3Cvar%3E%60%20%7C%20%60!rs%20%3Cvar%3E%60%0A%0ADisplay%20the%20raw%20value%20of%20a%20variable's%20stack%20allocation.%20For%20variables%20that%20are%20%3E%2032%20bytes%20in%20length%2C%20this%20will%20display%20their%20memory%20pointer.%0A%0AThis%20command%20is%20useful%20when%20you%20want%20to%20view%20the%20full%20raw%20stack%20allocation%20for%20a%20variable%20that%20is%20less%20than%2032%20bytes%20in%20length.%0A%0AExample%3A%0A%0A%60%60%60sh%0A%E2%9E%9C%20address%20addr%0A%E2%9E%9C%20assembly%20%7B%0A%20%20%20%20addr%20%3A%3D%20not(0)%0A%7D%0A%E2%9E%9C%20addr%0AType%3A%20address%0A%E2%94%94%20Data%3A%200xffffffffffffffffffffffffffffffffffffffff%0A%E2%9E%9C%20!rs%20addr%0AType%3A%20bytes32%0A%E2%94%94%20Data%3A%200xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff%0A%E2%9E%9C%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./debugger-DJsKM2RU.js"),__vite__mapDeps([15,1])),path:"/forge/debugger",type:"mdx",filePath:"forge/debugger.md",content:"---%0Adescription%3A%20Interactive%20debugger%20for%20stepping%20through%20smart%20contract%20execution%20with%20detailed%20EVM%20state%20inspection%20and%20navigation%20controls.%0A---%0A%0A%23%23%20Debugger%0A%0AForge%20ships%20with%20an%20interactive%20debugger.%0A%0AThe%20debugger%20is%20accessible%20on%20%5B%60forge%20test%60%5D(%2Fforge%2Freference%2Fforge-test)%2C%20on%20%5B%60forge%20script%60%5D(%2Fforge%2Freference%2Fforge-script)%20and%20on%20%5B%60cast%20run%60%5D(%2Fcast%2Freference%2Fcast-run).%20You%20can%20only%20select%20a%20single%20function%20or%20a%20single%20transaction%20to%20debug%20at%20the%20time.%0A%0AUsing%20%60forge%20test%60%20(or%20%60forge%20script%60)%3A%0A%0A%60%60%60sh%0Aforge%20test%20--debug%20--match-test%20%22%3CREGEX%3E%22%0A%60%60%60%0A%0AWhere%20%60%3CREGEX%3E%60%20is%20the%20function%20signature%20of%20the%20file%20you%20want%20to%20debug.%20For%20example%3A%0A%0A%60%60%60sh%0Aforge%20test%20--debug%20--match-test%20%22test_Increment%22%0A%60%60%60%0A%0AIf%20the%20matching%20test%20is%20a%20fuzz%20test%2C%20the%20debugger%20will%20open%20the%20first%20failing%20fuzz%20scenario%2C%20or%20the%20last%20successful%20one%2C%20whichever%20comes%20first.%20For%20example%3A%0A%0A%60%60%60sh%0Aforge%20test%20--debug%20--match-test%20%22testFuzz_SetNumber%22%0A%60%60%60%0A%0AUsing%20%60cast%20run%60%3A%0A%0A%60%60%60sh%0Acast%20run%20--debug%20%5C%0A%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%60%60%60%0A%0A%23%23%23%20Debugger%20layout%0A%0A!%5BAn%20image%20of%20the%20debugger%20UI%5D(%2Fdebugger.png)%0A%0AWhen%20the%20debugger%20is%20run%2C%20you%20are%20presented%20with%20a%20terminal%20divided%20into%20four%20quadrants%3A%0A%0A-%20**Quadrant%201**%3A%20The%20opcodes%20in%20the%20debugging%20session%2C%20with%20the%20current%20opcode%20highlighted.%20Additionally%2C%20the%20address%20of%20the%20current%20account%2C%20the%20program%20counter%20and%20the%20accumulated%20gas%20usage%20is%20also%20displayed%0A-%20**Quadrant%202**%3A%20The%20current%20stack%2C%20as%20well%20as%20the%20size%20of%20the%20stack%0A-%20**Quadrant%203**%3A%20The%20source%20view%0A-%20**Quadrant%204**%3A%20The%20current%20memory%20of%20the%20EVM%0A%0AAs%20you%20step%20through%20your%20code%2C%20you%20will%20notice%20that%20the%20words%20in%20the%20stack%20and%20memory%20sometimes%20change%20color.%0A%0AFor%20the%20memory%3A%0A%0A-%20**Red%20words**%20are%20about%20to%20be%20written%20to%20by%20the%20current%20opcode%0A-%20**Green%20words**%20were%20written%20to%20by%20the%20previous%20opcode%0A-%20**Cyan%20words**%20are%20being%20read%20by%20the%20current%20opcode%0A%0AFor%20the%20stack%2C%20**cyan%20words**%20are%20either%20being%20read%20or%20popped%20by%20the%20current%20opcode.%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Note**%0A%3E%0A%3E%20In%20most%20test%20frameworks%2C%20the%20first%20test%20assertion%20to%20fail%20is%20the%20one%20reported.%0A%3E%20In%20foundry%2C%20the%20last%20test%20assertion%20to%20fail%20(that%20comes%20from%20DSTest%20or%20cheatcodes)%20is%20the%20one%20to%20be%20reported.%0A%0A%23%23%23%20Navigating%0A%0A%23%23%23%20General%0A%0A-%20%3Ckbd%3Eq%3C%2Fkbd%3E%3A%20Quit%20the%20debugger%0A-%20%3Ckbd%3Eh%3C%2Fkbd%3E%3A%20Show%20help%0A%0A%23%23%23%20Navigating%20calls%0A%0A-%20%3Ckbd%3E0-9%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ek%3C%2Fkbd%3E%3A%20Step%20a%20number%20of%20times%20backwards%20(alternatively%20scroll%20up%20with%20your%20mouse)%0A-%20%3Ckbd%3E0-9%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ej%3C%2Fkbd%3E%3A%20Step%20a%20number%20of%20times%20forwards%20(alternatively%20scroll%20down%20with%20your%20mouse)%0A-%20%3Ckbd%3Eg%3C%2Fkbd%3E%3A%20Move%20to%20the%20beginning%20of%20the%20transaction%0A-%20%3Ckbd%3EG%3C%2Fkbd%3E%3A%20Move%20to%20the%20end%20of%20the%20transaction%0A-%20%3Ckbd%3Ec%3C%2Fkbd%3E%3A%20Move%20to%20the%20previous%20call-type%20instruction%20(i.e.%20%5B%60CALL%60%5D%5Bop-call%5D%2C%20%5B%60STATICCALL%60%5D%5Bop-staticcall%5D%2C%20%5B%60DELEGATECALL%60%5D%5Bop-delegatecall%5D%2C%20and%20%5B%60CALLCODE%60%5D%5Bop-callcode%5D).%0A-%20%3Ckbd%3EC%3C%2Fkbd%3E%3A%20Move%20to%20the%20next%20call-type%20instruction%0A-%20%3Ckbd%3Ea%3C%2Fkbd%3E%3A%20Move%20to%20the%20previous%20%5B%60JUMP%60%5D%5Bop-jump%5D%20or%20%5B%60JUMPI%60%5D%5Bop-jumpi%5D%20instruction%0A-%20%3Ckbd%3Es%3C%2Fkbd%3E%3A%20Move%20to%20the%20next%20%5B%60JUMPDEST%60%5D%5Bop-jumpdest%5D%20instruction%0A-%20%3Ckbd%3E'%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ea-z%3C%2Fkbd%3E%3A%20Move%20to%20%60%3Cchar%3E%60%20breakpoint%20set%20by%20a%20%5B%60vm.breakpoint%60%5D%5Bcheat-breakpoint%5D%20cheatcode%0A%0A%23%23%23%20Navigating%20memory%0A%0A-%20%3Ckbd%3ECtrl%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ej%3C%2Fkbd%3E%3A%20Scroll%20the%20memory%20view%20down%0A-%20%3Ckbd%3ECtrl%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ek%3C%2Fkbd%3E%3A%20Scroll%20the%20memory%20view%20up%0A-%20%3Ckbd%3Em%3C%2Fkbd%3E%3A%20Show%20memory%20as%20UTF8%0A%0A%23%23%23%20Navigating%20the%20stack%0A%0A-%20%3Ckbd%3EJ%3C%2Fkbd%3E%3A%20Scroll%20the%20stack%20view%20down%0A-%20%3Ckbd%3EK%3C%2Fkbd%3E%3A%20Scroll%20the%20stack%20view%20up%0A-%20%3Ckbd%3Et%3C%2Fkbd%3E%3A%20Show%20labels%20on%20the%20stack%20to%20see%20what%20items%20the%20current%20op%20will%20consume%0A%0A%5Bop-call%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f1%0A%5Bop-staticcall%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23fa%0A%5Bop-delegatecall%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f4%0A%5Bop-callcode%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f2%0A%5Bop-jumpdest%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%235b%0A%5Bop-jump%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f1%0A%5Bop-jumpi%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%2357%0A%5Bcheat-breakpoint%5D%3A%20%2Freference%2Fcheatcodes%2Fbreakpoint%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./debugger-DJsKM2RU.js"),__vite__mapDeps([15,1])),path:"/forge/debugger.html",type:"mdx",filePath:"forge/debugger.md",content:"---%0Adescription%3A%20Interactive%20debugger%20for%20stepping%20through%20smart%20contract%20execution%20with%20detailed%20EVM%20state%20inspection%20and%20navigation%20controls.%0A---%0A%0A%23%23%20Debugger%0A%0AForge%20ships%20with%20an%20interactive%20debugger.%0A%0AThe%20debugger%20is%20accessible%20on%20%5B%60forge%20test%60%5D(%2Fforge%2Freference%2Fforge-test)%2C%20on%20%5B%60forge%20script%60%5D(%2Fforge%2Freference%2Fforge-script)%20and%20on%20%5B%60cast%20run%60%5D(%2Fcast%2Freference%2Fcast-run).%20You%20can%20only%20select%20a%20single%20function%20or%20a%20single%20transaction%20to%20debug%20at%20the%20time.%0A%0AUsing%20%60forge%20test%60%20(or%20%60forge%20script%60)%3A%0A%0A%60%60%60sh%0Aforge%20test%20--debug%20--match-test%20%22%3CREGEX%3E%22%0A%60%60%60%0A%0AWhere%20%60%3CREGEX%3E%60%20is%20the%20function%20signature%20of%20the%20file%20you%20want%20to%20debug.%20For%20example%3A%0A%0A%60%60%60sh%0Aforge%20test%20--debug%20--match-test%20%22test_Increment%22%0A%60%60%60%0A%0AIf%20the%20matching%20test%20is%20a%20fuzz%20test%2C%20the%20debugger%20will%20open%20the%20first%20failing%20fuzz%20scenario%2C%20or%20the%20last%20successful%20one%2C%20whichever%20comes%20first.%20For%20example%3A%0A%0A%60%60%60sh%0Aforge%20test%20--debug%20--match-test%20%22testFuzz_SetNumber%22%0A%60%60%60%0A%0AUsing%20%60cast%20run%60%3A%0A%0A%60%60%60sh%0Acast%20run%20--debug%20%5C%0A%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%60%60%60%0A%0A%23%23%23%20Debugger%20layout%0A%0A!%5BAn%20image%20of%20the%20debugger%20UI%5D(%2Fdebugger.png)%0A%0AWhen%20the%20debugger%20is%20run%2C%20you%20are%20presented%20with%20a%20terminal%20divided%20into%20four%20quadrants%3A%0A%0A-%20**Quadrant%201**%3A%20The%20opcodes%20in%20the%20debugging%20session%2C%20with%20the%20current%20opcode%20highlighted.%20Additionally%2C%20the%20address%20of%20the%20current%20account%2C%20the%20program%20counter%20and%20the%20accumulated%20gas%20usage%20is%20also%20displayed%0A-%20**Quadrant%202**%3A%20The%20current%20stack%2C%20as%20well%20as%20the%20size%20of%20the%20stack%0A-%20**Quadrant%203**%3A%20The%20source%20view%0A-%20**Quadrant%204**%3A%20The%20current%20memory%20of%20the%20EVM%0A%0AAs%20you%20step%20through%20your%20code%2C%20you%20will%20notice%20that%20the%20words%20in%20the%20stack%20and%20memory%20sometimes%20change%20color.%0A%0AFor%20the%20memory%3A%0A%0A-%20**Red%20words**%20are%20about%20to%20be%20written%20to%20by%20the%20current%20opcode%0A-%20**Green%20words**%20were%20written%20to%20by%20the%20previous%20opcode%0A-%20**Cyan%20words**%20are%20being%20read%20by%20the%20current%20opcode%0A%0AFor%20the%20stack%2C%20**cyan%20words**%20are%20either%20being%20read%20or%20popped%20by%20the%20current%20opcode.%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Note**%0A%3E%0A%3E%20In%20most%20test%20frameworks%2C%20the%20first%20test%20assertion%20to%20fail%20is%20the%20one%20reported.%0A%3E%20In%20foundry%2C%20the%20last%20test%20assertion%20to%20fail%20(that%20comes%20from%20DSTest%20or%20cheatcodes)%20is%20the%20one%20to%20be%20reported.%0A%0A%23%23%23%20Navigating%0A%0A%23%23%23%20General%0A%0A-%20%3Ckbd%3Eq%3C%2Fkbd%3E%3A%20Quit%20the%20debugger%0A-%20%3Ckbd%3Eh%3C%2Fkbd%3E%3A%20Show%20help%0A%0A%23%23%23%20Navigating%20calls%0A%0A-%20%3Ckbd%3E0-9%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ek%3C%2Fkbd%3E%3A%20Step%20a%20number%20of%20times%20backwards%20(alternatively%20scroll%20up%20with%20your%20mouse)%0A-%20%3Ckbd%3E0-9%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ej%3C%2Fkbd%3E%3A%20Step%20a%20number%20of%20times%20forwards%20(alternatively%20scroll%20down%20with%20your%20mouse)%0A-%20%3Ckbd%3Eg%3C%2Fkbd%3E%3A%20Move%20to%20the%20beginning%20of%20the%20transaction%0A-%20%3Ckbd%3EG%3C%2Fkbd%3E%3A%20Move%20to%20the%20end%20of%20the%20transaction%0A-%20%3Ckbd%3Ec%3C%2Fkbd%3E%3A%20Move%20to%20the%20previous%20call-type%20instruction%20(i.e.%20%5B%60CALL%60%5D%5Bop-call%5D%2C%20%5B%60STATICCALL%60%5D%5Bop-staticcall%5D%2C%20%5B%60DELEGATECALL%60%5D%5Bop-delegatecall%5D%2C%20and%20%5B%60CALLCODE%60%5D%5Bop-callcode%5D).%0A-%20%3Ckbd%3EC%3C%2Fkbd%3E%3A%20Move%20to%20the%20next%20call-type%20instruction%0A-%20%3Ckbd%3Ea%3C%2Fkbd%3E%3A%20Move%20to%20the%20previous%20%5B%60JUMP%60%5D%5Bop-jump%5D%20or%20%5B%60JUMPI%60%5D%5Bop-jumpi%5D%20instruction%0A-%20%3Ckbd%3Es%3C%2Fkbd%3E%3A%20Move%20to%20the%20next%20%5B%60JUMPDEST%60%5D%5Bop-jumpdest%5D%20instruction%0A-%20%3Ckbd%3E'%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ea-z%3C%2Fkbd%3E%3A%20Move%20to%20%60%3Cchar%3E%60%20breakpoint%20set%20by%20a%20%5B%60vm.breakpoint%60%5D%5Bcheat-breakpoint%5D%20cheatcode%0A%0A%23%23%23%20Navigating%20memory%0A%0A-%20%3Ckbd%3ECtrl%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ej%3C%2Fkbd%3E%3A%20Scroll%20the%20memory%20view%20down%0A-%20%3Ckbd%3ECtrl%3C%2Fkbd%3E%20%2B%20%3Ckbd%3Ek%3C%2Fkbd%3E%3A%20Scroll%20the%20memory%20view%20up%0A-%20%3Ckbd%3Em%3C%2Fkbd%3E%3A%20Show%20memory%20as%20UTF8%0A%0A%23%23%23%20Navigating%20the%20stack%0A%0A-%20%3Ckbd%3EJ%3C%2Fkbd%3E%3A%20Scroll%20the%20stack%20view%20down%0A-%20%3Ckbd%3EK%3C%2Fkbd%3E%3A%20Scroll%20the%20stack%20view%20up%0A-%20%3Ckbd%3Et%3C%2Fkbd%3E%3A%20Show%20labels%20on%20the%20stack%20to%20see%20what%20items%20the%20current%20op%20will%20consume%0A%0A%5Bop-call%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f1%0A%5Bop-staticcall%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23fa%0A%5Bop-delegatecall%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f4%0A%5Bop-callcode%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f2%0A%5Bop-jumpdest%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%235b%0A%5Bop-jump%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%23f1%0A%5Bop-jumpi%5D%3A%20https%3A%2F%2Fwww.evm.codes%2F%2357%0A%5Bcheat-breakpoint%5D%3A%20%2Freference%2Fcheatcodes%2Fbreakpoint%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deploying-BKbGoJNK.js"),__vite__mapDeps([16,1])),path:"/forge/deploying",type:"mdx",filePath:"forge/deploying.md",content:"---%0Adescription%3A%20Deploy%20smart%20contracts%20to%20any%20network%20using%20forge%20create%20or%20Solidity%20scripting%20with%20automatic%20verification%20support.%0A---%0A%0A%23%23%20Deploying%0A%0AForge%20can%20deploy%20smart%20contracts%20to%20a%20given%20network%20with%20the%20%5B%60forge%20create%60%5D(%2Fforge%2Freference%2Fforge-create)%20command.%0A%0AForge%20CLI%20can%20deploy%20only%20one%20contract%20at%20a%20time.%0A%0AFor%20deploying%20and%20verifying%20multiple%20smart%20contracts%20on%20multiple%20chains%20in%20one%20go%2C%20Forge's%20%5BSolidity%20scripting%5D(%2Fguides%2Fscripting-with-solidity)%20would%20be%20the%20more%20efficient%20approach.%0A%0ATo%20deploy%20a%20contract%2C%20you%20must%20provide%20a%20RPC%20URL%20(env%3A%20%60ETH_RPC_URL%60)%20and%20the%20private%20key%20of%20the%20account%20that%20will%20deploy%20the%20contract.%20Additionally%20the%20%60--broadcast%60%20flag%20is%20responsible%20for%20publishing%20your%20transaction%20to%20the%20network%20as%20a%20safety%20precaution%20and%20mirrors%20the%20%60--broadcast%60%20flag%20of%20%60forge%20script%60.%20If%20you%20do%20not%20pass%20the%20%60--broadcast%60%20flag%20your%20transaction%20is%20a%20dry-run.%0A%0ATo%20deploy%20%60MyContract%60%20to%20a%20network%3A%0A%0A%60%60%60sh%0Aforge%20create%20src%2FMyContract.sol%3AMyContract%20--rpc-url%20%3CYOUR_RPC_URL%3E%20--private-key%20%3CYOUR_PRIVATE_KEY%3E%20--broadcast%0Acompiling...%0Asuccess.%0ADeployer%3A%200xa735b3c25f...%0ADeployed%20to%3A%200x4054415432...%0ATransaction%20hash%3A%200x6b4e0ff93a...%0A%60%60%60%0A%0ASolidity%20files%20may%20contain%20multiple%20contracts.%20%60%3AMyContract%60%20above%20specifies%20which%20contract%20to%20deploy%20from%20the%20%60src%2FMyContract.sol%60%20file.%0A%0AUse%20the%20%60--constructor-args%60%20flag%20to%20pass%20arguments%20to%20the%20constructor%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Aimport%20%7BERC20%7D%20from%20%22solmate%2Ftokens%2FERC20.sol%22%3B%0A%0Acontract%20MyToken%20is%20ERC20%20%7B%0A%20%20%20%20constructor(%0A%20%20%20%20%20%20%20%20string%20memory%20name%2C%0A%20%20%20%20%20%20%20%20string%20memory%20symbol%2C%0A%20%20%20%20%20%20%20%20uint8%20decimals%2C%0A%20%20%20%20%20%20%20%20uint256%20initialSupply%0A%20%20%20%20)%20ERC20(name%2C%20symbol%2C%20decimals)%20%7B%0A%20%20%20%20%20%20%20%20_mint(msg.sender%2C%20initialSupply)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AAdditionally%2C%20we%20can%20tell%20Forge%20to%20verify%20our%20contract%20on%20Etherscan%2C%20Sourcify%20or%20Blockscout%2C%20if%20the%20network%20is%20supported%2C%20by%20passing%20%60--verify%60.%0A%0A%60%60%60sh%0Aforge%20create%20src%2FMyToken.sol%3AMyToken%20--rpc-url%20%3CYOUR_RPC_URL%3E%20%5C%0A%20%20%20%20--private-key%20%3CYOUR_PRIVATE_KEY%3E%20%5C%0A%20%20%20%20--broadcast%20%5C%0A%20%20%20%20--etherscan-api-key%20%3CYOUR_ETHERSCAN_API_KEY%3E%20%5C%0A%20%20%20%20--verify%20%5C%0A%20%20%20%20--constructor-args%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000%0A%60%60%60%0A%0A%23%23%20Multi-chain%20deployments%0A%0ADeploying%20and%20verifying%20multiple%20smart%20contracts%20on%20multiple%20chains%20in%20one%20go%20is%20possible%20by%20using%20forking%20cheatcodes.%0A%0AFor%20example%2C%20if%20you%20want%20to%20deploy%20a%20%60Counter%60%20contract%20on%20Sepolia%20Mainnet%20and%20Base%20Sepolia%20using%20a%20single%20command%2C%20you%20can%20configure%20RPC%20endpoints%20and%20verifiers%20as%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Asepolia%20%3D%20%22%24%7BSEPOLIA_URL%7D%22%0Abase-sepolia%20%3D%20%22%24%7BBASE_SEPOLIA_URL%7D%22%0A%0A%5Betherscan%5D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Abase-sepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0A%60%60%60%0A%0Aand%20create%20a%20%60CounterScript%60%20script%20as%3A%0A%0A%60%60%60solidity%0Acontract%20CounterScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.createSelectFork(%22sepolia%22)%3B%0A%20%20%20%20%20%20%20%20vm.startBroadcast()%3B%0A%20%20%20%20%20%20%20%20new%20Counter()%3B%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20vm.createSelectFork(%22base-sepolia%22)%3B%0A%20%20%20%20%20%20%20%20vm.startBroadcast()%3B%0A%20%20%20%20%20%20%20%20new%20Counter()%3B%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AWhen%20running%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FCounterScript.s.sol%20--slow%20--multi%20--broadcast%20--private-key%20%3CYOUR_PRIVATE_KEY%3E%20--verify%0A%60%60%60%0A%0AThe%20script%20will%20create%20the%20Sepolia%20Mainnet%20fork%20(%60vm.createSelectFork(%22sepolia%22)%60)%2C%20deploy%20and%20verify%20the%20%60Counter%60%20contract%2C%20and%20then%20move%20to%20Base%20Sepolia%20chain%20deployment%20(%60vm.createSelectFork(%22base-sepolia%22)%60).%0A%0AFor%20a%20list%20of%20all%20available%20forking%20cheatcodes%20see%20%5B%60forking%60%5D(%2Freference%2Fcheatcodes%2Fforking)%20docs.%0A%0A%23%23%20Verifying%20a%20pre-existing%20contract%0A%0AIt%20is%20recommended%20to%20use%20the%20%60--verify%60%20flag%20with%20%60forge%20create%60%20to%20automatically%20verify%20the%20contract%20on%20explorer%20after%20a%20deployment.%0ANote%20that%20for%20Etherscan%20%5B%60ETHERSCAN_API_KEY%60%5D(https%3A%2F%2Fdocs.etherscan.io%2Fgetting-started%2Fviewing-api-usage-statistics)%20must%20be%20set.%0A%0AIf%20you%20are%20verifying%20an%20already%20deployed%20contract%2C%20read%20on.%0A%0AYou%20can%20verify%20a%20contract%20on%20Etherscan%2C%20Sourcify%2C%20oklink%20or%20Blockscout%20with%20the%20%5B%60forge%20verify-contract%60%5D(%2Fforge%2Freference%2Fforge-verify-contract)%20command.%0A%0AYou%20must%20provide%3A%0A%0A-%20the%20contract%20address%0A-%20the%20contract%20name%20or%20the%20path%20to%20the%20contract%20%60%3Cpath%3E%3A%3Ccontractname%3E%60%0A-%20your%20Etherscan%20API%20key%20(env%3A%20%60ETHERSCAN_API_KEY%60)%20(if%20verifying%20on%20Etherscan%20or%20similar%20explorers%20e.g.%20BscScan%20%2F%20BaseScan%20%2F%20Polygonscan).%0A%0AMoreover%2C%20you%20may%20need%20to%20provide%3A%0A%0A-%20the%20constructor%20arguments%20in%20the%20ABI-encoded%20format%2C%20if%20there%20are%20any%0A-%20external%20linked%20libraries%20in%20%60src_file_path%3Alibrary_name%3Alibrary_address%60%20format%2C%20if%20there%20are%20any%0A-%20%5Bcompiler%20version%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions)%20used%20for%20build%2C%20with%208%20hex%20digits%20from%20the%20commit%20version%20prefix%20(the%20commit%20will%20usually%20not%20be%20a%20nightly%20build).%20It%20is%20auto-detected%20if%20not%20specified.%0A-%20the%20number%20of%20optimizations%2C%20if%20the%20Solidity%20optimizer%20was%20activated.%20It%20is%20auto-detected%20if%20not%20specified.%0A-%20the%20%5Bchain%20ID%5D(https%3A%2F%2Fevm-chainlist.netlify.app%2F)%2C%20if%20the%20contract%20is%20not%20on%20Ethereum%20Mainnet%0A%0ALet's%20say%20you%20want%20to%20verify%20%60MyToken%60%20(see%20above).%20You%20set%20the%20%5Bnumber%20of%20optimizations%5D(%2Fconfig%2Freference%2Fsolidity-compiler%23optimizer_runs)%20to%201%20million%2C%20compiled%20it%20with%20v0.8.10%2C%20and%20deployed%20it%2C%20as%20shown%20above%2C%20to%20the%20Sepolia%20testnet%20(chain%20ID%3A%2011155111).%20Note%20that%20%60--num-of-optimizations%60%20will%20default%20to%200%20if%20not%20set%20on%20verification%2C%20while%20it%20defaults%20to%20200%20if%20not%20set%20on%20deployment%2C%20so%20make%20sure%20you%20pass%20%60--num-of-optimizations%20200%60%20if%20you%20left%20the%20default%20compilation%20settings.%0A%0AHere's%20how%20to%20verify%20it%3A%0A%0A%60%60%60bash%0Aforge%20verify-contract%20%5C%0A%20%20%20%20--chain-id%2011155111%20%5C%0A%20%20%20%20--num-of-optimizations%201000000%20%5C%0A%20%20%20%20--watch%20%5C%0A%20%20%20%20--constructor-args%20%24(cast%20abi-encode%20%22constructor(string%2Cstring%2Cuint256%2Cuint256)%22%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000)%20%5C%0A%20%20%20%20--verifier%20etherscan%20%5C%0A%20%20%20%20--etherscan-api-key%20%3Cyour_etherscan_api_key%3E%20%5C%0A%20%20%20%20--compiler-version%20v0.8.10%2Bcommit.fc410830%20%5C%0A%20%20%20%20%3CCONTRACT_ADDRESS%3E%20%5C%0A%20%20%20%20src%2FMyToken.sol%3AMyToken%0A%0ASubmitted%20contract%20for%20verification%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Response%3A%20%60OK%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20GUID%3A%20%60a6yrbjp5prvakia6bqp5qdacczyfhkyi5j1r6qbds1js41ak1a%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20https%3A%2F%2Fsepolia.etherscan.io%2F%2Faddress%2F0x6a54%E2%80%A63a4c%23code%0A%60%60%60%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note%3A**%0A%3E%0A%3E%20External%20libraries%20can%20be%20specified%20with%20%60--libraries%60%20argument%2C%20one%20for%20each%20linked%20library.%20For%20example%2C%20to%20verify%20a%20contract%20with%20two%20linked%20libraries%20(%60Maths%60%20and%20%60Utils%60)%20the%20%60forge%20verify-command%60%20should%20be%20run%20with%0A%3E%0A%3E%20%60%60%60bash%0A%3E%20--libraries%20src%2Flib%2FMaths.sol%3AMaths%3A%3Cmaths_lib_address%3E%20%5C%0A%3E%20--libraries%20src%2Flib%2FUtils.sol%3AUtils%3A%3Cutils_lib_address%3E%0A%3E%20%60%60%60%0A%3E%0A%3E%20arguments.%0A%0AIt%20is%20recommended%20to%20use%20the%20%5B%60--watch%60%5D(%2Fforge%2Freference%2Fforge-verify-contract%23verify-contract-options)%20flag%20along%0Awith%20%60verify-contract%60%20command%20in%20order%20to%20poll%20for%20the%20verification%20result.%0A%0AIf%20the%20%60--watch%60%20flag%20was%20not%20supplied%2C%20you%20can%20check%0Athe%20verification%20status%20with%20the%20%5B%60forge%20verify-check%60%5D(%2Fforge%2Freference%2Fforge-verify-check)%20command%3A%0A%0A%60%60%60bash%0Aforge%20verify-check%20--chain-id%2011155111%20%3CGUID%3E%20%3CYOUR_ETHERSCAN_API_KEY%3E%0AContract%20successfully%20verified.%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3E%20%F0%9F%92%A1%20**Tip**%0A%3E%0A%3E%20Use%20Cast's%20%5B%60abi-encode%60%5D(%2Fcast%2Freference%2Fcast-abi-encode)%20to%20ABI-encode%20arguments.%0A%3E%0A%3E%20In%20this%20example%2C%20we%20ran%20%60cast%20abi-encode%20%22constructor(string%2Cstring%2Cuint8%2Cuint256)%22%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000%60%20to%20ABI-encode%20the%20arguments.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%23%23%23%20Troubleshooting%0A%0A%23%23%23%23%23%20%60missing%20hex%20prefix%20(%220x%22)%20for%20hex%20string%60%0A%0AMake%20sure%20the%20private%20key%20string%20begins%20with%20%600x%60.%0A%0A%23%23%23%23%23%20%60EIP-1559%20not%20activated%60%0A%0AEIP-1559%20is%20not%20supported%20or%20not%20activated%20on%20the%20RPC%20server.%20Pass%20the%20%60--legacy%60%20flag%20to%20use%20legacy%20transactions%20instead%20of%20the%20EIP-1559%20ones.%20If%20you%20do%20development%20in%20a%20local%20environment%2C%20you%20can%20use%20Hardhat%20instead%20of%20Ganache.%0A%0A%23%23%23%23%23%20%60Failed%20to%20parse%20tokens%60%0A%0AMake%20sure%20the%20passed%20arguments%20are%20of%20correct%20type.%0A%0A%23%23%23%23%23%20%60Signature%20error%60%0A%0AMake%20sure%20the%20private%20key%20is%20correct.%0A%0A%23%23%23%23%23%20%60Compiler%20version%20commit%20for%20verify%60%0A%0AIf%20you%20want%20to%20check%20the%20exact%20commit%20you%20are%20running%20locally%2C%20try%3A%20%60%20~%2F.svm%2F0.x.y%2Fsolc-0.x.y%20--version%60%20where%20%60x%60%20and%0A%60y%60%20are%20major%20and%20minor%20version%20numbers%20respectively.%20The%20output%20of%20this%20will%20be%20something%20like%3A%0A%0A%60%60%60bash%0Asolc%2C%20the%20solidity%20compiler%20commandline%20interface%0AVersion%3A%200.8.12%2Bcommit.f00d7308.Darwin.appleclang%0A%60%60%60%0A%0ANote%3A%20You%20cannot%20just%20paste%20the%20entire%20string%20%220.8.12%2Bcommit.f00d7308.Darwin.appleclang%22%20as%20the%20argument%20for%20the%20compiler-version.%20But%20you%20can%20use%20the%208%20hex%20digits%20of%20the%20commit%20to%20look%20up%20exactly%20what%20you%20should%20copy%20and%20paste%20from%20%5Bcompiler%20version%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions).%0A%0A%23%23%23%23%23%20%60Invalid%20API%20Key%60%0A%0AWith%20%5BEtherscan%20API%20V2%5D(https%3A%2F%2Fdocs.etherscan.io%2Fetherscan-v2)%2C%20only%20Etherscan%20keys%20are%20valid%2C%20this%20can%20be%20used%20for%20similar%20explorers%20eg%20BscScan%2FBaseScan%2FPolygonscan.%20Legacy%20keys%20from%20other%20explorers%20have%20been%20deprecated.%0A%0A%23%23%23%20Known%20Issues%0A%0A%23%23%23%23%20Verifying%20Contracts%20With%20Ambiguous%20Import%20Paths%0A%0AForge%20passes%20source%20directories%20(%60src%60%2C%20%60lib%60%2C%20%60test%60%20etc)%20as%20%60--include-path%60%20arguments%20to%20the%20compiler.%0AThis%20means%20that%20given%20the%20following%20project%20tree%0A%0A%60%60%60text%0A%7C-%20src%0A%7C--%20folder%0A%7C---%20Contract.sol%0A%7C---%20IContract.sol%0A%60%60%60%0A%0Ait%20is%20possible%20to%20import%20%60IContract%60%20inside%20the%20%60Contract.sol%60%20using%20%60folder%2FIContract.sol%60%20import%20path.%0A%0AEtherscan%20is%20not%20able%20to%20recompile%20such%20sources.%20Consider%20changing%20the%20imports%20to%20use%20relative%20import%20path.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deploying-BKbGoJNK.js"),__vite__mapDeps([16,1])),path:"/forge/deploying.html",type:"mdx",filePath:"forge/deploying.md",content:"---%0Adescription%3A%20Deploy%20smart%20contracts%20to%20any%20network%20using%20forge%20create%20or%20Solidity%20scripting%20with%20automatic%20verification%20support.%0A---%0A%0A%23%23%20Deploying%0A%0AForge%20can%20deploy%20smart%20contracts%20to%20a%20given%20network%20with%20the%20%5B%60forge%20create%60%5D(%2Fforge%2Freference%2Fforge-create)%20command.%0A%0AForge%20CLI%20can%20deploy%20only%20one%20contract%20at%20a%20time.%0A%0AFor%20deploying%20and%20verifying%20multiple%20smart%20contracts%20on%20multiple%20chains%20in%20one%20go%2C%20Forge's%20%5BSolidity%20scripting%5D(%2Fguides%2Fscripting-with-solidity)%20would%20be%20the%20more%20efficient%20approach.%0A%0ATo%20deploy%20a%20contract%2C%20you%20must%20provide%20a%20RPC%20URL%20(env%3A%20%60ETH_RPC_URL%60)%20and%20the%20private%20key%20of%20the%20account%20that%20will%20deploy%20the%20contract.%20Additionally%20the%20%60--broadcast%60%20flag%20is%20responsible%20for%20publishing%20your%20transaction%20to%20the%20network%20as%20a%20safety%20precaution%20and%20mirrors%20the%20%60--broadcast%60%20flag%20of%20%60forge%20script%60.%20If%20you%20do%20not%20pass%20the%20%60--broadcast%60%20flag%20your%20transaction%20is%20a%20dry-run.%0A%0ATo%20deploy%20%60MyContract%60%20to%20a%20network%3A%0A%0A%60%60%60sh%0Aforge%20create%20src%2FMyContract.sol%3AMyContract%20--rpc-url%20%3CYOUR_RPC_URL%3E%20--private-key%20%3CYOUR_PRIVATE_KEY%3E%20--broadcast%0Acompiling...%0Asuccess.%0ADeployer%3A%200xa735b3c25f...%0ADeployed%20to%3A%200x4054415432...%0ATransaction%20hash%3A%200x6b4e0ff93a...%0A%60%60%60%0A%0ASolidity%20files%20may%20contain%20multiple%20contracts.%20%60%3AMyContract%60%20above%20specifies%20which%20contract%20to%20deploy%20from%20the%20%60src%2FMyContract.sol%60%20file.%0A%0AUse%20the%20%60--constructor-args%60%20flag%20to%20pass%20arguments%20to%20the%20constructor%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Aimport%20%7BERC20%7D%20from%20%22solmate%2Ftokens%2FERC20.sol%22%3B%0A%0Acontract%20MyToken%20is%20ERC20%20%7B%0A%20%20%20%20constructor(%0A%20%20%20%20%20%20%20%20string%20memory%20name%2C%0A%20%20%20%20%20%20%20%20string%20memory%20symbol%2C%0A%20%20%20%20%20%20%20%20uint8%20decimals%2C%0A%20%20%20%20%20%20%20%20uint256%20initialSupply%0A%20%20%20%20)%20ERC20(name%2C%20symbol%2C%20decimals)%20%7B%0A%20%20%20%20%20%20%20%20_mint(msg.sender%2C%20initialSupply)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AAdditionally%2C%20we%20can%20tell%20Forge%20to%20verify%20our%20contract%20on%20Etherscan%2C%20Sourcify%20or%20Blockscout%2C%20if%20the%20network%20is%20supported%2C%20by%20passing%20%60--verify%60.%0A%0A%60%60%60sh%0Aforge%20create%20src%2FMyToken.sol%3AMyToken%20--rpc-url%20%3CYOUR_RPC_URL%3E%20%5C%0A%20%20%20%20--private-key%20%3CYOUR_PRIVATE_KEY%3E%20%5C%0A%20%20%20%20--broadcast%20%5C%0A%20%20%20%20--etherscan-api-key%20%3CYOUR_ETHERSCAN_API_KEY%3E%20%5C%0A%20%20%20%20--verify%20%5C%0A%20%20%20%20--constructor-args%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000%0A%60%60%60%0A%0A%23%23%20Multi-chain%20deployments%0A%0ADeploying%20and%20verifying%20multiple%20smart%20contracts%20on%20multiple%20chains%20in%20one%20go%20is%20possible%20by%20using%20forking%20cheatcodes.%0A%0AFor%20example%2C%20if%20you%20want%20to%20deploy%20a%20%60Counter%60%20contract%20on%20Sepolia%20Mainnet%20and%20Base%20Sepolia%20using%20a%20single%20command%2C%20you%20can%20configure%20RPC%20endpoints%20and%20verifiers%20as%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Asepolia%20%3D%20%22%24%7BSEPOLIA_URL%7D%22%0Abase-sepolia%20%3D%20%22%24%7BBASE_SEPOLIA_URL%7D%22%0A%0A%5Betherscan%5D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Abase-sepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0A%60%60%60%0A%0Aand%20create%20a%20%60CounterScript%60%20script%20as%3A%0A%0A%60%60%60solidity%0Acontract%20CounterScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.createSelectFork(%22sepolia%22)%3B%0A%20%20%20%20%20%20%20%20vm.startBroadcast()%3B%0A%20%20%20%20%20%20%20%20new%20Counter()%3B%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20vm.createSelectFork(%22base-sepolia%22)%3B%0A%20%20%20%20%20%20%20%20vm.startBroadcast()%3B%0A%20%20%20%20%20%20%20%20new%20Counter()%3B%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AWhen%20running%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FCounterScript.s.sol%20--slow%20--multi%20--broadcast%20--private-key%20%3CYOUR_PRIVATE_KEY%3E%20--verify%0A%60%60%60%0A%0AThe%20script%20will%20create%20the%20Sepolia%20Mainnet%20fork%20(%60vm.createSelectFork(%22sepolia%22)%60)%2C%20deploy%20and%20verify%20the%20%60Counter%60%20contract%2C%20and%20then%20move%20to%20Base%20Sepolia%20chain%20deployment%20(%60vm.createSelectFork(%22base-sepolia%22)%60).%0A%0AFor%20a%20list%20of%20all%20available%20forking%20cheatcodes%20see%20%5B%60forking%60%5D(%2Freference%2Fcheatcodes%2Fforking)%20docs.%0A%0A%23%23%20Verifying%20a%20pre-existing%20contract%0A%0AIt%20is%20recommended%20to%20use%20the%20%60--verify%60%20flag%20with%20%60forge%20create%60%20to%20automatically%20verify%20the%20contract%20on%20explorer%20after%20a%20deployment.%0ANote%20that%20for%20Etherscan%20%5B%60ETHERSCAN_API_KEY%60%5D(https%3A%2F%2Fdocs.etherscan.io%2Fgetting-started%2Fviewing-api-usage-statistics)%20must%20be%20set.%0A%0AIf%20you%20are%20verifying%20an%20already%20deployed%20contract%2C%20read%20on.%0A%0AYou%20can%20verify%20a%20contract%20on%20Etherscan%2C%20Sourcify%2C%20oklink%20or%20Blockscout%20with%20the%20%5B%60forge%20verify-contract%60%5D(%2Fforge%2Freference%2Fforge-verify-contract)%20command.%0A%0AYou%20must%20provide%3A%0A%0A-%20the%20contract%20address%0A-%20the%20contract%20name%20or%20the%20path%20to%20the%20contract%20%60%3Cpath%3E%3A%3Ccontractname%3E%60%0A-%20your%20Etherscan%20API%20key%20(env%3A%20%60ETHERSCAN_API_KEY%60)%20(if%20verifying%20on%20Etherscan%20or%20similar%20explorers%20e.g.%20BscScan%20%2F%20BaseScan%20%2F%20Polygonscan).%0A%0AMoreover%2C%20you%20may%20need%20to%20provide%3A%0A%0A-%20the%20constructor%20arguments%20in%20the%20ABI-encoded%20format%2C%20if%20there%20are%20any%0A-%20external%20linked%20libraries%20in%20%60src_file_path%3Alibrary_name%3Alibrary_address%60%20format%2C%20if%20there%20are%20any%0A-%20%5Bcompiler%20version%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions)%20used%20for%20build%2C%20with%208%20hex%20digits%20from%20the%20commit%20version%20prefix%20(the%20commit%20will%20usually%20not%20be%20a%20nightly%20build).%20It%20is%20auto-detected%20if%20not%20specified.%0A-%20the%20number%20of%20optimizations%2C%20if%20the%20Solidity%20optimizer%20was%20activated.%20It%20is%20auto-detected%20if%20not%20specified.%0A-%20the%20%5Bchain%20ID%5D(https%3A%2F%2Fevm-chainlist.netlify.app%2F)%2C%20if%20the%20contract%20is%20not%20on%20Ethereum%20Mainnet%0A%0ALet's%20say%20you%20want%20to%20verify%20%60MyToken%60%20(see%20above).%20You%20set%20the%20%5Bnumber%20of%20optimizations%5D(%2Fconfig%2Freference%2Fsolidity-compiler%23optimizer_runs)%20to%201%20million%2C%20compiled%20it%20with%20v0.8.10%2C%20and%20deployed%20it%2C%20as%20shown%20above%2C%20to%20the%20Sepolia%20testnet%20(chain%20ID%3A%2011155111).%20Note%20that%20%60--num-of-optimizations%60%20will%20default%20to%200%20if%20not%20set%20on%20verification%2C%20while%20it%20defaults%20to%20200%20if%20not%20set%20on%20deployment%2C%20so%20make%20sure%20you%20pass%20%60--num-of-optimizations%20200%60%20if%20you%20left%20the%20default%20compilation%20settings.%0A%0AHere's%20how%20to%20verify%20it%3A%0A%0A%60%60%60bash%0Aforge%20verify-contract%20%5C%0A%20%20%20%20--chain-id%2011155111%20%5C%0A%20%20%20%20--num-of-optimizations%201000000%20%5C%0A%20%20%20%20--watch%20%5C%0A%20%20%20%20--constructor-args%20%24(cast%20abi-encode%20%22constructor(string%2Cstring%2Cuint256%2Cuint256)%22%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000)%20%5C%0A%20%20%20%20--verifier%20etherscan%20%5C%0A%20%20%20%20--etherscan-api-key%20%3Cyour_etherscan_api_key%3E%20%5C%0A%20%20%20%20--compiler-version%20v0.8.10%2Bcommit.fc410830%20%5C%0A%20%20%20%20%3CCONTRACT_ADDRESS%3E%20%5C%0A%20%20%20%20src%2FMyToken.sol%3AMyToken%0A%0ASubmitted%20contract%20for%20verification%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Response%3A%20%60OK%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20GUID%3A%20%60a6yrbjp5prvakia6bqp5qdacczyfhkyi5j1r6qbds1js41ak1a%60%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20https%3A%2F%2Fsepolia.etherscan.io%2F%2Faddress%2F0x6a54%E2%80%A63a4c%23code%0A%60%60%60%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note%3A**%0A%3E%0A%3E%20External%20libraries%20can%20be%20specified%20with%20%60--libraries%60%20argument%2C%20one%20for%20each%20linked%20library.%20For%20example%2C%20to%20verify%20a%20contract%20with%20two%20linked%20libraries%20(%60Maths%60%20and%20%60Utils%60)%20the%20%60forge%20verify-command%60%20should%20be%20run%20with%0A%3E%0A%3E%20%60%60%60bash%0A%3E%20--libraries%20src%2Flib%2FMaths.sol%3AMaths%3A%3Cmaths_lib_address%3E%20%5C%0A%3E%20--libraries%20src%2Flib%2FUtils.sol%3AUtils%3A%3Cutils_lib_address%3E%0A%3E%20%60%60%60%0A%3E%0A%3E%20arguments.%0A%0AIt%20is%20recommended%20to%20use%20the%20%5B%60--watch%60%5D(%2Fforge%2Freference%2Fforge-verify-contract%23verify-contract-options)%20flag%20along%0Awith%20%60verify-contract%60%20command%20in%20order%20to%20poll%20for%20the%20verification%20result.%0A%0AIf%20the%20%60--watch%60%20flag%20was%20not%20supplied%2C%20you%20can%20check%0Athe%20verification%20status%20with%20the%20%5B%60forge%20verify-check%60%5D(%2Fforge%2Freference%2Fforge-verify-check)%20command%3A%0A%0A%60%60%60bash%0Aforge%20verify-check%20--chain-id%2011155111%20%3CGUID%3E%20%3CYOUR_ETHERSCAN_API_KEY%3E%0AContract%20successfully%20verified.%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3E%20%F0%9F%92%A1%20**Tip**%0A%3E%0A%3E%20Use%20Cast's%20%5B%60abi-encode%60%5D(%2Fcast%2Freference%2Fcast-abi-encode)%20to%20ABI-encode%20arguments.%0A%3E%0A%3E%20In%20this%20example%2C%20we%20ran%20%60cast%20abi-encode%20%22constructor(string%2Cstring%2Cuint8%2Cuint256)%22%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000%60%20to%20ABI-encode%20the%20arguments.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%23%23%23%20Troubleshooting%0A%0A%23%23%23%23%23%20%60missing%20hex%20prefix%20(%220x%22)%20for%20hex%20string%60%0A%0AMake%20sure%20the%20private%20key%20string%20begins%20with%20%600x%60.%0A%0A%23%23%23%23%23%20%60EIP-1559%20not%20activated%60%0A%0AEIP-1559%20is%20not%20supported%20or%20not%20activated%20on%20the%20RPC%20server.%20Pass%20the%20%60--legacy%60%20flag%20to%20use%20legacy%20transactions%20instead%20of%20the%20EIP-1559%20ones.%20If%20you%20do%20development%20in%20a%20local%20environment%2C%20you%20can%20use%20Hardhat%20instead%20of%20Ganache.%0A%0A%23%23%23%23%23%20%60Failed%20to%20parse%20tokens%60%0A%0AMake%20sure%20the%20passed%20arguments%20are%20of%20correct%20type.%0A%0A%23%23%23%23%23%20%60Signature%20error%60%0A%0AMake%20sure%20the%20private%20key%20is%20correct.%0A%0A%23%23%23%23%23%20%60Compiler%20version%20commit%20for%20verify%60%0A%0AIf%20you%20want%20to%20check%20the%20exact%20commit%20you%20are%20running%20locally%2C%20try%3A%20%60%20~%2F.svm%2F0.x.y%2Fsolc-0.x.y%20--version%60%20where%20%60x%60%20and%0A%60y%60%20are%20major%20and%20minor%20version%20numbers%20respectively.%20The%20output%20of%20this%20will%20be%20something%20like%3A%0A%0A%60%60%60bash%0Asolc%2C%20the%20solidity%20compiler%20commandline%20interface%0AVersion%3A%200.8.12%2Bcommit.f00d7308.Darwin.appleclang%0A%60%60%60%0A%0ANote%3A%20You%20cannot%20just%20paste%20the%20entire%20string%20%220.8.12%2Bcommit.f00d7308.Darwin.appleclang%22%20as%20the%20argument%20for%20the%20compiler-version.%20But%20you%20can%20use%20the%208%20hex%20digits%20of%20the%20commit%20to%20look%20up%20exactly%20what%20you%20should%20copy%20and%20paste%20from%20%5Bcompiler%20version%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions).%0A%0A%23%23%23%23%23%20%60Invalid%20API%20Key%60%0A%0AWith%20%5BEtherscan%20API%20V2%5D(https%3A%2F%2Fdocs.etherscan.io%2Fetherscan-v2)%2C%20only%20Etherscan%20keys%20are%20valid%2C%20this%20can%20be%20used%20for%20similar%20explorers%20eg%20BscScan%2FBaseScan%2FPolygonscan.%20Legacy%20keys%20from%20other%20explorers%20have%20been%20deprecated.%0A%0A%23%23%23%20Known%20Issues%0A%0A%23%23%23%23%20Verifying%20Contracts%20With%20Ambiguous%20Import%20Paths%0A%0AForge%20passes%20source%20directories%20(%60src%60%2C%20%60lib%60%2C%20%60test%60%20etc)%20as%20%60--include-path%60%20arguments%20to%20the%20compiler.%0AThis%20means%20that%20given%20the%20following%20project%20tree%0A%0A%60%60%60text%0A%7C-%20src%0A%7C--%20folder%0A%7C---%20Contract.sol%0A%7C---%20IContract.sol%0A%60%60%60%0A%0Ait%20is%20possible%20to%20import%20%60IContract%60%20inside%20the%20%60Contract.sol%60%20using%20%60folder%2FIContract.sol%60%20import%20path.%0A%0AEtherscan%20is%20not%20able%20to%20recompile%20such%20sources.%20Consider%20changing%20the%20imports%20to%20use%20relative%20import%20path.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Ctwomb3V.js"),__vite__mapDeps([17,1])),path:"/forge/overview",type:"mdx",filePath:"forge/overview.md",content:"---%0Adescription%3A%20Forge%20is%20a%20command-line%20tool%20for%20building%2C%20testing%2C%20and%20deploying%20smart%20contracts%20with%20advanced%20features%20like%20fuzzing%20and%20gas%20tracking.%0A---%0A%0A%23%23%20Forge%20Overview%0A%0AForge%20is%20a%20command-line%20tool%20that%20ships%20with%20Foundry.%20Forge%20tests%2C%20builds%2C%20and%20deploys%20your%20smart%20contracts.%0A%0AForge%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60cast%60%2C%20%60chisel%60%2C%20and%20%60anvil%60.%20If%20you%20haven't%20installed%20Foundry%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0A%0A%23%23%23%20Getting%20started%0A%0AThe%20best%20way%20to%20understand%20Forge%20is%20to%20simply%20try%20it%20(in%20less%20than%2030%20seconds!).%0A%0AFirst%2C%20let's%20initialize%20a%20new%20%60counter%60%20example%20repository%3A%0A%0A%60%60%60sh%0Aforge%20init%20counter%0A%60%60%60%0A%0ANext%20%60cd%60%20into%20%60counter%60%20and%20build%20%3A%0A%0A%60%60%60sh%0Aforge%20build%0A%60%60%60%0A%0A%60%60%60console%0A%5B%E2%A0%8A%5D%20Compiling...%0A%5B%E2%A0%94%5D%20Compiling%2027%20files%20with%20Solc%200.8.28%0A%5B%E2%A0%92%5D%20Solc%200.8.28%20finished%20in%20452.13ms%0ACompiler%20run%20successful!%0A%60%60%60%0A%0ALet's%20%5Btest%5D(https%3A%2F%2Fbook.getfoundry.sh%2Fforge%2Ftests%23tests)%20our%20contracts%3A%0A%0A%60%60%60sh%0Aforge%20test%0A%60%60%60%0A%0A%60%60%60console%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0A%0ARan%202%20tests%20for%20test%2FCounter.t.sol%3ACounterTest%0A%5BPASS%5D%20testFuzz_SetNumber(uint256)%20(runs%3A%20256%2C%20%CE%BC%3A%2031121%2C%20~%3A%2031277)%0A%5BPASS%5D%20test_Increment()%20(gas%3A%2031293)%0ASuite%20result%3A%20ok.%202%20passed%3B%200%20failed%3B%200%20skipped%3B%20finished%20in%205.35ms%20(4.86ms%20CPU%20time)%0A%0ARan%201%20test%20suite%20in%205.91ms%20(5.35ms%20CPU%20time)%3A%202%20tests%20passed%2C%200%20failed%2C%200%20skipped%20(2%20total%20tests)%0A%60%60%60%0A%0AFinally%2C%20let's%20run%20our%20deployment%20script%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FCounter.s.sol%0A%60%60%60%0A%0A%60%60%60%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0AScript%20ran%20successfully.%0AGas%20used%3A%20109037%0A%0AIf%20you%20wish%20to%20simulate%20on-chain%20transactions%20pass%20a%20RPC%20URL.%0A%60%60%60%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60forge%60%20Reference%5D(%2Fforge%2Freference%2Foverview)%20for%20a%20complete%20overview%20of%20all%20the%20available%20subcommands.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Ctwomb3V.js"),__vite__mapDeps([17,1])),path:"/forge/overview.html",type:"mdx",filePath:"forge/overview.md",content:"---%0Adescription%3A%20Forge%20is%20a%20command-line%20tool%20for%20building%2C%20testing%2C%20and%20deploying%20smart%20contracts%20with%20advanced%20features%20like%20fuzzing%20and%20gas%20tracking.%0A---%0A%0A%23%23%20Forge%20Overview%0A%0AForge%20is%20a%20command-line%20tool%20that%20ships%20with%20Foundry.%20Forge%20tests%2C%20builds%2C%20and%20deploys%20your%20smart%20contracts.%0A%0AForge%20is%20part%20of%20the%20Foundry%20suite%20and%20is%20installed%20alongside%20%60cast%60%2C%20%60chisel%60%2C%20and%20%60anvil%60.%20If%20you%20haven't%20installed%20Foundry%0Ayet%2C%20see%20%5BFoundry%20installation%5D(%2Fintroduction%2Finstallation).%0A%0A%23%23%23%20Getting%20started%0A%0AThe%20best%20way%20to%20understand%20Forge%20is%20to%20simply%20try%20it%20(in%20less%20than%2030%20seconds!).%0A%0AFirst%2C%20let's%20initialize%20a%20new%20%60counter%60%20example%20repository%3A%0A%0A%60%60%60sh%0Aforge%20init%20counter%0A%60%60%60%0A%0ANext%20%60cd%60%20into%20%60counter%60%20and%20build%20%3A%0A%0A%60%60%60sh%0Aforge%20build%0A%60%60%60%0A%0A%60%60%60console%0A%5B%E2%A0%8A%5D%20Compiling...%0A%5B%E2%A0%94%5D%20Compiling%2027%20files%20with%20Solc%200.8.28%0A%5B%E2%A0%92%5D%20Solc%200.8.28%20finished%20in%20452.13ms%0ACompiler%20run%20successful!%0A%60%60%60%0A%0ALet's%20%5Btest%5D(https%3A%2F%2Fbook.getfoundry.sh%2Fforge%2Ftests%23tests)%20our%20contracts%3A%0A%0A%60%60%60sh%0Aforge%20test%0A%60%60%60%0A%0A%60%60%60console%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0A%0ARan%202%20tests%20for%20test%2FCounter.t.sol%3ACounterTest%0A%5BPASS%5D%20testFuzz_SetNumber(uint256)%20(runs%3A%20256%2C%20%CE%BC%3A%2031121%2C%20~%3A%2031277)%0A%5BPASS%5D%20test_Increment()%20(gas%3A%2031293)%0ASuite%20result%3A%20ok.%202%20passed%3B%200%20failed%3B%200%20skipped%3B%20finished%20in%205.35ms%20(4.86ms%20CPU%20time)%0A%0ARan%201%20test%20suite%20in%205.91ms%20(5.35ms%20CPU%20time)%3A%202%20tests%20passed%2C%200%20failed%2C%200%20skipped%20(2%20total%20tests)%0A%60%60%60%0A%0AFinally%2C%20let's%20run%20our%20deployment%20script%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FCounter.s.sol%0A%60%60%60%0A%0A%60%60%60%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0AScript%20ran%20successfully.%0AGas%20used%3A%20109037%0A%0AIf%20you%20wish%20to%20simulate%20on-chain%20transactions%20pass%20a%20RPC%20URL.%0A%60%60%60%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5B%60forge%60%20Reference%5D(%2Fforge%2Freference%2Foverview)%20for%20a%20complete%20overview%20of%20all%20the%20available%20subcommands.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deterministic-deployments-using-create2-BmkwJwV4.js"),__vite__mapDeps([18,1])),path:"/guides/deterministic-deployments-using-create2",type:"mdx",filePath:"guides/deterministic-deployments-using-create2.md",content:"---%0Adescription%3A%20Deploy%20smart%20contracts%20to%20predictable%20addresses%20across%20multiple%20networks%20using%20CREATE2%20opcode%20for%20counterfactual%20interactions.%0A---%0A%0A%23%23%20Deterministic%20deployments%20using%20%60CREATE2%60%0A%0AEnshrined%20into%20the%20EVM%20as%20part%20of%20the%20%5BConstantinople%20fork%5D(https%3A%2F%2Fethereum.org%2Fen%2Fhistory%2F%23constantinople)%20of%202019%2C%20%60CREATE2%60%20is%20an%20opcode%20that%20started%20its%20journey%20as%20%5BEIP-1014%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-1014).%0A%60CREATE2%60%20allows%20you%20to%20deploy%20smart%20contracts%20to%20deterministic%20addresses%2C%20based%20on%20parameters%20controlled%20by%20the%20deployer.%0A%0AAs%20a%20result%2C%20it's%20often%20mentioned%20as%20enabling%20%22counterfactual%22%20deployments%2C%20where%20you%20can%20interact%20with%20an%20addresses%20that%20haven't%20been%20created%20yet%20because%20%60CREATE2%60%20guarantees%20known%20code%20can%20be%20placed%20at%20that%20address.%0A%0AThis%20is%20in%20contrast%20to%20the%20%60CREATE%60%20opcode%2C%20where%20the%20address%20of%20the%20deployed%20contract%20is%20a%20function%20of%20the%20deployer's%20nonce.%0AWith%20%60CREATE2%60%2C%20you%20can%20use%20the%20same%20deployer%20account%20to%20deploy%20contracts%20to%20the%20same%20address%20across%20multiple%20networks%2C%20even%20if%20the%20address%20has%20varying%20nonces.%0A%0AFor%20the%20best%20user%20experience%20it%20is%20recommended%20to%20avoid%20having%20different%20addresses%20of%20the%20same%20deployment%20across%20different%20EVM%20chains.%0A%0A%23%23%20Getting%20started%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20guide%20is%20intended%20to%20help%20you%20get%20started%20with%20configuring%20deterministic%20deployments%20using%20%60CREATE2%60.%0A%3E%20By%20default%2C%20%60new%20Counter%7Bsalt%3A%20salt%7D()%60%20will%20use%20the%20deterministic%20deployer%20at%20%5B%600x4e59b44847b379578588920ca78fbf26c0b4956c%60%5D(https%3A%2F%2Fgithub.com%2FArachnid%2Fdeterministic-deployment-proxy).%20Note%20that%20the%20deployer%20may%20not%20be%20available%20on%20all%20EVM%20chains.%0A%3E%20A%20different%20deployer%20address%20can%20be%20configured%20by%20setting%20%60create2_deployer%60%20in%20%60foundry.toml%60%20or%20by%20using%20%60--create2-deployer%60%20argument.%0A%0A%23%23%20Configuring%20your%20%60foundry.toml%60%0A%0AIn%20order%20to%20reliably%20deploy%20to%20deterministic%20addresses%20we%20will%20need%20to%20make%20sure%20our%20bytecode%20stays%20the%20same.%20To%20do%20so%20configure%20our%20%60foundry.toml%60%20as%20follows%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc%20%3D%20%22%3CSOLC_VERSION%3E%22%0Aevm_version%20%3D%20%22%3CEVM_VERSION%3E%22%0Abytecode_hash%20%3D%20%22none%22%0Acbor_metadata%20%3D%20false%0A%60%60%60%0A%0A%23%23%23%20Solc%20version%0A%0AIt%20is%20required%20to%20pin%20your%20%60solc%60%20(Solidity)%20version.%20It%20is%20generally%20recommended%20to%20use%20a%20recent%20version%20or%2C%20if%20preferred%2C%20the%20latest%20version.%0A%0A%23%23%23%20EVM%20version%0A%0ANext%2C%20configure%20your%20%60evm_version%60.%20It%20is%20generally%20recommended%20to%20use%20the%20most%20recent%20hardfork%20but%20depending%20on%20your%20deployment%20targets%20this%20may%20need%20to%20use%20an%20older%20hardfork%20due%20to%20opcode%20incompatibilities.%0A%0A%23%23%23%20Metadata%20and%20bytecode%0A%0ABy%20default%20the%20Solidity%20compiler%20appends%20the%20hash%20of%20the%20metadata%20file%20at%20end%20of%20the%20bytecode.%20This%20bytecode%20includes%20things%20like%20the%20compiler%20version%20and%20the%20ABI.%0A%0ASince%20the%20source%20file%20hashes%20are%20included%20in%20the%20metadata%20file%2C%20even%20if%20a%20single%20byte%20of%20source%20files%20changes%2C%20the%20metadata%20hash%20changes%20too.%20That%20means%2C%20if%20we%20can%20compile%20a%20contract%20with%20given%20source%20files%20and%20the%20bytecode%20%2B%20the%20appended%20metadata%20hash%20are%20exactly%20the%20same%20as%20an%20on-chain%20contract%2C%20we%20can%20be%20sure%20that%20this%20is%20a%20byte-by-byte%20match%20of%20the%20same%20source%20files%20and%20the%20same%20compilation%20settings.%0A%0AThe%20metadata%20file%20may%20look%20something%20like%20this%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22compiler%22%3A%20%7B%0A%20%20%20%20%22version%22%3A%20%220.8.28%2Bcommit.7893614a%22%0A%20%20%7D%2C%0A%20%20%22language%22%3A%20%22Solidity%22%2C%0A%20%20%22output%22%3A%20%7B%0A%20%20%20%20%22abi%22%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22inputs%22%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%22stateMutability%22%3A%20%22nonpayable%22%2C%0A%20%20%20%20%20%20%20%20%22type%22%3A%20%22function%22%2C%0A%20%20%20%20%20%20%20%20%22name%22%3A%20%22increment%22%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22inputs%22%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%22stateMutability%22%3A%20%22view%22%2C%0A%20%20%20%20%20%20%20%20%22type%22%3A%20%22function%22%2C%0A%20%20%20%20%20%20%20%20%22name%22%3A%20%22number%22%2C%0A%20%20%20%20%20%20%20%20%22outputs%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%5D%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22inputs%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22newNumber%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%22stateMutability%22%3A%20%22nonpayable%22%2C%0A%20%20%20%20%20%20%20%20%22type%22%3A%20%22function%22%2C%0A%20%20%20%20%20%20%20%20%22name%22%3A%20%22setNumber%22%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%5D%2C%0A%20%20%20%20%22devdoc%22%3A%20%7B%0A%20%20%20%20%20%20%22kind%22%3A%20%22dev%22%2C%0A%20%20%20%20%20%20%22methods%22%3A%20%7B%7D%2C%0A%20%20%20%20%20%20%22version%22%3A%201%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22userdoc%22%3A%20%7B%0A%20%20%20%20%20%20%22kind%22%3A%20%22user%22%2C%0A%20%20%20%20%20%20%22methods%22%3A%20%7B%7D%2C%0A%20%20%20%20%20%20%22version%22%3A%201%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%22settings%22%3A%20%7B%0A%20%20%20%20%22remappings%22%3A%20%5B%22forge-std%2F%3Dlib%2Fforge-std%2Fsrc%2F%22%5D%2C%0A%20%20%20%20%22optimizer%22%3A%20%7B%0A%20%20%20%20%20%20%22enabled%22%3A%20false%2C%0A%20%20%20%20%20%20%22runs%22%3A%20200%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22metadata%22%3A%20%7B%0A%20%20%20%20%20%20%22bytecodeHash%22%3A%20%22ipfs%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22compilationTarget%22%3A%20%7B%0A%20%20%20%20%20%20%22src%2FCounter.sol%22%3A%20%22Counter%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22evmVersion%22%3A%20%22cancun%22%2C%0A%20%20%20%20%22libraries%22%3A%20%7B%7D%0A%20%20%7D%2C%0A%20%20%22sources%22%3A%20%7B%0A%20%20%20%20%22src%2FCounter.sol%22%3A%20%7B%0A%20%20%20%20%20%20%22keccak256%22%3A%20%220x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053%22%2C%0A%20%20%20%20%20%20%22urls%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%22bzz-raw%3A%2F%2F94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200%22%2C%0A%20%20%20%20%20%20%20%20%22dweb%3A%2Fipfs%2FQmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC%22%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%22license%22%3A%20%22UNLICENSED%22%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%22version%22%3A%201%0A%7D%0A%60%60%60%0A%0AClick%20%5Bhere%5D(https%3A%2F%2Fplayground.sourcify.dev%2F)%20to%20learn%20more%20about%20the%20metadata%20file.%0A%0ABy%20disabling%20the%20metadata%20as%20follows%3A%0A%0A%60%60%60toml%0Abytecode_hash%20%3D%20%22none%22%0Acbor_metadata%20%3D%20false%0A%60%60%60%0A%0AYou%20are%20not%20including%20the%20metadata%20hash%20as%20part%20of%20the%20bytecode.%20This%20means%20that%20whilst%20your%20bytecode%20can%20now%20be%20deterministic%20you%20won't%20be%20able%20to%20have%20a%20%5B%60full%20match%60%5D(https%3A%2F%2Fdocs.sourcify.dev%2Fdocs%2Ffull-vs-partial-match%2F%23full-perfect-matches)%2C%20only%20a%20%5B%60partial%20match%60%5D(https%3A%2F%2Fdocs.sourcify.dev%2Fdocs%2Ffull-vs-partial-match%2F%23partial-matches)%20when%20verifying%20your%20contracts.%20Depending%20on%20your%20requirements%20this%20may%20be%20acceptable.%0A%0A%23%23%23%20Optimizer%0A%0AIf%20you%20are%20enabling%20the%20%60optimizer%60%20make%20sure%20your%20%60optimizer_runs%60%20stay%20consistent.%0A%0A%23%23%23%20Create2%20factory%0A%0ABy%20default%2C%20your%20contracts%20won't%20use%20the%20default%20(or%20specified%20using%20the%20%60create2_deployer%60%20configuration)%20create2%20factory%20and%20will%20default%20to%20executing%20the%20create2%20opcode%20from%20the%20contract%20it's%20executed%20on.%20For%20example%2C%20this%20behavior%20occurs%20when%20running%20tests%20or%20executing%20scripts%20without%20a%20private%20key.%0A%0AYou%20can%20use%20the%20following%20configuration%3A%0A%0A%60%60%60toml%0Aalways_use_create_2_factory%20%3D%20true%0A%60%60%60%0A%0AIf%20you%20wish%20to%20always%20use%20the%20create2%20factory.%20This%20comes%20handy%20if%20you%20wish%20to%20use%20the%20create2%20factory%20deployment%20addresses%20in%20your%20tests%20for%20example.%0A%0A%23%23%20Deploying%20the%20contract%0A%0AWhen%20using%20Solidity's%20default%20%60CREATE%60%20where%20the%20new%20address%20of%20a%20contract%20is%20determined%20by%20taking%20the%20%60hash%60%20of%20the%20%60sender%60's%20address%20and%20the%20%60sender%60's%20%60nonce%60%3A%0A%0A%60%60%60%0Anew_contract_address%20%3D%20keccak256(rlp_encode(%5Bsender%2C%20nonce%5D))%5B12%3A%5D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Using%20the%20default%20CREATE%20opcode%0ACounter%20counter%20%3D%20new%20Counter()%3B%0A%60%60%60%0A%0ABecause%20the%20%60nonce%60%20can%20only%20be%20used%20a%20single%20time%20it%20on%20each%20chain%20it%20is%20an%20unreliable%20way%20of%20deploying%20to%20the%20same%20contract%20address.%0A%0AInstead%20let's%20use%20%60CREATE2%60's%20%60salt%60%20parameter.%0A%0AThe%20%60salt%60%20parameter%20in%20%60CREATE2%60%20is%20a%20key%20component%20that%20determines%20the%20final%20deployed%20contract%20address.%20It%20allows%20for%20flexibility%20and%20uniqueness%20in%20deterministic%20deployments.%20The%20address%20of%20the%20deployed%20contract%20is%20derived%20using%20the%20following%20formula%3A%0A%0A%60%60%60%0Anew_contract_address%20%3D%20keccak256(0xff%20%2B%2B%20deployer%20%2B%2B%20salt%20%2B%2B%20keccak256(init_code))%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Passing%20the%20%60salt%60%20parameter%20to%20the%20CREATE2%20opcode%0ACounter%20counter%20%3D%20new%20Counter%7Bsalt%3A%20salt%7D()%3B%0A%60%60%60%0A%0A-%20%600xff%60%20is%20a%20fixed%20prefix%20ensuring%20uniqueness.%0A-%20%60deployer%60%20is%20the%20address%20executing%20the%20CREATE2%20operation.%0A-%20%60salt%60%20is%20a%2032-byte%20value%20chosen%20by%20the%20deployer.%0A-%20%60keccak256(bytecode)%60%20is%20the%20hash%20of%20the%20contract's%20creation%20bytecode.%0A%0AGiven%20that%20%600xff%60%20is%20fixed%2C%20the%20%60deployer%60%20is%20a%20deterministic%20deployer%20(%5B0x4e59b44847b379578588920ca78fbf26c0b4956c%5D(https%3A%2F%2Fgithub.com%2FArachnid%2Fdeterministic-deployment-proxy))%20and%20our%20bytecode%20is%20fixed%20we%20can%20use%20the%20%60salt%60%20parameter%20to%20fully%20control%20our%20new%20contract%20address.%0A%0A%23%23%20Additional%20resources%0A%0A-%20%5BContract%20Metadata%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fmetadata.html)%0A-%20%5BDeterministic%20deployments%20agnostic%20to%20the%20initialization%20code%5D(https%3A%2F%2Fgithub.com%2FVectorized%2Fsolady%2Fblob%2Fmain%2Fsrc%2Futils%2FCREATE3.sol)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deterministic-deployments-using-create2-BmkwJwV4.js"),__vite__mapDeps([18,1])),path:"/guides/deterministic-deployments-using-create2.html",type:"mdx",filePath:"guides/deterministic-deployments-using-create2.md",content:"---%0Adescription%3A%20Deploy%20smart%20contracts%20to%20predictable%20addresses%20across%20multiple%20networks%20using%20CREATE2%20opcode%20for%20counterfactual%20interactions.%0A---%0A%0A%23%23%20Deterministic%20deployments%20using%20%60CREATE2%60%0A%0AEnshrined%20into%20the%20EVM%20as%20part%20of%20the%20%5BConstantinople%20fork%5D(https%3A%2F%2Fethereum.org%2Fen%2Fhistory%2F%23constantinople)%20of%202019%2C%20%60CREATE2%60%20is%20an%20opcode%20that%20started%20its%20journey%20as%20%5BEIP-1014%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-1014).%0A%60CREATE2%60%20allows%20you%20to%20deploy%20smart%20contracts%20to%20deterministic%20addresses%2C%20based%20on%20parameters%20controlled%20by%20the%20deployer.%0A%0AAs%20a%20result%2C%20it's%20often%20mentioned%20as%20enabling%20%22counterfactual%22%20deployments%2C%20where%20you%20can%20interact%20with%20an%20addresses%20that%20haven't%20been%20created%20yet%20because%20%60CREATE2%60%20guarantees%20known%20code%20can%20be%20placed%20at%20that%20address.%0A%0AThis%20is%20in%20contrast%20to%20the%20%60CREATE%60%20opcode%2C%20where%20the%20address%20of%20the%20deployed%20contract%20is%20a%20function%20of%20the%20deployer's%20nonce.%0AWith%20%60CREATE2%60%2C%20you%20can%20use%20the%20same%20deployer%20account%20to%20deploy%20contracts%20to%20the%20same%20address%20across%20multiple%20networks%2C%20even%20if%20the%20address%20has%20varying%20nonces.%0A%0AFor%20the%20best%20user%20experience%20it%20is%20recommended%20to%20avoid%20having%20different%20addresses%20of%20the%20same%20deployment%20across%20different%20EVM%20chains.%0A%0A%23%23%20Getting%20started%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20guide%20is%20intended%20to%20help%20you%20get%20started%20with%20configuring%20deterministic%20deployments%20using%20%60CREATE2%60.%0A%3E%20By%20default%2C%20%60new%20Counter%7Bsalt%3A%20salt%7D()%60%20will%20use%20the%20deterministic%20deployer%20at%20%5B%600x4e59b44847b379578588920ca78fbf26c0b4956c%60%5D(https%3A%2F%2Fgithub.com%2FArachnid%2Fdeterministic-deployment-proxy).%20Note%20that%20the%20deployer%20may%20not%20be%20available%20on%20all%20EVM%20chains.%0A%3E%20A%20different%20deployer%20address%20can%20be%20configured%20by%20setting%20%60create2_deployer%60%20in%20%60foundry.toml%60%20or%20by%20using%20%60--create2-deployer%60%20argument.%0A%0A%23%23%20Configuring%20your%20%60foundry.toml%60%0A%0AIn%20order%20to%20reliably%20deploy%20to%20deterministic%20addresses%20we%20will%20need%20to%20make%20sure%20our%20bytecode%20stays%20the%20same.%20To%20do%20so%20configure%20our%20%60foundry.toml%60%20as%20follows%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc%20%3D%20%22%3CSOLC_VERSION%3E%22%0Aevm_version%20%3D%20%22%3CEVM_VERSION%3E%22%0Abytecode_hash%20%3D%20%22none%22%0Acbor_metadata%20%3D%20false%0A%60%60%60%0A%0A%23%23%23%20Solc%20version%0A%0AIt%20is%20required%20to%20pin%20your%20%60solc%60%20(Solidity)%20version.%20It%20is%20generally%20recommended%20to%20use%20a%20recent%20version%20or%2C%20if%20preferred%2C%20the%20latest%20version.%0A%0A%23%23%23%20EVM%20version%0A%0ANext%2C%20configure%20your%20%60evm_version%60.%20It%20is%20generally%20recommended%20to%20use%20the%20most%20recent%20hardfork%20but%20depending%20on%20your%20deployment%20targets%20this%20may%20need%20to%20use%20an%20older%20hardfork%20due%20to%20opcode%20incompatibilities.%0A%0A%23%23%23%20Metadata%20and%20bytecode%0A%0ABy%20default%20the%20Solidity%20compiler%20appends%20the%20hash%20of%20the%20metadata%20file%20at%20end%20of%20the%20bytecode.%20This%20bytecode%20includes%20things%20like%20the%20compiler%20version%20and%20the%20ABI.%0A%0ASince%20the%20source%20file%20hashes%20are%20included%20in%20the%20metadata%20file%2C%20even%20if%20a%20single%20byte%20of%20source%20files%20changes%2C%20the%20metadata%20hash%20changes%20too.%20That%20means%2C%20if%20we%20can%20compile%20a%20contract%20with%20given%20source%20files%20and%20the%20bytecode%20%2B%20the%20appended%20metadata%20hash%20are%20exactly%20the%20same%20as%20an%20on-chain%20contract%2C%20we%20can%20be%20sure%20that%20this%20is%20a%20byte-by-byte%20match%20of%20the%20same%20source%20files%20and%20the%20same%20compilation%20settings.%0A%0AThe%20metadata%20file%20may%20look%20something%20like%20this%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22compiler%22%3A%20%7B%0A%20%20%20%20%22version%22%3A%20%220.8.28%2Bcommit.7893614a%22%0A%20%20%7D%2C%0A%20%20%22language%22%3A%20%22Solidity%22%2C%0A%20%20%22output%22%3A%20%7B%0A%20%20%20%20%22abi%22%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22inputs%22%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%22stateMutability%22%3A%20%22nonpayable%22%2C%0A%20%20%20%20%20%20%20%20%22type%22%3A%20%22function%22%2C%0A%20%20%20%20%20%20%20%20%22name%22%3A%20%22increment%22%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22inputs%22%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%22stateMutability%22%3A%20%22view%22%2C%0A%20%20%20%20%20%20%20%20%22type%22%3A%20%22function%22%2C%0A%20%20%20%20%20%20%20%20%22name%22%3A%20%22number%22%2C%0A%20%20%20%20%20%20%20%20%22outputs%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%5D%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22inputs%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22newNumber%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%22stateMutability%22%3A%20%22nonpayable%22%2C%0A%20%20%20%20%20%20%20%20%22type%22%3A%20%22function%22%2C%0A%20%20%20%20%20%20%20%20%22name%22%3A%20%22setNumber%22%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%5D%2C%0A%20%20%20%20%22devdoc%22%3A%20%7B%0A%20%20%20%20%20%20%22kind%22%3A%20%22dev%22%2C%0A%20%20%20%20%20%20%22methods%22%3A%20%7B%7D%2C%0A%20%20%20%20%20%20%22version%22%3A%201%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22userdoc%22%3A%20%7B%0A%20%20%20%20%20%20%22kind%22%3A%20%22user%22%2C%0A%20%20%20%20%20%20%22methods%22%3A%20%7B%7D%2C%0A%20%20%20%20%20%20%22version%22%3A%201%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%22settings%22%3A%20%7B%0A%20%20%20%20%22remappings%22%3A%20%5B%22forge-std%2F%3Dlib%2Fforge-std%2Fsrc%2F%22%5D%2C%0A%20%20%20%20%22optimizer%22%3A%20%7B%0A%20%20%20%20%20%20%22enabled%22%3A%20false%2C%0A%20%20%20%20%20%20%22runs%22%3A%20200%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22metadata%22%3A%20%7B%0A%20%20%20%20%20%20%22bytecodeHash%22%3A%20%22ipfs%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22compilationTarget%22%3A%20%7B%0A%20%20%20%20%20%20%22src%2FCounter.sol%22%3A%20%22Counter%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22evmVersion%22%3A%20%22cancun%22%2C%0A%20%20%20%20%22libraries%22%3A%20%7B%7D%0A%20%20%7D%2C%0A%20%20%22sources%22%3A%20%7B%0A%20%20%20%20%22src%2FCounter.sol%22%3A%20%7B%0A%20%20%20%20%20%20%22keccak256%22%3A%20%220x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053%22%2C%0A%20%20%20%20%20%20%22urls%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%22bzz-raw%3A%2F%2F94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200%22%2C%0A%20%20%20%20%20%20%20%20%22dweb%3A%2Fipfs%2FQmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC%22%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%22license%22%3A%20%22UNLICENSED%22%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%22version%22%3A%201%0A%7D%0A%60%60%60%0A%0AClick%20%5Bhere%5D(https%3A%2F%2Fplayground.sourcify.dev%2F)%20to%20learn%20more%20about%20the%20metadata%20file.%0A%0ABy%20disabling%20the%20metadata%20as%20follows%3A%0A%0A%60%60%60toml%0Abytecode_hash%20%3D%20%22none%22%0Acbor_metadata%20%3D%20false%0A%60%60%60%0A%0AYou%20are%20not%20including%20the%20metadata%20hash%20as%20part%20of%20the%20bytecode.%20This%20means%20that%20whilst%20your%20bytecode%20can%20now%20be%20deterministic%20you%20won't%20be%20able%20to%20have%20a%20%5B%60full%20match%60%5D(https%3A%2F%2Fdocs.sourcify.dev%2Fdocs%2Ffull-vs-partial-match%2F%23full-perfect-matches)%2C%20only%20a%20%5B%60partial%20match%60%5D(https%3A%2F%2Fdocs.sourcify.dev%2Fdocs%2Ffull-vs-partial-match%2F%23partial-matches)%20when%20verifying%20your%20contracts.%20Depending%20on%20your%20requirements%20this%20may%20be%20acceptable.%0A%0A%23%23%23%20Optimizer%0A%0AIf%20you%20are%20enabling%20the%20%60optimizer%60%20make%20sure%20your%20%60optimizer_runs%60%20stay%20consistent.%0A%0A%23%23%23%20Create2%20factory%0A%0ABy%20default%2C%20your%20contracts%20won't%20use%20the%20default%20(or%20specified%20using%20the%20%60create2_deployer%60%20configuration)%20create2%20factory%20and%20will%20default%20to%20executing%20the%20create2%20opcode%20from%20the%20contract%20it's%20executed%20on.%20For%20example%2C%20this%20behavior%20occurs%20when%20running%20tests%20or%20executing%20scripts%20without%20a%20private%20key.%0A%0AYou%20can%20use%20the%20following%20configuration%3A%0A%0A%60%60%60toml%0Aalways_use_create_2_factory%20%3D%20true%0A%60%60%60%0A%0AIf%20you%20wish%20to%20always%20use%20the%20create2%20factory.%20This%20comes%20handy%20if%20you%20wish%20to%20use%20the%20create2%20factory%20deployment%20addresses%20in%20your%20tests%20for%20example.%0A%0A%23%23%20Deploying%20the%20contract%0A%0AWhen%20using%20Solidity's%20default%20%60CREATE%60%20where%20the%20new%20address%20of%20a%20contract%20is%20determined%20by%20taking%20the%20%60hash%60%20of%20the%20%60sender%60's%20address%20and%20the%20%60sender%60's%20%60nonce%60%3A%0A%0A%60%60%60%0Anew_contract_address%20%3D%20keccak256(rlp_encode(%5Bsender%2C%20nonce%5D))%5B12%3A%5D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Using%20the%20default%20CREATE%20opcode%0ACounter%20counter%20%3D%20new%20Counter()%3B%0A%60%60%60%0A%0ABecause%20the%20%60nonce%60%20can%20only%20be%20used%20a%20single%20time%20it%20on%20each%20chain%20it%20is%20an%20unreliable%20way%20of%20deploying%20to%20the%20same%20contract%20address.%0A%0AInstead%20let's%20use%20%60CREATE2%60's%20%60salt%60%20parameter.%0A%0AThe%20%60salt%60%20parameter%20in%20%60CREATE2%60%20is%20a%20key%20component%20that%20determines%20the%20final%20deployed%20contract%20address.%20It%20allows%20for%20flexibility%20and%20uniqueness%20in%20deterministic%20deployments.%20The%20address%20of%20the%20deployed%20contract%20is%20derived%20using%20the%20following%20formula%3A%0A%0A%60%60%60%0Anew_contract_address%20%3D%20keccak256(0xff%20%2B%2B%20deployer%20%2B%2B%20salt%20%2B%2B%20keccak256(init_code))%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Passing%20the%20%60salt%60%20parameter%20to%20the%20CREATE2%20opcode%0ACounter%20counter%20%3D%20new%20Counter%7Bsalt%3A%20salt%7D()%3B%0A%60%60%60%0A%0A-%20%600xff%60%20is%20a%20fixed%20prefix%20ensuring%20uniqueness.%0A-%20%60deployer%60%20is%20the%20address%20executing%20the%20CREATE2%20operation.%0A-%20%60salt%60%20is%20a%2032-byte%20value%20chosen%20by%20the%20deployer.%0A-%20%60keccak256(bytecode)%60%20is%20the%20hash%20of%20the%20contract's%20creation%20bytecode.%0A%0AGiven%20that%20%600xff%60%20is%20fixed%2C%20the%20%60deployer%60%20is%20a%20deterministic%20deployer%20(%5B0x4e59b44847b379578588920ca78fbf26c0b4956c%5D(https%3A%2F%2Fgithub.com%2FArachnid%2Fdeterministic-deployment-proxy))%20and%20our%20bytecode%20is%20fixed%20we%20can%20use%20the%20%60salt%60%20parameter%20to%20fully%20control%20our%20new%20contract%20address.%0A%0A%23%23%20Additional%20resources%0A%0A-%20%5BContract%20Metadata%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fmetadata.html)%0A-%20%5BDeterministic%20deployments%20agnostic%20to%20the%20initialization%20code%5D(https%3A%2F%2Fgithub.com%2FVectorized%2Fsolady%2Fblob%2Fmain%2Fsrc%2Futils%2FCREATE3.sol)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./eip712-Co2qYY7u.js"),__vite__mapDeps([19,1])),path:"/guides/eip712",type:"mdx",filePath:"guides/eip712.md",content:"%23%23%20Implementing%20and%20Testing%20EIP-712%20signatures%0A%0AFoundry%20offers%20multiple%20utilities%20to%20make%20it%20easy%20and%20reliable%20to%20work%20with%20EIP-712%20signatures.%0A%0AEIP-712%20is%20a%20standard%20for%20hashing%20and%20signing%20typed%20structured%20data.%20Instead%20of%20signing%20an%20opaque%20hash%2C%20users%20can%20sign%20human-readable%20messages%2C%20significantly%20improving%20usability%20and%20security.%20This%20is%20particularly%20useful%20for%20meta-transactions%2C%20permit%20functions%20(like%20in%20ERC-20%20permits)%2C%20and%20other%20off-chain%20signature%20schemes.%20However%2C%20correctly%20implementing%20EIP-712%20hashing%20logic%20can%20be%20intricate.%20Foundry's%20suite%20provides%20powerful%20utilities%20specifically%20designed%20to%20help%20developers%20test%20and%20validate%20their%20EIP-712%20implementations%20with%20confidence.%0A%0AThis%20guide%20will%20show%20you%20how%20to%20leverage%20Foundry's%20EIP-712%20commands%20and%20cheatcodes%20with%20a%20practical%2C%20real-world%20example%2C%20demonstrating%20how%20to%20validate%20a%20complex%20library%20like%20Uniswap's%20%60PermitHash.sol%60%20from%20their%20Permit2%20system.%20This%20will%20showcase%20how%20to%20ensure%20that%20a%20custom%20EIP-712%20hashing%20implementation%20aligns%20perfectly%20with%20the%20standard.%0A%0A%23%23%20EIP-712%20commands%0A%0AForge%20offers%20a%20couple%20of%20commands%20which%20are%20useful%20when%20working%20with%20EIP-712%20types%3A%0A%0A%23%23%23%20forge%20eip712%0A%0AOutputs%20the%20canonical%20type%20definitions%20of%20the%20structs%20in%20the%20target%20files%20in%20the%20terminal.%0A%0A%3A%3A%3Atip%0AUse%20the%20%60forge%20eip712%60%20command%20to%20generate%20the%20canonical%20type%20definitions%20and%20manually%20copy-paste%20them%20into%20your%20contracts.%20This%20way%20you%20will%20avoid%20typos.%0A%3A%3A%3A%0A%0A%23%23%23%20forge%20bind-json%0A%0AAutomatically%20generates%20solidity%20bindings%20for%20the%20structs%20in%20the%20target%20files.%0AThe%20generated%20bindings%20can%20easily%20be%20serialized%20to%20JSON%20strings%2C%20and%20also%20parsed%20from%20JSON%20strings.%0AAdditionally%2C%20these%20bindings%20also%20allow%20the%20EIP-712%20cheatcodes%20to%20derive%20the%20type%20definitions%20just%20their%20name.%0A%0A%23%23%20EIP-712%20cheatcodes%0A%0AFoundry%20offers%20several%20cheatcodes%20to%20interact%20with%20EIP-712%20types%3A%0A%0A%23%23%23%23%20vm.eip712HashType%0A%0A-%20Generates%20the%20%60typeHash%60%20for%20an%20EIP-712%20struct%20definition.%20This%20is%20%60keccak256%60%20of%20the%20canonical%20type%20encoding.%0A-%20It%20can%20take%20a%20direct%20string%20definition%20(i.e.%20%60%22Mail(address%20from%2Cstring%20contents)%22%60)%20or%20a%20type%20name%20if%20you've%20used%20%60forge%20bind-json%60%20to%20generate%20bindings%20from%20your%20Solidity%20structs.%0A%0A%23%23%23%23%20vm.eip712HashStruct%0A%0A-%20Computes%20the%20%60structHash%60%3A%20%60keccak256(typeHash%20%2B%20encodeData(struct)).%60%0A-%20%60encodeData(struct)%60%20is%20the%20ABI-encoded%20values%20of%20the%20struct's%20members.%0A-%20Like%20%60vm.eip712HashType%60%2C%20it%20accepts%20either%20a%20direct%20type%20definition%20string%20or%20a%20type%20name%20(with%20bindings).%0A%0A%23%23%23%23%20vm.eip712HashTypedData%0A%0A-%20Generates%20the%20final%20EIP-712%20digest%20to%20be%20signed%3A%20%60keccak256(%22%5Cx19%5Cx01%22%20%2B%20domainSeparator%20%2B%20structHash)%60.%0A-%20It%20takes%20a%20full%20JSON%20string%20representing%20the%20typed%20data%20as%20per%20the%20EIP-712%20specification.%20Useful%20for%20end-to-end%20testing%20of%20signature%20verification.%0A%0A%23%23%23%20Testing%20Uniswap's%20%60PermitHash%60%20library%0A%0AUniswap's%20%60Permit2%60%20system%20utilizes%20the%20%60PermitHash.sol%60%20library%20to%20create%20hashes%20that%20comply%20with%20the%20EIP-712%20standard%20for%20various%20permit%20structures.%20In%20this%20guide%2C%20we%20will%20demonstrate%20how%20to%20use%20Foundry%20to%20verify%20that%20the%20library%20correctly%20implements%20the%20EIP-712%20hashing%20rules.%0A%0AOur%20objective%20is%20to%20focus%20on%20a%20few%20hashing%20functions%20within%20%60PermitHash.sol%60.%20We%20will%20provide%20these%20functions%20with%20sample%20data%20and%20then%20use%20%60vm.eip712HashStruct%60%20%E2%80%94with%20the%20same%20data%20and%20the%20canonical%20EIP-712%20type%20definition%E2%80%94%20to%20determine%20if%20the%20generated%20hashes%20match.%0A%0A%23%23%23%23%20Setting%20up%20the%20test%20environment%0A%0ABefore%20starting%20with%20the%20validations%2C%20we%20have%20to%20create%20the%20%60PermitHash.t.sol%60%20test%20file.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Aimport%20%22forge-std%2FTest.sol%22%3B%0A%2F%2F%20Import%20the%20library%20we%20are%20testing%0Aimport%20%7BPermitHash%7D%20from%20%22src%2Flibraries%2FPermitHash.sol%22%3B%0Aimport%20%7BIAllowanceTransfer%20as%20IAT%7D%20from%20%22src%2Finterfaces%2FIAllowanceTransfer.sol%22%3B%0A%0A%2F*%20These%20are%20the%20structs%2C%20defined%20in%20%60IAT%60%2C%20that%20%60PermitHash%60%20relies%20on%3A%0A%0Astruct%20PermitDetails%20%7B%0A%20%20address%20token%3B%0A%20%20uint160%20amount%3B%0A%20%20uint48%20expiration%3B%0A%20%20uint48%20nonce%3B%0A%7D%0A%0Astruct%20PermitSingle%20%7B%0A%20%20PermitDetails%20details%3B%0A%20%20address%20spender%3B%0A%20%20uint256%20sigDeadline%3B%0A%7D%0A*%2F%0A%60%60%60%0A%0A%3E%20**Tip%3A**%20as%20previously%20explained%2C%20you%20can%20use%20%60forge%20bind-json%60%20to%20leverage%20Foundry's%20capabilities%2C%20and%20have%20higher%20guarantees%20when%20testing.%20By%20running%20that%20command%2C%20you%20can%20simply%20use%20the%20struct%20name%20when%20using%20the%20EIP-712%20cheatcodes%2C%20and%20Foundry%20will%20automatically%20derive%20the%20canonical%20type%20definition.%0A%0A%23%23%23%20Validating%20%60typHash%60%0A%0AFirst%20of%20all%2C%20ensure%20that%20the%20type%20hashes%20for%20each%20of%20the%20structs%20are%20correct%3A%0A%0A%60%60%60solidity%0Acontract%20PermitHashTest%20is%20Test%20%7B%0A%20%20function%20test_validatePermitDetails_typeHash()%20public%20%7B%0A%20%20%20%20%2F%2F%20This%20test%20doesn't%20rely%20on%20the%20bindings%20generated%20by%20%60forge%20json%60%2C%20therefore%20it%20requires%0A%20%20%20%20%2F%2F%20the%20string%20representation%20of%20the%20type%20as%20an%20input%20for%20the%20cheatcode.%0A%0A%20%20%20%20%2F%2F%20Assume%20available%20on%20Uniswap's%20library.%20Otherwise%20you'd%20have%20to%20copy-paste%20it%20manually.%0A%20%20%20%20string%20memory%20_PERMIT_DETAILS_TYPEDEF%20%3D%0A%20%20%20%20%20%20%22PermitDetails(address%20token%2Cuint160%20amount%2Cuint48%20expiration%2Cuint48%20nonce)%22%3B%0A%0A%20%20%20%20%2F%2F%20The%20type%20hash%20constant%20defined%20in%20Uniswap's%20library%0A%20%20%20%20bytes32%20typeHash%20%3D%20PermitHash._PERMIT_DETAILS_TYPEHASH%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(with%20string%20representation)%0A%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashType(_PERMIT_DETAILS_TYPEDEF)%3B%0A%0A%20%20%20%20assertEq(typeHash%2C%20expected%2C%20%22PermitDetails%20typeHash%20mismatch%22)%3B%0A%20%20%7D%0A%0A%20%20function%20test_validatePermitSingle_typeHash()%20public%20%7B%0A%20%20%20%20%2F%2F%20The%20type%20hash%20constant%20defined%20in%20Uniswap's%20library%0A%20%20%20%20bytes32%20typeHash%20%3D%20PermitHash._PERMIT_SINGLE_TYPEHASH%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(needs%20bindings)%0A%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashType(%22PermitSingle%22)%3B%0A%0A%20%20%20%20assertEq(typeHash%2C%20expected%2C%20%22PermitSingle%20typeHash%20mismatch%22)%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%3A%3A%3Anote%0AIf%20the%20library's%20%60typeHash%60%20was%20flawed%2C%20the%20assertion%20against%20the%20cheatcode%20would%20surface%20it.%0A%3A%3A%3A%0A%0A%23%23%23%20Validating%20%60structHash%60%0A%0AAfter%20being%20certain%20that%20the%20hashes%20of%20the%20type%20definitions%20are%20correct%2C%20let's%20validate%20that%20the%20hashes%20of%20the%20structs%20follow%20the%20EIP-712%20specification.%0A%0A%60%60%60solidity%0Acontract%20PermitHashTest%20is%20Test%20%7B%0A%20%20address%20TOKEN%20%3D%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%3B%0A%20%20address%20SPENDER%20%3D%200xdEADBEeF00000000000000000000000000000000%3B%0A%0A%20%20function%20test_validatePermitDetails_structHash()%20public%20%7B%0A%20%20%20%20%2F%2F%20This%20test%20doesn't%20rely%20on%20the%20bindings%20generated%20by%20%60forge%20bind-json%60%2C%20therefore%20it%20requires%0A%20%20%20%20%2F%2F%20the%20string%20representation%20of%20the%20type%20as%20an%20input%20for%20the%20cheatcode.%0A%0A%20%20%20%20%2F%2F%20Assume%20available%20on%20Uniswap's%20library.%20Otherwise%20you'd%20have%20to%20copy-paste%20it%20manually.%0A%20%20%20%20string%20memory%20_PERMIT_DETAILS_TYPEDEF%20%3D%0A%20%20%20%20%20%20%22PermitDetails(address%20token%2Cuint160%20amount%2Cuint48%20expiration%2Cuint48%20nonce)%22%3B%0A%0A%20%20%20%20%2F%2F%20Prepare%20the%20test%20data%20for%20PermitDetails%0A%20%20%20%20IAllowanceTransfer.PermitDetails%20memory%20details%20%3D%20IAllowanceTransfer.PermitDetails(%7B%0A%20%20%20%20%20%20token%3A%20TOKEN%2C%0A%20%20%20%20%20%20amount%3A%20100%20ether%2C%0A%20%20%20%20%20%20expiration%3A%20uint48(block.timestamp%20%2B%203600)%2C%0A%20%20%20%20%20%20nonce%3A%20123%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Get%20the%20structHash%20from%20Uniswap's%20library.%0A%20%20%20%20%2F%2F%20Despite%20private%2C%20assume%20it%20is%20available%20with%20a%20public%20function.%0A%20%20%20%20bytes32%20structHash%20%3D%20PermitHash._hashPermitDetails(details)%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(with%20string%20representation)%0A%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashStruct(_PERMIT_DETAILS_TYPEDEF%2C%20abi.encode(details))%3B%0A%0A%20%20%20%20assertEq(structHash%2C%20expected%2C%20%22PermitDetails%20structHash%20mismatch%22)%3B%0A%20%20%7D%0A%0A%20%20function%20test_validatePermitSingle_structHash()%20public%20%7B%0A%20%20%20%20IAT.PermitDetails%20memory%20details%20%3D%20IAT.PermitDetails(%7B%0A%20%20%20%20%20%20token%3A%20TOKEN%2C%0A%20%20%20%20%20%20amount%3A%20200%20ether%2C%0A%20%20%20%20%20%20expiration%3A%20uint48(block.timestamp%20%2B%207200)%2C%0A%20%20%20%20%20%20nonce%3A%20456%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20IAT.PermitSingle%20memory%20permitSingle%20%3D%20IAT.PermitSingle(%7B%0A%20%20%20%20%20%20details%3A%20details%2C%0A%20%20%20%20%20%20spender%3A%20SPENDER%2C%0A%20%20%20%20%20%20sigDeadline%3A%20block.timestamp%20%2B%2010800%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Get%20the%20structHash%20from%20Uniswap's%20library.%0A%20%20%20%20bytes32%20structHash%20%3D%20PermitHash.hash(permitSingle)%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(needs%20bindings)%0A%20%20%20%20bytes32%20expectedStructHash%20%3D%20vm.eip712HashStruct(%22PermitSingle%22%2C%20abi.encode(permitSingle))%3B%0A%0A%20%20%20%20assertEq(structHash%2C%20expected%2C%20%22PermitSingle%20structHash%20mismatch%22)%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%3A%3A%3Anote%0AIf%20the%20library's%20%60structHash%60%20was%20flawed%2C%20the%20assertion%20against%20the%20cheatcode%20would%20surface%20it.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./eip712-Co2qYY7u.js"),__vite__mapDeps([19,1])),path:"/guides/eip712.html",type:"mdx",filePath:"guides/eip712.md",content:"%23%23%20Implementing%20and%20Testing%20EIP-712%20signatures%0A%0AFoundry%20offers%20multiple%20utilities%20to%20make%20it%20easy%20and%20reliable%20to%20work%20with%20EIP-712%20signatures.%0A%0AEIP-712%20is%20a%20standard%20for%20hashing%20and%20signing%20typed%20structured%20data.%20Instead%20of%20signing%20an%20opaque%20hash%2C%20users%20can%20sign%20human-readable%20messages%2C%20significantly%20improving%20usability%20and%20security.%20This%20is%20particularly%20useful%20for%20meta-transactions%2C%20permit%20functions%20(like%20in%20ERC-20%20permits)%2C%20and%20other%20off-chain%20signature%20schemes.%20However%2C%20correctly%20implementing%20EIP-712%20hashing%20logic%20can%20be%20intricate.%20Foundry's%20suite%20provides%20powerful%20utilities%20specifically%20designed%20to%20help%20developers%20test%20and%20validate%20their%20EIP-712%20implementations%20with%20confidence.%0A%0AThis%20guide%20will%20show%20you%20how%20to%20leverage%20Foundry's%20EIP-712%20commands%20and%20cheatcodes%20with%20a%20practical%2C%20real-world%20example%2C%20demonstrating%20how%20to%20validate%20a%20complex%20library%20like%20Uniswap's%20%60PermitHash.sol%60%20from%20their%20Permit2%20system.%20This%20will%20showcase%20how%20to%20ensure%20that%20a%20custom%20EIP-712%20hashing%20implementation%20aligns%20perfectly%20with%20the%20standard.%0A%0A%23%23%20EIP-712%20commands%0A%0AForge%20offers%20a%20couple%20of%20commands%20which%20are%20useful%20when%20working%20with%20EIP-712%20types%3A%0A%0A%23%23%23%20forge%20eip712%0A%0AOutputs%20the%20canonical%20type%20definitions%20of%20the%20structs%20in%20the%20target%20files%20in%20the%20terminal.%0A%0A%3A%3A%3Atip%0AUse%20the%20%60forge%20eip712%60%20command%20to%20generate%20the%20canonical%20type%20definitions%20and%20manually%20copy-paste%20them%20into%20your%20contracts.%20This%20way%20you%20will%20avoid%20typos.%0A%3A%3A%3A%0A%0A%23%23%23%20forge%20bind-json%0A%0AAutomatically%20generates%20solidity%20bindings%20for%20the%20structs%20in%20the%20target%20files.%0AThe%20generated%20bindings%20can%20easily%20be%20serialized%20to%20JSON%20strings%2C%20and%20also%20parsed%20from%20JSON%20strings.%0AAdditionally%2C%20these%20bindings%20also%20allow%20the%20EIP-712%20cheatcodes%20to%20derive%20the%20type%20definitions%20just%20their%20name.%0A%0A%23%23%20EIP-712%20cheatcodes%0A%0AFoundry%20offers%20several%20cheatcodes%20to%20interact%20with%20EIP-712%20types%3A%0A%0A%23%23%23%23%20vm.eip712HashType%0A%0A-%20Generates%20the%20%60typeHash%60%20for%20an%20EIP-712%20struct%20definition.%20This%20is%20%60keccak256%60%20of%20the%20canonical%20type%20encoding.%0A-%20It%20can%20take%20a%20direct%20string%20definition%20(i.e.%20%60%22Mail(address%20from%2Cstring%20contents)%22%60)%20or%20a%20type%20name%20if%20you've%20used%20%60forge%20bind-json%60%20to%20generate%20bindings%20from%20your%20Solidity%20structs.%0A%0A%23%23%23%23%20vm.eip712HashStruct%0A%0A-%20Computes%20the%20%60structHash%60%3A%20%60keccak256(typeHash%20%2B%20encodeData(struct)).%60%0A-%20%60encodeData(struct)%60%20is%20the%20ABI-encoded%20values%20of%20the%20struct's%20members.%0A-%20Like%20%60vm.eip712HashType%60%2C%20it%20accepts%20either%20a%20direct%20type%20definition%20string%20or%20a%20type%20name%20(with%20bindings).%0A%0A%23%23%23%23%20vm.eip712HashTypedData%0A%0A-%20Generates%20the%20final%20EIP-712%20digest%20to%20be%20signed%3A%20%60keccak256(%22%5Cx19%5Cx01%22%20%2B%20domainSeparator%20%2B%20structHash)%60.%0A-%20It%20takes%20a%20full%20JSON%20string%20representing%20the%20typed%20data%20as%20per%20the%20EIP-712%20specification.%20Useful%20for%20end-to-end%20testing%20of%20signature%20verification.%0A%0A%23%23%23%20Testing%20Uniswap's%20%60PermitHash%60%20library%0A%0AUniswap's%20%60Permit2%60%20system%20utilizes%20the%20%60PermitHash.sol%60%20library%20to%20create%20hashes%20that%20comply%20with%20the%20EIP-712%20standard%20for%20various%20permit%20structures.%20In%20this%20guide%2C%20we%20will%20demonstrate%20how%20to%20use%20Foundry%20to%20verify%20that%20the%20library%20correctly%20implements%20the%20EIP-712%20hashing%20rules.%0A%0AOur%20objective%20is%20to%20focus%20on%20a%20few%20hashing%20functions%20within%20%60PermitHash.sol%60.%20We%20will%20provide%20these%20functions%20with%20sample%20data%20and%20then%20use%20%60vm.eip712HashStruct%60%20%E2%80%94with%20the%20same%20data%20and%20the%20canonical%20EIP-712%20type%20definition%E2%80%94%20to%20determine%20if%20the%20generated%20hashes%20match.%0A%0A%23%23%23%23%20Setting%20up%20the%20test%20environment%0A%0ABefore%20starting%20with%20the%20validations%2C%20we%20have%20to%20create%20the%20%60PermitHash.t.sol%60%20test%20file.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Aimport%20%22forge-std%2FTest.sol%22%3B%0A%2F%2F%20Import%20the%20library%20we%20are%20testing%0Aimport%20%7BPermitHash%7D%20from%20%22src%2Flibraries%2FPermitHash.sol%22%3B%0Aimport%20%7BIAllowanceTransfer%20as%20IAT%7D%20from%20%22src%2Finterfaces%2FIAllowanceTransfer.sol%22%3B%0A%0A%2F*%20These%20are%20the%20structs%2C%20defined%20in%20%60IAT%60%2C%20that%20%60PermitHash%60%20relies%20on%3A%0A%0Astruct%20PermitDetails%20%7B%0A%20%20address%20token%3B%0A%20%20uint160%20amount%3B%0A%20%20uint48%20expiration%3B%0A%20%20uint48%20nonce%3B%0A%7D%0A%0Astruct%20PermitSingle%20%7B%0A%20%20PermitDetails%20details%3B%0A%20%20address%20spender%3B%0A%20%20uint256%20sigDeadline%3B%0A%7D%0A*%2F%0A%60%60%60%0A%0A%3E%20**Tip%3A**%20as%20previously%20explained%2C%20you%20can%20use%20%60forge%20bind-json%60%20to%20leverage%20Foundry's%20capabilities%2C%20and%20have%20higher%20guarantees%20when%20testing.%20By%20running%20that%20command%2C%20you%20can%20simply%20use%20the%20struct%20name%20when%20using%20the%20EIP-712%20cheatcodes%2C%20and%20Foundry%20will%20automatically%20derive%20the%20canonical%20type%20definition.%0A%0A%23%23%23%20Validating%20%60typHash%60%0A%0AFirst%20of%20all%2C%20ensure%20that%20the%20type%20hashes%20for%20each%20of%20the%20structs%20are%20correct%3A%0A%0A%60%60%60solidity%0Acontract%20PermitHashTest%20is%20Test%20%7B%0A%20%20function%20test_validatePermitDetails_typeHash()%20public%20%7B%0A%20%20%20%20%2F%2F%20This%20test%20doesn't%20rely%20on%20the%20bindings%20generated%20by%20%60forge%20json%60%2C%20therefore%20it%20requires%0A%20%20%20%20%2F%2F%20the%20string%20representation%20of%20the%20type%20as%20an%20input%20for%20the%20cheatcode.%0A%0A%20%20%20%20%2F%2F%20Assume%20available%20on%20Uniswap's%20library.%20Otherwise%20you'd%20have%20to%20copy-paste%20it%20manually.%0A%20%20%20%20string%20memory%20_PERMIT_DETAILS_TYPEDEF%20%3D%0A%20%20%20%20%20%20%22PermitDetails(address%20token%2Cuint160%20amount%2Cuint48%20expiration%2Cuint48%20nonce)%22%3B%0A%0A%20%20%20%20%2F%2F%20The%20type%20hash%20constant%20defined%20in%20Uniswap's%20library%0A%20%20%20%20bytes32%20typeHash%20%3D%20PermitHash._PERMIT_DETAILS_TYPEHASH%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(with%20string%20representation)%0A%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashType(_PERMIT_DETAILS_TYPEDEF)%3B%0A%0A%20%20%20%20assertEq(typeHash%2C%20expected%2C%20%22PermitDetails%20typeHash%20mismatch%22)%3B%0A%20%20%7D%0A%0A%20%20function%20test_validatePermitSingle_typeHash()%20public%20%7B%0A%20%20%20%20%2F%2F%20The%20type%20hash%20constant%20defined%20in%20Uniswap's%20library%0A%20%20%20%20bytes32%20typeHash%20%3D%20PermitHash._PERMIT_SINGLE_TYPEHASH%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(needs%20bindings)%0A%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashType(%22PermitSingle%22)%3B%0A%0A%20%20%20%20assertEq(typeHash%2C%20expected%2C%20%22PermitSingle%20typeHash%20mismatch%22)%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%3A%3A%3Anote%0AIf%20the%20library's%20%60typeHash%60%20was%20flawed%2C%20the%20assertion%20against%20the%20cheatcode%20would%20surface%20it.%0A%3A%3A%3A%0A%0A%23%23%23%20Validating%20%60structHash%60%0A%0AAfter%20being%20certain%20that%20the%20hashes%20of%20the%20type%20definitions%20are%20correct%2C%20let's%20validate%20that%20the%20hashes%20of%20the%20structs%20follow%20the%20EIP-712%20specification.%0A%0A%60%60%60solidity%0Acontract%20PermitHashTest%20is%20Test%20%7B%0A%20%20address%20TOKEN%20%3D%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%3B%0A%20%20address%20SPENDER%20%3D%200xdEADBEeF00000000000000000000000000000000%3B%0A%0A%20%20function%20test_validatePermitDetails_structHash()%20public%20%7B%0A%20%20%20%20%2F%2F%20This%20test%20doesn't%20rely%20on%20the%20bindings%20generated%20by%20%60forge%20bind-json%60%2C%20therefore%20it%20requires%0A%20%20%20%20%2F%2F%20the%20string%20representation%20of%20the%20type%20as%20an%20input%20for%20the%20cheatcode.%0A%0A%20%20%20%20%2F%2F%20Assume%20available%20on%20Uniswap's%20library.%20Otherwise%20you'd%20have%20to%20copy-paste%20it%20manually.%0A%20%20%20%20string%20memory%20_PERMIT_DETAILS_TYPEDEF%20%3D%0A%20%20%20%20%20%20%22PermitDetails(address%20token%2Cuint160%20amount%2Cuint48%20expiration%2Cuint48%20nonce)%22%3B%0A%0A%20%20%20%20%2F%2F%20Prepare%20the%20test%20data%20for%20PermitDetails%0A%20%20%20%20IAllowanceTransfer.PermitDetails%20memory%20details%20%3D%20IAllowanceTransfer.PermitDetails(%7B%0A%20%20%20%20%20%20token%3A%20TOKEN%2C%0A%20%20%20%20%20%20amount%3A%20100%20ether%2C%0A%20%20%20%20%20%20expiration%3A%20uint48(block.timestamp%20%2B%203600)%2C%0A%20%20%20%20%20%20nonce%3A%20123%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Get%20the%20structHash%20from%20Uniswap's%20library.%0A%20%20%20%20%2F%2F%20Despite%20private%2C%20assume%20it%20is%20available%20with%20a%20public%20function.%0A%20%20%20%20bytes32%20structHash%20%3D%20PermitHash._hashPermitDetails(details)%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(with%20string%20representation)%0A%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashStruct(_PERMIT_DETAILS_TYPEDEF%2C%20abi.encode(details))%3B%0A%0A%20%20%20%20assertEq(structHash%2C%20expected%2C%20%22PermitDetails%20structHash%20mismatch%22)%3B%0A%20%20%7D%0A%0A%20%20function%20test_validatePermitSingle_structHash()%20public%20%7B%0A%20%20%20%20IAT.PermitDetails%20memory%20details%20%3D%20IAT.PermitDetails(%7B%0A%20%20%20%20%20%20token%3A%20TOKEN%2C%0A%20%20%20%20%20%20amount%3A%20200%20ether%2C%0A%20%20%20%20%20%20expiration%3A%20uint48(block.timestamp%20%2B%207200)%2C%0A%20%20%20%20%20%20nonce%3A%20456%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20IAT.PermitSingle%20memory%20permitSingle%20%3D%20IAT.PermitSingle(%7B%0A%20%20%20%20%20%20details%3A%20details%2C%0A%20%20%20%20%20%20spender%3A%20SPENDER%2C%0A%20%20%20%20%20%20sigDeadline%3A%20block.timestamp%20%2B%2010800%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Get%20the%20structHash%20from%20Uniswap's%20library.%0A%20%20%20%20bytes32%20structHash%20%3D%20PermitHash.hash(permitSingle)%3B%0A%0A%20%20%20%20%2F%2F%20Use%20the%20cheatcode%20to%20get%20the%20expected%20hash%20(needs%20bindings)%0A%20%20%20%20bytes32%20expectedStructHash%20%3D%20vm.eip712HashStruct(%22PermitSingle%22%2C%20abi.encode(permitSingle))%3B%0A%0A%20%20%20%20assertEq(structHash%2C%20expected%2C%20%22PermitSingle%20structHash%20mismatch%22)%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%3A%3A%3Anote%0AIf%20the%20library's%20%60structHash%60%20was%20flawed%2C%20the%20assertion%20against%20the%20cheatcode%20would%20surface%20it.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forking-mainnet-with-cast-anvil-CwLXVHpQ.js"),__vite__mapDeps([20,1])),path:"/guides/forking-mainnet-with-cast-anvil",type:"mdx",filePath:"guides/forking-mainnet-with-cast-anvil.md",content:"---%0Adescription%3A%20Fork%20live%20Ethereum%20networks%20using%20Anvil%20and%20interact%20with%20real%20contracts%20using%20Cast%20for%20testing%20and%20experimentation.%0A---%0A%0A%23%23%20Forking%20Mainnet%20with%20%60Cast%60%20and%20%60Anvil%60%0A%0ABy%20combining%20%5BAnvil%5D%5Banvil%5D%20and%20%5BCast%5D%5Bcast%5D%2C%20you%20can%20fork%20and%20test%20by%20interacting%20with%20contracts%20on%20a%20real%20network.%20The%20goal%20of%20this%20guide%20is%20to%20show%20you%20how%20to%20transfer%20DAI%20tokens%20from%20someone%20who%20holds%20DAI%20to%20an%20account%20created%20by%20Anvil.%0A%0A%23%23%20Getting%20started%0A%0ALet's%20start%20by%20forking%20mainnet.%0A%0A%60%60%60sh%0Aanvil%20--fork-url%20https%3A%2F%2Fmainnet.infura.io%2Fv3%2F%24INFURA_KEY%0A%60%60%60%0A%0AYou%20will%20see%2010%20accounts%20are%20created%20with%20their%20public%20and%20private%20keys.%20We%20will%20work%20with%20%600xf39fd6e51aad88f6f4ce6ab8827279cfffb92266%60%20(Let's%20call%20this%20user%20Alice).%0A%0A%23%23%20Transferring%20DAI%0A%0AGo%20to%20Etherscan%20and%20search%20for%20holders%20of%20DAI%20tokens%20(%5Bhere%5D(https%3A%2F%2Fetherscan.io%2Ftoken%2F0x6b175474e89094c44da98b954eedeac495271d0f%23balances)).%20Let's%20pick%20a%20random%20account.%20In%20this%20example%20we%20will%20be%20using%20%600xfc2eE3bD619B7cfb2dE2C797b96DeeCbD7F68e46%60.%20Let's%20export%20our%20contracts%20and%20accounts%20as%20environment%20variables%3A%0A%0A%60%60%60sh%0Aexport%20ALICE%3D0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266%0Aexport%20DAI%3D0x6b175474e89094c44da98b954eedeac495271d0f%0Aexport%20UNLUCKY_USER%3D0xfc2eE3bD619B7cfb2dE2C797b96DeeCbD7F68e46%0A%60%60%60%0A%0AWe%20can%20check%20Alice's%20balance%20using%20%5B%60cast%20call%60%5D%5Bcast-call%5D%3A%0A%0A%60%60%60sh%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24ALICE%0A0%0A%60%60%60%0A%0ASimilarly%2C%20we%20can%20also%20check%20our%20unlucky%20user's%20balance%20using%20%60cast%20call%60%3A%0A%0A%60%60%60sh%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24UNLUCKY_USER%0A21840114973524208109322438%0A%60%60%60%0A%0ALet's%20transfer%20some%20tokens%20from%20the%20unlucky%20user%20to%20Alice%20using%20%5B%60cast%20send%60%5D%5Bcast-send%5D%3A%0A%0A%60%60%60sh%0A%23%20This%20calls%20Anvil%20and%20lets%20us%20impersonate%20our%20unlucky%20user%0Acast%20rpc%20anvil_impersonateAccount%20%24UNLUCKY_USER%0Acast%20send%20%24DAI%20%5C%0A--from%20%24UNLUCKY_USER%20%5C%0A%20%20%22transfer(address%2Cuint256)(bool)%22%20%5C%0A%20%20%24ALICE%20%5C%0A%20%20300000000000000000000000%20%5C%0A%20%20--unlocked%0AblockHash%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200xbf31c45f6935a0714bb4f709b5e3850ab0cc2f8bffe895fefb653d154e0aa062%0AblockNumber%20%20%20%20%20%20%20%20%20%20%20%20%2015052891%0A...%0A%60%60%60%0A%0ALet's%20check%20that%20the%20transfer%20worked%3A%0A%0A%60%60%60sh%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24ALICE%0A300000000000000000000000%0A%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24UNLUCKY_USER%0A21540114973524208109322438%0A%60%60%60%0A%0A%5Banvil%5D%3A%20..%2Freference%2Fanvil%2F%0A%5Bcast%5D%3A%20..%2Fcast%2Freference%2F%0A%5Bcast-call%5D%3A%20..%2Fcast%2Freference%2Fcast-call.md%0A%5Bcast-send%5D%3A%20..%2Fcast%2Freference%2Fcast-send.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forking-mainnet-with-cast-anvil-CwLXVHpQ.js"),__vite__mapDeps([20,1])),path:"/guides/forking-mainnet-with-cast-anvil.html",type:"mdx",filePath:"guides/forking-mainnet-with-cast-anvil.md",content:"---%0Adescription%3A%20Fork%20live%20Ethereum%20networks%20using%20Anvil%20and%20interact%20with%20real%20contracts%20using%20Cast%20for%20testing%20and%20experimentation.%0A---%0A%0A%23%23%20Forking%20Mainnet%20with%20%60Cast%60%20and%20%60Anvil%60%0A%0ABy%20combining%20%5BAnvil%5D%5Banvil%5D%20and%20%5BCast%5D%5Bcast%5D%2C%20you%20can%20fork%20and%20test%20by%20interacting%20with%20contracts%20on%20a%20real%20network.%20The%20goal%20of%20this%20guide%20is%20to%20show%20you%20how%20to%20transfer%20DAI%20tokens%20from%20someone%20who%20holds%20DAI%20to%20an%20account%20created%20by%20Anvil.%0A%0A%23%23%20Getting%20started%0A%0ALet's%20start%20by%20forking%20mainnet.%0A%0A%60%60%60sh%0Aanvil%20--fork-url%20https%3A%2F%2Fmainnet.infura.io%2Fv3%2F%24INFURA_KEY%0A%60%60%60%0A%0AYou%20will%20see%2010%20accounts%20are%20created%20with%20their%20public%20and%20private%20keys.%20We%20will%20work%20with%20%600xf39fd6e51aad88f6f4ce6ab8827279cfffb92266%60%20(Let's%20call%20this%20user%20Alice).%0A%0A%23%23%20Transferring%20DAI%0A%0AGo%20to%20Etherscan%20and%20search%20for%20holders%20of%20DAI%20tokens%20(%5Bhere%5D(https%3A%2F%2Fetherscan.io%2Ftoken%2F0x6b175474e89094c44da98b954eedeac495271d0f%23balances)).%20Let's%20pick%20a%20random%20account.%20In%20this%20example%20we%20will%20be%20using%20%600xfc2eE3bD619B7cfb2dE2C797b96DeeCbD7F68e46%60.%20Let's%20export%20our%20contracts%20and%20accounts%20as%20environment%20variables%3A%0A%0A%60%60%60sh%0Aexport%20ALICE%3D0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266%0Aexport%20DAI%3D0x6b175474e89094c44da98b954eedeac495271d0f%0Aexport%20UNLUCKY_USER%3D0xfc2eE3bD619B7cfb2dE2C797b96DeeCbD7F68e46%0A%60%60%60%0A%0AWe%20can%20check%20Alice's%20balance%20using%20%5B%60cast%20call%60%5D%5Bcast-call%5D%3A%0A%0A%60%60%60sh%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24ALICE%0A0%0A%60%60%60%0A%0ASimilarly%2C%20we%20can%20also%20check%20our%20unlucky%20user's%20balance%20using%20%60cast%20call%60%3A%0A%0A%60%60%60sh%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24UNLUCKY_USER%0A21840114973524208109322438%0A%60%60%60%0A%0ALet's%20transfer%20some%20tokens%20from%20the%20unlucky%20user%20to%20Alice%20using%20%5B%60cast%20send%60%5D%5Bcast-send%5D%3A%0A%0A%60%60%60sh%0A%23%20This%20calls%20Anvil%20and%20lets%20us%20impersonate%20our%20unlucky%20user%0Acast%20rpc%20anvil_impersonateAccount%20%24UNLUCKY_USER%0Acast%20send%20%24DAI%20%5C%0A--from%20%24UNLUCKY_USER%20%5C%0A%20%20%22transfer(address%2Cuint256)(bool)%22%20%5C%0A%20%20%24ALICE%20%5C%0A%20%20300000000000000000000000%20%5C%0A%20%20--unlocked%0AblockHash%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200xbf31c45f6935a0714bb4f709b5e3850ab0cc2f8bffe895fefb653d154e0aa062%0AblockNumber%20%20%20%20%20%20%20%20%20%20%20%20%2015052891%0A...%0A%60%60%60%0A%0ALet's%20check%20that%20the%20transfer%20worked%3A%0A%0A%60%60%60sh%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24ALICE%0A300000000000000000000000%0A%0Acast%20call%20%24DAI%20%5C%0A%20%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%24UNLUCKY_USER%0A21540114973524208109322438%0A%60%60%60%0A%0A%5Banvil%5D%3A%20..%2Freference%2Fanvil%2F%0A%5Bcast%5D%3A%20..%2Fcast%2Freference%2F%0A%5Bcast-call%5D%3A%20..%2Fcast%2Freference%2Fcast-call.md%0A%5Bcast-send%5D%3A%20..%2Fcast%2Freference%2Fcast-send.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./foundry-in-docker-D68LKNH5.js"),__vite__mapDeps([21,1])),path:"/guides/foundry-in-docker",type:"mdx",filePath:"guides/foundry-in-docker.md",content:"---%0Adescription%3A%20Build%2C%20test%2C%20and%20deploy%20smart%20contracts%20using%20Foundry's%20Docker%20image%20for%20portable%20and%20reproducible%20development%20workflows.%0A---%0A%0A%23%23%20Running%20Foundry%20inside%20of%20Docker%0A%0AThis%20guide%20shows%20you%20how%20to%20build%2C%20test%2C%20and%20deploy%20a%20smart%20contract%20using%20Foundry's%20Docker%20image.%20It%20adapts%20code%20from%20the%20%5B%60first%20steps%60%5D%20guide.%20If%20you%20haven't%20completed%20that%20guide%20yet%2C%20and%20are%20new%20to%20solidity%2C%20you%20may%20want%20to%20start%20with%20it%20first.%20Alternatively%2C%20if%20you%20have%20some%20familiarity%20with%20Docker%20and%20Solidity%2C%20you%20can%20use%20your%20own%20existing%20project%20and%20adjust%20accordingly.%0A%0A%3E%20This%20guide%20is%20for%20illustrative%20purposes%20only%20and%20provided%20on%20an%20as-is%20basis.%20The%20guide%20is%20not%20audited%20nor%20fully%20tested.%20No%20code%20in%20this%20guide%20should%20be%20used%20in%20a%20production%20environment.%0A%0A%23%23%23%20Installation%20and%20Setup%0A%0AThe%20only%20installation%20required%20to%20run%20this%20guide%20is%20Docker%2C%20and%20optionally%2C%20an%20IDE%20of%20your%20choice.%0AFollow%20the%20%5BDocker%20installation%20instructions%5D(%2Fintroduction%2Finstallation).%0A%0ATo%20keep%20future%20commands%20succinct%2C%20let's%20re-tag%20the%20image%3A%0A%20%60docker%20tag%20ghcr.io%2Ffoundry-rs%2Ffoundry%3Alatest%20foundry%3Alatest%60%0A%0AHaving%20Foundry%20installed%20locally%20is%20not%20strictly%20required%2C%20but%20it%20may%20be%20helpful%20for%20debugging.%20You%20can%20install%20it%20using%20%5Bfoundryup%5D(%2Fintroduction%2Finstallation%23using-foundryup).%0A%0AFinally%2C%20to%20use%20any%20of%20the%20%60cast%60%20or%20%60forge%20create%60%20portions%20of%20this%20guide%2C%20you%20will%20need%20access%20to%20an%20Ethereum%20node.%20If%20you%20don't%20have%20your%20own%20node%20running%20(likely)%2C%20you%20can%20use%20a%203rd%20party%20node%20service.%20We%20won't%20recommend%20a%20specific%20provider%20in%20this%20guide.%20A%20good%20place%20to%20start%20learning%20about%20Nodes-as-a-Service%20is%20%5BEthereum's%20article%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fnodes-and-clients%2Fnodes-as-a-service%2F)%20on%20the%20subject.%0A%0A**For%20the%20rest%20of%20this%20guide%2C%20it%20is%20assumed%20that%20the%20RPC%20endpoint%20of%20your%20ethereum%20node%20is%20set%20like%20this**%3A%20%60export%20RPC_URL%3D%3CYOUR_RPC_URL%3E%60%0A%0A%23%23%23%20A%20tour%20around%20the%20Foundry%20docker%20image%0A%0AThe%20docker%20image%20can%20be%20used%20in%20two%20primary%20ways%3A%0A%0A1.%20As%20an%20interface%20directly%20to%20forge%20and%20cast%0A2.%20As%20a%20base%20image%20for%20building%20your%20own%20containerized%20test%2C%20build%2C%20and%20deployment%20tooling%0A%0AWe%20will%20cover%20both%2C%20but%20let's%20start%20by%20taking%20a%20look%20at%20interfacing%20with%20foundry%20using%20docker.%20This%20is%20also%20a%20good%20test%20that%20your%20local%20installation%20worked!%0A%0AWe%20can%20run%20any%20of%20the%20%60cast%60%20%5Bcommands%5D(%2Fcast%2Freference%2Foverview)%20against%20our%20docker%20image.%20Let's%20fetch%20the%20latest%20block%20information%3A%0A%0A%60%60%60sh%0Adocker%20run%20foundry%20%22cast%20block%20--rpc-url%20%24RPC_URL%20latest%22%0AbaseFeePerGas%20%20%20%20%20%20%20%20%220xb634241e3%22%0Adifficulty%20%20%20%20%20%20%20%20%20%20%20%220x2e482bdf51572b%22%0AextraData%20%20%20%20%20%20%20%20%20%20%20%20%220x486976656f6e20686b%22%0AgasLimit%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1c9c380%22%0AgasUsed%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x652993%22%0Ahash%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x181748772da2f968bcc91940c8523bb6218a7d57669ded06648c9a9fb6839db5%22%0AlogsBloom%20%20%20%20%20%20%20%20%20%20%20%20%220x406010046100001198c220108002b606400029444814008210820c04012804131847150080312500300051044208430002008029880029011520380060262400001c538d00440a885a02219d49624aa110000003094500022c003600a00258009610c410323580032000849a0408a81a0a060100022505202280c61880c80020e080244400440404520d210429a0000400010089410c8408162903609c920014028a94019088681018c909980701019201808040004100000080540610a9144d050020220c10a24c01c000002005400400022420140e18100400e10254926144c43a200cc008142080854088100128844003010020c344402386a8c011819408%22%0Aminer%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1ad91ee08f21be3de0ba2ba6918e714da6b45836%22%0AmixHash%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220xb920857687476c1bcb21557c5f6196762a46038924c5f82dc66300347a1cfc01%22%0Anonce%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1ce6929033fbba90%22%0Anumber%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220xdd3309%22%0AparentHash%20%20%20%20%20%20%20%20%20%20%20%220x39c6e1aa997d18a655c6317131589fd327ae814ef84e784f5eb1ab54b9941212%22%0AreceiptsRoot%20%20%20%20%20%20%20%20%20%220x4724f3b270dcc970f141e493d8dc46aeba6fffe57688210051580ac960fe0037%22%0AsealFields%20%20%20%20%20%20%20%20%20%20%20%5B%5D%0Asha3Uncles%20%20%20%20%20%20%20%20%20%20%20%220x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347%22%0Asize%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1d6bb%22%0AstateRoot%20%20%20%20%20%20%20%20%20%20%20%20%220x0d4b714990132cf0f21801e2931b78454b26aad706fc6dc16b64e04f0c14737a%22%0Atimestamp%20%20%20%20%20%20%20%20%20%20%20%20%220x6246259b%22%0AtotalDifficulty%20%20%20%20%20%20%220x9923da68627095fd2e7%22%0Atransactions%20%20%20%20%20%20%20%20%20%5B...%5D%0Auncles%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B%5D%0A%60%60%60%0A%0AIf%20we're%20in%20a%20directory%20with%20some%20Solidity%20%5Bsource%20code%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Ffoundry-docker-guide)%2C%20we%20can%20mount%20that%20directory%20into%20Docker%20and%20use%20%60forge%60%20however%20we%20wish.%20For%20example%3A%0A%0A%60%60%60sh%0Adocker%20run%20-v%20%24PWD%3A%2Fapp%20foundry%20%22forge%20test%20--root%20%2Fapp%20--watch%22%0A%60%60%60%0A%0AYou%20can%20see%20our%20code%20was%20compiled%20and%20tested%20entirely%20within%20the%20container.%20Also%2C%20since%20we%20passed%20the%20%60--watch%60%20option%2C%20the%20container%20will%20recompile%20the%20code%20whenever%20a%20change%20is%20detected.%0A%0A%23%23%23%20Creating%20a%20%22build%20and%20test%22%20image%0A%0ALet's%20use%20the%20Foundry%20docker%20image%20as%20a%20base%20for%20using%20our%20own%20Docker%20image.%20We'll%20use%20the%20image%20to%3A%0A%0A1.%20Build%20our%20solidity%20code%0A2.%20Run%20our%20solidity%20tests%0A%0AA%20simple%20%60Dockerfile%60%20can%20accomplish%20these%20two%20goals%3A%0A%0A%60%60%60docker%0A%23%20Use%20the%20latest%20foundry%20image%0AFROM%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%0A%23%20Copy%20our%20source%20code%20into%20the%20container%0AWORKDIR%20%2Fapp%0A%0A%23%20Build%20and%20test%20the%20source%20code%0ACOPY%20.%20.%0ARUN%20forge%20build%0ARUN%20forge%20test%0A%60%60%60%0A%0AYou%20can%20build%20this%20docker%20image%20and%20watch%20forge%20build%2Frun%20the%20tests%20within%20the%20container%3A%0A%0A%60%60%60sh%0Adocker%20build%20--no-cache%20--progress%3Dplain%20.%0A%60%60%60%0A%0ANow%2C%20what%20happens%20if%20one%20of%20our%20tests%20fails%3F%20Modify%20%60src%2Ftest%2FCounter.t.sol%60%20to%20make%20a%20false%20assertion.%20Try%20to%20build%20image%20again.%0A%0A%60%60%60solidity%0Afunction%20testFuzz_SetNumber(uint256%20x)%20public%20%7B%0A%20%20%20%20counter.setNumber(x)%3B%0A%20%20%20%20assertEq(counter.number()%2C%205)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60sh%0Adocker%20build%20--no-cache%20--progress%3Dplain%20.%0A%3C...%3E%0A%239%200.522%20Failed%20tests%3A%0A%239%200.522%20%5BFAIL%3A%20assertion%20failed%3A%20425%20!%3D%205%3B%20counterexample%3A%20calldata%3D%5B...%5D%20args%3D%5B425%5D%5D%20testFuzz_SetNumber(uint256)%20(runs%3A%200%2C%20%CE%BC%3A%200%2C%20~%3A%200)%0A%239%200.522%0A%239%200.522%20Suite%20result%3A%20FAILED.%201%20passed%3B%201%20failed%3B%200%20skipped%3B%20finished%20in%20686.53%C2%B5s%20(407.06%C2%B5s%20CPU%20time)%0A------%0Aerror%3A%20failed%20to%20solve%3A%20executor%20failed%20running%20%5B%2Fbin%2Fsh%20-c%20forge%20test%5D%3A%20exit%20code%3A%201%0A%60%60%60%0A%0AOur%20image%20failed%20to%20build%20because%20our%20tests%20failed!%20This%20is%20actually%20a%20nice%20property%2C%20because%20it%20means%20if%20we%20have%20a%20Docker%20image%20that%20successfully%20built%20(and%20therefore%20is%20available%20for%20use)%2C%20we%20know%20the%20code%20inside%20the%20image%20passed%20the%20tests.%5C*%0A%0A%3E%20%5C*Of%20course%2C%20chain%20of%20custody%20of%20your%20docker%20images%20is%20very%20important.%20Docker%20layer%20hashes%20can%20be%20very%20useful%20for%20verification.%20In%20a%20production%20environment%2C%20consider%20%5Bsigning%20your%20docker%20images%5D(https%3A%2F%2Fdocs.docker.com%2Fengine%2Fsecurity%2Ftrust%2F%23%3A~%3Atext%3DTo%2520sign%2520a%2520Docker%2520Image%2Cthe%2520local%2520Docker%2520trust%2520repository).%0A%0A%23%23%23%20Creating%20a%20%22deployer%22%20image%0A%0ANow%2C%20we'll%20move%20on%20to%20a%20bit%20more%20of%20an%20advanced%20Dockerfile.%20Let's%20add%20an%20entrypoint%20that%20allows%20us%20to%20deploy%20our%20code%20by%20using%20the%20built%20(and%20tested!)%20image.%20We%20can%20target%20the%20Sepolia%20testnet%20first.%0A%0A%60%60%60docker%0A%23%20Use%20the%20latest%20foundry%20image%0AFROM%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%0A%23%20Copy%20our%20source%20code%20into%20the%20container%0AWORKDIR%20%2Fapp%0A%0A%23%20Build%20and%20test%20the%20source%20code%0ACOPY%20.%20.%0ARUN%20forge%20build%0ARUN%20forge%20test%0A%0A%23%20Set%20the%20entrypoint%20to%20the%20forge%20deployment%20command%0AENTRYPOINT%20%5B%22forge%22%2C%20%22create%22%5D%0A%60%60%60%0A%0ALet's%20build%20the%20image%2C%20this%20time%20giving%20it%20a%20name%3A%0A%0A%60%60%60sh%0Adocker%20build%20--no-cache%20--progress%3Dplain%20-t%20counter%20.%0A%60%60%60%0A%0AHere's%20how%20we%20can%20use%20our%20docker%20image%20to%20deploy%3A%0A%0A%60%60%60sh%0Adocker%20run%20counter-deployer%20--rpc-url%20%24RPC_URL%20--private-key%20%24PRIVATE_KEY%20.%2Fsrc%2FCounter.sol%3ACounter%0ANo%20files%20changed%2C%20compilation%20skipped%0ADeployer%3A%200x496e09fcb240c33b8fda3b4b74d81697c03b6b3d%0ADeployed%20to%3A%200x23d465eaa80ad2e5cdb1a2345e4b54edd12560d3%0ATransaction%20hash%3A%200xf88c68c4a03a86b0e7ecb05cae8dea36f2896cd342a6af978cab11101c6224a9%0A%60%60%60%0A%0AWe've%20just%20built%2C%20tested%2C%20and%20deployed%20our%20contract%20entirely%20within%20a%20Docker%20container!%20This%20guide%20was%20intended%20for%20testnet%2C%20but%20you%20can%20run%20the%20exact%20same%20Docker%20image%20targeting%20mainnet%20and%20be%20confident%20that%20the%20same%20code%20is%20being%20deployed%20by%20the%20same%20tooling.%0A%0A%23%23%23%20Why%20is%20this%20useful%3F%0A%0ADocker%20is%20about%20portability%2C%20reproducibility%2C%20and%20environment%20invariance.%20This%20means%20you%20can%20be%20less%20concerned%20about%20unexpected%20changes%20when%20you%20switch%20between%20environments%2C%20networks%2C%20developers%2C%20etc.%20Here%20are%20a%20few%20basic%20examples%20of%20why%20one%20may%20like%20to%20use%20Docker%20images%20for%20smart%20contract%20deployment%3A%0A%0A-%20Reduces%20overhead%20of%20ensuring%20system%20level%20dependencies%20match%20between%20deployment%20environments%20(e.g.%20does%20your%20production%20runner%20always%20have%20the%20same%20version%20of%20%60forge%60%20as%20your%20dev%20runner%3F)%0A-%20Increases%20confidence%20that%20code%20has%20been%20tested%20prior%20to%20deployment%20and%20has%20not%20been%20altered%20(e.g.%20if%2C%20in%20the%20above%20image%2C%20your%20code%20re-compiles%20on%20deployment%2C%20that's%20a%20major%20red%20flag).%0A-%20Eases%20pain%20points%20around%20segregation%20of%20duties%3A%20people%20with%20your%20mainnet%20credentials%20do%20not%20need%20to%20ensure%20they%20have%20the%20latest%20compiler%2C%20codebase%2C%20etc.%20It's%20easy%20to%20ensure%20that%20the%20docker%20deploy%20image%20someone%20ran%20in%20testnet%20is%20identical%20to%20the%20one%20targeting%20mainnet.%0A-%20Docker%20is%20an%20accepted%20standard%20on%20virtually%20all%20public%20cloud%20providers.%20It%20makes%20it%20easy%20to%20schedule%20jobs%2C%20tasks%2C%20etc%20that%20need%20to%20interact%20with%20the%20blockchain.%0A%0A%23%23%23%20Using%20%60docker-compose%60%20to%20launch%20Anvil%0A%0ATo%20launch%20Anvil%20using%20%5BDocker%20Compose%5D(https%3A%2F%2Fdocs.docker.com%2Fcompose%2F)%20one%20could%20use%20the%20following%20%60docker-compose.yml%60%20configuration%3A%0A%0A%60%60%60yml%0Aservices%3A%0A%20%20anvil%3A%0A%20%20%20%20image%3A%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%20%20%20%20container_name%3A%20anvil%0A%20%20%20%20environment%3A%0A%20%20%20%20%20%20ANVIL_IP_ADDR%3A%20%220.0.0.0%22%0A%20%20%20%20working_dir%3A%20%2Fanvil%0A%20%20%20%20ports%3A%0A%20%20%20%20%20%20-%20%228545%3A8545%22%0A%20%20%20%20command%3A%20anvil%0A%60%60%60%0A%0AFinally%2C%20run%20%60docker%20compose%20up%60.%0A%0A%60%60%60%0Adocker%20compose%20up%0A%5B%2B%5D%20Running%201%2F1%0A%20%E2%9C%94%20Container%20anvil%20%20Created%0AAttaching%20to%20anvil%0Aanvil%20%20%7C%0Aanvil%20%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_%20%20%20_%0Aanvil%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(_)%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%20__%20_%20%20%20_%20__%20%20%20__%20%20%20__%20%20_%20%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%2F%20_%60%20%7C%20%7C%20'_%20%5C%20%20%5C%20%5C%20%2F%20%2F%20%7C%20%7C%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%7C%20(_%7C%20%7C%20%7C%20%7C%20%7C%20%7C%20%20%5C%20V%20%2F%20%20%7C%20%7C%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%5C__%2C_%7C%20%7C_%7C%20%7C_%7C%20%20%20%5C_%2F%20%20%20%7C_%7C%20%7C_%7C%0Aanvil%20%20%7C%0Aanvil%20%20%7C%20%20%20%20%200.3.1-dev%20(fea38858b0%202025-01-21T16%3A48%3A49.865302749Z)%0Aanvil%20%20%7C%20%20%20%20%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%0Aanvil%20%20%7C%20%20%20%20%20...%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./foundry-in-docker-D68LKNH5.js"),__vite__mapDeps([21,1])),path:"/guides/foundry-in-docker.html",type:"mdx",filePath:"guides/foundry-in-docker.md",content:"---%0Adescription%3A%20Build%2C%20test%2C%20and%20deploy%20smart%20contracts%20using%20Foundry's%20Docker%20image%20for%20portable%20and%20reproducible%20development%20workflows.%0A---%0A%0A%23%23%20Running%20Foundry%20inside%20of%20Docker%0A%0AThis%20guide%20shows%20you%20how%20to%20build%2C%20test%2C%20and%20deploy%20a%20smart%20contract%20using%20Foundry's%20Docker%20image.%20It%20adapts%20code%20from%20the%20%5B%60first%20steps%60%5D%20guide.%20If%20you%20haven't%20completed%20that%20guide%20yet%2C%20and%20are%20new%20to%20solidity%2C%20you%20may%20want%20to%20start%20with%20it%20first.%20Alternatively%2C%20if%20you%20have%20some%20familiarity%20with%20Docker%20and%20Solidity%2C%20you%20can%20use%20your%20own%20existing%20project%20and%20adjust%20accordingly.%0A%0A%3E%20This%20guide%20is%20for%20illustrative%20purposes%20only%20and%20provided%20on%20an%20as-is%20basis.%20The%20guide%20is%20not%20audited%20nor%20fully%20tested.%20No%20code%20in%20this%20guide%20should%20be%20used%20in%20a%20production%20environment.%0A%0A%23%23%23%20Installation%20and%20Setup%0A%0AThe%20only%20installation%20required%20to%20run%20this%20guide%20is%20Docker%2C%20and%20optionally%2C%20an%20IDE%20of%20your%20choice.%0AFollow%20the%20%5BDocker%20installation%20instructions%5D(%2Fintroduction%2Finstallation).%0A%0ATo%20keep%20future%20commands%20succinct%2C%20let's%20re-tag%20the%20image%3A%0A%20%60docker%20tag%20ghcr.io%2Ffoundry-rs%2Ffoundry%3Alatest%20foundry%3Alatest%60%0A%0AHaving%20Foundry%20installed%20locally%20is%20not%20strictly%20required%2C%20but%20it%20may%20be%20helpful%20for%20debugging.%20You%20can%20install%20it%20using%20%5Bfoundryup%5D(%2Fintroduction%2Finstallation%23using-foundryup).%0A%0AFinally%2C%20to%20use%20any%20of%20the%20%60cast%60%20or%20%60forge%20create%60%20portions%20of%20this%20guide%2C%20you%20will%20need%20access%20to%20an%20Ethereum%20node.%20If%20you%20don't%20have%20your%20own%20node%20running%20(likely)%2C%20you%20can%20use%20a%203rd%20party%20node%20service.%20We%20won't%20recommend%20a%20specific%20provider%20in%20this%20guide.%20A%20good%20place%20to%20start%20learning%20about%20Nodes-as-a-Service%20is%20%5BEthereum's%20article%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fnodes-and-clients%2Fnodes-as-a-service%2F)%20on%20the%20subject.%0A%0A**For%20the%20rest%20of%20this%20guide%2C%20it%20is%20assumed%20that%20the%20RPC%20endpoint%20of%20your%20ethereum%20node%20is%20set%20like%20this**%3A%20%60export%20RPC_URL%3D%3CYOUR_RPC_URL%3E%60%0A%0A%23%23%23%20A%20tour%20around%20the%20Foundry%20docker%20image%0A%0AThe%20docker%20image%20can%20be%20used%20in%20two%20primary%20ways%3A%0A%0A1.%20As%20an%20interface%20directly%20to%20forge%20and%20cast%0A2.%20As%20a%20base%20image%20for%20building%20your%20own%20containerized%20test%2C%20build%2C%20and%20deployment%20tooling%0A%0AWe%20will%20cover%20both%2C%20but%20let's%20start%20by%20taking%20a%20look%20at%20interfacing%20with%20foundry%20using%20docker.%20This%20is%20also%20a%20good%20test%20that%20your%20local%20installation%20worked!%0A%0AWe%20can%20run%20any%20of%20the%20%60cast%60%20%5Bcommands%5D(%2Fcast%2Freference%2Foverview)%20against%20our%20docker%20image.%20Let's%20fetch%20the%20latest%20block%20information%3A%0A%0A%60%60%60sh%0Adocker%20run%20foundry%20%22cast%20block%20--rpc-url%20%24RPC_URL%20latest%22%0AbaseFeePerGas%20%20%20%20%20%20%20%20%220xb634241e3%22%0Adifficulty%20%20%20%20%20%20%20%20%20%20%20%220x2e482bdf51572b%22%0AextraData%20%20%20%20%20%20%20%20%20%20%20%20%220x486976656f6e20686b%22%0AgasLimit%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1c9c380%22%0AgasUsed%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x652993%22%0Ahash%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x181748772da2f968bcc91940c8523bb6218a7d57669ded06648c9a9fb6839db5%22%0AlogsBloom%20%20%20%20%20%20%20%20%20%20%20%20%220x406010046100001198c220108002b606400029444814008210820c04012804131847150080312500300051044208430002008029880029011520380060262400001c538d00440a885a02219d49624aa110000003094500022c003600a00258009610c410323580032000849a0408a81a0a060100022505202280c61880c80020e080244400440404520d210429a0000400010089410c8408162903609c920014028a94019088681018c909980701019201808040004100000080540610a9144d050020220c10a24c01c000002005400400022420140e18100400e10254926144c43a200cc008142080854088100128844003010020c344402386a8c011819408%22%0Aminer%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1ad91ee08f21be3de0ba2ba6918e714da6b45836%22%0AmixHash%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220xb920857687476c1bcb21557c5f6196762a46038924c5f82dc66300347a1cfc01%22%0Anonce%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1ce6929033fbba90%22%0Anumber%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220xdd3309%22%0AparentHash%20%20%20%20%20%20%20%20%20%20%20%220x39c6e1aa997d18a655c6317131589fd327ae814ef84e784f5eb1ab54b9941212%22%0AreceiptsRoot%20%20%20%20%20%20%20%20%20%220x4724f3b270dcc970f141e493d8dc46aeba6fffe57688210051580ac960fe0037%22%0AsealFields%20%20%20%20%20%20%20%20%20%20%20%5B%5D%0Asha3Uncles%20%20%20%20%20%20%20%20%20%20%20%220x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347%22%0Asize%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%220x1d6bb%22%0AstateRoot%20%20%20%20%20%20%20%20%20%20%20%20%220x0d4b714990132cf0f21801e2931b78454b26aad706fc6dc16b64e04f0c14737a%22%0Atimestamp%20%20%20%20%20%20%20%20%20%20%20%20%220x6246259b%22%0AtotalDifficulty%20%20%20%20%20%20%220x9923da68627095fd2e7%22%0Atransactions%20%20%20%20%20%20%20%20%20%5B...%5D%0Auncles%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B%5D%0A%60%60%60%0A%0AIf%20we're%20in%20a%20directory%20with%20some%20Solidity%20%5Bsource%20code%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Ffoundry-docker-guide)%2C%20we%20can%20mount%20that%20directory%20into%20Docker%20and%20use%20%60forge%60%20however%20we%20wish.%20For%20example%3A%0A%0A%60%60%60sh%0Adocker%20run%20-v%20%24PWD%3A%2Fapp%20foundry%20%22forge%20test%20--root%20%2Fapp%20--watch%22%0A%60%60%60%0A%0AYou%20can%20see%20our%20code%20was%20compiled%20and%20tested%20entirely%20within%20the%20container.%20Also%2C%20since%20we%20passed%20the%20%60--watch%60%20option%2C%20the%20container%20will%20recompile%20the%20code%20whenever%20a%20change%20is%20detected.%0A%0A%23%23%23%20Creating%20a%20%22build%20and%20test%22%20image%0A%0ALet's%20use%20the%20Foundry%20docker%20image%20as%20a%20base%20for%20using%20our%20own%20Docker%20image.%20We'll%20use%20the%20image%20to%3A%0A%0A1.%20Build%20our%20solidity%20code%0A2.%20Run%20our%20solidity%20tests%0A%0AA%20simple%20%60Dockerfile%60%20can%20accomplish%20these%20two%20goals%3A%0A%0A%60%60%60docker%0A%23%20Use%20the%20latest%20foundry%20image%0AFROM%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%0A%23%20Copy%20our%20source%20code%20into%20the%20container%0AWORKDIR%20%2Fapp%0A%0A%23%20Build%20and%20test%20the%20source%20code%0ACOPY%20.%20.%0ARUN%20forge%20build%0ARUN%20forge%20test%0A%60%60%60%0A%0AYou%20can%20build%20this%20docker%20image%20and%20watch%20forge%20build%2Frun%20the%20tests%20within%20the%20container%3A%0A%0A%60%60%60sh%0Adocker%20build%20--no-cache%20--progress%3Dplain%20.%0A%60%60%60%0A%0ANow%2C%20what%20happens%20if%20one%20of%20our%20tests%20fails%3F%20Modify%20%60src%2Ftest%2FCounter.t.sol%60%20to%20make%20a%20false%20assertion.%20Try%20to%20build%20image%20again.%0A%0A%60%60%60solidity%0Afunction%20testFuzz_SetNumber(uint256%20x)%20public%20%7B%0A%20%20%20%20counter.setNumber(x)%3B%0A%20%20%20%20assertEq(counter.number()%2C%205)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60sh%0Adocker%20build%20--no-cache%20--progress%3Dplain%20.%0A%3C...%3E%0A%239%200.522%20Failed%20tests%3A%0A%239%200.522%20%5BFAIL%3A%20assertion%20failed%3A%20425%20!%3D%205%3B%20counterexample%3A%20calldata%3D%5B...%5D%20args%3D%5B425%5D%5D%20testFuzz_SetNumber(uint256)%20(runs%3A%200%2C%20%CE%BC%3A%200%2C%20~%3A%200)%0A%239%200.522%0A%239%200.522%20Suite%20result%3A%20FAILED.%201%20passed%3B%201%20failed%3B%200%20skipped%3B%20finished%20in%20686.53%C2%B5s%20(407.06%C2%B5s%20CPU%20time)%0A------%0Aerror%3A%20failed%20to%20solve%3A%20executor%20failed%20running%20%5B%2Fbin%2Fsh%20-c%20forge%20test%5D%3A%20exit%20code%3A%201%0A%60%60%60%0A%0AOur%20image%20failed%20to%20build%20because%20our%20tests%20failed!%20This%20is%20actually%20a%20nice%20property%2C%20because%20it%20means%20if%20we%20have%20a%20Docker%20image%20that%20successfully%20built%20(and%20therefore%20is%20available%20for%20use)%2C%20we%20know%20the%20code%20inside%20the%20image%20passed%20the%20tests.%5C*%0A%0A%3E%20%5C*Of%20course%2C%20chain%20of%20custody%20of%20your%20docker%20images%20is%20very%20important.%20Docker%20layer%20hashes%20can%20be%20very%20useful%20for%20verification.%20In%20a%20production%20environment%2C%20consider%20%5Bsigning%20your%20docker%20images%5D(https%3A%2F%2Fdocs.docker.com%2Fengine%2Fsecurity%2Ftrust%2F%23%3A~%3Atext%3DTo%2520sign%2520a%2520Docker%2520Image%2Cthe%2520local%2520Docker%2520trust%2520repository).%0A%0A%23%23%23%20Creating%20a%20%22deployer%22%20image%0A%0ANow%2C%20we'll%20move%20on%20to%20a%20bit%20more%20of%20an%20advanced%20Dockerfile.%20Let's%20add%20an%20entrypoint%20that%20allows%20us%20to%20deploy%20our%20code%20by%20using%20the%20built%20(and%20tested!)%20image.%20We%20can%20target%20the%20Sepolia%20testnet%20first.%0A%0A%60%60%60docker%0A%23%20Use%20the%20latest%20foundry%20image%0AFROM%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%0A%23%20Copy%20our%20source%20code%20into%20the%20container%0AWORKDIR%20%2Fapp%0A%0A%23%20Build%20and%20test%20the%20source%20code%0ACOPY%20.%20.%0ARUN%20forge%20build%0ARUN%20forge%20test%0A%0A%23%20Set%20the%20entrypoint%20to%20the%20forge%20deployment%20command%0AENTRYPOINT%20%5B%22forge%22%2C%20%22create%22%5D%0A%60%60%60%0A%0ALet's%20build%20the%20image%2C%20this%20time%20giving%20it%20a%20name%3A%0A%0A%60%60%60sh%0Adocker%20build%20--no-cache%20--progress%3Dplain%20-t%20counter%20.%0A%60%60%60%0A%0AHere's%20how%20we%20can%20use%20our%20docker%20image%20to%20deploy%3A%0A%0A%60%60%60sh%0Adocker%20run%20counter-deployer%20--rpc-url%20%24RPC_URL%20--private-key%20%24PRIVATE_KEY%20.%2Fsrc%2FCounter.sol%3ACounter%0ANo%20files%20changed%2C%20compilation%20skipped%0ADeployer%3A%200x496e09fcb240c33b8fda3b4b74d81697c03b6b3d%0ADeployed%20to%3A%200x23d465eaa80ad2e5cdb1a2345e4b54edd12560d3%0ATransaction%20hash%3A%200xf88c68c4a03a86b0e7ecb05cae8dea36f2896cd342a6af978cab11101c6224a9%0A%60%60%60%0A%0AWe've%20just%20built%2C%20tested%2C%20and%20deployed%20our%20contract%20entirely%20within%20a%20Docker%20container!%20This%20guide%20was%20intended%20for%20testnet%2C%20but%20you%20can%20run%20the%20exact%20same%20Docker%20image%20targeting%20mainnet%20and%20be%20confident%20that%20the%20same%20code%20is%20being%20deployed%20by%20the%20same%20tooling.%0A%0A%23%23%23%20Why%20is%20this%20useful%3F%0A%0ADocker%20is%20about%20portability%2C%20reproducibility%2C%20and%20environment%20invariance.%20This%20means%20you%20can%20be%20less%20concerned%20about%20unexpected%20changes%20when%20you%20switch%20between%20environments%2C%20networks%2C%20developers%2C%20etc.%20Here%20are%20a%20few%20basic%20examples%20of%20why%20one%20may%20like%20to%20use%20Docker%20images%20for%20smart%20contract%20deployment%3A%0A%0A-%20Reduces%20overhead%20of%20ensuring%20system%20level%20dependencies%20match%20between%20deployment%20environments%20(e.g.%20does%20your%20production%20runner%20always%20have%20the%20same%20version%20of%20%60forge%60%20as%20your%20dev%20runner%3F)%0A-%20Increases%20confidence%20that%20code%20has%20been%20tested%20prior%20to%20deployment%20and%20has%20not%20been%20altered%20(e.g.%20if%2C%20in%20the%20above%20image%2C%20your%20code%20re-compiles%20on%20deployment%2C%20that's%20a%20major%20red%20flag).%0A-%20Eases%20pain%20points%20around%20segregation%20of%20duties%3A%20people%20with%20your%20mainnet%20credentials%20do%20not%20need%20to%20ensure%20they%20have%20the%20latest%20compiler%2C%20codebase%2C%20etc.%20It's%20easy%20to%20ensure%20that%20the%20docker%20deploy%20image%20someone%20ran%20in%20testnet%20is%20identical%20to%20the%20one%20targeting%20mainnet.%0A-%20Docker%20is%20an%20accepted%20standard%20on%20virtually%20all%20public%20cloud%20providers.%20It%20makes%20it%20easy%20to%20schedule%20jobs%2C%20tasks%2C%20etc%20that%20need%20to%20interact%20with%20the%20blockchain.%0A%0A%23%23%23%20Using%20%60docker-compose%60%20to%20launch%20Anvil%0A%0ATo%20launch%20Anvil%20using%20%5BDocker%20Compose%5D(https%3A%2F%2Fdocs.docker.com%2Fcompose%2F)%20one%20could%20use%20the%20following%20%60docker-compose.yml%60%20configuration%3A%0A%0A%60%60%60yml%0Aservices%3A%0A%20%20anvil%3A%0A%20%20%20%20image%3A%20ghcr.io%2Ffoundry-rs%2Ffoundry%0A%20%20%20%20container_name%3A%20anvil%0A%20%20%20%20environment%3A%0A%20%20%20%20%20%20ANVIL_IP_ADDR%3A%20%220.0.0.0%22%0A%20%20%20%20working_dir%3A%20%2Fanvil%0A%20%20%20%20ports%3A%0A%20%20%20%20%20%20-%20%228545%3A8545%22%0A%20%20%20%20command%3A%20anvil%0A%60%60%60%0A%0AFinally%2C%20run%20%60docker%20compose%20up%60.%0A%0A%60%60%60%0Adocker%20compose%20up%0A%5B%2B%5D%20Running%201%2F1%0A%20%E2%9C%94%20Container%20anvil%20%20Created%0AAttaching%20to%20anvil%0Aanvil%20%20%7C%0Aanvil%20%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20_%20%20%20_%0Aanvil%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(_)%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%20__%20_%20%20%20_%20__%20%20%20__%20%20%20__%20%20_%20%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%2F%20_%60%20%7C%20%7C%20'_%20%5C%20%20%5C%20%5C%20%2F%20%2F%20%7C%20%7C%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%7C%20(_%7C%20%7C%20%7C%20%7C%20%7C%20%7C%20%20%5C%20V%20%2F%20%20%7C%20%7C%20%7C%20%7C%0Aanvil%20%20%7C%20%20%20%20%20%20%5C__%2C_%7C%20%7C_%7C%20%7C_%7C%20%20%20%5C_%2F%20%20%20%7C_%7C%20%7C_%7C%0Aanvil%20%20%7C%0Aanvil%20%20%7C%20%20%20%20%200.3.1-dev%20(fea38858b0%202025-01-21T16%3A48%3A49.865302749Z)%0Aanvil%20%20%7C%20%20%20%20%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%0Aanvil%20%20%7C%20%20%20%20%20...%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./scripting-with-solidity-DgAt30dN.js"),__vite__mapDeps([22,1])),path:"/guides/scripting-with-solidity",type:"mdx",filePath:"guides/scripting-with-solidity.md",content:"---%0Adescription%3A%20Deploy%20contracts%20declaratively%20using%20Solidity%20scripts%20with%20simulation%2C%20broadcasting%2C%20and%20verification%20capabilities.%0A---%0A%0A%23%23%20Scripting%20with%20Solidity%0A%0ASolidity%20scripting%20is%20a%20way%20to%20declaratively%20deploy%20contracts%20using%20Solidity%2C%20instead%20of%20using%20the%20more%20limiting%20and%20less%20user%20friendly%20%5B%60forge%20create%60%5D(%2Fforge%2Freference%2Fforge-create).%0A%0ASolidity%20scripts%20are%20like%20the%20scripts%20you%20write%20when%20working%20with%20tools%20like%20Hardhat%3B%20what%20makes%20Solidity%20scripting%20different%20is%20that%20they%20are%20written%20in%20Solidity%20instead%20of%20JavaScript%2C%20and%20they%20are%20run%20on%20the%20fast%20Foundry%20EVM%20backend%2C%20which%20provides%20advanced%20simulation%20with%20dry-run%20capabilities.%0A%0A%23%23%20Overview%0A%0A%60forge%20script%60%20does%20not%20work%20in%20an%20asynchronous%20manner.%20First%2C%20it%20collects%20all%20transactions%20from%20the%20script%2C%20and%20only%20then%20does%20it%20broadcast%20them%20all.%20It%20can%20essentially%20be%20split%20into%204%20phases%3A%0A%0A1.%20Local%20Simulation%20-%20The%20contract%20script%20is%20run%20in%20a%20local%20evm.%20If%20a%20rpc%2Ffork%20url%20has%20been%20provided%2C%20it%20will%20execute%20the%20script%20in%20that%20context.%20Any%20**external%20call**%20(not%20static%2C%20not%20internal)%20from%20a%20%60vm.broadcast%60%20and%2For%20%60vm.startBroadcast%60%20will%20be%20appended%20to%20a%20list.%0A2.%20Onchain%20Simulation%20-%20Optional.%20If%20a%20rpc%2Ffork%20url%20has%20been%20provided%2C%20then%20it%20will%20sequentially%20execute%20all%20the%20collected%20transactions%20from%20the%20previous%20phase%20here.%0A3.%20Broadcasting%20-%20Optional.%20If%20the%20%60--broadcast%60%20flag%20is%20provided%20and%20the%20previous%20phases%20have%20succeeded%2C%20it%20will%20broadcast%20the%20transactions%20collected%20at%20step%20%601%60.%20and%20simulated%20at%20step%20%602%60.%0A4.%20Verification%20-%20Optional.%20If%20the%20%60--verify%60%20flag%20is%20provided%2C%20there's%20an%20API%20key%2C%20and%20the%20previous%20phases%20have%20succeeded%20it%20will%20attempt%20to%20verify%20the%20contract.%20(eg.%20etherscan).%0A%0A%3A%3A%3Atip%0ATransactions%20that%20previously%20failed%20or%20timed-out%20can%20be%20submitted%20again%20by%20providing%20%60--resume%60%20flag.%0A%3A%3A%3A%0A%0AGiven%20this%20flow%2C%20it's%20important%20to%20be%20aware%20that%20transactions%20whose%20behaviour%20can%20be%20influenced%20by%20external%20state%2Factors%20might%20have%20a%20different%20result%20than%20what%20was%20simulated%20on%20step%20%602%60%2C%20e.g.%20front%20running.%0A%0A%23%23%20Getting%20started%0A%0ALet's%20try%20to%20deploy%20the%20basic%20%60Counter%60%20contract%20Foundry%20provides%3A%0A%0A%60%60%60sh%0Aforge%20init%20Counter%0A%60%60%60%0A%0ANext%20let's%20try%20compiling%20our%20contracts%20to%20make%20sure%20everything%20is%20in%20order.%0A%0A%60%60%60sh%0Aforge%20build%0A%60%60%60%0A%0A%23%23%20Deploying%20our%20contract%0A%0AWe%20are%20going%20to%20deploy%20the%20%60Counter%60%20contract%20to%20the%20Sepolia%20testnet%20but%20in%20order%20to%20do%20so%20we%20will%20need%20to%20complete%20a%20few%20prerequisites%3A%0A%0A1.%20Get%20a%20Sepolia%20RPC%20URL.%0A%0AYou%20can%20either%20grab%20an%20RPC%20URL%20from%20%5BChainlist%5D(https%3A%2F%2Fchainlist.org%2Fchain%2F11155111)%20or%20use%20an%20RPC%20provider%20like%20%5BAlchemy%5D(https%3A%2F%2Fwww.alchemy.com%2F)%20or%20%5BInfura%5D(https%3A%2F%2Fwww.infura.io%2F).%0A%0A2.%20Get%20a%20one-time%20use%20private%20key%20for%20deploying.%0A%0A%60%60%60sh%0A%60cast%20wallet%20new%60%0A%60%60%60%0A%0A%60%60%60%0ASuccessfully%20created%20new%20keypair.%0AAddress%3A%20%20%20%20%20%3CPUBLIC%20KEY%3E%0APrivate%20key%3A%20%3CPRIVATE_KEY%3E%0A%60%60%60%0A%0A3.%20Fund%20the%20private%20key.%0A%0AGrab%20some%20Sepolia%20testnet%20ETH%2C%20available%20in%20different%20faucets%3A%0A%0A-%20%5BAlchemy%5D(https%3A%2F%2Fsepoliafaucet.com%2F)%0A-%20%5BQuicknode%5D(https%3A%2F%2Ffaucet.quicknode.com%2Fethereum%2Fsepolia)%0A-%20%5BProof%20of%20work%20faucet%5D(https%3A%2F%2Fsepolia-faucet.pk910.de%2F)%0A%0ASome%20faucets%20require%20you%20to%20have%20a%20balance%20on%20Ethereum%20mainnet.%0A%0AIf%20so%2C%20claim%20the%20testnet%20ETH%20on%20a%20wallet%20you%20control%20and%20transfer%20the%20testnet%20ETH%20to%20your%20newly%20created%20deployer%20keypair.%0A%0A4.%20Get%20a%20Sepolia%20Etherscan%20API%20key.%0A%0A%23%23%23%20Configuring%20%60foundry.toml%60%0A%0AOnce%20you%20have%20all%20that%20create%20a%20%60.env%60%20file%20and%20add%20the%20variables.%20Foundry%20automatically%20loads%20in%20a%20%60.env%60%20file%20present%20in%20your%20project%20directory.%0A%0AThe%20.env%20file%20should%20follow%20this%20format%3A%0A%0A%60%60%60sh%0ASEPOLIA_RPC_URL%3D%0AETHERSCAN_API_KEY%3D%0A%60%60%60%0A%0AWe%20now%20need%20to%20edit%20the%20%60foundry.toml%60%20file.%20There%20should%20already%20be%20one%20in%20the%20root%20of%20the%20project.%0A%0AAdd%20the%20following%20lines%20to%20the%20end%20of%20the%20file%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Asepolia%20%3D%20%22%24%7BSEPOLIA_RPC_URL%7D%22%0A%0A%5Betherscan%5D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0A%60%60%60%0A%0AThis%20creates%20a%20%5BRPC%20alias%5D(%2Freference%2Fcheatcodes%2Frpc)%20for%20Sepolia%20and%20loads%20the%20Etherscan%20API%20key.%0A%0AHowever%20this%20does%20not%20affect%20the%20%60getChain%60%20method.%0A%0A%23%23%23%20Writing%20the%20script%0A%0ANext%2C%20navigate%20to%20the%20%60script%60%20folder%20and%20locate%20the%20%60CounterScript%60.%0A%0AModify%20the%20contents%20so%20it%20looks%20like%20this%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.13%3B%0A%0Aimport%20%7BScript%2C%20console%7D%20from%20%22forge-std%2FScript.sol%22%3B%0Aimport%20%7BCounter%7D%20from%20%22..%2Fsrc%2FCounter.sol%22%3B%0A%0Acontract%20CounterScript%20is%20Script%20%7B%0A%20%20%20%20Counter%20public%20counter%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%7D%0A%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20counter%20%3D%20new%20Counter()%3B%0A%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ANow%20let's%20read%20through%20the%20code%20and%20figure%20out%20what%20it%20actually%20means%20and%20does.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.13%3B%0A%60%60%60%0A%0ARemember%20even%20if%20it's%20a%20script%20it%20still%20works%20like%20a%20smart%20contract%2C%20but%20is%20never%20deployed%2C%20so%20just%20like%20any%20other%20smart%20contract%20written%20in%20Solidity%20the%20%60pragma%20version%60%20has%20to%20be%20specified.%0A%0A%60%60%60solidity%0Aimport%20%7BScript%2C%20console%7D%20from%20%22forge-std%2FScript.sol%22%3B%0Aimport%20%7BCounter%7D%20from%20%22..%2Fsrc%2FCounter.sol%22%3B%0A%60%60%60%0A%0AJust%20like%20we%20may%20import%20Forge%20Std%20to%20get%20testing%20utilities%20when%20writing%20tests%2C%20it%20also%20provides%20some%20scripting%20utilities.%0A%0AThe%20next%20line%20just%20imports%20the%20%60Counter%60%20contract.%0A%0A%60%60%60solidity%0Acontract%20CounterScript%20is%20Script%20%7B%0A%60%60%60%0A%0AWe%20have%20created%20a%20contract%20called%20%60CounterScript%60%20and%20it%20inherits%20%60Script%60%20from%20Forge%20Std.%0A%0A%60%60%60solidity%0Afunction%20run()%20external%20%7B%0A%60%60%60%0A%0ABy%20default%2C%20scripts%20are%20executed%20by%20calling%20the%20function%20named%20%60run%60%2C%20our%20entrypoint.%0A%0AThis%20loads%20in%20the%20private%20key%20from%20our%20%60.env%60%20file.%20**Note%3A**%20you%20must%20be%20careful%20when%20exposing%20private%20keys%20in%20a%20%60.env%60%20file%20and%20loading%20them%20into%20programs.%20This%20is%20only%20recommended%20for%20use%20with%20non-privileged%20deployers%20or%20for%20local%20%2F%20test%20setups.%20For%20production%20setups%20please%20review%20the%20various%20%5Bwallet%20options%5D(%2Fforge%2Freference%2Fforge-script%23wallet-options---raw)%20that%20Foundry%20supports.%0A%0A%60%60%60solidity%0Avm.startBroadcast()%3B%0A%60%60%60%0A%0AThis%20is%20a%20special%20cheatcode%20that%20records%20calls%20and%20contract%20creations%20made%20by%20our%20main%20script%20contract.%20The%20private%20key%20of%20the%20sender%20we%20will%20pass%20in%20will%20instruct%20it%20to%20use%20that%20key%20for%20signing%20the%20transactions.%20Later%2C%20we%20will%20broadcast%20these%20transactions%20to%20deploy%20our%20%60Counter%60%20contract.%0A%0A%60%60%60solidity%0ACounter%20counter%20%3D%20new%20Counter()%3B%0A%60%60%60%0A%0AHere%20we%20have%20just%20created%20our%20%60Counter%60%20contract.%20Because%20we%20called%20%60vm.startBroadcast()%60%20before%20this%20line%2C%20the%20contract%20creation%20will%20be%20recorded%20by%20Forge%2C%20and%20as%20mentioned%20previously%2C%20we%20can%20broadcast%20the%20transaction%20to%20deploy%20the%20contract%20on-chain.%20The%20broadcast%20transaction%20logs%20will%20be%20stored%20in%20the%20%60broadcast%60%20directory%20by%20default.%20You%20can%20change%20the%20logs%20location%20by%20setting%20%5B%60broadcast%60%5D(%2Fconfig%2Freference%2Fproject%23broadcast)%20in%20your%20%60foundry.toml%60%20file.%0A%0AThe%20broadcasting%20sender%20is%20determined%20by%20checking%20the%20following%20in%20order%3A%0A%0A1.%20If%20%60--sender%60%20argument%20was%20provided%2C%20that%20address%20is%20used.%0A2.%20If%20exactly%20one%20signer%20(e.g.%20private%20key%2C%20hardware%20wallet%2C%20keystore)%20is%20set%2C%20that%20signer%20is%20used.%0A3.%20Otherwise%2C%20the%20default%20Foundry%20sender%20(%600x1804c8AB1F12E6bbf3894d4083f33e07309d1f38%60)%20is%20attempted%20to%20be%20used.%0A%0ANow%20that%20you're%20up%20to%20speed%20about%20what%20the%20script%20smart%20contract%20does%2C%20let's%20run%20it.%0A%0A%23%23%23%20Deploying%20to%20a%20testnet%0A%0AYou%20should%20have%20added%20the%20variables%20we%20mentioned%20earlier%20to%20the%20%60.env%60%20for%20this%20next%20part%20to%20work.%0A%0AAt%20the%20root%20of%20the%20project%20run%3A%0A%0A%60%60%60sh%0A%23%20To%20load%20the%20variables%20in%20the%20.env%20file%0Asource%20.env%0A%0A%23%20To%20deploy%20and%20verify%20our%20contract%0Aforge%20script%20--chain%20sepolia%20script%2FCounter.s.sol%3ACounterScript%20--rpc-url%20%24SEPOLIA_RPC_URL%20--broadcast%20--verify%20-vvvv%20--interactives%201%0A%60%60%60%0A%0ANote%20the%20%60--interactives%201%60%2C%20this%20will%20open%20an%20interactive%20prompt%20to%20enter%20your%20private%20key.%20For%20anything%20beyond%20a%20simple%20testnet%20deployment%20in%20a%20development%20setting%20you%20are%20**STRONGLY**%20%5Brecommended%20to%20use%20a%20hardware%20wallet%20or%20a%20password%20protected%20keystore%5D(%2Fguides%2Fbest-practices%2Fkey-management).%0A%0A%60%60%60%0AEnter%20private%20key%3A%20%3CPRIVATE_KEY%3E%0A%60%60%60%0A%0AForge%20is%20going%20to%20run%20our%20script%20and%20broadcast%20the%20transactions%20for%20us%20-%20this%20can%20take%20a%20little%20while%2C%20since%20Forge%20will%20also%20wait%20for%20the%20transaction%20receipts.%20You%20should%20see%20something%20like%20this%20after%20a%20minute%20or%20so%3A%0A%0A%60%60%60%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0AEnter%20private%20key%3A%0ATraces%3A%0A%20%20%5B137029%5D%20CounterScript%3A%3Arun()%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B0%5D%20VM%3A%3AstartBroadcast()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B96345%5D%20%E2%86%92%20new%20Counter%40%3CADDRESS%3E%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%20481%20bytes%20of%20code%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B0%5D%20VM%3A%3AstopBroadcast()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BStop%5D%0A%0A%0AScript%20ran%20successfully.%0A%0A%23%23%20Setting%20up%201%20EVM.%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0ASimulated%20On-chain%20Traces%3A%0A%0A%20%20%5B96345%5D%20%E2%86%92%20new%20Counter%40%3CADDRESS%3E%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%20481%20bytes%20of%20code%0A%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AChain%2011155111%0A%0AEstimated%20gas%20price%3A%20%3CGAS_PRICE%3E%20gwei%0A%0AEstimated%20total%20gas%20used%20for%20script%3A%20%3CGAS%3E%0A%0AEstimated%20amount%20required%3A%20%3CGAS_AMOUNT%3E%20ETH%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A%23%23%23%23%23%20sepolia%0A%E2%9C%85%20%20%5BSuccess%5D%20Hash%3A%20%3CHASH%3E%0AContract%20Address%3A%20%3CADDRESS%3E%0ABlock%3A%20%3CBLOCK%3E%0APaid%3A%20%3CGAS%3E%0A%0A%E2%9C%85%20Sequence%20%231%20on%20sepolia%20%7C%20Total%20Paid%3A%20%3CGAS%3E%0A%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AONCHAIN%20EXECUTION%20COMPLETE%20%26%20SUCCESSFUL.%0A%23%23%0AStart%20verification%20for%20(1)%20contracts%0AStart%20verifying%20contract%20%60%3CADDRESS%3E%60%20deployed%20on%20sepolia%0ACompiler%20version%3A%200.8.28%0A%0ASubmitting%20verification%20for%20%5Bsrc%2FCounter.sol%3ACounter%5D%20%3CADDRESS%3E.%0ASubmitted%20contract%20for%20verification%3A%0A%09Response%3A%20%60OK%60%0A%09GUID%3A%20%60%3CGUID%3E%60%0A%09URL%3A%20https%3A%2F%2Fsepolia.etherscan.io%2Faddress%2F%3CADDRESS%3E%0AContract%20verification%20status%3A%0AResponse%3A%20%60NOTOK%60%0ADetails%3A%20%60Pending%20in%20queue%60%0AWarning%3A%20Verification%20is%20still%20pending...%3B%20waiting%2015%20seconds%20before%20trying%20again%20(7%20tries%20remaining)%0AContract%20verification%20status%3A%0AResponse%3A%20%60OK%60%0ADetails%3A%20%60Pass%20-%20Verified%60%0AContract%20successfully%20verified%0AAll%20(1)%20contracts%20were%20verified!%0A%0ATransactions%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fbroadcast%2FCounter.s.sol%2F11155111%2Frun-latest.json%0A%0ASensitive%20values%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fcache%2FCounter.s.sol%2F11155111%2Frun-latest.json%0A%60%60%60%0A%0AThis%20confirms%20that%20you%20have%20successfully%20deployed%20the%20%60Counter%60%20contract%20to%20the%20Sepolia%20testnet%20and%20have%20also%20verified%20it%20on%20Etherscan%2C%20all%20with%20one%20command.%0A%0A%23%23%23%20Deploying%20to%20a%20local%20Anvil%20instance%0A%0AYou%20can%20deploy%20to%20Anvil%2C%20the%20local%20testnet%2C%20by%20configuring%20the%20%60--fork-url%60.%0A%0ALet's%20start%20Anvil%20in%20one%20terminal%20window%3A%0A%0A%60%60%60sh%0Aanvil%0A%60%60%60%0A%0AThis%20will%20show%20you%20are%20list%20of%20default%20accounts.%0A%0A%60%60%60%0AAvailable%20Accounts%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A(0)%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20(10000.000000000000000000%20ETH)%0A...%0A%0APrivate%20Keys%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A(0)%200xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%0A...%0A%60%60%60%0A%0AThen%20run%20the%20following%20script%20in%20a%20different%20terminal%20window%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FCounter.s.sol%3ACounterScript%20--fork-url%20http%3A%2F%2Flocalhost%3A8545%20--broadcast%20--interactives%201%0A%60%60%60%0A%0ANext%20enter%20the%20private%20key%2C%20pick%20one%20from%20the%20list.%0A%0A%60%60%60%0AEnter%20private%20key%3A%20%3CPRIVATE_KEY%3E%0A%60%60%60%0A%0A%60%60%60%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0AEnter%20private%20key%3A%0AScript%20ran%20successfully.%0A%0A%23%23%20Setting%20up%201%20EVM.%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AChain%2031337%0A%0AEstimated%20gas%20price%3A%202.000000001%20gwei%0A%0AEstimated%20total%20gas%20used%20for%20script%3A%20203856%0A%0AEstimated%20amount%20required%3A%200.000407712000203856%20ETH%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A%23%23%23%23%23%20anvil-hardhat%0A%E2%9C%85%20%20%5BSuccess%5D%20Hash%3A%200x6795deaad7fd483eda4b16af7d8b871c7f6e49beb50709ce1cf0ca81c29247d1%0AContract%20Address%3A%200x5FbDB2315678afecb367f032d93F642f64180aa3%0ABlock%3A%201%0APaid%3A%200.000156813000156813%20ETH%20(156813%20gas%20*%201.000000001%20gwei)%0A%0A%E2%9C%85%20Sequence%20%231%20on%20anvil-hardhat%20%7C%20Total%20Paid%3A%200.000156813000156813%20ETH%20(156813%20gas%20*%20avg%201.000000001%20gwei)%0A%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AONCHAIN%20EXECUTION%20COMPLETE%20%26%20SUCCESSFUL.%0A%0ATransactions%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fbroadcast%2FCounter.s.sol%2F31337%2Frun-latest.json%0A%0ASensitive%20values%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fcache%2FCounter.s.sol%2F31337%2Frun-latest.json%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./scripting-with-solidity-DgAt30dN.js"),__vite__mapDeps([22,1])),path:"/guides/scripting-with-solidity.html",type:"mdx",filePath:"guides/scripting-with-solidity.md",content:"---%0Adescription%3A%20Deploy%20contracts%20declaratively%20using%20Solidity%20scripts%20with%20simulation%2C%20broadcasting%2C%20and%20verification%20capabilities.%0A---%0A%0A%23%23%20Scripting%20with%20Solidity%0A%0ASolidity%20scripting%20is%20a%20way%20to%20declaratively%20deploy%20contracts%20using%20Solidity%2C%20instead%20of%20using%20the%20more%20limiting%20and%20less%20user%20friendly%20%5B%60forge%20create%60%5D(%2Fforge%2Freference%2Fforge-create).%0A%0ASolidity%20scripts%20are%20like%20the%20scripts%20you%20write%20when%20working%20with%20tools%20like%20Hardhat%3B%20what%20makes%20Solidity%20scripting%20different%20is%20that%20they%20are%20written%20in%20Solidity%20instead%20of%20JavaScript%2C%20and%20they%20are%20run%20on%20the%20fast%20Foundry%20EVM%20backend%2C%20which%20provides%20advanced%20simulation%20with%20dry-run%20capabilities.%0A%0A%23%23%20Overview%0A%0A%60forge%20script%60%20does%20not%20work%20in%20an%20asynchronous%20manner.%20First%2C%20it%20collects%20all%20transactions%20from%20the%20script%2C%20and%20only%20then%20does%20it%20broadcast%20them%20all.%20It%20can%20essentially%20be%20split%20into%204%20phases%3A%0A%0A1.%20Local%20Simulation%20-%20The%20contract%20script%20is%20run%20in%20a%20local%20evm.%20If%20a%20rpc%2Ffork%20url%20has%20been%20provided%2C%20it%20will%20execute%20the%20script%20in%20that%20context.%20Any%20**external%20call**%20(not%20static%2C%20not%20internal)%20from%20a%20%60vm.broadcast%60%20and%2For%20%60vm.startBroadcast%60%20will%20be%20appended%20to%20a%20list.%0A2.%20Onchain%20Simulation%20-%20Optional.%20If%20a%20rpc%2Ffork%20url%20has%20been%20provided%2C%20then%20it%20will%20sequentially%20execute%20all%20the%20collected%20transactions%20from%20the%20previous%20phase%20here.%0A3.%20Broadcasting%20-%20Optional.%20If%20the%20%60--broadcast%60%20flag%20is%20provided%20and%20the%20previous%20phases%20have%20succeeded%2C%20it%20will%20broadcast%20the%20transactions%20collected%20at%20step%20%601%60.%20and%20simulated%20at%20step%20%602%60.%0A4.%20Verification%20-%20Optional.%20If%20the%20%60--verify%60%20flag%20is%20provided%2C%20there's%20an%20API%20key%2C%20and%20the%20previous%20phases%20have%20succeeded%20it%20will%20attempt%20to%20verify%20the%20contract.%20(eg.%20etherscan).%0A%0A%3A%3A%3Atip%0ATransactions%20that%20previously%20failed%20or%20timed-out%20can%20be%20submitted%20again%20by%20providing%20%60--resume%60%20flag.%0A%3A%3A%3A%0A%0AGiven%20this%20flow%2C%20it's%20important%20to%20be%20aware%20that%20transactions%20whose%20behaviour%20can%20be%20influenced%20by%20external%20state%2Factors%20might%20have%20a%20different%20result%20than%20what%20was%20simulated%20on%20step%20%602%60%2C%20e.g.%20front%20running.%0A%0A%23%23%20Getting%20started%0A%0ALet's%20try%20to%20deploy%20the%20basic%20%60Counter%60%20contract%20Foundry%20provides%3A%0A%0A%60%60%60sh%0Aforge%20init%20Counter%0A%60%60%60%0A%0ANext%20let's%20try%20compiling%20our%20contracts%20to%20make%20sure%20everything%20is%20in%20order.%0A%0A%60%60%60sh%0Aforge%20build%0A%60%60%60%0A%0A%23%23%20Deploying%20our%20contract%0A%0AWe%20are%20going%20to%20deploy%20the%20%60Counter%60%20contract%20to%20the%20Sepolia%20testnet%20but%20in%20order%20to%20do%20so%20we%20will%20need%20to%20complete%20a%20few%20prerequisites%3A%0A%0A1.%20Get%20a%20Sepolia%20RPC%20URL.%0A%0AYou%20can%20either%20grab%20an%20RPC%20URL%20from%20%5BChainlist%5D(https%3A%2F%2Fchainlist.org%2Fchain%2F11155111)%20or%20use%20an%20RPC%20provider%20like%20%5BAlchemy%5D(https%3A%2F%2Fwww.alchemy.com%2F)%20or%20%5BInfura%5D(https%3A%2F%2Fwww.infura.io%2F).%0A%0A2.%20Get%20a%20one-time%20use%20private%20key%20for%20deploying.%0A%0A%60%60%60sh%0A%60cast%20wallet%20new%60%0A%60%60%60%0A%0A%60%60%60%0ASuccessfully%20created%20new%20keypair.%0AAddress%3A%20%20%20%20%20%3CPUBLIC%20KEY%3E%0APrivate%20key%3A%20%3CPRIVATE_KEY%3E%0A%60%60%60%0A%0A3.%20Fund%20the%20private%20key.%0A%0AGrab%20some%20Sepolia%20testnet%20ETH%2C%20available%20in%20different%20faucets%3A%0A%0A-%20%5BAlchemy%5D(https%3A%2F%2Fsepoliafaucet.com%2F)%0A-%20%5BQuicknode%5D(https%3A%2F%2Ffaucet.quicknode.com%2Fethereum%2Fsepolia)%0A-%20%5BProof%20of%20work%20faucet%5D(https%3A%2F%2Fsepolia-faucet.pk910.de%2F)%0A%0ASome%20faucets%20require%20you%20to%20have%20a%20balance%20on%20Ethereum%20mainnet.%0A%0AIf%20so%2C%20claim%20the%20testnet%20ETH%20on%20a%20wallet%20you%20control%20and%20transfer%20the%20testnet%20ETH%20to%20your%20newly%20created%20deployer%20keypair.%0A%0A4.%20Get%20a%20Sepolia%20Etherscan%20API%20key.%0A%0A%23%23%23%20Configuring%20%60foundry.toml%60%0A%0AOnce%20you%20have%20all%20that%20create%20a%20%60.env%60%20file%20and%20add%20the%20variables.%20Foundry%20automatically%20loads%20in%20a%20%60.env%60%20file%20present%20in%20your%20project%20directory.%0A%0AThe%20.env%20file%20should%20follow%20this%20format%3A%0A%0A%60%60%60sh%0ASEPOLIA_RPC_URL%3D%0AETHERSCAN_API_KEY%3D%0A%60%60%60%0A%0AWe%20now%20need%20to%20edit%20the%20%60foundry.toml%60%20file.%20There%20should%20already%20be%20one%20in%20the%20root%20of%20the%20project.%0A%0AAdd%20the%20following%20lines%20to%20the%20end%20of%20the%20file%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Asepolia%20%3D%20%22%24%7BSEPOLIA_RPC_URL%7D%22%0A%0A%5Betherscan%5D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0A%60%60%60%0A%0AThis%20creates%20a%20%5BRPC%20alias%5D(%2Freference%2Fcheatcodes%2Frpc)%20for%20Sepolia%20and%20loads%20the%20Etherscan%20API%20key.%0A%0AHowever%20this%20does%20not%20affect%20the%20%60getChain%60%20method.%0A%0A%23%23%23%20Writing%20the%20script%0A%0ANext%2C%20navigate%20to%20the%20%60script%60%20folder%20and%20locate%20the%20%60CounterScript%60.%0A%0AModify%20the%20contents%20so%20it%20looks%20like%20this%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.13%3B%0A%0Aimport%20%7BScript%2C%20console%7D%20from%20%22forge-std%2FScript.sol%22%3B%0Aimport%20%7BCounter%7D%20from%20%22..%2Fsrc%2FCounter.sol%22%3B%0A%0Acontract%20CounterScript%20is%20Script%20%7B%0A%20%20%20%20Counter%20public%20counter%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%7D%0A%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20counter%20%3D%20new%20Counter()%3B%0A%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ANow%20let's%20read%20through%20the%20code%20and%20figure%20out%20what%20it%20actually%20means%20and%20does.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.13%3B%0A%60%60%60%0A%0ARemember%20even%20if%20it's%20a%20script%20it%20still%20works%20like%20a%20smart%20contract%2C%20but%20is%20never%20deployed%2C%20so%20just%20like%20any%20other%20smart%20contract%20written%20in%20Solidity%20the%20%60pragma%20version%60%20has%20to%20be%20specified.%0A%0A%60%60%60solidity%0Aimport%20%7BScript%2C%20console%7D%20from%20%22forge-std%2FScript.sol%22%3B%0Aimport%20%7BCounter%7D%20from%20%22..%2Fsrc%2FCounter.sol%22%3B%0A%60%60%60%0A%0AJust%20like%20we%20may%20import%20Forge%20Std%20to%20get%20testing%20utilities%20when%20writing%20tests%2C%20it%20also%20provides%20some%20scripting%20utilities.%0A%0AThe%20next%20line%20just%20imports%20the%20%60Counter%60%20contract.%0A%0A%60%60%60solidity%0Acontract%20CounterScript%20is%20Script%20%7B%0A%60%60%60%0A%0AWe%20have%20created%20a%20contract%20called%20%60CounterScript%60%20and%20it%20inherits%20%60Script%60%20from%20Forge%20Std.%0A%0A%60%60%60solidity%0Afunction%20run()%20external%20%7B%0A%60%60%60%0A%0ABy%20default%2C%20scripts%20are%20executed%20by%20calling%20the%20function%20named%20%60run%60%2C%20our%20entrypoint.%0A%0AThis%20loads%20in%20the%20private%20key%20from%20our%20%60.env%60%20file.%20**Note%3A**%20you%20must%20be%20careful%20when%20exposing%20private%20keys%20in%20a%20%60.env%60%20file%20and%20loading%20them%20into%20programs.%20This%20is%20only%20recommended%20for%20use%20with%20non-privileged%20deployers%20or%20for%20local%20%2F%20test%20setups.%20For%20production%20setups%20please%20review%20the%20various%20%5Bwallet%20options%5D(%2Fforge%2Freference%2Fforge-script%23wallet-options---raw)%20that%20Foundry%20supports.%0A%0A%60%60%60solidity%0Avm.startBroadcast()%3B%0A%60%60%60%0A%0AThis%20is%20a%20special%20cheatcode%20that%20records%20calls%20and%20contract%20creations%20made%20by%20our%20main%20script%20contract.%20The%20private%20key%20of%20the%20sender%20we%20will%20pass%20in%20will%20instruct%20it%20to%20use%20that%20key%20for%20signing%20the%20transactions.%20Later%2C%20we%20will%20broadcast%20these%20transactions%20to%20deploy%20our%20%60Counter%60%20contract.%0A%0A%60%60%60solidity%0ACounter%20counter%20%3D%20new%20Counter()%3B%0A%60%60%60%0A%0AHere%20we%20have%20just%20created%20our%20%60Counter%60%20contract.%20Because%20we%20called%20%60vm.startBroadcast()%60%20before%20this%20line%2C%20the%20contract%20creation%20will%20be%20recorded%20by%20Forge%2C%20and%20as%20mentioned%20previously%2C%20we%20can%20broadcast%20the%20transaction%20to%20deploy%20the%20contract%20on-chain.%20The%20broadcast%20transaction%20logs%20will%20be%20stored%20in%20the%20%60broadcast%60%20directory%20by%20default.%20You%20can%20change%20the%20logs%20location%20by%20setting%20%5B%60broadcast%60%5D(%2Fconfig%2Freference%2Fproject%23broadcast)%20in%20your%20%60foundry.toml%60%20file.%0A%0AThe%20broadcasting%20sender%20is%20determined%20by%20checking%20the%20following%20in%20order%3A%0A%0A1.%20If%20%60--sender%60%20argument%20was%20provided%2C%20that%20address%20is%20used.%0A2.%20If%20exactly%20one%20signer%20(e.g.%20private%20key%2C%20hardware%20wallet%2C%20keystore)%20is%20set%2C%20that%20signer%20is%20used.%0A3.%20Otherwise%2C%20the%20default%20Foundry%20sender%20(%600x1804c8AB1F12E6bbf3894d4083f33e07309d1f38%60)%20is%20attempted%20to%20be%20used.%0A%0ANow%20that%20you're%20up%20to%20speed%20about%20what%20the%20script%20smart%20contract%20does%2C%20let's%20run%20it.%0A%0A%23%23%23%20Deploying%20to%20a%20testnet%0A%0AYou%20should%20have%20added%20the%20variables%20we%20mentioned%20earlier%20to%20the%20%60.env%60%20for%20this%20next%20part%20to%20work.%0A%0AAt%20the%20root%20of%20the%20project%20run%3A%0A%0A%60%60%60sh%0A%23%20To%20load%20the%20variables%20in%20the%20.env%20file%0Asource%20.env%0A%0A%23%20To%20deploy%20and%20verify%20our%20contract%0Aforge%20script%20--chain%20sepolia%20script%2FCounter.s.sol%3ACounterScript%20--rpc-url%20%24SEPOLIA_RPC_URL%20--broadcast%20--verify%20-vvvv%20--interactives%201%0A%60%60%60%0A%0ANote%20the%20%60--interactives%201%60%2C%20this%20will%20open%20an%20interactive%20prompt%20to%20enter%20your%20private%20key.%20For%20anything%20beyond%20a%20simple%20testnet%20deployment%20in%20a%20development%20setting%20you%20are%20**STRONGLY**%20%5Brecommended%20to%20use%20a%20hardware%20wallet%20or%20a%20password%20protected%20keystore%5D(%2Fguides%2Fbest-practices%2Fkey-management).%0A%0A%60%60%60%0AEnter%20private%20key%3A%20%3CPRIVATE_KEY%3E%0A%60%60%60%0A%0AForge%20is%20going%20to%20run%20our%20script%20and%20broadcast%20the%20transactions%20for%20us%20-%20this%20can%20take%20a%20little%20while%2C%20since%20Forge%20will%20also%20wait%20for%20the%20transaction%20receipts.%20You%20should%20see%20something%20like%20this%20after%20a%20minute%20or%20so%3A%0A%0A%60%60%60%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0AEnter%20private%20key%3A%0ATraces%3A%0A%20%20%5B137029%5D%20CounterScript%3A%3Arun()%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B0%5D%20VM%3A%3AstartBroadcast()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B96345%5D%20%E2%86%92%20new%20Counter%40%3CADDRESS%3E%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%20481%20bytes%20of%20code%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B0%5D%20VM%3A%3AstopBroadcast()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BStop%5D%0A%0A%0AScript%20ran%20successfully.%0A%0A%23%23%20Setting%20up%201%20EVM.%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0ASimulated%20On-chain%20Traces%3A%0A%0A%20%20%5B96345%5D%20%E2%86%92%20new%20Counter%40%3CADDRESS%3E%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%5BReturn%5D%20481%20bytes%20of%20code%0A%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AChain%2011155111%0A%0AEstimated%20gas%20price%3A%20%3CGAS_PRICE%3E%20gwei%0A%0AEstimated%20total%20gas%20used%20for%20script%3A%20%3CGAS%3E%0A%0AEstimated%20amount%20required%3A%20%3CGAS_AMOUNT%3E%20ETH%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A%23%23%23%23%23%20sepolia%0A%E2%9C%85%20%20%5BSuccess%5D%20Hash%3A%20%3CHASH%3E%0AContract%20Address%3A%20%3CADDRESS%3E%0ABlock%3A%20%3CBLOCK%3E%0APaid%3A%20%3CGAS%3E%0A%0A%E2%9C%85%20Sequence%20%231%20on%20sepolia%20%7C%20Total%20Paid%3A%20%3CGAS%3E%0A%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AONCHAIN%20EXECUTION%20COMPLETE%20%26%20SUCCESSFUL.%0A%23%23%0AStart%20verification%20for%20(1)%20contracts%0AStart%20verifying%20contract%20%60%3CADDRESS%3E%60%20deployed%20on%20sepolia%0ACompiler%20version%3A%200.8.28%0A%0ASubmitting%20verification%20for%20%5Bsrc%2FCounter.sol%3ACounter%5D%20%3CADDRESS%3E.%0ASubmitted%20contract%20for%20verification%3A%0A%09Response%3A%20%60OK%60%0A%09GUID%3A%20%60%3CGUID%3E%60%0A%09URL%3A%20https%3A%2F%2Fsepolia.etherscan.io%2Faddress%2F%3CADDRESS%3E%0AContract%20verification%20status%3A%0AResponse%3A%20%60NOTOK%60%0ADetails%3A%20%60Pending%20in%20queue%60%0AWarning%3A%20Verification%20is%20still%20pending...%3B%20waiting%2015%20seconds%20before%20trying%20again%20(7%20tries%20remaining)%0AContract%20verification%20status%3A%0AResponse%3A%20%60OK%60%0ADetails%3A%20%60Pass%20-%20Verified%60%0AContract%20successfully%20verified%0AAll%20(1)%20contracts%20were%20verified!%0A%0ATransactions%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fbroadcast%2FCounter.s.sol%2F11155111%2Frun-latest.json%0A%0ASensitive%20values%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fcache%2FCounter.s.sol%2F11155111%2Frun-latest.json%0A%60%60%60%0A%0AThis%20confirms%20that%20you%20have%20successfully%20deployed%20the%20%60Counter%60%20contract%20to%20the%20Sepolia%20testnet%20and%20have%20also%20verified%20it%20on%20Etherscan%2C%20all%20with%20one%20command.%0A%0A%23%23%23%20Deploying%20to%20a%20local%20Anvil%20instance%0A%0AYou%20can%20deploy%20to%20Anvil%2C%20the%20local%20testnet%2C%20by%20configuring%20the%20%60--fork-url%60.%0A%0ALet's%20start%20Anvil%20in%20one%20terminal%20window%3A%0A%0A%60%60%60sh%0Aanvil%0A%60%60%60%0A%0AThis%20will%20show%20you%20are%20list%20of%20default%20accounts.%0A%0A%60%60%60%0AAvailable%20Accounts%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A(0)%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20(10000.000000000000000000%20ETH)%0A...%0A%0APrivate%20Keys%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A(0)%200xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%0A...%0A%60%60%60%0A%0AThen%20run%20the%20following%20script%20in%20a%20different%20terminal%20window%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FCounter.s.sol%3ACounterScript%20--fork-url%20http%3A%2F%2Flocalhost%3A8545%20--broadcast%20--interactives%201%0A%60%60%60%0A%0ANext%20enter%20the%20private%20key%2C%20pick%20one%20from%20the%20list.%0A%0A%60%60%60%0AEnter%20private%20key%3A%20%3CPRIVATE_KEY%3E%0A%60%60%60%0A%0A%60%60%60%0A%5B%E2%A0%8A%5D%20Compiling...%0ANo%20files%20changed%2C%20compilation%20skipped%0AEnter%20private%20key%3A%0AScript%20ran%20successfully.%0A%0A%23%23%20Setting%20up%201%20EVM.%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AChain%2031337%0A%0AEstimated%20gas%20price%3A%202.000000001%20gwei%0A%0AEstimated%20total%20gas%20used%20for%20script%3A%20203856%0A%0AEstimated%20amount%20required%3A%200.000407712000203856%20ETH%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0A%23%23%23%23%23%20anvil-hardhat%0A%E2%9C%85%20%20%5BSuccess%5D%20Hash%3A%200x6795deaad7fd483eda4b16af7d8b871c7f6e49beb50709ce1cf0ca81c29247d1%0AContract%20Address%3A%200x5FbDB2315678afecb367f032d93F642f64180aa3%0ABlock%3A%201%0APaid%3A%200.000156813000156813%20ETH%20(156813%20gas%20*%201.000000001%20gwei)%0A%0A%E2%9C%85%20Sequence%20%231%20on%20anvil-hardhat%20%7C%20Total%20Paid%3A%200.000156813000156813%20ETH%20(156813%20gas%20*%20avg%201.000000001%20gwei)%0A%0A%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AONCHAIN%20EXECUTION%20COMPLETE%20%26%20SUCCESSFUL.%0A%0ATransactions%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fbroadcast%2FCounter.s.sol%2F31337%2Frun-latest.json%0A%0ASensitive%20values%20saved%20to%3A%20%2Fhome%2Fuser%2Fcounter%2Fcache%2FCounter.s.sol%2F31337%2Frun-latest.json%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./video-tutorials-B9cufcBZ.js"),__vite__mapDeps([23,1])),path:"/guides/video-tutorials",type:"mdx",filePath:"guides/video-tutorials.mdx",content:"---%0Adescription%3A%20Curated%20collection%20of%20video%20tutorials%20and%20courses%20for%20learning%20Foundry%20from%20blockchain%20educators%20and%20developers.%0A---%0A%0A%23%23%20Foundry%20Tutorial%20Videos%0A%0AUnofficial%20_youtube%20playlists_%20of%20Foundry%20tutorials%20from%20Blockchain%20educatorsescriptionuthor%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%3A------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%3A%20%7C%20%3A-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%3A%20%7C%20%3A------------------------------------------------------------------------------------------------------%3A%20%7C%0A%7C%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPL4Rj_WH6yLgWe7TxankiqkrkVKXIwOP42%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fi.ytimg.com%2Fvi%2FumepbfKp5rI%2Fhq720.jpg%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%7C%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPL4Rj_WH6yLgWe7TxankiqkrkVKXIwOP42%22%20target%3D%22_blank%22%3E_Blockchain%20Developer%2C%20Solidity%2C%20Foundry%20Full%20Course%202023_%20~%20Learn%20Solidity%2C%20Blockchain%20Development%2C%20%26%20Smart%20Contracts%20Powered%20By%20AI%20-%20Full%20Course%3C%2Fa%3E%20%7C%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2F%40PatrickAlphaC%22%20target%3D%22_blank%22%3EPatrick%20Collins%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fyoutube.com%2Fplaylist%3Flist%3DPLO5VPQH6OWdUrKEWPF07CSuVm3T99DQki%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fi.ytimg.com%2Fvi%2Ftgs5q-GJmg4%2Fhq720.jpg%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fyoutube.com%2Fplaylist%3Flist%3DPLO5VPQH6OWdUrKEWPF07CSuVm3T99DQki%22%20target%3D%22_blank%22%3E_Foundry_%20~%20Playlist%20of%20beginner%20level%20videos%20on%20Foundry%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2F%40smartcontractprogrammer%22%20target%3D%22_blank%22%3ESmart%20Contract%20Programmer%3C%2Fa%3E%20%7C%0A%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DhOB1Yiuxojk%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fi.ytimg.com%2Fvi%2FhOB1Yiuxojk%2Fmaxresdefault.jpg%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DhOB1Yiuxojk%22%20target%3D%22_blank%22%3EA%20Complete%20Introduction%20to%20Smart%20Contract%20Development%20With%20Foundry%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2F%40axelar-network%22%20target%3D%22_blank%22%3EAxelar%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Ffoundry%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fcyfrin-updraft-cms-main.imgix.net%2Fassets%2Fpreview_images%2Ff101.png%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Ffoundry%22%20target%3D%22_blank%22%3ECyfrin%20Updraft%20-%20Foundry%20Fundamentals%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2F%22%3ECyfrin%20Updraft%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Fadvanced-foundry%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fcyfrin-updraft-cms-main.imgix.net%2Fassets%2Fpreview_images%2Faf.png%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Fadvanced-foundry%22%20target%3D%22_blank%22%3ECyfrin%20Updraft%20-%20Advanced%20Foundry%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2F%22%3ECyfrin%20Updraft%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./video-tutorials-B9cufcBZ.js"),__vite__mapDeps([23,1])),path:"/guides/video-tutorials.html",type:"mdx",filePath:"guides/video-tutorials.mdx",content:"---%0Adescription%3A%20Curated%20collection%20of%20video%20tutorials%20and%20courses%20for%20learning%20Foundry%20from%20blockchain%20educators%20and%20developers.%0A---%0A%0A%23%23%20Foundry%20Tutorial%20Videos%0A%0AUnofficial%20_youtube%20playlists_%20of%20Foundry%20tutorials%20from%20Blockchain%20educatorsescription%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Author%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%3A------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%3A%20%7C%20%3A-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------%3A%20%7C%20%3A------------------------------------------------------------------------------------------------------%3A%20%7C%0A%7C%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPL4Rj_WH6yLgWe7TxankiqkrkVKXIwOP42%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fi.ytimg.com%2Fvi%2FumepbfKp5rI%2Fhq720.jpg%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%7C%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPL4Rj_WH6yLgWe7TxankiqkrkVKXIwOP42%22%20target%3D%22_blank%22%3E_Blockchain%20Developer%2C%20Solidity%2C%20Foundry%20Full%20Course%202023_%20~%20Learn%20Solidity%2C%20Blockchain%20Development%2C%20%26%20Smart%20Contracts%20Powered%20By%20AI%20-%20Full%20Course%3C%2Fa%3E%20%7C%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2F%40PatrickAlphaC%22%20target%3D%22_blank%22%3EPatrick%20Collins%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fyoutube.com%2Fplaylist%3Flist%3DPLO5VPQH6OWdUrKEWPF07CSuVm3T99DQki%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fi.ytimg.com%2Fvi%2Ftgs5q-GJmg4%2Fhq720.jpg%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fyoutube.com%2Fplaylist%3Flist%3DPLO5VPQH6OWdUrKEWPF07CSuVm3T99DQki%22%20target%3D%22_blank%22%3E_Foundry_%20~%20Playlist%20of%20beginner%20level%20videos%20on%20Foundry%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2F%40smartcontractprogrammer%22%20target%3D%22_blank%22%3ESmart%20Contract%20Programmer%3C%2Fa%3E%20%7C%0A%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DhOB1Yiuxojk%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fi.ytimg.com%2Fvi%2FhOB1Yiuxojk%2Fmaxresdefault.jpg%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DhOB1Yiuxojk%22%20target%3D%22_blank%22%3EA%20Complete%20Introduction%20to%20Smart%20Contract%20Development%20With%20Foundry%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fwww.youtube.com%2F%40axelar-network%22%20target%3D%22_blank%22%3EAxelar%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Ffoundry%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fcyfrin-updraft-cms-main.imgix.net%2Fassets%2Fpreview_images%2Ff101.png%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Ffoundry%22%20target%3D%22_blank%22%3ECyfrin%20Updraft%20-%20Foundry%20Fundamentals%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2F%22%3ECyfrin%20Updraft%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Fadvanced-foundry%22%20target%3D%22_blank%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fcyfrin-updraft-cms-main.imgix.net%2Fassets%2Fpreview_images%2Faf.png%22%20alt%3D%22%22%3E%3C%2Fimg%3E%3C%2Fa%3E%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2Fcourses%2Fadvanced-foundry%22%20target%3D%22_blank%22%3ECyfrin%20Updraft%20-%20Advanced%20Foundry%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ca%20href%3D%22https%3A%2F%2Fupdraft.cyfrin.io%2F%22%3ECyfrin%20Updraft%3C%2Fa%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./getting-started-Dk0fDlUd.js"),__vite__mapDeps([24,1])),path:"/introduction/getting-started",type:"mdx",filePath:"introduction/getting-started.mdx",content:"---%0Adescription%3A%20Quick%20start%20guide%20to%20using%20Foundry's%20four%20essential%20tools%20-%20Forge%2C%20Anvil%2C%20Cast%2C%20and%20Chisel%20for%20smart%20contract%20development.%0A---%0A%0A%23%23%20Getting%20Started%0A%0AFoundry%20is%20a%20blazing%20fast%2C%20portable%20and%20modular%20toolkit%20for%20Ethereum%20application%20development%20written%20in%20Rust.%20It%20consists%20of%20four%20essential%20tools%20that%20suffice%20all%20the%20needs%20a%20blockchain%20app%20developer%20will%20ever%20have.%0A%0AHere's%20an%20overview%20of%20the%20tools%20available%20at%20your%20disposal%20after%20%5Brunning%20foundryup%5D(%2Fintroduction%2Finstallation%23using-foundryup)%3A%0A%0A%7C%20Tool%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20What%20it%20enables%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20--------------------------------%20%7C%20-------------------------------------------------------------------%20%7C%0A%7C%20**%5B%60forge%60%5D(%2Fforge%2Foverview)**%20%20%20%7C%20Build%2C%20test%2C%20debug%2C%20deploy%20and%20verify%20smart%20contracts%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20**%5B%60anvil%60%5D(%2Fanvil%2Foverview)**%20%20%20%7C%20Run%20a%20local%20Ethereum%20development%20node%20with%20forking%20capabilities%20%20%20%20%20%7C%0A%7C%20**%5B%60cast%60%5D(%2Fcast%2Foverview)**%20%20%20%20%20%7C%20Interact%20with%20contracts%2C%20send%20transactions%2C%20and%20retrieve%20chain%20data%20%7C%0A%7C%20**%5B%60chisel%60%5D(%2Fchisel%2Foverview)**%20%7C%20Fast%20Solidity%20REPL%20for%20rapid%20prototyping%20and%20debugging%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%0A%3A%3A%3Atip%0AYou%20can%20always%20view%20detailed%20help%20for%20any%20command%20or%20subcommand%20by%20appending%20%60--help%60%20to%20it.%0A%3A%3A%3A%0A%0A---%0A%0A%23%23%23%20Forge%0A%0AForge%20is%20a%20command-line%20tool%20for%20building%2C%20testing%2C%20and%20deploying%20smart%20contracts.%0A%0A%23%23%23%23%20Initialize%20a%20new%20project%0A%0A%60%60%60bash%0A%23%20Create%20a%20new%20project%20called%20Counter%0Aforge%20init%20Counter%0Acd%20Counter%0A%60%60%60%0A%0A%23%23%23%23%20Build%20and%20test%20contracts%0A%0A%60%60%60bash%0A%23%20Compile%20your%20contracts%0Aforge%20build%0A%0A%23%20Run%20your%20test%20suite%0Aforge%20test%0A%0A%23%20Run%20tests%20against%20live%20chain%20state%20by%20forking%0Aforge%20test%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%23%23%23%23%20Deploy%20contracts%0A%0A%60%60%60bash%0A%23%20Use%20forge%20scripts%20to%20deploy%20contracts%0A%23%20Set%20your%20private%20key%0Aexport%20PRIVATE_KEY%3D%220xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%22%0A%0A%23%20Deploy%20to%20local%20anvil%20instance%0Aforge%20script%20script%2FCounter.s.sol%20--rpc-url%20http%3A%2F%2F127.0.0.1%3A8545%20--broadcast%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%60forge%60%20also%20enables%20more%20advanced%20workflows%20such%20as%3A%0A%0A-%20%5BTable%20testing%5D(%2Fforge%2Fadvanced-testing%2Ftable-testing)%20-%20Property-based%20testing%20with%20test%20cases%20inputs%20organized%20into%20a%20table%20format%0A-%20%5BFuzz%20testing%5D(%2Fforge%2Fadvanced-testing%2Ffuzz-testing)%20-%20Property-based%20testing%20with%20randomized%20inputs%0A-%20%5BInvariant%20testing%5D(%2Fforge%2Fadvanced-testing%2Finvariant-testing)%20-%20Test%20system-wide%20properties%20across%20function%20call%20sequences%0A-%20%5BGas%20tracking%5D(%2Fforge%2Fgas-tracking%2Foverview)%20-%20Monitor%20and%20optimize%20gas%20consumption%20across%20your%20contracts%0A-%20%5BCoverage%20reports%5D(%2Fforge%2Freference%2Fforge-coverage)%20-%20Generate%20detailed%20test%20coverage%20analysis%20with%20%60forge%20coverage%60%0A%0ALearn%20more%20about%20%60forge%60%20%5Bhere%5D(%2Fforge%2Foverview).%0A%0A---%0A%0A%23%23%23%20Anvil%0A%0AAnvil%20is%20a%20fast%20local%20Ethereum%20development%20node%20that%20is%20perfect%20for%20testing%20your%20contracts%20and%20other%20blockchain%20workflows%20in%20a%20controlled%20environment.%0A%0A%23%23%23%23%20Start%20a%20local%20development%20node%0A%0A%60%60%60bash%0A%23%20Start%20anvil%20with%2010%20pre-funded%20accounts%0Aanvil%0A%60%60%60%0A%0A%23%23%23%23%20Fork%20mainnet%20state%0A%0A%60%60%60bash%0A%23%20Fork%20latest%20mainnet%20state%20for%20testing%0Aanvil%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%60anvil%60%20comes%20up%20with%20other%20advanced%20capabilities%20such%20as%3A%0A%0A-%20**Custom%20%60anvil_%60%20methods**%20-%20Advanced%20node%20control%20including%20%5Baccount%20impersonation%5D(%2Fanvil%2Freference%23anvil_impersonateaccount)%2C%20%5Bstate%20manipulation%5D(%2Fanvil%2Freference%23anvil_setbalance)%2C%20and%20%5Bmining%20control%5D(%2Fanvil%2Freference%23anvil_mine)%0A-%20**Forking%20capabilities**%20-%20Fork%20anvil%20off%20another%20live%20chain%0A%0AAll%20of%20the%20above%20is%20provided%20while%20maintaining%20full%20compliance%20with%20the%20Ethereum%20JSON-RPC%20spec.%0A%0ALearn%20more%20about%20%60anvil%60%20%5Bhere%5D(%2Fanvil%2Foverview).%0A%0A%23%23%23%20Cast%0A%0ACast%20is%20your%20Swiss%20army%20knife%20for%20interacting%20with%20Ethereum%20applications%20from%20the%20command%20line.%20You%20can%20make%20smart%20contract%20calls%2C%20send%20transactions%2C%20or%20retrieve%20any%20type%20of%20chain%20data.%0A%0A%23%23%23%23%20Read%20contract%20data%0A%0A%60%60%60bash%0A%23%20Check%20ETH%20balance%0Acast%20balance%20vitalik.eth%20--ether%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%0A%23%20Call%20a%20contract%20function%20to%20read%20data%0Acast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%22balanceOf(address)%22%200xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045%20%5C%0A--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%23%23%23%23%20Send%20transactions%0A%0A%60%60%60bash%0A%23%20Set%20your%20private%20key%0Aexport%20PRIVATE_KEY%3D%220xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%22%0A%0A%23%20Send%20ETH%20to%20an%20address%0Acast%20send%200x70997970C51812dc3A010C7d01b50e0d17dc79C8%20--value%2010000000%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%23%23%23%23%20Interact%20with%20JSON-RPC%0A%0A%60%60%60bash%0A%23%20Call%20JSON-RPC%20methods%20directly%0Acast%20rpc%20eth_getHeaderByNumber%20%24(cast%202h%2022539851)%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%0A%23%20Get%20latest%20block%20number%0Acast%20block-number%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0ALearn%20more%20about%20%60cast%60%20%5Bhere%5D(%2Fcast%2Foverview).%0A%0A---%0A%0A%23%23%23%20Chisel%0A%0AChisel%20is%20a%20fast%2C%20utilitarian%2C%20and%20verbose%20Solidity%20REPL%20for%20rapid%20prototyping%20and%20debugging.%20It's%20perfect%20for%20testing%20Solidity%20snippets%20and%20exploring%20contract%20behavior%20interactively.%0A%0A%23%23%23%23%20Start%20the%20REPL%0A%0A%60%60%60bash%0A%23%20Launch%20chisel%20REPL%0Achisel%0A%60%60%60%0A%0A%23%23%23%23%20Interactive%20Solidity%20development%0A%0A%60%60%60solidity%0A%2F%2F%20Create%20and%20query%20variables%0A%E2%9E%9C%20uint256%20a%20%3D%20123%3B%0A%E2%9E%9C%20a%0AType%3A%20uint256%0A%E2%94%9C%20Hex%3A%200x7b%0A%E2%94%9C%20Hex%20(full%20word)%3A%200x000000000000000000000000000000000000000000000000000000000000007b%0A%E2%94%94%20Decimal%3A%20123%0A%0A%2F%2F%20Test%20contract%20functions%0A%E2%9E%9C%20function%20add(uint256%20x%2C%20uint256%20y)%20pure%20returns%20(uint256)%20%7B%20return%20x%20%2B%20y%3B%20%7D%0A%E2%9E%9C%20add(5%2C%2010)%0AType%3A%20uint256%0A%E2%94%94%20Decimal%3A%2015%0A%60%60%60%0A%0ALearn%20more%20about%20%60chisel%60%20%5Bhere%5D(%2Fchisel%2Foverview).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./getting-started-Dk0fDlUd.js"),__vite__mapDeps([24,1])),path:"/introduction/getting-started.html",type:"mdx",filePath:"introduction/getting-started.mdx",content:"---%0Adescription%3A%20Quick%20start%20guide%20to%20using%20Foundry's%20four%20essential%20tools%20-%20Forge%2C%20Anvil%2C%20Cast%2C%20and%20Chisel%20for%20smart%20contract%20development.%0A---%0A%0A%23%23%20Getting%20Started%0A%0AFoundry%20is%20a%20blazing%20fast%2C%20portable%20and%20modular%20toolkit%20for%20Ethereum%20application%20development%20written%20in%20Rust.%20It%20consists%20of%20four%20essential%20tools%20that%20suffice%20all%20the%20needs%20a%20blockchain%20app%20developer%20will%20ever%20have.%0A%0AHere's%20an%20overview%20of%20the%20tools%20available%20at%20your%20disposal%20after%20%5Brunning%20foundryup%5D(%2Fintroduction%2Finstallation%23using-foundryup)%3A%0A%0A%7C%20Tool%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20What%20it%20enables%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20--------------------------------%20%7C%20-------------------------------------------------------------------%20%7C%0A%7C%20**%5B%60forge%60%5D(%2Fforge%2Foverview)**%20%20%20%7C%20Build%2C%20test%2C%20debug%2C%20deploy%20and%20verify%20smart%20contracts%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20**%5B%60anvil%60%5D(%2Fanvil%2Foverview)**%20%20%20%7C%20Run%20a%20local%20Ethereum%20development%20node%20with%20forking%20capabilities%20%20%20%20%20%7C%0A%7C%20**%5B%60cast%60%5D(%2Fcast%2Foverview)**%20%20%20%20%20%7C%20Interact%20with%20contracts%2C%20send%20transactions%2C%20and%20retrieve%20chain%20data%20%7C%0A%7C%20**%5B%60chisel%60%5D(%2Fchisel%2Foverview)**%20%7C%20Fast%20Solidity%20REPL%20for%20rapid%20prototyping%20and%20debugging%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%0A%3A%3A%3Atip%0AYou%20can%20always%20view%20detailed%20help%20for%20any%20command%20or%20subcommand%20by%20appending%20%60--help%60%20to%20it.%0A%3A%3A%3A%0A%0A---%0A%0A%23%23%23%20Forge%0A%0AForge%20is%20a%20command-line%20tool%20for%20building%2C%20testing%2C%20and%20deploying%20smart%20contracts.%0A%0A%23%23%23%23%20Initialize%20a%20new%20project%0A%0A%60%60%60bash%0A%23%20Create%20a%20new%20project%20called%20Counter%0Aforge%20init%20Counter%0Acd%20Counter%0A%60%60%60%0A%0A%23%23%23%23%20Build%20and%20test%20contracts%0A%0A%60%60%60bash%0A%23%20Compile%20your%20contracts%0Aforge%20build%0A%0A%23%20Run%20your%20test%20suite%0Aforge%20test%0A%0A%23%20Run%20tests%20against%20live%20chain%20state%20by%20forking%0Aforge%20test%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%23%23%23%23%20Deploy%20contracts%0A%0A%60%60%60bash%0A%23%20Use%20forge%20scripts%20to%20deploy%20contracts%0A%23%20Set%20your%20private%20key%0Aexport%20PRIVATE_KEY%3D%220xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%22%0A%0A%23%20Deploy%20to%20local%20anvil%20instance%0Aforge%20script%20script%2FCounter.s.sol%20--rpc-url%20http%3A%2F%2F127.0.0.1%3A8545%20--broadcast%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%60forge%60%20also%20enables%20more%20advanced%20workflows%20such%20as%3A%0A%0A-%20%5BTable%20testing%5D(%2Fforge%2Fadvanced-testing%2Ftable-testing)%20-%20Property-based%20testing%20with%20test%20cases%20inputs%20organized%20into%20a%20table%20format%0A-%20%5BFuzz%20testing%5D(%2Fforge%2Fadvanced-testing%2Ffuzz-testing)%20-%20Property-based%20testing%20with%20randomized%20inputs%0A-%20%5BInvariant%20testing%5D(%2Fforge%2Fadvanced-testing%2Finvariant-testing)%20-%20Test%20system-wide%20properties%20across%20function%20call%20sequences%0A-%20%5BGas%20tracking%5D(%2Fforge%2Fgas-tracking%2Foverview)%20-%20Monitor%20and%20optimize%20gas%20consumption%20across%20your%20contracts%0A-%20%5BCoverage%20reports%5D(%2Fforge%2Freference%2Fforge-coverage)%20-%20Generate%20detailed%20test%20coverage%20analysis%20with%20%60forge%20coverage%60%0A%0ALearn%20more%20about%20%60forge%60%20%5Bhere%5D(%2Fforge%2Foverview).%0A%0A---%0A%0A%23%23%23%20Anvil%0A%0AAnvil%20is%20a%20fast%20local%20Ethereum%20development%20node%20that%20is%20perfect%20for%20testing%20your%20contracts%20and%20other%20blockchain%20workflows%20in%20a%20controlled%20environment.%0A%0A%23%23%23%23%20Start%20a%20local%20development%20node%0A%0A%60%60%60bash%0A%23%20Start%20anvil%20with%2010%20pre-funded%20accounts%0Aanvil%0A%60%60%60%0A%0A%23%23%23%23%20Fork%20mainnet%20state%0A%0A%60%60%60bash%0A%23%20Fork%20latest%20mainnet%20state%20for%20testing%0Aanvil%20--fork-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%60anvil%60%20comes%20up%20with%20other%20advanced%20capabilities%20such%20as%3A%0A%0A-%20**Custom%20%60anvil_%60%20methods**%20-%20Advanced%20node%20control%20including%20%5Baccount%20impersonation%5D(%2Fanvil%2Freference%23anvil_impersonateaccount)%2C%20%5Bstate%20manipulation%5D(%2Fanvil%2Freference%23anvil_setbalance)%2C%20and%20%5Bmining%20control%5D(%2Fanvil%2Freference%23anvil_mine)%0A-%20**Forking%20capabilities**%20-%20Fork%20anvil%20off%20another%20live%20chain%0A%0AAll%20of%20the%20above%20is%20provided%20while%20maintaining%20full%20compliance%20with%20the%20Ethereum%20JSON-RPC%20spec.%0A%0ALearn%20more%20about%20%60anvil%60%20%5Bhere%5D(%2Fanvil%2Foverview).%0A%0A%23%23%23%20Cast%0A%0ACast%20is%20your%20Swiss%20army%20knife%20for%20interacting%20with%20Ethereum%20applications%20from%20the%20command%20line.%20You%20can%20make%20smart%20contract%20calls%2C%20send%20transactions%2C%20or%20retrieve%20any%20type%20of%20chain%20data.%0A%0A%23%23%23%23%20Read%20contract%20data%0A%0A%60%60%60bash%0A%23%20Check%20ETH%20balance%0Acast%20balance%20vitalik.eth%20--ether%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%0A%23%20Call%20a%20contract%20function%20to%20read%20data%0Acast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%22balanceOf(address)%22%200xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045%20%5C%0A--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0A%23%23%23%23%20Send%20transactions%0A%0A%60%60%60bash%0A%23%20Set%20your%20private%20key%0Aexport%20PRIVATE_KEY%3D%220xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80%22%0A%0A%23%20Send%20ETH%20to%20an%20address%0Acast%20send%200x70997970C51812dc3A010C7d01b50e0d17dc79C8%20--value%2010000000%20--private-key%20%24PRIVATE_KEY%0A%60%60%60%0A%0A%23%23%23%23%20Interact%20with%20JSON-RPC%0A%0A%60%60%60bash%0A%23%20Call%20JSON-RPC%20methods%20directly%0Acast%20rpc%20eth_getHeaderByNumber%20%24(cast%202h%2022539851)%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%0A%23%20Get%20latest%20block%20number%0Acast%20block-number%20--rpc-url%20https%3A%2F%2Freth-ethereum.ithaca.xyz%2Frpc%0A%60%60%60%0A%0ALearn%20more%20about%20%60cast%60%20%5Bhere%5D(%2Fcast%2Foverview).%0A%0A---%0A%0A%23%23%23%20Chisel%0A%0AChisel%20is%20a%20fast%2C%20utilitarian%2C%20and%20verbose%20Solidity%20REPL%20for%20rapid%20prototyping%20and%20debugging.%20It's%20perfect%20for%20testing%20Solidity%20snippets%20and%20exploring%20contract%20behavior%20interactively.%0A%0A%23%23%23%23%20Start%20the%20REPL%0A%0A%60%60%60bash%0A%23%20Launch%20chisel%20REPL%0Achisel%0A%60%60%60%0A%0A%23%23%23%23%20Interactive%20Solidity%20development%0A%0A%60%60%60solidity%0A%2F%2F%20Create%20and%20query%20variables%0A%E2%9E%9C%20uint256%20a%20%3D%20123%3B%0A%E2%9E%9C%20a%0AType%3A%20uint256%0A%E2%94%9C%20Hex%3A%200x7b%0A%E2%94%9C%20Hex%20(full%20word)%3A%200x000000000000000000000000000000000000000000000000000000000000007b%0A%E2%94%94%20Decimal%3A%20123%0A%0A%2F%2F%20Test%20contract%20functions%0A%E2%9E%9C%20function%20add(uint256%20x%2C%20uint256%20y)%20pure%20returns%20(uint256)%20%7B%20return%20x%20%2B%20y%3B%20%7D%0A%E2%9E%9C%20add(5%2C%2010)%0AType%3A%20uint256%0A%E2%94%94%20Decimal%3A%2015%0A%60%60%60%0A%0ALearn%20more%20about%20%60chisel%60%20%5Bhere%5D(%2Fchisel%2Foverview).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./installation-DZZoIjvR.js"),__vite__mapDeps([25,1])),path:"/introduction/installation",type:"mdx",filePath:"introduction/installation.md",content:"---%0Adescription%3A%20Complete%20guide%20to%20installing%20Foundry%20on%20your%20system%20using%20Foundryup%2C%20precompiled%20binaries%2C%20or%20building%20from%20source.%0A---%0A%0A%23%23%20Installation%0A%0AIf%20you%20encounter%20any%20issues%20during%20installation%2C%20refer%20to%20the%20%5BFAQ%5D(%2Fmisc%2Ffaq)%20for%20assistance.%0A%0A%23%23%23%20Precompiled%20Binaries%0A%0APrecompiled%20binaries%20can%20be%20downloaded%20from%20the%20%5BGitHub%20releases%20page%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Freleases).%20For%20easier%20management%2C%20we%20recommend%20using%20%5BFoundryup%5D(%23using-foundryup).%0A%0A%23%23%23%20Using%20Foundryup%0A%0AFoundryup%20is%20the%20official%20installer%20for%20the%20Foundry%20toolchain.%20You%20can%20learn%20more%20about%20it%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fblob%2Fmaster%2Ffoundryup%2FREADME.md).%0A%0ATo%20install%20Foundryup%2C%20open%20your%20terminal%20and%20run%20the%20following%20command%3A%0A%0A%60%60%60sh%0Acurl%20-L%20https%3A%2F%2Ffoundry.paradigm.xyz%20%7C%20bash%0A%60%60%60%0A%0AThis%20will%20install%20Foundryup.%20Simply%20follow%20the%20on-screen%20instructions%2C%20and%20the%20%60foundryup%60%20command%20will%20become%20available%20in%20your%20CLI.%0A%0ARunning%20%60foundryup%60%20will%20automatically%20install%20the%20latest%20stable%20version%20of%20the%20%5Bprecompiled%20binaries%5D(%23precompiled-binaries)%3A%20%60forge%60%2C%20%60cast%60%2C%20%60anvil%60%2C%20and%20%60chisel%60.%20If%20you%20wish%20to%20use%20the%20latest%20%60nightly%60%20build%20run%20%60foundryup%20--install%20nightly%60.%20For%20additional%20options%2C%20such%20as%20installing%20a%20specific%20version%20or%20commit%2C%20run%20%60foundryup%20--help%60.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%20%20%0A%3E%20If%20you're%20using%20Windows%2C%20you'll%20need%20to%20install%20and%20use%20%5BGit%20BASH%5D(https%3A%2F%2Fgitforwindows.org%2F)%20or%20%5BWSL%5D(https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fwindows%2Fwsl%2Finstall)%20as%20your%20terminal%2C%20since%20Foundryup%20currently%20doesn't%20support%20Powershell%20or%20Command%20Prompt%20(Cmd).%0A%0A%23%23%23%23%20Verify%20integrity%20and%20provenance%20of%20binaries%0A%0AFoundry%20binaries%20are%20attested%20by%20using%20%5BGitHub%20artifact%20attestations%5D(https%3A%2F%2Fdocs.github.com%2Fen%2Factions%2Fsecurity-for-github-actions%2Fusing-artifact-attestations%2Fusing-artifact-attestations-to-establish-provenance-for-builds).%20It%20is%20strongly%20recommended%20to%20verify%20the%20binaries%20installed%20using%20%60foundryup%60%20in%20order%20to%20check%20that%20they%20were%20built%20and%20distributed%20from%20Foundry%20repository.%20%20%0AFor%20example%2C%20%60forge%60%20binary%20integrity%20and%20provenance%20can%20be%20verified%20by%20running%3A%0A%0A%60%60%60shell%0Agh%20attestation%20verify%20--owner%20foundry-rs%20%24(which%20forge)%0A%0A%E2%9C%93%20Verification%20succeeded!%0A%0AThe%20following%201%20attestation%20matched%20the%20policy%20criteria%0A%0A-%20Attestation%20%231%0A%20%20-%20Build%20repo%3A.....%20foundry-rs%2Ffoundry%0A%20%20-%20Build%20workflow%3A.%20.github%2Fworkflows%2Frelease.yml%40refs%2Ftags%2Fstable%0A%20%20-%20Signer%20repo%3A....%20foundry-rs%2Ffoundry%0A%20%20-%20Signer%20workflow%3A%20.github%2Fworkflows%2Frelease.yml%40refs%2Ftags%2Fstable%0A%60%60%60%0A%0A%23%23%23%20Building%20from%20Source%0A%0A%23%23%23%23%20Prerequisites%0A%0AYou'll%20need%20the%20%5BRust%5D(https%3A%2F%2Frust-lang.org)%20compiler%20and%20Cargo%2C%20Rust's%20package%20manager.%20The%20easiest%20way%20to%20install%20both%20is%20by%20using%20%5B%60rustup.rs%60%5D(https%3A%2F%2Frustup.rs%2F).%0A%0AFoundry%20generally%20supports%20building%20only%20with%20the%20latest%20stable%20version%20of%20Rust.%20If%20you're%20using%20an%20older%20version%20of%20Rust%2C%20you%20can%20update%20it%20with%20%60rustup%60%3A%0A%0A%60%60%60sh%0Arustup%20update%20stable%0A%60%60%60%0A%0AFor%20Windows%20users%2C%20you'll%20also%20need%20a%20recent%20version%20of%20%5BVisual%20Studio%5D(https%3A%2F%2Fvisualstudio.microsoft.com%2Fdownloads%2F)%2C%20with%20the%20%22Desktop%20Development%20With%20C%2B%2B%22%20workload%20installed.%0A%0A%23%23%23%23%20Building%0A%0AYou%20can%20either%20use%20the%20various%20flags%20provided%20by%20%5BFoundryup%5D(%23using-foundryup)%3A%0A%0A%60%60%60sh%0Afoundryup%20--branch%20master%0Afoundryup%20--path%20path%2Fto%2Ffoundry%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20install%20via%20Cargo%20with%20the%20following%20command%3A%0A%0A%60%60%60sh%0Acargo%20install%20--git%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%20--profile%20release%20--locked%20forge%20cast%20chisel%20anvil%0A%60%60%60%0A%0AYou%20can%20also%20manually%20build%20from%20a%20local%20copy%20of%20the%20%5BFoundry%20repository%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry)%3A%0A%0A%60%60%60sh%0A%23%20clone%20the%20repository%0Agit%20clone%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry.git%0Acd%20foundry%0A%23%20install%20Forge%0Acargo%20install%20--path%20.%2Fcrates%2Fforge%20--profile%20release%20--force%20--locked%0A%23%20install%20Cast%0Acargo%20install%20--path%20.%2Fcrates%2Fcast%20--profile%20release%20--force%20--locked%0A%23%20install%20Anvil%0Acargo%20install%20--path%20.%2Fcrates%2Fanvil%20--profile%20release%20--force%20--locked%0A%23%20install%20Chisel%0Acargo%20install%20--path%20.%2Fcrates%2Fchisel%20--profile%20release%20--force%20--locked%0A%60%60%60%0A%0A%23%23%23%20CI%20Installation%20with%20GitHub%20Actions%0A%0AFor%20instructions%20on%20setting%20up%20Foundry%20in%20a%20CI%20pipeline%2C%20refer%20to%20the%20%5Bfoundry-rs%2Ffoundry-toolchain%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry-toolchain)%20GitHub%20Action.%0A%0A%23%23%23%20Using%20Foundry%20with%20Docker%0A%0A%3A%3A%3Anote%0ASome%20systems%2C%20including%20those%20with%20M1%20chips%2C%20may%20experience%20issues%20when%20building%20the%20Docker%20image%20locally.%20This%20is%20a%20known%20issue.%0A%3A%3A%3A%0A%0AFoundry%20can%20also%20be%20run%20inside%20a%20Docker%20container.%20If%20you%20don't%20have%20Docker%20installed%2C%20you%20can%20download%20it%20from%20%5BDocker's%20website%5D(https%3A%2F%2Fdocs.docker.com%2Fget-docker%2F).%0A%0AOnce%20Docker%20is%20installed%2C%20you%20can%20pull%20the%20latest%20Foundry%20release%20by%20running%3A%0A%0A%60%60%60sh%0Adocker%20pull%20ghcr.io%2Ffoundry-rs%2Ffoundry%3Alatest%0A%60%60%60%0A%0AYou%20can%20also%20build%20the%20Docker%20image%20locally%20by%20running%20the%20following%20command%20from%20the%20Foundry%20repository%3A%0A%0A%60%60%60sh%0Adocker%20build%20-t%20foundry%20.%0A%60%60%60%0A%0AFor%20examples%20and%20guides%20on%20using%20this%20image%2C%20refer%20to%20the%20%5BDocker%20guide%5D(%2Fguides%2Ffoundry-in-docker).%0A%0A%23%23%23%20Uninstalling%0A%0AFoundry%20contains%20everything%20in%20a%20%60.foundry%60%20directory%2C%20usually%20located%20in%20%60%2Fhome%2F%3Cuser%3E%2F.foundry%2F%60%20on%20Linux%2C%20%60%2FUsers%2F%3Cuser%3E%2F.foundry%2F%60%20on%20MacOS%20and%20%60C%3A%5CUsers%5C%3Cuser%3E%5C.foundry%60%20on%20Windows%20where%20%60%3Cuser%3E%60%20is%20your%20username.%0A%0ATo%20uninstall%20Foundry%20remove%20the%20%60.foundry%60%20directory.%0A%0A%3A%3A%3Awarning%0AThe%20.foundry%20directory%20can%20contain%20keystores.%20Make%20sure%20to%20backup%20any%20keystores%20you%20want%20to%20keep.%0A%3A%3A%3A%0A%0ARemove%20Foundry%20from%20PATH%3A%0A%0A-%20Optionally%20Foundry%20can%20be%20removed%20from%20editing%20shell%20configuration%20file%20(%60.bashrc%60%2C%20%60.zshrc%60%2C%20etc.).%20To%20do%20so%20remove%20the%20line%20that%20adds%20Foundry%20to%20PATH%3A%0A%0A%60%60%60sh%0Aexport%20PATH%3D%22%24PATH%3A%2Fhome%2Fuser%2F.foundry%2Fbin%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./installation-DZZoIjvR.js"),__vite__mapDeps([25,1])),path:"/introduction/installation.html",type:"mdx",filePath:"introduction/installation.md",content:"---%0Adescription%3A%20Complete%20guide%20to%20installing%20Foundry%20on%20your%20system%20using%20Foundryup%2C%20precompiled%20binaries%2C%20or%20building%20from%20source.%0A---%0A%0A%23%23%20Installation%0A%0AIf%20you%20encounter%20any%20issues%20during%20installation%2C%20refer%20to%20the%20%5BFAQ%5D(%2Fmisc%2Ffaq)%20for%20assistance.%0A%0A%23%23%23%20Precompiled%20Binaries%0A%0APrecompiled%20binaries%20can%20be%20downloaded%20from%20the%20%5BGitHub%20releases%20page%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Freleases).%20For%20easier%20management%2C%20we%20recommend%20using%20%5BFoundryup%5D(%23using-foundryup).%0A%0A%23%23%23%20Using%20Foundryup%0A%0AFoundryup%20is%20the%20official%20installer%20for%20the%20Foundry%20toolchain.%20You%20can%20learn%20more%20about%20it%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fblob%2Fmaster%2Ffoundryup%2FREADME.md).%0A%0ATo%20install%20Foundryup%2C%20open%20your%20terminal%20and%20run%20the%20following%20command%3A%0A%0A%60%60%60sh%0Acurl%20-L%20https%3A%2F%2Ffoundry.paradigm.xyz%20%7C%20bash%0A%60%60%60%0A%0AThis%20will%20install%20Foundryup.%20Simply%20follow%20the%20on-screen%20instructions%2C%20and%20the%20%60foundryup%60%20command%20will%20become%20available%20in%20your%20CLI.%0A%0ARunning%20%60foundryup%60%20will%20automatically%20install%20the%20latest%20stable%20version%20of%20the%20%5Bprecompiled%20binaries%5D(%23precompiled-binaries)%3A%20%60forge%60%2C%20%60cast%60%2C%20%60anvil%60%2C%20and%20%60chisel%60.%20If%20you%20wish%20to%20use%20the%20latest%20%60nightly%60%20build%20run%20%60foundryup%20--install%20nightly%60.%20For%20additional%20options%2C%20such%20as%20installing%20a%20specific%20version%20or%20commit%2C%20run%20%60foundryup%20--help%60.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%20%20%0A%3E%20If%20you're%20using%20Windows%2C%20you'll%20need%20to%20install%20and%20use%20%5BGit%20BASH%5D(https%3A%2F%2Fgitforwindows.org%2F)%20or%20%5BWSL%5D(https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fwindows%2Fwsl%2Finstall)%20as%20your%20terminal%2C%20since%20Foundryup%20currently%20doesn't%20support%20Powershell%20or%20Command%20Prompt%20(Cmd).%0A%0A%23%23%23%23%20Verify%20integrity%20and%20provenance%20of%20binaries%0A%0AFoundry%20binaries%20are%20attested%20by%20using%20%5BGitHub%20artifact%20attestations%5D(https%3A%2F%2Fdocs.github.com%2Fen%2Factions%2Fsecurity-for-github-actions%2Fusing-artifact-attestations%2Fusing-artifact-attestations-to-establish-provenance-for-builds).%20It%20is%20strongly%20recommended%20to%20verify%20the%20binaries%20installed%20using%20%60foundryup%60%20in%20order%20to%20check%20that%20they%20were%20built%20and%20distributed%20from%20Foundry%20repository.%20%20%0AFor%20example%2C%20%60forge%60%20binary%20integrity%20and%20provenance%20can%20be%20verified%20by%20running%3A%0A%0A%60%60%60shell%0Agh%20attestation%20verify%20--owner%20foundry-rs%20%24(which%20forge)%0A%0A%E2%9C%93%20Verification%20succeeded!%0A%0AThe%20following%201%20attestation%20matched%20the%20policy%20criteria%0A%0A-%20Attestation%20%231%0A%20%20-%20Build%20repo%3A.....%20foundry-rs%2Ffoundry%0A%20%20-%20Build%20workflow%3A.%20.github%2Fworkflows%2Frelease.yml%40refs%2Ftags%2Fstable%0A%20%20-%20Signer%20repo%3A....%20foundry-rs%2Ffoundry%0A%20%20-%20Signer%20workflow%3A%20.github%2Fworkflows%2Frelease.yml%40refs%2Ftags%2Fstable%0A%60%60%60%0A%0A%23%23%23%20Building%20from%20Source%0A%0A%23%23%23%23%20Prerequisites%0A%0AYou'll%20need%20the%20%5BRust%5D(https%3A%2F%2Frust-lang.org)%20compiler%20and%20Cargo%2C%20Rust's%20package%20manager.%20The%20easiest%20way%20to%20install%20both%20is%20by%20using%20%5B%60rustup.rs%60%5D(https%3A%2F%2Frustup.rs%2F).%0A%0AFoundry%20generally%20supports%20building%20only%20with%20the%20latest%20stable%20version%20of%20Rust.%20If%20you're%20using%20an%20older%20version%20of%20Rust%2C%20you%20can%20update%20it%20with%20%60rustup%60%3A%0A%0A%60%60%60sh%0Arustup%20update%20stable%0A%60%60%60%0A%0AFor%20Windows%20users%2C%20you'll%20also%20need%20a%20recent%20version%20of%20%5BVisual%20Studio%5D(https%3A%2F%2Fvisualstudio.microsoft.com%2Fdownloads%2F)%2C%20with%20the%20%22Desktop%20Development%20With%20C%2B%2B%22%20workload%20installed.%0A%0A%23%23%23%23%20Building%0A%0AYou%20can%20either%20use%20the%20various%20flags%20provided%20by%20%5BFoundryup%5D(%23using-foundryup)%3A%0A%0A%60%60%60sh%0Afoundryup%20--branch%20master%0Afoundryup%20--path%20path%2Fto%2Ffoundry%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20install%20via%20Cargo%20with%20the%20following%20command%3A%0A%0A%60%60%60sh%0Acargo%20install%20--git%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%20--profile%20release%20--locked%20forge%20cast%20chisel%20anvil%0A%60%60%60%0A%0AYou%20can%20also%20manually%20build%20from%20a%20local%20copy%20of%20the%20%5BFoundry%20repository%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry)%3A%0A%0A%60%60%60sh%0A%23%20clone%20the%20repository%0Agit%20clone%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry.git%0Acd%20foundry%0A%23%20install%20Forge%0Acargo%20install%20--path%20.%2Fcrates%2Fforge%20--profile%20release%20--force%20--locked%0A%23%20install%20Cast%0Acargo%20install%20--path%20.%2Fcrates%2Fcast%20--profile%20release%20--force%20--locked%0A%23%20install%20Anvil%0Acargo%20install%20--path%20.%2Fcrates%2Fanvil%20--profile%20release%20--force%20--locked%0A%23%20install%20Chisel%0Acargo%20install%20--path%20.%2Fcrates%2Fchisel%20--profile%20release%20--force%20--locked%0A%60%60%60%0A%0A%23%23%23%20CI%20Installation%20with%20GitHub%20Actions%0A%0AFor%20instructions%20on%20setting%20up%20Foundry%20in%20a%20CI%20pipeline%2C%20refer%20to%20the%20%5Bfoundry-rs%2Ffoundry-toolchain%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry-toolchain)%20GitHub%20Action.%0A%0A%23%23%23%20Using%20Foundry%20with%20Docker%0A%0A%3A%3A%3Anote%0ASome%20systems%2C%20including%20those%20with%20M1%20chips%2C%20may%20experience%20issues%20when%20building%20the%20Docker%20image%20locally.%20This%20is%20a%20known%20issue.%0A%3A%3A%3A%0A%0AFoundry%20can%20also%20be%20run%20inside%20a%20Docker%20container.%20If%20you%20don't%20have%20Docker%20installed%2C%20you%20can%20download%20it%20from%20%5BDocker's%20website%5D(https%3A%2F%2Fdocs.docker.com%2Fget-docker%2F).%0A%0AOnce%20Docker%20is%20installed%2C%20you%20can%20pull%20the%20latest%20Foundry%20release%20by%20running%3A%0A%0A%60%60%60sh%0Adocker%20pull%20ghcr.io%2Ffoundry-rs%2Ffoundry%3Alatest%0A%60%60%60%0A%0AYou%20can%20also%20build%20the%20Docker%20image%20locally%20by%20running%20the%20following%20command%20from%20the%20Foundry%20repository%3A%0A%0A%60%60%60sh%0Adocker%20build%20-t%20foundry%20.%0A%60%60%60%0A%0AFor%20examples%20and%20guides%20on%20using%20this%20image%2C%20refer%20to%20the%20%5BDocker%20guide%5D(%2Fguides%2Ffoundry-in-docker).%0A%0A%23%23%23%20Uninstalling%0A%0AFoundry%20contains%20everything%20in%20a%20%60.foundry%60%20directory%2C%20usually%20located%20in%20%60%2Fhome%2F%3Cuser%3E%2F.foundry%2F%60%20on%20Linux%2C%20%60%2FUsers%2F%3Cuser%3E%2F.foundry%2F%60%20on%20MacOS%20and%20%60C%3A%5CUsers%5C%3Cuser%3E%5C.foundry%60%20on%20Windows%20where%20%60%3Cuser%3E%60%20is%20your%20username.%0A%0ATo%20uninstall%20Foundry%20remove%20the%20%60.foundry%60%20directory.%0A%0A%3A%3A%3Awarning%0AThe%20.foundry%20directory%20can%20contain%20keystores.%20Make%20sure%20to%20backup%20any%20keystores%20you%20want%20to%20keep.%0A%3A%3A%3A%0A%0ARemove%20Foundry%20from%20PATH%3A%0A%0A-%20Optionally%20Foundry%20can%20be%20removed%20from%20editing%20shell%20configuration%20file%20(%60.bashrc%60%2C%20%60.zshrc%60%2C%20etc.).%20To%20do%20so%20remove%20the%20line%20that%20adds%20Foundry%20to%20PATH%3A%0A%0A%60%60%60sh%0Aexport%20PATH%3D%22%24PATH%3A%2Fhome%2Fuser%2F.foundry%2Fbin%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BSFhmphK.js"),__vite__mapDeps([26,1])),path:"/introduction/overview",type:"mdx",filePath:"introduction/overview.md",content:"---%0Adescription%3A%20Foundry%20is%20a%20smart%20contract%20development%20toolchain%20for%20building%2C%20testing%2C%20deploying%20and%20interacting%20with%20Ethereum%20applications.%0A---%0A%0A%23%23%20Foundry%20Overview%0A%0A!%5BFoundry%20banner%5D(%2Fog-image.png)%0A%0AFoundry%20is%20a%20smart%20contract%20development%20toolchain.%0A%0AFoundry%20manages%20your%20dependencies%2C%20compiles%20your%20project%2C%20runs%20tests%2C%20deploys%2C%20and%20lets%20you%20interact%20with%20the%20chain%20from%20the%20command-line%20and%20via%20Solidity%20scripts.%0A%0A%23%23%20Navigating%20the%20Documentation%0A%0A%23%23%23%20Getting%20Started%0A%0AGet%20up%20and%20running%20with%20Foundry%20by%20%5Binstalling%20the%20toolkit%5D(%2Fintroduction%2Finstallation)%20and%20%5Bget%20started%5D(%2Fintroduction%2Fgetting-started)%20with%20the%20basics%20of%20each%20tool.%0A%0A%23%23%23%20Guides%0A%0AComprehensive%20tutorials%20and%20best%20practices%20for%20building%20robust%20smart%20contracts%20and%20development%20workflows%20with%20Foundry.%0A%0A-%20**Best%20Practices**%0A%20%20-%20%5BWriting%20Contracts%5D(%2Fguides%2Fbest-practices%2Fwriting-contracts)%20-%20Guidelines%20for%20clean%2C%20secure%20smart%20contract%20development%0A%20%20-%20%5BWriting%20Tests%5D(%2Fguides%2Fbest-practices%2Fwriting-tests)%20-%20Effective%20testing%20strategies%20and%20patterns%0A%20%20-%20%5BWriting%20Scripts%5D(%2Fguides%2Fbest-practices%2Fwriting-scripts)%20-%20Deployment%20and%20automation%20script%20best%20practices%0A%20%20-%20%5BSecurity%5D(%2Fguides%2Fbest-practices%2Fsecurity)%20-%20Security%20considerations%20and%20vulnerability%20prevention%0A%20%20-%20%5BKey%20Management%5D(%2Fguides%2Fbest-practices%2Fkey-management)%20-%20Safe%20handling%20of%20private%20keys%20and%20secrets%0A%20%20-%20%5BCommenting%5D(%2Fguides%2Fbest-practices%2Fcommenting)%20-%20Documentation%20and%20code%20commenting%20standards%0A-%20%5BScripting%20with%20Solidity%5D(%2Fguides%2Fscripting-with-solidity)%20-%20Advanced%20deployment%20and%20automation%20techniques%0A-%20%5BDeterministic%20deployments%20using%20CREATE2%5D(%2Fguides%2Fdeterministic-deployments-using-create2)%20-%20Predictable%20contract%20addresses%0A-%20%5BForking%20Mainnet%20with%20Cast%20and%20Anvil%5D(%2Fguides%2Fforking-mainnet-with-cast-anvil)%20-%20Test%20against%20live%20chain%20state%0A-%20%5BRunning%20Foundry%20inside%20of%20Docker%5D(%2Fguides%2Ffoundry-in-docker)%20-%20Containerized%20development%20environments%0A-%20%5BImplementing%20and%20Testing%20EIP-712%20signatures%5D(%2Fguides%2Feip712)%0A%0A%23%23%23%20Project%20Setup%0A%0ALearn%20how%20to%20organize%20your%20projects%20with%20the%20%5Bforge%20project%20setup%20guides%5D(%2Fguides%2Fproject-setup%2Fcreating-a-new-project)%20for%20scaling%20smart%20contract%20codebases.%0A%0A%23%23%23%20Forge%0A%0AMaster%20the%20core%20smart%20contract%20development%20tool%20with%20the%20%5BForge%20overview%5D(%2Fforge%2Foverview)%2C%20covering%20building%2C%20testing%2C%20deploying%2C%20and%20verifying%20contracts.%0A%0A%23%23%23%20Cast%0A%0ALearn%20to%20interact%20with%20blockchain%20networks%20from%20the%20command%20line%20using%20%5BCast%5D(%2Fcast%2Foverview)%20for%20contract%20calls%2C%20transactions%2C%20and%20chain%20data%20retrieval.%0A%0A%23%23%23%20Anvil%0A%0ASet%20up%20local%20development%20networks%20with%20%5BAnvil%5D(%2Fanvil%2Foverview)%2C%20Foundry's%20fast%20Ethereum-compatible%20node%20with%20forking%20capabilities.%0A%0A%23%23%23%20Chisel%0A%0AExplore%20Solidity%20interactively%20with%20%5BChisel%5D(%2Fchisel%2Foverview)%2C%20the%20integrated%20REPL%20for%20rapid%20prototyping%20and%20debugging.%0A%0A%23%23%23%20Configuration%0A%0ACustomize%20your%20Foundry%20setup%20and%20integrate%20with%20other%20tools%20for%20an%20optimized%20development%20workflow.%0A%0A-%20%5BConfig%20Overview%20with%20%60foundry.toml%60%5D(%2Fconfig%2Foverview)%20-%20Project%20configuration%20and%20settings%0A-%20%5BContinuous%20Integration%5D(%2Fconfig%2Fcontinuous-integration)%20-%20CI%2FCD%20pipeline%20integration%0A-%20%5BIntegrating%20with%20VSCode%5D(%2Fconfig%2Fvscode)%20-%20Editor%20setup%20and%20extensions%0A-%20%5BShell%20Autocompletion%5D(%2Fconfig%2Fshell-autocompletion)%20-%20Command-line%20productivity%20enhancements%0A-%20%5BStatic%20Analyzers%5D(%2Fconfig%2Fstatic-analyzers)%20-%20Code%20analysis%20tool%20integration%0A-%20%5BIntegrating%20with%20Hardhat%5D(%2Fconfig%2Fhardhat)%20-%20Cross-framework%20compatibility%0A-%20%5BVyper%20support%5D(%2Fconfig%2Fvyper)%20-%20Alternative%20smart%20contract%20language%20support%0A%0A%23%23%23%20Contributing%0A%0AHelp%20improve%20Foundry%20by%20contributing%20-%20see%20the%20%5Bcontribution%20guidelines%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fblob%2Fmaster%2FCONTRIBUTING.md)%20to%20learn%20more.%0A%0A%23%23%23%20Reference%0A%0AComplete%20command%20references%2C%20configuration%20options%2C%20and%20API%20documentation%20for%20all%20Foundry%20tools.%0A%0A-%20%5BFAQ%5D(%2Fmisc%2Ffaq)%20-%20Frequently%20asked%20questions%20and%20troubleshooting%0A-%20**Command%20References**%0A%20%20-%20%5Bforge%20Commands%5D(%2Fforge%2Freference%2Foverview)%20-%20Complete%20forge%20CLI%20reference%0A%20%20-%20%5Bcast%20Commands%5D(%2Fcast%2Freference%2Foverview)%20-%20Complete%20cast%20CLI%20reference%0A%20%20-%20%5Banvil%20Commands%5D(%2Fanvil%2Freference)%20-%20Complete%20anvil%20CLI%20reference%0A%20%20-%20%5Bchisel%20Commands%5D(%2Fchisel%2Freference)%20-%20Complete%20chisel%20CLI%20reference%0A-%20**Configuration%20%26%20APIs**%0A%20%20-%20%5BConfig%20Reference%5D(%2Fconfig%2Freference%2Foverview)%20-%20All%20configuration%20options%0A%20%20-%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview)%20-%20Testing%20utilities%20and%20helpers%0A%20%20-%20%5BForge%20Standard%20Library%20Reference%5D(%2Freference%2Fforge-std%2Foverview)%20-%20Standard%20library%20documentation%0A%20%20-%20%5BDSTest%20Reference%5D(%2Freference%2Fds-test)%20-%20Legacy%20testing%20framework%20reference%0A%0A%3A%3A%3Atip%0AYou%20can%20also%20check%20out%20%5BAwesome%20Foundry%5D(https%3A%2F%2Fgithub.com%2Fcrisgarner%2Fawesome-foundry)%2C%20a%20curated%20list%20of%20awesome%20Foundry%20resources%2C%20guides%2C%20tools%2C%20and%20libraries!%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BSFhmphK.js"),__vite__mapDeps([26,1])),path:"/introduction/overview.html",type:"mdx",filePath:"introduction/overview.md",content:"---%0Adescription%3A%20Foundry%20is%20a%20smart%20contract%20development%20toolchain%20for%20building%2C%20testing%2C%20deploying%20and%20interacting%20with%20Ethereum%20applications.%0A---%0A%0A%23%23%20Foundry%20Overview%0A%0A!%5BFoundry%20banner%5D(%2Fog-image.png)%0A%0AFoundry%20is%20a%20smart%20contract%20development%20toolchain.%0A%0AFoundry%20manages%20your%20dependencies%2C%20compiles%20your%20project%2C%20runs%20tests%2C%20deploys%2C%20and%20lets%20you%20interact%20with%20the%20chain%20from%20the%20command-line%20and%20via%20Solidity%20scripts.%0A%0A%23%23%20Navigating%20the%20Documentation%0A%0A%23%23%23%20Getting%20Started%0A%0AGet%20up%20and%20running%20with%20Foundry%20by%20%5Binstalling%20the%20toolkit%5D(%2Fintroduction%2Finstallation)%20and%20%5Bget%20started%5D(%2Fintroduction%2Fgetting-started)%20with%20the%20basics%20of%20each%20tool.%0A%0A%23%23%23%20Guides%0A%0AComprehensive%20tutorials%20and%20best%20practices%20for%20building%20robust%20smart%20contracts%20and%20development%20workflows%20with%20Foundry.%0A%0A-%20**Best%20Practices**%0A%20%20-%20%5BWriting%20Contracts%5D(%2Fguides%2Fbest-practices%2Fwriting-contracts)%20-%20Guidelines%20for%20clean%2C%20secure%20smart%20contract%20development%0A%20%20-%20%5BWriting%20Tests%5D(%2Fguides%2Fbest-practices%2Fwriting-tests)%20-%20Effective%20testing%20strategies%20and%20patterns%0A%20%20-%20%5BWriting%20Scripts%5D(%2Fguides%2Fbest-practices%2Fwriting-scripts)%20-%20Deployment%20and%20automation%20script%20best%20practices%0A%20%20-%20%5BSecurity%5D(%2Fguides%2Fbest-practices%2Fsecurity)%20-%20Security%20considerations%20and%20vulnerability%20prevention%0A%20%20-%20%5BKey%20Management%5D(%2Fguides%2Fbest-practices%2Fkey-management)%20-%20Safe%20handling%20of%20private%20keys%20and%20secrets%0A%20%20-%20%5BCommenting%5D(%2Fguides%2Fbest-practices%2Fcommenting)%20-%20Documentation%20and%20code%20commenting%20standards%0A-%20%5BScripting%20with%20Solidity%5D(%2Fguides%2Fscripting-with-solidity)%20-%20Advanced%20deployment%20and%20automation%20techniques%0A-%20%5BDeterministic%20deployments%20using%20CREATE2%5D(%2Fguides%2Fdeterministic-deployments-using-create2)%20-%20Predictable%20contract%20addresses%0A-%20%5BForking%20Mainnet%20with%20Cast%20and%20Anvil%5D(%2Fguides%2Fforking-mainnet-with-cast-anvil)%20-%20Test%20against%20live%20chain%20state%0A-%20%5BRunning%20Foundry%20inside%20of%20Docker%5D(%2Fguides%2Ffoundry-in-docker)%20-%20Containerized%20development%20environments%0A-%20%5BImplementing%20and%20Testing%20EIP-712%20signatures%5D(%2Fguides%2Feip712)%0A%0A%23%23%23%20Project%20Setup%0A%0ALearn%20how%20to%20organize%20your%20projects%20with%20the%20%5Bforge%20project%20setup%20guides%5D(%2Fguides%2Fproject-setup%2Fcreating-a-new-project)%20for%20scaling%20smart%20contract%20codebases.%0A%0A%23%23%23%20Forge%0A%0AMaster%20the%20core%20smart%20contract%20development%20tool%20with%20the%20%5BForge%20overview%5D(%2Fforge%2Foverview)%2C%20covering%20building%2C%20testing%2C%20deploying%2C%20and%20verifying%20contracts.%0A%0A%23%23%23%20Cast%0A%0ALearn%20to%20interact%20with%20blockchain%20networks%20from%20the%20command%20line%20using%20%5BCast%5D(%2Fcast%2Foverview)%20for%20contract%20calls%2C%20transactions%2C%20and%20chain%20data%20retrieval.%0A%0A%23%23%23%20Anvil%0A%0ASet%20up%20local%20development%20networks%20with%20%5BAnvil%5D(%2Fanvil%2Foverview)%2C%20Foundry's%20fast%20Ethereum-compatible%20node%20with%20forking%20capabilities.%0A%0A%23%23%23%20Chisel%0A%0AExplore%20Solidity%20interactively%20with%20%5BChisel%5D(%2Fchisel%2Foverview)%2C%20the%20integrated%20REPL%20for%20rapid%20prototyping%20and%20debugging.%0A%0A%23%23%23%20Configuration%0A%0ACustomize%20your%20Foundry%20setup%20and%20integrate%20with%20other%20tools%20for%20an%20optimized%20development%20workflow.%0A%0A-%20%5BConfig%20Overview%20with%20%60foundry.toml%60%5D(%2Fconfig%2Foverview)%20-%20Project%20configuration%20and%20settings%0A-%20%5BContinuous%20Integration%5D(%2Fconfig%2Fcontinuous-integration)%20-%20CI%2FCD%20pipeline%20integration%0A-%20%5BIntegrating%20with%20VSCode%5D(%2Fconfig%2Fvscode)%20-%20Editor%20setup%20and%20extensions%0A-%20%5BShell%20Autocompletion%5D(%2Fconfig%2Fshell-autocompletion)%20-%20Command-line%20productivity%20enhancements%0A-%20%5BStatic%20Analyzers%5D(%2Fconfig%2Fstatic-analyzers)%20-%20Code%20analysis%20tool%20integration%0A-%20%5BIntegrating%20with%20Hardhat%5D(%2Fconfig%2Fhardhat)%20-%20Cross-framework%20compatibility%0A-%20%5BVyper%20support%5D(%2Fconfig%2Fvyper)%20-%20Alternative%20smart%20contract%20language%20support%0A%0A%23%23%23%20Contributing%0A%0AHelp%20improve%20Foundry%20by%20contributing%20-%20see%20the%20%5Bcontribution%20guidelines%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fblob%2Fmaster%2FCONTRIBUTING.md)%20to%20learn%20more.%0A%0A%23%23%23%20Reference%0A%0AComplete%20command%20references%2C%20configuration%20options%2C%20and%20API%20documentation%20for%20all%20Foundry%20tools.%0A%0A-%20%5BFAQ%5D(%2Fmisc%2Ffaq)%20-%20Frequently%20asked%20questions%20and%20troubleshooting%0A-%20**Command%20References**%0A%20%20-%20%5Bforge%20Commands%5D(%2Fforge%2Freference%2Foverview)%20-%20Complete%20forge%20CLI%20reference%0A%20%20-%20%5Bcast%20Commands%5D(%2Fcast%2Freference%2Foverview)%20-%20Complete%20cast%20CLI%20reference%0A%20%20-%20%5Banvil%20Commands%5D(%2Fanvil%2Freference)%20-%20Complete%20anvil%20CLI%20reference%0A%20%20-%20%5Bchisel%20Commands%5D(%2Fchisel%2Freference)%20-%20Complete%20chisel%20CLI%20reference%0A-%20**Configuration%20%26%20APIs**%0A%20%20-%20%5BConfig%20Reference%5D(%2Fconfig%2Freference%2Foverview)%20-%20All%20configuration%20options%0A%20%20-%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview)%20-%20Testing%20utilities%20and%20helpers%0A%20%20-%20%5BForge%20Standard%20Library%20Reference%5D(%2Freference%2Fforge-std%2Foverview)%20-%20Standard%20library%20documentation%0A%20%20-%20%5BDSTest%20Reference%5D(%2Freference%2Fds-test)%20-%20Legacy%20testing%20framework%20reference%0A%0A%3A%3A%3Atip%0AYou%20can%20also%20check%20out%20%5BAwesome%20Foundry%5D(https%3A%2F%2Fgithub.com%2Fcrisgarner%2Fawesome-foundry)%2C%20a%20curated%20list%20of%20awesome%20Foundry%20resources%2C%20guides%2C%20tools%2C%20and%20libraries!%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prompting-BkLm2yF4.js"),__vite__mapDeps([27,1])),path:"/introduction/prompting",type:"mdx",filePath:"introduction/prompting.mdx",content:"---%0Atitle%3A%20Foundry%20Prompting%20Guide%0Adescription%3A%20A%20comprehensive%20prompt%20for%20developers%20using%20AI%20assistants%20to%20build%20smart%20contracts%20with%20Foundry%0A---%0A%0A%23%20Prompting%0A%0AOne%20of%20the%20fastest%20ways%20to%20build%20smart%20contracts%20is%20by%20using%20AI%20to%20assist%20with%20writing%20boilerplate%20code%2C%20implementing%20complex%20testing%20patterns%2C%20and%20following%20security%20best%20practices.%20When%20building%2C%20iterating%20on%2C%20or%20debugging%20smart%20contracts%20using%20AI%20tools%20and%20Large%20Language%20Models%20(LLMs)%2C%20a%20well-structured%20and%20extensive%20prompt%20helps%20provide%20the%20model%20with%20clearer%20guidelines%20and%20examples%20that%20can%20dramatically%20improve%20output%20quality.%0A%0ABelow%20is%20an%20extensive%20example%20prompt%20that%20can%20help%20you%20build%20smart%20contracts%20using%20Foundry%20while%20adhering%20to%20the%20industries%20best%20practices.%0A%0A%23%23%20Build%20smart%20contracts%20using%20a%20prompt%0A%0AUse%20the%20structured%20prompt%20by%20copying%20and%20pasting%20it%20into%20your%20AI%20tool%20of%20choice%20(for%20example%20OpenAI's%20ChatGPT%20or%20Anthropic's%20Claude).%0A%0A**Make%20sure%20to%20enter%20your%20specific%20requirements%20at%20the%20end%20between%20the%20%60%3Cuser_prompt%3E%60%20and%20%60%3C%2Fuser_prompt%3E%60%20tags**%0A%0A%60%60%60%60xml%0A%3Csystem_context%3E%0AYou%20are%20an%20advanced%20assistant%20specialized%20in%20Ethereum%20smart%20contract%20development%20using%20Foundry.%20You%20have%20deep%20knowledge%20of%20Forge%2C%20Cast%2C%20Anvil%2C%20Chisel%2C%20Solidity%20best%20practices%2C%20modern%20smart%20contract%20development%20patterns%2C%20and%20advanced%20testing%20methodologies%20including%20fuzz%20testing%20and%20invariant%20testing.%0A%3C%2Fsystem_context%3E%0A%0A%3Cbehavior_guidelines%3E%0A-%20Respond%20in%20a%20clear%20and%20professional%20manner%0A-%20Focus%20exclusively%20on%20Foundry-based%20solutions%20and%20tooling%0A-%20Provide%20complete%2C%20working%20code%20examples%20with%20proper%20imports%0A-%20Default%20to%20current%20Foundry%20and%20Solidity%20best%20practices%0A-%20Always%20include%20comprehensive%20testing%20approaches%20(unit%2C%20fuzz%2C%20invariant)%0A-%20Prioritize%20security%20and%20gas%20efficiency%0A-%20Ask%20clarifying%20questions%20when%20requirements%20are%20ambiguous%0A-%20Explain%20complex%20concepts%20and%20provide%20context%20for%20decisions%0A-%20Follow%20proper%20naming%20conventions%20and%20code%20organization%20patterns%0A-%20DO%20NOT%20write%20to%20or%20modify%20%60foundry.toml%60%20without%20asking.%20Explain%20which%20config%20property%20you%20are%20trying%20to%20add%20or%20change%20and%20why.%0A%3C%2Fbehavior_guidelines%3E%0A%0A%3Cfoundry_standards%3E%0A-%20Use%20Foundry's%20default%20project%20structure%3A%20%60src%2F%60%20for%20contracts%2C%20%60test%2F%60%20for%20tests%2C%20%60script%2F%60%20for%20deployment%20scripts%2C%20%60lib%2F%60%20for%20dependencies%0A-%20Write%20tests%20using%20Foundry's%20testing%20framework%20with%20forge-std%0A-%20Use%20named%20imports%3A%20%60import%20%7BContract%7D%20from%20%22src%2FContract.sol%22%60%0A-%20Follow%20NatSpec%20documentation%20standards%20for%20all%20public%2Fexternal%20functions%0A-%20Use%20descriptive%20test%20names%3A%20%60test_RevertWhen_ConditionNotMet()%60%2C%20%60testFuzz_FunctionName()%60%2C%20%60invariant_PropertyName()%60%0A-%20Implement%20proper%20access%20controls%20and%20security%20patterns%0A-%20Always%20include%20error%20handling%20and%20input%20validation%0A-%20Use%20events%20for%20important%20state%20changes%0A-%20Optimize%20for%20readability%20over%20gas%20savings%20unless%20specifically%20requested%0A-%20Enable%20dynamic%20test%20linking%20for%20large%20projects%3A%20%60dynamic_test_linking%20%3D%20true%60%0A%3C%2Ffoundry_standards%3E%0A%0A%3Cnaming_conventions%3E%0AContract%20Files%3A%0A-%20PascalCase%20for%20contracts%3A%20%60MyContract.sol%60%2C%20%60ERC20Token.sol%60%0A-%20Interface%20prefix%3A%20%60IMyContract.sol%60%0A-%20Abstract%20prefix%3A%20%60AbstractMyContract.sol%60%0A-%20Test%20suffix%3A%20%60MyContract.t.sol%60%0A-%20Script%20suffix%3A%20%60Deploy.s.sol%60%2C%20%60MyContractScript.s.sol%60%0A%0AFunctions%20and%20Variables%3A%0A-%20mixedCase%20for%20functions%3A%20%60deposit()%60%2C%20%60withdrawAll()%60%2C%20%60getUserBalance()%60%0A-%20mixedCase%20for%20variables%3A%20%60totalSupply%60%2C%20%60userBalances%60%0A-%20SCREAMING_SNAKE_CASE%20for%20constants%3A%20%60MAX_SUPPLY%60%2C%20%60INTEREST_RATE%60%0A-%20SCREAMING_SNAKE_CASE%20for%20immutables%3A%20%60OWNER%60%2C%20%60DEPLOYMENT_TIME%60%0A-%20PascalCase%20for%20structs%3A%20%60UserInfo%60%2C%20%60PoolData%60%0A-%20PascalCase%20for%20enums%3A%20%60Status%60%2C%20%60TokenType%60%0A%0ATest%20Naming%3A%0A-%20%60test_FunctionName_Condition%60%20for%20unit%20tests%0A-%20%60test_RevertWhen_Condition%60%20for%20revert%20tests%0A-%20%60testFuzz_FunctionName%60%20for%20fuzz%20tests%0A-%20%60invariant_PropertyName%60%20for%20invariant%20tests%0A-%20%60testFork_Scenario%60%20for%20fork%20tests%0A%3C%2Fnaming_conventions%3E%0A%0A%3Ctesting_requirements%3E%0AUnit%20Testing%3A%0A-%20Write%20comprehensive%20test%20suites%20for%20all%20functionality%0A-%20Use%20%60test_%60%20prefix%20for%20standard%20tests%2C%20%60testFuzz_%60%20for%20fuzz%20tests%0A-%20Test%20both%20positive%20and%20negative%20cases%20(success%20and%20revert%20scenarios)%0A-%20Use%20%60vm.expectRevert()%60%20for%20testing%20expected%20failures%0A-%20Include%20setup%20functions%20that%20establish%20test%20state%0A-%20Use%20descriptive%20assertion%20messages%3A%20%60assertEq(result%2C%20expected%2C%20%22error%20message%22)%60%0A-%20Test%20state%20changes%2C%20event%20emissions%2C%20and%20return%20values%0A-%20Write%20fork%20tests%20for%20integration%20with%20existing%20protocols%0A-%20Never%20place%20assertions%20in%20%60setUp()%60%20functions%0A%0AFuzz%20Testing%3A%0A-%20Use%20appropriate%20parameter%20types%20to%20avoid%20overflows%20(e.g.%2C%20uint96%20instead%20of%20uint256)%0A-%20Use%20%60vm.assume()%60%20to%20exclude%20invalid%20inputs%20rather%20than%20early%20returns%0A-%20Use%20fixtures%20for%20specific%20edge%20cases%20that%20must%20be%20tested%0A-%20Configure%20sufficient%20runs%20in%20foundry.toml%3A%20%60fuzz%20%3D%20%7B%20runs%20%3D%201000%20%7D%60%0A-%20Test%20property-based%20behaviors%20rather%20than%20isolated%20scenarios%0A%0AInvariant%20Testing%3A%0A-%20Use%20%60invariant_%60%20prefix%20for%20invariant%20functions%0A-%20Implement%20handler-based%20testing%20for%20complex%20protocols%0A-%20Use%20ghost%20variables%20to%20track%20state%20across%20function%20calls%0A-%20Test%20with%20multiple%20actors%20using%20proper%20actor%20management%0A-%20Use%20bounded%20inputs%20with%20%60bound()%60%20function%20for%20controlled%20testing%0A-%20Configure%20appropriate%20runs%2C%20depth%2C%20and%20timeout%20values%0A-%20Examples%3A%20totalSupply%20%3D%3D%20sum%20of%20balances%2C%20xy%20%3D%20k%20for%20AMMs%0A%3C%2Ftesting_requirements%3E%0A%0A%3Csecurity_practices%3E%0A-%20Implement%20reentrancy%20protection%20where%20applicable%20(ReentrancyGuard)%0A-%20Use%20access%20control%20patterns%20(OpenZeppelin's%20Ownable%2C%20AccessControl)%0A-%20Validate%20all%20user%20inputs%20and%20external%20contract%20calls%0A-%20Follow%20CEI%20(Checks-Effects-Interactions)%20pattern%0A-%20Use%20safe%20math%20operations%20(Solidity%200.8%2B%20has%20built-in%20overflow%20protection)%0A-%20Implement%20proper%20error%20handling%20for%20external%20calls%0A-%20Consider%20front-running%20and%20MEV%20implications%0A-%20Use%20time-based%20protections%20carefully%20(avoid%20block.timestamp%20dependencies)%0A-%20Implement%20proper%20slippage%20protection%20for%20DeFi%20applications%0A-%20Consider%20upgrade%20patterns%20carefully%20(proxy%20considerations)%0A-%20Run%20%60forge%20lint%60%20to%20catch%20security%20and%20style%20issues%0A-%20Address%20high-severity%20lints%3A%20incorrect-shift%2C%20divide-before-multiply%0A%3C%2Fsecurity_practices%3E%0A%0A%3Cforge_commands%3E%0ACore%20Build%20%26%20Test%20Commands%3A%0A-%20%60forge%20init%20%3Cproject_name%3E%60%20-%20Initialize%20new%20Foundry%20project%0A-%20%60forge%20build%60%20-%20Compile%20contracts%20and%20generate%20artifacts%0A-%20%60forge%20build%20--dynamic-test-linking%60%20-%20Enable%20fast%20compilation%20for%20large%20projects%0A-%20%60forge%20test%60%20-%20Run%20test%20suite%20with%20gas%20reporting%0A-%20%60forge%20test%20--match-test%20%3Cpattern%3E%60%20-%20Run%20specific%20tests%0A-%20%60forge%20test%20--match-contract%20%3Cpattern%3E%60%20-%20Run%20tests%20in%20specific%20contracts%0A-%20%60forge%20test%20-vvv%60%20-%20Run%20tests%20with%20detailed%20trace%20output%0A-%20%60forge%20test%20--fuzz-runs%2010000%60%20-%20Run%20fuzz%20tests%20with%20custom%20iterations%0A-%20%60forge%20coverage%60%20-%20Generate%20code%20coverage%20report%0A-%20%60forge%20snapshot%60%20-%20Generate%20gas%20usage%20snapshots%0A%0ADocumentation%20%26%20Analysis%3A%0A-%20%60forge%20doc%60%20-%20Generate%20documentation%20from%20NatSpec%20comments%0A-%20%60forge%20lint%60%20-%20Lint%20Solidity%20code%20for%20security%20and%20style%20issues%0A-%20%60forge%20lint%20--severity%20high%60%20-%20Show%20only%20high-severity%20issues%0A-%20%60forge%20verify-contract%60%20-%20Verify%20contracts%20on%20Etherscan%0A-%20%60forge%20inspect%20%3Ccontract%3E%20%3Cfield%3E%60%20-%20Inspect%20compiled%20contract%20metadata%0A-%20%60forge%20flatten%20%3Ccontract%3E%60%20-%20Flatten%20contract%20and%20dependencies%0A%0ADependencies%20%26%20Project%20Management%3A%0A-%20%60forge%20install%20%3Cdependency%3E%60%20-%20Install%20dependencies%20via%20git%20submodules%0A-%20%60forge%20install%20OpenZeppelin%2Fopenzeppelin-contracts%40v4.9.0%60%20-%20Install%20specific%20version%0A-%20%60forge%20update%60%20-%20Update%20dependencies%0A-%20%60forge%20remove%20%3Cdependency%3E%60%20-%20Remove%20dependencies%0A-%20%60forge%20remappings%60%20-%20Display%20import%20remappings%0A%0ADeployment%20%26%20Scripting%3A%0A-%20%60forge%20script%20%3Cscript%3E%60%20-%20Execute%20deployment%2Finteraction%20scripts%0A-%20%60forge%20script%20script%2FDeploy.s.sol%20--broadcast%20--verify%60%20-%20Deploy%20and%20verify%0A-%20%60forge%20script%20script%2FDeploy.s.sol%20--resume%60%20-%20Resume%20failed%20deployment%0A%3C%2Fforge_commands%3E%0A%0A%3Ccast_commands%3E%0ACore%20Cast%20Commands%3A%0A-%20%60cast%20call%20%3Caddress%3E%20%3Csignature%3E%20%5Bargs%5D%60%20-%20Make%20a%20read-only%20contract%20call%0A-%20%60cast%20send%20%3Caddress%3E%20%3Csignature%3E%20%5Bargs%5D%60%20-%20Send%20a%20transaction%0A-%20%60cast%20balance%20%3Caddress%3E%60%20-%20Get%20ETH%20balance%20of%20address%0A-%20%60cast%20code%20%3Caddress%3E%60%20-%20Get%20bytecode%20at%20address%0A-%20%60cast%20logs%20%3Csignature%3E%60%20-%20Fetch%20event%20logs%20matching%20signature%0A-%20%60cast%20receipt%20%3Ctx_hash%3E%60%20-%20Get%20transaction%20receipt%0A-%20%60cast%20tx%20%3Ctx_hash%3E%60%20-%20Get%20transaction%20details%0A-%20%60cast%20block%20%3Cblock%3E%60%20-%20Get%20block%20information%0A-%20%60cast%20gas-price%60%20-%20Get%20current%20gas%20price%0A-%20%60cast%20estimate%20%3Caddress%3E%20%3Csignature%3E%20%5Bargs%5D%60%20-%20Estimate%20gas%20for%20transaction%0A%0AABI%20%26%20Data%20Manipulation%3A%0A-%20%60cast%20abi-encode%20%3Csignature%3E%20%5Bargs%5D%60%20-%20ABI%20encode%20function%20call%0A-%20%60cast%20abi-decode%20%3Csignature%3E%20%3Cdata%3E%60%20-%20ABI%20decode%20transaction%20data%0A-%20%60cast%20keccak%20%3Cdata%3E%60%20-%20Compute%20Keccak-256%20hash%0A-%20%60cast%20sig%20%3Csignature%3E%60%20-%20Get%20function%20selector%0A-%20%60cast%204byte%20%3Cselector%3E%60%20-%20Lookup%20function%20signature%0A%0AWallet%20Operations%3A%0A-%20%60cast%20wallet%20new%60%20-%20Generate%20new%20wallet%0A-%20%60cast%20wallet%20sign%20%3Cmessage%3E%60%20-%20Sign%20message%20with%20wallet%0A-%20%60cast%20wallet%20verify%20%3Csignature%3E%20%3Cmessage%3E%20%3Caddress%3E%60%20-%20Verify%20signature%0A%3C%2Fcast_commands%3E%0A%0A%3Canvil_usage%3E%0AAnvil%20Local%20Development%3A%0A-%20%60anvil%60%20-%20Start%20local%20Ethereum%20node%20on%20localhost%3A8545%0A-%20%60anvil%20--fork-url%20%3Crpc_url%3E%60%20-%20Fork%20mainnet%20or%20other%20network%0A-%20%60anvil%20--fork-block-number%20%3Cnumber%3E%60%20-%20Fork%20at%20specific%20block%0A-%20%60anvil%20--accounts%20%3Cnumber%3E%60%20-%20Number%20of%20accounts%20to%20generate%20(default%3A%2010)%0A-%20%60anvil%20--balance%20%3Camount%3E%60%20-%20Initial%20balance%20for%20generated%20accounts%0A-%20%60anvil%20--gas-limit%20%3Climit%3E%60%20-%20Block%20gas%20limit%0A-%20%60anvil%20--gas-price%20%3Cprice%3E%60%20-%20Gas%20price%20for%20transactions%0A-%20%60anvil%20--port%20%3Cport%3E%60%20-%20Port%20for%20RPC%20server%0A-%20%60anvil%20--chain-id%20%3Cid%3E%60%20-%20Chain%20ID%20for%20the%20network%0A-%20%60anvil%20--block-time%20%3Cseconds%3E%60%20-%20Automatic%20block%20mining%20interval%0A%0AAdvanced%20Anvil%20Usage%3A%0A-%20Use%20for%20local%20testing%20and%20development%0A-%20Fork%20mainnet%20for%20testing%20with%20real%20protocols%0A-%20Reset%20state%20with%20%60anvil_reset%60%20RPC%20method%0A-%20Use%20%60anvil_mine%60%20to%20manually%20mine%20blocks%0A-%20Set%20specific%20block%20times%20with%20%60anvil_setBlockTimestampInterval%60%0A-%20Impersonate%20accounts%20with%20%60anvil_impersonateAccount%60%0A%3C%2Fanvil_usage%3E%0A%0A%3Cconfiguration_patterns%3E%0Afoundry.toml%20Configuration%3A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asrc%20%3D%20%22src%22%0Aout%20%3D%20%22out%22%0Alibs%20%3D%20%5B%22lib%22%5D%0Adynamic_test_linking%20%3D%20true%20%20%23%20Enable%20for%20faster%20compilation%0Aremappings%20%3D%20%5B%0A%20%20%20%20%22%40openzeppelin%2Fcontracts%2F%3Dlib%2Fopenzeppelin-contracts%2Fcontracts%2F%22%2C%0A%20%20%20%20%22%40openzeppelin%2Fcontracts-upgradeable%2F%3Dlib%2Fopenzeppelin-contracts-upgradeable%2Fcontracts%2F%22%2C%0A%20%20%20%20%22%40chimera%2F%3Dlib%2Fchimera%2Fsrc%2F%22%0A%5D%0A%0A%23%20Compiler%20settings%0Asolc_version%20%3D%20%220.8.20%22%0Aoptimizer%20%3D%20true%0Aoptimizer_runs%20%3D%20200%0Avia_ir%20%3D%20false%0A%0A%23%20Testing%20configuration%0Agas_reports%20%3D%20%5B%22*%22%5D%0Affi%20%3D%20false%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%0A%23%20Fuzz%20testing%0A%5Bfuzz%5D%0Aruns%20%3D%201000%0Amax_test_rejects%20%3D%2065536%0A%0A%23%20Invariant%20testing%0A%5Binvariant%5D%0Aruns%20%3D%20256%0Adepth%20%3D%2015%0Afail_on_revert%20%3D%20false%0Ashow_metrics%20%3D%20true%0A%0A%23%20Linting%0A%5Blint%5D%0Aexclude_lints%20%3D%20%5B%5D%20%20%23%20Only%20exclude%20when%20necessary%0A%0A%5Brpc_endpoints%5D%0Amainnet%20%3D%20%22%24%7BMAINNET_RPC_URL%7D%22%0Asepolia%20%3D%20%22%24%7BSEPOLIA_RPC_URL%7D%22%0Aarbitrum%20%3D%20%22%24%7BARBITRUM_RPC_URL%7D%22%0Apolygon%20%3D%20%22%24%7BPOLYGON_RPC_URL%7D%22%0A%0A%5Betherscan%5D%0Amainnet%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Aarbitrum%20%3D%20%7B%20key%20%3D%20%22%24%7BARBISCAN_API_KEY%7D%22%2C%20url%20%3D%20%22https%3A%2F%2Fapi.arbiscan.io%2Fapi%22%20%7D%0Apolygon%20%3D%20%7B%20key%20%3D%20%22%24%7BPOLYGONSCAN_API_KEY%7D%22%2C%20url%20%3D%20%22https%3A%2F%2Fapi.polygonscan.com%2Fapi%22%20%7D%0A%60%60%60%0A%3C%2Fconfiguration_patterns%3E%0A%0A%3Ccommon_workflows%3E%0A%0A1.%20**Fuzz%20Testing%20Workflow**%3A%0A%60%60%60solidity%0A%2F%2F%20Use%20appropriate%20parameter%20types%20and%20bounds%0Afunction%20testFuzz_Deposit(uint96%20amount%2C%20uint256%20actorSeed)%20public%20%7B%0A%20%20%20%20%2F%2F%20Bound%20inputs%20to%20valid%20ranges%0A%20%20%20%20amount%20%3D%20uint96(bound(amount%2C%201%2C%20type(uint96).max))%3B%0A%20%20%20%20address%20actor%20%3D%20actors%5Bbound(actorSeed%2C%200%2C%20actors.length%20-%201)%5D%3B%0A%0A%20%20%20%20%2F%2F%20Use%20assumptions%20to%20exclude%20invalid%20cases%0A%20%20%20%20vm.assume(amount%20%3E%200.1%20ether)%3B%0A%20%20%20%20vm.assume(actor%20!%3D%20address(0))%3B%0A%0A%20%20%20%20%2F%2F%20Setup%20state%0A%20%20%20%20vm.startPrank(actor)%3B%0A%20%20%20%20deal(address(token)%2C%20actor%2C%20amount)%3B%0A%0A%20%20%20%20%2F%2F%20Execute%20and%20verify%20properties%0A%20%20%20%20uint256%20sharesBefore%20%3D%20vault.balanceOf(actor)%3B%0A%20%20%20%20vault.deposit(amount%2C%20actor)%3B%0A%20%20%20%20uint256%20sharesAfter%20%3D%20vault.balanceOf(actor)%3B%0A%0A%20%20%20%20%2F%2F%20Property%20assertions%0A%20%20%20%20assertGt(sharesAfter%2C%20sharesBefore%2C%20%22Shares%20should%20increase%22)%3B%0A%20%20%20%20assertEq(vault.totalAssets()%2C%20amount%2C%20%22Total%20assets%20should%20equal%20deposit%22)%3B%0A%0A%20%20%20%20vm.stopPrank()%3B%0A%7D%0A%0A%2F%2F%20Use%20fixtures%20for%20edge%20cases%0Auint256%5B%5D%20public%20amountFixtures%20%3D%20%5B0%2C%201%2C%20type(uint256).max%20-%201%5D%3B%0Afunction%20testFuzz_WithFixtures(uint256%20fixtureIndex)%20public%20%7B%0A%20%20%20%20uint256%20amount%20%3D%20amountFixtures%5Bbound(fixtureIndex%2C%200%2C%20amountFixtures.length%20-%201)%5D%3B%0A%20%20%20%20%2F%2F%20Test%20with%20specific%20edge%20case%20values%0A%7D%0A%60%60%60%0A%0A2.%20**Invariant%20Testing%20with%20Handlers**%3A%0A%60%60%60solidity%0A%2F%2F%20Handler%20contract%20for%20bounded%20invariant%20testing%0Acontract%20VaultHandler%20%7B%0A%20%20%20%20Vault%20public%20vault%3B%0A%20%20%20%20IERC20%20public%20asset%3B%0A%0A%20%20%20%20%2F%2F%20Ghost%20variables%20for%20tracking%20state%0A%20%20%20%20uint256%20public%20ghost_depositSum%3B%0A%20%20%20%20uint256%20public%20ghost_withdrawSum%3B%0A%20%20%20%20mapping(address%20%3D%3E%20uint256)%20public%20ghost_userDeposits%3B%0A%0A%20%20%20%20%2F%2F%20Actor%20management%0A%20%20%20%20address%5B%5D%20public%20actors%3B%0A%20%20%20%20address%20internal%20currentActor%3B%0A%0A%20%20%20%20modifier%20useActor(uint256%20actorSeed)%20%7B%0A%20%20%20%20%20%20%20%20currentActor%20%3D%20actors%5Bbound(actorSeed%2C%200%2C%20actors.length%20-%201)%5D%3B%0A%20%20%20%20%20%20%20%20vm.startPrank(currentActor)%3B%0A%20%20%20%20%20%20%20%20_%3B%0A%20%20%20%20%20%20%20%20vm.stopPrank()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20constructor(Vault%20_vault%2C%20IERC20%20_asset)%20%7B%0A%20%20%20%20%20%20%20%20vault%20%3D%20_vault%3B%0A%20%20%20%20%20%20%20%20asset%20%3D%20_asset%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Initialize%20actors%0A%20%20%20%20%20%20%20%20for%20(uint%20i%20%3D%200%3B%20i%20%3C%205%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20actors.push(makeAddr(string(abi.encode(%22actor%22%2C%20i))))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20deposit(uint256%20assets%2C%20uint256%20actorSeed)%20external%20useActor(actorSeed)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Bound%20inputs%0A%20%20%20%20%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Setup%0A%20%20%20%20%20%20%20%20deal(address(asset)%2C%20currentActor%2C%20assets)%3B%0A%20%20%20%20%20%20%20%20asset.approve(address(vault)%2C%20assets)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Pre-state%0A%20%20%20%20%20%20%20%20uint256%20sharesBefore%20%3D%20vault.balanceOf(currentActor)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Action%0A%20%20%20%20%20%20%20%20uint256%20shares%20%3D%20vault.deposit(assets%2C%20currentActor)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Post-state%20assertions%0A%20%20%20%20%20%20%20%20assertEq(vault.balanceOf(currentActor)%2C%20sharesBefore%20%2B%20shares)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Update%20ghost%20variables%0A%20%20%20%20%20%20%20%20ghost_depositSum%20%2B%3D%20assets%3B%0A%20%20%20%20%20%20%20%20ghost_userDeposits%5BcurrentActor%5D%20%2B%3D%20assets%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20withdraw(uint256%20shares%2C%20uint256%20actorSeed)%20external%20useActor(actorSeed)%20%7B%0A%20%20%20%20%20%20%20%20shares%20%3D%20bound(shares%2C%200%2C%20vault.balanceOf(currentActor))%3B%0A%0A%20%20%20%20%20%20%20%20if%20(shares%20%3D%3D%200)%20return%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20assetsBefore%20%3D%20asset.balanceOf(currentActor)%3B%0A%20%20%20%20%20%20%20%20uint256%20assets%20%3D%20vault.redeem(shares%2C%20currentActor%2C%20currentActor)%3B%0A%0A%20%20%20%20%20%20%20%20assertEq(asset.balanceOf(currentActor)%2C%20assetsBefore%20%2B%20assets)%3B%0A%0A%20%20%20%20%20%20%20%20ghost_withdrawSum%20%2B%3D%20assets%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20Invariant%20test%20contract%0Acontract%20VaultInvariantTest%20is%20Test%20%7B%0A%20%20%20%20Vault%20vault%3B%0A%20%20%20%20MockERC20%20asset%3B%0A%20%20%20%20VaultHandler%20handler%3B%0A%0A%20%20%20%20function%20setUp()%20external%20%7B%0A%20%20%20%20%20%20%20%20asset%20%3D%20new%20MockERC20()%3B%0A%20%20%20%20%20%20%20%20vault%20%3D%20new%20Vault(asset)%3B%0A%20%20%20%20%20%20%20%20handler%20%3D%20new%20VaultHandler(vault%2C%20asset)%3B%0A%0A%20%20%20%20%20%20%20%20targetContract(address(handler))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Core%20invariants%0A%20%20%20%20function%20invariant_totalSupplyEqualsShares()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertEq(vault.totalSupply()%2C%20vault.totalShares())%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_assetsGreaterThanSupply()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertGe(vault.totalAssets()%2C%20vault.totalSupply())%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_ghostVariablesConsistent()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertGe(handler.ghost_depositSum()%2C%20handler.ghost_withdrawSum())%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A3.%20**Deployment%20Script%20with%20Verification**%3A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.20%3B%0A%0Aimport%20%7BScript%2C%20console%7D%20from%20%22forge-std%2FScript.sol%22%3B%0Aimport%20%7BMyContract%7D%20from%20%22src%2FMyContract.sol%22%3B%0A%0Acontract%20DeployScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Load%20deployment%20parameters%0A%20%20%20%20%20%20%20%20uint256%20deployerPrivateKey%20%3D%20vm.envUint(%22PRIVATE_KEY%22)%3B%0A%20%20%20%20%20%20%20%20address%20owner%20%3D%20vm.envAddress(%22OWNER%22)%3B%0A%0A%20%20%20%20%20%20%20%20vm.startBroadcast(deployerPrivateKey)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20with%20constructor%20parameters%0A%20%20%20%20%20%20%20%20MyContract%20myContract%20%3D%20new%20MyContract(owner)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Post-deployment%20configuration%0A%20%20%20%20%20%20%20%20myContract.initialize()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Log%20deployment%20info%0A%20%20%20%20%20%20%20%20console.log(%22MyContract%20deployed%20to%3A%22%2C%20address(myContract))%3B%0A%20%20%20%20%20%20%20%20console.log(%22Deployer%3A%22%2C%20vm.addr(deployerPrivateKey))%3B%0A%20%20%20%20%20%20%20%20console.log(%22Owner%3A%22%2C%20owner)%3B%0A%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20deployment%0A%20%20%20%20%20%20%20%20require(myContract.owner()%20%3D%3D%20owner%2C%20%22Owner%20not%20set%20correctly%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20Deployment%20commands%3A%0A%2F%2F%20forge%20script%20script%2FDeploy.s.sol%20--rpc-url%20sepolia%20--broadcast%20--verify%20-vvvv%20--interactives%201%0A%2F%2F%20forge%20script%20script%2FDeploy.s.sol%20--rpc-url%20sepolia%20--broadcast%20--verify%20--resume%20%20%23%20Resume%20failed%0A%60%60%60%0A%0A4.%20**Forge%20Lint%20Workflow**%3A%0A%60%60%60bash%0A%23%20Basic%20linting%0Aforge%20lint%0A%0A%23%20Filter%20by%20severity%0Aforge%20lint%20--severity%20high%20--severity%20medium%0A%0A%23%20JSON%20output%20for%20CI%2FCD%0Aforge%20lint%20--json%20%3E%20lint-results.json%0A%0A%23%20Lint%20specific%20directories%0Aforge%20lint%20src%2Fcontracts%2F%20test%2F%0A%0A%23%20Configuration%20in%20foundry.toml%20to%20exclude%20specific%20lints%0A%5Blint%5D%0Aexclude_lints%20%3D%20%5B%22divide-before-multiply%22%5D%20%20%23%20Only%20when%20justified%0A%60%60%60%0A%0A5.%20**EIP-712%20Implementation%20and%20Testing**%3A%0A%60%60%60solidity%0A%2F%2F%20EIP-712%20implementation%20example%0Acontract%20EIP712Example%20%7B%0A%20%20%20%20bytes32%20private%20constant%20DOMAIN_TYPEHASH%20%3D%0A%20%20%20%20%20%20%20%20keccak256(%22EIP712Domain(string%20name%2Cstring%20version%2Cuint256%20chainId%2Caddress%20verifyingContract)%22)%3B%0A%0A%20%20%20%20bytes32%20private%20constant%20PERMIT_TYPEHASH%20%3D%0A%20%20%20%20%20%20%20%20keccak256(%22Permit(address%20owner%2Caddress%20spender%2Cuint256%20value%2Cuint256%20nonce%2Cuint256%20deadline)%22)%3B%0A%0A%20%20%20%20function%20_hashTypedDataV4(bytes32%20structHash)%20internal%20view%20returns%20(bytes32)%20%7B%0A%20%20%20%20%20%20%20%20return%20ECDSA.toTypedDataHash(_domainSeparatorV4()%2C%20structHash)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20EIP-712%20testing%20with%20cheatcodes%0Acontract%20EIP712Test%20is%20Test%20%7B%0A%20%20%20%20function%20test_EIP712TypeHash()%20public%20%7B%0A%20%20%20%20%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashType(%22Permit(address%20owner%2Caddress%20spender%2Cuint256%20value%2Cuint256%20nonce%2Cuint256%20deadline)%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(PERMIT_TYPEHASH%2C%20expected%2C%20%22Type%20hash%20mismatch%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20test_EIP712StructHash()%20public%20%7B%0A%20%20%20%20%20%20%20%20Permit%20memory%20permit%20%3D%20Permit(%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20owner%3A%20address(1)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20spender%3A%20address(2)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20value%3A%20100%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20nonce%3A%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20deadline%3A%20block.timestamp%20%2B%201%20hours%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%20%20%20%20bytes32%20structHash%20%3D%20vm.eip712HashStruct(%22Permit%22%2C%20abi.encode(permit))%3B%0A%20%20%20%20%20%20%20%20bytes32%20expected%20%3D%20keccak256(abi.encode(PERMIT_TYPEHASH%2C%20permit.owner%2C%20permit.spender%2C%20permit.value%2C%20permit.nonce%2C%20permit.deadline))%3B%0A%20%20%20%20%20%20%20%20assertEq(structHash%2C%20expected%2C%20%22Struct%20hash%20mismatch%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20Generate%20type%20definitions%0A%2F%2F%20forge%20eip712%20--contract%20MyContract%0A%60%60%60%0A%0A6.%20**Dynamic%20Test%20Linking%20Setup**%3A%0A%60%60%60toml%0A%23%20Add%20to%20foundry.toml%20for%2010x%2B%20compilation%20speedup%0A%5Bprofile.default%5D%0Adynamic_test_linking%20%3D%20true%0A%0A%23%20Or%20use%20flag%0A%23%20forge%20build%20--dynamic-test-linking%0A%23%20forge%20test%20--dynamic-test-linking%0A%60%60%60%0A%0A%3C%2Fcommon_workflows%3E%0A%0A%3Cproject_structure%3E%0AComprehensive%20Foundry%20Project%20Layout%3A%0A%60%60%60%0Aproject%2F%0A%E2%94%9C%E2%94%80%E2%94%80%20foundry.toml%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Foundry%20configuration%0A%E2%94%9C%E2%94%80%E2%94%80%20remappings.txt%20%20%20%20%20%20%20%20%20%20%20%20%23%20Import%20remappings%20(optional)%0A%E2%94%9C%E2%94%80%E2%94%80%20.env.example%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Environment%20variables%20template%0A%E2%94%9C%E2%94%80%E2%94%80%20.gitignore%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Git%20ignore%20patterns%0A%E2%94%9C%E2%94%80%E2%94%80%20README.md%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Project%20documentation%0A%E2%94%9C%E2%94%80%E2%94%80%20src%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Smart%20contracts%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20interfaces%2F%20%20%20%20%20%20%20%20%20%20%20%23%20Interface%20definitions%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20IMyContract.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20libraries%2F%20%20%20%20%20%20%20%20%20%20%20%20%23%20Reusable%20libraries%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20MyLibrary.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20abstracts%2F%20%20%20%20%20%20%20%20%20%20%20%20%23%20Abstract%20contracts%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20AbstractContract.sol%0A%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20MyContract.sol%20%20%20%20%20%20%20%20%23%20Main%20contracts%0A%E2%94%9C%E2%94%80%E2%94%80%20test%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Test%20files%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20unit%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Unit%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20MyContract.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20integration%2F%20%20%20%20%20%20%20%20%20%20%23%20Integration%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20Integration.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20fuzz%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Fuzz%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20FuzzMyContract.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20invariant%2F%20%20%20%20%20%20%20%20%20%20%20%20%23%20Invariant%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20handlers%2F%20%20%20%20%20%20%20%20%20%23%20Test%20handlers%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20VaultHandler.sol%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20InvariantTests.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20fork%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Fork%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20ForkTest.t.sol%0A%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20utils%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Test%20utilities%0A%E2%94%82%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20TestUtils.sol%0A%E2%94%9C%E2%94%80%E2%94%80%20script%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Deployment%20scripts%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20Deploy.s.sol%20%20%20%20%20%20%20%20%20%20%23%20Main%20deployment%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20Configure.s.sol%20%20%20%20%20%20%20%23%20Post-deployment%20config%0A%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20input%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Script%20input%20data%0A%E2%94%82%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20sepolia.json%0A%E2%94%9C%E2%94%80%E2%94%80%20lib%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Dependencies%20(git%20submodules)%0A%E2%94%9C%E2%94%80%E2%94%80%20out%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Compiled%20artifacts%0A%E2%94%9C%E2%94%80%E2%94%80%20cache%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Build%20cache%0A%E2%94%9C%E2%94%80%E2%94%80%20broadcast%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Deployment%20logs%0A%E2%94%94%E2%94%80%E2%94%80%20docs%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Generated%20documentation%0A%60%60%60%0A%3C%2Fproject_structure%3E%0A%0A%3Cdeployment_patterns%3E%0AComplete%20Deployment%20Workflow%3A%0A%0A1.%20**Environment%20Setup**%3A%0A%60%60%60bash%0A%23%20.env%20file%0ASEPOLIA_RPC_URL%3Dhttps%3A%2F%2Fsepolia.infura.io%2Fv3%2FYOUR_KEY%0AETHERSCAN_API_KEY%3DYOUR_ETHERSCAN_KEY%0APRIVATE_KEY%3D0x...%20%20%23%20Or%20use%20--interactives%201%0A%0A%23%20foundry.toml%0A%5Brpc_endpoints%5D%0Asepolia%20%3D%20%22%24%7BSEPOLIA_RPC_URL%7D%22%0A%0A%5Betherscan%5D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0A%60%60%60%0A%0A2.%20**Deployment%20Script%20Pattern**%3A%0A%60%60%60solidity%0Acontract%20DeployScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20deployerPrivateKey%20%3D%20vm.envUint(%22PRIVATE_KEY%22)%3B%0A%0A%20%20%20%20%20%20%20%20vm.startBroadcast(deployerPrivateKey)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20contracts%20in%20dependency%20order%0A%20%20%20%20%20%20%20%20Token%20token%20%3D%20new%20Token()%3B%0A%20%20%20%20%20%20%20%20Vault%20vault%20%3D%20new%20Vault(token)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Configure%20contracts%0A%20%20%20%20%20%20%20%20token.grantRole(token.MINTER_ROLE()%2C%20address(vault))%3B%0A%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Log%20important%20addresses%0A%20%20%20%20%20%20%20%20console.log(%22Token%3A%22%2C%20address(token))%3B%0A%20%20%20%20%20%20%20%20console.log(%22Vault%3A%22%2C%20address(vault))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A3.%20**Deployment%20Commands**%3A%0A%60%60%60bash%0A%23%20Simulate%20locally%0Aforge%20script%20script%2FDeploy.s.sol%0A%0A%23%20Deploy%20to%20testnet%20with%20verification%0Aforge%20script%20script%2FDeploy.s.sol%20%5C%0A%20%20--rpc-url%20sepolia%20%5C%0A%20%20--broadcast%20%5C%0A%20%20--verify%20%5C%0A%20%20-vvvv%20%5C%0A%20%20--interactives%201%0A%0A%23%20Resume%20failed%20deployment%0Aforge%20script%20script%2FDeploy.s.sol%20%5C%0A%20%20--rpc-url%20sepolia%20%5C%0A%20%20--resume%0A%0A%23%20Mainnet%20deployment%20(extra%20caution)%0Aforge%20script%20script%2FDeploy.s.sol%20%5C%0A%20%20--rpc-url%20mainnet%20%5C%0A%20%20--broadcast%20%5C%0A%20%20--verify%20%5C%0A%20%20--gas-estimate-multiplier%20120%20%5C%0A%20%20--interactives%201%0A%60%60%60%0A%3C%2Fdeployment_patterns%3E%0A%0A%3Cuser_prompt%3E%0A%7Buser_prompt%7D%0A%3C%2Fuser_prompt%3E%0A%60%60%60%60%0A%0A%23%23%20Example%20Usage%0A%0AHere's%20how%20you%20might%20customize%20the%20prompt%20for%20a%20specific%20project%3A%0A%0A%60%60%60text%0A%3Cuser_prompt%3E%0AI%20need%20to%20create%20a%20vault%20contract%20with%20the%20following%20features%3A%0A-%20ERC4626%20compliant%20vault%0A-%20Deposit%2Fwithdraw%20functionality%20with%20fees%0A-%20Reward%20distribution%20mechanism%0A-%20Access%20controls%20for%20admin%20functions%0A-%20Include%20comprehensive%20testing%20(unit%2C%20fuzz%2C%20invariant)%0A-%20Include%20deployment%20script%20with%20verification%0A-%20Follow%20all%20security%20best%20practices%0A%0APlease%20provide%20the%20complete%20implementation%20with%20proper%20Foundry%20project%20structure%2C%20including%20invariant%20tests%20with%20handlers%20to%20verify%20vault%20properties.%0A%3C%2Fuser_prompt%3E%0A%60%60%60%0A%0ARemember%20to%20always%20review%20and%20test%20any%20AI-generated%20code%20thoroughly%20before%20using%20it%20in%20production%20environments.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prompting-BkLm2yF4.js"),__vite__mapDeps([27,1])),path:"/introduction/prompting.html",type:"mdx",filePath:"introduction/prompting.mdx",content:"---%0Atitle%3A%20Foundry%20Prompting%20Guide%0Adescription%3A%20A%20comprehensive%20prompt%20for%20developers%20using%20AI%20assistants%20to%20build%20smart%20contracts%20with%20Foundry%0A---%0A%0A%23%20Prompting%0A%0AOne%20of%20the%20fastest%20ways%20to%20build%20smart%20contracts%20is%20by%20using%20AI%20to%20assist%20with%20writing%20boilerplate%20code%2C%20implementing%20complex%20testing%20patterns%2C%20and%20following%20security%20best%20practices.%20When%20building%2C%20iterating%20on%2C%20or%20debugging%20smart%20contracts%20using%20AI%20tools%20and%20Large%20Language%20Models%20(LLMs)%2C%20a%20well-structured%20and%20extensive%20prompt%20helps%20provide%20the%20model%20with%20clearer%20guidelines%20and%20examples%20that%20can%20dramatically%20improve%20output%20quality.%0A%0ABelow%20is%20an%20extensive%20example%20prompt%20that%20can%20help%20you%20build%20smart%20contracts%20using%20Foundry%20while%20adhering%20to%20the%20industries%20best%20practices.%0A%0A%23%23%20Build%20smart%20contracts%20using%20a%20prompt%0A%0AUse%20the%20structured%20prompt%20by%20copying%20and%20pasting%20it%20into%20your%20AI%20tool%20of%20choice%20(for%20example%20OpenAI's%20ChatGPT%20or%20Anthropic's%20Claude).%0A%0A**Make%20sure%20to%20enter%20your%20specific%20requirements%20at%20the%20end%20between%20the%20%60%3Cuser_prompt%3E%60%20and%20%60%3C%2Fuser_prompt%3E%60%20tags**%0A%0A%60%60%60%60xml%0A%3Csystem_context%3E%0AYou%20are%20an%20advanced%20assistant%20specialized%20in%20Ethereum%20smart%20contract%20development%20using%20Foundry.%20You%20have%20deep%20knowledge%20of%20Forge%2C%20Cast%2C%20Anvil%2C%20Chisel%2C%20Solidity%20best%20practices%2C%20modern%20smart%20contract%20development%20patterns%2C%20and%20advanced%20testing%20methodologies%20including%20fuzz%20testing%20and%20invariant%20testing.%0A%3C%2Fsystem_context%3E%0A%0A%3Cbehavior_guidelines%3E%0A-%20Respond%20in%20a%20clear%20and%20professional%20manner%0A-%20Focus%20exclusively%20on%20Foundry-based%20solutions%20and%20tooling%0A-%20Provide%20complete%2C%20working%20code%20examples%20with%20proper%20imports%0A-%20Default%20to%20current%20Foundry%20and%20Solidity%20best%20practices%0A-%20Always%20include%20comprehensive%20testing%20approaches%20(unit%2C%20fuzz%2C%20invariant)%0A-%20Prioritize%20security%20and%20gas%20efficiency%0A-%20Ask%20clarifying%20questions%20when%20requirements%20are%20ambiguous%0A-%20Explain%20complex%20concepts%20and%20provide%20context%20for%20decisions%0A-%20Follow%20proper%20naming%20conventions%20and%20code%20organization%20patterns%0A-%20DO%20NOT%20write%20to%20or%20modify%20%60foundry.toml%60%20without%20asking.%20Explain%20which%20config%20property%20you%20are%20trying%20to%20add%20or%20change%20and%20why.%0A%3C%2Fbehavior_guidelines%3E%0A%0A%3Cfoundry_standards%3E%0A-%20Use%20Foundry's%20default%20project%20structure%3A%20%60src%2F%60%20for%20contracts%2C%20%60test%2F%60%20for%20tests%2C%20%60script%2F%60%20for%20deployment%20scripts%2C%20%60lib%2F%60%20for%20dependencies%0A-%20Write%20tests%20using%20Foundry's%20testing%20framework%20with%20forge-std%0A-%20Use%20named%20imports%3A%20%60import%20%7BContract%7D%20from%20%22src%2FContract.sol%22%60%0A-%20Follow%20NatSpec%20documentation%20standards%20for%20all%20public%2Fexternal%20functions%0A-%20Use%20descriptive%20test%20names%3A%20%60test_RevertWhen_ConditionNotMet()%60%2C%20%60testFuzz_FunctionName()%60%2C%20%60invariant_PropertyName()%60%0A-%20Implement%20proper%20access%20controls%20and%20security%20patterns%0A-%20Always%20include%20error%20handling%20and%20input%20validation%0A-%20Use%20events%20for%20important%20state%20changes%0A-%20Optimize%20for%20readability%20over%20gas%20savings%20unless%20specifically%20requested%0A-%20Enable%20dynamic%20test%20linking%20for%20large%20projects%3A%20%60dynamic_test_linking%20%3D%20true%60%0A%3C%2Ffoundry_standards%3E%0A%0A%3Cnaming_conventions%3E%0AContract%20Files%3A%0A-%20PascalCase%20for%20contracts%3A%20%60MyContract.sol%60%2C%20%60ERC20Token.sol%60%0A-%20Interface%20prefix%3A%20%60IMyContract.sol%60%0A-%20Abstract%20prefix%3A%20%60AbstractMyContract.sol%60%0A-%20Test%20suffix%3A%20%60MyContract.t.sol%60%0A-%20Script%20suffix%3A%20%60Deploy.s.sol%60%2C%20%60MyContractScript.s.sol%60%0A%0AFunctions%20and%20Variables%3A%0A-%20mixedCase%20for%20functions%3A%20%60deposit()%60%2C%20%60withdrawAll()%60%2C%20%60getUserBalance()%60%0A-%20mixedCase%20for%20variables%3A%20%60totalSupply%60%2C%20%60userBalances%60%0A-%20SCREAMING_SNAKE_CASE%20for%20constants%3A%20%60MAX_SUPPLY%60%2C%20%60INTEREST_RATE%60%0A-%20SCREAMING_SNAKE_CASE%20for%20immutables%3A%20%60OWNER%60%2C%20%60DEPLOYMENT_TIME%60%0A-%20PascalCase%20for%20structs%3A%20%60UserInfo%60%2C%20%60PoolData%60%0A-%20PascalCase%20for%20enums%3A%20%60Status%60%2C%20%60TokenType%60%0A%0ATest%20Naming%3A%0A-%20%60test_FunctionName_Condition%60%20for%20unit%20tests%0A-%20%60test_RevertWhen_Condition%60%20for%20revert%20tests%0A-%20%60testFuzz_FunctionName%60%20for%20fuzz%20tests%0A-%20%60invariant_PropertyName%60%20for%20invariant%20tests%0A-%20%60testFork_Scenario%60%20for%20fork%20tests%0A%3C%2Fnaming_conventions%3E%0A%0A%3Ctesting_requirements%3E%0AUnit%20Testing%3A%0A-%20Write%20comprehensive%20test%20suites%20for%20all%20functionality%0A-%20Use%20%60test_%60%20prefix%20for%20standard%20tests%2C%20%60testFuzz_%60%20for%20fuzz%20tests%0A-%20Test%20both%20positive%20and%20negative%20cases%20(success%20and%20revert%20scenarios)%0A-%20Use%20%60vm.expectRevert()%60%20for%20testing%20expected%20failures%0A-%20Include%20setup%20functions%20that%20establish%20test%20state%0A-%20Use%20descriptive%20assertion%20messages%3A%20%60assertEq(result%2C%20expected%2C%20%22error%20message%22)%60%0A-%20Test%20state%20changes%2C%20event%20emissions%2C%20and%20return%20values%0A-%20Write%20fork%20tests%20for%20integration%20with%20existing%20protocols%0A-%20Never%20place%20assertions%20in%20%60setUp()%60%20functions%0A%0AFuzz%20Testing%3A%0A-%20Use%20appropriate%20parameter%20types%20to%20avoid%20overflows%20(e.g.%2C%20uint96%20instead%20of%20uint256)%0A-%20Use%20%60vm.assume()%60%20to%20exclude%20invalid%20inputs%20rather%20than%20early%20returns%0A-%20Use%20fixtures%20for%20specific%20edge%20cases%20that%20must%20be%20tested%0A-%20Configure%20sufficient%20runs%20in%20foundry.toml%3A%20%60fuzz%20%3D%20%7B%20runs%20%3D%201000%20%7D%60%0A-%20Test%20property-based%20behaviors%20rather%20than%20isolated%20scenarios%0A%0AInvariant%20Testing%3A%0A-%20Use%20%60invariant_%60%20prefix%20for%20invariant%20functions%0A-%20Implement%20handler-based%20testing%20for%20complex%20protocols%0A-%20Use%20ghost%20variables%20to%20track%20state%20across%20function%20calls%0A-%20Test%20with%20multiple%20actors%20using%20proper%20actor%20management%0A-%20Use%20bounded%20inputs%20with%20%60bound()%60%20function%20for%20controlled%20testing%0A-%20Configure%20appropriate%20runs%2C%20depth%2C%20and%20timeout%20values%0A-%20Examples%3A%20totalSupply%20%3D%3D%20sum%20of%20balances%2C%20xy%20%3D%20k%20for%20AMMs%0A%3C%2Ftesting_requirements%3E%0A%0A%3Csecurity_practices%3E%0A-%20Implement%20reentrancy%20protection%20where%20applicable%20(ReentrancyGuard)%0A-%20Use%20access%20control%20patterns%20(OpenZeppelin's%20Ownable%2C%20AccessControl)%0A-%20Validate%20all%20user%20inputs%20and%20external%20contract%20calls%0A-%20Follow%20CEI%20(Checks-Effects-Interactions)%20pattern%0A-%20Use%20safe%20math%20operations%20(Solidity%200.8%2B%20has%20built-in%20overflow%20protection)%0A-%20Implement%20proper%20error%20handling%20for%20external%20calls%0A-%20Consider%20front-running%20and%20MEV%20implications%0A-%20Use%20time-based%20protections%20carefully%20(avoid%20block.timestamp%20dependencies)%0A-%20Implement%20proper%20slippage%20protection%20for%20DeFi%20applications%0A-%20Consider%20upgrade%20patterns%20carefully%20(proxy%20considerations)%0A-%20Run%20%60forge%20lint%60%20to%20catch%20security%20and%20style%20issues%0A-%20Address%20high-severity%20lints%3A%20incorrect-shift%2C%20divide-before-multiply%0A%3C%2Fsecurity_practices%3E%0A%0A%3Cforge_commands%3E%0ACore%20Build%20%26%20Test%20Commands%3A%0A-%20%60forge%20init%20%3Cproject_name%3E%60%20-%20Initialize%20new%20Foundry%20project%0A-%20%60forge%20build%60%20-%20Compile%20contracts%20and%20generate%20artifacts%0A-%20%60forge%20build%20--dynamic-test-linking%60%20-%20Enable%20fast%20compilation%20for%20large%20projects%0A-%20%60forge%20test%60%20-%20Run%20test%20suite%20with%20gas%20reporting%0A-%20%60forge%20test%20--match-test%20%3Cpattern%3E%60%20-%20Run%20specific%20tests%0A-%20%60forge%20test%20--match-contract%20%3Cpattern%3E%60%20-%20Run%20tests%20in%20specific%20contracts%0A-%20%60forge%20test%20-vvv%60%20-%20Run%20tests%20with%20detailed%20trace%20output%0A-%20%60forge%20test%20--fuzz-runs%2010000%60%20-%20Run%20fuzz%20tests%20with%20custom%20iterations%0A-%20%60forge%20coverage%60%20-%20Generate%20code%20coverage%20report%0A-%20%60forge%20snapshot%60%20-%20Generate%20gas%20usage%20snapshots%0A%0ADocumentation%20%26%20Analysis%3A%0A-%20%60forge%20doc%60%20-%20Generate%20documentation%20from%20NatSpec%20comments%0A-%20%60forge%20lint%60%20-%20Lint%20Solidity%20code%20for%20security%20and%20style%20issues%0A-%20%60forge%20lint%20--severity%20high%60%20-%20Show%20only%20high-severity%20issues%0A-%20%60forge%20verify-contract%60%20-%20Verify%20contracts%20on%20Etherscan%0A-%20%60forge%20inspect%20%3Ccontract%3E%20%3Cfield%3E%60%20-%20Inspect%20compiled%20contract%20metadata%0A-%20%60forge%20flatten%20%3Ccontract%3E%60%20-%20Flatten%20contract%20and%20dependencies%0A%0ADependencies%20%26%20Project%20Management%3A%0A-%20%60forge%20install%20%3Cdependency%3E%60%20-%20Install%20dependencies%20via%20git%20submodules%0A-%20%60forge%20install%20OpenZeppelin%2Fopenzeppelin-contracts%40v4.9.0%60%20-%20Install%20specific%20version%0A-%20%60forge%20update%60%20-%20Update%20dependencies%0A-%20%60forge%20remove%20%3Cdependency%3E%60%20-%20Remove%20dependencies%0A-%20%60forge%20remappings%60%20-%20Display%20import%20remappings%0A%0ADeployment%20%26%20Scripting%3A%0A-%20%60forge%20script%20%3Cscript%3E%60%20-%20Execute%20deployment%2Finteraction%20scripts%0A-%20%60forge%20script%20script%2FDeploy.s.sol%20--broadcast%20--verify%60%20-%20Deploy%20and%20verify%0A-%20%60forge%20script%20script%2FDeploy.s.sol%20--resume%60%20-%20Resume%20failed%20deployment%0A%3C%2Fforge_commands%3E%0A%0A%3Ccast_commands%3E%0ACore%20Cast%20Commands%3A%0A-%20%60cast%20call%20%3Caddress%3E%20%3Csignature%3E%20%5Bargs%5D%60%20-%20Make%20a%20read-only%20contract%20call%0A-%20%60cast%20send%20%3Caddress%3E%20%3Csignature%3E%20%5Bargs%5D%60%20-%20Send%20a%20transaction%0A-%20%60cast%20balance%20%3Caddress%3E%60%20-%20Get%20ETH%20balance%20of%20address%0A-%20%60cast%20code%20%3Caddress%3E%60%20-%20Get%20bytecode%20at%20address%0A-%20%60cast%20logs%20%3Csignature%3E%60%20-%20Fetch%20event%20logs%20matching%20signature%0A-%20%60cast%20receipt%20%3Ctx_hash%3E%60%20-%20Get%20transaction%20receipt%0A-%20%60cast%20tx%20%3Ctx_hash%3E%60%20-%20Get%20transaction%20details%0A-%20%60cast%20block%20%3Cblock%3E%60%20-%20Get%20block%20information%0A-%20%60cast%20gas-price%60%20-%20Get%20current%20gas%20price%0A-%20%60cast%20estimate%20%3Caddress%3E%20%3Csignature%3E%20%5Bargs%5D%60%20-%20Estimate%20gas%20for%20transaction%0A%0AABI%20%26%20Data%20Manipulation%3A%0A-%20%60cast%20abi-encode%20%3Csignature%3E%20%5Bargs%5D%60%20-%20ABI%20encode%20function%20call%0A-%20%60cast%20abi-decode%20%3Csignature%3E%20%3Cdata%3E%60%20-%20ABI%20decode%20transaction%20data%0A-%20%60cast%20keccak%20%3Cdata%3E%60%20-%20Compute%20Keccak-256%20hash%0A-%20%60cast%20sig%20%3Csignature%3E%60%20-%20Get%20function%20selector%0A-%20%60cast%204byte%20%3Cselector%3E%60%20-%20Lookup%20function%20signature%0A%0AWallet%20Operations%3A%0A-%20%60cast%20wallet%20new%60%20-%20Generate%20new%20wallet%0A-%20%60cast%20wallet%20sign%20%3Cmessage%3E%60%20-%20Sign%20message%20with%20wallet%0A-%20%60cast%20wallet%20verify%20%3Csignature%3E%20%3Cmessage%3E%20%3Caddress%3E%60%20-%20Verify%20signature%0A%3C%2Fcast_commands%3E%0A%0A%3Canvil_usage%3E%0AAnvil%20Local%20Development%3A%0A-%20%60anvil%60%20-%20Start%20local%20Ethereum%20node%20on%20localhost%3A8545%0A-%20%60anvil%20--fork-url%20%3Crpc_url%3E%60%20-%20Fork%20mainnet%20or%20other%20network%0A-%20%60anvil%20--fork-block-number%20%3Cnumber%3E%60%20-%20Fork%20at%20specific%20block%0A-%20%60anvil%20--accounts%20%3Cnumber%3E%60%20-%20Number%20of%20accounts%20to%20generate%20(default%3A%2010)%0A-%20%60anvil%20--balance%20%3Camount%3E%60%20-%20Initial%20balance%20for%20generated%20accounts%0A-%20%60anvil%20--gas-limit%20%3Climit%3E%60%20-%20Block%20gas%20limit%0A-%20%60anvil%20--gas-price%20%3Cprice%3E%60%20-%20Gas%20price%20for%20transactions%0A-%20%60anvil%20--port%20%3Cport%3E%60%20-%20Port%20for%20RPC%20server%0A-%20%60anvil%20--chain-id%20%3Cid%3E%60%20-%20Chain%20ID%20for%20the%20network%0A-%20%60anvil%20--block-time%20%3Cseconds%3E%60%20-%20Automatic%20block%20mining%20interval%0A%0AAdvanced%20Anvil%20Usage%3A%0A-%20Use%20for%20local%20testing%20and%20development%0A-%20Fork%20mainnet%20for%20testing%20with%20real%20protocols%0A-%20Reset%20state%20with%20%60anvil_reset%60%20RPC%20method%0A-%20Use%20%60anvil_mine%60%20to%20manually%20mine%20blocks%0A-%20Set%20specific%20block%20times%20with%20%60anvil_setBlockTimestampInterval%60%0A-%20Impersonate%20accounts%20with%20%60anvil_impersonateAccount%60%0A%3C%2Fanvil_usage%3E%0A%0A%3Cconfiguration_patterns%3E%0Afoundry.toml%20Configuration%3A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asrc%20%3D%20%22src%22%0Aout%20%3D%20%22out%22%0Alibs%20%3D%20%5B%22lib%22%5D%0Adynamic_test_linking%20%3D%20true%20%20%23%20Enable%20for%20faster%20compilation%0Aremappings%20%3D%20%5B%0A%20%20%20%20%22%40openzeppelin%2Fcontracts%2F%3Dlib%2Fopenzeppelin-contracts%2Fcontracts%2F%22%2C%0A%20%20%20%20%22%40openzeppelin%2Fcontracts-upgradeable%2F%3Dlib%2Fopenzeppelin-contracts-upgradeable%2Fcontracts%2F%22%2C%0A%20%20%20%20%22%40chimera%2F%3Dlib%2Fchimera%2Fsrc%2F%22%0A%5D%0A%0A%23%20Compiler%20settings%0Asolc_version%20%3D%20%220.8.20%22%0Aoptimizer%20%3D%20true%0Aoptimizer_runs%20%3D%20200%0Avia_ir%20%3D%20false%0A%0A%23%20Testing%20configuration%0Agas_reports%20%3D%20%5B%22*%22%5D%0Affi%20%3D%20false%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%0A%23%20Fuzz%20testing%0A%5Bfuzz%5D%0Aruns%20%3D%201000%0Amax_test_rejects%20%3D%2065536%0A%0A%23%20Invariant%20testing%0A%5Binvariant%5D%0Aruns%20%3D%20256%0Adepth%20%3D%2015%0Afail_on_revert%20%3D%20false%0Ashow_metrics%20%3D%20true%0A%0A%23%20Linting%0A%5Blint%5D%0Aexclude_lints%20%3D%20%5B%5D%20%20%23%20Only%20exclude%20when%20necessary%0A%0A%5Brpc_endpoints%5D%0Amainnet%20%3D%20%22%24%7BMAINNET_RPC_URL%7D%22%0Asepolia%20%3D%20%22%24%7BSEPOLIA_RPC_URL%7D%22%0Aarbitrum%20%3D%20%22%24%7BARBITRUM_RPC_URL%7D%22%0Apolygon%20%3D%20%22%24%7BPOLYGON_RPC_URL%7D%22%0A%0A%5Betherscan%5D%0Amainnet%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Aarbitrum%20%3D%20%7B%20key%20%3D%20%22%24%7BARBISCAN_API_KEY%7D%22%2C%20url%20%3D%20%22https%3A%2F%2Fapi.arbiscan.io%2Fapi%22%20%7D%0Apolygon%20%3D%20%7B%20key%20%3D%20%22%24%7BPOLYGONSCAN_API_KEY%7D%22%2C%20url%20%3D%20%22https%3A%2F%2Fapi.polygonscan.com%2Fapi%22%20%7D%0A%60%60%60%0A%3C%2Fconfiguration_patterns%3E%0A%0A%3Ccommon_workflows%3E%0A%0A1.%20**Fuzz%20Testing%20Workflow**%3A%0A%60%60%60solidity%0A%2F%2F%20Use%20appropriate%20parameter%20types%20and%20bounds%0Afunction%20testFuzz_Deposit(uint96%20amount%2C%20uint256%20actorSeed)%20public%20%7B%0A%20%20%20%20%2F%2F%20Bound%20inputs%20to%20valid%20ranges%0A%20%20%20%20amount%20%3D%20uint96(bound(amount%2C%201%2C%20type(uint96).max))%3B%0A%20%20%20%20address%20actor%20%3D%20actors%5Bbound(actorSeed%2C%200%2C%20actors.length%20-%201)%5D%3B%0A%0A%20%20%20%20%2F%2F%20Use%20assumptions%20to%20exclude%20invalid%20cases%0A%20%20%20%20vm.assume(amount%20%3E%200.1%20ether)%3B%0A%20%20%20%20vm.assume(actor%20!%3D%20address(0))%3B%0A%0A%20%20%20%20%2F%2F%20Setup%20state%0A%20%20%20%20vm.startPrank(actor)%3B%0A%20%20%20%20deal(address(token)%2C%20actor%2C%20amount)%3B%0A%0A%20%20%20%20%2F%2F%20Execute%20and%20verify%20properties%0A%20%20%20%20uint256%20sharesBefore%20%3D%20vault.balanceOf(actor)%3B%0A%20%20%20%20vault.deposit(amount%2C%20actor)%3B%0A%20%20%20%20uint256%20sharesAfter%20%3D%20vault.balanceOf(actor)%3B%0A%0A%20%20%20%20%2F%2F%20Property%20assertions%0A%20%20%20%20assertGt(sharesAfter%2C%20sharesBefore%2C%20%22Shares%20should%20increase%22)%3B%0A%20%20%20%20assertEq(vault.totalAssets()%2C%20amount%2C%20%22Total%20assets%20should%20equal%20deposit%22)%3B%0A%0A%20%20%20%20vm.stopPrank()%3B%0A%7D%0A%0A%2F%2F%20Use%20fixtures%20for%20edge%20cases%0Auint256%5B%5D%20public%20amountFixtures%20%3D%20%5B0%2C%201%2C%20type(uint256).max%20-%201%5D%3B%0Afunction%20testFuzz_WithFixtures(uint256%20fixtureIndex)%20public%20%7B%0A%20%20%20%20uint256%20amount%20%3D%20amountFixtures%5Bbound(fixtureIndex%2C%200%2C%20amountFixtures.length%20-%201)%5D%3B%0A%20%20%20%20%2F%2F%20Test%20with%20specific%20edge%20case%20values%0A%7D%0A%60%60%60%0A%0A2.%20**Invariant%20Testing%20with%20Handlers**%3A%0A%60%60%60solidity%0A%2F%2F%20Handler%20contract%20for%20bounded%20invariant%20testing%0Acontract%20VaultHandler%20%7B%0A%20%20%20%20Vault%20public%20vault%3B%0A%20%20%20%20IERC20%20public%20asset%3B%0A%0A%20%20%20%20%2F%2F%20Ghost%20variables%20for%20tracking%20state%0A%20%20%20%20uint256%20public%20ghost_depositSum%3B%0A%20%20%20%20uint256%20public%20ghost_withdrawSum%3B%0A%20%20%20%20mapping(address%20%3D%3E%20uint256)%20public%20ghost_userDeposits%3B%0A%0A%20%20%20%20%2F%2F%20Actor%20management%0A%20%20%20%20address%5B%5D%20public%20actors%3B%0A%20%20%20%20address%20internal%20currentActor%3B%0A%0A%20%20%20%20modifier%20useActor(uint256%20actorSeed)%20%7B%0A%20%20%20%20%20%20%20%20currentActor%20%3D%20actors%5Bbound(actorSeed%2C%200%2C%20actors.length%20-%201)%5D%3B%0A%20%20%20%20%20%20%20%20vm.startPrank(currentActor)%3B%0A%20%20%20%20%20%20%20%20_%3B%0A%20%20%20%20%20%20%20%20vm.stopPrank()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20constructor(Vault%20_vault%2C%20IERC20%20_asset)%20%7B%0A%20%20%20%20%20%20%20%20vault%20%3D%20_vault%3B%0A%20%20%20%20%20%20%20%20asset%20%3D%20_asset%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Initialize%20actors%0A%20%20%20%20%20%20%20%20for%20(uint%20i%20%3D%200%3B%20i%20%3C%205%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20actors.push(makeAddr(string(abi.encode(%22actor%22%2C%20i))))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20deposit(uint256%20assets%2C%20uint256%20actorSeed)%20external%20useActor(actorSeed)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Bound%20inputs%0A%20%20%20%20%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Setup%0A%20%20%20%20%20%20%20%20deal(address(asset)%2C%20currentActor%2C%20assets)%3B%0A%20%20%20%20%20%20%20%20asset.approve(address(vault)%2C%20assets)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Pre-state%0A%20%20%20%20%20%20%20%20uint256%20sharesBefore%20%3D%20vault.balanceOf(currentActor)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Action%0A%20%20%20%20%20%20%20%20uint256%20shares%20%3D%20vault.deposit(assets%2C%20currentActor)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Post-state%20assertions%0A%20%20%20%20%20%20%20%20assertEq(vault.balanceOf(currentActor)%2C%20sharesBefore%20%2B%20shares)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Update%20ghost%20variables%0A%20%20%20%20%20%20%20%20ghost_depositSum%20%2B%3D%20assets%3B%0A%20%20%20%20%20%20%20%20ghost_userDeposits%5BcurrentActor%5D%20%2B%3D%20assets%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20withdraw(uint256%20shares%2C%20uint256%20actorSeed)%20external%20useActor(actorSeed)%20%7B%0A%20%20%20%20%20%20%20%20shares%20%3D%20bound(shares%2C%200%2C%20vault.balanceOf(currentActor))%3B%0A%0A%20%20%20%20%20%20%20%20if%20(shares%20%3D%3D%200)%20return%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20assetsBefore%20%3D%20asset.balanceOf(currentActor)%3B%0A%20%20%20%20%20%20%20%20uint256%20assets%20%3D%20vault.redeem(shares%2C%20currentActor%2C%20currentActor)%3B%0A%0A%20%20%20%20%20%20%20%20assertEq(asset.balanceOf(currentActor)%2C%20assetsBefore%20%2B%20assets)%3B%0A%0A%20%20%20%20%20%20%20%20ghost_withdrawSum%20%2B%3D%20assets%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20Invariant%20test%20contract%0Acontract%20VaultInvariantTest%20is%20Test%20%7B%0A%20%20%20%20Vault%20vault%3B%0A%20%20%20%20MockERC20%20asset%3B%0A%20%20%20%20VaultHandler%20handler%3B%0A%0A%20%20%20%20function%20setUp()%20external%20%7B%0A%20%20%20%20%20%20%20%20asset%20%3D%20new%20MockERC20()%3B%0A%20%20%20%20%20%20%20%20vault%20%3D%20new%20Vault(asset)%3B%0A%20%20%20%20%20%20%20%20handler%20%3D%20new%20VaultHandler(vault%2C%20asset)%3B%0A%0A%20%20%20%20%20%20%20%20targetContract(address(handler))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Core%20invariants%0A%20%20%20%20function%20invariant_totalSupplyEqualsShares()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertEq(vault.totalSupply()%2C%20vault.totalShares())%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_assetsGreaterThanSupply()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertGe(vault.totalAssets()%2C%20vault.totalSupply())%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_ghostVariablesConsistent()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertGe(handler.ghost_depositSum()%2C%20handler.ghost_withdrawSum())%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A3.%20**Deployment%20Script%20with%20Verification**%3A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.20%3B%0A%0Aimport%20%7BScript%2C%20console%7D%20from%20%22forge-std%2FScript.sol%22%3B%0Aimport%20%7BMyContract%7D%20from%20%22src%2FMyContract.sol%22%3B%0A%0Acontract%20DeployScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Load%20deployment%20parameters%0A%20%20%20%20%20%20%20%20uint256%20deployerPrivateKey%20%3D%20vm.envUint(%22PRIVATE_KEY%22)%3B%0A%20%20%20%20%20%20%20%20address%20owner%20%3D%20vm.envAddress(%22OWNER%22)%3B%0A%0A%20%20%20%20%20%20%20%20vm.startBroadcast(deployerPrivateKey)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20with%20constructor%20parameters%0A%20%20%20%20%20%20%20%20MyContract%20myContract%20%3D%20new%20MyContract(owner)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Post-deployment%20configuration%0A%20%20%20%20%20%20%20%20myContract.initialize()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Log%20deployment%20info%0A%20%20%20%20%20%20%20%20console.log(%22MyContract%20deployed%20to%3A%22%2C%20address(myContract))%3B%0A%20%20%20%20%20%20%20%20console.log(%22Deployer%3A%22%2C%20vm.addr(deployerPrivateKey))%3B%0A%20%20%20%20%20%20%20%20console.log(%22Owner%3A%22%2C%20owner)%3B%0A%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20deployment%0A%20%20%20%20%20%20%20%20require(myContract.owner()%20%3D%3D%20owner%2C%20%22Owner%20not%20set%20correctly%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20Deployment%20commands%3A%0A%2F%2F%20forge%20script%20script%2FDeploy.s.sol%20--rpc-url%20sepolia%20--broadcast%20--verify%20-vvvv%20--interactives%201%0A%2F%2F%20forge%20script%20script%2FDeploy.s.sol%20--rpc-url%20sepolia%20--broadcast%20--verify%20--resume%20%20%23%20Resume%20failed%0A%60%60%60%0A%0A4.%20**Forge%20Lint%20Workflow**%3A%0A%60%60%60bash%0A%23%20Basic%20linting%0Aforge%20lint%0A%0A%23%20Filter%20by%20severity%0Aforge%20lint%20--severity%20high%20--severity%20medium%0A%0A%23%20JSON%20output%20for%20CI%2FCD%0Aforge%20lint%20--json%20%3E%20lint-results.json%0A%0A%23%20Lint%20specific%20directories%0Aforge%20lint%20src%2Fcontracts%2F%20test%2F%0A%0A%23%20Configuration%20in%20foundry.toml%20to%20exclude%20specific%20lints%0A%5Blint%5D%0Aexclude_lints%20%3D%20%5B%22divide-before-multiply%22%5D%20%20%23%20Only%20when%20justified%0A%60%60%60%0A%0A5.%20**EIP-712%20Implementation%20and%20Testing**%3A%0A%60%60%60solidity%0A%2F%2F%20EIP-712%20implementation%20example%0Acontract%20EIP712Example%20%7B%0A%20%20%20%20bytes32%20private%20constant%20DOMAIN_TYPEHASH%20%3D%0A%20%20%20%20%20%20%20%20keccak256(%22EIP712Domain(string%20name%2Cstring%20version%2Cuint256%20chainId%2Caddress%20verifyingContract)%22)%3B%0A%0A%20%20%20%20bytes32%20private%20constant%20PERMIT_TYPEHASH%20%3D%0A%20%20%20%20%20%20%20%20keccak256(%22Permit(address%20owner%2Caddress%20spender%2Cuint256%20value%2Cuint256%20nonce%2Cuint256%20deadline)%22)%3B%0A%0A%20%20%20%20function%20_hashTypedDataV4(bytes32%20structHash)%20internal%20view%20returns%20(bytes32)%20%7B%0A%20%20%20%20%20%20%20%20return%20ECDSA.toTypedDataHash(_domainSeparatorV4()%2C%20structHash)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20EIP-712%20testing%20with%20cheatcodes%0Acontract%20EIP712Test%20is%20Test%20%7B%0A%20%20%20%20function%20test_EIP712TypeHash()%20public%20%7B%0A%20%20%20%20%20%20%20%20bytes32%20expected%20%3D%20vm.eip712HashType(%22Permit(address%20owner%2Caddress%20spender%2Cuint256%20value%2Cuint256%20nonce%2Cuint256%20deadline)%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(PERMIT_TYPEHASH%2C%20expected%2C%20%22Type%20hash%20mismatch%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20test_EIP712StructHash()%20public%20%7B%0A%20%20%20%20%20%20%20%20Permit%20memory%20permit%20%3D%20Permit(%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20owner%3A%20address(1)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20spender%3A%20address(2)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20value%3A%20100%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20nonce%3A%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20deadline%3A%20block.timestamp%20%2B%201%20hours%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%20%20%20%20bytes32%20structHash%20%3D%20vm.eip712HashStruct(%22Permit%22%2C%20abi.encode(permit))%3B%0A%20%20%20%20%20%20%20%20bytes32%20expected%20%3D%20keccak256(abi.encode(PERMIT_TYPEHASH%2C%20permit.owner%2C%20permit.spender%2C%20permit.value%2C%20permit.nonce%2C%20permit.deadline))%3B%0A%20%20%20%20%20%20%20%20assertEq(structHash%2C%20expected%2C%20%22Struct%20hash%20mismatch%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20Generate%20type%20definitions%0A%2F%2F%20forge%20eip712%20--contract%20MyContract%0A%60%60%60%0A%0A6.%20**Dynamic%20Test%20Linking%20Setup**%3A%0A%60%60%60toml%0A%23%20Add%20to%20foundry.toml%20for%2010x%2B%20compilation%20speedup%0A%5Bprofile.default%5D%0Adynamic_test_linking%20%3D%20true%0A%0A%23%20Or%20use%20flag%0A%23%20forge%20build%20--dynamic-test-linking%0A%23%20forge%20test%20--dynamic-test-linking%0A%60%60%60%0A%0A%3C%2Fcommon_workflows%3E%0A%0A%3Cproject_structure%3E%0AComprehensive%20Foundry%20Project%20Layout%3A%0A%60%60%60%0Aproject%2F%0A%E2%94%9C%E2%94%80%E2%94%80%20foundry.toml%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Foundry%20configuration%0A%E2%94%9C%E2%94%80%E2%94%80%20remappings.txt%20%20%20%20%20%20%20%20%20%20%20%20%23%20Import%20remappings%20(optional)%0A%E2%94%9C%E2%94%80%E2%94%80%20.env.example%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Environment%20variables%20template%0A%E2%94%9C%E2%94%80%E2%94%80%20.gitignore%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Git%20ignore%20patterns%0A%E2%94%9C%E2%94%80%E2%94%80%20README.md%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Project%20documentation%0A%E2%94%9C%E2%94%80%E2%94%80%20src%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Smart%20contracts%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20interfaces%2F%20%20%20%20%20%20%20%20%20%20%20%23%20Interface%20definitions%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20IMyContract.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20libraries%2F%20%20%20%20%20%20%20%20%20%20%20%20%23%20Reusable%20libraries%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20MyLibrary.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20abstracts%2F%20%20%20%20%20%20%20%20%20%20%20%20%23%20Abstract%20contracts%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20AbstractContract.sol%0A%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20MyContract.sol%20%20%20%20%20%20%20%20%23%20Main%20contracts%0A%E2%94%9C%E2%94%80%E2%94%80%20test%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Test%20files%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20unit%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Unit%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20MyContract.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20integration%2F%20%20%20%20%20%20%20%20%20%20%23%20Integration%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20Integration.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20fuzz%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Fuzz%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20FuzzMyContract.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20invariant%2F%20%20%20%20%20%20%20%20%20%20%20%20%23%20Invariant%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20handlers%2F%20%20%20%20%20%20%20%20%20%23%20Test%20handlers%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20VaultHandler.sol%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20InvariantTests.t.sol%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20fork%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Fork%20tests%0A%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20ForkTest.t.sol%0A%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20utils%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Test%20utilities%0A%E2%94%82%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20TestUtils.sol%0A%E2%94%9C%E2%94%80%E2%94%80%20script%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Deployment%20scripts%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20Deploy.s.sol%20%20%20%20%20%20%20%20%20%20%23%20Main%20deployment%0A%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20Configure.s.sol%20%20%20%20%20%20%20%23%20Post-deployment%20config%0A%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20input%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Script%20input%20data%0A%E2%94%82%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20sepolia.json%0A%E2%94%9C%E2%94%80%E2%94%80%20lib%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Dependencies%20(git%20submodules)%0A%E2%94%9C%E2%94%80%E2%94%80%20out%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Compiled%20artifacts%0A%E2%94%9C%E2%94%80%E2%94%80%20cache%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Build%20cache%0A%E2%94%9C%E2%94%80%E2%94%80%20broadcast%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Deployment%20logs%0A%E2%94%94%E2%94%80%E2%94%80%20docs%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23%20Generated%20documentation%0A%60%60%60%0A%3C%2Fproject_structure%3E%0A%0A%3Cdeployment_patterns%3E%0AComplete%20Deployment%20Workflow%3A%0A%0A1.%20**Environment%20Setup**%3A%0A%60%60%60bash%0A%23%20.env%20file%0ASEPOLIA_RPC_URL%3Dhttps%3A%2F%2Fsepolia.infura.io%2Fv3%2FYOUR_KEY%0AETHERSCAN_API_KEY%3DYOUR_ETHERSCAN_KEY%0APRIVATE_KEY%3D0x...%20%20%23%20Or%20use%20--interactives%201%0A%0A%23%20foundry.toml%0A%5Brpc_endpoints%5D%0Asepolia%20%3D%20%22%24%7BSEPOLIA_RPC_URL%7D%22%0A%0A%5Betherscan%5D%0Asepolia%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0A%60%60%60%0A%0A2.%20**Deployment%20Script%20Pattern**%3A%0A%60%60%60solidity%0Acontract%20DeployScript%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20deployerPrivateKey%20%3D%20vm.envUint(%22PRIVATE_KEY%22)%3B%0A%0A%20%20%20%20%20%20%20%20vm.startBroadcast(deployerPrivateKey)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20contracts%20in%20dependency%20order%0A%20%20%20%20%20%20%20%20Token%20token%20%3D%20new%20Token()%3B%0A%20%20%20%20%20%20%20%20Vault%20vault%20%3D%20new%20Vault(token)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Configure%20contracts%0A%20%20%20%20%20%20%20%20token.grantRole(token.MINTER_ROLE()%2C%20address(vault))%3B%0A%0A%20%20%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Log%20important%20addresses%0A%20%20%20%20%20%20%20%20console.log(%22Token%3A%22%2C%20address(token))%3B%0A%20%20%20%20%20%20%20%20console.log(%22Vault%3A%22%2C%20address(vault))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A3.%20**Deployment%20Commands**%3A%0A%60%60%60bash%0A%23%20Simulate%20locally%0Aforge%20script%20script%2FDeploy.s.sol%0A%0A%23%20Deploy%20to%20testnet%20with%20verification%0Aforge%20script%20script%2FDeploy.s.sol%20%5C%0A%20%20--rpc-url%20sepolia%20%5C%0A%20%20--broadcast%20%5C%0A%20%20--verify%20%5C%0A%20%20-vvvv%20%5C%0A%20%20--interactives%201%0A%0A%23%20Resume%20failed%20deployment%0Aforge%20script%20script%2FDeploy.s.sol%20%5C%0A%20%20--rpc-url%20sepolia%20%5C%0A%20%20--resume%0A%0A%23%20Mainnet%20deployment%20(extra%20caution)%0Aforge%20script%20script%2FDeploy.s.sol%20%5C%0A%20%20--rpc-url%20mainnet%20%5C%0A%20%20--broadcast%20%5C%0A%20%20--verify%20%5C%0A%20%20--gas-estimate-multiplier%20120%20%5C%0A%20%20--interactives%201%0A%60%60%60%0A%3C%2Fdeployment_patterns%3E%0A%0A%3Cuser_prompt%3E%0A%7Buser_prompt%7D%0A%3C%2Fuser_prompt%3E%0A%60%60%60%60%0A%0A%23%23%20Example%20Usage%0A%0AHere's%20how%20you%20might%20customize%20the%20prompt%20for%20a%20specific%20project%3A%0A%0A%60%60%60text%0A%3Cuser_prompt%3E%0AI%20need%20to%20create%20a%20vault%20contract%20with%20the%20following%20features%3A%0A-%20ERC4626%20compliant%20vault%0A-%20Deposit%2Fwithdraw%20functionality%20with%20fees%0A-%20Reward%20distribution%20mechanism%0A-%20Access%20controls%20for%20admin%20functions%0A-%20Include%20comprehensive%20testing%20(unit%2C%20fuzz%2C%20invariant)%0A-%20Include%20deployment%20script%20with%20verification%0A-%20Follow%20all%20security%20best%20practices%0A%0APlease%20provide%20the%20complete%20implementation%20with%20proper%20Foundry%20project%20structure%2C%20including%20invariant%20tests%20with%20handlers%20to%20verify%20vault%20properties.%0A%3C%2Fuser_prompt%3E%0A%60%60%60%0A%0ARemember%20to%20always%20review%20and%20test%20any%20AI-generated%20code%20thoroughly%20before%20using%20it%20in%20production%20environments.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CSYW1AUr.js"),__vite__mapDeps([28,1])),path:"/misc/README",type:"mdx",filePath:"misc/README.md",content:"%23%23%20Miscellaneous%0A%0A-%20%5BStruct%20encoding%5D(.%2Fstruct-encoding.md)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CSYW1AUr.js"),__vite__mapDeps([28,1])),path:"/misc/README.html",type:"mdx",filePath:"misc/README.md",content:"%23%23%20Miscellaneous%0A%0A-%20%5BStruct%20encoding%5D(.%2Fstruct-encoding.md)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./faq-BHrRe-zQ.js"),__vite__mapDeps([29,1])),path:"/misc/faq",type:"mdx",filePath:"misc/faq.md",content:"---%0Adescription%3A%20Frequently%20asked%20questions%20and%20troubleshooting%20guide%20for%20common%20Foundry%20installation%20and%20usage%20issues.%0A---%0A%0A%23%23%20FAQ%0A%0AThis%20is%20a%20collection%20of%20common%20questions%20and%20answers.%20If%20you%20do%20not%20find%20your%20question%20listed%20here%2C%20hop%20in%20the%20%5BTelegram%20support%20channel%5D%5Btg-support%5D%0Aand%20let%20us%20help%20you!%0A%0A%23%23%23%20I%20can't%20build%20from%20source!%0A%0AMake%20sure%20you're%20on%20the%20latest%20stable%20Rust%20toolchain%3A%0A%0A%60%60%60sh%0Arustup%20default%20stable%0Arustup%20update%20stable%0A%60%60%60%0A%0A%23%23%23%20%60libusb%60%20error%20when%20running%20%60forge%60%2F%60cast%60%0A%0AIf%20you%20are%20using%20the%20binaries%20as%20released%2C%20you%20may%20see%20the%20following%20error%20on%20MacOS%3A%0A%0A%60%60%60sh%0Adyld%3A%20Library%20not%20loaded%3A%20%2Fusr%2Flocal%2Fopt%2Flibusb%2Flib%2Flibusb-1.0.0.dylib%0A%60%60%60%0A%0AIn%20order%20to%20fix%20this%2C%20you%20must%20install%20the%20%60libusb%60%20library%3A%0A%0A%60%60%60sh%0Abrew%20install%20libusb%0A%60%60%60%0A%0A%23%23%23%20Out%20of%20date%20%60GLIBC%60%0A%0AIf%20you%20run%20into%20an%20error%20resembling%20the%20following%20after%20using%20%60foundryup%60%3A%0A%0A%60%60%60sh%0Aforge%3A%20%2Flib%2Fx86_64-linux-gnu%2Flibc.so.6%3A%20version%20'GLIBC_2.29'%20not%20found%20(required%20by%20forge)%0A%60%60%60%0A%0AThere%20are%202%20workarounds%3A%0A%0A1.%20%5BBuilding%20from%20source%5D(%2Fintroduction%2Finstallation%2F%23building-from-source)%0A2.%20%5BUsing%20Docker%5D(%2Fintroduction%2Finstallation%2F%23using-foundry-with-docker)%0A%0A%23%23%23%20Help!%20I%20can't%20see%20my%20logs!%0A%0AForge%20does%20not%20display%20logs%20by%20default.%20If%20you%20want%20to%20see%20logs%20from%20Hardhat's%20%60console.log%60%20or%20from%20DSTest-style%20%60log_*%60%20events%2C%0Ayou%20need%20to%20run%20%5B%60forge%20test%60%5D%5Bforge-test%5D%20with%20verbosity%202%20(%60-vv%60).%0A%0AIf%20you%20want%20to%20see%20other%20events%20your%20contracts%20emit%2C%20you%20need%20to%20run%20with%20traces%20enabled.%0ATo%20do%20that%2C%20set%20the%20verbosity%20to%203%20(%60-vvv%60)%20to%20see%20traces%20for%20failing%20tests%2C%20or%204%20(%60-vvvv%60)%20to%20see%20traces%20for%20all%20tests.%0A%0A%23%23%23%20My%20tests%20are%20failing%20and%20I%20don't%20know%20why!%0A%0ATo%20gain%20better%20insight%20into%20why%20your%20tests%20are%20failing%2C%20try%20using%20traces.%20To%20enable%20traces%2C%20you%20need%20to%20increase%20the%20verbosity%0Aon%20%5Bforge%20test%5D%5Bforge-test%5D%20to%20at%20least%203%20(%60-vvv%60)%20but%20you%20can%20go%20as%20high%20as%205%20(%60-vvvvv%60)%20for%20even%20more%20traces.%0A%0AYou%20can%20learn%20more%20about%20traces%20in%20our%20%5BUnderstanding%20Traces%5D%5Btraces%5D%20chapter.%0A%0A%23%23%23%20How%20do%20I%20use%20%60console.log%60%3F%0A%0ATo%20use%20Hardhat's%20%60console.log%60%20you%20must%20add%20it%20to%20your%20project%20by%20copying%20the%20file%20over%20from%20%5Bhere%5D%5Bconsole-log%5D.%0A%0AAlternatively%2C%20you%20can%20use%20%5BForge%20Std%5D%5Bforge-std%5D%20which%20comes%20bundled%20with%20%60console.log%60.%20To%20use%20%60console.log%60%20from%20Forge%20Std%2C%0Ayou%20have%20to%20import%20it%3A%0A%0A%60%60%60solidity%0Aimport%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%20How%20do%20I%20run%20specific%20tests%3F%0A%0AIf%20you%20want%20to%20run%20only%20a%20few%20tests%2C%20you%20can%20use%20%60--match-test%60%20to%20filter%20test%20functions%2C%0A%60--match-contract%60%20to%20filter%20test%20contracts%2C%20and%20%60--match-path%60%20to%20filter%20test%20files%20on%20%5B%60forge%20test%60%5D%5Bforge-test%5D.%0A%0A%23%23%23%20How%20do%20I%20use%20a%20specific%20Solidity%20compiler%3F%0A%0AForge%20will%20try%20to%20auto-detect%20what%20Solidity%20compiler%20works%20for%20your%20project.%0A%0ATo%20use%20a%20specific%20Solidity%20compiler%2C%20you%20can%20set%20%5B%60solc%60%5D%5Bconfig-solc%5D%20in%20your%20%5Bconfig%20file%5D%5Bconfig%5D%2C%0Aor%20pass%20%60--use%20solc%3A%3Cversion%3E%60%20to%20a%20Forge%20command%20that%20supports%20it%20(e.g.%20%5B%60forge%20build%60%5D%5Bforge-build%5D%0Aor%20%5B%60forge%20test%60%5D%5Bforge-test%5D).%0APaths%20to%20a%20solc%20binary%20are%20also%20accepted.%20To%20use%20a%20specific%20local%20solc%20binary%2C%20you%20can%20set%20%60solc%20%3D%20%22%3Cpath%20to%20solc%3E%22%60%20in%20your%20config%20file%2C%20or%20pass%20%60--use%20%22%3Cpath%20to%20solc%3E%22%60.%0AThe%20solc%20version%2Fpath%20can%20also%20be%20set%20via%20the%20env%20variable%20%60FOUNDRY_SOLC%3D%3Cversion%2Fpath%3E%60%2C%20but%20the%20cli%20arg%20%60--use%60%20has%20priority.%0A%0AFor%20example%2C%20if%20you%20have%20a%20project%20that%20supports%20all%200.7.x%20Solidity%20versions%2C%20but%20you%20want%20to%20compile%20with%20solc%200.7.0%2C%20you%20could%20use%20%60forge%20build%20--use%20solc%3A0.7.0%60.%0A%0A%23%23%23%20How%20do%20I%20fork%20from%20a%20live%20network%3F%0A%0ATo%20fork%20from%20a%20live%20network%2C%20pass%20%60--fork-url%20%3CURL%3E%60%20to%20%5B%60forge%20test%60%5D%5Bforge-test%5D.%0AYou%20can%20also%20fork%20from%20a%20specific%20block%20using%20%60--fork-block-number%20%3CBLOCK%3E%60%2C%20which%20adds%20determinism%20to%20your%20test%2C%20and%20allows%20Forge%20to%20cache%0Athe%20chain%20data%20for%20that%20block.%0A%0AFor%20example%2C%20to%20fork%20from%20Ethereum%20mainnet%20at%20block%2010%2C000%2C000%20you%20could%20use%3A%20%60forge%20test%20--fork-url%20%24MAINNET_RPC_URL%20--fork-block-number%2010000000%60.%0A%0A%23%23%23%20How%20do%20I%20add%20my%20own%20assertions%3F%0A%0AYou%20can%20add%20your%20own%20assertions%20by%20creating%20your%20own%20base%20test%20contract%20and%20having%20that%20inherit%20from%20the%20test%20framework%20of%20your%20choice.%0A%0AFor%20example%2C%20if%20you%20use%20DSTest%2C%20you%20could%20create%20a%20base%20test%20contract%20like%20this%3A%0A%0A%60%60%60solidity%0Acontract%20TestBase%20is%20DSTest%20%7B%0A%20%20%20%20function%20myCustomAssertion(uint%20a%2C%20uint%20b)%20%7B%0A%20%20%20%20%20%20if%20(a%20!%3D%20b)%20%7B%0A%20%20%20%20%20%20%20%20%20%20emit%20log_string(%22a%20and%20b%20did%20not%20match%22)%3B%0A%20%20%20%20%20%20%20%20%20%20fail()%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AYou%20would%20then%20inherit%20from%20%60TestBase%60%20in%20your%20test%20contracts.%0A%0A%60%60%60solidity%0Acontract%20MyContractTest%20is%20TestBase%20%7B%0A%20%20%20%20function%20testSomething()%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20...%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ASimilarly%2C%20if%20you%20use%20%5BForge%20Std%5D%5Bforge-std%5D%2C%20you%20can%20create%20a%20base%20test%20contract%20that%20inherits%20from%20%60Test%60.%0A%0AFor%20a%20good%20example%20of%20a%20base%20test%20contract%20that%20has%20helper%20methods%20and%20custom%20assertions%2C%20see%20%5BSolmate's%20%60DSTestPlus%60%5D%5Bdstestplus%5D.%0A%0A%23%23%23%20How%20do%20I%20use%20Forge%20offline%3F%0A%0AForge%20will%20sometimes%20check%20for%20newer%20Solidity%20versions%20that%20fit%20your%20project.%20To%20use%20Forge%20offline%2C%20use%20the%20%60--offline%60%20flag.%0A%0A%23%23%23%20I'm%20getting%20Solc%20errors%0A%0A%5Bsolc-bin%5D(https%3A%2F%2Fbinaries.soliditylang.org%2F)%20doesn't%20offer%20static%20builds%20for%20Apple%20silicon.%20Foundry%20relies%20on%20%5Bsvm%5D(https%3A%2F%2Fgithub.com%2Falloy-rs%2Fsvm-rs)%20to%20install%20native%20builds%20for%20Apple%20silicon.%0A%0AAll%20solc%20versions%20are%20installed%20under%20%60~%2F.svm%2F%60%20if%20the%20directory%20already%20exists.%20If%20not%2C%20it%20uses%20%60%24XDG_DATA_HOME%2Fsvm%2F%60%2C%20commonly%20mapped%20to%20%60%24HOME%2F.local%2Fshare%2Fsvm%2F%60%20on%20Linux%20or%20%60%24HOME%2FLibrary%2FApplication%20Support%2Fsvm%2F%60%20on%20MacOS.%20If%20you%20encounter%20solc%20related%20errors%2C%20such%20as%20%60SolcError%3A%20...%60%20please%20remove%20the%20%60~%2F.svm%2F%60%20directory%20and%20try%20again%2C%20this%20will%20trigger%20a%20fresh%20install%20and%20usually%20resolves%20the%20issue.%0A%0AIf%20you're%20on%20Apple%20silicon%2C%20please%20ensure%20the%20%5B%60z3%60%20theorem%20prover%5D(https%3A%2F%2Fgithub.com%2FZ3Prover%2Fz3)%20is%20installed%3A%20%60brew%20install%20z3%60%0A%0A%3E%20**Note**%3A%20native%20Apple%20silicon%20builds%20are%20only%20available%20from%20%600.8.5%60%20upwards.%20If%20you%20need%20older%20versions%2C%20you%20must%20enable%20Apple%20silicon%20rosetta%20to%20run%20them.%0A%0A%23%23%23%20Forge%20fails%20in%20JavaScript%20monorepos%20(%60pnpm%60)%0A%0AManagers%20like%20%60pnpm%60%20use%20symlinks%20to%20manage%20%60node_modules%60%20folders.%0A%0AA%20common%20layout%20may%20look%20like%3A%0A%0A%60%60%60text%0A%E2%94%9C%E2%94%80%E2%94%80%20contracts%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20contracts%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20foundry.toml%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20lib%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20node_modules%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20package.json%0A%E2%94%9C%E2%94%80%E2%94%80%20node_modules%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20...%0A%E2%94%9C%E2%94%80%E2%94%80%20package.json%0A%E2%94%9C%E2%94%80%E2%94%80%20pnpm-lock.yaml%0A%E2%94%9C%E2%94%80%E2%94%80%20pnpm-workspace.yaml%0A%60%60%60%0A%0AWhere%20the%20Foundry%20workspace%20is%20in%20%60.%2Fcontracts%60%2C%20but%20packages%20in%20%60.%2Fcontracts%2Fnode_modules%60%20are%20symlinked%20to%20%60.%2Fnode_modules%60.%0A%0AWhen%20running%20%60forge%20build%60%20in%20%60.%2Fcontracts%2Fnode_modules%60%2C%20this%20can%20lead%20to%20an%20error%20like%3A%0A%0A%60%60%60console%0Aerror%5B6275%5D%3A%20ParserError%3A%20Source%20%22node_modules%2F%40openzeppelin%2Fcontracts%2Futils%2Fcryptography%2Fdraft-EIP712.sol%22%20not%20found%3A%20File%20outside%20of%20allowed%20directories.%20The%20following%20are%20allowed%3A%20%22%3Crepo%3E%2Fcontracts%22%2C%20%22%3Crepo%3E%2Fcontracts%2Fcontracts%22%2C%20%22%3Crepo%3E%2Fcontracts%2Flib%22.%0A%20--%3E%20node_modules%2F%40openzeppelin%2Fcontracts%2Ftoken%2FERC20%2Fextensions%2Fdraft-ERC20Permit.sol%3A8%3A1%3A%0A%20%20%7C%0A8%20%7C%20import%20%22..%2F..%2F..%2Futils%2Fcryptography%2Fdraft-EIP712.sol%22%3B%0A%60%60%60%0A%0AThis%20error%20happens%20when%20%60solc%60%20was%20able%20to%20resolve%20symlinked%20files%2C%20but%20they're%20outside%20the%20Foundry%20workspace%20(%60.%2Fcontracts%60).%0A%0AAdding%20%60node_modules%60%20to%20%60allow_paths%60%20in%20%60foundry.toml%60%20grants%20solc%20access%20to%20that%20directory%2C%20and%20it%20will%20be%20able%20to%20read%20it%3A%0A%0A%60%60%60toml%0A%23%20This%20translates%20to%20%60solc%20--allow-paths%20..%2Fnode_modules%60%0Aallow_paths%20%3D%20%5B%22..%2Fnode_modules%22%5D%0A%60%60%60%0A%0ANote%20that%20the%20path%20is%20relative%20to%20the%20Foundry%20workspace.%20See%20also%20%5Bsolc%20allowed-paths%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html%23allowed-paths)%0A%0A%23%23%23%20I'm%20getting%20%60Permission%20denied%20(os%20error%2013)%60%0A%0AIf%20you%20see%20an%20error%20like%0A%0A%60%60%60console%0AFailed%20to%20create%20artifact%20parent%20folder%20%22%2F...%2FMyProject%2Fout%2FIsolationModeMagic.sol%22%3A%20Permission%20denied%20(os%20error%2013)%0A%60%60%60%0A%0AThen%20there's%20likely%20a%20folder%20permission%20issue.%20Ensure%20%60user%60%20has%20write%20access%20in%20the%20project%20root's%20folder.%0A%0AIt%20has%20been%20%5Breported%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F3268)%20that%20on%20linux%2C%20canonicalizing%20paths%20can%20result%20in%20weird%20paths%20(%60%2F_1%2F...%60).%20This%20can%20be%20resolved%20by%20nuking%20the%20entire%20project%20folder%20and%20initializing%20again.%0A%0A%23%23%23%20Connection%20refused%20when%20running%20%60forge%20build%60%0A%0AIf%20you're%20unable%20to%20access%20github%20URLs%20called%20by%20%60forge%20build%60%2C%20you%20will%20see%20an%20error%20like%0A%0A%60%60%60console%0AError%3A%0Aerror%20sending%20request%20for%20url%20(https%3A%2F%2Fraw.githubusercontent.com%2Froynalnaruto%2Fsolc-builds%2Fff4ea8a7bbde4488428de69f2c40a7fc56184f5e%2Fmacosx%2Faarch64%2Flist.json)%3A%20error%20trying%20to%20connect%3A%20tcp%20connect%20error%3A%20Connection%20refused%20(os%20error%2061)%0A%60%60%60%0A%0AConnection%20failed%20because%20access%20to%20the%20URL%20from%20your%20location%20may%20be%20restricted.%20To%20solve%20this%2C%20you%20should%20set%20proxy.%0A%0AYou%20could%20run%20%60export%20http_proxy%3Dhttp%3A%2F%2F127.0.0.1%3A7890%20https_proxy%3Dhttp%3A%2F%2F127.0.0.1%3A7890%60%20first%20in%20the%20terminal%20then%20you%20will%20%60forge%20build%60%20successfully.%0A%0A%23%23%23%20I'm%20getting%20%60%5BNotActivated%5D%20EvmError%3A%20NotActivated%60%20error%20in%20my%20tests.%0A%0AThis%20error%20refers%20to%20an%20EVM%20version%20mismatch%2C%20make%20sure%20the%20%60evm_version%60%20configuration%20is%20inline%20with%20the%20test%20(forked%20chain)%20you're%20using%20(similar%20for%20errors%20like%20%60prevrandao%20not%20set%60).%20See%20%5B%60evm_version%60%20configuration%5D(%2Fconfig%2Freference%2Fsolidity-compiler%23evm_version)%0A%0A%5Btg-support%5D%3A%20https%3A%2F%2Ft.me%2Ffoundry_support%0A%5Bforge-test%5D%3A%20.%2Fforge%2Freference%2Fforge-test.md%0A%5Btraces%5D%3A%20.%2Fforge%2Ftraces.md%0A%5Bconfig-solc%5D%3A%20.%2Fconfig%2Freference%2Fsolidity-compiler.md%23solc_version%0A%5Bconfig%5D%3A%20.%2Fconfig%2F%0A%5Bforge-build%5D%3A%20.%2Fforge%2Freference%2Fforge-build.md%0A%5Bconsole-log%5D%3A%20.%2Freference%2Fforge-std%2Fconsole-log.md%0A%5Bforge-std%5D%3A%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%0A%5Bdstestplus%5D%3A%20https%3A%2F%2Fgithub.com%2Ftransmissions11%2Fsolmate%2Fblob%2F19a4f345970ed39ee6369f343d145e0d4071c18a%2Fsrc%2Ftest%2Futils%2FDSTestPlus.sol%23L10%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./faq-BHrRe-zQ.js"),__vite__mapDeps([29,1])),path:"/misc/faq.html",type:"mdx",filePath:"misc/faq.md",content:"---%0Adescription%3A%20Frequently%20asked%20questions%20and%20troubleshooting%20guide%20for%20common%20Foundry%20installation%20and%20usage%20issues.%0A---%0A%0A%23%23%20FAQ%0A%0AThis%20is%20a%20collection%20of%20common%20questions%20and%20answers.%20If%20you%20do%20not%20find%20your%20question%20listed%20here%2C%20hop%20in%20the%20%5BTelegram%20support%20channel%5D%5Btg-support%5D%0Aand%20let%20us%20help%20you!%0A%0A%23%23%23%20I%20can't%20build%20from%20source!%0A%0AMake%20sure%20you're%20on%20the%20latest%20stable%20Rust%20toolchain%3A%0A%0A%60%60%60sh%0Arustup%20default%20stable%0Arustup%20update%20stable%0A%60%60%60%0A%0A%23%23%23%20%60libusb%60%20error%20when%20running%20%60forge%60%2F%60cast%60%0A%0AIf%20you%20are%20using%20the%20binaries%20as%20released%2C%20you%20may%20see%20the%20following%20error%20on%20MacOS%3A%0A%0A%60%60%60sh%0Adyld%3A%20Library%20not%20loaded%3A%20%2Fusr%2Flocal%2Fopt%2Flibusb%2Flib%2Flibusb-1.0.0.dylib%0A%60%60%60%0A%0AIn%20order%20to%20fix%20this%2C%20you%20must%20install%20the%20%60libusb%60%20library%3A%0A%0A%60%60%60sh%0Abrew%20install%20libusb%0A%60%60%60%0A%0A%23%23%23%20Out%20of%20date%20%60GLIBC%60%0A%0AIf%20you%20run%20into%20an%20error%20resembling%20the%20following%20after%20using%20%60foundryup%60%3A%0A%0A%60%60%60sh%0Aforge%3A%20%2Flib%2Fx86_64-linux-gnu%2Flibc.so.6%3A%20version%20'GLIBC_2.29'%20not%20found%20(required%20by%20forge)%0A%60%60%60%0A%0AThere%20are%202%20workarounds%3A%0A%0A1.%20%5BBuilding%20from%20source%5D(%2Fintroduction%2Finstallation%2F%23building-from-source)%0A2.%20%5BUsing%20Docker%5D(%2Fintroduction%2Finstallation%2F%23using-foundry-with-docker)%0A%0A%23%23%23%20Help!%20I%20can't%20see%20my%20logs!%0A%0AForge%20does%20not%20display%20logs%20by%20default.%20If%20you%20want%20to%20see%20logs%20from%20Hardhat's%20%60console.log%60%20or%20from%20DSTest-style%20%60log_*%60%20events%2C%0Ayou%20need%20to%20run%20%5B%60forge%20test%60%5D%5Bforge-test%5D%20with%20verbosity%202%20(%60-vv%60).%0A%0AIf%20you%20want%20to%20see%20other%20events%20your%20contracts%20emit%2C%20you%20need%20to%20run%20with%20traces%20enabled.%0ATo%20do%20that%2C%20set%20the%20verbosity%20to%203%20(%60-vvv%60)%20to%20see%20traces%20for%20failing%20tests%2C%20or%204%20(%60-vvvv%60)%20to%20see%20traces%20for%20all%20tests.%0A%0A%23%23%23%20My%20tests%20are%20failing%20and%20I%20don't%20know%20why!%0A%0ATo%20gain%20better%20insight%20into%20why%20your%20tests%20are%20failing%2C%20try%20using%20traces.%20To%20enable%20traces%2C%20you%20need%20to%20increase%20the%20verbosity%0Aon%20%5Bforge%20test%5D%5Bforge-test%5D%20to%20at%20least%203%20(%60-vvv%60)%20but%20you%20can%20go%20as%20high%20as%205%20(%60-vvvvv%60)%20for%20even%20more%20traces.%0A%0AYou%20can%20learn%20more%20about%20traces%20in%20our%20%5BUnderstanding%20Traces%5D%5Btraces%5D%20chapter.%0A%0A%23%23%23%20How%20do%20I%20use%20%60console.log%60%3F%0A%0ATo%20use%20Hardhat's%20%60console.log%60%20you%20must%20add%20it%20to%20your%20project%20by%20copying%20the%20file%20over%20from%20%5Bhere%5D%5Bconsole-log%5D.%0A%0AAlternatively%2C%20you%20can%20use%20%5BForge%20Std%5D%5Bforge-std%5D%20which%20comes%20bundled%20with%20%60console.log%60.%20To%20use%20%60console.log%60%20from%20Forge%20Std%2C%0Ayou%20have%20to%20import%20it%3A%0A%0A%60%60%60solidity%0Aimport%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%20How%20do%20I%20run%20specific%20tests%3F%0A%0AIf%20you%20want%20to%20run%20only%20a%20few%20tests%2C%20you%20can%20use%20%60--match-test%60%20to%20filter%20test%20functions%2C%0A%60--match-contract%60%20to%20filter%20test%20contracts%2C%20and%20%60--match-path%60%20to%20filter%20test%20files%20on%20%5B%60forge%20test%60%5D%5Bforge-test%5D.%0A%0A%23%23%23%20How%20do%20I%20use%20a%20specific%20Solidity%20compiler%3F%0A%0AForge%20will%20try%20to%20auto-detect%20what%20Solidity%20compiler%20works%20for%20your%20project.%0A%0ATo%20use%20a%20specific%20Solidity%20compiler%2C%20you%20can%20set%20%5B%60solc%60%5D%5Bconfig-solc%5D%20in%20your%20%5Bconfig%20file%5D%5Bconfig%5D%2C%0Aor%20pass%20%60--use%20solc%3A%3Cversion%3E%60%20to%20a%20Forge%20command%20that%20supports%20it%20(e.g.%20%5B%60forge%20build%60%5D%5Bforge-build%5D%0Aor%20%5B%60forge%20test%60%5D%5Bforge-test%5D).%0APaths%20to%20a%20solc%20binary%20are%20also%20accepted.%20To%20use%20a%20specific%20local%20solc%20binary%2C%20you%20can%20set%20%60solc%20%3D%20%22%3Cpath%20to%20solc%3E%22%60%20in%20your%20config%20file%2C%20or%20pass%20%60--use%20%22%3Cpath%20to%20solc%3E%22%60.%0AThe%20solc%20version%2Fpath%20can%20also%20be%20set%20via%20the%20env%20variable%20%60FOUNDRY_SOLC%3D%3Cversion%2Fpath%3E%60%2C%20but%20the%20cli%20arg%20%60--use%60%20has%20priority.%0A%0AFor%20example%2C%20if%20you%20have%20a%20project%20that%20supports%20all%200.7.x%20Solidity%20versions%2C%20but%20you%20want%20to%20compile%20with%20solc%200.7.0%2C%20you%20could%20use%20%60forge%20build%20--use%20solc%3A0.7.0%60.%0A%0A%23%23%23%20How%20do%20I%20fork%20from%20a%20live%20network%3F%0A%0ATo%20fork%20from%20a%20live%20network%2C%20pass%20%60--fork-url%20%3CURL%3E%60%20to%20%5B%60forge%20test%60%5D%5Bforge-test%5D.%0AYou%20can%20also%20fork%20from%20a%20specific%20block%20using%20%60--fork-block-number%20%3CBLOCK%3E%60%2C%20which%20adds%20determinism%20to%20your%20test%2C%20and%20allows%20Forge%20to%20cache%0Athe%20chain%20data%20for%20that%20block.%0A%0AFor%20example%2C%20to%20fork%20from%20Ethereum%20mainnet%20at%20block%2010%2C000%2C000%20you%20could%20use%3A%20%60forge%20test%20--fork-url%20%24MAINNET_RPC_URL%20--fork-block-number%2010000000%60.%0A%0A%23%23%23%20How%20do%20I%20add%20my%20own%20assertions%3F%0A%0AYou%20can%20add%20your%20own%20assertions%20by%20creating%20your%20own%20base%20test%20contract%20and%20having%20that%20inherit%20from%20the%20test%20framework%20of%20your%20choice.%0A%0AFor%20example%2C%20if%20you%20use%20DSTest%2C%20you%20could%20create%20a%20base%20test%20contract%20like%20this%3A%0A%0A%60%60%60solidity%0Acontract%20TestBase%20is%20DSTest%20%7B%0A%20%20%20%20function%20myCustomAssertion(uint%20a%2C%20uint%20b)%20%7B%0A%20%20%20%20%20%20if%20(a%20!%3D%20b)%20%7B%0A%20%20%20%20%20%20%20%20%20%20emit%20log_string(%22a%20and%20b%20did%20not%20match%22)%3B%0A%20%20%20%20%20%20%20%20%20%20fail()%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AYou%20would%20then%20inherit%20from%20%60TestBase%60%20in%20your%20test%20contracts.%0A%0A%60%60%60solidity%0Acontract%20MyContractTest%20is%20TestBase%20%7B%0A%20%20%20%20function%20testSomething()%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20...%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ASimilarly%2C%20if%20you%20use%20%5BForge%20Std%5D%5Bforge-std%5D%2C%20you%20can%20create%20a%20base%20test%20contract%20that%20inherits%20from%20%60Test%60.%0A%0AFor%20a%20good%20example%20of%20a%20base%20test%20contract%20that%20has%20helper%20methods%20and%20custom%20assertions%2C%20see%20%5BSolmate's%20%60DSTestPlus%60%5D%5Bdstestplus%5D.%0A%0A%23%23%23%20How%20do%20I%20use%20Forge%20offline%3F%0A%0AForge%20will%20sometimes%20check%20for%20newer%20Solidity%20versions%20that%20fit%20your%20project.%20To%20use%20Forge%20offline%2C%20use%20the%20%60--offline%60%20flag.%0A%0A%23%23%23%20I'm%20getting%20Solc%20errors%0A%0A%5Bsolc-bin%5D(https%3A%2F%2Fbinaries.soliditylang.org%2F)%20doesn't%20offer%20static%20builds%20for%20Apple%20silicon.%20Foundry%20relies%20on%20%5Bsvm%5D(https%3A%2F%2Fgithub.com%2Falloy-rs%2Fsvm-rs)%20to%20install%20native%20builds%20for%20Apple%20silicon.%0A%0AAll%20solc%20versions%20are%20installed%20under%20%60~%2F.svm%2F%60%20if%20the%20directory%20already%20exists.%20If%20not%2C%20it%20uses%20%60%24XDG_DATA_HOME%2Fsvm%2F%60%2C%20commonly%20mapped%20to%20%60%24HOME%2F.local%2Fshare%2Fsvm%2F%60%20on%20Linux%20or%20%60%24HOME%2FLibrary%2FApplication%20Support%2Fsvm%2F%60%20on%20MacOS.%20If%20you%20encounter%20solc%20related%20errors%2C%20such%20as%20%60SolcError%3A%20...%60%20please%20remove%20the%20%60~%2F.svm%2F%60%20directory%20and%20try%20again%2C%20this%20will%20trigger%20a%20fresh%20install%20and%20usually%20resolves%20the%20issue.%0A%0AIf%20you're%20on%20Apple%20silicon%2C%20please%20ensure%20the%20%5B%60z3%60%20theorem%20prover%5D(https%3A%2F%2Fgithub.com%2FZ3Prover%2Fz3)%20is%20installed%3A%20%60brew%20install%20z3%60%0A%0A%3E%20**Note**%3A%20native%20Apple%20silicon%20builds%20are%20only%20available%20from%20%600.8.5%60%20upwards.%20If%20you%20need%20older%20versions%2C%20you%20must%20enable%20Apple%20silicon%20rosetta%20to%20run%20them.%0A%0A%23%23%23%20Forge%20fails%20in%20JavaScript%20monorepos%20(%60pnpm%60)%0A%0AManagers%20like%20%60pnpm%60%20use%20symlinks%20to%20manage%20%60node_modules%60%20folders.%0A%0AA%20common%20layout%20may%20look%20like%3A%0A%0A%60%60%60text%0A%E2%94%9C%E2%94%80%E2%94%80%20contracts%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20contracts%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20foundry.toml%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20lib%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20node_modules%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20package.json%0A%E2%94%9C%E2%94%80%E2%94%80%20node_modules%0A%E2%94%82%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20...%0A%E2%94%9C%E2%94%80%E2%94%80%20package.json%0A%E2%94%9C%E2%94%80%E2%94%80%20pnpm-lock.yaml%0A%E2%94%9C%E2%94%80%E2%94%80%20pnpm-workspace.yaml%0A%60%60%60%0A%0AWhere%20the%20Foundry%20workspace%20is%20in%20%60.%2Fcontracts%60%2C%20but%20packages%20in%20%60.%2Fcontracts%2Fnode_modules%60%20are%20symlinked%20to%20%60.%2Fnode_modules%60.%0A%0AWhen%20running%20%60forge%20build%60%20in%20%60.%2Fcontracts%2Fnode_modules%60%2C%20this%20can%20lead%20to%20an%20error%20like%3A%0A%0A%60%60%60console%0Aerror%5B6275%5D%3A%20ParserError%3A%20Source%20%22node_modules%2F%40openzeppelin%2Fcontracts%2Futils%2Fcryptography%2Fdraft-EIP712.sol%22%20not%20found%3A%20File%20outside%20of%20allowed%20directories.%20The%20following%20are%20allowed%3A%20%22%3Crepo%3E%2Fcontracts%22%2C%20%22%3Crepo%3E%2Fcontracts%2Fcontracts%22%2C%20%22%3Crepo%3E%2Fcontracts%2Flib%22.%0A%20--%3E%20node_modules%2F%40openzeppelin%2Fcontracts%2Ftoken%2FERC20%2Fextensions%2Fdraft-ERC20Permit.sol%3A8%3A1%3A%0A%20%20%7C%0A8%20%7C%20import%20%22..%2F..%2F..%2Futils%2Fcryptography%2Fdraft-EIP712.sol%22%3B%0A%60%60%60%0A%0AThis%20error%20happens%20when%20%60solc%60%20was%20able%20to%20resolve%20symlinked%20files%2C%20but%20they're%20outside%20the%20Foundry%20workspace%20(%60.%2Fcontracts%60).%0A%0AAdding%20%60node_modules%60%20to%20%60allow_paths%60%20in%20%60foundry.toml%60%20grants%20solc%20access%20to%20that%20directory%2C%20and%20it%20will%20be%20able%20to%20read%20it%3A%0A%0A%60%60%60toml%0A%23%20This%20translates%20to%20%60solc%20--allow-paths%20..%2Fnode_modules%60%0Aallow_paths%20%3D%20%5B%22..%2Fnode_modules%22%5D%0A%60%60%60%0A%0ANote%20that%20the%20path%20is%20relative%20to%20the%20Foundry%20workspace.%20See%20also%20%5Bsolc%20allowed-paths%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html%23allowed-paths)%0A%0A%23%23%23%20I'm%20getting%20%60Permission%20denied%20(os%20error%2013)%60%0A%0AIf%20you%20see%20an%20error%20like%0A%0A%60%60%60console%0AFailed%20to%20create%20artifact%20parent%20folder%20%22%2F...%2FMyProject%2Fout%2FIsolationModeMagic.sol%22%3A%20Permission%20denied%20(os%20error%2013)%0A%60%60%60%0A%0AThen%20there's%20likely%20a%20folder%20permission%20issue.%20Ensure%20%60user%60%20has%20write%20access%20in%20the%20project%20root's%20folder.%0A%0AIt%20has%20been%20%5Breported%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F3268)%20that%20on%20linux%2C%20canonicalizing%20paths%20can%20result%20in%20weird%20paths%20(%60%2F_1%2F...%60).%20This%20can%20be%20resolved%20by%20nuking%20the%20entire%20project%20folder%20and%20initializing%20again.%0A%0A%23%23%23%20Connection%20refused%20when%20running%20%60forge%20build%60%0A%0AIf%20you're%20unable%20to%20access%20github%20URLs%20called%20by%20%60forge%20build%60%2C%20you%20will%20see%20an%20error%20like%0A%0A%60%60%60console%0AError%3A%0Aerror%20sending%20request%20for%20url%20(https%3A%2F%2Fraw.githubusercontent.com%2Froynalnaruto%2Fsolc-builds%2Fff4ea8a7bbde4488428de69f2c40a7fc56184f5e%2Fmacosx%2Faarch64%2Flist.json)%3A%20error%20trying%20to%20connect%3A%20tcp%20connect%20error%3A%20Connection%20refused%20(os%20error%2061)%0A%60%60%60%0A%0AConnection%20failed%20because%20access%20to%20the%20URL%20from%20your%20location%20may%20be%20restricted.%20To%20solve%20this%2C%20you%20should%20set%20proxy.%0A%0AYou%20could%20run%20%60export%20http_proxy%3Dhttp%3A%2F%2F127.0.0.1%3A7890%20https_proxy%3Dhttp%3A%2F%2F127.0.0.1%3A7890%60%20first%20in%20the%20terminal%20then%20you%20will%20%60forge%20build%60%20successfully.%0A%0A%23%23%23%20I'm%20getting%20%60%5BNotActivated%5D%20EvmError%3A%20NotActivated%60%20error%20in%20my%20tests.%0A%0AThis%20error%20refers%20to%20an%20EVM%20version%20mismatch%2C%20make%20sure%20the%20%60evm_version%60%20configuration%20is%20inline%20with%20the%20test%20(forked%20chain)%20you're%20using%20(similar%20for%20errors%20like%20%60prevrandao%20not%20set%60).%20See%20%5B%60evm_version%60%20configuration%5D(%2Fconfig%2Freference%2Fsolidity-compiler%23evm_version)%0A%0A%5Btg-support%5D%3A%20https%3A%2F%2Ft.me%2Ffoundry_support%0A%5Bforge-test%5D%3A%20.%2Fforge%2Freference%2Fforge-test.md%0A%5Btraces%5D%3A%20.%2Fforge%2Ftraces.md%0A%5Bconfig-solc%5D%3A%20.%2Fconfig%2Freference%2Fsolidity-compiler.md%23solc_version%0A%5Bconfig%5D%3A%20.%2Fconfig%2F%0A%5Bforge-build%5D%3A%20.%2Fforge%2Freference%2Fforge-build.md%0A%5Bconsole-log%5D%3A%20.%2Freference%2Fforge-std%2Fconsole-log.md%0A%5Bforge-std%5D%3A%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%0A%5Bdstestplus%5D%3A%20https%3A%2F%2Fgithub.com%2Ftransmissions11%2Fsolmate%2Fblob%2F19a4f345970ed39ee6369f343d145e0d4071c18a%2Fsrc%2Ftest%2Futils%2FDSTestPlus.sol%23L10%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./struct-encoding-DZUdczvp.js"),__vite__mapDeps([30,1])),path:"/misc/struct-encoding",type:"mdx",filePath:"misc/struct-encoding.md",content:"---%0Adescription%3A%20Learn%20how%20Solidity%20structs%20map%20to%20ABI%20tuples%20and%20handle%20encoding%20for%20contract%20interactions%20with%20nested%20structures.%0A---%0A%0A%23%23%20Struct%20Encoding%0A%0AStructs%20are%20user%20defined%20types%20that%20can%20group%20several%20variables%3A%0A%0A%60%60%60solidity%0Astruct%20MyStruct%20%7B%0A%20%20%20%20address%20addr%3B%0A%20%20%20%20uint256%20amount%3B%0A%7D%0A%60%60%60%0A%0AOnly%20the%20new%20%5BABI%20coder%20v2%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Flayout-of-source-files.html%23abi-coder-pragma)%20can%20encode%20and%20decode%20arbitrarily%20nested%20arrays%20and%20structs.%20Since%20Solidity%200.8.0%20it%20is%20activated%20by%20default%2C%20prior%20to%20that%20it%20needs%20to%20be%20activated%20via%20%60pragma%20experimental%20ABIEncoderV2%60.%0A%0ASolidity%20structs%20map%20to%20the%20ABI%20type%20%22tuple%22.%20For%20more%20information%20on%20how%20Solidity%20types%20map%20to%20ABI%20types%20see%20%5BMapping%20Solidity%20to%20ABI%20types%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fabi-spec.html%23mapping-solidity-to-abi-types)%20in%20the%20Solidity%20documentation.%0A%0AStructs%20are%20therefore%20encoded%20and%20decoded%20as%20tuples.%20So%20the%20struct%20we%20defined%20above%2C%20%60MyStruct%60%2C%20maps%20to%20the%20tuple%20%60(address%2Cuint256)%60%20in%20terms%20of%20the%20ABI.%0A%0ALet's%20see%20how%20this%20works%20in%20a%20contract%3A%0A%0A%60%60%60solidity%0Apragma%20solidity%20%3D0.8.15%3B%0A%0A%0Acontract%20Test%20%7B%0A%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%7D%0A%20%20%20%20function%20f(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%7D%0A%60%60%60%0A%0AThe%20ABI%20of%20the%20%60f%60%20function%20in%20this%20contract%20is%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22inputs%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22components%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22address%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22addr%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22address%22%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22amount%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%22internalType%22%3A%20%22struct%20Test.MyStruct%22%2C%0A%20%20%20%20%20%20%22name%22%3A%20%22t%22%2C%0A%20%20%20%20%20%20%22type%22%3A%20%22tuple%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22f%22%2C%0A%20%20%22outputs%22%3A%20%5B%5D%2C%0A%20%20%22stateMutability%22%3A%20%22pure%22%2C%0A%20%20%22type%22%3A%20%22function%22%0A%7D%0A%60%60%60%0A%0Awhich%20reads%3A%20The%20function%20%60f%60%20takes%201%20input%20of%20type%20%60tuple%60%20with%20two%20components%20of%20type%20%60address%60%20and%20%60uint256%60.%0A%0A**Nested%20Struct%20Encoding%3A**%0AHere's%20a%20more%20complex%20example%20with%20nested%20structs%3A%0A%0A%60%60%60solidity%0Apragma%20solidity%200.8.21%3B%0A%0Acontract%20Test%20%7B%0A%20%20%20%20struct%20nestedStruct%20%7B%0A%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20string%20nestedStructName%3B%0A%20%20%20%20%20%20%20%20uint256%20nestedStructCount%3B%0A%20%20%20%20%20%20%20%20nestedStruct%20_nestedStruct%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20f(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%7D%0A%60%60%60%0A%0AThe%20ABI%20of%20the%20%60f%60%20function%20in%20this%20contract%20is%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22inputs%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22name%22%3A%20%22t%22%2C%0A%20%20%20%20%20%20%22type%22%3A%20%22tuple%22%2C%0A%20%20%20%20%20%20%22internalType%22%3A%20%22struct%20Test.MyStruct%22%2C%0A%20%20%20%20%20%20%22components%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22nestedStructName%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22string%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22string%22%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22nestedStructCount%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22_nestedStruct%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22tuple%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22struct%20Test.nestedStruct%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22components%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22addr%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22address%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22address%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22amount%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%5D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%5D%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22f%22%2C%0A%20%20%22outputs%22%3A%20%5B%5D%2C%0A%20%20%22stateMutability%22%3A%20%22pure%22%2C%0A%20%20%22type%22%3A%20%22function%22%0A%7D%0A%60%60%60%0A%0Awhich%20reads%3A%20The%20function%20%60f%60%20takes%201%20input%20of%20type%20tuple%20with%20three%20components%3A%20a%20string%2C%20a%20uint256%2C%20and%20another%20tuple%20representing%20the%20nested%20struct%20with%20components%20addr%20of%20type%20address%20and%20amount%20of%20type%20uint256.%0A%0ATo%20encode%20%60MyStruct%60%20to%20pass%20it%20as%20a%20parameter%20to%20the%20function%20%60f%60%3A%0A%0A%60%60%60bash%0Acast%20abi-encode%20%22f((string%2Cuint256%2C(address%2Cuint256)))%22%20%22(example%2C1%2C(0x...%2C1))%22%0A%60%60%60%0A%0ATo%20deploy%20a%20contract%20accepting%20%60MyStruct%60%20as%20an%20argument%3A%0A%0A%60%60%60bash%0Aforge%20create%20src%2FTest.sol%3ATest%20--constructor-args%20%22(example%2C1%2C(0x...%2C1))%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./struct-encoding-DZUdczvp.js"),__vite__mapDeps([30,1])),path:"/misc/struct-encoding.html",type:"mdx",filePath:"misc/struct-encoding.md",content:"---%0Adescription%3A%20Learn%20how%20Solidity%20structs%20map%20to%20ABI%20tuples%20and%20handle%20encoding%20for%20contract%20interactions%20with%20nested%20structures.%0A---%0A%0A%23%23%20Struct%20Encoding%0A%0AStructs%20are%20user%20defined%20types%20that%20can%20group%20several%20variables%3A%0A%0A%60%60%60solidity%0Astruct%20MyStruct%20%7B%0A%20%20%20%20address%20addr%3B%0A%20%20%20%20uint256%20amount%3B%0A%7D%0A%60%60%60%0A%0AOnly%20the%20new%20%5BABI%20coder%20v2%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Flayout-of-source-files.html%23abi-coder-pragma)%20can%20encode%20and%20decode%20arbitrarily%20nested%20arrays%20and%20structs.%20Since%20Solidity%200.8.0%20it%20is%20activated%20by%20default%2C%20prior%20to%20that%20it%20needs%20to%20be%20activated%20via%20%60pragma%20experimental%20ABIEncoderV2%60.%0A%0ASolidity%20structs%20map%20to%20the%20ABI%20type%20%22tuple%22.%20For%20more%20information%20on%20how%20Solidity%20types%20map%20to%20ABI%20types%20see%20%5BMapping%20Solidity%20to%20ABI%20types%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fabi-spec.html%23mapping-solidity-to-abi-types)%20in%20the%20Solidity%20documentation.%0A%0AStructs%20are%20therefore%20encoded%20and%20decoded%20as%20tuples.%20So%20the%20struct%20we%20defined%20above%2C%20%60MyStruct%60%2C%20maps%20to%20the%20tuple%20%60(address%2Cuint256)%60%20in%20terms%20of%20the%20ABI.%0A%0ALet's%20see%20how%20this%20works%20in%20a%20contract%3A%0A%0A%60%60%60solidity%0Apragma%20solidity%20%3D0.8.15%3B%0A%0A%0Acontract%20Test%20%7B%0A%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%7D%0A%20%20%20%20function%20f(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%7D%0A%60%60%60%0A%0AThe%20ABI%20of%20the%20%60f%60%20function%20in%20this%20contract%20is%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22inputs%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22components%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22address%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22addr%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22address%22%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22amount%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%22internalType%22%3A%20%22struct%20Test.MyStruct%22%2C%0A%20%20%20%20%20%20%22name%22%3A%20%22t%22%2C%0A%20%20%20%20%20%20%22type%22%3A%20%22tuple%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22f%22%2C%0A%20%20%22outputs%22%3A%20%5B%5D%2C%0A%20%20%22stateMutability%22%3A%20%22pure%22%2C%0A%20%20%22type%22%3A%20%22function%22%0A%7D%0A%60%60%60%0A%0Awhich%20reads%3A%20The%20function%20%60f%60%20takes%201%20input%20of%20type%20%60tuple%60%20with%20two%20components%20of%20type%20%60address%60%20and%20%60uint256%60.%0A%0A**Nested%20Struct%20Encoding%3A**%0AHere's%20a%20more%20complex%20example%20with%20nested%20structs%3A%0A%0A%60%60%60solidity%0Apragma%20solidity%200.8.21%3B%0A%0Acontract%20Test%20%7B%0A%20%20%20%20struct%20nestedStruct%20%7B%0A%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20string%20nestedStructName%3B%0A%20%20%20%20%20%20%20%20uint256%20nestedStructCount%3B%0A%20%20%20%20%20%20%20%20nestedStruct%20_nestedStruct%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20f(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%7D%0A%60%60%60%0A%0AThe%20ABI%20of%20the%20%60f%60%20function%20in%20this%20contract%20is%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22inputs%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22name%22%3A%20%22t%22%2C%0A%20%20%20%20%20%20%22type%22%3A%20%22tuple%22%2C%0A%20%20%20%20%20%20%22internalType%22%3A%20%22struct%20Test.MyStruct%22%2C%0A%20%20%20%20%20%20%22components%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22nestedStructName%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22string%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22string%22%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22nestedStructCount%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22_nestedStruct%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22tuple%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22struct%20Test.nestedStruct%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22components%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22addr%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22address%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22address%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20%22amount%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22type%22%3A%20%22uint256%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22internalType%22%3A%20%22uint256%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%5D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%5D%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22f%22%2C%0A%20%20%22outputs%22%3A%20%5B%5D%2C%0A%20%20%22stateMutability%22%3A%20%22pure%22%2C%0A%20%20%22type%22%3A%20%22function%22%0A%7D%0A%60%60%60%0A%0Awhich%20reads%3A%20The%20function%20%60f%60%20takes%201%20input%20of%20type%20tuple%20with%20three%20components%3A%20a%20string%2C%20a%20uint256%2C%20and%20another%20tuple%20representing%20the%20nested%20struct%20with%20components%20addr%20of%20type%20address%20and%20amount%20of%20type%20uint256.%0A%0ATo%20encode%20%60MyStruct%60%20to%20pass%20it%20as%20a%20parameter%20to%20the%20function%20%60f%60%3A%0A%0A%60%60%60bash%0Acast%20abi-encode%20%22f((string%2Cuint256%2C(address%2Cuint256)))%22%20%22(example%2C1%2C(0x...%2C1))%22%0A%60%60%60%0A%0ATo%20deploy%20a%20contract%20accepting%20%60MyStruct%60%20as%20an%20argument%3A%0A%0A%60%60%60bash%0Aforge%20create%20src%2FTest.sol%3ATest%20--constructor-args%20%22(example%2C1%2C(0x...%2C1))%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./v1.0-migration-B2mlm6T5.js"),__vite__mapDeps([31,1])),path:"/misc/v1.0-migration",type:"mdx",filePath:"misc/v1.0-migration.md",content:"---%0Adescription%3A%20Migration%20guide%20for%20upgrading%20to%20Foundry%20v1.0%20with%20breaking%20changes%2C%20deprecated%20features%2C%20and%20updated%20best%20practices.%0A---%0A%0A%23%23%20Foundry%20v1.0%20migration%20guide%0A%0ASeveral%20breaking%20changes%20were%20introduced%20in%20Foundry%20%60v1.0%60%20version%2C%20which%20could%20require%20updates%20on%20projects%20using%20older%20versions.%0AThis%20guide%20documents%20the%20suggested%20best%20practices%20when%20migrating%20from%20an%20older%20version.%0A%0A-%20%5BFoundry%20v1.0%20migration%20guide%5D(%23foundry-v10-migration-guide)%0A%20%20-%20%5BSolc%20optimizer%20disabled%20by%20default%5D(%23solc-optimizer-disabled-by-default)%0A%20%20-%20%5BExpect%20revert%20cheatcode%20disabled%20on%20internal%20calls%20by%20default%5D(%23expect-revert-cheatcode-disabled-on-internal-calls-by-default)%0A%20%20-%20%5BRemoved%20support%20for%20testFail%20tests%5D(%23removed-support-for-testfail-tests)%0A%20%20-%20%5BRemoved%20support%20for%20legacy%20console.sol%20signatures%5D(%23removed-support-for-legacy-consolesol-signatures)%0A%20%20-%20%5BConflicting%20remappings%20are%20ignored%5D(%23conflicting-remappings-are-ignored)%0A%20%20-%20%5BArtifacts%20not%20persisted%20on%20%60forge%20coverage%60%5D(%23artifacts-not-persisted-on-forge-coverage)%0A%20%20-%20%5BOther%5D(%23other)%0A%0A%23%23%23%20Solc%20optimizer%20disabled%20by%20default%0A%0AEnabling%20optimizer%20by%20default%20could%20introduce%20bugs%20for%20seemingly%20correct%20code%20(if%20there%20are%20bugs%20in%20optimizer%20itself)%20-%20see%20%5B%232486%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F2486).%20Foundry%20%60v1.0%60%20default%20settings%20could%20affect%20current%20projects%20by%20reporting%20higher%20contract%20sizes%20and%20%2F%20or%20project%20build%20failures.%20It%20is%20recommended%20to%20explicitly%20enable%20optimizer%20and%20their%20runs%20in%20%60foundry.toml%60%20configuration%3A%0A%0A%60%60%60toml%0Aoptimizer%20%3D%20true%0Aoptimizer_runs%20%3D%20200%0A%60%60%60%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Projects%20using%20additional%20compiler%20profiles%20with%20optimizer%20runs%20but%20without%20explicitly%20enable%20optimizer%20could%20fail%20to%20build%20with%20%60Missing%20profile%20satisfying%20settings%20restrictions%60%20message.%0A%0ASee%3A%20%5Boptimizer%20configuration%5D(%2Fconfig%2Freference%2Fsolidity-compiler%23optimizer)%0A%0A%23%23%23%20Expect%20revert%20cheatcode%20disabled%20on%20internal%20calls%20by%20default%0A%0AWhen%20testing%20internal%20functions%20with%20%60vm.expectRevert%60%20cheatcode%20at%20the%20same%20call%20depth%20only%20the%20first%20%60vm.expectRevert%60%20is%20executed%20-%20see%20%5B%233437%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F3437).%20In%20Foundry%20%60v1.0%60%20default%20settings%20this%20behavior%20is%20disabled%20by%20default.%20This%20could%20affect%20current%20projects%20by%20reporting%20test%20failures%20as%20%60%5BFAIL%3A%20call%20didn't%20revert%20at%20a%20lower%20depth%20than%20cheatcode%20call%20depth%5D%60.%20It%20is%20recommended%20to%20review%20these%20failing%20tests%20and%20either%20enable%20revert%20on%20internal%20calls%20or%20rewrite%20tests%20to%20avoid%20this.%20%20%0AFor%20example%2C%20a%20test%20like%20the%20one%20below%3A%0A%0A%60%60%60solidity%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20error%20CustomError()%3B%0A%0A%20%20%20%20function%20revertWithCustomError()%20internal%20%7B%0A%20%20%20%20%20%20%20%20revert%20CustomError()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testExample()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20%20%20%20%20revertWithCustomError()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0Acan%20be%20changed%20to%20use%20a%20mock%20%60CustomContract%60%20that%20expose%20a%20public%20function%3A%0A%0A%60%60%60solidity%0Acontract%20CustomContract%20%7B%0A%20%20%20%20error%20CustomError()%3B%0A%0A%20%20%20%20function%20revertWithCustomError()%20external%20%7B%0A%20%20%20%20%20%20%20%20revert%20CustomError()%3B%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20CustomContract%20internal%20c%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%20new%20CustomContract()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testExample()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20%20%20%20%20c.revertWithCustomError()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0Aor%20configured%20to%20allow%20expect%20reverts%3A%0A%0A%60%60%60solidity%0A%20%20%20%20%2F%2F%2F%20forge-config%3A%20default.allow_internal_expect_revert%20%3D%20true%0A%20%20%20%20function%20testExample()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20%20%20%20%20revertWithCustomError()%3B%0A%20%20%20%20%7D%0A%60%60%60%0A%0ASee%3A%20%5B%60vm.expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert%23error)%20cheatcode%0A%0A%23%23%23%20Removed%20support%20for%20testFail%20tests%0A%0AThe%20%60testFail%60%20test%20prefix%20support%20is%20removed%20in%20Foundry%20%60v1.0%60%20in%20order%20to%20prevent%20confusion%20-%20see%20%5B%234437%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F4437).%20This%20could%20affect%20existing%20projects%20by%20reporting%20test%20failures%20where%20they're%20not%20expected.%20Existing%20%60testFail%60%20tests%20can%20be%20migrated%20for%20%60v1.0%60%20by%20using%20%60vm.expectRevert()%60%20cheatcode%20or%20by%20using%20a%20%60try%2Fcatch%60%20approach%20and%20assert%20the%20failure.%20%20%0AFor%20example%2C%20a%20test%20like%20the%20one%20below%3A%0A%0A%60%60%60solidity%0Afunction%20testFail_IncrementAsNotOwner()%20public%20%7B%0A%20%20%20%20vm.prank(address(0))%3B%0A%20%20%20%20upOnly.increment()%3B%0A%7D%0A%60%60%60%0A%0Acan%20be%20rewritten%20as%0A%0A%60%60%60solidity%0Afunction%20test_RevertWhen_CallerIsNotOwner()%20public%20%7B%0A%20%20%20%20vm.expectRevert(Unauthorized.selector)%3B%0A%20%20%20%20vm.prank(address(0))%3B%0A%20%20%20%20upOnly.increment()%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Removed%20support%20for%20legacy%20console.sol%20signatures%0A%0AFoundry%20%60v1.0%60%20removes%20the%20support%20for%20%60console.sol%60%20selectors%20that%20use%20the%20faulty%20ABI%20encoding%20-%20see%20%5B%238910%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F8910).%20This%20could%20affect%20existing%20projects%20by%20producing%20test%20build%20failures%2C%20therefore%20they%20need%20to%20be%20updated%20accordingly.%20For%20example%3A%0A%0A%60%60%60solidity%0Aconsole.log(%22testMisc%22%2C%2042)%3B%0Aconsole.log(0)%3B%0A%60%60%60%0A%0Ashould%20be%20rewritten%20as%0A%0A%60%60%60solidity%0Aconsole.log(%22testMisc%22%2C%20uint256(42))%3B%0Aconsole.log(uint256(0))%3B%0Aconsole.logUint(0)%3B%0A%60%60%60%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Latest%20%60forge-std%60%20version%20should%20be%20used%20in%20order%20to%20use%20the%20newly%20signatures%20for%20console%20logging%20and%20avoid%20unexpected%20behaviour.%0A%0A%23%23%23%20Conflicting%20remappings%20are%20ignored%0A%0APrior%20to%20Foundry%20%60v1.0%60%2C%20%60forge%60%20inferred%20remappings%20by%20taking%20into%20account%20remappings%20of%20sub-projects.%20When%20conflicting%20remappings%20were%20present%2C%20the%20longest%20%2F%20most%20specified%20had%20the%20priority.%20This%20was%20dangerous%2C%20as%20adding%20sub-projects%20were%20able%20to%20completely%20change%20the%20code%20that%20is%20executed%2C%20even%20if%20the%20remappings%20of%20the%20root%20project%20are%20not%20changed%20-%20see%20%5B%238910%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F9146).%0AWith%20%60v1.0%60%2C%20a%20project%20will%20fail%20to%20build%20if%20the%20same%20remapping%0A%0A%60%60%60toml%0A%40openzeppelin%2F%3Dlib%2Fopenzeppelin-contracts%2Fcontracts%2F%0A%60%60%60%0A%0Ais%20defined%20in%20both%20root%20project%20and%20in%20an%20imported%20dependency.%0ATo%20fix%20it%2C%20the%20project%20root%20remapping%20should%20be%20added%20in%20%60src%60%20context%3A%0A%0A%60%60%60toml%0Asrc%3A%40openzeppelin%2F%3Dlib%2Fopenzeppelin-contracts%2Fcontracts%2F%0A%60%60%60%0A%0A%23%23%23%20Artifacts%20not%20persisted%20on%20%60forge%20coverage%60%0A%0AIn%20prior%20versions%2C%20%60forge%20coverage%60%20was%20changing%20the%20artifacts%20(which%20are%20unoptimized%20in%20order%20to%20provide%20accurate%20source%20hit%20maps)%20without%20any%20warnings.%20This%20was%20confusing%20and%20was%20leading%20to%20undesired%20situations%20like%20the%20one%20in%20%5B%238840%20comment%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F8840%23issuecomment-2390792012).%20Foundry%20%60v1.0%60%20does%20not%20generate%20artifacts%20when%20running%20coverage%20anymore%20hence%20projects%20should%20be%20aware%20of%20the%20change.%0A%0A%23%23%23%20Other%0A%0A-%20%60FORGE_SNAPSHOT_CHECK%60%20requires%20boolean%20value.%20Use%20%60FORGE_SNAPSHOT_CHECK%3Dtrue%7Cfalse%60.%0A-%20%60forge%20inspect%20--pretty%60%20flag%20was%20removed.%20Use%20%60forge%20inspect%60%20for%20table%20view.%0A-%20%60forge%20bind%20--ethers%60%20was%20removed.%20Use%20%60forge%20bind%60%20(defaults%20to%20%60alloy%60).%0A-%20%60forge%20debug%60%20subcommand%20was%20removed.%20Use%20%60forge%20test%20--debug%60%20and%20%60forge%20script%20--debug%60.%0A-%20%60cast%20etherscan-source%60%20subcommand%20was%20replaced%20with%20%60cast%20source%60.%20Use%20additional%20%60explorer_url%60%20and%20%60explorer_api_url%60%20args%20for%20alternative%20block%20explorers.%0A-%20%60foundryup%60%20installs%20stable%20if%20no%20version%20specified.%20Use%20%60foundryup%20-i%20nightly%60%20to%20install%20nightly%20versions.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./v1.0-migration-B2mlm6T5.js"),__vite__mapDeps([31,1])),path:"/misc/v1.0-migration.html",type:"mdx",filePath:"misc/v1.0-migration.md",content:"---%0Adescription%3A%20Migration%20guide%20for%20upgrading%20to%20Foundry%20v1.0%20with%20breaking%20changes%2C%20deprecated%20features%2C%20and%20updated%20best%20practices.%0A---%0A%0A%23%23%20Foundry%20v1.0%20migration%20guide%0A%0ASeveral%20breaking%20changes%20were%20introduced%20in%20Foundry%20%60v1.0%60%20version%2C%20which%20could%20require%20updates%20on%20projects%20using%20older%20versions.%0AThis%20guide%20documents%20the%20suggested%20best%20practices%20when%20migrating%20from%20an%20older%20version.%0A%0A-%20%5BFoundry%20v1.0%20migration%20guide%5D(%23foundry-v10-migration-guide)%0A%20%20-%20%5BSolc%20optimizer%20disabled%20by%20default%5D(%23solc-optimizer-disabled-by-default)%0A%20%20-%20%5BExpect%20revert%20cheatcode%20disabled%20on%20internal%20calls%20by%20default%5D(%23expect-revert-cheatcode-disabled-on-internal-calls-by-default)%0A%20%20-%20%5BRemoved%20support%20for%20testFail%20tests%5D(%23removed-support-for-testfail-tests)%0A%20%20-%20%5BRemoved%20support%20for%20legacy%20console.sol%20signatures%5D(%23removed-support-for-legacy-consolesol-signatures)%0A%20%20-%20%5BConflicting%20remappings%20are%20ignored%5D(%23conflicting-remappings-are-ignored)%0A%20%20-%20%5BArtifacts%20not%20persisted%20on%20%60forge%20coverage%60%5D(%23artifacts-not-persisted-on-forge-coverage)%0A%20%20-%20%5BOther%5D(%23other)%0A%0A%23%23%23%20Solc%20optimizer%20disabled%20by%20default%0A%0AEnabling%20optimizer%20by%20default%20could%20introduce%20bugs%20for%20seemingly%20correct%20code%20(if%20there%20are%20bugs%20in%20optimizer%20itself)%20-%20see%20%5B%232486%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F2486).%20Foundry%20%60v1.0%60%20default%20settings%20could%20affect%20current%20projects%20by%20reporting%20higher%20contract%20sizes%20and%20%2F%20or%20project%20build%20failures.%20It%20is%20recommended%20to%20explicitly%20enable%20optimizer%20and%20their%20runs%20in%20%60foundry.toml%60%20configuration%3A%0A%0A%60%60%60toml%0Aoptimizer%20%3D%20true%0Aoptimizer_runs%20%3D%20200%0A%60%60%60%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Projects%20using%20additional%20compiler%20profiles%20with%20optimizer%20runs%20but%20without%20explicitly%20enable%20optimizer%20could%20fail%20to%20build%20with%20%60Missing%20profile%20satisfying%20settings%20restrictions%60%20message.%0A%0ASee%3A%20%5Boptimizer%20configuration%5D(%2Fconfig%2Freference%2Fsolidity-compiler%23optimizer)%0A%0A%23%23%23%20Expect%20revert%20cheatcode%20disabled%20on%20internal%20calls%20by%20default%0A%0AWhen%20testing%20internal%20functions%20with%20%60vm.expectRevert%60%20cheatcode%20at%20the%20same%20call%20depth%20only%20the%20first%20%60vm.expectRevert%60%20is%20executed%20-%20see%20%5B%233437%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F3437).%20In%20Foundry%20%60v1.0%60%20default%20settings%20this%20behavior%20is%20disabled%20by%20default.%20This%20could%20affect%20current%20projects%20by%20reporting%20test%20failures%20as%20%60%5BFAIL%3A%20call%20didn't%20revert%20at%20a%20lower%20depth%20than%20cheatcode%20call%20depth%5D%60.%20It%20is%20recommended%20to%20review%20these%20failing%20tests%20and%20either%20enable%20revert%20on%20internal%20calls%20or%20rewrite%20tests%20to%20avoid%20this.%20%20%0AFor%20example%2C%20a%20test%20like%20the%20one%20below%3A%0A%0A%60%60%60solidity%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20error%20CustomError()%3B%0A%0A%20%20%20%20function%20revertWithCustomError()%20internal%20%7B%0A%20%20%20%20%20%20%20%20revert%20CustomError()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testExample()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20%20%20%20%20revertWithCustomError()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0Acan%20be%20changed%20to%20use%20a%20mock%20%60CustomContract%60%20that%20expose%20a%20public%20function%3A%0A%0A%60%60%60solidity%0Acontract%20CustomContract%20%7B%0A%20%20%20%20error%20CustomError()%3B%0A%0A%20%20%20%20function%20revertWithCustomError()%20external%20%7B%0A%20%20%20%20%20%20%20%20revert%20CustomError()%3B%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20CustomContract%20internal%20c%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%20new%20CustomContract()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testExample()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20%20%20%20%20c.revertWithCustomError()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0Aor%20configured%20to%20allow%20expect%20reverts%3A%0A%0A%60%60%60solidity%0A%20%20%20%20%2F%2F%2F%20forge-config%3A%20default.allow_internal_expect_revert%20%3D%20true%0A%20%20%20%20function%20testExample()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20%20%20%20%20revertWithCustomError()%3B%0A%20%20%20%20%7D%0A%60%60%60%0A%0ASee%3A%20%5B%60vm.expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert%23error)%20cheatcode%0A%0A%23%23%23%20Removed%20support%20for%20testFail%20tests%0A%0AThe%20%60testFail%60%20test%20prefix%20support%20is%20removed%20in%20Foundry%20%60v1.0%60%20in%20order%20to%20prevent%20confusion%20-%20see%20%5B%234437%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F4437).%20This%20could%20affect%20existing%20projects%20by%20reporting%20test%20failures%20where%20they're%20not%20expected.%20Existing%20%60testFail%60%20tests%20can%20be%20migrated%20for%20%60v1.0%60%20by%20using%20%60vm.expectRevert()%60%20cheatcode%20or%20by%20using%20a%20%60try%2Fcatch%60%20approach%20and%20assert%20the%20failure.%20%20%0AFor%20example%2C%20a%20test%20like%20the%20one%20below%3A%0A%0A%60%60%60solidity%0Afunction%20testFail_IncrementAsNotOwner()%20public%20%7B%0A%20%20%20%20vm.prank(address(0))%3B%0A%20%20%20%20upOnly.increment()%3B%0A%7D%0A%60%60%60%0A%0Acan%20be%20rewritten%20as%0A%0A%60%60%60solidity%0Afunction%20test_RevertWhen_CallerIsNotOwner()%20public%20%7B%0A%20%20%20%20vm.expectRevert(Unauthorized.selector)%3B%0A%20%20%20%20vm.prank(address(0))%3B%0A%20%20%20%20upOnly.increment()%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Removed%20support%20for%20legacy%20console.sol%20signatures%0A%0AFoundry%20%60v1.0%60%20removes%20the%20support%20for%20%60console.sol%60%20selectors%20that%20use%20the%20faulty%20ABI%20encoding%20-%20see%20%5B%238910%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F8910).%20This%20could%20affect%20existing%20projects%20by%20producing%20test%20build%20failures%2C%20therefore%20they%20need%20to%20be%20updated%20accordingly.%20For%20example%3A%0A%0A%60%60%60solidity%0Aconsole.log(%22testMisc%22%2C%2042)%3B%0Aconsole.log(0)%3B%0A%60%60%60%0A%0Ashould%20be%20rewritten%20as%0A%0A%60%60%60solidity%0Aconsole.log(%22testMisc%22%2C%20uint256(42))%3B%0Aconsole.log(uint256(0))%3B%0Aconsole.logUint(0)%3B%0A%60%60%60%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Latest%20%60forge-std%60%20version%20should%20be%20used%20in%20order%20to%20use%20the%20newly%20signatures%20for%20console%20logging%20and%20avoid%20unexpected%20behaviour.%0A%0A%23%23%23%20Conflicting%20remappings%20are%20ignored%0A%0APrior%20to%20Foundry%20%60v1.0%60%2C%20%60forge%60%20inferred%20remappings%20by%20taking%20into%20account%20remappings%20of%20sub-projects.%20When%20conflicting%20remappings%20were%20present%2C%20the%20longest%20%2F%20most%20specified%20had%20the%20priority.%20This%20was%20dangerous%2C%20as%20adding%20sub-projects%20were%20able%20to%20completely%20change%20the%20code%20that%20is%20executed%2C%20even%20if%20the%20remappings%20of%20the%20root%20project%20are%20not%20changed%20-%20see%20%5B%238910%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F9146).%0AWith%20%60v1.0%60%2C%20a%20project%20will%20fail%20to%20build%20if%20the%20same%20remapping%0A%0A%60%60%60toml%0A%40openzeppelin%2F%3Dlib%2Fopenzeppelin-contracts%2Fcontracts%2F%0A%60%60%60%0A%0Ais%20defined%20in%20both%20root%20project%20and%20in%20an%20imported%20dependency.%0ATo%20fix%20it%2C%20the%20project%20root%20remapping%20should%20be%20added%20in%20%60src%60%20context%3A%0A%0A%60%60%60toml%0Asrc%3A%40openzeppelin%2F%3Dlib%2Fopenzeppelin-contracts%2Fcontracts%2F%0A%60%60%60%0A%0A%23%23%23%20Artifacts%20not%20persisted%20on%20%60forge%20coverage%60%0A%0AIn%20prior%20versions%2C%20%60forge%20coverage%60%20was%20changing%20the%20artifacts%20(which%20are%20unoptimized%20in%20order%20to%20provide%20accurate%20source%20hit%20maps)%20without%20any%20warnings.%20This%20was%20confusing%20and%20was%20leading%20to%20undesired%20situations%20like%20the%20one%20in%20%5B%238840%20comment%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F8840%23issuecomment-2390792012).%20Foundry%20%60v1.0%60%20does%20not%20generate%20artifacts%20when%20running%20coverage%20anymore%20hence%20projects%20should%20be%20aware%20of%20the%20change.%0A%0A%23%23%23%20Other%0A%0A-%20%60FORGE_SNAPSHOT_CHECK%60%20requires%20boolean%20value.%20Use%20%60FORGE_SNAPSHOT_CHECK%3Dtrue%7Cfalse%60.%0A-%20%60forge%20inspect%20--pretty%60%20flag%20was%20removed.%20Use%20%60forge%20inspect%60%20for%20table%20view.%0A-%20%60forge%20bind%20--ethers%60%20was%20removed.%20Use%20%60forge%20bind%60%20(defaults%20to%20%60alloy%60).%0A-%20%60forge%20debug%60%20subcommand%20was%20removed.%20Use%20%60forge%20test%20--debug%60%20and%20%60forge%20script%20--debug%60.%0A-%20%60cast%20etherscan-source%60%20subcommand%20was%20replaced%20with%20%60cast%20source%60.%20Use%20additional%20%60explorer_url%60%20and%20%60explorer_api_url%60%20args%20for%20alternative%20block%20explorers.%0A-%20%60foundryup%60%20installs%20stable%20if%20no%20version%20specified.%20Use%20%60foundryup%20-i%20nightly%60%20to%20install%20nightly%20versions.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CmapAn8K.js"),__vite__mapDeps([32,1])),path:"/reference/README",type:"mdx",filePath:"reference/README.md",content:"%23%23%20References%0A%0A-%20%5Bforge%20Commands%5D(%2Fforge%2Freference%2Foverview)%0A-%20%5Bcast%20Commands%5D(%2Fcast%2Freference%2Foverview)%0A-%20%5Banvil%20Reference%5D(%2Fanvil%2Freference)%0A-%20%5Bchisel%20Reference%5D(%2Fchisel%2Freference)%0A-%20%5BConfig%20Reference%5D(%2Fconfig%2Freference%2Foverview)%0A-%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview)%0A-%20%5BForge%20Standard%20Library%20Reference%5D(%2Freference%2Fforge-std%2Foverview)%0A-%20%5Bds-test%20Reference%5D(%2Freference%2Fds-test)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CmapAn8K.js"),__vite__mapDeps([32,1])),path:"/reference/README.html",type:"mdx",filePath:"reference/README.md",content:"%23%23%20References%0A%0A-%20%5Bforge%20Commands%5D(%2Fforge%2Freference%2Foverview)%0A-%20%5Bcast%20Commands%5D(%2Fcast%2Freference%2Foverview)%0A-%20%5Banvil%20Reference%5D(%2Fanvil%2Freference)%0A-%20%5Bchisel%20Reference%5D(%2Fchisel%2Freference)%0A-%20%5BConfig%20Reference%5D(%2Fconfig%2Freference%2Foverview)%0A-%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview)%0A-%20%5BForge%20Standard%20Library%20Reference%5D(%2Freference%2Fforge-std%2Foverview)%0A-%20%5Bds-test%20Reference%5D(%2Freference%2Fds-test)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./ds-test-DE0Wye68.js"),__vite__mapDeps([33,1])),path:"/reference/ds-test",type:"mdx",filePath:"reference/ds-test.md",content:"%23%23%20DSTest%20Reference%0A%0ADappsys%20Test%20(DSTest%20for%20short)%20provides%20basic%20logging%20and%20assertion%20functionality.%20It%20is%20included%20in%20the%20Forge%20Standard%20Library.%0A%0ATo%20get%20access%20to%20the%20functions%2C%20import%20%60forge-std%2FTest.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20...%20tests%20...%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Logging%0A%0AThis%20is%20a%20complete%20overview%20of%20all%20the%20available%20logging%20events.%20For%20detailed%20descriptions%20and%20example%20usage%2C%20see%20below.%0A%0A%60%60%60solidity%0Aevent%20log%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(string)%3B%0Aevent%20logs%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(bytes)%3B%0A%0Aevent%20log_address%20%20%20%20%20%20%20%20%20%20%20%20(address)%3B%0Aevent%20log_bytes32%20%20%20%20%20%20%20%20%20%20%20%20(bytes32)%3B%0Aevent%20log_int%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(int)%3B%0Aevent%20log_uint%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(uint)%3B%0Aevent%20log_bytes%20%20%20%20%20%20%20%20%20%20%20%20%20%20(bytes)%3B%0Aevent%20log_string%20%20%20%20%20%20%20%20%20%20%20%20%20(string)%3B%0A%0Aevent%20log_named_address%20%20%20%20%20%20(string%20key%2C%20address%20val)%3B%0Aevent%20log_named_bytes32%20%20%20%20%20%20(string%20key%2C%20bytes32%20val)%3B%0Aevent%20log_named_decimal_int%20%20(string%20key%2C%20int%20val%2C%20uint%20decimals)%3B%0Aevent%20log_named_decimal_uint%20(string%20key%2C%20uint%20val%2C%20uint%20decimals)%3B%0Aevent%20log_named_int%20%20%20%20%20%20%20%20%20%20(string%20key%2C%20int%20val)%3B%0Aevent%20log_named_uint%20%20%20%20%20%20%20%20%20(string%20key%2C%20uint%20val)%3B%0Aevent%20log_named_bytes%20%20%20%20%20%20%20%20(string%20key%2C%20bytes%20val)%3B%0Aevent%20log_named_string%20%20%20%20%20%20%20(string%20key%2C%20string%20val)%3B%0A%60%60%60%0A%0A%23%23%23%20Logging%20events%0A%0AThis%20section%20documents%20all%20events%20for%20logging%20and%20provides%20usage%20examples.%0A%0A%23%23%23%23%20%60log%60%0A%0A%60%60%60solidity%0Aevent%20log(string)%3B%0A%60%60%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Aemit%20log(%22here%22)%3B%0A%2F%2F%20here%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20logs%0A%0A%60%60%60solidity%0Aevent%20logs(bytes)%3B%0A%60%60%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Aemit%20logs(bytes(%22abcd%22))%3B%0A%2F%2F%200x6162636400000000000000000000000000000000000000000000000000000000%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20log%5C_%5C%3Ctype%5C%3E%0A%0A%60%60%60solidity%0Aevent%20log_%3Ctype%3E(%3Ctype%3E)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60address%60%2C%20%60bytes32%60%2C%20%60int%60%2C%20%60uint%60%2C%20%60bytes%60%2C%20%60string%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20amount%20%3D%201%20ether%3B%0Aemit%20log_uint(amount)%3B%0A%2F%2F%201000000000000000000%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20log_named%5C_%5C%3Ctype%5C%3E%0A%0A%60%60%60solidity%0Aevent%20log_named_%3Ctype%3E(string%20key%2C%20%3Ctype%3E%20val)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60address%60%2C%20%60bytes32%60%2C%20%60int%60%2C%20%60uint%60%2C%20%60bytes%60%2C%20%60string%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20amount%20%3D%201%20ether%3B%0Aemit%20log_named_uint(%22Amount%22%2C%20amount)%3B%0A%2F%2F%20amount%3A%201000000000000000000%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20log_named_decimal%5C_%5C%3Ctype%5C%3E%0A%0A%60%60%60solidity%0Aevent%20log_named_decimal_%3Ctype%3E(string%20key%2C%20%3Ctype%3E%20val%2C%20uint%20decimals)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20amount%20%3D%201%20ether%3B%0Aemit%20log_named_decimal_uint(%22Amount%22%2C%20amount%2C%2018)%3B%0A%2F%2F%20amount%3A%201.000000000000000000%0A%60%60%60%0A%0A%23%23%23%20Asserting%0A%0AThis%20is%20a%20complete%20overview%20of%20all%20the%20available%20assertion%20functions.%20For%20detailed%20descriptions%20and%20example%20usage%2C%20see%20below.%0A%0A%60%60%60solidity%0A%2F%2F%20Assert%20the%20%60condition%60%20is%20true%0Afunction%20assertTrue(bool%20condition)%20internal%3B%0Afunction%20assertTrue(bool%20condition%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%60a%60%20is%20equal%20to%20%60b%60%0Afunction%20assertEq(address%20a%2C%20address%20b)%20internal%3B%0Afunction%20assertEq(address%20a%2C%20address%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(bytes32%20a%2C%20bytes32%20b)%20internal%3B%0Afunction%20assertEq(bytes32%20a%2C%20bytes32%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertEq(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertEq(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEqDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertEqDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEqDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertEqDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(string%20memory%20a%2C%20string%20memory%20b)%20internal%3B%0Afunction%20assertEq(string%20memory%20a%2C%20string%20memory%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq32(bytes32%20a%2C%20bytes32%20b)%20internal%3B%0Afunction%20assertEq32(bytes32%20a%2C%20bytes32%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq0(bytes%20memory%20a%2C%20bytes%20memory%20b)%20internal%3B%0Afunction%20assertEq0(bytes%20memory%20a%2C%20bytes%20memory%20b%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20greater%20than%20%60b%60%0Afunction%20assertGt(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertGt(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGt(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertGt(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20greater%20than%20or%20equal%20to%20%60b%60%0Afunction%20assertGe(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertGe(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGe(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertGe(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20lesser%20than%20%60b%60%0Afunction%20assertLt(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertLt(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLt(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertLt(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20lesser%20than%20or%20equal%20to%20%60b%60%0Afunction%20assertLe(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertLe(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLe(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertLe(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Asserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20absolute%20value.%0Afunction%20assertApproxEqAbs(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxDelta)%20internal%3B%0Afunction%20assertApproxEqAbs(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxDelta%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Asserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0Afunction%20assertApproxEqRel(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxPercentDelta)%20internal%3B%0Afunction%20assertApproxEqRel(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxPercentDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Assertion%20functions%0A%0AThis%20section%20documents%20all%20functions%20for%20asserting%20and%20provides%20usage%20examples.%0A%0A%23%23%23%23%20%60assertTrue%60%0A%0A%60%60%60solidity%0Afunction%20assertTrue(bool%20condition)%20internal%3B%0A%60%60%60%0A%0AAsserts%20the%20%60condition%60%20is%20true.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Abool%20success%20%3D%20contract.fun()%3B%0AassertTrue(success)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEq%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60address%60%2C%20%60bytes32%60%2C%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertEq(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEqDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertEqDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEq32%60%0A%0A%60%60%60solidity%0Afunction%20assertEq32(bytes32%20a%2C%20bytes32%20b)%20internal%3B%0A%60%60%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0AassertEq(bytes32(%22abcd%22)%2C%200x6162636400000000000000000000000000000000000000000000000000000000)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEq0%60%0A%0A%60%60%60solidity%0Afunction%20assertEq0(bytes%20a%2C%20bytes%20b)%20internal%3B%0A%60%60%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Astring%20memory%20name1%20%3D%20%22Alice%22%3B%0Astring%20memory%20name2%20%3D%20%22Bob%22%3B%0AassertEq0(bytes(name1)%2C%20bytes(name2))%3B%20%2F%2F%20%5BFAIL%5D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGt%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%202%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGt(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGtDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%202%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGtDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGe%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGe(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGeDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGeDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLt%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%202e18%20wei%3B%0AassertLt(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLtDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%202e18%20wei%3B%0AassertLtDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLe%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertLe(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLeDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertLeDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertApproxEqAbs%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint256%20maxDelta)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20absolute%20value.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Afunction%20testRevert%20()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%0A%20%20%20%20assertApproxEqAbs(a%2C%20b%2C%2090)%3B%0A%7D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertApproxEqRel%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint256%20maxPercentDelta)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Afunction%20testRevert%20()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%20%20%20%20assertApproxEqRel(a%2C%20b%2C%200.4e18)%3B%0A%7D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Information**%0A%3E%0A%3E%20You%20can%20pass%20a%20custom%20error%20message%20to%20the%20above%20functions%20by%20providing%20an%20additional%20parameter%20%60string%20err%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./ds-test-DE0Wye68.js"),__vite__mapDeps([33,1])),path:"/reference/ds-test.html",type:"mdx",filePath:"reference/ds-test.md",content:"%23%23%20DSTest%20Reference%0A%0ADappsys%20Test%20(DSTest%20for%20short)%20provides%20basic%20logging%20and%20assertion%20functionality.%20It%20is%20included%20in%20the%20Forge%20Standard%20Library.%0A%0ATo%20get%20access%20to%20the%20functions%2C%20import%20%60forge-std%2FTest.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20...%20tests%20...%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Logging%0A%0AThis%20is%20a%20complete%20overview%20of%20all%20the%20available%20logging%20events.%20For%20detailed%20descriptions%20and%20example%20usage%2C%20see%20below.%0A%0A%60%60%60solidity%0Aevent%20log%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(string)%3B%0Aevent%20logs%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(bytes)%3B%0A%0Aevent%20log_address%20%20%20%20%20%20%20%20%20%20%20%20(address)%3B%0Aevent%20log_bytes32%20%20%20%20%20%20%20%20%20%20%20%20(bytes32)%3B%0Aevent%20log_int%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(int)%3B%0Aevent%20log_uint%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(uint)%3B%0Aevent%20log_bytes%20%20%20%20%20%20%20%20%20%20%20%20%20%20(bytes)%3B%0Aevent%20log_string%20%20%20%20%20%20%20%20%20%20%20%20%20(string)%3B%0A%0Aevent%20log_named_address%20%20%20%20%20%20(string%20key%2C%20address%20val)%3B%0Aevent%20log_named_bytes32%20%20%20%20%20%20(string%20key%2C%20bytes32%20val)%3B%0Aevent%20log_named_decimal_int%20%20(string%20key%2C%20int%20val%2C%20uint%20decimals)%3B%0Aevent%20log_named_decimal_uint%20(string%20key%2C%20uint%20val%2C%20uint%20decimals)%3B%0Aevent%20log_named_int%20%20%20%20%20%20%20%20%20%20(string%20key%2C%20int%20val)%3B%0Aevent%20log_named_uint%20%20%20%20%20%20%20%20%20(string%20key%2C%20uint%20val)%3B%0Aevent%20log_named_bytes%20%20%20%20%20%20%20%20(string%20key%2C%20bytes%20val)%3B%0Aevent%20log_named_string%20%20%20%20%20%20%20(string%20key%2C%20string%20val)%3B%0A%60%60%60%0A%0A%23%23%23%20Logging%20events%0A%0AThis%20section%20documents%20all%20events%20for%20logging%20and%20provides%20usage%20examples.%0A%0A%23%23%23%23%20%60log%60%0A%0A%60%60%60solidity%0Aevent%20log(string)%3B%0A%60%60%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Aemit%20log(%22here%22)%3B%0A%2F%2F%20here%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20logs%0A%0A%60%60%60solidity%0Aevent%20logs(bytes)%3B%0A%60%60%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Aemit%20logs(bytes(%22abcd%22))%3B%0A%2F%2F%200x6162636400000000000000000000000000000000000000000000000000000000%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20log%5C_%5C%3Ctype%5C%3E%0A%0A%60%60%60solidity%0Aevent%20log_%3Ctype%3E(%3Ctype%3E)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60address%60%2C%20%60bytes32%60%2C%20%60int%60%2C%20%60uint%60%2C%20%60bytes%60%2C%20%60string%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20amount%20%3D%201%20ether%3B%0Aemit%20log_uint(amount)%3B%0A%2F%2F%201000000000000000000%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20log_named%5C_%5C%3Ctype%5C%3E%0A%0A%60%60%60solidity%0Aevent%20log_named_%3Ctype%3E(string%20key%2C%20%3Ctype%3E%20val)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60address%60%2C%20%60bytes32%60%2C%20%60int%60%2C%20%60uint%60%2C%20%60bytes%60%2C%20%60string%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20amount%20%3D%201%20ether%3B%0Aemit%20log_named_uint(%22Amount%22%2C%20amount)%3B%0A%2F%2F%20amount%3A%201000000000000000000%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20log_named_decimal%5C_%5C%3Ctype%5C%3E%0A%0A%60%60%60solidity%0Aevent%20log_named_decimal_%3Ctype%3E(string%20key%2C%20%3Ctype%3E%20val%2C%20uint%20decimals)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20amount%20%3D%201%20ether%3B%0Aemit%20log_named_decimal_uint(%22Amount%22%2C%20amount%2C%2018)%3B%0A%2F%2F%20amount%3A%201.000000000000000000%0A%60%60%60%0A%0A%23%23%23%20Asserting%0A%0AThis%20is%20a%20complete%20overview%20of%20all%20the%20available%20assertion%20functions.%20For%20detailed%20descriptions%20and%20example%20usage%2C%20see%20below.%0A%0A%60%60%60solidity%0A%2F%2F%20Assert%20the%20%60condition%60%20is%20true%0Afunction%20assertTrue(bool%20condition)%20internal%3B%0Afunction%20assertTrue(bool%20condition%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%60a%60%20is%20equal%20to%20%60b%60%0Afunction%20assertEq(address%20a%2C%20address%20b)%20internal%3B%0Afunction%20assertEq(address%20a%2C%20address%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(bytes32%20a%2C%20bytes32%20b)%20internal%3B%0Afunction%20assertEq(bytes32%20a%2C%20bytes32%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertEq(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertEq(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEqDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertEqDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEqDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertEqDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq(string%20memory%20a%2C%20string%20memory%20b)%20internal%3B%0Afunction%20assertEq(string%20memory%20a%2C%20string%20memory%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq32(bytes32%20a%2C%20bytes32%20b)%20internal%3B%0Afunction%20assertEq32(bytes32%20a%2C%20bytes32%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertEq0(bytes%20memory%20a%2C%20bytes%20memory%20b)%20internal%3B%0Afunction%20assertEq0(bytes%20memory%20a%2C%20bytes%20memory%20b%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20greater%20than%20%60b%60%0Afunction%20assertGt(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertGt(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGt(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertGt(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20greater%20than%20or%20equal%20to%20%60b%60%0Afunction%20assertGe(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertGe(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGe(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertGe(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertGeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertGeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20lesser%20than%20%60b%60%0Afunction%20assertLt(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertLt(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLt(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertLt(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLtDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLtDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Assert%20%20%60a%60%20is%20lesser%20than%20or%20equal%20to%20%60b%60%0Afunction%20assertLe(uint%20a%2C%20uint%20b)%20internal%3B%0Afunction%20assertLe(uint%20a%2C%20uint%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLe(int%20a%2C%20int%20b)%20internal%3B%0Afunction%20assertLe(int%20a%2C%20int%20b%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLeDecimal(int%20a%2C%20int%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0Afunction%20assertLeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals)%20internal%3B%0Afunction%20assertLeDecimal(uint%20a%2C%20uint%20b%2C%20uint%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Asserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20absolute%20value.%0Afunction%20assertApproxEqAbs(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxDelta)%20internal%3B%0Afunction%20assertApproxEqAbs(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxDelta%2C%20string%20memory%20err)%20internal%3B%0A%0A%2F%2F%20Asserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0Afunction%20assertApproxEqRel(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxPercentDelta)%20internal%3B%0Afunction%20assertApproxEqRel(uint256%20a%2C%20uint256%20b%2C%20uint256%20maxPercentDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Assertion%20functions%0A%0AThis%20section%20documents%20all%20functions%20for%20asserting%20and%20provides%20usage%20examples.%0A%0A%23%23%23%23%20%60assertTrue%60%0A%0A%60%60%60solidity%0Afunction%20assertTrue(bool%20condition)%20internal%3B%0A%60%60%60%0A%0AAsserts%20the%20%60condition%60%20is%20true.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Abool%20success%20%3D%20contract.fun()%3B%0AassertTrue(success)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEq%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60address%60%2C%20%60bytes32%60%2C%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertEq(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEqDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertEqDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEq32%60%0A%0A%60%60%60solidity%0Afunction%20assertEq32(bytes32%20a%2C%20bytes32%20b)%20internal%3B%0A%60%60%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0AassertEq(bytes32(%22abcd%22)%2C%200x6162636400000000000000000000000000000000000000000000000000000000)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertEq0%60%0A%0A%60%60%60solidity%0Afunction%20assertEq0(bytes%20a%2C%20bytes%20b)%20internal%3B%0A%60%60%60%0A%0AAsserts%20%60a%60%20is%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Astring%20memory%20name1%20%3D%20%22Alice%22%3B%0Astring%20memory%20name2%20%3D%20%22Bob%22%3B%0AassertEq0(bytes(name1)%2C%20bytes(name2))%3B%20%2F%2F%20%5BFAIL%5D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGt%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%202%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGt(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGtDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%202%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGtDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGe%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGe(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertGeDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20greater%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertGeDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLt%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%202e18%20wei%3B%0AassertLt(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLtDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%202e18%20wei%3B%0AassertLtDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLe%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertLe(a%2C%20b)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertLeDecimal%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint%20decimals)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20lesser%20than%20or%20equal%20to%20%60b%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20a%20%3D%201%20ether%3B%0Auint256%20b%20%3D%201e18%20wei%3B%0AassertLeDecimal(a%2C%20b%2C%2018)%3B%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertApproxEqAbs%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint256%20maxDelta)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20absolute%20value.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Afunction%20testRevert%20()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%0A%20%20%20%20assertApproxEqAbs(a%2C%20b%2C%2090)%3B%0A%7D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A---%0A%0A%23%23%23%23%20%60assertApproxEqRel%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(%3Ctype%3E%20a%2C%20%3Ctype%3E%20b%2C%20uint256%20maxPercentDelta)%20internal%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int%60%2C%20%60uint%60%0A%0AAsserts%20%60a%60%20is%20approximately%20equal%20to%20%60b%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0Afunction%20testRevert%20()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%20%20%20%20assertApproxEqRel(a%2C%20b%2C%200.4e18)%3B%0A%7D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Information**%0A%3E%0A%3E%20You%20can%20pass%20a%20custom%20error%20message%20to%20the%20above%20functions%20by%20providing%20an%20additional%20parameter%20%60string%20err%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./abi-commands-CwFRSCOZ.js"),__vite__mapDeps([34,1])),path:"/cast/reference/abi-commands",type:"mdx",filePath:"cast/reference/abi-commands.mdx",content:"%23%23%20ABI%20Commands%0A%0A-%20%5Bcast%20abi-encode%5D(%2Fcast%2Freference%2Fcast-abi-encode)%0A-%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte)%0A-%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata)%0A-%20%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event)%0A-%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-calldata)%0A-%20%5Bcast%20decode-abi%5D(%2Fcast%2Freference%2Fcast-decode-abi)%0A-%20%5Bcast%20decode-calldata%5D(%2Fcast%2Freference%2Fcast-decode-calldata)%0A-%20%5Bcast%20pretty-calldata%5D(%2Fcast%2Freference%2Fcast-pretty-calldata)%0A-%20%5Bcast%20selectors%5D(%2Fcast%2Freference%2Fcast-selectors)%0A-%20%5Bcast%20upload-signature%5D(%2Fcast%2Freference%2Fcast-upload-signature)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./abi-commands-CwFRSCOZ.js"),__vite__mapDeps([34,1])),path:"/cast/reference/abi-commands.html",type:"mdx",filePath:"cast/reference/abi-commands.mdx",content:"%23%23%20ABI%20Commands%0A%0A-%20%5Bcast%20abi-encode%5D(%2Fcast%2Freference%2Fcast-abi-encode)%0A-%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte)%0A-%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata)%0A-%20%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event)%0A-%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-calldata)%0A-%20%5Bcast%20decode-abi%5D(%2Fcast%2Freference%2Fcast-decode-abi)%0A-%20%5Bcast%20decode-calldata%5D(%2Fcast%2Freference%2Fcast-decode-calldata)%0A-%20%5Bcast%20pretty-calldata%5D(%2Fcast%2Freference%2Fcast-pretty-calldata)%0A-%20%5Bcast%20selectors%5D(%2Fcast%2Freference%2Fcast-selectors)%0A-%20%5Bcast%20upload-signature%5D(%2Fcast%2Freference%2Fcast-upload-signature)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./account-commands-OxoYF-jr.js"),__vite__mapDeps([35,1])),path:"/cast/reference/account-commands",type:"mdx",filePath:"cast/reference/account-commands.mdx",content:"%23%23%20Account%20Commands%0A%0A-%20%5Bcast%20balance%5D(%2Fcast%2Freference%2Fcast-balance)%0A-%20%5Bcast%20storage%5D(%2Fcast%2Freference%2Fcast-storage)%0A-%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof)%0A-%20%5Bcast%20nonce%5D(%2Fcast%2Freference%2Fcast-nonce)%0A-%20%5Bcast%20code%5D(%2Fcast%2Freference%2Fcast-code)%0A-%20%5Bcast%20codesize%5D(%2Fcast%2Freference%2Fcast-codesize)%0A-%20%5Bcast%20index%5D(%2Fcast%2Freference%2Fcast-index)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./account-commands-OxoYF-jr.js"),__vite__mapDeps([35,1])),path:"/cast/reference/account-commands.html",type:"mdx",filePath:"cast/reference/account-commands.mdx",content:"%23%23%20Account%20Commands%0A%0A-%20%5Bcast%20balance%5D(%2Fcast%2Freference%2Fcast-balance)%0A-%20%5Bcast%20storage%5D(%2Fcast%2Freference%2Fcast-storage)%0A-%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof)%0A-%20%5Bcast%20nonce%5D(%2Fcast%2Freference%2Fcast-nonce)%0A-%20%5Bcast%20code%5D(%2Fcast%2Freference%2Fcast-code)%0A-%20%5Bcast%20codesize%5D(%2Fcast%2Freference%2Fcast-codesize)%0A-%20%5Bcast%20index%5D(%2Fcast%2Freference%2Fcast-index)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./block-commands-BStS28yk.js"),__vite__mapDeps([36,1])),path:"/cast/reference/block-commands",type:"mdx",filePath:"cast/reference/block-commands.mdx",content:"%23%23%20Block%20Commands%0A%0A-%20%5Bcast%20find-block%5D(%2Fcast%2Freference%2Fcast-find-block)%0A-%20%5Bcast%20gas-price%5D(%2Fcast%2Freference%2Fcast-gas-price)%0A-%20%5Bcast%20block-number%5D(%2Fcast%2Freference%2Fcast-block-number)%0A-%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee)%0A-%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block)%0A-%20%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./block-commands-BStS28yk.js"),__vite__mapDeps([36,1])),path:"/cast/reference/block-commands.html",type:"mdx",filePath:"cast/reference/block-commands.mdx",content:"%23%23%20Block%20Commands%0A%0A-%20%5Bcast%20find-block%5D(%2Fcast%2Freference%2Fcast-find-block)%0A-%20%5Bcast%20gas-price%5D(%2Fcast%2Freference%2Fcast-gas-price)%0A-%20%5Bcast%20block-number%5D(%2Fcast%2Freference%2Fcast-block-number)%0A-%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee)%0A-%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block)%0A-%20%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-4byte-calldata-RBOmf5x1.js"),__vite__mapDeps([37,38,1])),path:"/cast/reference/cast-4byte-calldata",type:"mdx",filePath:"cast/reference/cast-4byte-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%204byte-calldata%0A%0A%23%23%23%20NAME%0A%0Acast-4byte-calldata%20-%20Decode%20ABI-encoded%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%204byte-calldata%60%20%5B*options*%5D%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecode%20ABI-encoded%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%204byte%20Options%0A%0A%60--id%60%20_id_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20index%20of%20the%20resolved%20signature%20to%20use.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3Bhttps%3A%2F%2Fopenchain.xyz%2Fsignatures%20can%20have%20multiple%20possible%20signatures%20for%20a%20given%20selector.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20index%20can%20be%20an%20integer%2C%20or%20the%20tags%20%22earliest%22%20and%20%22latest%22.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20calldata%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%204byte-calldata%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d00000000000000000000000000000000000000000000000000174b37380cea000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte)%2C%20%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-4byte-calldata-RBOmf5x1.js"),__vite__mapDeps([37,38,1])),path:"/cast/reference/cast-4byte-calldata.html",type:"mdx",filePath:"cast/reference/cast-4byte-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%204byte-calldata%0A%0A%23%23%23%20NAME%0A%0Acast-4byte-calldata%20-%20Decode%20ABI-encoded%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%204byte-calldata%60%20%5B*options*%5D%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecode%20ABI-encoded%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%204byte%20Options%0A%0A%60--id%60%20_id_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20index%20of%20the%20resolved%20signature%20to%20use.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3Bhttps%3A%2F%2Fopenchain.xyz%2Fsignatures%20can%20have%20multiple%20possible%20signatures%20for%20a%20given%20selector.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20index%20can%20be%20an%20integer%2C%20or%20the%20tags%20%22earliest%22%20and%20%22latest%22.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20calldata%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%204byte-calldata%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d00000000000000000000000000000000000000000000000000174b37380cea000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte)%2C%20%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-4byte-event-DG8eQIaD.js"),__vite__mapDeps([39,38,1])),path:"/cast/reference/cast-4byte-event",type:"mdx",filePath:"cast/reference/cast-4byte-event.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%204byte-event%0A%0A%23%23%23%20NAME%0A%0Acast-4byte-event%20-%20Get%20the%20event%20signature%20for%20a%20given%20topic%200%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%204byte-event%60%20%5B*options*%5D%20_topic_0_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20event%20signature%20for%20a%20given%20topic%200%20from%20https%3A%2F%2Fopenchain.xyz%2Fsignatures.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20event%20signature%20for%20a%20topic%200%20of%20%600xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%204byte-event%200xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte.mdx)%2C%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-4byte-event-DG8eQIaD.js"),__vite__mapDeps([39,38,1])),path:"/cast/reference/cast-4byte-event.html",type:"mdx",filePath:"cast/reference/cast-4byte-event.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%204byte-event%0A%0A%23%23%23%20NAME%0A%0Acast-4byte-event%20-%20Get%20the%20event%20signature%20for%20a%20given%20topic%200%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%204byte-event%60%20%5B*options*%5D%20_topic_0_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20event%20signature%20for%20a%20given%20topic%200%20from%20https%3A%2F%2Fopenchain.xyz%2Fsignatures.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20event%20signature%20for%20a%20topic%200%20of%20%600xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%204byte-event%200xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte.mdx)%2C%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-4byte-BhsJypMz.js"),__vite__mapDeps([40,38,1])),path:"/cast/reference/cast-4byte",type:"mdx",filePath:"cast/reference/cast-4byte.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%204byte%0A%0A%23%23%23%20NAME%0A%0Acast-4byte%20-%20Get%20the%20function%20signatures%20for%20the%20given%20selector%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%204byte%60%20%5B*options*%5D%20_sig_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20function%20signatures%20for%20the%20given%20selector%20from%20https%3A%2F%2Fopenchain.xyz%2Fsignatures.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20function%20signature%20for%20the%20selector%20%600x8cc5ce99%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%204byte%200x8cc5ce99%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%2C%20%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event.mdx)%2C%20%5Bcast%20selectors%5D(%2Fcast%2Freference%2Fcast-selectors.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-4byte-BhsJypMz.js"),__vite__mapDeps([40,38,1])),path:"/cast/reference/cast-4byte.html",type:"mdx",filePath:"cast/reference/cast-4byte.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%204byte%0A%0A%23%23%23%20NAME%0A%0Acast-4byte%20-%20Get%20the%20function%20signatures%20for%20the%20given%20selector%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%204byte%60%20%5B*options*%5D%20_sig_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20function%20signatures%20for%20the%20given%20selector%20from%20https%3A%2F%2Fopenchain.xyz%2Fsignatures.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20function%20signature%20for%20the%20selector%20%600x8cc5ce99%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%204byte%200x8cc5ce99%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%2C%20%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event.mdx)%2C%20%5Bcast%20selectors%5D(%2Fcast%2Freference%2Fcast-selectors.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-abi-encode-Ds0MAWHl.js"),__vite__mapDeps([41,38,1])),path:"/cast/reference/cast-abi-encode",type:"mdx",filePath:"cast/reference/cast-abi-encode.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20abi-encode%0A%0A%23%23%23%20NAME%0A%0Acast-abi-encode%20-%20ABI%20encode%20the%20given%20function%20arguments%2C%20excluding%20the%20selector.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20abi-encode%60%20%5B*options*%5D%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AABI%20encode%20the%20given%20function%2C%20excluding%20the%20selector.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20ABI-encode%20the%20arguments%20for%20a%20call%20to%20%60someFunc(address%2Cuint256)%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20abi-encode%20%22someFunc(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A2.%20For%20encoding%20a%20type%20with%20components%20(as%20a%20tuple%2C%20or%20custom%20struct)%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20abi-encode%20%22someFunc((string%2Cuint256))%22%20%22(myString%2C1)%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-abi-encode-Ds0MAWHl.js"),__vite__mapDeps([41,38,1])),path:"/cast/reference/cast-abi-encode.html",type:"mdx",filePath:"cast/reference/cast-abi-encode.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20abi-encode%0A%0A%23%23%23%20NAME%0A%0Acast-abi-encode%20-%20ABI%20encode%20the%20given%20function%20arguments%2C%20excluding%20the%20selector.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20abi-encode%60%20%5B*options*%5D%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AABI%20encode%20the%20given%20function%2C%20excluding%20the%20selector.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20ABI-encode%20the%20arguments%20for%20a%20call%20to%20%60someFunc(address%2Cuint256)%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20abi-encode%20%22someFunc(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A2.%20For%20encoding%20a%20type%20with%20components%20(as%20a%20tuple%2C%20or%20custom%20struct)%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20abi-encode%20%22someFunc((string%2Cuint256))%22%20%22(myString%2C1)%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-access-list-BXOwUrTo.js"),__vite__mapDeps([42,43,1,44,45,46,47,48,49,50,51,38])),path:"/cast/reference/cast-access-list",type:"mdx",filePath:"cast/reference/cast-access-list.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20access-list%0A%0A%23%23%23%20NAME%0A%0Acast-access-list%20-%20Create%20an%20access%20list%20for%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20access-list%60%20%5B*options*%5D%20_to_%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20an%20access%20list%20for%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-access-list-BXOwUrTo.js"),__vite__mapDeps([42,43,1,44,45,46,47,48,49,50,51,38])),path:"/cast/reference/cast-access-list.html",type:"mdx",filePath:"cast/reference/cast-access-list.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20access-list%0A%0A%23%23%23%20NAME%0A%0Acast-access-list%20-%20Create%20an%20access%20list%20for%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20access-list%60%20%5B*options*%5D%20_to_%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20an%20access%20list%20for%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-address-zero-Ci5VbQnz.js"),__vite__mapDeps([52,38,1])),path:"/cast/reference/cast-address-zero",type:"mdx",filePath:"cast/reference/cast-address-zero.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20address-zero%0A%0A%23%23%23%20NAME%0A%0Acast%20address-zero%20-%20Prints%20the%20zero%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20address-zero%60%0A%0A%23%23%23%20DESCRIPTION%0A%0APrints%20the%20zero%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-address-zero-Ci5VbQnz.js"),__vite__mapDeps([52,38,1])),path:"/cast/reference/cast-address-zero.html",type:"mdx",filePath:"cast/reference/cast-address-zero.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20address-zero%0A%0A%23%23%23%20NAME%0A%0Acast%20address-zero%20-%20Prints%20the%20zero%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20address-zero%60%0A%0A%23%23%23%20DESCRIPTION%0A%0APrints%20the%20zero%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-age-CbayrzDO.js"),__vite__mapDeps([53,50,1,38])),path:"/cast/reference/cast-age",type:"mdx",filePath:"cast/reference/cast-age.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20age%0A%0A%23%23%23%20NAME%0A%0Acast-age%20-%20Get%20the%20timestamp%20of%20a%20block.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20age%60%20%5B*options*%5D%20%5B*block*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20timestamp%20of%20a%20block.%0A%0AThe%20specified%20_block_%20can%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%20Default%20to%20%60latest%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20timestamp%20of%20the%20latest%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20age%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20timestamp%20of%20the%20genesis%20block%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20age%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%2C%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-age-CbayrzDO.js"),__vite__mapDeps([53,50,1,38])),path:"/cast/reference/cast-age.html",type:"mdx",filePath:"cast/reference/cast-age.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20age%0A%0A%23%23%23%20NAME%0A%0Acast-age%20-%20Get%20the%20timestamp%20of%20a%20block.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20age%60%20%5B*options*%5D%20%5B*block*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20timestamp%20of%20a%20block.%0A%0AThe%20specified%20_block_%20can%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%20Default%20to%20%60latest%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20timestamp%20of%20the%20latest%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20age%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20timestamp%20of%20the%20genesis%20block%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20age%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%2C%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-balance-COOsDLO8.js"),__vite__mapDeps([54,50,1,38])),path:"/cast/reference/cast-balance",type:"mdx",filePath:"cast/reference/cast-balance.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20balance%0A%0A%23%23%23%20NAME%0A%0Acast-balance%20-%20Get%20the%20balance%20of%20an%20account%20in%20wei.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20balance%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20balance%20of%20an%20account.%0A%0AThe%20argument%20_who_%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%60-e%60%20_ether_%20%20%0A%60--ether%60%20_ether_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20If%20this%20flag%20is%20used%20then%20balance%20will%20be%20shown%20in%20ether%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20balance%20of%20beer.eth%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20balance%20beer.eth%0A%20%20%20%60%60%60%0A2.%20Get%20the%20ERC20%20balance%20of%20any%20address%20using%20RPC%20URL%0A%0A%20%20%20%60%60%60sh%0A%20%20%20%23%20To%20load%20the%20variables%20in%20the%20.env%20file%0A%20%20%20source%20.env%0A%0A%20%20%20%23%20To%20get%20the%20USDT%20balance%20of%20Binance%0A%20%20%20cast%20balance%20--erc20%200xdAC17F958D2ee523a2206206994597C13D831ec7%200xF977814e90dA44bFA03b6295A0616a897441aceC%20--rpc-url%20%24MAINNET_RPC_URL%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20nonce%5D(%2Fcast%2Freference%2Fcast-nonce.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-balance-COOsDLO8.js"),__vite__mapDeps([54,50,1,38])),path:"/cast/reference/cast-balance.html",type:"mdx",filePath:"cast/reference/cast-balance.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20balance%0A%0A%23%23%23%20NAME%0A%0Acast-balance%20-%20Get%20the%20balance%20of%20an%20account%20in%20wei.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20balance%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20balance%20of%20an%20account.%0A%0AThe%20argument%20_who_%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%60-e%60%20_ether_%20%20%0A%60--ether%60%20_ether_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20If%20this%20flag%20is%20used%20then%20balance%20will%20be%20shown%20in%20ether%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20balance%20of%20beer.eth%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20balance%20beer.eth%0A%20%20%20%60%60%60%0A2.%20Get%20the%20ERC20%20balance%20of%20any%20address%20using%20RPC%20URL%0A%0A%20%20%20%60%60%60sh%0A%20%20%20%23%20To%20load%20the%20variables%20in%20the%20.env%20file%0A%20%20%20source%20.env%0A%0A%20%20%20%23%20To%20get%20the%20USDT%20balance%20of%20Binance%0A%20%20%20cast%20balance%20--erc20%200xdAC17F958D2ee523a2206206994597C13D831ec7%200xF977814e90dA44bFA03b6295A0616a897441aceC%20--rpc-url%20%24MAINNET_RPC_URL%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20nonce%5D(%2Fcast%2Freference%2Fcast-nonce.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-basefee-4KXqFjqi.js"),__vite__mapDeps([55,50,1,38])),path:"/cast/reference/cast-basefee",type:"mdx",filePath:"cast/reference/cast-basefee.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20basefee%0A%0A%23%23%23%20NAME%0A%0Acast-base-fee%20-%20Get%20the%20basefee%20of%20a%20block.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20base-fee%60%20%5B*options*%5D%20%5B*block*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20basefee%20of%20a%20block.%0A%0AThe%20specified%20_block_%20can%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%20Default%20to%20%60latest%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20basefee%20of%20the%20latest%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20base-fee%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20basefee%20of%20the%20genesis%20block%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20base-fee%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%2C%20%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-basefee-4KXqFjqi.js"),__vite__mapDeps([55,50,1,38])),path:"/cast/reference/cast-basefee.html",type:"mdx",filePath:"cast/reference/cast-basefee.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20basefee%0A%0A%23%23%23%20NAME%0A%0Acast-base-fee%20-%20Get%20the%20basefee%20of%20a%20block.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20base-fee%60%20%5B*options*%5D%20%5B*block*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20basefee%20of%20a%20block.%0A%0AThe%20specified%20_block_%20can%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%20Default%20to%20%60latest%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20basefee%20of%20the%20latest%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20base-fee%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20basefee%20of%20the%20genesis%20block%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20base-fee%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%2C%20%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-block-number-Cq24MSIK.js"),__vite__mapDeps([56,50,1,38])),path:"/cast/reference/cast-block-number",type:"mdx",filePath:"cast/reference/cast-block-number.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20block-number%0A%0A%23%23%23%20NAME%0A%0Acast-block-number%20-%20Get%20the%20latest%20block%20number.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20block-number%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20latest%20block%20number.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20latest%20block%20number%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block-number%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-block-number-Cq24MSIK.js"),__vite__mapDeps([56,50,1,38])),path:"/cast/reference/cast-block-number.html",type:"mdx",filePath:"cast/reference/cast-block-number.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20block-number%0A%0A%23%23%23%20NAME%0A%0Acast-block-number%20-%20Get%20the%20latest%20block%20number.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20block-number%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20latest%20block%20number.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20latest%20block%20number%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block-number%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-block-DmwPOBN4.js"),__vite__mapDeps([57,58,1,50,38])),path:"/cast/reference/cast-block",type:"mdx",filePath:"cast/reference/cast-block.mdx",content:"import%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20block%0A%0A%23%23%23%20NAME%0A%0Acast-block%20-%20Get%20information%20about%20a%20block.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20block%60%20%5B*options*%5D%20%5B*block*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20information%20about%20a%20block.%0A%0AThe%20specified%20_block_%20can%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%20Default%20to%20%60latest%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%60-f%60%20_field_%20%20%0A%60--field%60%20_field_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20If%20specified%2C%20only%20get%20the%20given%20field%20of%20the%20block.%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20latest%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20%60finalized%60%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block%20finalized%0A%20%20%20%60%60%60%0A%0A3.%20Get%20the%20hash%20of%20the%20latest%20block%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block%20latest%20-f%20hash%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%2C%20%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-block-DmwPOBN4.js"),__vite__mapDeps([57,58,1,50,38])),path:"/cast/reference/cast-block.html",type:"mdx",filePath:"cast/reference/cast-block.mdx",content:"import%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20block%0A%0A%23%23%23%20NAME%0A%0Acast-block%20-%20Get%20information%20about%20a%20block.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20block%60%20%5B*options*%5D%20%5B*block*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20information%20about%20a%20block.%0A%0AThe%20specified%20_block_%20can%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%20Default%20to%20%60latest%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%60-f%60%20_field_%20%20%0A%60--field%60%20_field_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20If%20specified%2C%20only%20get%20the%20given%20field%20of%20the%20block.%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20latest%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20%60finalized%60%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block%20finalized%0A%20%20%20%60%60%60%0A%0A3.%20Get%20the%20hash%20of%20the%20latest%20block%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20block%20latest%20-f%20hash%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%2C%20%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-call-oCTnwwKi.js"),__vite__mapDeps([59,43,1,44,45,46,47,48,49,50,51,38])),path:"/cast/reference/cast-call",type:"mdx",filePath:"cast/reference/cast-call.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20call%0A%0A%23%23%23%20NAME%0A%0Acast-call%20-%20Perform%20a%20call%20on%20an%20account%20without%20publishing%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20call%60%20%5B*options*%5D%20_to_%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20call%20on%20an%20account%20without%20publishing%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%60--trace%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20traces%20for%20the%20transaction.%0A%0A%60--debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpens%20an%20interactive%20debugger%20with%20the%20transaction.%20Needs%20%60--trace%60.%0A%0A%60--labels%20%3Caddress%3Alabel%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BLabels%20to%20apply%20to%20the%20traces%2C%20with%20the%20format%20%60address%3Alabel%60.%20Needs%20%60--trace%60.%0A%0A%60--evm-version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20EVM%20version%20to%20use.%20Needs%20%60--trace%60.%0A%0A%60--data%60%20data%5C%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAllows%20setting%20the%20data%20field%20directly%20without%20providing%0Asig%20%5Bargs%E2%80%A6%5D.%5C%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BData%20needs%20to%20be%20in%20hexadecimal%20format.%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Call%20%60balanceOf(address)%60%20on%20the%20WETH%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%20%20%20%20%20%22balanceOf(address)(uint256)%22%200x...%0A%20%20%20%60%60%60%0A%0A2.%20Call%20%60tokenURI(uint256)(string)%60%20on%20the%20Tubby%20Cats%20NFT%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20export%20CONTRACT%3D0xca7ca7bcc765f77339be2d648ba53ce9c8a262bd%0A%20%20%20export%20TOKEN_ID%3D19938%0A%20%20%20cast%20call%20%24CONTRACT%20%22tokenURI(uint256)(string)%22%20%24TOKEN_ID%0A%20%20%20%60%60%60%0A%0A3.%20Call%20%60getAmountsOut(uint%2Caddress%5B%5D)%60%20on%20the%20Uniswap%20v2%20router%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%200x7a250d5630B4cF539739dF2C5dAcb4c659F2488D%20%5C%0A%20%20%20%20%22getAmountsOut(uint%2Caddress%5B%5D)%22%201%20%22%5B0x6b...0f%2C0xc0...c2%5D%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-call-oCTnwwKi.js"),__vite__mapDeps([59,43,1,44,45,46,47,48,49,50,51,38])),path:"/cast/reference/cast-call.html",type:"mdx",filePath:"cast/reference/cast-call.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20call%0A%0A%23%23%23%20NAME%0A%0Acast-call%20-%20Perform%20a%20call%20on%20an%20account%20without%20publishing%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20call%60%20%5B*options*%5D%20_to_%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20call%20on%20an%20account%20without%20publishing%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%60--trace%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20traces%20for%20the%20transaction.%0A%0A%60--debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpens%20an%20interactive%20debugger%20with%20the%20transaction.%20Needs%20%60--trace%60.%0A%0A%60--labels%20%3Caddress%3Alabel%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BLabels%20to%20apply%20to%20the%20traces%2C%20with%20the%20format%20%60address%3Alabel%60.%20Needs%20%60--trace%60.%0A%0A%60--evm-version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20EVM%20version%20to%20use.%20Needs%20%60--trace%60.%0A%0A%60--data%60%20data%5C%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAllows%20setting%20the%20data%20field%20directly%20without%20providing%0Asig%20%5Bargs%E2%80%A6%5D.%5C%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BData%20needs%20to%20be%20in%20hexadecimal%20format.%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Call%20%60balanceOf(address)%60%20on%20the%20WETH%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%20%20%20%20%20%22balanceOf(address)(uint256)%22%200x...%0A%20%20%20%60%60%60%0A%0A2.%20Call%20%60tokenURI(uint256)(string)%60%20on%20the%20Tubby%20Cats%20NFT%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20export%20CONTRACT%3D0xca7ca7bcc765f77339be2d648ba53ce9c8a262bd%0A%20%20%20export%20TOKEN_ID%3D19938%0A%20%20%20cast%20call%20%24CONTRACT%20%22tokenURI(uint256)(string)%22%20%24TOKEN_ID%0A%20%20%20%60%60%60%0A%0A3.%20Call%20%60getAmountsOut(uint%2Caddress%5B%5D)%60%20on%20the%20Uniswap%20v2%20router%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%200x7a250d5630B4cF539739dF2C5dAcb4c659F2488D%20%5C%0A%20%20%20%20%22getAmountsOut(uint%2Caddress%5B%5D)%22%201%20%22%5B0x6b...0f%2C0xc0...c2%5D%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-calldata--9EUB6v7.js"),__vite__mapDeps([60,38,1])),path:"/cast/reference/cast-calldata",type:"mdx",filePath:"cast/reference/cast-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20calldata%0A%0A%23%23%23%20NAME%0A%0Acast-calldata%20-%20ABI-encode%20a%20function%20with%20arguments.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20calldata%60%20%5B*options*%5D%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AABI-encode%20a%20function%20with%20arguments.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20ABI-encode%20the%20arguments%20for%20a%20call%20to%20%60someFunc(address%2Cuint256)%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20calldata%20%22someFunc(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20abi-encode%5D(%2Fcast%2Freference%2Fcast-abi-encode.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-calldata--9EUB6v7.js"),__vite__mapDeps([60,38,1])),path:"/cast/reference/cast-calldata.html",type:"mdx",filePath:"cast/reference/cast-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20calldata%0A%0A%23%23%23%20NAME%0A%0Acast-calldata%20-%20ABI-encode%20a%20function%20with%20arguments.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20calldata%60%20%5B*options*%5D%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AABI-encode%20a%20function%20with%20arguments.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20ABI-encode%20the%20arguments%20for%20a%20call%20to%20%60someFunc(address%2Cuint256)%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20calldata%20%22someFunc(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20abi-encode%5D(%2Fcast%2Freference%2Fcast-abi-encode.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-chain-id-BEkP1EEm.js"),__vite__mapDeps([61,50,1,38])),path:"/cast/reference/cast-chain-id",type:"mdx",filePath:"cast/reference/cast-chain-id.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20chain-id%0A%0A%23%23%23%20NAME%0A%0Acast-chain-id%20-%20Get%20the%20Ethereum%20chain%20ID.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20chain-id%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20Ethereum%20%5Bchain%20ID%5D%5Bchain-id%5D%20from%20the%20RPC%20endpoint%20we%20are%20connected%20to.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20chain%20ID%20when%20talking%20to%20%60%24RPC%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain-id%20--rpc-url%20%24RPC%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20chain%20ID%20when%20%60%24ETH_RPC_URL%60%20is%20set%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain-id%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20chain%5D(%2Fcast%2Freference%2Fcast-chain.mdx)%0A%0A%5Bchain-id%5D%3A%20https%3A%2F%2Fchainlist.org%2F%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-chain-id-BEkP1EEm.js"),__vite__mapDeps([61,50,1,38])),path:"/cast/reference/cast-chain-id.html",type:"mdx",filePath:"cast/reference/cast-chain-id.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20chain-id%0A%0A%23%23%23%20NAME%0A%0Acast-chain-id%20-%20Get%20the%20Ethereum%20chain%20ID.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20chain-id%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20Ethereum%20%5Bchain%20ID%5D%5Bchain-id%5D%20from%20the%20RPC%20endpoint%20we%20are%20connected%20to.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20chain%20ID%20when%20talking%20to%20%60%24RPC%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain-id%20--rpc-url%20%24RPC%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20chain%20ID%20when%20%60%24ETH_RPC_URL%60%20is%20set%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain-id%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20chain%5D(%2Fcast%2Freference%2Fcast-chain.mdx)%0A%0A%5Bchain-id%5D%3A%20https%3A%2F%2Fchainlist.org%2F%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-chain-C5TiUcWG.js"),__vite__mapDeps([62,50,1,38])),path:"/cast/reference/cast-chain",type:"mdx",filePath:"cast/reference/cast-chain.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20chain%0A%0A%23%23%23%20NAME%0A%0Acast-chain%20-%20Get%20the%20symbolic%20name%20of%20the%20current%20chain.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20chain%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20symbolic%20chain%20name%20from%20the%20RPC%20endpoint%20we%20are%20connected%20to.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20chain%20name%20when%20talking%20to%20%60%24RPC%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain%20--rpc-url%20%24RPC%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20chain%20name%20when%20%60%24ETH_RPC_URL%60%20is%20set%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20chain-id%5D(%2Fcast%2Freference%2Fcast-chain-id.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-chain-C5TiUcWG.js"),__vite__mapDeps([62,50,1,38])),path:"/cast/reference/cast-chain.html",type:"mdx",filePath:"cast/reference/cast-chain.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20chain%0A%0A%23%23%23%20NAME%0A%0Acast-chain%20-%20Get%20the%20symbolic%20name%20of%20the%20current%20chain.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20chain%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20symbolic%20chain%20name%20from%20the%20RPC%20endpoint%20we%20are%20connected%20to.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20chain%20name%20when%20talking%20to%20%60%24RPC%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain%20--rpc-url%20%24RPC%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20chain%20name%20when%20%60%24ETH_RPC_URL%60%20is%20set%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20chain%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20chain-id%5D(%2Fcast%2Freference%2Fcast-chain-id.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-client-B17cm6G9.js"),__vite__mapDeps([63,50,1,38])),path:"/cast/reference/cast-client",type:"mdx",filePath:"cast/reference/cast-client.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20client%0A%0A%23%23%23%20NAME%0A%0Acast-client%20-%20Get%20the%20current%20client%20version.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20client%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20current%20client%20version.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20current%20client%20version%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20client%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-client-B17cm6G9.js"),__vite__mapDeps([63,50,1,38])),path:"/cast/reference/cast-client.html",type:"mdx",filePath:"cast/reference/cast-client.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20client%0A%0A%23%23%23%20NAME%0A%0Acast-client%20-%20Get%20the%20current%20client%20version.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20client%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20current%20client%20version.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20current%20client%20version%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20client%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-code-BieKZBbR.js"),__vite__mapDeps([64,50,1,38])),path:"/cast/reference/cast-code",type:"mdx",filePath:"cast/reference/cast-code.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20code%0A%0A%23%23%23%20NAME%0A%0Acast-code%20-%20Get%20the%20bytecode%20of%20a%20contract.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20code%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20bytecode%20of%20a%20contract.%0A%0AThe%20contract%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20bytecode%20of%20the%20WETH%20contract.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20code%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-code-BieKZBbR.js"),__vite__mapDeps([64,50,1,38])),path:"/cast/reference/cast-code.html",type:"mdx",filePath:"cast/reference/cast-code.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20code%0A%0A%23%23%23%20NAME%0A%0Acast-code%20-%20Get%20the%20bytecode%20of%20a%20contract.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20code%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20bytecode%20of%20a%20contract.%0A%0AThe%20contract%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20bytecode%20of%20the%20WETH%20contract.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20code%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-codesize-Bpee713B.js"),__vite__mapDeps([65,50,1,38])),path:"/cast/reference/cast-codesize",type:"mdx",filePath:"cast/reference/cast-codesize.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20codesize%0A%0A%23%23%23%20NAME%0A%0Acast-codesize%20-%20Get%20the%20runtime%20bytecode%20size%20of%20a%20contract.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20codesize%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20runtime%20bytecode%20size%20of%20a%20contract.%0A%0AThe%20contract%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20runtime%20bytecode%20size%20of%20the%20WETH%20contract.%0A%0A%60%60%60sh%0Acast%20codesize%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20code%5D(%2Fcast%2Freference%2Fcast-code.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-codesize-Bpee713B.js"),__vite__mapDeps([65,50,1,38])),path:"/cast/reference/cast-codesize.html",type:"mdx",filePath:"cast/reference/cast-codesize.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20codesize%0A%0A%23%23%23%20NAME%0A%0Acast-codesize%20-%20Get%20the%20runtime%20bytecode%20size%20of%20a%20contract.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20codesize%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20runtime%20bytecode%20size%20of%20a%20contract.%0A%0AThe%20contract%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20runtime%20bytecode%20size%20of%20the%20WETH%20contract.%0A%0A%60%60%60sh%0Acast%20codesize%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20code%5D(%2Fcast%2Freference%2Fcast-code.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-completions-D_nNgxZe.js"),__vite__mapDeps([66,38,1])),path:"/cast/reference/cast-completions",type:"mdx",filePath:"cast/reference/cast-completions.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20completions%0A%0A%23%23%23%20NAME%0A%0Acast-completions%20-%20Generate%20shell%20completions%20script%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20completions%60%20_shell_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20shell%20completions%20script%20for%20the%20given%20shell.%0A%0ASupported%20shells%20are%3A%0A%0A-%20bash%0A-%20elvish%0A-%20fish%0A-%20powershell%0A-%20zsh%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20shell%20completions%20script%20for%20zsh%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20completions%20zsh%20%3E%20%24HOME%2F.oh-my-zsh%2Fcompletions%2F_cast%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-completions-D_nNgxZe.js"),__vite__mapDeps([66,38,1])),path:"/cast/reference/cast-completions.html",type:"mdx",filePath:"cast/reference/cast-completions.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20completions%0A%0A%23%23%23%20NAME%0A%0Acast-completions%20-%20Generate%20shell%20completions%20script%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20completions%60%20_shell_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20shell%20completions%20script%20for%20the%20given%20shell.%0A%0ASupported%20shells%20are%3A%0A%0A-%20bash%0A-%20elvish%0A-%20fish%0A-%20powershell%0A-%20zsh%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20shell%20completions%20script%20for%20zsh%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20completions%20zsh%20%3E%20%24HOME%2F.oh-my-zsh%2Fcompletions%2F_cast%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-compute-address-DIQ4NXQw.js"),__vite__mapDeps([67,50,1,38])),path:"/cast/reference/cast-compute-address",type:"mdx",filePath:"cast/reference/cast-compute-address.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20compute-address%0A%0A%23%23%23%20NAME%0A%0Acast-compute-address%20-%20Compute%20the%20contract%20address%20from%20a%20given%20nonce%20and%20deployer%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20compute-address%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0ACompute%20the%20contract%20address%20from%20a%20given%20nonce%20and%20deployer%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Compute%20Options%0A%0A%60--nonce%60%20_nonce_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20nonce%20of%20the%20account.%20Defaults%20to%20the%20latest%20nonce%2C%20fetched%20from%20the%20RPC.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%2C%20%5Bcast%20create2%5D(%2Fcast%2Freference%2Fcast-create2.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-compute-address-DIQ4NXQw.js"),__vite__mapDeps([67,50,1,38])),path:"/cast/reference/cast-compute-address.html",type:"mdx",filePath:"cast/reference/cast-compute-address.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20compute-address%0A%0A%23%23%23%20NAME%0A%0Acast-compute-address%20-%20Compute%20the%20contract%20address%20from%20a%20given%20nonce%20and%20deployer%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20compute-address%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0ACompute%20the%20contract%20address%20from%20a%20given%20nonce%20and%20deployer%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Compute%20Options%0A%0A%60--nonce%60%20_nonce_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20nonce%20of%20the%20account.%20Defaults%20to%20the%20latest%20nonce%2C%20fetched%20from%20the%20RPC.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%2C%20%5Bcast%20create2%5D(%2Fcast%2Freference%2Fcast-create2.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-concat-hex-BqcSHAlZ.js"),__vite__mapDeps([68,38,1])),path:"/cast/reference/cast-concat-hex",type:"mdx",filePath:"cast/reference/cast-concat-hex.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20concat-hex%0A%0A%23%23%23%20NAME%0A%0Acast-concat-hex%20-%20Concatenate%20hex%20strings.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20concat-hex%60%20_data..._%0A%0A%23%23%23%20DESCRIPTION%0A%0AConcatenate%20hex%20strings.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Concatenate%20hex%20strings%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20concat-hex%200xa%200xb%200xc%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-concat-hex-BqcSHAlZ.js"),__vite__mapDeps([68,38,1])),path:"/cast/reference/cast-concat-hex.html",type:"mdx",filePath:"cast/reference/cast-concat-hex.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20concat-hex%0A%0A%23%23%23%20NAME%0A%0Acast-concat-hex%20-%20Concatenate%20hex%20strings.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20concat-hex%60%20_data..._%0A%0A%23%23%23%20DESCRIPTION%0A%0AConcatenate%20hex%20strings.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Concatenate%20hex%20strings%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20concat-hex%200xa%200xb%200xc%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-create2-CG5GwO0g.js"),__vite__mapDeps([69,38,1])),path:"/cast/reference/cast-create2",type:"mdx",filePath:"cast/reference/cast-create2.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20create2%0A%0A%23%23%23%20NAME%0A%0Acast-create2%20-%20Generate%20a%20deterministic%20contract%20address%20using%20CREATE2%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20create2%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20a%20deterministic%20contract%20address%20using%20CREATE2%0A%0A%23%23%23%20OPTIONS%0A%0A%60--starts-with%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrefix%20for%20the%20contract%20address.%0A%0A%60--ends-with%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSuffix%20for%20the%20contract%20address%0A%0A%60--matching%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSequence%20that%20the%20address%20has%20to%20match%0A%0A%60--case-sensitive%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCase%20sensitive%20matching%0A%0A%60--deployer%60%20_address_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAddress%20of%20the%20contract%20deployer%20%5Bdefault%3A%20%600x4e59b44847b379578588920ca78fbf26c0b4956c%60%5D%0A%0A%60--init-code%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInit%20code%20of%20the%20contract%20to%20be%20deployed%0A%0A%60--init-code-hash%60%20_hash_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInit%20code%20hash%20of%20the%20contract%20to%20be%20deployed%0A%0A%60--jobs%60%20_jobs_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNumber%20of%20threads%20to%20use.%20Defaults%20to%20and%20caps%20at%20the%20number%20of%20logical%20cores%0A%0A%60--caller%60%20_address_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAddress%20of%20the%20caller.%20Used%20for%20the%20first%2020%20bytes%20of%20the%20salt%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20a%20contract%20address%20that%20starts%20with%20%60dead%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20create2%20--starts-with%20dead%0A%20%20%20%60%60%60%0A2.%20Generate%20a%20contract%20address%20that%20ends%20with%20%60beef%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20create2%20--ends-with%20beef%0A%20%20%20%60%60%60%0A3.%20A%20more%20complex%20example%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20create2%20--starts-with%20dead%20--case-sensitive%20--deployer%200x0000000000FFe8B47B3e2130213B802212439497%20--init-code-hash%200x0c591f26891d6443cf08c5be3584c1e6ae10a4c2f07c5c53218741e9755fb9cd%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20compute-address%5D(%2Fcast%2Freference%2Fcast-compute-address.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-create2-CG5GwO0g.js"),__vite__mapDeps([69,38,1])),path:"/cast/reference/cast-create2.html",type:"mdx",filePath:"cast/reference/cast-create2.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20create2%0A%0A%23%23%23%20NAME%0A%0Acast-create2%20-%20Generate%20a%20deterministic%20contract%20address%20using%20CREATE2%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20create2%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20a%20deterministic%20contract%20address%20using%20CREATE2%0A%0A%23%23%23%20OPTIONS%0A%0A%60--starts-with%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrefix%20for%20the%20contract%20address.%0A%0A%60--ends-with%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSuffix%20for%20the%20contract%20address%0A%0A%60--matching%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSequence%20that%20the%20address%20has%20to%20match%0A%0A%60--case-sensitive%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCase%20sensitive%20matching%0A%0A%60--deployer%60%20_address_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAddress%20of%20the%20contract%20deployer%20%5Bdefault%3A%20%600x4e59b44847b379578588920ca78fbf26c0b4956c%60%5D%0A%0A%60--init-code%60%20_hex_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInit%20code%20of%20the%20contract%20to%20be%20deployed%0A%0A%60--init-code-hash%60%20_hash_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInit%20code%20hash%20of%20the%20contract%20to%20be%20deployed%0A%0A%60--jobs%60%20_jobs_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNumber%20of%20threads%20to%20use.%20Defaults%20to%20and%20caps%20at%20the%20number%20of%20logical%20cores%0A%0A%60--caller%60%20_address_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAddress%20of%20the%20caller.%20Used%20for%20the%20first%2020%20bytes%20of%20the%20salt%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20a%20contract%20address%20that%20starts%20with%20%60dead%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20create2%20--starts-with%20dead%0A%20%20%20%60%60%60%0A2.%20Generate%20a%20contract%20address%20that%20ends%20with%20%60beef%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20create2%20--ends-with%20beef%0A%20%20%20%60%60%60%0A3.%20A%20more%20complex%20example%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20create2%20--starts-with%20dead%20--case-sensitive%20--deployer%200x0000000000FFe8B47B3e2130213B802212439497%20--init-code-hash%200x0c591f26891d6443cf08c5be3584c1e6ae10a4c2f07c5c53218741e9755fb9cd%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20compute-address%5D(%2Fcast%2Freference%2Fcast-compute-address.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-decode-abi-DQl5FXgI.js"),__vite__mapDeps([70,38,1])),path:"/cast/reference/cast-decode-abi",type:"mdx",filePath:"cast/reference/cast-decode-abi.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20decode-abi%0A%0A%23%23%23%20NAME%0A%0Acast-decode-abi%20-%20Decode%20ABI-encoded%20input%20or%20output%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20decode-abi%60%20%5B*options*%5D%20_sig_%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecode%20ABI-encoded%20input%20or%20output%20data.%0A%0ABy%20default%2C%20the%20command%20will%20decode%20output%20data.%20To%20decode%20input%20data%2C%20pass%20%60--input%60%20or%20use%20%5B%60cast%20decode-calldata%60%5D(%2Fcast%2Freference%2Fcast-decode-calldata.mdx).%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Decoder%20Options%0A%0A%60-i%60%20%20%0A%60--input%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20input%20data.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20output%20data%20for%20a%20%60balanceOf%60%20call%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-abi%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%20%20%200x000000000000000000000000000000000000000000000000000000000000000a%0A%20%20%20%60%60%60%0A%0A2.%20Decode%20input%20data%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-abi%20--input%20%22transfer(address%2Cuint256)%22%20%5C%0A%20%20%20%20%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d0000000000000000000000000000000000000000000000000008a8e4b1a3d8000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20decode-calldata%5D(%2Fcast%2Freference%2Fcast-decode-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-decode-abi-DQl5FXgI.js"),__vite__mapDeps([70,38,1])),path:"/cast/reference/cast-decode-abi.html",type:"mdx",filePath:"cast/reference/cast-decode-abi.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20decode-abi%0A%0A%23%23%23%20NAME%0A%0Acast-decode-abi%20-%20Decode%20ABI-encoded%20input%20or%20output%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20decode-abi%60%20%5B*options*%5D%20_sig_%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecode%20ABI-encoded%20input%20or%20output%20data.%0A%0ABy%20default%2C%20the%20command%20will%20decode%20output%20data.%20To%20decode%20input%20data%2C%20pass%20%60--input%60%20or%20use%20%5B%60cast%20decode-calldata%60%5D(%2Fcast%2Freference%2Fcast-decode-calldata.mdx).%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Decoder%20Options%0A%0A%60-i%60%20%20%0A%60--input%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20input%20data.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20output%20data%20for%20a%20%60balanceOf%60%20call%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-abi%20%22balanceOf(address)(uint256)%22%20%5C%0A%20%20%20%20%200x000000000000000000000000000000000000000000000000000000000000000a%0A%20%20%20%60%60%60%0A%0A2.%20Decode%20input%20data%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-abi%20--input%20%22transfer(address%2Cuint256)%22%20%5C%0A%20%20%20%20%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d0000000000000000000000000000000000000000000000000008a8e4b1a3d8000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20decode-calldata%5D(%2Fcast%2Freference%2Fcast-decode-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-decode-calldata-BCviujYq.js"),__vite__mapDeps([71,38,1])),path:"/cast/reference/cast-decode-calldata",type:"mdx",filePath:"cast/reference/cast-decode-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20decode-calldata%0A%0A%23%23%23%20NAME%0A%0Acast-decode-calldata%20-%20Decode%20ABI-encoded%20input%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20decode-calldata%60%20%5B*options*%5D%20_sig_%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecode%20ABI-encoded%20input%20data.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20input%20data%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-calldata%20%22transfer(address%2Cuint256)%22%20%5C%0A%20%20%20%20%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d0000000000000000000000000000000000000000000000000008a8e4b1a3d8000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20decode-abi%5D(%2Fcast%2Freference%2Fcast-decode-abi.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-decode-calldata-BCviujYq.js"),__vite__mapDeps([71,38,1])),path:"/cast/reference/cast-decode-calldata.html",type:"mdx",filePath:"cast/reference/cast-decode-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20decode-calldata%0A%0A%23%23%23%20NAME%0A%0Acast-decode-calldata%20-%20Decode%20ABI-encoded%20input%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20decode-calldata%60%20%5B*options*%5D%20_sig_%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecode%20ABI-encoded%20input%20data.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20input%20data%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-calldata%20%22transfer(address%2Cuint256)%22%20%5C%0A%20%20%20%20%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d0000000000000000000000000000000000000000000000000008a8e4b1a3d8000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20decode-abi%5D(%2Fcast%2Freference%2Fcast-decode-abi.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-estimate-bm-Jpilz.js"),__vite__mapDeps([72,43,1,73,49,50,51,38])),path:"/cast/reference/cast-estimate",type:"mdx",filePath:"cast/reference/cast-estimate.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20TxValueOption%20from%20%22..%2F..%2Freference%2Fcommon%2Ftx-value-option.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20estimate%0A%0A%23%23%23%20NAME%0A%0Acast-estimate%20-%20Estimate%20the%20gas%20cost%20of%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20estimate%60%20%5B*options*%5D%20_to_%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AEstimate%20the%20gas%20cost%20of%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Transaction%20Options%0A%0A%3CTxValueOption%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Estimate%20the%20gas%20cost%20of%20calling%20%60deposit()%60%20on%20the%20WETH%20contract%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20estimate%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%20%20%20%20%20--value%200.1ether%20%22deposit()%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-estimate-bm-Jpilz.js"),__vite__mapDeps([72,43,1,73,49,50,51,38])),path:"/cast/reference/cast-estimate.html",type:"mdx",filePath:"cast/reference/cast-estimate.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20TxValueOption%20from%20%22..%2F..%2Freference%2Fcommon%2Ftx-value-option.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20estimate%0A%0A%23%23%23%20NAME%0A%0Acast-estimate%20-%20Estimate%20the%20gas%20cost%20of%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20estimate%60%20%5B*options*%5D%20_to_%20_sig_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AEstimate%20the%20gas%20cost%20of%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Transaction%20Options%0A%0A%3CTxValueOption%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Estimate%20the%20gas%20cost%20of%20calling%20%60deposit()%60%20on%20the%20WETH%20contract%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20estimate%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%20%20%20%20%20--value%200.1ether%20%22deposit()%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-etherscan-source-DV6S-1h6.js"),__vite__mapDeps([74,51,1,38])),path:"/cast/reference/cast-etherscan-source",type:"mdx",filePath:"cast/reference/cast-etherscan-source.mdx",content:"import%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20etherscan-source%0A%0A%23%23%23%20NAME%0A%0Acast-etherscan-source%20-%20Get%20the%20source%20code%20of%20a%20contract%20from%20Etherscan.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20etherscan-source%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20source%20code%20of%20a%20contract%20from%20Etherscan.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Output%20Options%0A%0A%60-d%60%20_directory_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20output%20directory%20to%20expand%20the%20source%20tree%20into.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20not%20provided%2C%20the%20source%20will%20be%20outputted%20to%20stdout.%0A%0A%60-f%60%20%20%0A%60--flatten%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWhether%20to%20flatten%20the%20source%20code.%0A%0A%3CEtherscanOptions%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20source%20code%20of%20the%20WETH%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20etherscan-source%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A2.%20Expand%20the%20source%20code%20of%20the%20WETH%20contract%20into%20a%20directory%20named%20%60weth%60%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20etherscan-source%20-d%20weth%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-etherscan-source-DV6S-1h6.js"),__vite__mapDeps([74,51,1,38])),path:"/cast/reference/cast-etherscan-source.html",type:"mdx",filePath:"cast/reference/cast-etherscan-source.mdx",content:"import%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20etherscan-source%0A%0A%23%23%23%20NAME%0A%0Acast-etherscan-source%20-%20Get%20the%20source%20code%20of%20a%20contract%20from%20Etherscan.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20etherscan-source%60%20%5B*options*%5D%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20source%20code%20of%20a%20contract%20from%20Etherscan.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Output%20Options%0A%0A%60-d%60%20_directory_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20output%20directory%20to%20expand%20the%20source%20tree%20into.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20not%20provided%2C%20the%20source%20will%20be%20outputted%20to%20stdout.%0A%0A%60-f%60%20%20%0A%60--flatten%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWhether%20to%20flatten%20the%20source%20code.%0A%0A%3CEtherscanOptions%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20source%20code%20of%20the%20WETH%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20etherscan-source%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A2.%20Expand%20the%20source%20code%20of%20the%20WETH%20contract%20into%20a%20directory%20named%20%60weth%60%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20etherscan-source%20-d%20weth%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-find-block-DN3dO4_5.js"),__vite__mapDeps([75,50,1,38])),path:"/cast/reference/cast-find-block",type:"mdx",filePath:"cast/reference/cast-find-block.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20find-block%0A%0A%23%23%23%20NAME%0A%0Acast-find-block%20-%20Get%20the%20block%20number%20closest%20to%20the%20provided%20timestamp.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20find-block%60%20%5B*options*%5D%20_timestamp_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20block%20number%20closest%20to%20the%20provided%20timestamp.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20block%20number%20closest%20to%20New%20Years%202021%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20find-block%201609459200%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-find-block-DN3dO4_5.js"),__vite__mapDeps([75,50,1,38])),path:"/cast/reference/cast-find-block.html",type:"mdx",filePath:"cast/reference/cast-find-block.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20find-block%0A%0A%23%23%23%20NAME%0A%0Acast-find-block%20-%20Get%20the%20block%20number%20closest%20to%20the%20provided%20timestamp.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20find-block%60%20%5B*options*%5D%20_timestamp_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20block%20number%20closest%20to%20the%20provided%20timestamp.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20block%20number%20closest%20to%20New%20Years%202021%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20find-block%201609459200%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-format-bytes32-string-BrCc1RAp.js"),__vite__mapDeps([76,38,1])),path:"/cast/reference/cast-format-bytes32-string",type:"mdx",filePath:"cast/reference/cast-format-bytes32-string.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20format-bytes32-string%0A%0A%23%23%23%20NAME%0A%0Acast-format-bytes32-string%20-%20Formats%20a%20string%20into%20bytes32%20encoding.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20format-bytes32-string%60%20%5B*options*%5D%20_string_%0A%0A%23%23%23%20DESCRIPTION%0A%0AFormats%20a%20string%20into%20bytes32%20encoding.%0A%0ANote%20that%20this%20command%20is%20for%20formatting%20a%20%5BSolidity%20string%20literal%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.16%2Ftypes.html%23string-literals-and-types)%20into%20%60bytes32%60%20only.%20If%20you're%20looking%20to%20pad%20a%20byte%20string%2C%20use%20%5Bto-bytes32%5D(%2Fcast%2Freference%2Fcast-to-bytes32.mdx)%20instead.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Turn%20string%20%22hello%22%20into%20bytes32%20hex%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20format-bytes32-string%20%22hello%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-format-bytes32-string-BrCc1RAp.js"),__vite__mapDeps([76,38,1])),path:"/cast/reference/cast-format-bytes32-string.html",type:"mdx",filePath:"cast/reference/cast-format-bytes32-string.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20format-bytes32-string%0A%0A%23%23%23%20NAME%0A%0Acast-format-bytes32-string%20-%20Formats%20a%20string%20into%20bytes32%20encoding.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20format-bytes32-string%60%20%5B*options*%5D%20_string_%0A%0A%23%23%23%20DESCRIPTION%0A%0AFormats%20a%20string%20into%20bytes32%20encoding.%0A%0ANote%20that%20this%20command%20is%20for%20formatting%20a%20%5BSolidity%20string%20literal%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.16%2Ftypes.html%23string-literals-and-types)%20into%20%60bytes32%60%20only.%20If%20you're%20looking%20to%20pad%20a%20byte%20string%2C%20use%20%5Bto-bytes32%5D(%2Fcast%2Freference%2Fcast-to-bytes32.mdx)%20instead.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Turn%20string%20%22hello%22%20into%20bytes32%20hex%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20format-bytes32-string%20%22hello%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-bin-wpI0T2Qo.js"),__vite__mapDeps([77,38,1])),path:"/cast/reference/cast-from-bin",type:"mdx",filePath:"cast/reference/cast-from-bin.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-bin%0A%0A%23%23%23%20NAME%0A%0Acast-from-bin%20-%20Convert%20binary%20data%20into%20hex%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-bin%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20binary%20data%20into%20hex%20data.%0A%0AThe%20input%20is%20taken%20from%20stdin.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-bin-wpI0T2Qo.js"),__vite__mapDeps([77,38,1])),path:"/cast/reference/cast-from-bin.html",type:"mdx",filePath:"cast/reference/cast-from-bin.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-bin%0A%0A%23%23%23%20NAME%0A%0Acast-from-bin%20-%20Convert%20binary%20data%20into%20hex%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-bin%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20binary%20data%20into%20hex%20data.%0A%0AThe%20input%20is%20taken%20from%20stdin.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-fixed-point-ChjnHDc1.js"),__vite__mapDeps([78,38,1])),path:"/cast/reference/cast-from-fixed-point",type:"mdx",filePath:"cast/reference/cast-from-fixed-point.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-fixed-point%0A%0A%23%23%23%20NAME%0A%0Acast-from-fixed-point%20-%20Convert%20a%20fixed%20point%20number%20into%20an%20integer.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-fixed-point%60%20%5B*options*%5D%20_decimals_%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20fixed%20point%20number%20into%20an%20integer.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%2010.55%20to%20an%20integer%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20from-fixed-point%202%2010.55%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-fixed-point-ChjnHDc1.js"),__vite__mapDeps([78,38,1])),path:"/cast/reference/cast-from-fixed-point.html",type:"mdx",filePath:"cast/reference/cast-from-fixed-point.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-fixed-point%0A%0A%23%23%23%20NAME%0A%0Acast-from-fixed-point%20-%20Convert%20a%20fixed%20point%20number%20into%20an%20integer.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-fixed-point%60%20%5B*options*%5D%20_decimals_%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20fixed%20point%20number%20into%20an%20integer.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%2010.55%20to%20an%20integer%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20from-fixed-point%202%2010.55%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-rlp-C4WzrQt_.js"),__vite__mapDeps([79,38,1])),path:"/cast/reference/cast-from-rlp",type:"mdx",filePath:"cast/reference/cast-from-rlp.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-rlp%0A%0A%23%23%23%20NAME%0A%0Acast-from-rlp%20-%20Decodes%20RLP-encoded%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-rlp%60%20_data_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecodes%20RLP-encoded%20data.%0A%0AThe%20_data_%20is%20a%20hexadecimal%20string%20with%20optional%200x%20prefix.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20RLP%20data%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20from-rlp%200xc481f181f2%0A%0A%20%20%20cast%20from-rlp%20c481f181f2%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-rlp-C4WzrQt_.js"),__vite__mapDeps([79,38,1])),path:"/cast/reference/cast-from-rlp.html",type:"mdx",filePath:"cast/reference/cast-from-rlp.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-rlp%0A%0A%23%23%23%20NAME%0A%0Acast-from-rlp%20-%20Decodes%20RLP-encoded%20data.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-rlp%60%20_data_%0A%0A%23%23%23%20DESCRIPTION%0A%0ADecodes%20RLP-encoded%20data.%0A%0AThe%20_data_%20is%20a%20hexadecimal%20string%20with%20optional%200x%20prefix.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20RLP%20data%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20from-rlp%200xc481f181f2%0A%0A%20%20%20cast%20from-rlp%20c481f181f2%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-utf8-BulKWbVk.js"),__vite__mapDeps([80,38,1])),path:"/cast/reference/cast-from-utf8",type:"mdx",filePath:"cast/reference/cast-from-utf8.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-utf8%0A%0A%23%23%23%20NAME%0A%0Acast-from-utf8%20-%20Convert%20UTF8%20text%20to%20hex.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-utf8%60%20%5B*options*%5D%20_text_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20UTF8%20text%20to%20hex.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20UTF8%20text%20to%20hex%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20from-utf8%20%22hello%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-utf8-BulKWbVk.js"),__vite__mapDeps([80,38,1])),path:"/cast/reference/cast-from-utf8.html",type:"mdx",filePath:"cast/reference/cast-from-utf8.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-utf8%0A%0A%23%23%23%20NAME%0A%0Acast-from-utf8%20-%20Convert%20UTF8%20text%20to%20hex.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-utf8%60%20%5B*options*%5D%20_text_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20UTF8%20text%20to%20hex.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20UTF8%20text%20to%20hex%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20from-utf8%20%22hello%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-wei-Dt-bNlMK.js"),__vite__mapDeps([81,38,1])),path:"/cast/reference/cast-from-wei",type:"mdx",filePath:"cast/reference/cast-from-wei.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-wei%0A%0A%23%23%23%20NAME%0A%0Acast-from-wei%20-%20Convert%20wei%20into%20an%20ETH%20amount.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-wei%60%20%5B*options*%5D%20_value_%20%5B*unit*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20wei%20into%20an%20ETH%20amount.%0A%0AConsider%20using%20%5B%60cast%20to-unit%60%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-from-wei-Dt-bNlMK.js"),__vite__mapDeps([81,38,1])),path:"/cast/reference/cast-from-wei.html",type:"mdx",filePath:"cast/reference/cast-from-wei.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20from-wei%0A%0A%23%23%23%20NAME%0A%0Acast-from-wei%20-%20Convert%20wei%20into%20an%20ETH%20amount.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20from-wei%60%20%5B*options*%5D%20_value_%20%5B*unit*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20wei%20into%20an%20ETH%20amount.%0A%0AConsider%20using%20%5B%60cast%20to-unit%60%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-gas-price-6ZJqJEEJ.js"),__vite__mapDeps([82,50,1,38])),path:"/cast/reference/cast-gas-price",type:"mdx",filePath:"cast/reference/cast-gas-price.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20gas-price%0A%0A%23%23%23%20NAME%0A%0Acast-gas-price%20-%20Get%20the%20current%20gas%20price.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20gas-price%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20current%20gas%20price.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20current%20gas%20price%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20gas-price%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-gas-price-6ZJqJEEJ.js"),__vite__mapDeps([82,50,1,38])),path:"/cast/reference/cast-gas-price.html",type:"mdx",filePath:"cast/reference/cast-gas-price.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20gas-price%0A%0A%23%23%23%20NAME%0A%0Acast-gas-price%20-%20Get%20the%20current%20gas%20price.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20gas-price%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20current%20gas%20price.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20current%20gas%20price%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20gas-price%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-help-DJEc0aim.js"),__vite__mapDeps([83,1])),path:"/cast/reference/cast-help",type:"mdx",filePath:"cast/reference/cast-help.mdx",content:"%23%23%20cast%20help%0A%0A%23%23%23%20NAME%0A%0Acast-help%20-%20Get%20help%20for%20a%20Cast%20command%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20help%60%20%5B*subcommand*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APrints%20a%20help%20message%20for%20the%20given%20command.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20help%20for%20a%20command%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20help%20call%0A%20%20%20%60%60%60%0A%0A2.%20Help%20is%20also%20available%20with%20the%20%60--help%60%20flag%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%20--help%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-help-DJEc0aim.js"),__vite__mapDeps([83,1])),path:"/cast/reference/cast-help.html",type:"mdx",filePath:"cast/reference/cast-help.mdx",content:"%23%23%20cast%20help%0A%0A%23%23%23%20NAME%0A%0Acast-help%20-%20Get%20help%20for%20a%20Cast%20command%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20help%60%20%5B*subcommand*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APrints%20a%20help%20message%20for%20the%20given%20command.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20help%20for%20a%20command%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20help%20call%0A%20%20%20%60%60%60%0A%0A2.%20Help%20is%20also%20available%20with%20the%20%60--help%60%20flag%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%20--help%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-index-D0E_i1zL.js"),__vite__mapDeps([84,38,1])),path:"/cast/reference/cast-",type:"mdx",filePath:"cast/reference/cast-index.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20index%0A%0A%23%23%23%20NAME%0A%0Acast-index%20-%20Compute%20the%20storage%20slot%20location%20for%20an%20entry%20in%20a%20mapping.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20index%60%20_key_type_%20_key_%20_slot_%0A%0A%23%23%23%20DESCRIPTION%0A%0ACompute%20the%20storage%20slot%20location%20for%20an%20entry%20in%20a%20mapping.%0A%0AUse%20%60cast%20storage%60%20to%20get%20the%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A%60%60%60solidity%0A%2F%2F%20World.sol%0A%0Amapping%20(address%20%3D%3E%20uint256)%20public%20mapping1%3B%0Amapping%20(string%20%3D%3E%20string)%20public%20mapping2%3B%0A%60%60%60%0A%0A1.%20Compute%20the%20storage%20slot%20of%20an%20entry%20(%60hello%60)%20in%20a%20mapping%20of%20type%20%60mapping(string%20%3D%3E%20string)%60%2C%20located%20at%20slot%201%3A%0A%20%20%20%60%60%60sh%0A%20%20%20%3E%3E%20cast%20index%20string%20%22hello%22%201%0A%20%20%200x3556fc8e3c702d4479a1ab7928dd05d87508462a12f53307b5407c969223d1f8%0A%20%20%20%3E%3E%20cast%20storage%20%5Baddress%5D%200x3556fc8e3c702d4479a1ab7928dd05d87508462a12f53307b5407c969223d1f8%0A%20%20%20world%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-index-D0E_i1zL.js"),__vite__mapDeps([84,38,1])),path:"/cast/reference/cast-.html",type:"mdx",filePath:"cast/reference/cast-index.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20index%0A%0A%23%23%23%20NAME%0A%0Acast-index%20-%20Compute%20the%20storage%20slot%20location%20for%20an%20entry%20in%20a%20mapping.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20index%60%20_key_type_%20_key_%20_slot_%0A%0A%23%23%23%20DESCRIPTION%0A%0ACompute%20the%20storage%20slot%20location%20for%20an%20entry%20in%20a%20mapping.%0A%0AUse%20%60cast%20storage%60%20to%20get%20the%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A%60%60%60solidity%0A%2F%2F%20World.sol%0A%0Amapping%20(address%20%3D%3E%20uint256)%20public%20mapping1%3B%0Amapping%20(string%20%3D%3E%20string)%20public%20mapping2%3B%0A%60%60%60%0A%0A1.%20Compute%20the%20storage%20slot%20of%20an%20entry%20(%60hello%60)%20in%20a%20mapping%20of%20type%20%60mapping(string%20%3D%3E%20string)%60%2C%20located%20at%20slot%201%3A%0A%20%20%20%60%60%60sh%0A%20%20%20%3E%3E%20cast%20index%20string%20%22hello%22%201%0A%20%20%200x3556fc8e3c702d4479a1ab7928dd05d87508462a12f53307b5407c969223d1f8%0A%20%20%20%3E%3E%20cast%20storage%20%5Baddress%5D%200x3556fc8e3c702d4479a1ab7928dd05d87508462a12f53307b5407c969223d1f8%0A%20%20%20world%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-interface-Ciwsh8KK.js"),__vite__mapDeps([85,51,1,38])),path:"/cast/reference/cast-interface",type:"mdx",filePath:"cast/reference/cast-interface.mdx",content:"import%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20interface%0A%0A%23%23%23%20NAME%0A%0Acast-interface%20-%20Generate%20a%20Solidity%20interface%20from%20a%20given%20ABI.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20interface%60%20%5B*options*%5D%20_address_or_path_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20Solidity%20interface%20from%20a%20given%20ABI.%0A%0AThe%20argument%20(_address_or_path_)%20can%20either%20be%20the%20path%20to%20a%20file%20containing%20an%20ABI%2C%20or%20an%20address.%0A%0AIf%20an%20address%20is%20provided%2C%20then%20the%20interface%20is%20generated%20from%20the%20ABI%20of%20the%20account%2C%20which%20is%20fetched%20from%20Etherscan.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20command%20does%20not%20currently%20support%20ABI%20encoder%20v2.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Interface%20Options%0A%0A%60-n%60%20_name_%20%20%0A%60--name%60%20_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20name%20to%20use%20for%20the%20generated%20interface.%20The%20default%20name%20is%20%60Interface%60.%0A%0A%60-o%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20output%20file.%20If%20not%20specified%2C%20the%20interface%20will%20be%20output%20to%20stdout.%0A%0A%60-p%60%20_version_%20%20%0A%60--pragma%60%20_version_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20Solidity%20pragma%20version%20to%20use%20in%20the%20interface.%20Default%3A%20%60%5E0.8.10%60.%0A%0A%60-j%60%20%20%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20the%20contract's%20JSON%20ABI.%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20an%20interface%20from%20a%20file%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20.%2Fpath%2Fto%2Fabi.json%0A%20%20%20%60%60%60%0A%0A2.%20Generate%20an%20interface%20using%20Etherscan%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20-o%20IWETH.sol%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A3.%20Generate%20and%20name%20an%20interface%20from%20a%20file%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20-n%20LilENS%20.%2Fpath%2Fto%2Fabi.json%0A%20%20%20%60%60%60%0A%0A4.%20Fetch%20the%20JSON%20ABI%20of%20a%20contract%20on%20Etherscan%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20-o%20IWETH.sol%20-j%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-interface-Ciwsh8KK.js"),__vite__mapDeps([85,51,1,38])),path:"/cast/reference/cast-interface.html",type:"mdx",filePath:"cast/reference/cast-interface.mdx",content:"import%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20interface%0A%0A%23%23%23%20NAME%0A%0Acast-interface%20-%20Generate%20a%20Solidity%20interface%20from%20a%20given%20ABI.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20interface%60%20%5B*options*%5D%20_address_or_path_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20Solidity%20interface%20from%20a%20given%20ABI.%0A%0AThe%20argument%20(_address_or_path_)%20can%20either%20be%20the%20path%20to%20a%20file%20containing%20an%20ABI%2C%20or%20an%20address.%0A%0AIf%20an%20address%20is%20provided%2C%20then%20the%20interface%20is%20generated%20from%20the%20ABI%20of%20the%20account%2C%20which%20is%20fetched%20from%20Etherscan.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20command%20does%20not%20currently%20support%20ABI%20encoder%20v2.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Interface%20Options%0A%0A%60-n%60%20_name_%20%20%0A%60--name%60%20_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20name%20to%20use%20for%20the%20generated%20interface.%20The%20default%20name%20is%20%60Interface%60.%0A%0A%60-o%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20output%20file.%20If%20not%20specified%2C%20the%20interface%20will%20be%20output%20to%20stdout.%0A%0A%60-p%60%20_version_%20%20%0A%60--pragma%60%20_version_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20Solidity%20pragma%20version%20to%20use%20in%20the%20interface.%20Default%3A%20%60%5E0.8.10%60.%0A%0A%60-j%60%20%20%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20the%20contract's%20JSON%20ABI.%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20an%20interface%20from%20a%20file%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20.%2Fpath%2Fto%2Fabi.json%0A%20%20%20%60%60%60%0A%0A2.%20Generate%20an%20interface%20using%20Etherscan%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20-o%20IWETH.sol%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A3.%20Generate%20and%20name%20an%20interface%20from%20a%20file%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20-n%20LilENS%20.%2Fpath%2Fto%2Fabi.json%0A%20%20%20%60%60%60%0A%0A4.%20Fetch%20the%20JSON%20ABI%20of%20a%20contract%20on%20Etherscan%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20interface%20-o%20IWETH.sol%20-j%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-keccak-BF_SnuCI.js"),__vite__mapDeps([86,38,1])),path:"/cast/reference/cast-keccak",type:"mdx",filePath:"cast/reference/cast-keccak.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20keccak%0A%0A%23%23%23%20NAME%0A%0Acast-keccak%20-%20Hash%20arbitrary%20data%20using%20keccak-256.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20keccak%60%20%5B*options*%5D%20_data_%0A%0A%23%23%23%20DESCRIPTION%0A%0AHash%20arbitrary%20data%20using%20keccak-256.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-keccak-BF_SnuCI.js"),__vite__mapDeps([86,38,1])),path:"/cast/reference/cast-keccak.html",type:"mdx",filePath:"cast/reference/cast-keccak.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20keccak%0A%0A%23%23%23%20NAME%0A%0Acast-keccak%20-%20Hash%20arbitrary%20data%20using%20keccak-256.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20keccak%60%20%5B*options*%5D%20_data_%0A%0A%23%23%23%20DESCRIPTION%0A%0AHash%20arbitrary%20data%20using%20keccak-256.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-logs-Df5Ar7Mp.js"),__vite__mapDeps([87,44,45,1,46,47,48,49,50,51])),path:"/cast/reference/cast-logs",type:"mdx",filePath:"cast/reference/cast-logs.mdx",content:"import%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0A%0A%23%23%20cast%20logs%0A%0A%23%23%23%20NAME%0A%0Acast%20logs%20-%20Get%20logs%20by%20signature%20or%20topic.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20logs%60%20%5B*options*%5D%20_sig_or_topic_%20%5B*topics_or_args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20logs%20by%20signature%20or%20topic.%0A%0AThe%20(_sig_or_topic_)%20may%20either%20be%20the%20event%20signature%20or%20its%20hashed%20topic%20(located%20at%20topics%5B0%5D).%0A%0AIf%20using%20a%20signature%2C%20remaining%20arguments%20must%20be%20in%20their%20ordinary%20form.%20If%20using%20a%20topic%2C%20the%20arguments%20must%20be%20as%20they%20themselves%20appear%20as%20topics.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%20Query%20Options%0A%0A%60--from-block%60%20_from_block_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20to%20start%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20also%20be%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%2C%20or%20%60pending%60.%0A%0A%60--to-block%60%20_to_block_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20to%20stop%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20also%20be%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%2C%20or%20%60pending%60.%0A%0A%60--address%60%20_address_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20contract%20address%20to%20filter%20on%0A%0A%3CWalletOptions%20%2F%3E%0A%3CRpcOptions%20%2F%3E%0A%3CEtherscanOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20logs%20using%20a%20signature%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20logs%20--from-block%2015537393%20--to-block%20latest%20'Transfer%20(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20value)'%20--address%200x2e8ABfE042886E4938201101A63730D04F160A82%0A%20%20%20%60%60%60%0A2.%20Get%20logs%20using%20a%20topic%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20logs%20--from-block%2015537393%20--to-block%20latest%200xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef%20--address%200x0000000000000000000000002e8abfe042886e4938201101a63730d04f160a82%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-logs-Df5Ar7Mp.js"),__vite__mapDeps([87,44,45,1,46,47,48,49,50,51])),path:"/cast/reference/cast-logs.html",type:"mdx",filePath:"cast/reference/cast-logs.mdx",content:"import%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0A%0A%23%23%20cast%20logs%0A%0A%23%23%23%20NAME%0A%0Acast%20logs%20-%20Get%20logs%20by%20signature%20or%20topic.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20logs%60%20%5B*options*%5D%20_sig_or_topic_%20%5B*topics_or_args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20logs%20by%20signature%20or%20topic.%0A%0AThe%20(_sig_or_topic_)%20may%20either%20be%20the%20event%20signature%20or%20its%20hashed%20topic%20(located%20at%20topics%5B0%5D).%0A%0AIf%20using%20a%20signature%2C%20remaining%20arguments%20must%20be%20in%20their%20ordinary%20form.%20If%20using%20a%20topic%2C%20the%20arguments%20must%20be%20as%20they%20themselves%20appear%20as%20topics.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%20Query%20Options%0A%0A%60--from-block%60%20_from_block_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20to%20start%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20also%20be%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%2C%20or%20%60pending%60.%0A%0A%60--to-block%60%20_to_block_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20to%20stop%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20also%20be%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%2C%20or%20%60pending%60.%0A%0A%60--address%60%20_address_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20contract%20address%20to%20filter%20on%0A%0A%3CWalletOptions%20%2F%3E%0A%3CRpcOptions%20%2F%3E%0A%3CEtherscanOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20logs%20using%20a%20signature%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20logs%20--from-block%2015537393%20--to-block%20latest%20'Transfer%20(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20value)'%20--address%200x2e8ABfE042886E4938201101A63730D04F160A82%0A%20%20%20%60%60%60%0A2.%20Get%20logs%20using%20a%20topic%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20logs%20--from-block%2015537393%20--to-block%20latest%200xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef%20--address%200x0000000000000000000000002e8abfe042886e4938201101a63730d04f160a82%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-lookup-address-DUqfmQ__.js"),__vite__mapDeps([88,50,1,38])),path:"/cast/reference/cast-lookup-address",type:"mdx",filePath:"cast/reference/cast-lookup-address.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20lookup-address%0A%0A%23%23%23%20NAME%0A%0Acast-lookup-address%20-%20Perform%20an%20ENS%20reverse%20lookup.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20lookup-address%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20an%20ENS%20reverse%20lookup.%0A%0AIf%20%60--verify%60%20is%20passed%2C%20then%20a%20normal%20lookup%20is%20performed%20after%20the%20reverse%20lookup%20to%20verify%20that%20the%20address%20is%20correct.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Lookup%20Options%0A%0A%60-v%60%20%20%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20normal%20lookup%20to%20verify%20that%20the%20address%20is%20correct.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20ENS%20name%20for%20an%20address.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20lookup-address%20%24ADDRESS%0A%20%20%20%60%60%60%0A%0A2.%20Perform%20both%20a%20reverse%20and%20a%20normal%20lookup%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20lookup-address%20--verify%20%24ADDRESS%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-lookup-address-DUqfmQ__.js"),__vite__mapDeps([88,50,1,38])),path:"/cast/reference/cast-lookup-address.html",type:"mdx",filePath:"cast/reference/cast-lookup-address.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20lookup-address%0A%0A%23%23%23%20NAME%0A%0Acast-lookup-address%20-%20Perform%20an%20ENS%20reverse%20lookup.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20lookup-address%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20an%20ENS%20reverse%20lookup.%0A%0AIf%20%60--verify%60%20is%20passed%2C%20then%20a%20normal%20lookup%20is%20performed%20after%20the%20reverse%20lookup%20to%20verify%20that%20the%20address%20is%20correct.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Lookup%20Options%0A%0A%60-v%60%20%20%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20normal%20lookup%20to%20verify%20that%20the%20address%20is%20correct.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20ENS%20name%20for%20an%20address.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20lookup-address%20%24ADDRESS%0A%20%20%20%60%60%60%0A%0A2.%20Perform%20both%20a%20reverse%20and%20a%20normal%20lookup%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20lookup-address%20--verify%20%24ADDRESS%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-max-int-qCWR_49x.js"),__vite__mapDeps([89,38,1])),path:"/cast/reference/cast-max-int",type:"mdx",filePath:"cast/reference/cast-max-int.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20max-int%0A%0A%23%23%23%20NAME%0A%0Acast-max-int%20-%20Get%20the%20maximum%20i256%20value.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20max-int%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20maximum%20i256%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20min-int%5D(%2Fcast%2Freference%2Fcast-min-int.mdx)%2C%20%5Bcast%20max-uint%5D(%2Fcast%2Freference%2Fcast-max-uint.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-max-int-qCWR_49x.js"),__vite__mapDeps([89,38,1])),path:"/cast/reference/cast-max-int.html",type:"mdx",filePath:"cast/reference/cast-max-int.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20max-int%0A%0A%23%23%23%20NAME%0A%0Acast-max-int%20-%20Get%20the%20maximum%20i256%20value.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20max-int%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20maximum%20i256%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20min-int%5D(%2Fcast%2Freference%2Fcast-min-int.mdx)%2C%20%5Bcast%20max-uint%5D(%2Fcast%2Freference%2Fcast-max-uint.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-max-uint-D0pNqalK.js"),__vite__mapDeps([90,38,1])),path:"/cast/reference/cast-max-uint",type:"mdx",filePath:"cast/reference/cast-max-uint.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20max-uint%0A%0A%23%23%23%20NAME%0A%0Acast-max-uint%20-%20Get%20the%20maximum%20uint256%20value.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20max-uint%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20maximum%20uint256%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-max-uint-D0pNqalK.js"),__vite__mapDeps([90,38,1])),path:"/cast/reference/cast-max-uint.html",type:"mdx",filePath:"cast/reference/cast-max-uint.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20max-uint%0A%0A%23%23%23%20NAME%0A%0Acast-max-uint%20-%20Get%20the%20maximum%20uint256%20value.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20max-uint%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20maximum%20uint256%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-min-int-B5mrezQY.js"),__vite__mapDeps([91,38,1])),path:"/cast/reference/cast-min-int",type:"mdx",filePath:"cast/reference/cast-min-int.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20min-int%0A%0A%23%23%23%20NAME%0A%0Acast-min-int%20-%20Get%20the%20minimum%20i256%20value.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20min-int%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20minimum%20i256%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-min-int-B5mrezQY.js"),__vite__mapDeps([91,38,1])),path:"/cast/reference/cast-min-int.html",type:"mdx",filePath:"cast/reference/cast-min-int.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20min-int%0A%0A%23%23%23%20NAME%0A%0Acast-min-int%20-%20Get%20the%20minimum%20i256%20value.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20min-int%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20minimum%20i256%20value.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-mktx-CIYuDHP1.js"),__vite__mapDeps([92,43,1,93,73,45,46,47,49,50,51,38])),path:"/cast/reference/cast-mktx",type:"mdx",filePath:"cast/reference/cast-mktx.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20TransactionOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Ftransaction-options.mdx%22%3B%0Aimport%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20mktx%0A%0A%23%23%23%20NAME%0A%0Acast-mktx%20-%20Build%20and%20sign%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20mktx%60%20%5B*options*%5D%20_to_%20%5B*sig*%5D%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ABuild%20and%20sign%20a%20transaction%2C%20without%20publishing%20it.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%3CTransactionOptions%20%2F%3E%0A%0A%60--create%60%20_code_%20%5B*sig*%20*args...*%5D%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDeploy%20a%20contract%20by%20specifying%20raw%20bytecode%2C%20in%20place%20of%20specifying%20a%20_to_%20address.%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%0A%3CWalletOptionsKeystore%20%2F%3E%0A%0A%3CWalletOptionsHardware%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Sign%20a%20transaction%20that%20sends%20some%20ether%20to%20Vitalik%20using%20your%20Ledger%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%20--ledger%20vitalik.eth%20--value%200.1ether%0A%20%20%20%60%60%60%0A%0A2.%20Sign%20a%20transaction%20that%20calls%20%60deposit(address%20token%2C%20uint256%20amount)%60%20on%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%20--ledger%200x...%20%22deposit(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A3.%20Sign%20a%20transaction%20that%20calls%20a%20function%20that%20expects%20a%20%60struct%60%3A%0A%0A%20%20%20%60%60%60solidity%0A%20%20%20contract%20Test%20%7B%0A%20%20%20%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20function%20myfunction(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%20%20%20%7D%0A%20%20%20%60%60%60%0A%0A%20%20%20Structs%20are%20encoded%20as%20tuples%20(see%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding))%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%200x...%20%22myfunction((address%2Cuint256))%22%20%22(0x...%2C1)%22%0A%20%20%20%60%60%60%0A%0A4.%20Sign%20a%20transaction%20with%20hex%20data%20in%20the%20%60input%60%20field%20of%20the%20transaction%20object%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%200x...%200x68656c6c6f20776f726c64%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-mktx-CIYuDHP1.js"),__vite__mapDeps([92,43,1,93,73,45,46,47,49,50,51,38])),path:"/cast/reference/cast-mktx.html",type:"mdx",filePath:"cast/reference/cast-mktx.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20TransactionOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Ftransaction-options.mdx%22%3B%0Aimport%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20mktx%0A%0A%23%23%23%20NAME%0A%0Acast-mktx%20-%20Build%20and%20sign%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20mktx%60%20%5B*options*%5D%20_to_%20%5B*sig*%5D%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ABuild%20and%20sign%20a%20transaction%2C%20without%20publishing%20it.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%3CTransactionOptions%20%2F%3E%0A%0A%60--create%60%20_code_%20%5B*sig*%20*args...*%5D%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDeploy%20a%20contract%20by%20specifying%20raw%20bytecode%2C%20in%20place%20of%20specifying%20a%20_to_%20address.%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%0A%3CWalletOptionsKeystore%20%2F%3E%0A%0A%3CWalletOptionsHardware%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Sign%20a%20transaction%20that%20sends%20some%20ether%20to%20Vitalik%20using%20your%20Ledger%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%20--ledger%20vitalik.eth%20--value%200.1ether%0A%20%20%20%60%60%60%0A%0A2.%20Sign%20a%20transaction%20that%20calls%20%60deposit(address%20token%2C%20uint256%20amount)%60%20on%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%20--ledger%200x...%20%22deposit(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A3.%20Sign%20a%20transaction%20that%20calls%20a%20function%20that%20expects%20a%20%60struct%60%3A%0A%0A%20%20%20%60%60%60solidity%0A%20%20%20contract%20Test%20%7B%0A%20%20%20%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20function%20myfunction(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%20%20%20%7D%0A%20%20%20%60%60%60%0A%0A%20%20%20Structs%20are%20encoded%20as%20tuples%20(see%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding))%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%200x...%20%22myfunction((address%2Cuint256))%22%20%22(0x...%2C1)%22%0A%20%20%20%60%60%60%0A%0A4.%20Sign%20a%20transaction%20with%20hex%20data%20in%20the%20%60input%60%20field%20of%20the%20transaction%20object%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20mktx%200x...%200x68656c6c6f20776f726c64%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-namehash-DJEHTegs.js"),__vite__mapDeps([94,38,1])),path:"/cast/reference/cast-namehash",type:"mdx",filePath:"cast/reference/cast-namehash.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20namehash%0A%0A%23%23%23%20NAME%0A%0Acast-namehash%20-%20Calculate%20the%20ENS%20namehash%20of%20a%20name.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20namehash%60%20%5B*options*%5D%20_name_%0A%0A%23%23%23%20DESCRIPTION%0A%0ACalculate%20the%20ENS%20namehash%20of%20a%20name.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Calculate%20the%20namehash%20of%20an%20ENS%20name.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20namehash%20vitalik.eth%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%2C%20%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-namehash-DJEHTegs.js"),__vite__mapDeps([94,38,1])),path:"/cast/reference/cast-namehash.html",type:"mdx",filePath:"cast/reference/cast-namehash.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20namehash%0A%0A%23%23%23%20NAME%0A%0Acast-namehash%20-%20Calculate%20the%20ENS%20namehash%20of%20a%20name.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20namehash%60%20%5B*options*%5D%20_name_%0A%0A%23%23%23%20DESCRIPTION%0A%0ACalculate%20the%20ENS%20namehash%20of%20a%20name.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Calculate%20the%20namehash%20of%20an%20ENS%20name.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20namehash%20vitalik.eth%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%2C%20%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-nonce-DbgV7Ln2.js"),__vite__mapDeps([95,50,1,38])),path:"/cast/reference/cast-nonce",type:"mdx",filePath:"cast/reference/cast-nonce.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20nonce%0A%0A%23%23%23%20NAME%0A%0Acast-nonce%20-%20Get%20the%20nonce%20for%20an%20account.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20nonce%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20nonce%20of%20an%20account.%0A%0AThe%20argument%20_who_%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20nonce%20of%20beer.eth%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20nonce%20beer.eth%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20balance%5D(%2Fcast%2Freference%2Fcast-balance.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-nonce-DbgV7Ln2.js"),__vite__mapDeps([95,50,1,38])),path:"/cast/reference/cast-nonce.html",type:"mdx",filePath:"cast/reference/cast-nonce.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20nonce%0A%0A%23%23%23%20NAME%0A%0Acast-nonce%20-%20Get%20the%20nonce%20for%20an%20account.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20nonce%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20nonce%20of%20an%20account.%0A%0AThe%20argument%20_who_%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20nonce%20of%20beer.eth%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20nonce%20beer.eth%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20balance%5D(%2Fcast%2Freference%2Fcast-balance.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-parse-bytes32-address-BlmF_XOr.js"),__vite__mapDeps([96,38,1])),path:"/cast/reference/cast-parse-bytes32-address",type:"mdx",filePath:"cast/reference/cast-parse-bytes32-address.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20parse-bytes32-address%0A%0A%23%23%23%20NAME%0A%0Acast-parse-bytes32-address%20-%20Parses%20a%20checksummed%20address%20from%20bytes32%20encoding.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20parse-bytes32-address%60%20%5B*options*%5D%20_bytes_%0A%0A%23%23%23%20DESCRIPTION%0A%0AParses%20a%20checksummed%20address%20from%20its%20bytes32%20encoding%20representation.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Parse%20the%20bytes32%20encoding%20of%20the%20WETH9%20contract%20address%20to%20its%20address%20representation%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20parse-bytes32-address%200x000000000000000000000000C02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-parse-bytes32-address-BlmF_XOr.js"),__vite__mapDeps([96,38,1])),path:"/cast/reference/cast-parse-bytes32-address.html",type:"mdx",filePath:"cast/reference/cast-parse-bytes32-address.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20parse-bytes32-address%0A%0A%23%23%23%20NAME%0A%0Acast-parse-bytes32-address%20-%20Parses%20a%20checksummed%20address%20from%20bytes32%20encoding.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20parse-bytes32-address%60%20%5B*options*%5D%20_bytes_%0A%0A%23%23%23%20DESCRIPTION%0A%0AParses%20a%20checksummed%20address%20from%20its%20bytes32%20encoding%20representation.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Parse%20the%20bytes32%20encoding%20of%20the%20WETH9%20contract%20address%20to%20its%20address%20representation%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20parse-bytes32-address%200x000000000000000000000000C02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-parse-bytes32-string-MJ2iR5QG.js"),__vite__mapDeps([97,38,1])),path:"/cast/reference/cast-parse-bytes32-string",type:"mdx",filePath:"cast/reference/cast-parse-bytes32-string.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20parse-bytes32-string%0A%0A%23%23%23%20NAME%0A%0Acast-parse-bytes32-string%20-%20Parses%20a%20string%20from%20bytes32%20encoding.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20parse-bytes32-string%60%20%5B*options*%5D%20_bytes_%0A%0A%23%23%23%20DESCRIPTION%0A%0AParses%20a%20%5BSolidity%20string%20literal%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.16%2Ftypes.html%23string-literals-and-types)%20from%20its%20bytes32%20encoding%20representation%20mostly%20by%20interpreting%20bytes%20as%20ASCII%20characters.%20This%20command%20undos%20the%20encoding%20in%20%5B--format-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Parse%20bytes32%20string%20encoding%20of%20%22hello%22%20back%20to%20the%20string%20representation%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20parse-bytes32-string%20%220x68656c6c6f000000000000000000000000000000000000000000000000000000%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-parse-bytes32-string-MJ2iR5QG.js"),__vite__mapDeps([97,38,1])),path:"/cast/reference/cast-parse-bytes32-string.html",type:"mdx",filePath:"cast/reference/cast-parse-bytes32-string.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20parse-bytes32-string%0A%0A%23%23%23%20NAME%0A%0Acast-parse-bytes32-string%20-%20Parses%20a%20string%20from%20bytes32%20encoding.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20parse-bytes32-string%60%20%5B*options*%5D%20_bytes_%0A%0A%23%23%23%20DESCRIPTION%0A%0AParses%20a%20%5BSolidity%20string%20literal%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.16%2Ftypes.html%23string-literals-and-types)%20from%20its%20bytes32%20encoding%20representation%20mostly%20by%20interpreting%20bytes%20as%20ASCII%20characters.%20This%20command%20undos%20the%20encoding%20in%20%5B--format-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Parse%20bytes32%20string%20encoding%20of%20%22hello%22%20back%20to%20the%20string%20representation%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20parse-bytes32-string%20%220x68656c6c6f000000000000000000000000000000000000000000000000000000%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-pretty-calldata-C7UeaOb_.js"),__vite__mapDeps([98,38,1])),path:"/cast/reference/cast-pretty-calldata",type:"mdx",filePath:"cast/reference/cast-pretty-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20pretty-calldata%0A%0A%23%23%23%20NAME%0A%0Acast-pretty-calldata%20-%20Pretty%20print%20calldata.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20pretty-calldata%60%20%5B*options*%5D%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0APretty%20print%20calldata.%0A%0ATries%20to%20decode%20the%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures)%20unless%20%60--offline%60%20is%20passed.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%204byte%20Options%0A%0A%60-o%60%20%20%0A%60--offline%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20the%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20lookup.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20calldata%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20pretty-calldata%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d00000000000000000000000000000000000000000000000000174b37380cea000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-pretty-calldata-C7UeaOb_.js"),__vite__mapDeps([98,38,1])),path:"/cast/reference/cast-pretty-calldata.html",type:"mdx",filePath:"cast/reference/cast-pretty-calldata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20pretty-calldata%0A%0A%23%23%23%20NAME%0A%0Acast-pretty-calldata%20-%20Pretty%20print%20calldata.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20pretty-calldata%60%20%5B*options*%5D%20_calldata_%0A%0A%23%23%23%20DESCRIPTION%0A%0APretty%20print%20calldata.%0A%0ATries%20to%20decode%20the%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures)%20unless%20%60--offline%60%20is%20passed.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%204byte%20Options%0A%0A%60-o%60%20%20%0A%60--offline%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20the%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20lookup.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Decode%20calldata%20for%20a%20%60transfer%60%20call%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20pretty-calldata%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d00000000000000000000000000000000000000000000000000174b37380cea000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-proof-BnsYGPiB.js"),__vite__mapDeps([99,50,1,58,38])),path:"/cast/reference/cast-proof",type:"mdx",filePath:"cast/reference/cast-proof.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20proof%0A%0A%23%23%23%20NAME%0A%0Acast-proof%20-%20Generate%20a%20storage%20proof%20for%20a%20given%20storage%20slot.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20proof%60%20%5B*options*%5D%20_address_%20%5B*slots...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20a%20storage%20proof%20for%20a%20given%20storage%20slot.%0A%0AThe%20address%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0AThe%20displayed%20output%20is%20a%20JSON%20object%20with%20the%20following%20keys%3A%0A%0A-%20%60accountProof%60%3A%20Proof%20for%20the%20account%20itself%0A-%20%60address%60%3A%20The%20address%20of%20the%20account%0A-%20%60balance%60%3A%20The%20balance%20of%20the%20account%0A-%20%60codeHash%60%3A%20A%20hash%20of%20the%20account's%20code%0A-%20%60nonce%60%3A%20The%20nonce%20of%20the%20account%0A-%20%60storageHash%60%3A%20A%20hash%20of%20the%20account's%20storage%0A-%20%60storageProof%60%3A%20An%20array%20of%20storage%20proofs%2C%20one%20for%20each%20requested%20slot%0A-%20%60storageProof.key%60%3A%20The%20slot%0A-%20%60storageProof.proof%60%3A%20The%20proof%20for%20the%20slot%0A-%20%60storageProof.value%60%3A%20The%20value%20of%20the%20slot%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20proof%20for%20storage%20slot%200%20on%20the%20WETH%20contract%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20proof%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%200%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20storage%5D(%2Fcast%2Freference%2Fcast-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-proof-BnsYGPiB.js"),__vite__mapDeps([99,50,1,58,38])),path:"/cast/reference/cast-proof.html",type:"mdx",filePath:"cast/reference/cast-proof.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20proof%0A%0A%23%23%23%20NAME%0A%0Acast-proof%20-%20Generate%20a%20storage%20proof%20for%20a%20given%20storage%20slot.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20proof%60%20%5B*options*%5D%20_address_%20%5B*slots...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20a%20storage%20proof%20for%20a%20given%20storage%20slot.%0A%0AThe%20address%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0AThe%20displayed%20output%20is%20a%20JSON%20object%20with%20the%20following%20keys%3A%0A%0A-%20%60accountProof%60%3A%20Proof%20for%20the%20account%20itself%0A-%20%60address%60%3A%20The%20address%20of%20the%20account%0A-%20%60balance%60%3A%20The%20balance%20of%20the%20account%0A-%20%60codeHash%60%3A%20A%20hash%20of%20the%20account's%20code%0A-%20%60nonce%60%3A%20The%20nonce%20of%20the%20account%0A-%20%60storageHash%60%3A%20A%20hash%20of%20the%20account's%20storage%0A-%20%60storageProof%60%3A%20An%20array%20of%20storage%20proofs%2C%20one%20for%20each%20requested%20slot%0A-%20%60storageProof.key%60%3A%20The%20slot%0A-%20%60storageProof.proof%60%3A%20The%20proof%20for%20the%20slot%0A-%20%60storageProof.value%60%3A%20The%20value%20of%20the%20slot%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%20%20%0A%60--block%60%20_block_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20proof%20for%20storage%20slot%200%20on%20the%20WETH%20contract%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20proof%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%200%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20storage%5D(%2Fcast%2Freference%2Fcast-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-publish-CGjTgahU.js"),__vite__mapDeps([100,49,50,1,38])),path:"/cast/reference/cast-publish",type:"mdx",filePath:"cast/reference/cast-publish.mdx",content:"import%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20publish%0A%0A%23%23%23%20NAME%0A%0Acast-publish%20-%20Publish%20a%20raw%20transaction%20to%20the%20network.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20publish%60%20%5B*options*%5D%20_tx_%0A%0A%23%23%23%20DESCRIPTION%0A%0APublish%20a%20raw%20pre-signed%20transaction%20to%20the%20network.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Publish%20Options%0A%0A%60--async%60%20%20%0A%60--cast-async%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20wait%20for%20a%20transaction%20receipt.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_ASYNC%60%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Publish%20a%20pre-signed%20transaction%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20publish%20--rpc-url%20%24RPC%20%24TX%0A%20%20%20%60%60%60%0A%0A2.%20Publish%20a%20pre-signed%20transaction%20with%20flashbots.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20publish%20--flashbots%20%24TX%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%2C%20%5Bcast%20mktx%5D(%2Fcast%2Freference%2Fcast-mktx.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-publish-CGjTgahU.js"),__vite__mapDeps([100,49,50,1,38])),path:"/cast/reference/cast-publish.html",type:"mdx",filePath:"cast/reference/cast-publish.mdx",content:"import%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20publish%0A%0A%23%23%23%20NAME%0A%0Acast-publish%20-%20Publish%20a%20raw%20transaction%20to%20the%20network.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20publish%60%20%5B*options*%5D%20_tx_%0A%0A%23%23%23%20DESCRIPTION%0A%0APublish%20a%20raw%20pre-signed%20transaction%20to%20the%20network.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Publish%20Options%0A%0A%60--async%60%20%20%0A%60--cast-async%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20wait%20for%20a%20transaction%20receipt.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_ASYNC%60%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Publish%20a%20pre-signed%20transaction%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20publish%20--rpc-url%20%24RPC%20%24TX%0A%20%20%20%60%60%60%0A%0A2.%20Publish%20a%20pre-signed%20transaction%20with%20flashbots.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20publish%20--flashbots%20%24TX%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%2C%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%2C%20%5Bcast%20mktx%5D(%2Fcast%2Freference%2Fcast-mktx.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-receipt-CmmLJaut.js"),__vite__mapDeps([101,50,1,58,38])),path:"/cast/reference/cast-receipt",type:"mdx",filePath:"cast/reference/cast-receipt.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20receipt%0A%0A%23%23%23%20NAME%0A%0Acast-receipt%20-%20Get%20the%20transaction%20receipt%20for%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20receipt%60%20%5B*options*%5D%20_tx_hash_%20%5B*field*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20transaction%20receipt%20for%20a%20transaction.%0A%0AIf%20_field_%20is%20specified%2C%20then%20only%20the%20given%20field%20of%20the%20receipt%20is%20displayed.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Receipt%20Options%0A%0A%60--async%60%20%20%0A%60--cast-async%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20wait%20for%20the%20transaction%20receipt%20if%20it%20does%20not%20exist%20yet.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_ASYNC%60%0A%0A%60-c%60%20_confirmations_%20%20%0A%60--confirmations%60%20_confirmations_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWait%20a%20number%20of%20confirmations%20before%20exiting.%20Default%3A%20%601%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20a%20transaction%20receipt%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20receipt%20%24TX_HASH%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-receipt-CmmLJaut.js"),__vite__mapDeps([101,50,1,58,38])),path:"/cast/reference/cast-receipt.html",type:"mdx",filePath:"cast/reference/cast-receipt.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20receipt%0A%0A%23%23%23%20NAME%0A%0Acast-receipt%20-%20Get%20the%20transaction%20receipt%20for%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20receipt%60%20%5B*options*%5D%20_tx_hash_%20%5B*field*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20transaction%20receipt%20for%20a%20transaction.%0A%0AIf%20_field_%20is%20specified%2C%20then%20only%20the%20given%20field%20of%20the%20receipt%20is%20displayed.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Receipt%20Options%0A%0A%60--async%60%20%20%0A%60--cast-async%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20wait%20for%20the%20transaction%20receipt%20if%20it%20does%20not%20exist%20yet.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_ASYNC%60%0A%0A%60-c%60%20_confirmations_%20%20%0A%60--confirmations%60%20_confirmations_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWait%20a%20number%20of%20confirmations%20before%20exiting.%20Default%3A%20%601%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20a%20transaction%20receipt%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20receipt%20%24TX_HASH%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-resolve-name-DEeMSUq3.js"),__vite__mapDeps([102,50,1,38])),path:"/cast/reference/cast-resolve-name",type:"mdx",filePath:"cast/reference/cast-resolve-name.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20resolve-name%0A%0A%23%23%23%20NAME%0A%0Acast-resolve-name%20-%20Perform%20an%20ENS%20lookup.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20resolve-name%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20an%20ENS%20lookup.%0A%0AIf%20%60--verify%60%20is%20passed%2C%20then%20a%20reverse%20lookup%20is%20performed%20after%20the%20normal%20lookup%20to%20verify%20that%20the%20name%20is%20correct.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Lookup%20Options%0A%0A%60-v%60%20%20%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20reverse%20lookup%20to%20verify%20that%20the%20name%20is%20correct.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20address%20for%20an%20ENS%20name.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20resolve-name%20vitalik.eth%0A%20%20%20%60%60%60%0A%0A2.%20Perform%20both%20a%20normal%20and%20a%20reverse%20lookup%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20resolve-name%20--verify%20vitalik.eth%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-resolve-name-DEeMSUq3.js"),__vite__mapDeps([102,50,1,38])),path:"/cast/reference/cast-resolve-name.html",type:"mdx",filePath:"cast/reference/cast-resolve-name.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20resolve-name%0A%0A%23%23%23%20NAME%0A%0Acast-resolve-name%20-%20Perform%20an%20ENS%20lookup.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20resolve-name%60%20%5B*options*%5D%20_who_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20an%20ENS%20lookup.%0A%0AIf%20%60--verify%60%20is%20passed%2C%20then%20a%20reverse%20lookup%20is%20performed%20after%20the%20normal%20lookup%20to%20verify%20that%20the%20name%20is%20correct.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Lookup%20Options%0A%0A%60-v%60%20%20%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20reverse%20lookup%20to%20verify%20that%20the%20name%20is%20correct.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20address%20for%20an%20ENS%20name.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20resolve-name%20vitalik.eth%0A%20%20%20%60%60%60%0A%0A2.%20Perform%20both%20a%20normal%20and%20a%20reverse%20lookup%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20resolve-name%20--verify%20vitalik.eth%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-rpc-B8fQvzjh.js"),__vite__mapDeps([103,1])),path:"/cast/reference/cast-rpc",type:"mdx",filePath:"cast/reference/cast-rpc.mdx",content:"%23%23%20cast%20rpc%0A%0A%23%23%23%20NAME%0A%0Acast-rpc%20-%20Perform%20a%20raw%20JSON-RPC%20request%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20rpc%60%20%5B*options*%5D%20_METHOD_%20%5B*PARAMS...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20simple%20JSON-RPC%20POST%20request%20for%20the%20given%20method%20and%20with%20the%20params%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-r%60%20_url_%20%20%0A%60--rpc-url%60%20_url_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20URL%20of%20the%20provider%0A%0A%60-w%60%20%20%0A%60--raw%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPass%20the%20%22params%22%20as%20is%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20If%20--raw%20is%20passed%20the%20first%20PARAM%20will%20be%20taken%20as%20the%20value%20of%20%22params%22.%20If%20no%20params%20are%20given%2C%20stdin%20will%20be%20used.%20For%20example%3A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20rpc%20eth_getBlockByNumber%20'%5B%220x123%22%2C%20false%5D'%20--raw%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20%3D%3E%20%60%7B%22method%22%3A%20%22eth_getBlockByNumber%22%2C%20%22params%22%3A%20%5B%220x123%22%2C%20false%5D%20...%20%7D%60%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20latest%20%60eth_getBlockByNumber%60%20on%20localhost%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20rpc%20eth_getBlockByNumber%20%22latest%22%20%22false%22%0A%20%20%20%60%60%60%0A%0A2.%20Get%20%60eth_getTransactionByHash%60%20on%20localhost%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20rpc%20eth_getTransactionByHash%200x2642e960d3150244e298d52b5b0f024782253e6d0b2c9a01dd4858f7b4665a3f%0A%20%20%20%60%60%60%0A%0A3.%20Get%20latest%20%60eth_getBlockByNumber%60%20on%20etherum%20mainnet%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20rpc%20--rpc-url%20https%3A%2F%2Fmainnet.infura.io%2Fv3%2F%20eth_getBlockByNumber%20%22latest%22%20%22false%22%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-rpc-B8fQvzjh.js"),__vite__mapDeps([103,1])),path:"/cast/reference/cast-rpc.html",type:"mdx",filePath:"cast/reference/cast-rpc.mdx",content:"%23%23%20cast%20rpc%0A%0A%23%23%23%20NAME%0A%0Acast-rpc%20-%20Perform%20a%20raw%20JSON-RPC%20request%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20rpc%60%20%5B*options*%5D%20_METHOD_%20%5B*PARAMS...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20simple%20JSON-RPC%20POST%20request%20for%20the%20given%20method%20and%20with%20the%20params%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-r%60%20_url_%20%20%0A%60--rpc-url%60%20_url_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20URL%20of%20the%20provider%0A%0A%60-w%60%20%20%0A%60--raw%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPass%20the%20%22params%22%20as%20is%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20If%20--raw%20is%20passed%20the%20first%20PARAM%20will%20be%20taken%20as%20the%20value%20of%20%22params%22.%20If%20no%20params%20are%20given%2C%20stdin%20will%20be%20used.%20For%20example%3A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20rpc%20eth_getBlockByNumber%20'%5B%220x123%22%2C%20false%5D'%20--raw%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20%3D%3E%20%60%7B%22method%22%3A%20%22eth_getBlockByNumber%22%2C%20%22params%22%3A%20%5B%220x123%22%2C%20false%5D%20...%20%7D%60%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20latest%20%60eth_getBlockByNumber%60%20on%20localhost%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20rpc%20eth_getBlockByNumber%20%22latest%22%20%22false%22%0A%20%20%20%60%60%60%0A%0A2.%20Get%20%60eth_getTransactionByHash%60%20on%20localhost%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20rpc%20eth_getTransactionByHash%200x2642e960d3150244e298d52b5b0f024782253e6d0b2c9a01dd4858f7b4665a3f%0A%20%20%20%60%60%60%0A%0A3.%20Get%20latest%20%60eth_getBlockByNumber%60%20on%20etherum%20mainnet%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20rpc%20--rpc-url%20https%3A%2F%2Fmainnet.infura.io%2Fv3%2F%20eth_getBlockByNumber%20%22latest%22%20%22false%22%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-run-B5JSof9G.js"),__vite__mapDeps([104,50,1,38])),path:"/cast/reference/cast-run",type:"mdx",filePath:"cast/reference/cast-run.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20run%0A%0A%23%23%23%20NAME%0A%0Acast-run%20-%20Runs%20a%20published%20transaction%20in%20a%20local%20environment%20and%20prints%20the%20trace.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20run%60%20%5B*options*%5D%20%60--rpc-url%60%20_url_%20_tx_hash_%0A%0A%23%23%23%20DESCRIPTION%0A%0ARuns%20a%20published%20transaction%20in%20a%20local%20environment%20and%20prints%20the%20trace.%0A%0ABy%20default%2C%20all%20transactions%20in%20the%20block%20prior%20to%20the%20transaction%20you%20want%20to%20replay%20are%20also%20replayed.%0AIf%20you%20want%20a%20quicker%20result%2C%20you%20can%20use%20%60--quick%60%2C%20however%2C%20results%20may%20differ%20from%20the%20live%20execution.%0A%0AYou%20can%20also%20open%20the%20transaction%20in%20a%20debugger%20by%20passing%20%60--debug%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Run%20Options%0A%0A%60--label%60%20_label_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BLabels%20an%20address%20in%20the%20trace.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20format%20is%20%60%3Caddress%3E%3A%3Clabel%3E%60.%20Can%20be%20passed%20multiple%20times.%0A%0A%60-q%60%20%20%0A%60--quick%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExecutes%20the%20transaction%20only%20with%20the%20state%20from%20the%20previous%20block.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BMay%20result%20in%20different%20results%20than%20the%20live%20execution!%0A%0A%60-v%60%20%20%0A%60--verbose%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAddresses%20are%20fully%20displayed%20instead%20of%20being%20truncated.%0A%0A%60-d%60%20%20%0A%60--debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpen%20the%20script%20in%20the%20%5Bdebugger%5D%5Bdebugger%5D.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Replay%20a%20transaction%20(a%20simple%20transfer)%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A2.%20Replay%20a%20transaction%2C%20applied%20on%20top%20of%20the%20state%20of%20the%20previous%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%20--quick%20%5C%0A%20%20%20%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A3.%20Replay%20a%20transaction%20with%20address%20labels%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%20%5C%0A%20%20%20%20%20--label%200xc564ee9f21ed8a2d8e7e76c085740d5e4c5fafbe%3Asender%20%5C%0A%20%20%20%20%20--label%200x40950267d12e979ad42974be5ac9a7e452f9505e%3Arecipient%20%5C%0A%20%20%20%20%20--label%200xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2%3Aweth%20%5C%0A%20%20%20%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A4.%20Replay%20a%20transaction%20in%20the%20debugger%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%20--debug%20%5C%0A%20%20%20%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A%0A%5Bdebugger%5D%3A%20%2Fforge%2Fdebugger.mdx%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-run-B5JSof9G.js"),__vite__mapDeps([104,50,1,38])),path:"/cast/reference/cast-run.html",type:"mdx",filePath:"cast/reference/cast-run.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20run%0A%0A%23%23%23%20NAME%0A%0Acast-run%20-%20Runs%20a%20published%20transaction%20in%20a%20local%20environment%20and%20prints%20the%20trace.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20run%60%20%5B*options*%5D%20%60--rpc-url%60%20_url_%20_tx_hash_%0A%0A%23%23%23%20DESCRIPTION%0A%0ARuns%20a%20published%20transaction%20in%20a%20local%20environment%20and%20prints%20the%20trace.%0A%0ABy%20default%2C%20all%20transactions%20in%20the%20block%20prior%20to%20the%20transaction%20you%20want%20to%20replay%20are%20also%20replayed.%0AIf%20you%20want%20a%20quicker%20result%2C%20you%20can%20use%20%60--quick%60%2C%20however%2C%20results%20may%20differ%20from%20the%20live%20execution.%0A%0AYou%20can%20also%20open%20the%20transaction%20in%20a%20debugger%20by%20passing%20%60--debug%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Run%20Options%0A%0A%60--label%60%20_label_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BLabels%20an%20address%20in%20the%20trace.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20format%20is%20%60%3Caddress%3E%3A%3Clabel%3E%60.%20Can%20be%20passed%20multiple%20times.%0A%0A%60-q%60%20%20%0A%60--quick%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExecutes%20the%20transaction%20only%20with%20the%20state%20from%20the%20previous%20block.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BMay%20result%20in%20different%20results%20than%20the%20live%20execution!%0A%0A%60-v%60%20%20%0A%60--verbose%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAddresses%20are%20fully%20displayed%20instead%20of%20being%20truncated.%0A%0A%60-d%60%20%20%0A%60--debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpen%20the%20script%20in%20the%20%5Bdebugger%5D%5Bdebugger%5D.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Replay%20a%20transaction%20(a%20simple%20transfer)%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A2.%20Replay%20a%20transaction%2C%20applied%20on%20top%20of%20the%20state%20of%20the%20previous%20block%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%20--quick%20%5C%0A%20%20%20%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A3.%20Replay%20a%20transaction%20with%20address%20labels%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%20%5C%0A%20%20%20%20%20--label%200xc564ee9f21ed8a2d8e7e76c085740d5e4c5fafbe%3Asender%20%5C%0A%20%20%20%20%20--label%200x40950267d12e979ad42974be5ac9a7e452f9505e%3Arecipient%20%5C%0A%20%20%20%20%20--label%200xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2%3Aweth%20%5C%0A%20%20%20%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A4.%20Replay%20a%20transaction%20in%20the%20debugger%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20run%20--debug%20%5C%0A%20%20%20%20%200xd15e0237413d7b824b784e1bbc3926e52f4726e5e5af30418803b8b327b4f8ca%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A%0A%5Bdebugger%5D%3A%20%2Fforge%2Fdebugger.mdx%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-selectors-Bds5qGdf.js"),__vite__mapDeps([105,38,1])),path:"/cast/reference/cast-selectors",type:"mdx",filePath:"cast/reference/cast-selectors.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20selectors%0A%0A%23%23%23%20NAME%0A%0Acast-selectors%20-%20Extracts%20function%20selectors%20and%20arguments%20from%20bytecode%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20selectors%60%20%5B*options*%5D%20_bytecode_%0A%0A%23%23%23%20DESCRIPTION%0A%0AExtracts%20function%20selectors%20and%20arguments%20from%20bytecode%20using%20the%20%5BEVMole%20library%5D(https%3A%2F%2Fgithub.com%2Fcdump%2Fevmole)%0A%0A%23%23%23%20OPTIONS%0A%0A%60-r%60%20%20%0A%60--resolve%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BResolve%20the%20function%20signatures%20for%20the%20extracted%20selectors%20using%20https%3A%2F%2Fopenchain.xyz%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20WETH's%20contract%20function%20signatures%20%26%20arguments%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20selectors%20%24(cast%20code%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2)%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-selectors-Bds5qGdf.js"),__vite__mapDeps([105,38,1])),path:"/cast/reference/cast-selectors.html",type:"mdx",filePath:"cast/reference/cast-selectors.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20selectors%0A%0A%23%23%23%20NAME%0A%0Acast-selectors%20-%20Extracts%20function%20selectors%20and%20arguments%20from%20bytecode%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20selectors%60%20%5B*options*%5D%20_bytecode_%0A%0A%23%23%23%20DESCRIPTION%0A%0AExtracts%20function%20selectors%20and%20arguments%20from%20bytecode%20using%20the%20%5BEVMole%20library%5D(https%3A%2F%2Fgithub.com%2Fcdump%2Fevmole)%0A%0A%23%23%23%20OPTIONS%0A%0A%60-r%60%20%20%0A%60--resolve%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BResolve%20the%20function%20signatures%20for%20the%20extracted%20selectors%20using%20https%3A%2F%2Fopenchain.xyz%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20WETH's%20contract%20function%20signatures%20%26%20arguments%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20selectors%20%24(cast%20code%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2)%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-send-CIvv5kuC.js"),__vite__mapDeps([106,43,1,93,73,44,45,46,47,48,49,50,51,58,38])),path:"/cast/reference/cast-send",type:"mdx",filePath:"cast/reference/cast-send.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20TransactionOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Ftransaction-options.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20send%0A%0A%23%23%23%20NAME%0A%0Acast-send%20-%20Sign%20and%20publish%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20send%60%20%5B*options*%5D%20_to_%20%5B*sig*%5D%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ASign%20and%20publish%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%3CTransactionOptions%20%2F%3E%0A%0A%60--resend%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BReuse%20the%20latest%20nonce%20of%20the%20sending%20account.%0A%0A%60--create%60%20_code_%20%5B*sig*%20*args...*%5D%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDeploy%20a%20contract%20by%20specifying%20raw%20bytecode%2C%20in%20place%20of%20specifying%20a%20_to_%20address.%0A%0A%60--auth%60%20_auth_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEIP-7702%20authorization%20list.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20either%20a%20hex-encoded%20signed%20authorization%20or%20an%20address.%0A%0A%60--access-list%60%20_access_list_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEIP-2930%20access%20list.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAccepts%20either%20a%20JSON-encoded%20access%20list%20or%20an%20empty%20value%20to%20create%20the%20access%20list%20via%20an%20RPC%20call%20to%20%60eth_createAccessList%60.%20To%20retrieve%20only%20the%20access%20list%20portion%2C%20use%20the%20%60cast%20access-list%60%20command.%0A%0A%23%23%23%23%20Receipt%20Options%0A%0A%60--async%60%20%20%0A%60--cast-async%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20wait%20for%20the%20transaction%20receipt%20if%20it%20does%20not%20exist%20yet.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_ASYNC%60%0A%0A%60-c%60%20_confirmations_%20%20%0A%60--confirmations%60%20_confirmations_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWait%20a%20number%20of%20confirmations%20before%20exiting.%20Default%3A%20%601%60.%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%60--unlocked%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20via%20%60eth_sendTransaction%60%20using%20the%20%60--from%60%20argument%20or%20%60%24ETH_FROM%60%20as%20sender.%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Send%20some%20ether%20to%20Vitalik%20using%20your%20Ledger%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20--ledger%20vitalik.eth%20--value%200.1ether%0A%20%20%20%60%60%60%0A%0A2.%20Call%20%60deposit(address%20token%2C%20uint256%20amount)%60%20on%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20--ledger%200x...%20%22deposit(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A3.%20Call%20a%20function%20that%20expects%20a%20%60struct%60%3A%0A%0A%20%20%20%60%60%60solidity%0A%20%20%20contract%20Test%20%7B%0A%20%20%20%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20function%20myfunction(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%20%20%20%7D%0A%20%20%20%60%60%60%0A%0A%20%20%20Structs%20are%20encoded%20as%20tuples%20(see%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding))%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%200x...%20%22myfunction((address%2Cuint256))%22%20%22(0x...%2C1)%22%0A%20%20%20%60%60%60%0A%0A4.%20Send%20a%20transaction%20with%20hex%20data%20in%20the%20%60input%60%20field%20of%20the%20transaction%20object%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%200x...%200x68656c6c6f20776f726c64%0A%20%20%20%60%60%60%0A%0A5.%20Sign%20an%20EIP-7702%20authorization%20and%20attach%20it%20to%20a%20transaction%20from%20a%20different%20sender%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20%24(cast%20az)%20--private-key%20%3Csender-pk%3E%20--auth%20%24(cast%20wallet%20sign-auth%20%3Caddress%3E%20--private-key%20%3Cdelegator-pk%3E)%0A%20%20%20%60%60%60%0A%0A6.%20Send%20an%20EIP-7702%20transaction%20delegating%20the%20sender%20to%20%60%3Caddress%3E%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20%24(cast%20az)%20--auth%20%3Caddress%3E%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%2C%20%5Bcast%20mktx%5D(%2Fcast%2Freference%2Fcast-mktx.mdx)%2C%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-send-CIvv5kuC.js"),__vite__mapDeps([106,43,1,93,73,44,45,46,47,48,49,50,51,58,38])),path:"/cast/reference/cast-send.html",type:"mdx",filePath:"cast/reference/cast-send.mdx",content:"import%20SigDescription%20from%20%22.%2Fsig-description.mdx%22%3B%0Aimport%20TransactionOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Ftransaction-options.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20send%0A%0A%23%23%23%20NAME%0A%0Acast-send%20-%20Sign%20and%20publish%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20send%60%20%5B*options*%5D%20_to_%20%5B*sig*%5D%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ASign%20and%20publish%20a%20transaction.%0A%0AThe%20destination%20(_to_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%3CSigDescription%20%2F%3E%0A%0A%23%23%23%20OPTIONS%0A%0A%3CTransactionOptions%20%2F%3E%0A%0A%60--resend%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BReuse%20the%20latest%20nonce%20of%20the%20sending%20account.%0A%0A%60--create%60%20_code_%20%5B*sig*%20*args...*%5D%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDeploy%20a%20contract%20by%20specifying%20raw%20bytecode%2C%20in%20place%20of%20specifying%20a%20_to_%20address.%0A%0A%60--auth%60%20_auth_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEIP-7702%20authorization%20list.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20either%20a%20hex-encoded%20signed%20authorization%20or%20an%20address.%0A%0A%60--access-list%60%20_access_list_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEIP-2930%20access%20list.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAccepts%20either%20a%20JSON-encoded%20access%20list%20or%20an%20empty%20value%20to%20create%20the%20access%20list%20via%20an%20RPC%20call%20to%20%60eth_createAccessList%60.%20To%20retrieve%20only%20the%20access%20list%20portion%2C%20use%20the%20%60cast%20access-list%60%20command.%0A%0A%23%23%23%23%20Receipt%20Options%0A%0A%60--async%60%20%20%0A%60--cast-async%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20wait%20for%20the%20transaction%20receipt%20if%20it%20does%20not%20exist%20yet.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_ASYNC%60%0A%0A%60-c%60%20_confirmations_%20%20%0A%60--confirmations%60%20_confirmations_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWait%20a%20number%20of%20confirmations%20before%20exiting.%20Default%3A%20%601%60.%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%60--unlocked%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20via%20%60eth_sendTransaction%60%20using%20the%20%60--from%60%20argument%20or%20%60%24ETH_FROM%60%20as%20sender.%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Send%20some%20ether%20to%20Vitalik%20using%20your%20Ledger%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20--ledger%20vitalik.eth%20--value%200.1ether%0A%20%20%20%60%60%60%0A%0A2.%20Call%20%60deposit(address%20token%2C%20uint256%20amount)%60%20on%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20--ledger%200x...%20%22deposit(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A3.%20Call%20a%20function%20that%20expects%20a%20%60struct%60%3A%0A%0A%20%20%20%60%60%60solidity%0A%20%20%20contract%20Test%20%7B%0A%20%20%20%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20function%20myfunction(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%20%20%20%7D%0A%20%20%20%60%60%60%0A%0A%20%20%20Structs%20are%20encoded%20as%20tuples%20(see%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding))%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%200x...%20%22myfunction((address%2Cuint256))%22%20%22(0x...%2C1)%22%0A%20%20%20%60%60%60%0A%0A4.%20Send%20a%20transaction%20with%20hex%20data%20in%20the%20%60input%60%20field%20of%20the%20transaction%20object%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%200x...%200x68656c6c6f20776f726c64%0A%20%20%20%60%60%60%0A%0A5.%20Sign%20an%20EIP-7702%20authorization%20and%20attach%20it%20to%20a%20transaction%20from%20a%20different%20sender%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20%24(cast%20az)%20--private-key%20%3Csender-pk%3E%20--auth%20%24(cast%20wallet%20sign-auth%20%3Caddress%3E%20--private-key%20%3Cdelegator-pk%3E)%0A%20%20%20%60%60%60%0A%0A6.%20Send%20an%20EIP-7702%20transaction%20delegating%20the%20sender%20to%20%60%3Caddress%3E%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20send%20%24(cast%20az)%20--auth%20%3Caddress%3E%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%2C%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%2C%20%5Bcast%20mktx%5D(%2Fcast%2Freference%2Fcast-mktx.mdx)%2C%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-shl-C_j7Sts_.js"),__vite__mapDeps([107,108,1,38])),path:"/cast/reference/cast-shl",type:"mdx",filePath:"cast/reference/cast-shl.mdx",content:"import%20BaseOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fbase-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20shl%0A%0A%23%23%23%20NAME%0A%0Acast-shl%20-%20Perform%20a%20left%20shifting%20operation.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20shl%60%20%5B*options*%5D%20_value_%20_shift_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20left%20shifting%20operation.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CBaseOptions%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Perform%20a%203%20position%20left%20bit%20shift%20of%20the%20number%2061%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20shl%20--base-in%2010%2061%203%0A%20%20%20%60%60%60%0A%0A%3E%20Note%3A%20The%20--base-in%20parameter%20is%20not%20enforced%20but%20will%20be%20needed%20if%20the%20input%20is%20ambiguous.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20shr%5D(%2Fcast%2Freference%2Fcast-shr.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-shl-C_j7Sts_.js"),__vite__mapDeps([107,108,1,38])),path:"/cast/reference/cast-shl.html",type:"mdx",filePath:"cast/reference/cast-shl.mdx",content:"import%20BaseOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fbase-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20shl%0A%0A%23%23%23%20NAME%0A%0Acast-shl%20-%20Perform%20a%20left%20shifting%20operation.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20shl%60%20%5B*options*%5D%20_value_%20_shift_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20left%20shifting%20operation.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CBaseOptions%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Perform%20a%203%20position%20left%20bit%20shift%20of%20the%20number%2061%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20shl%20--base-in%2010%2061%203%0A%20%20%20%60%60%60%0A%0A%3E%20Note%3A%20The%20--base-in%20parameter%20is%20not%20enforced%20but%20will%20be%20needed%20if%20the%20input%20is%20ambiguous.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20shr%5D(%2Fcast%2Freference%2Fcast-shr.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-shr-PWSSdpHF.js"),__vite__mapDeps([109,108,1,38])),path:"/cast/reference/cast-shr",type:"mdx",filePath:"cast/reference/cast-shr.mdx",content:"import%20BaseOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fbase-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20shr%0A%0A%23%23%23%20NAME%0A%0Acast-shr%20-%20Perform%20a%20right%20shifting%20operation.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20shr%60%20%5B*options*%5D%20_value_%20_shift_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20right%20shifting%20operation.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CBaseOptions%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Perform%20a%20single%20right%20bit%20shift%20of%200x12%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20shr%20--base-in%2016%200x12%201%0A%20%20%20%60%60%60%0A%0A%3E%20Note%3A%20The%20--base-in%20parameter%20is%20not%20enforced%20but%20will%20be%20needed%20if%20the%20input%20is%20ambiguous.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20shl%5D(%2Fcast%2Freference%2Fcast-shl.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-shr-PWSSdpHF.js"),__vite__mapDeps([109,108,1,38])),path:"/cast/reference/cast-shr.html",type:"mdx",filePath:"cast/reference/cast-shr.mdx",content:"import%20BaseOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fbase-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20shr%0A%0A%23%23%23%20NAME%0A%0Acast-shr%20-%20Perform%20a%20right%20shifting%20operation.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20shr%60%20%5B*options*%5D%20_value_%20_shift_%0A%0A%23%23%23%20DESCRIPTION%0A%0APerform%20a%20right%20shifting%20operation.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CBaseOptions%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Perform%20a%20single%20right%20bit%20shift%20of%200x12%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20shr%20--base-in%2016%200x12%201%0A%20%20%20%60%60%60%0A%0A%3E%20Note%3A%20The%20--base-in%20parameter%20is%20not%20enforced%20but%20will%20be%20needed%20if%20the%20input%20is%20ambiguous.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20shl%5D(%2Fcast%2Freference%2Fcast-shl.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-sig-event-D8uSDH94.js"),__vite__mapDeps([110,38,1])),path:"/cast/reference/cast-sig-event",type:"mdx",filePath:"cast/reference/cast-sig-event.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20sig-event%0A%0A%23%23%23%20NAME%0A%0Acast-sig-event%20-%20Generate%20event%20signatures%20from%20event%20string.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20sig-event%60%20%5B*options*%5D%20_event_string_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20event%20signatures%20from%20event%20string.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20hash%20for%20the%20log%20%60Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20sig-event%20%22Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-sig-event-D8uSDH94.js"),__vite__mapDeps([110,38,1])),path:"/cast/reference/cast-sig-event.html",type:"mdx",filePath:"cast/reference/cast-sig-event.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20sig-event%0A%0A%23%23%23%20NAME%0A%0Acast-sig-event%20-%20Generate%20event%20signatures%20from%20event%20string.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20sig-event%60%20%5B*options*%5D%20_event_string_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20event%20signatures%20from%20event%20string.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20hash%20for%20the%20log%20%60Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20sig-event%20%22Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-sig-DVGxFMwz.js"),__vite__mapDeps([111,38,1])),path:"/cast/reference/cast-sig",type:"mdx",filePath:"cast/reference/cast-sig.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20sig%0A%0A%23%23%23%20NAME%0A%0Acast-sig%20-%20Get%20the%20selector%20for%20a%20function.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20sig%60%20%5B*options*%5D%20_sig_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20selector%20for%20a%20function.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20selector%20for%20the%20function%20%60transfer(address%2Cuint256)%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20sig%20%22transfer(address%2Cuint256)%22%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20selector%20for%20a%20function%20that%20expects%20a%20%60struct%60%3A%0A%0A%20%20%20%60%60%60solidity%0A%20%20%20contract%20Test%20%7B%0A%20%20%20%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20function%20myfunction(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%20%20%20%7D%0A%20%20%20%60%60%60%0A%0A%20%20%20Structs%20are%20encoded%20as%20tuples%20(see%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)).%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20sig%20%22myfunction((address%2Cuint256))%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-sig-DVGxFMwz.js"),__vite__mapDeps([111,38,1])),path:"/cast/reference/cast-sig.html",type:"mdx",filePath:"cast/reference/cast-sig.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20sig%0A%0A%23%23%23%20NAME%0A%0Acast-sig%20-%20Get%20the%20selector%20for%20a%20function.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20sig%60%20%5B*options*%5D%20_sig_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20selector%20for%20a%20function.%0A%0AThe%20signature%20(_sig_)%20is%20a%20fragment%20in%20the%20form%20%60%3Cfunction%20name%3E(%3Ctypes...%3E)%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20selector%20for%20the%20function%20%60transfer(address%2Cuint256)%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20sig%20%22transfer(address%2Cuint256)%22%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20selector%20for%20a%20function%20that%20expects%20a%20%60struct%60%3A%0A%0A%20%20%20%60%60%60solidity%0A%20%20%20contract%20Test%20%7B%0A%20%20%20%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20uint256%20amount%3B%0A%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20function%20myfunction(MyStruct%20memory%20t)%20public%20pure%20%7B%7D%0A%20%20%20%7D%0A%20%20%20%60%60%60%0A%0A%20%20%20Structs%20are%20encoded%20as%20tuples%20(see%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)).%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20sig%20%22myfunction((address%2Cuint256))%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bstruct%20encoding%5D(%2Fmisc%2Fstruct-encoding)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-storage-DqfrEj22.js"),__vite__mapDeps([112,50,1,38])),path:"/cast/reference/cast-storage",type:"mdx",filePath:"cast/reference/cast-storage.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20storage%0A%0A%23%23%23%20NAME%0A%0Acast-storage%20-%20Get%20the%20raw%20value%20of%20a%20contract's%20storage%20slot%20or%20its%20full%20storage%20layout.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20storage%60%20%5B*options*%5D%20_address_%20_slot_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20raw%20value%20of%20a%20contract's%20storage%20slot.%20(Slot%20locations%20greater%20than%2018446744073709551615%20(u64%3A%3AMAX)%20should%20be%20given%20as%20hex.%20Use%20%60cast%20index%60%20to%20compute%20mapping%20slots.)%0A%0AOmit%20the%20slot%20number%20to%20get%20the%20full%20storage%20layout%20(requires%20contract%20to%20be%20verified%20on%20Etherscan%20with%20a%20Solidity%20version%20%3E%200.6.5%20or%20you%20must%20be%20in%20a%20Forge%20project%20with%20a%20local%20contract%20matching%20the%20deployed%20bytecode).%0A%0AThe%20address%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%0A%60--block%60%20_block_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20value%20of%20slot%200%20on%20the%20WETH%20contract.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20storage%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%200%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20full%20storage%20layout%20of%20the%20Milady%20contract.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20storage%200x5Af0D9827E0c53E4799BB226655A1de152A425a5%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-storage-DqfrEj22.js"),__vite__mapDeps([112,50,1,38])),path:"/cast/reference/cast-storage.html",type:"mdx",filePath:"cast/reference/cast-storage.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20storage%0A%0A%23%23%23%20NAME%0A%0Acast-storage%20-%20Get%20the%20raw%20value%20of%20a%20contract's%20storage%20slot%20or%20its%20full%20storage%20layout.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20storage%60%20%5B*options*%5D%20_address_%20_slot_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20raw%20value%20of%20a%20contract's%20storage%20slot.%20(Slot%20locations%20greater%20than%2018446744073709551615%20(u64%3A%3AMAX)%20should%20be%20given%20as%20hex.%20Use%20%60cast%20index%60%20to%20compute%20mapping%20slots.)%0A%0AOmit%20the%20slot%20number%20to%20get%20the%20full%20storage%20layout%20(requires%20contract%20to%20be%20verified%20on%20Etherscan%20with%20a%20Solidity%20version%20%3E%200.6.5%20or%20you%20must%20be%20in%20a%20Forge%20project%20with%20a%20local%20contract%20matching%20the%20deployed%20bytecode).%0A%0AThe%20address%20(_address_)%20can%20be%20an%20ENS%20name%20or%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Query%20Options%0A%0A%60-B%60%20_block_%0A%60--block%60%20_block_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20height%20you%20want%20to%20query%20at.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20be%20a%20block%20number%2C%20or%20any%20of%20the%20tags%3A%20%60earliest%60%2C%20%60finalized%60%2C%20%60safe%60%2C%20%60latest%60%20or%20%60pending%60.%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20value%20of%20slot%200%20on%20the%20WETH%20contract.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20storage%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%200%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20full%20storage%20layout%20of%20the%20Milady%20contract.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20storage%200x5Af0D9827E0c53E4799BB226655A1de152A425a5%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-ascii-2QckEDL0.js"),__vite__mapDeps([113,38,1])),path:"/cast/reference/cast-to-ascii",type:"mdx",filePath:"cast/reference/cast-to-ascii.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-ascii%0A%0A%23%23%23%20NAME%0A%0Acast-to-ascii%20-%20Convert%20hex%20data%20to%20an%20ASCII%20string.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-ascii%60%20%5B*options*%5D%20_text_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20hex%20data%20to%20an%20ASCII%20string.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20hex%20data%20to%20an%20ASCII%20string%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-ascii%20%220x68656c6c6f%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-ascii-2QckEDL0.js"),__vite__mapDeps([113,38,1])),path:"/cast/reference/cast-to-ascii.html",type:"mdx",filePath:"cast/reference/cast-to-ascii.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-ascii%0A%0A%23%23%23%20NAME%0A%0Acast-to-ascii%20-%20Convert%20hex%20data%20to%20an%20ASCII%20string.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-ascii%60%20%5B*options*%5D%20_text_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20hex%20data%20to%20an%20ASCII%20string.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20hex%20data%20to%20an%20ASCII%20string%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-ascii%20%220x68656c6c6f%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-base-C58MPeqP.js"),__vite__mapDeps([114,38,1])),path:"/cast/reference/cast-to-base",type:"mdx",filePath:"cast/reference/cast-to-base.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-base%0A%0A%23%23%23%20NAME%0A%0Acast-to-base%20-%20Convert%20a%20number%20of%20one%20base%20to%20another.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-base%60%20%5B*options*%5D%20_value_%20_base_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20number%20of%20one%20base%20to%20another.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Base%20Options%0A%0A%60--base-in%60%20_base_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20base%20of%20the%20input%20number.%20Available%20options%3A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B10%2C%20d%2C%20dec%2C%20decimal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B16%2C%20h%2C%20hex%2C%20hexadecimal%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20the%20decimal%20number%2064%20to%20hexadecimal%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-base%2064%20hex%0A%20%20%20%60%60%60%0A%0A2.%20Convert%20the%20hexadecimal%20number%20100%20to%20binary%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-base%200x100%202%0A%20%20%20%60%60%60%0A%0A%3E%20Note%3A%20The%20--base-in%20parameter%20is%20not%20enforced%20but%20will%20be%20needed%20if%20the%20input%20is%20ambiguous.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-base-C58MPeqP.js"),__vite__mapDeps([114,38,1])),path:"/cast/reference/cast-to-base.html",type:"mdx",filePath:"cast/reference/cast-to-base.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-base%0A%0A%23%23%23%20NAME%0A%0Acast-to-base%20-%20Convert%20a%20number%20of%20one%20base%20to%20another.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-base%60%20%5B*options*%5D%20_value_%20_base_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20number%20of%20one%20base%20to%20another.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Base%20Options%0A%0A%60--base-in%60%20_base_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20base%20of%20the%20input%20number.%20Available%20options%3A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B10%2C%20d%2C%20dec%2C%20decimal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B16%2C%20h%2C%20hex%2C%20hexadecimal%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20the%20decimal%20number%2064%20to%20hexadecimal%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-base%2064%20hex%0A%20%20%20%60%60%60%0A%0A2.%20Convert%20the%20hexadecimal%20number%20100%20to%20binary%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-base%200x100%202%0A%20%20%20%60%60%60%0A%0A%3E%20Note%3A%20The%20--base-in%20parameter%20is%20not%20enforced%20but%20will%20be%20needed%20if%20the%20input%20is%20ambiguous.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-bytes32-DMQJ8GjS.js"),__vite__mapDeps([115,38,1])),path:"/cast/reference/cast-to-bytes32",type:"mdx",filePath:"cast/reference/cast-to-bytes32.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-bytes32%0A%0A%23%23%23%20NAME%0A%0Acast-to-bytes32%20-%20Right-pads%20hex%20data%20to%2032%20bytes.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-bytes32%60%20%5B*options*%5D%20_bytes_%0A%0A%23%23%23%20DESCRIPTION%0A%0ARight-pads%20hex%20data%20to%2032%20bytes.%0A%0ANote%20that%20this%20command%20is%20for%20padding%20a%20byte%20string%20only.%20If%20you're%20looking%20to%20format%20a%20%5BSolidity%20string%20literal%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.16%2Ftypes.html%23string-literals-and-types)%20into%20%60bytes32%60%2C%20use%20%5Bformat-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx)%20instead.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-bytes32-DMQJ8GjS.js"),__vite__mapDeps([115,38,1])),path:"/cast/reference/cast-to-bytes32.html",type:"mdx",filePath:"cast/reference/cast-to-bytes32.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-bytes32%0A%0A%23%23%23%20NAME%0A%0Acast-to-bytes32%20-%20Right-pads%20hex%20data%20to%2032%20bytes.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-bytes32%60%20%5B*options*%5D%20_bytes_%0A%0A%23%23%23%20DESCRIPTION%0A%0ARight-pads%20hex%20data%20to%2032%20bytes.%0A%0ANote%20that%20this%20command%20is%20for%20padding%20a%20byte%20string%20only.%20If%20you're%20looking%20to%20format%20a%20%5BSolidity%20string%20literal%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.16%2Ftypes.html%23string-literals-and-types)%20into%20%60bytes32%60%2C%20use%20%5Bformat-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx)%20instead.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-check-sum-address-Cx8Iq7E5.js"),__vite__mapDeps([116,38,1])),path:"/cast/reference/cast-to-check-sum-address",type:"mdx",filePath:"cast/reference/cast-to-check-sum-address.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-check-sum-address%0A%0A%23%23%23%20NAME%0A%0Acast-to-check-sum-address%20-%20Convert%20an%20address%20to%20a%20checksummed%20format%20(%5BEIP-55%5D%5Beip55%5D).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-check-sum-address%60%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20address%20to%20a%20checksummed%20format%20(%5BEIP-55%5D%5Beip55%5D).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20an%20address%20to%20its%20checksummed%20format%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-check-sum-address%200xDf99A0839818B3f120EBAC9B73f82B617Dc6A555%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A%0A%5Beip55%5D%3A%20https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-55.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-check-sum-address-Cx8Iq7E5.js"),__vite__mapDeps([116,38,1])),path:"/cast/reference/cast-to-check-sum-address.html",type:"mdx",filePath:"cast/reference/cast-to-check-sum-address.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-check-sum-address%0A%0A%23%23%23%20NAME%0A%0Acast-to-check-sum-address%20-%20Convert%20an%20address%20to%20a%20checksummed%20format%20(%5BEIP-55%5D%5Beip55%5D).%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-check-sum-address%60%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20address%20to%20a%20checksummed%20format%20(%5BEIP-55%5D%5Beip55%5D).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20an%20address%20to%20its%20checksummed%20format%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-check-sum-address%200xDf99A0839818B3f120EBAC9B73f82B617Dc6A555%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A%0A%5Beip55%5D%3A%20https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-55.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-dec-C_UxxHlO.js"),__vite__mapDeps([117,38,1])),path:"/cast/reference/cast-to-dec",type:"mdx",filePath:"cast/reference/cast-to-dec.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-dec%0A%0A%23%23%23%20NAME%0A%0Acast-to-dec%20-%20Converts%20a%20number%20of%20one%20base%20to%20decimal%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-dec%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConverts%20a%20number%20of%20one%20base%20to%20decimal%0A%0A%23%23%23%20OPTIONS%0A%0A%60--base-in%60%20_base_in_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20input%20base.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20ff%20in%20hexadecimal%20to%20decimal%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-dec%20ff%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-dec-C_UxxHlO.js"),__vite__mapDeps([117,38,1])),path:"/cast/reference/cast-to-dec.html",type:"mdx",filePath:"cast/reference/cast-to-dec.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-dec%0A%0A%23%23%23%20NAME%0A%0Acast-to-dec%20-%20Converts%20a%20number%20of%20one%20base%20to%20decimal%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-dec%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConverts%20a%20number%20of%20one%20base%20to%20decimal%0A%0A%23%23%23%20OPTIONS%0A%0A%60--base-in%60%20_base_in_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20input%20base.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20ff%20in%20hexadecimal%20to%20decimal%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-dec%20ff%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-fixed-point-D-oTrvwG.js"),__vite__mapDeps([118,38,1])),path:"/cast/reference/cast-to-fixed-point",type:"mdx",filePath:"cast/reference/cast-to-fixed-point.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-fixed-point%0A%0A%23%23%23%20NAME%0A%0Acast-to-fixed-point%20-%20Convert%20an%20integer%20into%20a%20fixed%20point%20number.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-fixed-point%60%20%5B*options*%5D%20_decimals_%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20integer%20into%20a%20fixed%20point%20number.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20250%20to%20a%20fixed%20point%20number%20with%202%20decimals%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-fixed-point%202%20250%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-fixed-point-D-oTrvwG.js"),__vite__mapDeps([118,38,1])),path:"/cast/reference/cast-to-fixed-point.html",type:"mdx",filePath:"cast/reference/cast-to-fixed-point.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-fixed-point%0A%0A%23%23%23%20NAME%0A%0Acast-to-fixed-point%20-%20Convert%20an%20integer%20into%20a%20fixed%20point%20number.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-fixed-point%60%20%5B*options*%5D%20_decimals_%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20integer%20into%20a%20fixed%20point%20number.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%20250%20to%20a%20fixed%20point%20number%20with%202%20decimals%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-fixed-point%202%20250%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-hex-sB1Oux0P.js"),__vite__mapDeps([119,38,1])),path:"/cast/reference/cast-to-hex",type:"mdx",filePath:"cast/reference/cast-to-hex.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-hex%0A%0A%23%23%23%20NAME%0A%0Acast-to-hex%20-%20Converts%20a%20number%20of%20one%20base%20to%20another%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-hex%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConverts%20a%20number%20of%20one%20base%20to%20another%0A%0A%23%23%23%20OPTIONS%0A%0A%60--base-in%60%20_base_in_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20input%20base.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-hex-sB1Oux0P.js"),__vite__mapDeps([119,38,1])),path:"/cast/reference/cast-to-hex.html",type:"mdx",filePath:"cast/reference/cast-to-hex.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-hex%0A%0A%23%23%23%20NAME%0A%0Acast-to-hex%20-%20Converts%20a%20number%20of%20one%20base%20to%20another%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-hex%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConverts%20a%20number%20of%20one%20base%20to%20another%0A%0A%23%23%23%20OPTIONS%0A%0A%60--base-in%60%20_base_in_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20input%20base.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-hexdata-BTiRU2Z-.js"),__vite__mapDeps([120,38,1])),path:"/cast/reference/cast-to-hexdata",type:"mdx",filePath:"cast/reference/cast-to-hexdata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-hexdata%0A%0A%23%23%23%20NAME%0A%0Acast-to-hexdata%20-%20Normalize%20the%20input%20to%20lowercase%2C%200x-prefixed%20hex.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-hexdata%60%20%5B*options*%5D%20_input_%0A%0A%23%23%23%20DESCRIPTION%0A%0ANormalize%20the%20input%20to%20lowercase%2C%200x-prefixed%20hex.%0A%0AThe%20input%20data%20(_input_)%20can%20either%20be%3A%0A%0A-%20Mixed%20case%20hex%20with%20or%20without%20the%200x%20prefix.%0A-%200x%20prefixed%20hex%20that%20should%20be%20concatenated%2C%20separated%20by%20%60%3A%60.%0A-%20An%20absolute%20path%20to%20a%20file%20containing%20hex.%0A-%20A%20%60%40tag%60%2C%20where%20the%20tag%20is%20defined%20in%20an%20environment%20variable.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Add%200x%20prefix%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-hexdata%20deadbeef%0A%20%20%20%60%60%60%0A%0A2.%20Concatenate%20hex%20values%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-hexdata%20%22deadbeef%3A0xbeef%22%0A%20%20%20%60%60%60%0A%0A3.%20Normalize%20hex%20value%20in%20%60MY_VAR%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-hexdata%20%22%40MY_VAR%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-hexdata-BTiRU2Z-.js"),__vite__mapDeps([120,38,1])),path:"/cast/reference/cast-to-hexdata.html",type:"mdx",filePath:"cast/reference/cast-to-hexdata.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-hexdata%0A%0A%23%23%23%20NAME%0A%0Acast-to-hexdata%20-%20Normalize%20the%20input%20to%20lowercase%2C%200x-prefixed%20hex.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-hexdata%60%20%5B*options*%5D%20_input_%0A%0A%23%23%23%20DESCRIPTION%0A%0ANormalize%20the%20input%20to%20lowercase%2C%200x-prefixed%20hex.%0A%0AThe%20input%20data%20(_input_)%20can%20either%20be%3A%0A%0A-%20Mixed%20case%20hex%20with%20or%20without%20the%200x%20prefix.%0A-%200x%20prefixed%20hex%20that%20should%20be%20concatenated%2C%20separated%20by%20%60%3A%60.%0A-%20An%20absolute%20path%20to%20a%20file%20containing%20hex.%0A-%20A%20%60%40tag%60%2C%20where%20the%20tag%20is%20defined%20in%20an%20environment%20variable.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Add%200x%20prefix%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-hexdata%20deadbeef%0A%20%20%20%60%60%60%0A%0A2.%20Concatenate%20hex%20values%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-hexdata%20%22deadbeef%3A0xbeef%22%0A%20%20%20%60%60%60%0A%0A3.%20Normalize%20hex%20value%20in%20%60MY_VAR%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-hexdata%20%22%40MY_VAR%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-int256-Cn9ZHuKd.js"),__vite__mapDeps([121,38,1])),path:"/cast/reference/cast-to-int256",type:"mdx",filePath:"cast/reference/cast-to-int256.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-int256%0A%0A%23%23%23%20NAME%0A%0Acast-to-int256%20-%20Convert%20a%20number%20to%20a%20hex-encoded%20int256.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-int256%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20number%20to%20a%20hex-encoded%20int256.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-int256-Cn9ZHuKd.js"),__vite__mapDeps([121,38,1])),path:"/cast/reference/cast-to-int256.html",type:"mdx",filePath:"cast/reference/cast-to-int256.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-int256%0A%0A%23%23%23%20NAME%0A%0Acast-to-int256%20-%20Convert%20a%20number%20to%20a%20hex-encoded%20int256.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-int256%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20number%20to%20a%20hex-encoded%20int256.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-rlp-BVFkpDbC.js"),__vite__mapDeps([122,38,1])),path:"/cast/reference/cast-to-rlp",type:"mdx",filePath:"cast/reference/cast-to-rlp.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-rlp%0A%0A%23%23%23%20NAME%0A%0Acast-to-rlp%20-%20Encodes%20hex%20data%20to%20RLP.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-rlp%60%20_array_%0A%0A%23%23%23%20DESCRIPTION%0A%0ARLP%20encodes%20a%20hex%20string%20or%20a%20JSON%20array%20of%20hex%20strings.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Encoding%20RLP%20data%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-rlp%20'%5B%220xaa%22%2C%220xbb%22%2C%22cc%22%5D'%0A%0A%20%20%20cast%20to-rlp%20f0a9%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-rlp-BVFkpDbC.js"),__vite__mapDeps([122,38,1])),path:"/cast/reference/cast-to-rlp.html",type:"mdx",filePath:"cast/reference/cast-to-rlp.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-rlp%0A%0A%23%23%23%20NAME%0A%0Acast-to-rlp%20-%20Encodes%20hex%20data%20to%20RLP.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-rlp%60%20_array_%0A%0A%23%23%23%20DESCRIPTION%0A%0ARLP%20encodes%20a%20hex%20string%20or%20a%20JSON%20array%20of%20hex%20strings.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Encoding%20RLP%20data%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-rlp%20'%5B%220xaa%22%2C%220xbb%22%2C%22cc%22%5D'%0A%0A%20%20%20cast%20to-rlp%20f0a9%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-uint256-Baf07IE3.js"),__vite__mapDeps([123,38,1])),path:"/cast/reference/cast-to-uint256",type:"mdx",filePath:"cast/reference/cast-to-uint256.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-uint256%0A%0A%23%23%23%20NAME%0A%0Acast-to-uint256%20-%20Convert%20a%20number%20to%20a%20hex-encoded%20uint256.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-uint256%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20number%20to%20a%20hex-encoded%20uint256.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-uint256-Baf07IE3.js"),__vite__mapDeps([123,38,1])),path:"/cast/reference/cast-to-uint256.html",type:"mdx",filePath:"cast/reference/cast-to-uint256.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-uint256%0A%0A%23%23%23%20NAME%0A%0Acast-to-uint256%20-%20Convert%20a%20number%20to%20a%20hex-encoded%20uint256.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-uint256%60%20%5B*options*%5D%20_value_%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20number%20to%20a%20hex-encoded%20uint256.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-unit-BHT6rAk1.js"),__vite__mapDeps([124,38,1])),path:"/cast/reference/cast-to-unit",type:"mdx",filePath:"cast/reference/cast-to-unit.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-unit%0A%0A%23%23%23%20NAME%0A%0Acast-to-unit%20-%20Convert%20an%20eth%20amount%20to%20another%20unit.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-unit%60%20%5B*options*%5D%20_value_%20%5B*unit*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20eth%20amount%20to%20another%20unit.%0A%0AThe%20value%20to%20convert%20(_value_)%20can%20be%20a%20quantity%20of%20eth%20(in%20wei)%2C%20or%20a%20number%20with%20a%20unit%20attached%20to%20it.%0A%0AValid%20units%20are%3A%0A%0A-%20%60ether%60%0A-%20%60gwei%60%0A-%20%60wei%60%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%201000%20wei%20to%20gwei%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-unit%201000%20gwei%0A%20%20%20%60%60%60%0A%0A2.%20Convert%201%20eth%20to%20gwei%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-unit%201ether%20gwei%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-unit-BHT6rAk1.js"),__vite__mapDeps([124,38,1])),path:"/cast/reference/cast-to-unit.html",type:"mdx",filePath:"cast/reference/cast-to-unit.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-unit%0A%0A%23%23%23%20NAME%0A%0Acast-to-unit%20-%20Convert%20an%20eth%20amount%20to%20another%20unit.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-unit%60%20%5B*options*%5D%20_value_%20%5B*unit*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20eth%20amount%20to%20another%20unit.%0A%0AThe%20value%20to%20convert%20(_value_)%20can%20be%20a%20quantity%20of%20eth%20(in%20wei)%2C%20or%20a%20number%20with%20a%20unit%20attached%20to%20it.%0A%0AValid%20units%20are%3A%0A%0A-%20%60ether%60%0A-%20%60gwei%60%0A-%20%60wei%60%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Convert%201000%20wei%20to%20gwei%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-unit%201000%20gwei%0A%20%20%20%60%60%60%0A%0A2.%20Convert%201%20eth%20to%20gwei%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20to-unit%201ether%20gwei%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-wei-wjt4rvab.js"),__vite__mapDeps([125,38,1])),path:"/cast/reference/cast-to-wei",type:"mdx",filePath:"cast/reference/cast-to-wei.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-wei%0A%0A%23%23%23%20NAME%0A%0Acast-to-wei%20-%20Convert%20an%20eth%20amount%20to%20wei.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-wei%60%20%5B*options*%5D%20_value_%20%5B*unit*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20eth%20amount%20to%20wei.%0A%0AConsider%20using%20%5B%60cast%20to-unit%60%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-to-wei-wjt4rvab.js"),__vite__mapDeps([125,38,1])),path:"/cast/reference/cast-to-wei.html",type:"mdx",filePath:"cast/reference/cast-to-wei.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20to-wei%0A%0A%23%23%23%20NAME%0A%0Acast-to-wei%20-%20Convert%20an%20eth%20amount%20to%20wei.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20to-wei%60%20%5B*options*%5D%20_value_%20%5B*unit*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20an%20eth%20amount%20to%20wei.%0A%0AConsider%20using%20%5B%60cast%20to-unit%60%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-tx-jwAtAgf_.js"),__vite__mapDeps([126,50,1,58,38])),path:"/cast/reference/cast-tx",type:"mdx",filePath:"cast/reference/cast-tx.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20tx%0A%0A%23%23%23%20NAME%0A%0Acast-tx%20-%20Get%20information%20about%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20tx%60%20%5B*options*%5D%20_tx_hash_%20%5B*field*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20information%20about%20a%20transaction.%0A%0AIf%20_field_%20is%20specified%2C%20then%20only%20the%20given%20field%20of%20the%20transaction%20is%20displayed.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20information%20about%20a%20transaction%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20tx%20%24TX_HASH%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20sender%20of%20a%20transaction%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20tx%20%24TX_HASH%20from%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-tx-jwAtAgf_.js"),__vite__mapDeps([126,50,1,58,38])),path:"/cast/reference/cast-tx.html",type:"mdx",filePath:"cast/reference/cast-tx.mdx",content:"import%20RpcUrlOption%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-url-option.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20tx%0A%0A%23%23%23%20NAME%0A%0Acast-tx%20-%20Get%20information%20about%20a%20transaction.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20tx%60%20%5B*options*%5D%20_tx_hash_%20%5B*field*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20information%20about%20a%20transaction.%0A%0AIf%20_field_%20is%20specified%2C%20then%20only%20the%20given%20field%20of%20the%20transaction%20is%20displayed.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20information%20about%20a%20transaction%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20tx%20%24TX_HASH%0A%20%20%20%60%60%60%0A%0A2.%20Get%20the%20sender%20of%20a%20transaction%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20tx%20%24TX_HASH%20from%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-upload-signature-C8jl9OM_.js"),__vite__mapDeps([127,38,1])),path:"/cast/reference/cast-upload-signature",type:"mdx",filePath:"cast/reference/cast-upload-signature.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20upload-signature%0A%0A%23%23%23%20NAME%0A%0Acast-upload-signature%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20upload-signature%60%20%5B*signatures...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AUpload%20the%20given%20signatures%20to%20%5Bhttps%3A%2F%2Fopenchain.xyz%2Fsignatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Upload%20signatures%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20upload-signature%20'function%20approve(address%2Cuint256)'%20%5C%0A%20%20%20'transfer(uint256)'%20'event%20Transfer(uint256%2Caddress)'%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-upload-signature-C8jl9OM_.js"),__vite__mapDeps([127,38,1])),path:"/cast/reference/cast-upload-signature.html",type:"mdx",filePath:"cast/reference/cast-upload-signature.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20upload-signature%0A%0A%23%23%23%20NAME%0A%0Acast-upload-signature%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20upload-signature%60%20%5B*signatures...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AUpload%20the%20given%20signatures%20to%20%5Bhttps%3A%2F%2Fopenchain.xyz%2Fsignatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Upload%20signatures%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20upload-signature%20'function%20approve(address%2Cuint256)'%20%5C%0A%20%20%20'transfer(uint256)'%20'event%20Transfer(uint256%2Caddress)'%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-address-DLAPEzMs.js"),__vite__mapDeps([128,38,1,45,46,47])),path:"/cast/reference/cast-wallet-address",type:"mdx",filePath:"cast/reference/cast-wallet-address.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0Aimport%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20address%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-address%20-%20Convert%20a%20private%20key%20to%20an%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20address%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20private%20key%20to%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Keystore%20Options%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20address%20of%20the%20keypair%20in%20%60keystore.json%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20address%20--keystore%20keystore.json%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-address-DLAPEzMs.js"),__vite__mapDeps([128,38,1,45,46,47])),path:"/cast/reference/cast-wallet-address.html",type:"mdx",filePath:"cast/reference/cast-wallet-address.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0Aimport%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20address%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-address%20-%20Convert%20a%20private%20key%20to%20an%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20address%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AConvert%20a%20private%20key%20to%20an%20address.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Keystore%20Options%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20the%20address%20of%20the%20keypair%20in%20%60keystore.json%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20address%20--keystore%20keystore.json%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-import-B6hopvn7.js"),__vite__mapDeps([129,45,1,38])),path:"/cast/reference/cast-wallet-import",type:"mdx",filePath:"cast/reference/cast-wallet-import.mdx",content:"import%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20import%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-import%20-%20Import%20a%20private%20key%20into%20an%20encrypted%20keystore%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20import%60%20%5B*options*%5D%20_account_name_%0A%0A%23%23%23%20DESCRIPTION%0A%0AImport%20a%20private%20key%20into%20an%20encrypted%20keystore.%0A%0AIf%20no%20_keystore-dir_%20is%20specified%2C%20it%20will%20be%20saved%20in%20the%20default%20%60~%2F.foundry%2Fkeystores%60%2C%20so%20it%20can%20be%20accessed%20through%20the%20%60--account%60%20option%20in%20methods%20like%20%60forge%20script%60%2C%20%60cast%20send%60%20or%20any%20other%20that%20requires%20a%20private%20key.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Directory%20Options%0A%0A%60-k%60%20%20%0A%60--keystore-dir%60%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20store%20the%20encrypted%20keystore.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefaults%20to%20%60~%2F.foundry%2Fkeystores%60.%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20keystore%20from%20a%20private%20key%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20import%20BOB%20--interactive%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20keystore%20from%20a%20mnemonic%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20import%20ALICE%20--mnemonic%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%22%0A%20%20%20%60%60%60%0A%0A3.%20Create%20a%20keystore%20from%20a%20mnemonic%20with%20a%20specific%20mnemonic%20index%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20import%20ALICE%20--mnemonic%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%22%20--mnemonic-index%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-import-B6hopvn7.js"),__vite__mapDeps([129,45,1,38])),path:"/cast/reference/cast-wallet-import.html",type:"mdx",filePath:"cast/reference/cast-wallet-import.mdx",content:"import%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20import%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-import%20-%20Import%20a%20private%20key%20into%20an%20encrypted%20keystore%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20import%60%20%5B*options*%5D%20_account_name_%0A%0A%23%23%23%20DESCRIPTION%0A%0AImport%20a%20private%20key%20into%20an%20encrypted%20keystore.%0A%0AIf%20no%20_keystore-dir_%20is%20specified%2C%20it%20will%20be%20saved%20in%20the%20default%20%60~%2F.foundry%2Fkeystores%60%2C%20so%20it%20can%20be%20accessed%20through%20the%20%60--account%60%20option%20in%20methods%20like%20%60forge%20script%60%2C%20%60cast%20send%60%20or%20any%20other%20that%20requires%20a%20private%20key.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Directory%20Options%0A%0A%60-k%60%20%20%0A%60--keystore-dir%60%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20store%20the%20encrypted%20keystore.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefaults%20to%20%60~%2F.foundry%2Fkeystores%60.%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20keystore%20from%20a%20private%20key%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20import%20BOB%20--interactive%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20keystore%20from%20a%20mnemonic%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20import%20ALICE%20--mnemonic%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%22%0A%20%20%20%60%60%60%0A%0A3.%20Create%20a%20keystore%20from%20a%20mnemonic%20with%20a%20specific%20mnemonic%20index%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20import%20ALICE%20--mnemonic%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%22%20--mnemonic-index%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-list-D1wJTmzD.js"),__vite__mapDeps([130,38,1])),path:"/cast/reference/cast-wallet-list",type:"mdx",filePath:"cast/reference/cast-wallet-list.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20list%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-list%20-%20List%20all%20the%20accounts%20in%20the%20keystore%20default%20directory.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20list%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AList%20all%20the%20accounts%20in%20the%20keystore%20default%20directory%20%60~%2F.foundry%2Fkeystores%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-list-D1wJTmzD.js"),__vite__mapDeps([130,38,1])),path:"/cast/reference/cast-wallet-list.html",type:"mdx",filePath:"cast/reference/cast-wallet-list.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20list%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-list%20-%20List%20all%20the%20accounts%20in%20the%20keystore%20default%20directory.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20list%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AList%20all%20the%20accounts%20in%20the%20keystore%20default%20directory%20%60~%2F.foundry%2Fkeystores%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-new-mnemonic-CLKo0Hwv.js"),__vite__mapDeps([131,1])),path:"/cast/reference/cast-wallet-new-mnemonic",type:"mdx",filePath:"cast/reference/cast-wallet-new-mnemonic.mdx",content:"%23%23%20cast%20new-mnemonic%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-new-mnemonic%20-%20Creates%20a%20new%20mnemonic%20with%20a%20set%20number%20of%20words.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20new-mnemonic%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20random%20BIP39%20mnemonic%20phrase.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20New%20Mnemonic%20Options%0A%0A%60-w%60%0A%60--words%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20amount%20of%20words%20for%20the%20mnemonic.%20Defaults%20to%2012.%0A%0A%60-a%60%0A%60--accounts%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20number%20of%20accounts%20to%20display%2C%20which%20are%20derived%20from%20the%20mnemonic.%20Defaults%20to%201.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20mnemonic%20with%2024%20words.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20new-mnemonic%20--words%2024%0A%20%20%20%60%60%60%0A%0A%60%60%60text%0ASuccessfully%20generated%20a%20new%20mnemonic.%0APhrase%3A%0Adecrease%20where%20seek%20crop%20segment%20want%20icon%20medal%20sleep%20social%20blast%20provide%20virus%20grief%20pledge%20soccer%20stereo%20trick%20dry%20dirt%20rotate%20explain%20into%20nominee%0A%0AAccounts%3A%0A-%20Account%200%3A%0AAddress%3A%20%20%20%20%200x34644D4eC92ae1832877cE22AD9bA4b00c7397c8%0APrivate%20key%3A%200x832a3784d0a130c8a0ce3cc6dfc336a41ca7801a117eac7a3bfaace52e4d239c%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-new-mnemonic-CLKo0Hwv.js"),__vite__mapDeps([131,1])),path:"/cast/reference/cast-wallet-new-mnemonic.html",type:"mdx",filePath:"cast/reference/cast-wallet-new-mnemonic.mdx",content:"%23%23%20cast%20new-mnemonic%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-new-mnemonic%20-%20Creates%20a%20new%20mnemonic%20with%20a%20set%20number%20of%20words.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20new-mnemonic%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20random%20BIP39%20mnemonic%20phrase.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20New%20Mnemonic%20Options%0A%0A%60-w%60%0A%60--words%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20amount%20of%20words%20for%20the%20mnemonic.%20Defaults%20to%2012.%0A%0A%60-a%60%0A%60--accounts%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20number%20of%20accounts%20to%20display%2C%20which%20are%20derived%20from%20the%20mnemonic.%20Defaults%20to%201.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20mnemonic%20with%2024%20words.%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20new-mnemonic%20--words%2024%0A%20%20%20%60%60%60%0A%0A%60%60%60text%0ASuccessfully%20generated%20a%20new%20mnemonic.%0APhrase%3A%0Adecrease%20where%20seek%20crop%20segment%20want%20icon%20medal%20sleep%20social%20blast%20provide%20virus%20grief%20pledge%20soccer%20stereo%20trick%20dry%20dirt%20rotate%20explain%20into%20nominee%0A%0AAccounts%3A%0A-%20Account%200%3A%0AAddress%3A%20%20%20%20%200x34644D4eC92ae1832877cE22AD9bA4b00c7397c8%0APrivate%20key%3A%200x832a3784d0a130c8a0ce3cc6dfc336a41ca7801a117eac7a3bfaace52e4d239c%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-new-n4WMiqgY.js"),__vite__mapDeps([132,38,1])),path:"/cast/reference/cast-wallet-new",type:"mdx",filePath:"cast/reference/cast-wallet-new.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20new%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-new%20-%20Create%20a%20new%20random%20keypair.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20new%60%20%5B*options*%5D%20%5B*path*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20new%20random%20keypair.%0A%0AIf%20_path_%20is%20specified%2C%20then%20the%20new%20keypair%20will%20be%20written%20to%20a%20JSON%20keystore%20encrypted%20with%20a%20password.%0A(_path_%20should%20be%20an%20existing%20directory.)%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Keystore%20Options%0A%0A%60-p%60%20%20%0A%60--password%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BTriggers%20a%20hidden%20password%20prompt%20for%20the%20JSON%20keystore.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B**Deprecated%3A%20prompting%20for%20a%20hidden%20password%20is%20now%20the%20default.**%0A%0A%60--unsafe-password%60%20_password_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPassword%20for%20the%20JSON%20keystore%20in%20cleartext.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20is%20**unsafe**%20to%20use%20and%20we%20recommend%20using%20%60--password%60%20instead.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_PASSWORD%60%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20keypair%20without%20saving%20it%20to%20a%20keystore%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20new%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20new%20keypair%20and%20save%20it%20in%20the%20%60keystore%60%20directory%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20new%20keystore%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-new-n4WMiqgY.js"),__vite__mapDeps([132,38,1])),path:"/cast/reference/cast-wallet-new.html",type:"mdx",filePath:"cast/reference/cast-wallet-new.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20new%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-new%20-%20Create%20a%20new%20random%20keypair.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20new%60%20%5B*options*%5D%20%5B*path*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20new%20random%20keypair.%0A%0AIf%20_path_%20is%20specified%2C%20then%20the%20new%20keypair%20will%20be%20written%20to%20a%20JSON%20keystore%20encrypted%20with%20a%20password.%0A(_path_%20should%20be%20an%20existing%20directory.)%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Keystore%20Options%0A%0A%60-p%60%20%20%0A%60--password%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BTriggers%20a%20hidden%20password%20prompt%20for%20the%20JSON%20keystore.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B**Deprecated%3A%20prompting%20for%20a%20hidden%20password%20is%20now%20the%20default.**%0A%0A%60--unsafe-password%60%20_password_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPassword%20for%20the%20JSON%20keystore%20in%20cleartext.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20is%20**unsafe**%20to%20use%20and%20we%20recommend%20using%20%60--password%60%20instead.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60CAST_PASSWORD%60%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20keypair%20without%20saving%20it%20to%20a%20keystore%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20new%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20new%20keypair%20and%20save%20it%20in%20the%20%60keystore%60%20directory%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20new%20keystore%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-sign-auth-Ha9HhTlz.js"),__vite__mapDeps([133,45,1,46,47,38])),path:"/cast/reference/cast-wallet-sign-auth",type:"mdx",filePath:"cast/reference/cast-wallet-sign-auth.mdx",content:"import%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20sign-auth%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-sign-auth%20-%20Sign%20an%20EIP-7702%20authorization.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20sign-auth%60%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0ASign%20an%20%5BEIP-7702%5D(https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-7702.md)%20authorization%20for%20an%20address.%0A%0ANote%20that%20%60sign-auth%60%20uses%20the%20current%20nonce%20as%20it%20is%20not%20aware%20of%20whether%20you%20are%20going%20to%20broadcast%20the%20authorization%20from%20the%20same%20or%20a%20different%20sender.%0A%0AIf%20you%20are%20sending%20the%20transaction%20from%20the%20same%20address%20you%20will%20need%20to%20either%20pass%20the%20next%20nonce%20using%20the%20%60--nonce%60%20flag%20or%20alternatively%20use%20%60cast%20send%20%3Cto%3E%20--auth%20%3Caddress%3E%60%20to%20sign%20and%20send%20directly.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Sign%20an%20EIP-7702%20authorization%20using%20a%20keystore%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign-auth%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20--keystore%20keystore.json%20--interactive%0A%20%20%20%60%60%60%0A%0A2.%20Sign%20an%20EIP-7702%20authorization%20using%20a%20raw%20private%20key%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign-auth%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20--private-key%20%24PRIV_KEY%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-sign-auth-Ha9HhTlz.js"),__vite__mapDeps([133,45,1,46,47,38])),path:"/cast/reference/cast-wallet-sign-auth.html",type:"mdx",filePath:"cast/reference/cast-wallet-sign-auth.mdx",content:"import%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20sign-auth%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-sign-auth%20-%20Sign%20an%20EIP-7702%20authorization.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20sign-auth%60%20_address_%0A%0A%23%23%23%20DESCRIPTION%0A%0ASign%20an%20%5BEIP-7702%5D(https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-7702.md)%20authorization%20for%20an%20address.%0A%0ANote%20that%20%60sign-auth%60%20uses%20the%20current%20nonce%20as%20it%20is%20not%20aware%20of%20whether%20you%20are%20going%20to%20broadcast%20the%20authorization%20from%20the%20same%20or%20a%20different%20sender.%0A%0AIf%20you%20are%20sending%20the%20transaction%20from%20the%20same%20address%20you%20will%20need%20to%20either%20pass%20the%20next%20nonce%20using%20the%20%60--nonce%60%20flag%20or%20alternatively%20use%20%60cast%20send%20%3Cto%3E%20--auth%20%3Caddress%3E%60%20to%20sign%20and%20send%20directly.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Sign%20an%20EIP-7702%20authorization%20using%20a%20keystore%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign-auth%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20--keystore%20keystore.json%20--interactive%0A%20%20%20%60%60%60%0A%0A2.%20Sign%20an%20EIP-7702%20authorization%20using%20a%20raw%20private%20key%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign-auth%200xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%20--private-key%20%24PRIV_KEY%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-sign-6Tch9ugB.js"),__vite__mapDeps([134,45,1,46,47,38])),path:"/cast/reference/cast-wallet-sign",type:"mdx",filePath:"cast/reference/cast-wallet-sign.mdx",content:"import%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20sign%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-sign%20-%20Sign%20a%20message.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20sign%60%20%5B*options*%5D%20_message_%0A%0A%23%23%23%20DESCRIPTION%0A%0ASign%20a%20message%20suitable%20for%20%5B%60eth_sign%60%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fapis%2Fjson-rpc%2F%23eth_sign).%20Note%20that%20signing%20prefixes%20the%20message%20with%20the%20Ethereum%20Signed%20Message%20header%20%5Bin%20accordance%20with%20EIP-191%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-191)%20unless%20%60--no-hash%60%20is%20provided.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Sign%20a%20message%20using%20a%20keystore%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign%20--keystore%20keystore.json%20--interactive%20%22hello%22%0A%20%20%20%60%60%60%0A%0A2.%20Sign%20a%20message%20using%20a%20raw%20private%20key%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign%20--private-key%20%24PRIV_KEY%20%22hello%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-sign-6Tch9ugB.js"),__vite__mapDeps([134,45,1,46,47,38])),path:"/cast/reference/cast-wallet-sign.html",type:"mdx",filePath:"cast/reference/cast-wallet-sign.mdx",content:"import%20WalletOptionsRaw%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20sign%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-sign%20-%20Sign%20a%20message.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20sign%60%20%5B*options*%5D%20_message_%0A%0A%23%23%23%20DESCRIPTION%0A%0ASign%20a%20message%20suitable%20for%20%5B%60eth_sign%60%5D(https%3A%2F%2Fethereum.org%2Fen%2Fdevelopers%2Fdocs%2Fapis%2Fjson-rpc%2F%23eth_sign).%20Note%20that%20signing%20prefixes%20the%20message%20with%20the%20Ethereum%20Signed%20Message%20header%20%5Bin%20accordance%20with%20EIP-191%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-191)%20unless%20%60--no-hash%60%20is%20provided.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Sign%20a%20message%20using%20a%20keystore%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign%20--keystore%20keystore.json%20--interactive%20%22hello%22%0A%20%20%20%60%60%60%0A%0A2.%20Sign%20a%20message%20using%20a%20raw%20private%20key%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20sign%20--private-key%20%24PRIV_KEY%20%22hello%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-vanity-kT-qF7xH.js"),__vite__mapDeps([135,38,1])),path:"/cast/reference/cast-wallet-vanity",type:"mdx",filePath:"cast/reference/cast-wallet-vanity.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20vanity%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-vanity%20-%20Generate%20a%20vanity%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20vanity%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20a%20vanity%20address.%0A%0AIf%20%60--nonce%60%20is%20specified%2C%20then%20the%20command%20will%20try%20to%20generate%20a%20vanity%20contract%20address.%20The%20%60--save-path%60%20option%20allows%20specifying%20a%20custom%20file%20path%20to%20save%20the%20generated%20wallet%20details.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Keystore%20Options%0A%0A%60--starts-with%60%20_hex_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrefix%20for%20the%20vanity%20address.%0A%0A%60--ends-with%60%20_hex_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSuffix%20for%20the%20vanity%20address.%0A%0A%60--nonce%60%20_nonce_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20vanity%20contract%20address%20created%20by%20the%20generated%20keypair%20with%20the%20specified%20nonce.%0A%0A%60--save-path%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPath%20to%20save%20the%20generated%20vanity%20wallet.%20If%20provided%2C%20the%20wallet%20details%20will%20be%20saved%20in%20a%20JSON%20file%20at%20this%20location.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20keypair%20that%20starts%20with%20%60dead%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20vanity%20--starts-with%20dead%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20new%20keypair%20ends%20with%20%60beef%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20vanity%20--ends-with%20beef%0A%20%20%20%60%60%60%0A%0A3.%20Create%20a%20new%20keypair%20that%20starts%20with%20%60dead%60%20and%20save%20the%20details%20to%20a%20specific%20path%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20vanity%20--starts-with%20dead%20--save-path%20%2Fpath%2Fto%2Fsave%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-vanity-kT-qF7xH.js"),__vite__mapDeps([135,38,1])),path:"/cast/reference/cast-wallet-vanity.html",type:"mdx",filePath:"cast/reference/cast-wallet-vanity.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20vanity%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-vanity%20-%20Generate%20a%20vanity%20address.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20vanity%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerate%20a%20vanity%20address.%0A%0AIf%20%60--nonce%60%20is%20specified%2C%20then%20the%20command%20will%20try%20to%20generate%20a%20vanity%20contract%20address.%20The%20%60--save-path%60%20option%20allows%20specifying%20a%20custom%20file%20path%20to%20save%20the%20generated%20wallet%20details.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Keystore%20Options%0A%0A%60--starts-with%60%20_hex_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrefix%20for%20the%20vanity%20address.%0A%0A%60--ends-with%60%20_hex_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSuffix%20for%20the%20vanity%20address.%0A%0A%60--nonce%60%20_nonce_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20vanity%20contract%20address%20created%20by%20the%20generated%20keypair%20with%20the%20specified%20nonce.%0A%0A%60--save-path%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPath%20to%20save%20the%20generated%20vanity%20wallet.%20If%20provided%2C%20the%20wallet%20details%20will%20be%20saved%20in%20a%20JSON%20file%20at%20this%20location.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20keypair%20that%20starts%20with%20%60dead%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20vanity%20--starts-with%20dead%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20new%20keypair%20ends%20with%20%60beef%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20vanity%20--ends-with%20beef%0A%20%20%20%60%60%60%0A%0A3.%20Create%20a%20new%20keypair%20that%20starts%20with%20%60dead%60%20and%20save%20the%20details%20to%20a%20specific%20path%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20wallet%20vanity%20--starts-with%20dead%20--save-path%20%2Fpath%2Fto%2Fsave%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-verify-CpDPcxy3.js"),__vite__mapDeps([136,38,1])),path:"/cast/reference/cast-wallet-verify",type:"mdx",filePath:"cast/reference/cast-wallet-verify.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20verify%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-verify%20-%20Verify%20the%20signature%20of%20a%20message.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20verify%60%20%5B*options*%5D%20%60--address%60%20_address_%20_message_%20_signature_%0A%0A%23%23%23%20DESCRIPTION%0A%0AVerify%20the%20signature%20of%20a%20message.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Signature%20Options%0A%0A%60-a%60%20_address_%20%20%0A%60--address%60%20_address_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20address%20of%20the%20message%20signer.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-verify-CpDPcxy3.js"),__vite__mapDeps([136,38,1])),path:"/cast/reference/cast-wallet-verify.html",type:"mdx",filePath:"cast/reference/cast-wallet-verify.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%20verify%0A%0A%23%23%23%20NAME%0A%0Acast-wallet-verify%20-%20Verify%20the%20signature%20of%20a%20message.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%20verify%60%20%5B*options*%5D%20%60--address%60%20_address_%20_message_%20_signature_%0A%0A%23%23%23%20DESCRIPTION%0A%0AVerify%20the%20signature%20of%20a%20message.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Signature%20Options%0A%0A%60-a%60%20_address_%20%20%0A%60--address%60%20_address_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20address%20of%20the%20message%20signer.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bcast%5D(%2Fcast%2Freference%2Foverview)%2C%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-CfSfQq78.js"),__vite__mapDeps([137,38,1])),path:"/cast/reference/cast-wallet",type:"mdx",filePath:"cast/reference/cast-wallet.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%0A%0A%23%23%23%20NAME%0A%0Acast-wallet%20-%20Wallet%20management%20utilities.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%20%20%0A%60cast%20wallet%60%20%5B*options*%5D%20%60--version%60%20%20%0A%60cast%20wallet%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20use%2C%20create%20and%20manage%20wallets.%0A%0A%23%23%23%20COMMANDS%0A%0A%5Bcast%20wallet%20new%5D(%2Fcast%2Freference%2Fcast-wallet-new.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20new%20random%20keypair.%0A%0A%5Bcast%20wallet%20address%5D(%2Fcast%2Freference%2Fcast-wallet-address.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20private%20key%20to%20an%20address.%0A%0A%5Bcast%20wallet%20sign%5D(%2Fcast%2Freference%2Fcast-wallet-sign.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20a%20message.%0A%0A%5Bcast%20wallet%20vanity%5D(%2Fcast%2Freference%2Fcast-wallet-vanity.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20vanity%20address.%0A%0A%5Bcast%20wallet%20verify%5D(%2Fcast%2Freference%2Fcast-wallet-verify.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20the%20signature%20of%20a%20message.%0A%0A%5Bcast%20wallet%20import%5D(%2Fcast%2Freference%2Fcast-wallet-import.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BImport%20a%20private%20key%20into%20an%20encrypted%20keystore.%0A%0A%5Bcast%20wallet%20list%5D(%2Fcast%2Freference%2Fcast-wallet-list.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BList%20all%20the%20accounts%20in%20the%20keystore%20default%20directory.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%20%20%0A%60--version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cast-wallet-CfSfQq78.js"),__vite__mapDeps([137,38,1])),path:"/cast/reference/cast-wallet.html",type:"mdx",filePath:"cast/reference/cast-wallet.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%20wallet%0A%0A%23%23%23%20NAME%0A%0Acast-wallet%20-%20Wallet%20management%20utilities.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%20wallet%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%20%20%0A%60cast%20wallet%60%20%5B*options*%5D%20%60--version%60%20%20%0A%60cast%20wallet%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20use%2C%20create%20and%20manage%20wallets.%0A%0A%23%23%23%20COMMANDS%0A%0A%5Bcast%20wallet%20new%5D(%2Fcast%2Freference%2Fcast-wallet-new.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20new%20random%20keypair.%0A%0A%5Bcast%20wallet%20address%5D(%2Fcast%2Freference%2Fcast-wallet-address.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20private%20key%20to%20an%20address.%0A%0A%5Bcast%20wallet%20sign%5D(%2Fcast%2Freference%2Fcast-wallet-sign.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20a%20message.%0A%0A%5Bcast%20wallet%20vanity%5D(%2Fcast%2Freference%2Fcast-wallet-vanity.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20vanity%20address.%0A%0A%5Bcast%20wallet%20verify%5D(%2Fcast%2Freference%2Fcast-wallet-verify.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20the%20signature%20of%20a%20message.%0A%0A%5Bcast%20wallet%20import%5D(%2Fcast%2Freference%2Fcast-wallet-import.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BImport%20a%20private%20key%20into%20an%20encrypted%20keystore.%0A%0A%5Bcast%20wallet%20list%5D(%2Fcast%2Freference%2Fcast-wallet-list.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BList%20all%20the%20accounts%20in%20the%20keystore%20default%20directory.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%20%20%0A%60--version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./chain-commands-DgvuUqXf.js"),__vite__mapDeps([138,1])),path:"/cast/reference/chain-commands",type:"mdx",filePath:"cast/reference/chain-commands.mdx",content:"%23%23%20Chain%20Commands%0A%0A-%20%5Bcast%20chain-id%5D(%2Fcast%2Freference%2Fcast-chain-id.mdx)%0A-%20%5Bcast%20chain%5D(%2Fcast%2Freference%2Fcast-chain.mdx)%0A-%20%5Bcast%20client%5D(%2Fcast%2Freference%2Fcast-client.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./chain-commands-DgvuUqXf.js"),__vite__mapDeps([138,1])),path:"/cast/reference/chain-commands.html",type:"mdx",filePath:"cast/reference/chain-commands.mdx",content:"%23%23%20Chain%20Commands%0A%0A-%20%5Bcast%20chain-id%5D(%2Fcast%2Freference%2Fcast-chain-id.mdx)%0A-%20%5Bcast%20chain%5D(%2Fcast%2Freference%2Fcast-chain.mdx)%0A-%20%5Bcast%20client%5D(%2Fcast%2Freference%2Fcast-client.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./common-options-OsAHhg-o.js"),__vite__mapDeps([38,1])),path:"/cast/reference/common-options",type:"mdx",filePath:"cast/reference/common-options.mdx",content:"%23%23%23%23%20Common%20Options%0A%0A%60-h%60%20%20%0A%60--help%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20help%20information.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./common-options-OsAHhg-o.js"),__vite__mapDeps([38,1])),path:"/cast/reference/common-options.html",type:"mdx",filePath:"cast/reference/common-options.mdx",content:"%23%23%23%23%20Common%20Options%0A%0A%60-h%60%20%20%0A%60--help%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20help%20information.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./conversion-commands-H74k2keJ.js"),__vite__mapDeps([139,1])),path:"/cast/reference/conversion-commands",type:"mdx",filePath:"cast/reference/conversion-commands.mdx",content:"%23%23%20Conversion%20Commands%0A%0A-%20%5Bcast%20format-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx)%0A-%20%5Bcast%20from-bin%5D(%2Fcast%2Freference%2Fcast-from-bin.mdx)%0A-%20%5Bcast%20from-fixed-point%5D(%2Fcast%2Freference%2Fcast-from-fixed-point.mdx)%0A-%20%5Bcast%20from-rlp%5D(%2Fcast%2Freference%2Fcast-from-rlp.mdx)%0A-%20%5Bcast%20from-utf8%5D(%2Fcast%2Freference%2Fcast-from-utf8.mdx)%0A-%20%5Bcast%20from-wei%5D(%2Fcast%2Freference%2Fcast-from-wei.mdx)%0A-%20%5Bcast%20parse-bytes32-address%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-address.mdx)%0A-%20%5Bcast%20parse-bytes32-string%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-string.mdx)%0A-%20%5Bcast%20to-ascii%5D(%2Fcast%2Freference%2Fcast-to-ascii.mdx)%0A-%20%5Bcast%20to-base%5D(%2Fcast%2Freference%2Fcast-to-base.mdx)%0A-%20%5Bcast%20to-bytes32%5D(%2Fcast%2Freference%2Fcast-to-bytes32.mdx)%0A-%20%5Bcast%20to-dec%5D(%2Fcast%2Freference%2Fcast-to-dec.mdx)%0A-%20%5Bcast%20to-fixed-point%5D(%2Fcast%2Freference%2Fcast-to-fixed-point.mdx)%0A-%20%5Bcast%20to-hex%5D(%2Fcast%2Freference%2Fcast-to-hex.mdx)%0A-%20%5Bcast%20to-hexdata%5D(%2Fcast%2Freference%2Fcast-to-hexdata.mdx)%0A-%20%5Bcast%20to-int256%5D(%2Fcast%2Freference%2Fcast-to-int256.mdx)%0A-%20%5Bcast%20to-rlp%5D(%2Fcast%2Freference%2Fcast-to-rlp.mdx)%0A-%20%5Bcast%20to-uint256%5D(%2Fcast%2Freference%2Fcast-to-uint256.mdx)%0A-%20%5Bcast%20to-unit%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A-%20%5Bcast%20to-wei%5D(%2Fcast%2Freference%2Fcast-to-wei.mdx)%0A-%20%5Bcast%20shl%5D(%2Fcast%2Freference%2Fcast-shl.mdx)%0A-%20%5Bcast%20shr%5D(%2Fcast%2Freference%2Fcast-shr.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./conversion-commands-H74k2keJ.js"),__vite__mapDeps([139,1])),path:"/cast/reference/conversion-commands.html",type:"mdx",filePath:"cast/reference/conversion-commands.mdx",content:"%23%23%20Conversion%20Commands%0A%0A-%20%5Bcast%20format-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx)%0A-%20%5Bcast%20from-bin%5D(%2Fcast%2Freference%2Fcast-from-bin.mdx)%0A-%20%5Bcast%20from-fixed-point%5D(%2Fcast%2Freference%2Fcast-from-fixed-point.mdx)%0A-%20%5Bcast%20from-rlp%5D(%2Fcast%2Freference%2Fcast-from-rlp.mdx)%0A-%20%5Bcast%20from-utf8%5D(%2Fcast%2Freference%2Fcast-from-utf8.mdx)%0A-%20%5Bcast%20from-wei%5D(%2Fcast%2Freference%2Fcast-from-wei.mdx)%0A-%20%5Bcast%20parse-bytes32-address%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-address.mdx)%0A-%20%5Bcast%20parse-bytes32-string%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-string.mdx)%0A-%20%5Bcast%20to-ascii%5D(%2Fcast%2Freference%2Fcast-to-ascii.mdx)%0A-%20%5Bcast%20to-base%5D(%2Fcast%2Freference%2Fcast-to-base.mdx)%0A-%20%5Bcast%20to-bytes32%5D(%2Fcast%2Freference%2Fcast-to-bytes32.mdx)%0A-%20%5Bcast%20to-dec%5D(%2Fcast%2Freference%2Fcast-to-dec.mdx)%0A-%20%5Bcast%20to-fixed-point%5D(%2Fcast%2Freference%2Fcast-to-fixed-point.mdx)%0A-%20%5Bcast%20to-hex%5D(%2Fcast%2Freference%2Fcast-to-hex.mdx)%0A-%20%5Bcast%20to-hexdata%5D(%2Fcast%2Freference%2Fcast-to-hexdata.mdx)%0A-%20%5Bcast%20to-int256%5D(%2Fcast%2Freference%2Fcast-to-int256.mdx)%0A-%20%5Bcast%20to-rlp%5D(%2Fcast%2Freference%2Fcast-to-rlp.mdx)%0A-%20%5Bcast%20to-uint256%5D(%2Fcast%2Freference%2Fcast-to-uint256.mdx)%0A-%20%5Bcast%20to-unit%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A-%20%5Bcast%20to-wei%5D(%2Fcast%2Freference%2Fcast-to-wei.mdx)%0A-%20%5Bcast%20shl%5D(%2Fcast%2Freference%2Fcast-shl.mdx)%0A-%20%5Bcast%20shr%5D(%2Fcast%2Freference%2Fcast-shr.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./ens-commands-6PL9prJG.js"),__vite__mapDeps([140,1])),path:"/cast/reference/ens-commands",type:"mdx",filePath:"cast/reference/ens-commands.mdx",content:"%23%23%20ENS%20Commands%0A%0A-%20%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%0A-%20%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A-%20%5Bcast%20namehash%5D(%2Fcast%2Freference%2Fcast-namehash.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./ens-commands-6PL9prJG.js"),__vite__mapDeps([140,1])),path:"/cast/reference/ens-commands.html",type:"mdx",filePath:"cast/reference/ens-commands.mdx",content:"%23%23%20ENS%20Commands%0A%0A-%20%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%0A-%20%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A-%20%5Bcast%20namehash%5D(%2Fcast%2Freference%2Fcast-namehash.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etherscan-commands-CewAt3K5.js"),__vite__mapDeps([141,1])),path:"/cast/reference/etherscan-commands",type:"mdx",filePath:"cast/reference/etherscan-commands.mdx",content:"%23%23%20Etherscan%20Commands%0A%0A-%20%5Bcast%20etherscan-source%5D(%2Fcast%2Freference%2Fcast-etherscan-source.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etherscan-commands-CewAt3K5.js"),__vite__mapDeps([141,1])),path:"/cast/reference/etherscan-commands.html",type:"mdx",filePath:"cast/reference/etherscan-commands.mdx",content:"%23%23%20Etherscan%20Commands%0A%0A-%20%5Bcast%20etherscan-source%5D(%2Fcast%2Freference%2Fcast-etherscan-source.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./general-commands-CBaIrL1S.js"),__vite__mapDeps([142,1])),path:"/cast/reference/general-commands",type:"mdx",filePath:"cast/reference/general-commands.mdx",content:"%23%23%20General%20Commands%0A%0A-%20%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A-%20%5Bcast%20help%5D(%2Fcast%2Freference%2Fcast-help.mdx)%0A-%20%5Bcast%20completions%5D(%2Fcast%2Freference%2Fcast-completions.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./general-commands-CBaIrL1S.js"),__vite__mapDeps([142,1])),path:"/cast/reference/general-commands.html",type:"mdx",filePath:"cast/reference/general-commands.mdx",content:"%23%23%20General%20Commands%0A%0A-%20%5Bcast%5D(%2Fcast%2Freference%2Foverview)%0A-%20%5Bcast%20help%5D(%2Fcast%2Freference%2Fcast-help.mdx)%0A-%20%5Bcast%20completions%5D(%2Fcast%2Freference%2Fcast-completions.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Dn16VZwH.js"),__vite__mapDeps([143,38,1])),path:"/cast/reference/overview",type:"mdx",filePath:"cast/reference/overview.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%0A%0A%23%23%23%20NAME%0A%0Acast%20-%20Perform%20Ethereum%20RPC%20calls%20from%20the%20comfort%20of%20your%20command%20line.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%0A%60cast%60%20%5B*options*%5D%20%60--version%60%0A%60cast%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20interact%20with%20Ethereum%20and%20perform%20conversions.%0A%0A%23%23%23%20COMMANDS%0A%0A%23%23%23%23%20General%20Commands%0A%0A%5Bcast%20help%5D(%2Fcast%2Freference%2Fcast-help.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20help%20information%20about%20Cast.%0A%0A%5Bcast%20completions%5D(%2Fcast%2Freference%2Fcast-completions.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20shell%20autocompletions%20for%20Cast.%0A%0A%23%23%23%23%20Chain%20Commands%0A%0A%5Bcast%20chain-id%5D(%2Fcast%2Freference%2Fcast-chain-id.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20Ethereum%20chain%20ID.%0A%0A%5Bcast%20chain%5D(%2Fcast%2Freference%2Fcast-chain.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20symbolic%20name%20of%20the%20current%20chain.%0A%0A%5Bcast%20client%5D(%2Fcast%2Freference%2Fcast-client.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20current%20client%20version.%0A%0A%23%23%23%23%20Transaction%20Commands%0A%0A%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPublish%20a%20raw%20transaction%20to%20the%20network.%0A%0A%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20transaction%20receipt%20for%20a%20transaction.%0A%0A%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20and%20publish%20a%20transaction.%0A%0A%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20call%20on%20an%20account%20without%20publishing%20a%20transaction.%0A%0A%5Bcast%20rpc%5D(%2Fcast%2Freference%2Fcast-rpc.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Perform%20a%20raw%20JSON-RPC%20request%20%5Baliases%3A%20rp%5D%0A%0A%5Bcast%20tx%5D(%2Fcast%2Freference%2Fcast-tx.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20information%20about%20a%20transaction.%0A%0A%5Bcast%20run%5D(%2Fcast%2Freference%2Fcast-run.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRuns%20a%20published%20transaction%20in%20a%20local%20environment%20and%20prints%20the%20trace.%0A%0A%5Bcast%20estimate%5D(%2Fcast%2Freference%2Fcast-estimate.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEstimate%20the%20gas%20cost%20of%20a%20transaction.%0A%0A%5Bcast%20access-list%5D(%2Fcast%2Freference%2Fcast-access-list.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20an%20access%20list%20for%20a%20transaction.%0A%0A%5Bcast%20logs%5D(%2Fcast%2Freference%2Fcast-logs.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20logs%20by%20signature%20or%20topic%0A%0A%23%23%23%23%20Block%20Commands%0A%0A%5Bcast%20find-block%5D(%2Fcast%2Freference%2Fcast-find-block.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20block%20number%20closest%20to%20the%20provided%20timestamp.%0A%0A%5Bcast%20gas-price%5D(%2Fcast%2Freference%2Fcast-gas-price.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20current%20gas%20price.%0A%0A%5Bcast%20block-number%5D(%2Fcast%2Freference%2Fcast-block-number.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20latest%20block%20number.%0A%0A%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20basefee%20of%20a%20block.%0A%0A%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20information%20about%20a%20block.%0A%0A%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20timestamp%20of%20a%20block.%0A%0A%23%23%23%23%20Account%20Commands%0A%0A%5Bcast%20balance%5D(%2Fcast%2Freference%2Fcast-balance.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20balance%20of%20an%20account%20in%20wei.%0A%0A%5Bcast%20storage%5D(%2Fcast%2Freference%2Fcast-storage.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20raw%20value%20of%20a%20contract's%20storage%20slot.%0A%0A%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20storage%20proof%20for%20a%20given%20storage%20slot.%0A%0A%5Bcast%20nonce%5D(%2Fcast%2Freference%2Fcast-nonce.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20nonce%20for%20an%20account.%0A%0A%5Bcast%20code%5D(%2Fcast%2Freference%2Fcast-code.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20bytecode%20of%20a%20contract.%0A%0A%5Bcast%20codesize%5D(%2Fcast%2Freference%2Fcast-codesize.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20runtime%20bytecode%20size%20of%20a%20contract.%0A%0A%23%23%23%23%20ENS%20Commands%0A%0A%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20an%20ENS%20reverse%20lookup.%0A%0A%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20an%20ENS%20lookup.%0A%0A%5Bcast%20namehash%5D(%2Fcast%2Freference%2Fcast-namehash.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCalculate%20the%20ENS%20namehash%20of%20a%20name.%0A%0A%23%23%23%23%20Etherscan%20Commands%0A%0A%5Bcast%20etherscan-source%5D(%2Fcast%2Freference%2Fcast-etherscan-source.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20source%20code%20of%20a%20contract%20from%20Etherscan.%0A%0A%23%23%23%23%20ABI%20Commands%0A%0A%5Bcast%20abi-encode%5D(%2Fcast%2Freference%2Fcast-abi-encode.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BABI%20encode%20the%20given%20function%20arguments%2C%20excluding%20the%20selector.%0A%0A%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20function%20signatures%20for%20the%20given%20selector%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20ABI-encoded%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20event%20signature%20for%20a%20given%20topic%200%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BABI-encode%20a%20function%20with%20arguments.%0A%0A%5Bcast%20decode-abi%5D(%2Fcast%2Freference%2Fcast-decode-abi.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20ABI-encoded%20input%20or%20output%20data.%0A%0A%5Bcast%20decode-calldata%5D(%2Fcast%2Freference%2Fcast-decode-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20ABI-encoded%20input%20data.%0A%0A%5Bcast%20pretty-calldata%5D(%2Fcast%2Freference%2Fcast-pretty-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPretty%20print%20calldata.%0A%0A%5Bcast%20selectors%5D(%2Fcast%2Freference%2Fcast-selectors.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExtracts%20function%20selectors%20and%20arguments%20from%20bytecode%0A%0A%5Bcast%20upload-signature%5D(%2Fcast%2Freference%2Fcast-upload-signature.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUpload%20the%20given%20signatures%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures.%0A%0A%23%23%23%23%20Conversion%20Commands%0A%0A%5Bcast%20format-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFormats%20a%20string%20into%20bytes32%20encoding.%0A%0A%5Bcast%20from-bin%5D(%2Fcast%2Freference%2Fcast-from-bin.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20binary%20data%20into%20hex%20data.%0A%0A%5Bcast%20from-fixed-point%5D(%2Fcast%2Freference%2Fcast-from-fixed-point.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20fixed%20point%20number%20into%20an%20integer.%0A%0A%5Bcast%20from-utf8%5D(%2Fcast%2Freference%2Fcast-from-utf8.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20UTF8%20to%20hex.%0A%0A%5Bcast%20from-wei%5D(%2Fcast%2Freference%2Fcast-from-wei.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20wei%20into%20an%20ETH%20amount%0A%0A%5Bcast%20parse-bytes32-address%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BParses%20a%20checksummed%20address%20from%20bytes32%20encoding.%0A%0A%5Bcast%20parse-bytes32-string%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-string.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BParses%20a%20string%20from%20bytes32%20encoding.%0A%0A%5Bcast%20to-ascii%5D(%2Fcast%2Freference%2Fcast-to-ascii.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20hex%20data%20to%20an%20ASCII%20string.%0A%0A%5Bcast%20to-base%5D(%2Fcast%2Freference%2Fcast-to-base.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20number%20of%20one%20base%20to%20another.%0A%0A%5Bcast%20to-bytes32%5D(%2Fcast%2Freference%2Fcast-to-bytes32.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRight-pads%20hex%20data%20to%2032%20bytes.%0A%0A%5Bcast%20to-dec%5D(%2Fcast%2Freference%2Fcast-to-dec.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConverts%20a%20number%20of%20one%20base%20to%20decimal%0A%0A%5Bcast%20to-fixed-point%5D(%2Fcast%2Freference%2Fcast-to-fixed-point.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20integer%20into%20a%20fixed%20point%20number.%0A%0A%5Bcast%20to-hex%5D(%2Fcast%2Freference%2Fcast-to-hex.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConverts%20a%20number%20of%20one%20base%20to%20another%0A%0A%5Bcast%20to-hexdata%5D(%2Fcast%2Freference%2Fcast-to-hexdata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNormalize%20the%20input%20to%20lowercase%2C%200x-prefixed%20hex.%0A%0A%5Bcast%20to-int256%5D(%2Fcast%2Freference%2Fcast-to-int256.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20number%20to%20a%20hex-encoded%20int256.%0A%0A%5Bcast%20to-rlp%5D(%2Fcast%2Freference%2Fcast-to-rlp.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRLP%20encodes%20hex%20data%2C%20or%20an%20array%20of%20hex%20data%0A%0A%5Bcast%20to-uint256%5D(%2Fcast%2Freference%2Fcast-to-uint256.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20number%20to%20a%20hex-encoded%20uint256.%0A%0A%5Bcast%20to-unit%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20ETH%20amount%20into%20another%20unit%20(ether%2C%20gwei%2C%20wei).%0A%0A%5Bcast%20to-wei%5D(%2Fcast%2Freference%2Fcast-to-wei.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20ETH%20amount%20to%20wei.%0A%0A%5Bcast%20shl%5D(%2Fcast%2Freference%2Fcast-shl.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20left%20shifting%20operation.%0A%0A%5Bcast%20shr%5D(%2Fcast%2Freference%2Fcast-shr.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20right%20shifting%20operation.%0A%0A%23%23%23%23%20Utility%20Commands%0A%0A%5Bcast%20address-zero%5D(%2Fcast%2Freference%2Fcast-address-zero.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20the%20zero%20address.%0A%0A%5Bcast%20sig%5D(%2Fcast%2Freference%2Fcast-sig.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20selector%20for%20a%20function.%0A%0A%5Bcast%20sig-event%5D(%2Fcast%2Freference%2Fcast-sig-event.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20event%20signatures%20from%20event%20string.%0A%0A%5Bcast%20keccak%5D(%2Fcast%2Freference%2Fcast-keccak.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BHash%20arbitrary%20data%20using%20keccak-256.%0A%0A%5Bcast%20compute-address%5D(%2Fcast%2Freference%2Fcast-compute-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCompute%20the%20contract%20address%20from%20a%20given%20nonce%20and%20deployer%20address.%0A%0A%5Bcast%20create2%5D(%2Fcast%2Freference%2Fcast-create2.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Generate%20a%20deterministic%20contract%20address%20using%20CREATE2%0A%0A%5Bcast%20interface%5D(%2Fcast%2Freference%2Fcast-interface.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20Solidity%20interface%20from%20a%20given%20ABI.%0A%0A%5Bcast%20index%5D(%2Fcast%2Freference%2Fcast-index.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCompute%20the%20storage%20slot%20for%20an%20entry%20in%20a%20mapping.%0A%0A%5Bcast%20concat-hex%5D(%2Fcast%2Freference%2Fcast-concat-hex.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConcatenate%20hex%20strings.%0A%0A%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20maximum%20i256%20value.%0A%0A%5Bcast%20min-int%5D(%2Fcast%2Freference%2Fcast-min-int.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20minimum%20i256%20value.%0A%0A%5Bcast%20max-uint%5D(%2Fcast%2Freference%2Fcast-max-uint.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20maximum%20u256%20value.%0A%0A%5Bcast%20to-check-sum-address%5D(%2Fcast%2Freference%2Fcast-to-check-sum-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20address%20to%20a%20checksummed%20format%20(EIP-55).%0A%0A%23%23%23%23%20Wallet%20Commands%0A%0A%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWallet%20management%20utilities.%0A%0A%5Bcast%20wallet%20new%5D(%2Fcast%2Freference%2Fcast-wallet-new.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20new%20random%20keypair.%0A%0A%5Bcast%20wallet%20address%5D(%2Fcast%2Freference%2Fcast-wallet-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20private%20key%20to%20an%20address.%0A%0A%5Bcast%20wallet%20sign%5D(%2Fcast%2Freference%2Fcast-wallet-sign.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20a%20message.%0A%0A%5Bcast%20wallet%20vanity%5D(%2Fcast%2Freference%2Fcast-wallet-vanity.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20vanity%20address.%0A%0A%5Bcast%20wallet%20verify%5D(%2Fcast%2Freference%2Fcast-wallet-verify.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20the%20signature%20of%20a%20message.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%0A%60--version%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Call%20a%20function%20on%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%20%20%20%20%20%22balanceOf(address)(uint256)%22%200x...%0A%20%20%20%60%60%60%0A%0A2.%20Decode%20raw%20calldata%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-calldata%20%22transfer(address%2Cuint256)%22%20%5C%0A%20%20%20%20%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d0000000000000000000000000000000000000000000000000008a8e4b1a3d8000%0A%20%20%20%60%60%60%0A%0A3.%20Encode%20calldata%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20calldata%20%22someFunc(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20BUGS%0A%0ASee%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%20for%20issues.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Dn16VZwH.js"),__vite__mapDeps([143,38,1])),path:"/cast/reference/overview.html",type:"mdx",filePath:"cast/reference/overview.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20cast%0A%0A%23%23%23%20NAME%0A%0Acast%20-%20Perform%20Ethereum%20RPC%20calls%20from%20the%20comfort%20of%20your%20command%20line.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60cast%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%0A%60cast%60%20%5B*options*%5D%20%60--version%60%0A%60cast%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20interact%20with%20Ethereum%20and%20perform%20conversions.%0A%0A%23%23%23%20COMMANDS%0A%0A%23%23%23%23%20General%20Commands%0A%0A%5Bcast%20help%5D(%2Fcast%2Freference%2Fcast-help.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20help%20information%20about%20Cast.%0A%0A%5Bcast%20completions%5D(%2Fcast%2Freference%2Fcast-completions.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20shell%20autocompletions%20for%20Cast.%0A%0A%23%23%23%23%20Chain%20Commands%0A%0A%5Bcast%20chain-id%5D(%2Fcast%2Freference%2Fcast-chain-id.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20Ethereum%20chain%20ID.%0A%0A%5Bcast%20chain%5D(%2Fcast%2Freference%2Fcast-chain.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20symbolic%20name%20of%20the%20current%20chain.%0A%0A%5Bcast%20client%5D(%2Fcast%2Freference%2Fcast-client.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20current%20client%20version.%0A%0A%23%23%23%23%20Transaction%20Commands%0A%0A%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPublish%20a%20raw%20transaction%20to%20the%20network.%0A%0A%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20transaction%20receipt%20for%20a%20transaction.%0A%0A%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20and%20publish%20a%20transaction.%0A%0A%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20call%20on%20an%20account%20without%20publishing%20a%20transaction.%0A%0A%5Bcast%20rpc%5D(%2Fcast%2Freference%2Fcast-rpc.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Perform%20a%20raw%20JSON-RPC%20request%20%5Baliases%3A%20rp%5D%0A%0A%5Bcast%20tx%5D(%2Fcast%2Freference%2Fcast-tx.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20information%20about%20a%20transaction.%0A%0A%5Bcast%20run%5D(%2Fcast%2Freference%2Fcast-run.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRuns%20a%20published%20transaction%20in%20a%20local%20environment%20and%20prints%20the%20trace.%0A%0A%5Bcast%20estimate%5D(%2Fcast%2Freference%2Fcast-estimate.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEstimate%20the%20gas%20cost%20of%20a%20transaction.%0A%0A%5Bcast%20access-list%5D(%2Fcast%2Freference%2Fcast-access-list.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20an%20access%20list%20for%20a%20transaction.%0A%0A%5Bcast%20logs%5D(%2Fcast%2Freference%2Fcast-logs.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20logs%20by%20signature%20or%20topic%0A%0A%23%23%23%23%20Block%20Commands%0A%0A%5Bcast%20find-block%5D(%2Fcast%2Freference%2Fcast-find-block.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20block%20number%20closest%20to%20the%20provided%20timestamp.%0A%0A%5Bcast%20gas-price%5D(%2Fcast%2Freference%2Fcast-gas-price.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20current%20gas%20price.%0A%0A%5Bcast%20block-number%5D(%2Fcast%2Freference%2Fcast-block-number.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20latest%20block%20number.%0A%0A%5Bcast%20basefee%5D(%2Fcast%2Freference%2Fcast-basefee.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20basefee%20of%20a%20block.%0A%0A%5Bcast%20block%5D(%2Fcast%2Freference%2Fcast-block.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20information%20about%20a%20block.%0A%0A%5Bcast%20age%5D(%2Fcast%2Freference%2Fcast-age.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20timestamp%20of%20a%20block.%0A%0A%23%23%23%23%20Account%20Commands%0A%0A%5Bcast%20balance%5D(%2Fcast%2Freference%2Fcast-balance.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20balance%20of%20an%20account%20in%20wei.%0A%0A%5Bcast%20storage%5D(%2Fcast%2Freference%2Fcast-storage.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20raw%20value%20of%20a%20contract's%20storage%20slot.%0A%0A%5Bcast%20proof%5D(%2Fcast%2Freference%2Fcast-proof.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20storage%20proof%20for%20a%20given%20storage%20slot.%0A%0A%5Bcast%20nonce%5D(%2Fcast%2Freference%2Fcast-nonce.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20nonce%20for%20an%20account.%0A%0A%5Bcast%20code%5D(%2Fcast%2Freference%2Fcast-code.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20bytecode%20of%20a%20contract.%0A%0A%5Bcast%20codesize%5D(%2Fcast%2Freference%2Fcast-codesize.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20runtime%20bytecode%20size%20of%20a%20contract.%0A%0A%23%23%23%23%20ENS%20Commands%0A%0A%5Bcast%20lookup-address%5D(%2Fcast%2Freference%2Fcast-lookup-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20an%20ENS%20reverse%20lookup.%0A%0A%5Bcast%20resolve-name%5D(%2Fcast%2Freference%2Fcast-resolve-name.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20an%20ENS%20lookup.%0A%0A%5Bcast%20namehash%5D(%2Fcast%2Freference%2Fcast-namehash.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCalculate%20the%20ENS%20namehash%20of%20a%20name.%0A%0A%23%23%23%23%20Etherscan%20Commands%0A%0A%5Bcast%20etherscan-source%5D(%2Fcast%2Freference%2Fcast-etherscan-source.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20source%20code%20of%20a%20contract%20from%20Etherscan.%0A%0A%23%23%23%23%20ABI%20Commands%0A%0A%5Bcast%20abi-encode%5D(%2Fcast%2Freference%2Fcast-abi-encode.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BABI%20encode%20the%20given%20function%20arguments%2C%20excluding%20the%20selector.%0A%0A%5Bcast%204byte%5D(%2Fcast%2Freference%2Fcast-4byte.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20function%20signatures%20for%20the%20given%20selector%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%5Bcast%204byte-calldata%5D(%2Fcast%2Freference%2Fcast-4byte-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20ABI-encoded%20calldata%20using%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%5Bcast%204byte-event%5D(%2Fcast%2Freference%2Fcast-4byte-event.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20event%20signature%20for%20a%20given%20topic%200%20from%20%5BOpenchain%20Signatures%5D(https%3A%2F%2Fopenchain.xyz%2Fsignatures).%0A%0A%5Bcast%20calldata%5D(%2Fcast%2Freference%2Fcast-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BABI-encode%20a%20function%20with%20arguments.%0A%0A%5Bcast%20decode-abi%5D(%2Fcast%2Freference%2Fcast-decode-abi.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20ABI-encoded%20input%20or%20output%20data.%0A%0A%5Bcast%20decode-calldata%5D(%2Fcast%2Freference%2Fcast-decode-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDecode%20ABI-encoded%20input%20data.%0A%0A%5Bcast%20pretty-calldata%5D(%2Fcast%2Freference%2Fcast-pretty-calldata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPretty%20print%20calldata.%0A%0A%5Bcast%20selectors%5D(%2Fcast%2Freference%2Fcast-selectors.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExtracts%20function%20selectors%20and%20arguments%20from%20bytecode%0A%0A%5Bcast%20upload-signature%5D(%2Fcast%2Freference%2Fcast-upload-signature.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUpload%20the%20given%20signatures%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures.%0A%0A%23%23%23%23%20Conversion%20Commands%0A%0A%5Bcast%20format-bytes32-string%5D(%2Fcast%2Freference%2Fcast-format-bytes32-string.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFormats%20a%20string%20into%20bytes32%20encoding.%0A%0A%5Bcast%20from-bin%5D(%2Fcast%2Freference%2Fcast-from-bin.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20binary%20data%20into%20hex%20data.%0A%0A%5Bcast%20from-fixed-point%5D(%2Fcast%2Freference%2Fcast-from-fixed-point.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20fixed%20point%20number%20into%20an%20integer.%0A%0A%5Bcast%20from-utf8%5D(%2Fcast%2Freference%2Fcast-from-utf8.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20UTF8%20to%20hex.%0A%0A%5Bcast%20from-wei%5D(%2Fcast%2Freference%2Fcast-from-wei.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20wei%20into%20an%20ETH%20amount%0A%0A%5Bcast%20parse-bytes32-address%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BParses%20a%20checksummed%20address%20from%20bytes32%20encoding.%0A%0A%5Bcast%20parse-bytes32-string%5D(%2Fcast%2Freference%2Fcast-parse-bytes32-string.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BParses%20a%20string%20from%20bytes32%20encoding.%0A%0A%5Bcast%20to-ascii%5D(%2Fcast%2Freference%2Fcast-to-ascii.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20hex%20data%20to%20an%20ASCII%20string.%0A%0A%5Bcast%20to-base%5D(%2Fcast%2Freference%2Fcast-to-base.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20number%20of%20one%20base%20to%20another.%0A%0A%5Bcast%20to-bytes32%5D(%2Fcast%2Freference%2Fcast-to-bytes32.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRight-pads%20hex%20data%20to%2032%20bytes.%0A%0A%5Bcast%20to-dec%5D(%2Fcast%2Freference%2Fcast-to-dec.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConverts%20a%20number%20of%20one%20base%20to%20decimal%0A%0A%5Bcast%20to-fixed-point%5D(%2Fcast%2Freference%2Fcast-to-fixed-point.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20integer%20into%20a%20fixed%20point%20number.%0A%0A%5Bcast%20to-hex%5D(%2Fcast%2Freference%2Fcast-to-hex.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConverts%20a%20number%20of%20one%20base%20to%20another%0A%0A%5Bcast%20to-hexdata%5D(%2Fcast%2Freference%2Fcast-to-hexdata.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNormalize%20the%20input%20to%20lowercase%2C%200x-prefixed%20hex.%0A%0A%5Bcast%20to-int256%5D(%2Fcast%2Freference%2Fcast-to-int256.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20number%20to%20a%20hex-encoded%20int256.%0A%0A%5Bcast%20to-rlp%5D(%2Fcast%2Freference%2Fcast-to-rlp.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRLP%20encodes%20hex%20data%2C%20or%20an%20array%20of%20hex%20data%0A%0A%5Bcast%20to-uint256%5D(%2Fcast%2Freference%2Fcast-to-uint256.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20number%20to%20a%20hex-encoded%20uint256.%0A%0A%5Bcast%20to-unit%5D(%2Fcast%2Freference%2Fcast-to-unit.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20ETH%20amount%20into%20another%20unit%20(ether%2C%20gwei%2C%20wei).%0A%0A%5Bcast%20to-wei%5D(%2Fcast%2Freference%2Fcast-to-wei.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20ETH%20amount%20to%20wei.%0A%0A%5Bcast%20shl%5D(%2Fcast%2Freference%2Fcast-shl.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20left%20shifting%20operation.%0A%0A%5Bcast%20shr%5D(%2Fcast%2Freference%2Fcast-shr.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPerform%20a%20right%20shifting%20operation.%0A%0A%23%23%23%23%20Utility%20Commands%0A%0A%5Bcast%20address-zero%5D(%2Fcast%2Freference%2Fcast-address-zero.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20the%20zero%20address.%0A%0A%5Bcast%20sig%5D(%2Fcast%2Freference%2Fcast-sig.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20selector%20for%20a%20function.%0A%0A%5Bcast%20sig-event%5D(%2Fcast%2Freference%2Fcast-sig-event.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20event%20signatures%20from%20event%20string.%0A%0A%5Bcast%20keccak%5D(%2Fcast%2Freference%2Fcast-keccak.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BHash%20arbitrary%20data%20using%20keccak-256.%0A%0A%5Bcast%20compute-address%5D(%2Fcast%2Freference%2Fcast-compute-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCompute%20the%20contract%20address%20from%20a%20given%20nonce%20and%20deployer%20address.%0A%0A%5Bcast%20create2%5D(%2Fcast%2Freference%2Fcast-create2.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Generate%20a%20deterministic%20contract%20address%20using%20CREATE2%0A%0A%5Bcast%20interface%5D(%2Fcast%2Freference%2Fcast-interface.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20Solidity%20interface%20from%20a%20given%20ABI.%0A%0A%5Bcast%20index%5D(%2Fcast%2Freference%2Fcast-index.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCompute%20the%20storage%20slot%20for%20an%20entry%20in%20a%20mapping.%0A%0A%5Bcast%20concat-hex%5D(%2Fcast%2Freference%2Fcast-concat-hex.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConcatenate%20hex%20strings.%0A%0A%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20maximum%20i256%20value.%0A%0A%5Bcast%20min-int%5D(%2Fcast%2Freference%2Fcast-min-int.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20minimum%20i256%20value.%0A%0A%5Bcast%20max-uint%5D(%2Fcast%2Freference%2Fcast-max-uint.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20maximum%20u256%20value.%0A%0A%5Bcast%20to-check-sum-address%5D(%2Fcast%2Freference%2Fcast-to-check-sum-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20an%20address%20to%20a%20checksummed%20format%20(EIP-55).%0A%0A%23%23%23%23%20Wallet%20Commands%0A%0A%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWallet%20management%20utilities.%0A%0A%5Bcast%20wallet%20new%5D(%2Fcast%2Freference%2Fcast-wallet-new.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20new%20random%20keypair.%0A%0A%5Bcast%20wallet%20address%5D(%2Fcast%2Freference%2Fcast-wallet-address.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BConvert%20a%20private%20key%20to%20an%20address.%0A%0A%5Bcast%20wallet%20sign%5D(%2Fcast%2Freference%2Fcast-wallet-sign.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20a%20message.%0A%0A%5Bcast%20wallet%20vanity%5D(%2Fcast%2Freference%2Fcast-wallet-vanity.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20a%20vanity%20address.%0A%0A%5Bcast%20wallet%20verify%5D(%2Fcast%2Freference%2Fcast-wallet-verify.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20the%20signature%20of%20a%20message.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%0A%60--version%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Call%20a%20function%20on%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20call%200xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2%20%5C%0A%20%20%20%20%20%22balanceOf(address)(uint256)%22%200x...%0A%20%20%20%60%60%60%0A%0A2.%20Decode%20raw%20calldata%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20decode-calldata%20%22transfer(address%2Cuint256)%22%20%5C%0A%20%20%20%20%200xa9059cbb000000000000000000000000e78388b4ce79068e89bf8aa7f218ef6b9ab0e9d0000000000000000000000000000000000000000000000000008a8e4b1a3d8000%0A%20%20%20%60%60%60%0A%0A3.%20Encode%20calldata%3A%0A%20%20%20%60%60%60sh%0A%20%20%20cast%20calldata%20%22someFunc(address%2Cuint256)%22%200x...%201%0A%20%20%20%60%60%60%0A%0A%23%23%23%20BUGS%0A%0ASee%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%20for%20issues.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sig-description-BQxkyap_.js"),__vite__mapDeps([43,1])),path:"/cast/reference/sig-description",type:"mdx",filePath:"cast/reference/sig-description.mdx",content:"The%20signature%20(*sig*)%20can%20be%3A%0A%0A-%20A%20fragment%3A%20%60someFunction(uint256%2Cbytes32)%60%0A-%20A%20selector%20and%20encoded%20calldata%3A%20%600xcdba2fd40000000000000000000000000000000000000000000000000000000000007a69%60%0A-%20Only%20the%20function%20name%3A%20in%20this%20case%20Cast%20will%20try%20to%20fetch%20the%20function%20signature%20from%20Etherscan%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sig-description-BQxkyap_.js"),__vite__mapDeps([43,1])),path:"/cast/reference/sig-description.html",type:"mdx",filePath:"cast/reference/sig-description.mdx",content:"The%20signature%20(*sig*)%20can%20be%3A%0A%0A-%20A%20fragment%3A%20%60someFunction(uint256%2Cbytes32)%60%0A-%20A%20selector%20and%20encoded%20calldata%3A%20%600xcdba2fd40000000000000000000000000000000000000000000000000000000000007a69%60%0A-%20Only%20the%20function%20name%3A%20in%20this%20case%20Cast%20will%20try%20to%20fetch%20the%20function%20signature%20from%20Etherscan%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./transaction-commands-CvA6L3d5.js"),__vite__mapDeps([144,1])),path:"/cast/reference/transaction-commands",type:"mdx",filePath:"cast/reference/transaction-commands.mdx",content:"%23%23%20Transaction%20Commands%0A%0A-%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%0A-%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A-%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%0A-%20%5Bcast%20mktx%5D(%2Fcast%2Freference%2Fcast-mktx.mdx)%0A-%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%0A-%20%5Bcast%20rpc%5D(%2Fcast%2Freference%2Fcast-rpc.mdx)%0A-%20%5Bcast%20tx%5D(%2Fcast%2Freference%2Fcast-tx.mdx)%0A-%20%5Bcast%20run%5D(%2Fcast%2Freference%2Fcast-run.mdx)%0A-%20%5Bcast%20estimate%5D(%2Fcast%2Freference%2Fcast-estimate.mdx)%0A-%20%5Bcast%20access-list%5D(%2Fcast%2Freference%2Fcast-access-list.mdx)%0A-%20%5Bcast%20logs%5D(%2Fcast%2Freference%2Fcast-logs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./transaction-commands-CvA6L3d5.js"),__vite__mapDeps([144,1])),path:"/cast/reference/transaction-commands.html",type:"mdx",filePath:"cast/reference/transaction-commands.mdx",content:"%23%23%20Transaction%20Commands%0A%0A-%20%5Bcast%20publish%5D(%2Fcast%2Freference%2Fcast-publish.mdx)%0A-%20%5Bcast%20receipt%5D(%2Fcast%2Freference%2Fcast-receipt.mdx)%0A-%20%5Bcast%20send%5D(%2Fcast%2Freference%2Fcast-send.mdx)%0A-%20%5Bcast%20mktx%5D(%2Fcast%2Freference%2Fcast-mktx.mdx)%0A-%20%5Bcast%20call%5D(%2Fcast%2Freference%2Fcast-call.mdx)%0A-%20%5Bcast%20rpc%5D(%2Fcast%2Freference%2Fcast-rpc.mdx)%0A-%20%5Bcast%20tx%5D(%2Fcast%2Freference%2Fcast-tx.mdx)%0A-%20%5Bcast%20run%5D(%2Fcast%2Freference%2Fcast-run.mdx)%0A-%20%5Bcast%20estimate%5D(%2Fcast%2Freference%2Fcast-estimate.mdx)%0A-%20%5Bcast%20access-list%5D(%2Fcast%2Freference%2Fcast-access-list.mdx)%0A-%20%5Bcast%20logs%5D(%2Fcast%2Freference%2Fcast-logs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./utility-commands-djlhjx1z.js"),__vite__mapDeps([145,1])),path:"/cast/reference/utility-commands",type:"mdx",filePath:"cast/reference/utility-commands.mdx",content:"%23%23%20Utility%20Commands%0A%0A-%20%5Bcast%20address-zero%5D(%2Fcast%2Freference%2Fcast-address-zero.mdx)%0A-%20%5Bcast%20sig%5D(%2Fcast%2Freference%2Fcast-sig.mdx)%0A-%20%5Bcast%20sig-event%5D(%2Fcast%2Freference%2Fcast-sig-event.mdx)%0A-%20%5Bcast%20keccak%5D(%2Fcast%2Freference%2Fcast-keccak.mdx)%0A-%20%5Bcast%20compute-address%5D(%2Fcast%2Freference%2Fcast-compute-address.mdx)%0A-%20%5Bcast%20create2%5D(%2Fcast%2Freference%2Fcast-create2.mdx)%0A-%20%5Bcast%20interface%5D(%2Fcast%2Freference%2Fcast-interface.mdx)%0A-%20%5Bcast%20index%5D(%2Fcast%2Freference%2Fcast-index.mdx)%0A-%20%5Bcast%20concat-hex%5D(%2Fcast%2Freference%2Fcast-concat-hex.mdx)%0A-%20%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A-%20%5Bcast%20min-int%5D(%2Fcast%2Freference%2Fcast-min-int.mdx)%0A-%20%5Bcast%20max-uint%5D(%2Fcast%2Freference%2Fcast-max-uint.mdx)%0A-%20%5Bcast%20to-check-sum-address%5D(%2Fcast%2Freference%2Fcast-to-check-sum-address.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./utility-commands-djlhjx1z.js"),__vite__mapDeps([145,1])),path:"/cast/reference/utility-commands.html",type:"mdx",filePath:"cast/reference/utility-commands.mdx",content:"%23%23%20Utility%20Commands%0A%0A-%20%5Bcast%20address-zero%5D(%2Fcast%2Freference%2Fcast-address-zero.mdx)%0A-%20%5Bcast%20sig%5D(%2Fcast%2Freference%2Fcast-sig.mdx)%0A-%20%5Bcast%20sig-event%5D(%2Fcast%2Freference%2Fcast-sig-event.mdx)%0A-%20%5Bcast%20keccak%5D(%2Fcast%2Freference%2Fcast-keccak.mdx)%0A-%20%5Bcast%20compute-address%5D(%2Fcast%2Freference%2Fcast-compute-address.mdx)%0A-%20%5Bcast%20create2%5D(%2Fcast%2Freference%2Fcast-create2.mdx)%0A-%20%5Bcast%20interface%5D(%2Fcast%2Freference%2Fcast-interface.mdx)%0A-%20%5Bcast%20index%5D(%2Fcast%2Freference%2Fcast-index.mdx)%0A-%20%5Bcast%20concat-hex%5D(%2Fcast%2Freference%2Fcast-concat-hex.mdx)%0A-%20%5Bcast%20max-int%5D(%2Fcast%2Freference%2Fcast-max-int.mdx)%0A-%20%5Bcast%20min-int%5D(%2Fcast%2Freference%2Fcast-min-int.mdx)%0A-%20%5Bcast%20max-uint%5D(%2Fcast%2Freference%2Fcast-max-uint.mdx)%0A-%20%5Bcast%20to-check-sum-address%5D(%2Fcast%2Freference%2Fcast-to-check-sum-address.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-commands-DvaTfTtl.js"),__vite__mapDeps([146,1])),path:"/cast/reference/wallet-commands",type:"mdx",filePath:"cast/reference/wallet-commands.mdx",content:"%23%23%20Wallet%20Commands%0A%0A-%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A-%20%5Bcast%20wallet%20address%5D(%2Fcast%2Freference%2Fcast-wallet-address.mdx)%0A-%20%5Bcast%20wallet%20new%5D(%2Fcast%2Freference%2Fcast-wallet-new.mdx)%0A-%20%5Bcast%20wallet%20sign%5D(%2Fcast%2Freference%2Fcast-wallet-sign.mdx)%0A-%20%5Bcast%20wallet%20vanity%5D(%2Fcast%2Freference%2Fcast-wallet-vanity.mdx)%0A-%20%5Bcast%20wallet%20verify%5D(%2Fcast%2Freference%2Fcast-wallet-verify.mdx)%0A-%20%5Bcast%20wallet%20import%5D(%2Fcast%2Freference%2Fcast-wallet-import.mdx)%0A-%20%5Bcast%20wallet%20sign-auth%5D(%2Fcast%2Freference%2Fcast-wallet-sign-auth.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-commands-DvaTfTtl.js"),__vite__mapDeps([146,1])),path:"/cast/reference/wallet-commands.html",type:"mdx",filePath:"cast/reference/wallet-commands.mdx",content:"%23%23%20Wallet%20Commands%0A%0A-%20%5Bcast%20wallet%5D(%2Fcast%2Freference%2Fcast-wallet.mdx)%0A-%20%5Bcast%20wallet%20address%5D(%2Fcast%2Freference%2Fcast-wallet-address.mdx)%0A-%20%5Bcast%20wallet%20new%5D(%2Fcast%2Freference%2Fcast-wallet-new.mdx)%0A-%20%5Bcast%20wallet%20sign%5D(%2Fcast%2Freference%2Fcast-wallet-sign.mdx)%0A-%20%5Bcast%20wallet%20vanity%5D(%2Fcast%2Freference%2Fcast-wallet-vanity.mdx)%0A-%20%5Bcast%20wallet%20verify%5D(%2Fcast%2Freference%2Fcast-wallet-verify.mdx)%0A-%20%5Bcast%20wallet%20import%5D(%2Fcast%2Freference%2Fcast-wallet-import.mdx)%0A-%20%5Bcast%20wallet%20sign-auth%5D(%2Fcast%2Freference%2Fcast-wallet-sign-auth.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CxzjTI-v.js"),__vite__mapDeps([147,1])),path:"/config/reference/README",type:"mdx",filePath:"config/reference/README.mdx",content:"%23%23%20Config%20Reference%0A%0A-%20%5BOverview%5D(%2Fconfig%2Freference%2Foverview.mdx)%0A-%20%5BProject%5D(%2Fconfig%2Freference%2Fproject.mdx)%0A-%20%5BSolidity%20Compiler%5D(%2Fconfig%2Freference%2Fsolidity-compiler.mdx)%0A-%20%5BTesting%5D(%2Fconfig%2Freference%2Ftesting.mdx)%0A-%20%5BIn-line%20test%20configuration%5D(%2Fconfig%2Freference%2Finline-test-config.mdx)%0A-%20%5BFormatter%5D(%2Fconfig%2Freference%2Fformatter.mdx)%0A-%20%5BLinter%5D(%2Fconfig%2Freference%2Flinter.mdx)%0A-%20%5BDocumentation%20Generator%5D(%2Fconfig%2Freference%2Fdoc-generator.mdx)%0A-%20%5BEtherscan%5D(%2Fconfig%2Freference%2Fetherscan.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CxzjTI-v.js"),__vite__mapDeps([147,1])),path:"/config/reference/README.html",type:"mdx",filePath:"config/reference/README.mdx",content:"%23%23%20Config%20Reference%0A%0A-%20%5BOverview%5D(%2Fconfig%2Freference%2Foverview.mdx)%0A-%20%5BProject%5D(%2Fconfig%2Freference%2Fproject.mdx)%0A-%20%5BSolidity%20Compiler%5D(%2Fconfig%2Freference%2Fsolidity-compiler.mdx)%0A-%20%5BTesting%5D(%2Fconfig%2Freference%2Ftesting.mdx)%0A-%20%5BIn-line%20test%20configuration%5D(%2Fconfig%2Freference%2Finline-test-config.mdx)%0A-%20%5BFormatter%5D(%2Fconfig%2Freference%2Fformatter.mdx)%0A-%20%5BLinter%5D(%2Fconfig%2Freference%2Flinter.mdx)%0A-%20%5BDocumentation%20Generator%5D(%2Fconfig%2Freference%2Fdoc-generator.mdx)%0A-%20%5BEtherscan%5D(%2Fconfig%2Freference%2Fetherscan.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./default-config-Csu-yt_v.js"),__vite__mapDeps([148,1])),path:"/config/reference/default-config",type:"mdx",filePath:"config/reference/default-config.mdx",content:"%23%23%20Default%20foundry%20configuration%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0A%23%20The%20source%20directory%0Asrc%20%3D%20'src'%0A%23%20The%20test%20directory%0Atest%20%3D%20'test'%0A%23%20The%20script%20directory%0Ascript%20%3D%20'script'%0A%23%20The%20artifact%20directory%0Aout%20%3D%20'out'%0A%23%20A%20list%20of%20paths%20to%20look%20for%20libraries%20in%0Alibs%20%3D%20%5B'lib'%5D%0A%23%20A%20list%20of%20remappings%0Aremappings%20%3D%20%5B%5D%0A%23%20Whether%20to%20autodetect%20remappings%20by%20scanning%20the%20%60libs%60%20folders%20recursively%0Aauto_detect_remappings%20%3D%20true%0A%23%20A%20list%20of%20deployed%20libraries%20to%20link%20against%0Alibraries%20%3D%20%5B%5D%0A%23%20Whether%20to%20cache%20builds%20or%20not%0Acache%20%3D%20true%0A%23%20The%20cache%20directory%20if%20enabled%0Acache_path%20%3D%20'cache'%0A%23%20Where%20the%20broadcast%20logs%20are%20stored%0Abroadcast%20%3D%20'broadcast'%0A%23%20additional%20solc%20allow%20paths%0Aallow_paths%20%3D%20%5B%5D%0A%23%20additional%20solc%20include%20paths%0Ainclude_paths%20%3D%20%5B%5D%0A%23%20Whether%20to%20ignore%20the%20cache%0Aforce%20%3D%20false%0A%23%20The%20EVM%20version%20by%20hardfork%20name%0Aevm_version%20%3D%20'london'%0A%23%20A%20list%20of%20contracts%20to%20output%20gas%20reports%20for%0Agas_reports%20%3D%20%5B'*'%5D%0A%23%20A%20list%20of%20contracts%20to%20ignore%20for%20gas%20reports%0Agas_reports_ignore%20%3D%20%5B%5D%0A%23%20Override%20the%20Solidity%20version%20(this%20overrides%20%60auto_detect_solc%60)%0A%23solc_version%20%3D%20'0.8.10'%0A%23%20Whether%20or%20not%20Forge%20should%20auto-detect%20the%20solc%20version%20to%20use%0Aauto_detect_solc%20%3D%20true%0A%23%20Disables%20downloading%20missing%20solc%20versions%0Aoffline%20%3D%20false%0A%23%20Enables%20or%20disables%20the%20optimizer%0Aoptimizer%20%3D%20false%0A%23%20The%20number%20of%20optimizer%20runs%0Aoptimizer_runs%20%3D%20200%0A%23%20The%20verbosity%20of%20tests%0Averbosity%20%3D%200%0A%23%20A%20list%20of%20ignored%20solc%20error%20codes%0Aignored_error_codes%20%3D%20%5B1878%2C%205574%5D%0A%23%20Whether%20contract%20build%20warnings%20will%20cause%20compilation%20to%20fail%0Adeny_warnings%20%3D%20false%0A%23%20Configures%20the%20permissions%20of%20cheat%20codes%20that%20touch%20the%20file%20system%0Afs_permissions%20%3D%20%5B%5D%0A%23%20Whether%20to%20emit%20additional%20build%20info%20files%0Abuild_info%20%3D%20false%0A%23%20Whether%20or%20not%20to%20enable%20%60vm.ffi%60%0Affi%20%3D%20false%0A%23%20The%20address%20of%20%60msg.sender%60%20in%20tests%0Asender%20%3D%20'0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38'%0A%23%20The%20address%20of%20%60tx.origin%60%20in%20tests%0Atx_origin%20%3D%20'0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38'%0A%23%20The%20initial%20balance%20of%20the%20test%20contract%0Ainitial_balance%20%3D%20'0xffffffffffffffffffffffff'%0A%23%20The%20chain%20ID%20we%20are%20on%20in%20tests%0Achain_id%20%3D%2031337%0A%23%20The%20%60block.number%60%20value%20during%20EVM%20execution%0Ablock_number%20%3D%201%0A%23%20The%20gas%20limit%20in%20tests%0Agas_limit%20%3D%209223372036854775807%0A%23%20The%20gas%20price%20in%20tests%20(in%20wei)%0Agas_price%20%3D%200%0A%23%20The%20block%20basefee%20in%20tests%20(in%20wei)%0Ablock_base_fee_per_gas%20%3D%200%0A%23%20The%20address%20of%20%60block.coinbase%60%20in%20tests%0Ablock_coinbase%20%3D%20'0x0000000000000000000000000000000000000000'%0A%23%20The%20block%20timestamp%20in%20tests%0Ablock_timestamp%20%3D%201%0A%23%20The%20block%20difficulty%20in%20tests%0Ablock_difficulty%20%3D%200%0A%23%20The%20memory%20limit%20of%20the%20EVM%20(32%20MB%20by%20default)%0Amemory_limit%20%3D%2033554432%0A%23%20Extra%20output%20to%20include%20in%20the%20contract's%20artifact.%0Aextra_output%20%3D%20%5B%5D%0A%23%20Extra%20output%20to%20write%20to%20separate%20files.%0Aextra_output_files%20%3D%20%5B%5D%0A%23%20Print%20the%20names%20of%20the%20compiled%20contracts%0Anames%20%3D%20false%0A%23%20Print%20the%20sizes%20of%20the%20compiled%20contracts%0Asizes%20%3D%20false%0A%23%20Whether%20or%20not%20to%20use%20the%20Yul%20intermediate%20representation%20compilation%20pipeline%0Avia_ir%20%3D%20false%0A%23%20Enables%20or%20disables%20RPC%20caching%20when%20forking%0Ano_storage_caching%20%3D%20false%0A%23%20Use%20the%20given%20hash%20method%20for%20the%20metadata%20hash%20that%20is%20appended%0A%23%20to%20the%20bytecode.%0A%23%20The%20metadata%20hash%20can%20be%20removed%20from%20the%20bytecode%20by%20setting%20%22none%22%0Abytecode_hash%20%3D%20%22ipfs%22%0A%23%20How%20to%20treat%20revert%20(and%20require)%20reason%20strings%0Arevert_strings%20%3D%20%22default%22%0A%23%20If%20enabled%2C%20the%20Solidity%20compiler%20is%20instructed%20to%20generate%20bytecode%0A%23%20only%20for%20the%20required%20contracts.%20This%20can%20reduce%20compile%20time%0A%23%20for%20%60forge%20test%60%2C%20but%20is%20experimental.%0Asparse_mode%20%3D%20false%0A%23%20Contains%20alias%20-%3E%20URL%7CEnv%20pairs%20for%20RPC%20endpoints%20that%20can%20be%20accessed%20during%20testing%0Arpc_endpoints%20%3D%20%7B%20optimism%20%3D%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22%2C%20mainnet%20%3D%20%22%24%7BRPC_MAINNET%7D%22%20%7D%0A%23%20The%20Solc%20instance%20to%20use%20if%20any.%0A%23%20This%20takes%20precedence%20over%20%60auto_detect_solc%60%2C%20if%20a%20version%20is%20set%20then%20this%20overrides%20auto-detection.%0A%23solc%20%3D%20None%0A%23%20Switch%20optimizer%20components%20on%20or%20off%20in%20detail%0A%23optimizer_details%20%3D%20None%0A%23%20Model%20checker%20settings.%0A%23model_checker%20%3D%20None%2C%0A%23%20Url%20of%20the%20rpc%20server%20that%20should%20be%20used%20for%20any%20rpc%20calls%0A%23eth_rpc_url%20%3D%20None%0A%23%20Etherscan%20API%20key%0A%23etherscan_api_key%20%3D%20None%0A%23%20Only%20run%20test%20functions%20matching%20the%20specified%20regex%20pattern%0A%23match_test%20%3D%20None%0A%23%20Only%20run%20test%20functions%20that%20do%20not%20match%20the%20specified%20regex%20pattern%0A%23no_match_test%20%3D%20None%0A%23%20Only%20run%20tests%20in%20contracts%20matching%20the%20specified%20regex%20pattern%0A%23match_contract%20%3D%20None%0A%23%20Only%20run%20tests%20in%20contracts%20that%20do%20not%20match%20the%20specified%20regex%20pattern%0A%23no_match_contract%20%3D%20None%0A%23%20Only%20run%20tests%20in%20source%20files%20matching%20the%20specified%20glob%20pattern%0A%23match_path%20%3D%20None%0A%23%20Only%20run%20tests%20in%20source%20files%20that%20do%20not%20match%20the%20specified%20glob%20pattern%0A%23no_match_path%20%3D%20None%0A%23%20Only%20show%20coverage%20for%20files%20that%20do%20not%20match%20the%20specified%20regex%20pattern.%0A%23no_match_coverage%20%3D%20None%0A%23%20Number%20of%20threads%20to%20use.%20Not%20set%20or%20zero%20specifies%20the%20number%20of%20logical%20cores.%0A%23threads%20%3D%200%0A%23%20Whether%20to%20show%20test%20execution%20progress%0A%23show_progress%20%3D%20false%0A%23%20Pins%20the%20block%20number%20for%20the%20state%20fork%0A%23fork_block_number%20%3D%20None%0A%23%20The%20block%20gas%20limit%0A%23block_gas_limit%20%3D%20None%0A%23%20The%20path%20to%20the%20%60build-info%60%20directory%20that%20contains%20the%20build%20info%20json%20files%0A%23build_info_path%20%3D%20None%0A%23%20Whether%20to%20allow%20%60expectRevert%60%20for%20internal%20functions.%0Aallow_internal_expect_revert%20%3D%20false%0A%23%20Use%20the%20create%202%20factory%20in%20all%20cases%20including%20tests%20and%20non-broadcasting%20scripts.%0Aalways_use_create_2_factory%20%3D%20false%0A%23%20The%20CREATE2%20deployer%20address%20to%20use.%0Acreate2_deployer%20%3D%20%220x4e59b44847b379578588920ca78fbf26c0b4956c%22%0A%23%20CREATE2%20salt%20to%20use%20for%20the%20library%20deployment%20in%20scripts.%0Acreate2_library_salt%20%3D%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%0A%0A%5Bfmt%5D%0A%23%20Maximum%20line%20length%20where%20formatter%20will%20try%20to%20wrap%20the%20line%0Aline_length%20%3D%20120%0A%23%20Number%20of%20spaces%20per%20indentation%20level%0Atab_width%20%3D%204%0A%23%20Print%20spaces%20between%20brackets%0Abracket_spacing%20%3D%20false%0A%23%20Style%20of%20uint%2Fint256%20types%0Aint_types%20%3D%20%22long%22%0A%23%20If%20function%20parameters%20are%20multiline%20then%20always%20put%20the%20function%20attributes%20on%20separate%20lines%0Afunc_attrs_with_params_multiline%20%3D%20true%0A%23%20Style%20of%20quotation%20marks%0Aquote_style%20%3D%20%22double%22%0A%23%20Style%20of%20underscores%20in%20number%20literals%0Anumber_underscore%20%3D%20%22preserve%22%0A%0A%5Bfuzz%5D%0A%23%20The%20number%20of%20fuzz%20runs%20for%20fuzz%20tests%0Aruns%20%3D%20256%0A%23%20The%20maximum%20number%20of%20test%20case%20rejections%20allowed%20by%20proptest%2C%20to%20be%0A%23%20encountered%20during%20usage%20of%20%60vm.assume%60%20cheatcode.%20This%20will%20be%20used%0A%23%20to%20set%20the%20%60max_global_rejects%60%20value%20in%20proptest%20test%20runner%20config.%0A%23%20%60max_local_rejects%60%20option%20isn't%20exposed%20here%20since%20we're%20not%20using%0A%23%20%60prop_filter%60.%0Amax_test_rejects%20%3D%2065536%0A%23%20The%20weight%20of%20the%20dictionary%0Adictionary_weight%20%3D%2040%0A%23%20The%20flag%20indicating%20whether%20to%20include%20values%20from%20storage%0Ainclude_storage%20%3D%20true%0A%23%20The%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values%0Ainclude_push_bytes%20%3D%20true%0A%23%20Number%20of%20runs%20to%20include%20in%20the%20gas%20report.%0Agas_report_samples%20%3D%20256%0A%23%20Path%20where%20fuzz%20failures%20are%20recorded%20and%20replayed.%0A%23%20failure_persist_dir%20%3D%20%2Fpath%2Fto%2Fpersist%2Fdir%0A%23%20Name%20of%20the%20file%20to%20record%20fuzz%20failures%2C%20defaults%20to%20%60failures%60.%0A%23%20failure_persist_file%20%3D%20%22failures%22%0A%23%20Show%20%60console.log%60%20in%20fuzz%20test.%0Ashow_logs%20%3D%20false%0A%0A%5Binvariant%5D%0A%23%20The%20number%20of%20runs%20that%20must%20execute%20for%20each%20invariant%20test%20group%0Aruns%20%3D%20256%0A%23%20The%20number%20of%20calls%20executed%20to%20attempt%20to%20break%20invariants%20in%20one%20run%0Adepth%20%3D%2015%0A%23%20Fails%20the%20invariant%20fuzzing%20if%20a%20revert%20occurs%0Afail_on_revert%20%3D%20false%0A%23%20Allows%20overriding%20an%20unsafe%20external%20call%20when%20running%20invariant%20tests.%20eg.%20reentrancy%20checks%0Acall_override%20%3D%20false%0A%23%20The%20weight%20of%20the%20dictionary%0Adictionary_weight%20%3D%2080%0A%23%20The%20flag%20indicating%20whether%20to%20include%20values%20from%20storage%0Ainclude_storage%20%3D%20true%0A%23%20The%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values%0Ainclude_push_bytes%20%3D%20true%0A%23%20The%20maximum%20number%20of%20attempts%20to%20shrink%20the%20sequence.%0Ashrink_run_limit%20%3D%205000%0A%23%20The%20maximum%20number%20of%20rejects%20via%20%60vm.assume%60%20which%20can%20be%20encountered%20during%20a%20single%0A%23%20invariant%20run.%0Amax_assume_rejects%20%3D%2065536%0A%23%20Number%20of%20runs%20to%20include%20in%20the%20gas%20report.%0Agas_report_samples%20%3D%20256%0A%23%20Path%20where%20invariant%20failures%20are%20recorded%20and%20replayed.%0A%23%20failure_persist_dir%20%3D%20%2Fpath%2Fto%2Fpersist%2Fdir%0A%23%20Whether%20to%20collect%20and%20display%20fuzzed%20selectors%20metrics.%0Ashow_metrics%20%3D%20false%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./default-config-Csu-yt_v.js"),__vite__mapDeps([148,1])),path:"/config/reference/default-config.html",type:"mdx",filePath:"config/reference/default-config.mdx",content:"%23%23%20Default%20foundry%20configuration%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0A%23%20The%20source%20directory%0Asrc%20%3D%20'src'%0A%23%20The%20test%20directory%0Atest%20%3D%20'test'%0A%23%20The%20script%20directory%0Ascript%20%3D%20'script'%0A%23%20The%20artifact%20directory%0Aout%20%3D%20'out'%0A%23%20A%20list%20of%20paths%20to%20look%20for%20libraries%20in%0Alibs%20%3D%20%5B'lib'%5D%0A%23%20A%20list%20of%20remappings%0Aremappings%20%3D%20%5B%5D%0A%23%20Whether%20to%20autodetect%20remappings%20by%20scanning%20the%20%60libs%60%20folders%20recursively%0Aauto_detect_remappings%20%3D%20true%0A%23%20A%20list%20of%20deployed%20libraries%20to%20link%20against%0Alibraries%20%3D%20%5B%5D%0A%23%20Whether%20to%20cache%20builds%20or%20not%0Acache%20%3D%20true%0A%23%20The%20cache%20directory%20if%20enabled%0Acache_path%20%3D%20'cache'%0A%23%20Where%20the%20broadcast%20logs%20are%20stored%0Abroadcast%20%3D%20'broadcast'%0A%23%20additional%20solc%20allow%20paths%0Aallow_paths%20%3D%20%5B%5D%0A%23%20additional%20solc%20include%20paths%0Ainclude_paths%20%3D%20%5B%5D%0A%23%20Whether%20to%20ignore%20the%20cache%0Aforce%20%3D%20false%0A%23%20The%20EVM%20version%20by%20hardfork%20name%0Aevm_version%20%3D%20'london'%0A%23%20A%20list%20of%20contracts%20to%20output%20gas%20reports%20for%0Agas_reports%20%3D%20%5B'*'%5D%0A%23%20A%20list%20of%20contracts%20to%20ignore%20for%20gas%20reports%0Agas_reports_ignore%20%3D%20%5B%5D%0A%23%20Override%20the%20Solidity%20version%20(this%20overrides%20%60auto_detect_solc%60)%0A%23solc_version%20%3D%20'0.8.10'%0A%23%20Whether%20or%20not%20Forge%20should%20auto-detect%20the%20solc%20version%20to%20use%0Aauto_detect_solc%20%3D%20true%0A%23%20Disables%20downloading%20missing%20solc%20versions%0Aoffline%20%3D%20false%0A%23%20Enables%20or%20disables%20the%20optimizer%0Aoptimizer%20%3D%20false%0A%23%20The%20number%20of%20optimizer%20runs%0Aoptimizer_runs%20%3D%20200%0A%23%20The%20verbosity%20of%20tests%0Averbosity%20%3D%200%0A%23%20A%20list%20of%20ignored%20solc%20error%20codes%0Aignored_error_codes%20%3D%20%5B1878%2C%205574%5D%0A%23%20Whether%20contract%20build%20warnings%20will%20cause%20compilation%20to%20fail%0Adeny_warnings%20%3D%20false%0A%23%20Configures%20the%20permissions%20of%20cheat%20codes%20that%20touch%20the%20file%20system%0Afs_permissions%20%3D%20%5B%5D%0A%23%20Whether%20to%20emit%20additional%20build%20info%20files%0Abuild_info%20%3D%20false%0A%23%20Whether%20or%20not%20to%20enable%20%60vm.ffi%60%0Affi%20%3D%20false%0A%23%20The%20address%20of%20%60msg.sender%60%20in%20tests%0Asender%20%3D%20'0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38'%0A%23%20The%20address%20of%20%60tx.origin%60%20in%20tests%0Atx_origin%20%3D%20'0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38'%0A%23%20The%20initial%20balance%20of%20the%20test%20contract%0Ainitial_balance%20%3D%20'0xffffffffffffffffffffffff'%0A%23%20The%20chain%20ID%20we%20are%20on%20in%20tests%0Achain_id%20%3D%2031337%0A%23%20The%20%60block.number%60%20value%20during%20EVM%20execution%0Ablock_number%20%3D%201%0A%23%20The%20gas%20limit%20in%20tests%0Agas_limit%20%3D%209223372036854775807%0A%23%20The%20gas%20price%20in%20tests%20(in%20wei)%0Agas_price%20%3D%200%0A%23%20The%20block%20basefee%20in%20tests%20(in%20wei)%0Ablock_base_fee_per_gas%20%3D%200%0A%23%20The%20address%20of%20%60block.coinbase%60%20in%20tests%0Ablock_coinbase%20%3D%20'0x0000000000000000000000000000000000000000'%0A%23%20The%20block%20timestamp%20in%20tests%0Ablock_timestamp%20%3D%201%0A%23%20The%20block%20difficulty%20in%20tests%0Ablock_difficulty%20%3D%200%0A%23%20The%20memory%20limit%20of%20the%20EVM%20(32%20MB%20by%20default)%0Amemory_limit%20%3D%2033554432%0A%23%20Extra%20output%20to%20include%20in%20the%20contract's%20artifact.%0Aextra_output%20%3D%20%5B%5D%0A%23%20Extra%20output%20to%20write%20to%20separate%20files.%0Aextra_output_files%20%3D%20%5B%5D%0A%23%20Print%20the%20names%20of%20the%20compiled%20contracts%0Anames%20%3D%20false%0A%23%20Print%20the%20sizes%20of%20the%20compiled%20contracts%0Asizes%20%3D%20false%0A%23%20Whether%20or%20not%20to%20use%20the%20Yul%20intermediate%20representation%20compilation%20pipeline%0Avia_ir%20%3D%20false%0A%23%20Enables%20or%20disables%20RPC%20caching%20when%20forking%0Ano_storage_caching%20%3D%20false%0A%23%20Use%20the%20given%20hash%20method%20for%20the%20metadata%20hash%20that%20is%20appended%0A%23%20to%20the%20bytecode.%0A%23%20The%20metadata%20hash%20can%20be%20removed%20from%20the%20bytecode%20by%20setting%20%22none%22%0Abytecode_hash%20%3D%20%22ipfs%22%0A%23%20How%20to%20treat%20revert%20(and%20require)%20reason%20strings%0Arevert_strings%20%3D%20%22default%22%0A%23%20If%20enabled%2C%20the%20Solidity%20compiler%20is%20instructed%20to%20generate%20bytecode%0A%23%20only%20for%20the%20required%20contracts.%20This%20can%20reduce%20compile%20time%0A%23%20for%20%60forge%20test%60%2C%20but%20is%20experimental.%0Asparse_mode%20%3D%20false%0A%23%20Contains%20alias%20-%3E%20URL%7CEnv%20pairs%20for%20RPC%20endpoints%20that%20can%20be%20accessed%20during%20testing%0Arpc_endpoints%20%3D%20%7B%20optimism%20%3D%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22%2C%20mainnet%20%3D%20%22%24%7BRPC_MAINNET%7D%22%20%7D%0A%23%20The%20Solc%20instance%20to%20use%20if%20any.%0A%23%20This%20takes%20precedence%20over%20%60auto_detect_solc%60%2C%20if%20a%20version%20is%20set%20then%20this%20overrides%20auto-detection.%0A%23solc%20%3D%20None%0A%23%20Switch%20optimizer%20components%20on%20or%20off%20in%20detail%0A%23optimizer_details%20%3D%20None%0A%23%20Model%20checker%20settings.%0A%23model_checker%20%3D%20None%2C%0A%23%20Url%20of%20the%20rpc%20server%20that%20should%20be%20used%20for%20any%20rpc%20calls%0A%23eth_rpc_url%20%3D%20None%0A%23%20Etherscan%20API%20key%0A%23etherscan_api_key%20%3D%20None%0A%23%20Only%20run%20test%20functions%20matching%20the%20specified%20regex%20pattern%0A%23match_test%20%3D%20None%0A%23%20Only%20run%20test%20functions%20that%20do%20not%20match%20the%20specified%20regex%20pattern%0A%23no_match_test%20%3D%20None%0A%23%20Only%20run%20tests%20in%20contracts%20matching%20the%20specified%20regex%20pattern%0A%23match_contract%20%3D%20None%0A%23%20Only%20run%20tests%20in%20contracts%20that%20do%20not%20match%20the%20specified%20regex%20pattern%0A%23no_match_contract%20%3D%20None%0A%23%20Only%20run%20tests%20in%20source%20files%20matching%20the%20specified%20glob%20pattern%0A%23match_path%20%3D%20None%0A%23%20Only%20run%20tests%20in%20source%20files%20that%20do%20not%20match%20the%20specified%20glob%20pattern%0A%23no_match_path%20%3D%20None%0A%23%20Only%20show%20coverage%20for%20files%20that%20do%20not%20match%20the%20specified%20regex%20pattern.%0A%23no_match_coverage%20%3D%20None%0A%23%20Number%20of%20threads%20to%20use.%20Not%20set%20or%20zero%20specifies%20the%20number%20of%20logical%20cores.%0A%23threads%20%3D%200%0A%23%20Whether%20to%20show%20test%20execution%20progress%0A%23show_progress%20%3D%20false%0A%23%20Pins%20the%20block%20number%20for%20the%20state%20fork%0A%23fork_block_number%20%3D%20None%0A%23%20The%20block%20gas%20limit%0A%23block_gas_limit%20%3D%20None%0A%23%20The%20path%20to%20the%20%60build-info%60%20directory%20that%20contains%20the%20build%20info%20json%20files%0A%23build_info_path%20%3D%20None%0A%23%20Whether%20to%20allow%20%60expectRevert%60%20for%20internal%20functions.%0Aallow_internal_expect_revert%20%3D%20false%0A%23%20Use%20the%20create%202%20factory%20in%20all%20cases%20including%20tests%20and%20non-broadcasting%20scripts.%0Aalways_use_create_2_factory%20%3D%20false%0A%23%20The%20CREATE2%20deployer%20address%20to%20use.%0Acreate2_deployer%20%3D%20%220x4e59b44847b379578588920ca78fbf26c0b4956c%22%0A%23%20CREATE2%20salt%20to%20use%20for%20the%20library%20deployment%20in%20scripts.%0Acreate2_library_salt%20%3D%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%0A%0A%5Bfmt%5D%0A%23%20Maximum%20line%20length%20where%20formatter%20will%20try%20to%20wrap%20the%20line%0Aline_length%20%3D%20120%0A%23%20Number%20of%20spaces%20per%20indentation%20level%0Atab_width%20%3D%204%0A%23%20Print%20spaces%20between%20brackets%0Abracket_spacing%20%3D%20false%0A%23%20Style%20of%20uint%2Fint256%20types%0Aint_types%20%3D%20%22long%22%0A%23%20If%20function%20parameters%20are%20multiline%20then%20always%20put%20the%20function%20attributes%20on%20separate%20lines%0Afunc_attrs_with_params_multiline%20%3D%20true%0A%23%20Style%20of%20quotation%20marks%0Aquote_style%20%3D%20%22double%22%0A%23%20Style%20of%20underscores%20in%20number%20literals%0Anumber_underscore%20%3D%20%22preserve%22%0A%0A%5Bfuzz%5D%0A%23%20The%20number%20of%20fuzz%20runs%20for%20fuzz%20tests%0Aruns%20%3D%20256%0A%23%20The%20maximum%20number%20of%20test%20case%20rejections%20allowed%20by%20proptest%2C%20to%20be%0A%23%20encountered%20during%20usage%20of%20%60vm.assume%60%20cheatcode.%20This%20will%20be%20used%0A%23%20to%20set%20the%20%60max_global_rejects%60%20value%20in%20proptest%20test%20runner%20config.%0A%23%20%60max_local_rejects%60%20option%20isn't%20exposed%20here%20since%20we're%20not%20using%0A%23%20%60prop_filter%60.%0Amax_test_rejects%20%3D%2065536%0A%23%20The%20weight%20of%20the%20dictionary%0Adictionary_weight%20%3D%2040%0A%23%20The%20flag%20indicating%20whether%20to%20include%20values%20from%20storage%0Ainclude_storage%20%3D%20true%0A%23%20The%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values%0Ainclude_push_bytes%20%3D%20true%0A%23%20Number%20of%20runs%20to%20include%20in%20the%20gas%20report.%0Agas_report_samples%20%3D%20256%0A%23%20Path%20where%20fuzz%20failures%20are%20recorded%20and%20replayed.%0A%23%20failure_persist_dir%20%3D%20%2Fpath%2Fto%2Fpersist%2Fdir%0A%23%20Name%20of%20the%20file%20to%20record%20fuzz%20failures%2C%20defaults%20to%20%60failures%60.%0A%23%20failure_persist_file%20%3D%20%22failures%22%0A%23%20Show%20%60console.log%60%20in%20fuzz%20test.%0Ashow_logs%20%3D%20false%0A%0A%5Binvariant%5D%0A%23%20The%20number%20of%20runs%20that%20must%20execute%20for%20each%20invariant%20test%20group%0Aruns%20%3D%20256%0A%23%20The%20number%20of%20calls%20executed%20to%20attempt%20to%20break%20invariants%20in%20one%20run%0Adepth%20%3D%2015%0A%23%20Fails%20the%20invariant%20fuzzing%20if%20a%20revert%20occurs%0Afail_on_revert%20%3D%20false%0A%23%20Allows%20overriding%20an%20unsafe%20external%20call%20when%20running%20invariant%20tests.%20eg.%20reentrancy%20checks%0Acall_override%20%3D%20false%0A%23%20The%20weight%20of%20the%20dictionary%0Adictionary_weight%20%3D%2080%0A%23%20The%20flag%20indicating%20whether%20to%20include%20values%20from%20storage%0Ainclude_storage%20%3D%20true%0A%23%20The%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values%0Ainclude_push_bytes%20%3D%20true%0A%23%20The%20maximum%20number%20of%20attempts%20to%20shrink%20the%20sequence.%0Ashrink_run_limit%20%3D%205000%0A%23%20The%20maximum%20number%20of%20rejects%20via%20%60vm.assume%60%20which%20can%20be%20encountered%20during%20a%20single%0A%23%20invariant%20run.%0Amax_assume_rejects%20%3D%2065536%0A%23%20Number%20of%20runs%20to%20include%20in%20the%20gas%20report.%0Agas_report_samples%20%3D%20256%0A%23%20Path%20where%20invariant%20failures%20are%20recorded%20and%20replayed.%0A%23%20failure_persist_dir%20%3D%20%2Fpath%2Fto%2Fpersist%2Fdir%0A%23%20Whether%20to%20collect%20and%20display%20fuzzed%20selectors%20metrics.%0Ashow_metrics%20%3D%20false%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./doc-generator-BHXq0-bU.js"),__vite__mapDeps([149,1])),path:"/config/reference/doc-generator",type:"mdx",filePath:"config/reference/doc-generator.mdx",content:"%23%23%20Documentation%20Generator%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Forge%20documentation%20generator.%20These%20keys%20are%20set%20in%20%60%5Bdoc%5D%60%20section.%0A%0A%23%23%23%23%23%20%60out%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60docs%60%0A-%20Environment%3A%20%60FOUNDRY_DOC_OUT%60%0A%0AAn%20output%20path%20for%20generated%20documentation.%0A%0A%23%23%23%23%23%20%60title%60%0A%0A-%20Type%3A%20string%0A-%20Environment%3A%20%60FOUNDRY_DOC_TITLE%60%0A%0ATitle%20for%20the%20generated%20documentation.%0A%0A%23%23%23%23%23%20%60book%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60.%2Fbook.toml%60%0A-%20Environment%3A%20%60FOUNDRY_DOC_BOOK%60%0A%0APath%20to%20user%20provided%20%60book.toml%60.%20It%20will%20be%20merged%20with%20default%20settings%20during%20doc%20generation.%0A%0A%23%23%23%23%23%20%60repository%60%0A%0A-%20Type%3A%20string%0A-%20Environment%3A%20%60FOUNDRY_DOC_REPOSITORY%60%0A%0AThe%20git%20repository%20URL.%20Used%20to%20provide%20links%20to%20git%20source%20files.%0AIf%20missing%2C%20%60forge%60%20will%20attempt%20to%20look%20up%20the%20current%20origin%20url%20and%20use%20its%20value.%0A%0A%23%23%23%23%23%20%60ignore%60%0A%0A-%20Type%3A%20array%20of%20strings%20(patterns)%0A-%20Default%3A%20%60%5B%5D%60%0A-%20Environment%3A%20%60FOUNDRY_DOC_IGNORE%60%0A%0AList%20of%20files%20to%20ignore%20when%20generating%20documentation.%20This%20is%20a%20comma%20separated%20list%20of%20glob%20patterns.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./doc-generator-BHXq0-bU.js"),__vite__mapDeps([149,1])),path:"/config/reference/doc-generator.html",type:"mdx",filePath:"config/reference/doc-generator.mdx",content:"%23%23%20Documentation%20Generator%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Forge%20documentation%20generator.%20These%20keys%20are%20set%20in%20%60%5Bdoc%5D%60%20section.%0A%0A%23%23%23%23%23%20%60out%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60docs%60%0A-%20Environment%3A%20%60FOUNDRY_DOC_OUT%60%0A%0AAn%20output%20path%20for%20generated%20documentation.%0A%0A%23%23%23%23%23%20%60title%60%0A%0A-%20Type%3A%20string%0A-%20Environment%3A%20%60FOUNDRY_DOC_TITLE%60%0A%0ATitle%20for%20the%20generated%20documentation.%0A%0A%23%23%23%23%23%20%60book%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60.%2Fbook.toml%60%0A-%20Environment%3A%20%60FOUNDRY_DOC_BOOK%60%0A%0APath%20to%20user%20provided%20%60book.toml%60.%20It%20will%20be%20merged%20with%20default%20settings%20during%20doc%20generation.%0A%0A%23%23%23%23%23%20%60repository%60%0A%0A-%20Type%3A%20string%0A-%20Environment%3A%20%60FOUNDRY_DOC_REPOSITORY%60%0A%0AThe%20git%20repository%20URL.%20Used%20to%20provide%20links%20to%20git%20source%20files.%0AIf%20missing%2C%20%60forge%60%20will%20attempt%20to%20look%20up%20the%20current%20origin%20url%20and%20use%20its%20value.%0A%0A%23%23%23%23%23%20%60ignore%60%0A%0A-%20Type%3A%20array%20of%20strings%20(patterns)%0A-%20Default%3A%20%60%5B%5D%60%0A-%20Environment%3A%20%60FOUNDRY_DOC_IGNORE%60%0A%0AList%20of%20files%20to%20ignore%20when%20generating%20documentation.%20This%20is%20a%20comma%20separated%20list%20of%20glob%20patterns.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etherscan-DLtBaWT8.js"),__vite__mapDeps([150,1])),path:"/config/reference/etherscan",type:"mdx",filePath:"config/reference/etherscan.mdx",content:"%23%23%20Etherscan%0A%0AConfiguration%20related%20to%20Etherscan%2C%20such%20as%20API%20keys.%20This%20configuration%20is%20used%20in%20various%20places%20by%20Forge.%0A%0AThe%20%60%5Betherscan%5D%60%20section%20is%20a%20mapping%20of%20keys%20to%20Etherscan%20configuration%20tables.%20%0A%0AWith%20Etherscan%20API%20V2%2C%20only%20Etherscan%20keys%20are%20valid%2C%20which%20can%20be%20used%20to%20access%20all%20similar%20explorers%20(e.g.%20BscScan%20%2F%20BaseScan%20%2F%20Polygonscan).%0A%0A%60%60%60toml%0A%5Betherscan%5D%0Amainnet%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Amainnet2%20%3D%20%7B%20key%20%3D%20%22ABCDEFG%22%2C%20chain%20%3D%20%22mainnet%22%20%7D%0Aoptimism%20%3D%20%7B%20key%20%3D%20%221234567%22%20%7D%0Aunknown_chain%20%3D%20%7B%20key%20%3D%20%22ABCDEFG%22%2C%20url%20%3D%20%22%3Cetherscan%20api%20url%20for%20this%20chain%3E%22%20%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etherscan-DLtBaWT8.js"),__vite__mapDeps([150,1])),path:"/config/reference/etherscan.html",type:"mdx",filePath:"config/reference/etherscan.mdx",content:"%23%23%20Etherscan%0A%0AConfiguration%20related%20to%20Etherscan%2C%20such%20as%20API%20keys.%20This%20configuration%20is%20used%20in%20various%20places%20by%20Forge.%0A%0AThe%20%60%5Betherscan%5D%60%20section%20is%20a%20mapping%20of%20keys%20to%20Etherscan%20configuration%20tables.%20%0A%0AWith%20Etherscan%20API%20V2%2C%20only%20Etherscan%20keys%20are%20valid%2C%20which%20can%20be%20used%20to%20access%20all%20similar%20explorers%20(e.g.%20BscScan%20%2F%20BaseScan%20%2F%20Polygonscan).%0A%0A%60%60%60toml%0A%5Betherscan%5D%0Amainnet%20%3D%20%7B%20key%20%3D%20%22%24%7BETHERSCAN_API_KEY%7D%22%20%7D%0Amainnet2%20%3D%20%7B%20key%20%3D%20%22ABCDEFG%22%2C%20chain%20%3D%20%22mainnet%22%20%7D%0Aoptimism%20%3D%20%7B%20key%20%3D%20%221234567%22%20%7D%0Aunknown_chain%20%3D%20%7B%20key%20%3D%20%22ABCDEFG%22%2C%20url%20%3D%20%22%3Cetherscan%20api%20url%20for%20this%20chain%3E%22%20%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./formatter-0oIEISvG.js"),__vite__mapDeps([151,1])),path:"/config/reference/formatter",type:"mdx",filePath:"config/reference/formatter.mdx",content:"%23%23%20Formatter%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Forge%20formatter.%20Each%20of%20these%20keys%20live%20under%20the%20%60%5Bfmt%5D%60%20section.%0A%0A%23%23%23%20%60single_line_statement_blocks%60%0A%0A%3E%20This%20allows%20configuring%20the%20style%20of%20statement%20blocks%20independently%20of%20the%20line%20length.%0A%0AThe%20%60single_line_statement_blocks%60%20configuration%20option%20in%20Foundry%20controls%20whether%20statement%20blocks%20(code%20blocks%20enclosed%20in%20%60%7B%20%7D%60)%20will%20be%20formatted%20to%20a%20single%20line%20or%20multiple%20lines.%0A%0AIt%20has%20three%20possible%20values%3A%0A%0A-%20%20%20%60%22single%22%60%20-%20Statement%20blocks%20will%20be%20formatted%20to%20a%20single%20line%20if%20possible.%0A-%20%20%20%60%22multi%22%60%20-%20Statement%20blocks%20will%20always%20be%20formatted%20to%20multiple%20lines.%0A-%20%20%20%60%22preserve%22%60%20-%20Keep%20the%20existing%20single%2Fmulti%20line%20formatting%20of%20statement%20blocks.%0A%0AFor%20example%2C%20with%20%60%22single%22%60%3A%0A%0A%60%60%60solidity%0Aif%20(true)%20%7B%20return%20true%3B%20%7D%0A%60%60%60%0A%0AWith%20%60%22multi%22%60%3A%0A%0A%60%60%60solidity%0Aif%20(true)%20%7B%0A%20%20return%20true%3B%0A%7D%0A%60%60%60%0A%0AAnd%20with%20%60%22preserve%22%60%2C%20it%20will%20keep%20the%20original%20formatting%20of%20the%20code.%0A%0A%23%23%23%20%60multiline_func_header%60%0A%0A%3E%20This%20allows%20configuring%20the%20formatting%20of%20long%20function%20headers.%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60attributes_first%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_MULTILINE_FUNC_HEADER%60%20or%20%60DAPP_FMT_MULTILINE_FUNC_HEADER%60%0A%0AThe%20%60multiline_func_header%60%20configuration%20option%20in%20Foundry%20controls%20how%20function%20headers%20(the%20line%20containing%20the%20function%20name%2C%20parameters%2C%20return%20values%20etc.)%20are%20formatted%20when%20they%20exceed%20the%20max%20line%20length.%0A%0AStyle%20of%20multiline%20function%20header%20in%20case%20it%20doesn't%20fit%20in%20one%20line.%20Valid%20possible%20values%3A%0A%0A-%20%20%20%60%22attributes_first%22%60%20-%20(default)%20%20Write%20function%20attributes%20multiline%20first%0A-%20%20%20%60%22params_first%22%60%20-%20Break%20the%20function%20header%20into%20multiple%20lines%2C%20with%20each%20parameter%20on%20its%20own%20line.%20The%20function%20name%20stays%20on%20the%20first%20line.%0A-%20%20%20%60%22all%22%60%20-%20If%20function%20parameters%20or%20attributes%20are%20multiline%2C%20multiline%20everything%0A%20%20%20%20%0A%0AStyle%20of%20multiline%20function%20header%20in%20case%20it%20doesn't%20fit%20in%20one%20line.%20Valid%20values%20are%3A%0A%0AFor%20example%2C%20with%20%60%22params_first%22%60%3A%0A%0A%60%60%60solidity%0Afunction%20myFunction(%0A%20%20%20%20uint256%20param1%2C%20%0A%20%20%20%20uint256%20param2%2C%0A%20%20%20%20uint256%20param3%0A)%20public%20returns%20(uint256)%20%7B%0A%20%20%2F%2F%20...%0A%7D%0A%0A%60%60%60%0A%0AAnd%20with%20%60%22all%22%60%3A%0A%0A%60%60%60solidity%0Afunction%20myFunction(%0A%20%20%20%20uint256%20param1%2C%0A%20%20%20%20uint256%20param2%2C%20%0A%20%20%20%20uint256%20param3%0A)%20%0A%20%20%20%20public%20%0A%20%20%20%20returns%20(uint256)%20%0A%7B%0A%20%20%2F%2F%20...%20%20%0A%7D%0A%60%60%60%0A%0A%23%23%23%20%60sort_imports%60%0A%0A%3E%20helps%20organize%20imports%20and%20makes%20it%20easier%20to%20find%20specific%20imports%20quickly.%0A%0AThe%20%60sort_imports%60%20configuration%20option%20in%20Foundry%20controls%20whether%20import%20statements%20are%20sorted%20alphabetically%20within%20their%20import%20groups.%0A%0AFrom%20the%20code%20snippets%20provided%3A%0A%0A-%20%20%20In%20%60fmt.rs%60%2C%20%60sort_imports%60%20is%20a%20configuration%20option%20that%20can%20be%20set%20to%20%60true%60%20or%20%60false%60.%0A-%20%20%20In%20%60formatter.rs%60%2C%20the%20%60sort_imports()%60%20method%20is%20called%20to%20sort%20import%20statements%20alphabetically%20if%20%60sort_imports%60%20is%20enabled.%0A-%20%20%20It%20finds%20import%20groups%20separated%20by%20blank%20lines%20in%20the%20source%20code.%0A-%20%20%20Then%20sorts%20the%20import%20statements%20within%20each%20group%20alphabetically.%0A%0ASo%20in%20summary%2C%20enabling%20%60sort_imports%60%20will%20reorder%20solidity%20import%20statements%20alphabetically%20within%20their%20section%20groups%2C%20while%20preserving%20the%20relative%20ordering%20of%20the%20groups.%0A%0A%23%23%23%20%60contract_new_lines%60%0A%0A%3E%20Controls%20the%20addition%20of%20blank%20lines%20before%20and%20after%20contract%20definitions.%0A%0AThe%20%60contract_new_lines%60%20configuration%20option%20in%20Foundry%20controls%20whether%20empty%20lines%20are%20added%20before%20and%20after%20contract%20definitions.%0A%0AWhen%20enabled%20(%60contract_new_lines%20%3D%20true%60)%3A%0A%0A-%20%20%20An%20empty%20line%20will%20be%20added%20before%20the%20start%20of%20a%20contract%20definition.%0A-%20%20%20An%20empty%20line%20will%20also%20be%20added%20after%20the%20end%20of%20a%20contract%20definition.%0A%0AFor%20example%2C%20with%20%60contract_new_lines%60%20enabled%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Empty%20line%20before%20contract%20contract%20MyContract%20%7B%20%2F%2F%20...%20%7D%20%2F%2F%20Empty%20line%20after%20contract%0A%60%60%60%0A%0AThis%20helps%20visually%20separate%20contract%20definitions%20and%20improve%20readability.%0A%0AWhen%20disabled%20(%60contract_new_lines%20%3D%20false%60)%2C%20empty%20lines%20will%20not%20be%20added%20around%20contracts.%0A%0ASo%20in%20summary%2C%20the%20%60contract_new_lines%60%20option%20controls%20the%20addition%20of%20blank%20lines%20before%20and%20after%20contract%20definitions.%0A%0A%23%23%23%20%60override_spacing%60%0A%0AThe%20%60override_spacing%60%20configuration%20option%20in%20Foundry%20controls%20whether%20a%20space%20is%20printed%20between%20the%20%60override%60%20keyword%20and%20the%20parent%20contracts%20when%20overriding%20a%20function%20or%20modifier.%0A%0AWhen%20%60override_spacing%60%20is%20enabled%3A%0A%0A-%20%20%20A%20space%20will%20be%20added%20after%20the%20%60override%60%20keyword.%0A%0AFor%20example%3A%0A%0A%60%60%60solidity%0Acontract%20Child%20is%20Parent%20%7B%0A%20%20function%20foo()%20override%20(Parent)%20public%20%7B%20%7D%0A%7D%0A%60%60%60%0A%0AWhen%20disabled%2C%20there%20will%20be%20no%20space%20between%20%60override%60%20and%20the%20parent%20contracts%3A%0A%0A%60%60%60solidity%0Acontract%20Child%20is%20Parent%20%7B%0A%20%20function%20foo()%20override(Parent)%20public%20%7B%20%7D%20%0A%7D%0A%60%60%60%0A%0AEnables%20configuring%20the%20styling%20of%20override%20declarations.%0A%0A-%20%20%20%60override_spacing%20%3D%20true%60%20-%20Print%20a%20space%20after%20%60override%60%0A-%20%20%20%60override_spacing%20%3D%20false%60%20-%20No%20space%20after%20%60override%60%0A%0A%0A%23%23%23%20%60line_length%60%0A%0A-%20Type%3A%20number%0A-%20Default%3A%20120%0A-%20Environment%3A%20%60FOUNDRY_FMT_LINE_LENGTH%60%20or%20%60DAPP_FMT_LINE_LENGTH%60%0A%0AMaximum%20line%20length%20where%20formatter%20will%20try%20to%20wrap%20the%20line.%0A%0A%23%23%23%20%60tab_width%60%0A%0A-%20Type%3A%20number%0A-%20Default%3A%204%0A-%20Environment%3A%20%60FOUNDRY_FMT_TAB_WIDTH%60%20or%20%60DAPP_FMT_TAB_WIDTH%60%0A%0ANumber%20of%20spaces%20per%20indentation%20level.%0A%0A%23%23%23%20%60bracket_spacing%60%0A%0A-%20Type%3A%20bool%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FMT_BRACKET_SPACING%60%20or%20%60DAPP_FMT_BRACKET_SPACING%60%0A%0AWhether%20or%20not%20to%20print%20spaces%20between%20brackets.%0A%0A%23%23%23%20%60int_types%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60long%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_INT_TYPES%60%20or%20%60DAPP_FMT_INT_TYPES%60%0A%0AStyle%20of%20uint%2Fint256%20types.%20Valid%20values%20are%3A%0A%0A-%20%60long%60%20(default)%3A%20Use%20the%20explicit%20%60uint256%60%20or%20%60int256%60%0A-%20%60short%60%3A%20Use%20the%20implicit%20%60uint%60%20or%20%60int%60%0A-%20%60preserve%60%3A%20Use%20the%20type%20defined%20in%20the%20source%20code%0A%0A%23%23%23%20%60quote_style%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60double%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_QUOTE_STYLE%60%20or%20%60DAPP_FMT_QUOTE_STYLE%60%0A%0ADefines%20the%20quotation%20mark%20style.%20Valid%20values%20are%3A%0A%0A-%20%60double%60%20(default)%3A%20Use%20double%20quotes%20where%20possible%20(%60%22%60)%0A-%20%60single%60%3A%20Use%20single%20quotes%20where%20possible%20(%60'%60)%0A-%20%60preserve%60%3A%20Use%20quotation%20mark%20defined%20in%20the%20source%20code%0A%0A%23%23%23%20%60number_underscore%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60preserve%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_NUMBER_UNDERSCORE%60%20or%20%60DAPP_FMT_NUMBER_UNDERSCORE%60%0A%0AStyle%20of%20underscores%20in%20number%20literals.%20Valid%20values%20are%3A%0A%0A-%20%60preserve%60%20(default)%3A%20Use%20the%20underscores%20defined%20in%20the%20source%20code%0A-%20%60thousands%60%3A%20Add%20an%20underscore%20every%20thousand%2C%20if%20greater%20than%209999.%20i.e.%20%601000%60%20is%20formatted%20as%20%601000%60%20and%20%6010000%60%20as%20%6010_000%60%0A-%20%60remove%60%3A%20Remove%20all%20underscores%0A%0A%23%23%23%20%60hex_underscore%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60remove%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_HEX_UNDERSCORE%60%20or%20%60DAPP_FMT_HEX_UNDERSCORE%60%0A%0AStyle%20of%20underscores%20in%20bytes%20literals.%20Valid%20values%20are%3A%0A%0A-%20%60preserve%60%3A%20Use%20the%20underscores%20defined%20in%20the%20source%20code%0A-%20%60remove%60%20(default)%3A%20Remove%20all%20underscores%0A-%20%60bytes%60%3A%20Add%20underscore%20as%20separator%20between%20byte%20boundaries.%20i.e.%20%60hex%22deadbeef%22%60%20is%20formatted%20as%20%60hex%22de_ad_be_ef%22%60%0A%0A%23%23%23%20%60wrap_comments%60%0A%0A-%20Type%3A%20bool%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FMT_WRAP_COMMENTS%60%20or%20%60DAPP_FMT_WRAP_COMMENTS%60%0A%0AWhether%20or%20not%20to%20wrap%20comments%20on%20%60line_length%60%20reached.%0A%0A%23%23%23%20%60ignore%60%0A%0A-%20Type%3A%20array%20of%20strings%20(patterns)%0A-%20Default%3A%20%60%5B%5D%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_IGNORE%60%20or%20%60DAPP_FMT_IGNORE%60%0A%0AList%20of%20files%20to%20ignore%20when%20formatting.%20This%20is%20a%20comma%20separated%20list%20of%20glob%20patterns.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./formatter-0oIEISvG.js"),__vite__mapDeps([151,1])),path:"/config/reference/formatter.html",type:"mdx",filePath:"config/reference/formatter.mdx",content:"%23%23%20Formatter%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Forge%20formatter.%20Each%20of%20these%20keys%20live%20under%20the%20%60%5Bfmt%5D%60%20section.%0A%0A%23%23%23%20%60single_line_statement_blocks%60%0A%0A%3E%20This%20allows%20configuring%20the%20style%20of%20statement%20blocks%20independently%20of%20the%20line%20length.%0A%0AThe%20%60single_line_statement_blocks%60%20configuration%20option%20in%20Foundry%20controls%20whether%20statement%20blocks%20(code%20blocks%20enclosed%20in%20%60%7B%20%7D%60)%20will%20be%20formatted%20to%20a%20single%20line%20or%20multiple%20lines.%0A%0AIt%20has%20three%20possible%20values%3A%0A%0A-%20%20%20%60%22single%22%60%20-%20Statement%20blocks%20will%20be%20formatted%20to%20a%20single%20line%20if%20possible.%0A-%20%20%20%60%22multi%22%60%20-%20Statement%20blocks%20will%20always%20be%20formatted%20to%20multiple%20lines.%0A-%20%20%20%60%22preserve%22%60%20-%20Keep%20the%20existing%20single%2Fmulti%20line%20formatting%20of%20statement%20blocks.%0A%0AFor%20example%2C%20with%20%60%22single%22%60%3A%0A%0A%60%60%60solidity%0Aif%20(true)%20%7B%20return%20true%3B%20%7D%0A%60%60%60%0A%0AWith%20%60%22multi%22%60%3A%0A%0A%60%60%60solidity%0Aif%20(true)%20%7B%0A%20%20return%20true%3B%0A%7D%0A%60%60%60%0A%0AAnd%20with%20%60%22preserve%22%60%2C%20it%20will%20keep%20the%20original%20formatting%20of%20the%20code.%0A%0A%23%23%23%20%60multiline_func_header%60%0A%0A%3E%20This%20allows%20configuring%20the%20formatting%20of%20long%20function%20headers.%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60attributes_first%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_MULTILINE_FUNC_HEADER%60%20or%20%60DAPP_FMT_MULTILINE_FUNC_HEADER%60%0A%0AThe%20%60multiline_func_header%60%20configuration%20option%20in%20Foundry%20controls%20how%20function%20headers%20(the%20line%20containing%20the%20function%20name%2C%20parameters%2C%20return%20values%20etc.)%20are%20formatted%20when%20they%20exceed%20the%20max%20line%20length.%0A%0AStyle%20of%20multiline%20function%20header%20in%20case%20it%20doesn't%20fit%20in%20one%20line.%20Valid%20possible%20values%3A%0A%0A-%20%20%20%60%22attributes_first%22%60%20-%20(default)%20%20Write%20function%20attributes%20multiline%20first%0A-%20%20%20%60%22params_first%22%60%20-%20Break%20the%20function%20header%20into%20multiple%20lines%2C%20with%20each%20parameter%20on%20its%20own%20line.%20The%20function%20name%20stays%20on%20the%20first%20line.%0A-%20%20%20%60%22all%22%60%20-%20If%20function%20parameters%20or%20attributes%20are%20multiline%2C%20multiline%20everything%0A%20%20%20%20%0A%0AStyle%20of%20multiline%20function%20header%20in%20case%20it%20doesn't%20fit%20in%20one%20line.%20Valid%20values%20are%3A%0A%0AFor%20example%2C%20with%20%60%22params_first%22%60%3A%0A%0A%60%60%60solidity%0Afunction%20myFunction(%0A%20%20%20%20uint256%20param1%2C%20%0A%20%20%20%20uint256%20param2%2C%0A%20%20%20%20uint256%20param3%0A)%20public%20returns%20(uint256)%20%7B%0A%20%20%2F%2F%20...%0A%7D%0A%0A%60%60%60%0A%0AAnd%20with%20%60%22all%22%60%3A%0A%0A%60%60%60solidity%0Afunction%20myFunction(%0A%20%20%20%20uint256%20param1%2C%0A%20%20%20%20uint256%20param2%2C%20%0A%20%20%20%20uint256%20param3%0A)%20%0A%20%20%20%20public%20%0A%20%20%20%20returns%20(uint256)%20%0A%7B%0A%20%20%2F%2F%20...%20%20%0A%7D%0A%60%60%60%0A%0A%23%23%23%20%60sort_imports%60%0A%0A%3E%20helps%20organize%20imports%20and%20makes%20it%20easier%20to%20find%20specific%20imports%20quickly.%0A%0AThe%20%60sort_imports%60%20configuration%20option%20in%20Foundry%20controls%20whether%20import%20statements%20are%20sorted%20alphabetically%20within%20their%20import%20groups.%0A%0AFrom%20the%20code%20snippets%20provided%3A%0A%0A-%20%20%20In%20%60fmt.rs%60%2C%20%60sort_imports%60%20is%20a%20configuration%20option%20that%20can%20be%20set%20to%20%60true%60%20or%20%60false%60.%0A-%20%20%20In%20%60formatter.rs%60%2C%20the%20%60sort_imports()%60%20method%20is%20called%20to%20sort%20import%20statements%20alphabetically%20if%20%60sort_imports%60%20is%20enabled.%0A-%20%20%20It%20finds%20import%20groups%20separated%20by%20blank%20lines%20in%20the%20source%20code.%0A-%20%20%20Then%20sorts%20the%20import%20statements%20within%20each%20group%20alphabetically.%0A%0ASo%20in%20summary%2C%20enabling%20%60sort_imports%60%20will%20reorder%20solidity%20import%20statements%20alphabetically%20within%20their%20section%20groups%2C%20while%20preserving%20the%20relative%20ordering%20of%20the%20groups.%0A%0A%23%23%23%20%60contract_new_lines%60%0A%0A%3E%20Controls%20the%20addition%20of%20blank%20lines%20before%20and%20after%20contract%20definitions.%0A%0AThe%20%60contract_new_lines%60%20configuration%20option%20in%20Foundry%20controls%20whether%20empty%20lines%20are%20added%20before%20and%20after%20contract%20definitions.%0A%0AWhen%20enabled%20(%60contract_new_lines%20%3D%20true%60)%3A%0A%0A-%20%20%20An%20empty%20line%20will%20be%20added%20before%20the%20start%20of%20a%20contract%20definition.%0A-%20%20%20An%20empty%20line%20will%20also%20be%20added%20after%20the%20end%20of%20a%20contract%20definition.%0A%0AFor%20example%2C%20with%20%60contract_new_lines%60%20enabled%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Empty%20line%20before%20contract%20contract%20MyContract%20%7B%20%2F%2F%20...%20%7D%20%2F%2F%20Empty%20line%20after%20contract%0A%60%60%60%0A%0AThis%20helps%20visually%20separate%20contract%20definitions%20and%20improve%20readability.%0A%0AWhen%20disabled%20(%60contract_new_lines%20%3D%20false%60)%2C%20empty%20lines%20will%20not%20be%20added%20around%20contracts.%0A%0ASo%20in%20summary%2C%20the%20%60contract_new_lines%60%20option%20controls%20the%20addition%20of%20blank%20lines%20before%20and%20after%20contract%20definitions.%0A%0A%23%23%23%20%60override_spacing%60%0A%0AThe%20%60override_spacing%60%20configuration%20option%20in%20Foundry%20controls%20whether%20a%20space%20is%20printed%20between%20the%20%60override%60%20keyword%20and%20the%20parent%20contracts%20when%20overriding%20a%20function%20or%20modifier.%0A%0AWhen%20%60override_spacing%60%20is%20enabled%3A%0A%0A-%20%20%20A%20space%20will%20be%20added%20after%20the%20%60override%60%20keyword.%0A%0AFor%20example%3A%0A%0A%60%60%60solidity%0Acontract%20Child%20is%20Parent%20%7B%0A%20%20function%20foo()%20override%20(Parent)%20public%20%7B%20%7D%0A%7D%0A%60%60%60%0A%0AWhen%20disabled%2C%20there%20will%20be%20no%20space%20between%20%60override%60%20and%20the%20parent%20contracts%3A%0A%0A%60%60%60solidity%0Acontract%20Child%20is%20Parent%20%7B%0A%20%20function%20foo()%20override(Parent)%20public%20%7B%20%7D%20%0A%7D%0A%60%60%60%0A%0AEnables%20configuring%20the%20styling%20of%20override%20declarations.%0A%0A-%20%20%20%60override_spacing%20%3D%20true%60%20-%20Print%20a%20space%20after%20%60override%60%0A-%20%20%20%60override_spacing%20%3D%20false%60%20-%20No%20space%20after%20%60override%60%0A%0A%0A%23%23%23%20%60line_length%60%0A%0A-%20Type%3A%20number%0A-%20Default%3A%20120%0A-%20Environment%3A%20%60FOUNDRY_FMT_LINE_LENGTH%60%20or%20%60DAPP_FMT_LINE_LENGTH%60%0A%0AMaximum%20line%20length%20where%20formatter%20will%20try%20to%20wrap%20the%20line.%0A%0A%23%23%23%20%60tab_width%60%0A%0A-%20Type%3A%20number%0A-%20Default%3A%204%0A-%20Environment%3A%20%60FOUNDRY_FMT_TAB_WIDTH%60%20or%20%60DAPP_FMT_TAB_WIDTH%60%0A%0ANumber%20of%20spaces%20per%20indentation%20level.%0A%0A%23%23%23%20%60bracket_spacing%60%0A%0A-%20Type%3A%20bool%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FMT_BRACKET_SPACING%60%20or%20%60DAPP_FMT_BRACKET_SPACING%60%0A%0AWhether%20or%20not%20to%20print%20spaces%20between%20brackets.%0A%0A%23%23%23%20%60int_types%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60long%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_INT_TYPES%60%20or%20%60DAPP_FMT_INT_TYPES%60%0A%0AStyle%20of%20uint%2Fint256%20types.%20Valid%20values%20are%3A%0A%0A-%20%60long%60%20(default)%3A%20Use%20the%20explicit%20%60uint256%60%20or%20%60int256%60%0A-%20%60short%60%3A%20Use%20the%20implicit%20%60uint%60%20or%20%60int%60%0A-%20%60preserve%60%3A%20Use%20the%20type%20defined%20in%20the%20source%20code%0A%0A%23%23%23%20%60quote_style%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60double%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_QUOTE_STYLE%60%20or%20%60DAPP_FMT_QUOTE_STYLE%60%0A%0ADefines%20the%20quotation%20mark%20style.%20Valid%20values%20are%3A%0A%0A-%20%60double%60%20(default)%3A%20Use%20double%20quotes%20where%20possible%20(%60%22%60)%0A-%20%60single%60%3A%20Use%20single%20quotes%20where%20possible%20(%60'%60)%0A-%20%60preserve%60%3A%20Use%20quotation%20mark%20defined%20in%20the%20source%20code%0A%0A%23%23%23%20%60number_underscore%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60preserve%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_NUMBER_UNDERSCORE%60%20or%20%60DAPP_FMT_NUMBER_UNDERSCORE%60%0A%0AStyle%20of%20underscores%20in%20number%20literals.%20Valid%20values%20are%3A%0A%0A-%20%60preserve%60%20(default)%3A%20Use%20the%20underscores%20defined%20in%20the%20source%20code%0A-%20%60thousands%60%3A%20Add%20an%20underscore%20every%20thousand%2C%20if%20greater%20than%209999.%20i.e.%20%601000%60%20is%20formatted%20as%20%601000%60%20and%20%6010000%60%20as%20%6010_000%60%0A-%20%60remove%60%3A%20Remove%20all%20underscores%0A%0A%23%23%23%20%60hex_underscore%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60remove%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_HEX_UNDERSCORE%60%20or%20%60DAPP_FMT_HEX_UNDERSCORE%60%0A%0AStyle%20of%20underscores%20in%20bytes%20literals.%20Valid%20values%20are%3A%0A%0A-%20%60preserve%60%3A%20Use%20the%20underscores%20defined%20in%20the%20source%20code%0A-%20%60remove%60%20(default)%3A%20Remove%20all%20underscores%0A-%20%60bytes%60%3A%20Add%20underscore%20as%20separator%20between%20byte%20boundaries.%20i.e.%20%60hex%22deadbeef%22%60%20is%20formatted%20as%20%60hex%22de_ad_be_ef%22%60%0A%0A%23%23%23%20%60wrap_comments%60%0A%0A-%20Type%3A%20bool%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FMT_WRAP_COMMENTS%60%20or%20%60DAPP_FMT_WRAP_COMMENTS%60%0A%0AWhether%20or%20not%20to%20wrap%20comments%20on%20%60line_length%60%20reached.%0A%0A%23%23%23%20%60ignore%60%0A%0A-%20Type%3A%20array%20of%20strings%20(patterns)%0A-%20Default%3A%20%60%5B%5D%60%0A-%20Environment%3A%20%60FOUNDRY_FMT_IGNORE%60%20or%20%60DAPP_FMT_IGNORE%60%0A%0AList%20of%20files%20to%20ignore%20when%20formatting.%20This%20is%20a%20comma%20separated%20list%20of%20glob%20patterns.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./inline-test-config-ChEAJJwS.js"),__vite__mapDeps([152,1])),path:"/config/reference/inline-test-config",type:"mdx",filePath:"config/reference/inline-test-config.mdx",content:"%23%23%20In-line%20test%20configuration%0AFoundry%20users%20are%20enabled%20to%20specify%20overall%20test%20configurations%2C%20using%20a%20combination%20of%20ENV%20variables%20and%20config%20statements%20in%20the%20%60foundry.toml%60.%20Checkout%20the%20%5B%60Testing%20reference%60%5D%5BTesting%20Reference%5D%20for%20a%20detailed%20description.%0A%0ADespite%20this%20may%20work%20in%20the%20general%20case%2C%20some%20tests%20may%20need%20finer%20control%20over%20their%20configuration.%20For%20such%20reason%20Forge%20provides%20a%20way%20to%20specify%20per-test%20configs%20for%20invariant%20and%20fuzz%20testing%20scenarios.%20%0A%0AUsers%20can%20in-line%20test%20config%20statements%20directly%20in%20Solidity%20comments.%20This%20would%20affect%20the%20behavior%20of%20the%20%60forge%20test%60%20command%20for%20a%20specific%20test%20instance%2C%20as%20illustrated%20in%20the%20example%20below.%0A%0A%60%60%60solidity%0Acontract%20MyTest%20is%20Test%20%7B%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.runs%20%3D%20100%0A%20%20%2F%2F%2F%20forge-config%3A%20ci.fuzz.runs%20%3D%20500%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.show-logs%20%3D%20true%0A%20%20function%20test_SimpleFuzzTest(uint256%20x)%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0AWhat%20we%20are%20asking%20here%20is%20to%20run%20our%20fuzzer%20%60100%60%20and%20%60500%60%20times%20for%20the%20%60default%60%20and%20%60ci%60%20profiles%20respectively.%20The%20interesting%20fact%20is%20that%20this%20would%20override%20any%20fuzz%20%60runs%60%20setup%20existing%20at%20a%20global%20level.%20All%20other%20configs%20would%20be%20inherited%20from%20the%20global%20context%2C%20making%20this%20acting%20as%20a%20fallback%20for%20all%20possible%20configurations.%0A%0A%23%23%23%20Block%20comments%0AIn-line%20test%20configurations%20can%20also%20be%20expressed%20in%20block%20comments%2C%20as%20illustrated%20in%20the%20example.%0A%0A%60%60%60solidity%0Acontract%20MyTest%20is%20Test%20%7B%0A%20%20%2F**%0A%20%20%20*%20forge-config%3A%20default.fuzz.runs%20%3D%201024%0A%20%20%20*%20forge-config%3A%20default.fuzz.max-test-rejects%20%3D%20500%0A%20%20%20*%20forge-config%3A%20default.fuzz.show-logs%20%3D%20true%0A%20%20%20*%2F%0A%20%20function%20test_SimpleFuzzTest(uint256%20x)%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20In-line%20fuzz%20configs%0AUsers%20can%20specify%20the%20configs%20described%20in%20the%20table.%20Each%20statement%20must%20have%20a%20prefix%20of%20the%20form%20%60forge-config%3A%20%24%7BPROFILE%7D.fuzz.%60%0A%0A%7C%20Parameter%20%7C%20Type%20%7C%20Description%20%7C%0A%7C-%7C-%7C-%7C%0A%7C%60runs%60%7Cinteger%7CThe%20amount%20of%20fuzz%20runs%20to%20perform%20for%20this%20specific%20test%20case.%20%5B%60Reference%60%5D%5Btesting%5D.%7C%0A%7C%60max-test-rejects%60%7Cinteger%7CThe%20maximum%20number%20of%20combined%20inputs%20that%20may%20be%20rejected%20before%20the%20test%20as%20a%20whole%20aborts.%20%5B%60Reference%60%5D%5BMax%20test%20rejects%5D.%7C%0A%7C%60show-logs%60%7Cboolean%7C%20The%20flag%20indicates%20whether%20to%20display%20console%20logs%20in%20fuzz%20tests%20or%20not.%20Works%20when%20%60verbosity%20%3E%3D%202%60.%20%5B%60Reference%60%5D%5BFuzz%20show%20logs%5D.%20%7C%0A%0AFuzz%20config%20example%0A%60%60%60solidity%0Acontract%20MyFuzzTest%20is%20Test%20%7B%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.runs%20%3D%20100%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.max-test-rejects%20%3D%202%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.show-logs%20%3D%20true%0A%20%20function%20test_InlineConfig(uint256%20x)%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20In-line%20invariant%20configs%0AUsers%20can%20specify%20the%20configs%20described%20in%20the%20table.%20Each%20statement%20must%20have%20a%20prefix%20of%20the%20form%20%60forge-config%3A%20%24%7BPROFILE%7D.invariant.%60%0A%0A%7C%20Parameter%20%7C%20Type%20%7C%20Description%20%7C%0A%7C-%7C-%7C-%7C%0A%7C%60runs%60%7Cinteger%7CThe%20amount%20of%20invariant%20runs%20to%20perform%20for%20this%20specific%20test%20case.%20%5B%60Reference%60%5D%5BInvariant%20runs%5D.%0A%7C%60depth%60%7Cinteger%7CThe%20number%20of%20calls%20executed%20to%20attempt%20to%20break%20invariant%20in%20one%20run.%20%5B%60Reference%60%5D%5BInvariant%20depth%5D.%0A%7C%60fail-on-revert%60%7Cboolean%7CFails%20the%20invariant%20fuzzing%20if%20a%20revert%20occurs.%20%5B%60Reference%60%5D%5BFail%20on%20revert%5D.%0A%7C%60call-override%60%7Cboolean%7COverrides%20unsafe%20external%20calls%20when%20running%20invariant%20test.%20%5B%60Reference%60%5D%5BInvariant%20call%20override%5D.%0A%0AInvariant%20config%20example%0A%60%60%60solidity%0Acontract%20MyInvariantTest%20is%20Test%20%7B%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.runs%20%3D%20100%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.depth%20%3D%202%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.fail-on-revert%20%3D%20false%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.call-override%20%3D%20true%0A%20%20function%20invariant_InlineConfig()%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%0A%0A%0A%0A%5BTesting%20Reference%5D%3A%20.%2Ftesting.md%0A%5Btesting%5D%3A%20.%2Ftesting.md%23runs%0A%5BMax%20test%20rejects%5D%3A%20.%2Ftesting.md%23max_test_rejects%0A%5BFuzz%20show%20logs%5D%3A%20.%2Ftesting.md%23show_logs%0A%5BInvariant%20runs%5D%3A%20.%2Ftesting.md%23runs-1%0A%5BInvariant%20depth%5D%3A%20.%2Ftesting.md%23depth%0A%5BFail%20on%20revert%5D%3A%20.%2Ftesting.md%23fail_on_revert%0A%5BInvariant%20call%20override%5D%3A%20.%2Ftesting.md%23call_override",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./inline-test-config-ChEAJJwS.js"),__vite__mapDeps([152,1])),path:"/config/reference/inline-test-config.html",type:"mdx",filePath:"config/reference/inline-test-config.mdx",content:"%23%23%20In-line%20test%20configuration%0AFoundry%20users%20are%20enabled%20to%20specify%20overall%20test%20configurations%2C%20using%20a%20combination%20of%20ENV%20variables%20and%20config%20statements%20in%20the%20%60foundry.toml%60.%20Checkout%20the%20%5B%60Testing%20reference%60%5D%5BTesting%20Reference%5D%20for%20a%20detailed%20description.%0A%0ADespite%20this%20may%20work%20in%20the%20general%20case%2C%20some%20tests%20may%20need%20finer%20control%20over%20their%20configuration.%20For%20such%20reason%20Forge%20provides%20a%20way%20to%20specify%20per-test%20configs%20for%20invariant%20and%20fuzz%20testing%20scenarios.%20%0A%0AUsers%20can%20in-line%20test%20config%20statements%20directly%20in%20Solidity%20comments.%20This%20would%20affect%20the%20behavior%20of%20the%20%60forge%20test%60%20command%20for%20a%20specific%20test%20instance%2C%20as%20illustrated%20in%20the%20example%20below.%0A%0A%60%60%60solidity%0Acontract%20MyTest%20is%20Test%20%7B%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.runs%20%3D%20100%0A%20%20%2F%2F%2F%20forge-config%3A%20ci.fuzz.runs%20%3D%20500%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.show-logs%20%3D%20true%0A%20%20function%20test_SimpleFuzzTest(uint256%20x)%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0AWhat%20we%20are%20asking%20here%20is%20to%20run%20our%20fuzzer%20%60100%60%20and%20%60500%60%20times%20for%20the%20%60default%60%20and%20%60ci%60%20profiles%20respectively.%20The%20interesting%20fact%20is%20that%20this%20would%20override%20any%20fuzz%20%60runs%60%20setup%20existing%20at%20a%20global%20level.%20All%20other%20configs%20would%20be%20inherited%20from%20the%20global%20context%2C%20making%20this%20acting%20as%20a%20fallback%20for%20all%20possible%20configurations.%0A%0A%23%23%23%20Block%20comments%0AIn-line%20test%20configurations%20can%20also%20be%20expressed%20in%20block%20comments%2C%20as%20illustrated%20in%20the%20example.%0A%0A%60%60%60solidity%0Acontract%20MyTest%20is%20Test%20%7B%0A%20%20%2F**%0A%20%20%20*%20forge-config%3A%20default.fuzz.runs%20%3D%201024%0A%20%20%20*%20forge-config%3A%20default.fuzz.max-test-rejects%20%3D%20500%0A%20%20%20*%20forge-config%3A%20default.fuzz.show-logs%20%3D%20true%0A%20%20%20*%2F%0A%20%20function%20test_SimpleFuzzTest(uint256%20x)%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20In-line%20fuzz%20configs%0AUsers%20can%20specify%20the%20configs%20described%20in%20the%20table.%20Each%20statement%20must%20have%20a%20prefix%20of%20the%20form%20%60forge-config%3A%20%24%7BPROFILE%7D.fuzz.%60%0A%0A%7C%20Parameter%20%7C%20Type%20%7C%20Description%20%7C%0A%7C-%7C-%7C-%7C%0A%7C%60runs%60%7Cinteger%7CThe%20amount%20of%20fuzz%20runs%20to%20perform%20for%20this%20specific%20test%20case.%20%5B%60Reference%60%5D%5Btesting%5D.%7C%0A%7C%60max-test-rejects%60%7Cinteger%7CThe%20maximum%20number%20of%20combined%20inputs%20that%20may%20be%20rejected%20before%20the%20test%20as%20a%20whole%20aborts.%20%5B%60Reference%60%5D%5BMax%20test%20rejects%5D.%7C%0A%7C%60show-logs%60%7Cboolean%7C%20The%20flag%20indicates%20whether%20to%20display%20console%20logs%20in%20fuzz%20tests%20or%20not.%20Works%20when%20%60verbosity%20%3E%3D%202%60.%20%5B%60Reference%60%5D%5BFuzz%20show%20logs%5D.%20%7C%0A%0AFuzz%20config%20example%0A%60%60%60solidity%0Acontract%20MyFuzzTest%20is%20Test%20%7B%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.runs%20%3D%20100%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.max-test-rejects%20%3D%202%0A%20%20%2F%2F%2F%20forge-config%3A%20default.fuzz.show-logs%20%3D%20true%0A%20%20function%20test_InlineConfig(uint256%20x)%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20In-line%20invariant%20configs%0AUsers%20can%20specify%20the%20configs%20described%20in%20the%20table.%20Each%20statement%20must%20have%20a%20prefix%20of%20the%20form%20%60forge-config%3A%20%24%7BPROFILE%7D.invariant.%60%0A%0A%7C%20Parameter%20%7C%20Type%20%7C%20Description%20%7C%0A%7C-%7C-%7C-%7C%0A%7C%60runs%60%7Cinteger%7CThe%20amount%20of%20invariant%20runs%20to%20perform%20for%20this%20specific%20test%20case.%20%5B%60Reference%60%5D%5BInvariant%20runs%5D.%0A%7C%60depth%60%7Cinteger%7CThe%20number%20of%20calls%20executed%20to%20attempt%20to%20break%20invariant%20in%20one%20run.%20%5B%60Reference%60%5D%5BInvariant%20depth%5D.%0A%7C%60fail-on-revert%60%7Cboolean%7CFails%20the%20invariant%20fuzzing%20if%20a%20revert%20occurs.%20%5B%60Reference%60%5D%5BFail%20on%20revert%5D.%0A%7C%60call-override%60%7Cboolean%7COverrides%20unsafe%20external%20calls%20when%20running%20invariant%20test.%20%5B%60Reference%60%5D%5BInvariant%20call%20override%5D.%0A%0AInvariant%20config%20example%0A%60%60%60solidity%0Acontract%20MyInvariantTest%20is%20Test%20%7B%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.runs%20%3D%20100%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.depth%20%3D%202%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.fail-on-revert%20%3D%20false%0A%20%20%2F%2F%2F%20forge-config%3A%20default.invariant.call-override%20%3D%20true%0A%20%20function%20invariant_InlineConfig()%20public%20%7B%0A%20%20%20%20%2F%2F%20---%20snip%20---%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%0A%0A%0A%0A%5BTesting%20Reference%5D%3A%20.%2Ftesting.md%0A%5Btesting%5D%3A%20.%2Ftesting.md%23runs%0A%5BMax%20test%20rejects%5D%3A%20.%2Ftesting.md%23max_test_rejects%0A%5BFuzz%20show%20logs%5D%3A%20.%2Ftesting.md%23show_logs%0A%5BInvariant%20runs%5D%3A%20.%2Ftesting.md%23runs-1%0A%5BInvariant%20depth%5D%3A%20.%2Ftesting.md%23depth%0A%5BFail%20on%20revert%5D%3A%20.%2Ftesting.md%23fail_on_revert%0A%5BInvariant%20call%20override%5D%3A%20.%2Ftesting.md%23call_override",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./linter-lF5Q3BMN.js"),__vite__mapDeps([153,1])),path:"/config/reference/linter",type:"mdx",filePath:"config/reference/linter.mdx",content:"%23%23%20Linter%20Configuration%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20linter.%20These%20keys%20are%20set%20in%20the%20%60%5Blint%5D%60%20section.%0A%0A%23%23%23%23%23%20%60severity%60%0A%0A-%20%20Type%3A%20array%20of%20strings%0A-%20%20Default%3A%20all%20severities%20enabled%20(%60high%60%2C%20%60med%60%2C%20%60low%60%2C%20%60info%60%2C%20%60gas%60)%0A-%20%20Environment%3A%20%60FOUNDRY_LINT_SEVERITY%60%0A%0ASpecifies%20which%20lints%20to%20run%20based%20on%20severity.%20If%20omitted%2C%20all%20severities%20are%20checked.%0A%0A%23%23%23%23%23%20%60exclude_lints%60%0A%0A-%20%20Type%3A%20array%20of%20strings%0A-%20%20Default%3A%20%60%5B%5D%60%0A-%20%20Environment%3A%20%60FOUNDRY_LINT_EXCLUDE_LINTS%60%0A%0AList%20of%20lint%20IDs%20to%20exclude%20from%20checking%20(e.g.%2C%20%60%22mixed-case-function%22%60).%0A%0A%23%23%23%23%23%20%60ignore%60%0A%0A-%20%20Type%3A%20array%20of%20strings%20(patterns)%0A-%20%20Default%3A%20%60%5B%5D%60%0A-%20%20Environment%3A%20%60FOUNDRY_LINT_IGNORE%60%0A%0AList%20of%20files%20or%20patterns%20to%20ignore%20when%20running%20the%20linter.%20This%20is%20a%20comma-separated%20list%20of%20glob%20patterns.%0A%0A%23%23%20Inline%20Configuration%0A%0AThe%20linter%20also%20offers%20the%20ability%20to%20disable%20lints%20for%20specific%20sections%20of%20code%20using%20inline%20comment%20directives.%0AThis%20is%20useful%20when%20you%20need%20to%20suppress%20false%20positives%20or%20have%20valid%20reasons%20for%20code%20that%20would%20otherwise%20trigger%20a%20lint%20warning.%0A%0ATo%20disable%20lints%20using%20inline%20config%2C%20your%20comment%20must%20follow%20this%20format%3A%0A%60%60%60%0A%2F%2F%2F%20forge-lint%3A%20%3Cdirective%3E(%3Clint-ids%3E)%0A%60%60%60%0A%0AWhere%3A%0A-%20%60%3Cdirective%3E%60%20is%20one%20of%20the%20directives%20from%20the%20table%20below%0A-%20%60%3Clint-ids%3E%60%20is%20a%20comma-separated%20list%20of%20lint%20identifiers%2C%20or%20%60all%60%20to%20disable%20all%20lints%0A%0A%23%23%23%20Supported%20Inline%20Directives%0A%0A%7C%20Directive%20%7C%20Description%20%7C%20Scope%20%7C%0A%7C-----------%7C-------------%7C-------%7C%0A%7C%20%60disable-next-item%60%20%7C%20Disables%20lints%20for%20the%20next%20code%20item%20(contract%2C%20function%2C%20variable%2C%20struct%2C%20etc.)%20%7C%20Next%20item%20regardless%20of%20line%20count%20%7C%0A%7C%20%60disable-line%60%20%7C%20Disables%20lints%20for%20the%20current%20line%20%7C%20Current%20line%20only%20%7C%0A%7C%20%60disable-next-line%60%20%7C%20Disables%20lints%20for%20the%20next%20line%20%7C%20Next%20line%20only%20%7C%0A%7C%20%60disable-start%60%20%2F%20%60disable-end%60%20%7C%20Disables%20lints%20for%20all%20code%20between%20the%20start%20and%20end%20comments%20%7C%20Block%20of%20code%20between%20directives%20%7C%0A%0A%23%23%23%20Best%20Practices%0A%0A1.%20**Be%20Specific**%3A%20Always%20specify%20which%20lint(s)%20you're%20disabling%20rather%20than%20using%20%60all%60.%0A2.%20**Add%20Comments**%3A%20Explain%20why%20you're%20disabling%20the%20lint%20to%20help%20future%20maintainers.%0A3.%20**Minimize%20Scope**%3A%20Use%20the%20most%20targeted%20directive%20possible%20(e.g.%2C%20%60disable-line%60%20instead%20of%20%60disable-start%2Fend%60).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./linter-lF5Q3BMN.js"),__vite__mapDeps([153,1])),path:"/config/reference/linter.html",type:"mdx",filePath:"config/reference/linter.mdx",content:"%23%23%20Linter%20Configuration%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20linter.%20These%20keys%20are%20set%20in%20the%20%60%5Blint%5D%60%20section.%0A%0A%23%23%23%23%23%20%60severity%60%0A%0A-%20%20Type%3A%20array%20of%20strings%0A-%20%20Default%3A%20all%20severities%20enabled%20(%60high%60%2C%20%60med%60%2C%20%60low%60%2C%20%60info%60%2C%20%60gas%60)%0A-%20%20Environment%3A%20%60FOUNDRY_LINT_SEVERITY%60%0A%0ASpecifies%20which%20lints%20to%20run%20based%20on%20severity.%20If%20omitted%2C%20all%20severities%20are%20checked.%0A%0A%23%23%23%23%23%20%60exclude_lints%60%0A%0A-%20%20Type%3A%20array%20of%20strings%0A-%20%20Default%3A%20%60%5B%5D%60%0A-%20%20Environment%3A%20%60FOUNDRY_LINT_EXCLUDE_LINTS%60%0A%0AList%20of%20lint%20IDs%20to%20exclude%20from%20checking%20(e.g.%2C%20%60%22mixed-case-function%22%60).%0A%0A%23%23%23%23%23%20%60ignore%60%0A%0A-%20%20Type%3A%20array%20of%20strings%20(patterns)%0A-%20%20Default%3A%20%60%5B%5D%60%0A-%20%20Environment%3A%20%60FOUNDRY_LINT_IGNORE%60%0A%0AList%20of%20files%20or%20patterns%20to%20ignore%20when%20running%20the%20linter.%20This%20is%20a%20comma-separated%20list%20of%20glob%20patterns.%0A%0A%23%23%20Inline%20Configuration%0A%0AThe%20linter%20also%20offers%20the%20ability%20to%20disable%20lints%20for%20specific%20sections%20of%20code%20using%20inline%20comment%20directives.%0AThis%20is%20useful%20when%20you%20need%20to%20suppress%20false%20positives%20or%20have%20valid%20reasons%20for%20code%20that%20would%20otherwise%20trigger%20a%20lint%20warning.%0A%0ATo%20disable%20lints%20using%20inline%20config%2C%20your%20comment%20must%20follow%20this%20format%3A%0A%60%60%60%0A%2F%2F%2F%20forge-lint%3A%20%3Cdirective%3E(%3Clint-ids%3E)%0A%60%60%60%0A%0AWhere%3A%0A-%20%60%3Cdirective%3E%60%20is%20one%20of%20the%20directives%20from%20the%20table%20below%0A-%20%60%3Clint-ids%3E%60%20is%20a%20comma-separated%20list%20of%20lint%20identifiers%2C%20or%20%60all%60%20to%20disable%20all%20lints%0A%0A%23%23%23%20Supported%20Inline%20Directives%0A%0A%7C%20Directive%20%7C%20Description%20%7C%20Scope%20%7C%0A%7C-----------%7C-------------%7C-------%7C%0A%7C%20%60disable-next-item%60%20%7C%20Disables%20lints%20for%20the%20next%20code%20item%20(contract%2C%20function%2C%20variable%2C%20struct%2C%20etc.)%20%7C%20Next%20item%20regardless%20of%20line%20count%20%7C%0A%7C%20%60disable-line%60%20%7C%20Disables%20lints%20for%20the%20current%20line%20%7C%20Current%20line%20only%20%7C%0A%7C%20%60disable-next-line%60%20%7C%20Disables%20lints%20for%20the%20next%20line%20%7C%20Next%20line%20only%20%7C%0A%7C%20%60disable-start%60%20%2F%20%60disable-end%60%20%7C%20Disables%20lints%20for%20all%20code%20between%20the%20start%20and%20end%20comments%20%7C%20Block%20of%20code%20between%20directives%20%7C%0A%0A%23%23%23%20Best%20Practices%0A%0A1.%20**Be%20Specific**%3A%20Always%20specify%20which%20lint(s)%20you're%20disabling%20rather%20than%20using%20%60all%60.%0A2.%20**Add%20Comments**%3A%20Explain%20why%20you're%20disabling%20the%20lint%20to%20help%20future%20maintainers.%0A3.%20**Minimize%20Scope**%3A%20Use%20the%20most%20targeted%20directive%20possible%20(e.g.%2C%20%60disable-line%60%20instead%20of%20%60disable-start%2Fend%60).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BSe8whY6.js"),__vite__mapDeps([154,1])),path:"/config/reference/overview",type:"mdx",filePath:"config/reference/overview.mdx",content:"%23%23%20Config%20Overview%0A%0AFoundry's%20configuration%20system%20allows%20you%20to%20configure%20its%20tools.%0A%0A%23%23%23%20Profiles%0A%0AConfiguration%20can%20be%20arbitrarily%20namespaced%20into%20profiles.%20The%20default%20profile%20is%20named%20%60default%60%2C%20and%20all%20other%20profiles%20inherit%20values%20from%20this%20profile.%20Profiles%20are%20defined%20in%20the%20%60profile%60%20map.%0A%0ATo%20add%20a%20profile%20named%20%60local%60%2C%20you%20would%20add%3A%0A%0A%60%60%60toml%0A%5Bprofile.local%5D%0A%60%60%60%0A%0AYou%20can%20select%20the%20profile%20to%20use%20by%20setting%20the%20%60FOUNDRY_PROFILE%60%20environment%20variable.%0A%0A%23%23%23%20Global%20configuration%0A%0AYou%20can%20create%20a%20%60foundry.toml%60%20file%20in%20%60~%2F.foundry%60%20folder%20to%20configure%20Foundry%20globally.%0A%0A%23%23%23%20Environment%20variables%0A%0AConfiguration%20can%20be%20overridden%20with%20%60FOUNDRY_%60%20and%20%60DAPP_%60%20prefixed%20environment%20variables.%0A%0AExceptions%20are%3A%0A%0A-%20%60FOUNDRY_FFI%60%2C%20%60DAPP_FFI%60%2C%20%60DAPP_TEST_FFI%60%0A-%20%60FOUNDRY_PROFILE%60%0A-%20%60FOUNDRY_REMAPPINGS%60%2C%20%60DAPP_REMAPPINGS%60%0A-%20%60FOUNDRY_LIBRARIES%60%2C%20%60DAPP_LIBRARIES%60%0A-%20%60FOUNDRY_FS_PERMISSIONS%60%2C%20%60DAPP_FS_PERMISSIONS%60%2C%20%60DAPP_TEST_FS_PERMISSIONS%60%0A-%20%60DAPP_TEST_CACHE%60%0A-%20%60DAPP_TEST_FUZZ_RUNS%60%0A-%20%60DAPP_TEST_FUZZ_DEPTH%60%0A%0A%23%23%23%20Configuration%20format%0A%0AConfiguration%20files%20are%20written%20in%20the%20%5BTOML%20format%5D(https%3A%2F%2Ftoml.io)%2C%20with%20simple%20key-value%20pairs%20inside%20of%20sections.%0A%0AThis%20page%20describes%20each%20configuration%20key%20in%20detail.%20To%20see%20the%20default%20values%2C%20either%20refer%20to%20the%20specific%20key%20in%20this%20document%2C%20or%20see%20the%20%5Bdefault%20config%5D(%2Fconfig%2Freference%2Fdefault-config).%0A%0A%23%23%23%20Configuration%20keys%0A%0AThis%20section%20documents%20all%20configuration%20keys.%20All%20configuration%20keys%20must%20live%20under%20a%20profile%2C%20such%20as%20%60default%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BSe8whY6.js"),__vite__mapDeps([154,1])),path:"/config/reference/overview.html",type:"mdx",filePath:"config/reference/overview.mdx",content:"%23%23%20Config%20Overview%0A%0AFoundry's%20configuration%20system%20allows%20you%20to%20configure%20its%20tools.%0A%0A%23%23%23%20Profiles%0A%0AConfiguration%20can%20be%20arbitrarily%20namespaced%20into%20profiles.%20The%20default%20profile%20is%20named%20%60default%60%2C%20and%20all%20other%20profiles%20inherit%20values%20from%20this%20profile.%20Profiles%20are%20defined%20in%20the%20%60profile%60%20map.%0A%0ATo%20add%20a%20profile%20named%20%60local%60%2C%20you%20would%20add%3A%0A%0A%60%60%60toml%0A%5Bprofile.local%5D%0A%60%60%60%0A%0AYou%20can%20select%20the%20profile%20to%20use%20by%20setting%20the%20%60FOUNDRY_PROFILE%60%20environment%20variable.%0A%0A%23%23%23%20Global%20configuration%0A%0AYou%20can%20create%20a%20%60foundry.toml%60%20file%20in%20%60~%2F.foundry%60%20folder%20to%20configure%20Foundry%20globally.%0A%0A%23%23%23%20Environment%20variables%0A%0AConfiguration%20can%20be%20overridden%20with%20%60FOUNDRY_%60%20and%20%60DAPP_%60%20prefixed%20environment%20variables.%0A%0AExceptions%20are%3A%0A%0A-%20%60FOUNDRY_FFI%60%2C%20%60DAPP_FFI%60%2C%20%60DAPP_TEST_FFI%60%0A-%20%60FOUNDRY_PROFILE%60%0A-%20%60FOUNDRY_REMAPPINGS%60%2C%20%60DAPP_REMAPPINGS%60%0A-%20%60FOUNDRY_LIBRARIES%60%2C%20%60DAPP_LIBRARIES%60%0A-%20%60FOUNDRY_FS_PERMISSIONS%60%2C%20%60DAPP_FS_PERMISSIONS%60%2C%20%60DAPP_TEST_FS_PERMISSIONS%60%0A-%20%60DAPP_TEST_CACHE%60%0A-%20%60DAPP_TEST_FUZZ_RUNS%60%0A-%20%60DAPP_TEST_FUZZ_DEPTH%60%0A%0A%23%23%23%20Configuration%20format%0A%0AConfiguration%20files%20are%20written%20in%20the%20%5BTOML%20format%5D(https%3A%2F%2Ftoml.io)%2C%20with%20simple%20key-value%20pairs%20inside%20of%20sections.%0A%0AThis%20page%20describes%20each%20configuration%20key%20in%20detail.%20To%20see%20the%20default%20values%2C%20either%20refer%20to%20the%20specific%20key%20in%20this%20document%2C%20or%20see%20the%20%5Bdefault%20config%5D(%2Fconfig%2Freference%2Fdefault-config).%0A%0A%23%23%23%20Configuration%20keys%0A%0AThis%20section%20documents%20all%20configuration%20keys.%20All%20configuration%20keys%20must%20live%20under%20a%20profile%2C%20such%20as%20%60default%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-BP5jLkM0.js"),__vite__mapDeps([155,1])),path:"/config/reference/project",type:"mdx",filePath:"config/reference/project.mdx",content:"%23%23%20Project%0A%0AConfiguration%20related%20to%20the%20project%20in%20general.%0A%0A%23%23%23%23%23%20%60src%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20src%0A-%20Environment%3A%20%60FOUNDRY_SRC%60%20or%20%60DAPP_SRC%60%0A%0AThe%20path%20to%20the%20contract%20sources%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60test%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20test%0A-%20Environment%3A%20%60FOUNDRY_TEST%60%20or%20%60DAPP_TEST%60%0A%0AThe%20path%20to%20the%20test%20contract%20sources%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60script%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20script%0A-%20Environment%3A%20%60FOUNDRY_SCRIPT%60%20or%20%60DAPP_SCRIPT%60%0A%0AThe%20path%20to%20the%20script%20contract%20sources%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60out%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20out%0A-%20Environment%3A%20%60FOUNDRY_OUT%60%20or%20%60DAPP_OUT%60%0A%0AThe%20path%20to%20put%20contract%20artifacts%20in%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60libs%60%0A%0A-%20Type%3A%20array%20of%20strings%20(paths)%0A-%20Default%3A%20lib%0A-%20Environment%3A%20%60FOUNDRY_LIBS%60%20or%20%60DAPP_LIBS%60%0A%0AAn%20array%20of%20paths%20that%20contain%20libraries%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60cache%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_CACHE%60%20or%20%60DAPP_CACHE%60%0A%0AWhether%20or%20not%20to%20enable%20caching.%20If%20enabled%2C%20the%20result%20of%20compiling%20sources%2C%20tests%2C%20and%20dependencies%2C%20are%20cached%20in%20%60cache%60.%0A%0A%23%23%23%23%23%20%60cache_path%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20cache%0A-%20Environment%3A%20%60FOUNDRY_CACHE_PATH%60%20or%20%60DAPP_CACHE_PATH%60%0A%0AThe%20path%20to%20the%20cache%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60broadcast%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20broadcast%0A%0AThe%20path%20to%20the%20broadcast%20transaction%20logs%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60force%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FORCE%60%20or%20%60DAPP_FORCE%60%0A%0AWhether%20or%20not%20to%20perform%20a%20clean%20build%2C%20discarding%20the%20cache.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-BP5jLkM0.js"),__vite__mapDeps([155,1])),path:"/config/reference/project.html",type:"mdx",filePath:"config/reference/project.mdx",content:"%23%23%20Project%0A%0AConfiguration%20related%20to%20the%20project%20in%20general.%0A%0A%23%23%23%23%23%20%60src%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20src%0A-%20Environment%3A%20%60FOUNDRY_SRC%60%20or%20%60DAPP_SRC%60%0A%0AThe%20path%20to%20the%20contract%20sources%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60test%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20test%0A-%20Environment%3A%20%60FOUNDRY_TEST%60%20or%20%60DAPP_TEST%60%0A%0AThe%20path%20to%20the%20test%20contract%20sources%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60script%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20script%0A-%20Environment%3A%20%60FOUNDRY_SCRIPT%60%20or%20%60DAPP_SCRIPT%60%0A%0AThe%20path%20to%20the%20script%20contract%20sources%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60out%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20out%0A-%20Environment%3A%20%60FOUNDRY_OUT%60%20or%20%60DAPP_OUT%60%0A%0AThe%20path%20to%20put%20contract%20artifacts%20in%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60libs%60%0A%0A-%20Type%3A%20array%20of%20strings%20(paths)%0A-%20Default%3A%20lib%0A-%20Environment%3A%20%60FOUNDRY_LIBS%60%20or%20%60DAPP_LIBS%60%0A%0AAn%20array%20of%20paths%20that%20contain%20libraries%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60cache%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_CACHE%60%20or%20%60DAPP_CACHE%60%0A%0AWhether%20or%20not%20to%20enable%20caching.%20If%20enabled%2C%20the%20result%20of%20compiling%20sources%2C%20tests%2C%20and%20dependencies%2C%20are%20cached%20in%20%60cache%60.%0A%0A%23%23%23%23%23%20%60cache_path%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20cache%0A-%20Environment%3A%20%60FOUNDRY_CACHE_PATH%60%20or%20%60DAPP_CACHE_PATH%60%0A%0AThe%20path%20to%20the%20cache%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60broadcast%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20broadcast%0A%0AThe%20path%20to%20the%20broadcast%20transaction%20logs%2C%20relative%20to%20the%20root%20of%20the%20project.%0A%0A%23%23%23%23%23%20%60force%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FORCE%60%20or%20%60DAPP_FORCE%60%0A%0AWhether%20or%20not%20to%20perform%20a%20clean%20build%2C%20discarding%20the%20cache.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./solidity-compiler-CleE3q8O.js"),__vite__mapDeps([156,1])),path:"/config/reference/solidity-compiler",type:"mdx",filePath:"config/reference/solidity-compiler.mdx",content:"%23%23%20Solidity%20compiler%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Solidity%20compiler.%0A%0A**Sections**%0A%0A-%20%5BGeneral%5D(%23general)%0A-%20%5BOptimizer%5D(%23optimizer)%0A-%20%5BModel%20Checker%5D(%23model-checker)%0A-%20%5BCompilation%20Restrictions%5D(%23compilation-restrictions)%0A%0A%23%23%23%20General%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Solidity%20compiler.%0A%0A%23%23%23%23%23%20%60remappings%60%0A%0A-%20Type%3A%20array%20of%20strings%20(remappings)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_REMAPPINGS%60%20or%20%60DAPP_REMAPPINGS%60%0A%0AAn%20array%20of%20remappings%20in%20the%20following%20format%3A%20%60%3Cname%3E%3D%3Ctarget%3E%60.%0A%0AA%20remapping%20_remaps_%20Solidity%20imports%20to%20different%20directories.%20For%20example%2C%20the%20following%20remapping%0A%0A%60%60%60%0A%40openzeppelin%2F%3Dnode_modules%2F%40openzeppelin%2Fopenzeppelin-contracts%2F%0A%60%60%60%0A%0Awith%20an%20import%20like%0A%0A%60%60%60solidity%0Aimport%20%7BContext%7D%20from%20%22%40openzeppelin%2Fcontracts%2Futils%2FContext.sol%22%3B%0A%60%60%60%0A%0Abecomes%0A%0A%60%60%60solidity%0Aimport%20%7BContext%7D%20from%20%22node_modules%2F%40openzeppelin%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2FContext.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%23%23%20%60auto_detect_remappings%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_AUTO_DETECT_REMAPPINGS%60%20or%20%60DAPP_AUTO_DETECT_REMAPPINGS%60%0A%0AIf%20enabled%2C%20Foundry%20will%20automatically%20try%20auto-detect%20remappings%20by%20scanning%20the%20%60libs%60%20folder(s).%0A%0AIf%20set%20to%20%60false%60%2C%20only%20the%20remappings%20in%20%60foundry.toml%60%20and%20%60remappings.txt%60%20are%20used.%0A%0A%23%23%23%23%23%20%60allow_paths%60%0A%0A-%20Type%3A%20array%20of%20strings%20(paths)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_ALLOW_PATHS%60%20or%20%60DAPP_ALLOW_PATHS%60%0A%0ATells%20solc%20to%20allow%20reading%20source%20files%20from%20additional%20directories.%20This%20is%20mainly%20relevant%20for%20complex%20workspaces%20managed%20by%20%60pnpm%60%20or%20similar.%0A%0ASee%20also%20%5Bsolc%20allowed-paths%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html%23allowed-paths)%0A%0A%23%23%23%23%23%20%60include_paths%60%0A%0A-%20Type%3A%20array%20of%20strings%20(paths)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_INCLUDE_PATHS%60%20or%20%60DAPP_INCLUDE_PATHS%60%0A%0AMake%20an%20additional%20source%20directory%20available%20to%20the%20default%20import%20callback.%20Use%20this%20option%20if%20you%20want%20to%20import%20contracts%20whose%20location%20is%20not%20fixed%20in%20relation%20to%20your%20main%20source%20tree%2C%20e.g.%20third-party%20libraries%20installed%20using%20a%20package%20manager.%20Can%20be%20used%20multiple%20times.%20Can%20only%20be%20used%20if%20base%20path%20has%20a%20non-empty%20value.%0A%0ASee%20also%20%5Bsolc%20path%20resolution%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html)%0A%0A%23%23%23%23%23%20%60libraries%60%0A%0A-%20Type%3A%20array%20of%20strings%20(libraries)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_LIBRARIES%60%20or%20%60DAPP_LIBRARIES%60%0A%0AAn%20array%20of%20libraries%20to%20link%20against%20in%20the%20following%20format%3A%20%60%3Cfile%3E%3A%3Clib%3E%3A%3Caddress%3E%60%2C%20for%20example%3A%20%60src%2FMyLibrary.sol%3AMyLibrary%3A0xfD88CeE74f7D78697775aBDAE53f9Da1559728E4%60.%0A%0A%23%23%23%23%23%20%60solc_version%60%0A%0A-%20Type%3A%20string%20(semver)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_SOLC_VERSION%60%20or%20%60DAPP_SOLC_VERSION%60%0A%0AIf%20specified%2C%20overrides%20the%20auto-detection%20system%20(more%20below)%20and%20uses%20a%20single%20Solidity%20compiler%20version%20for%20the%20project.%0A%0AOnly%20strict%20versions%20are%20supported%20(i.e.%20%600.8.11%60%20is%20valid%2C%20but%20%60%5E0.8.0%60%20is%20not).%0A%0A%23%23%23%23%23%20%60auto_detect_solc%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_AUTO_DETECT_SOLC%60%20or%20%60DAPP_AUTO_DETECT_SOLC%60%0A%0AIf%20enabled%2C%20Foundry%20will%20automatically%20try%20to%20resolve%20appropriate%20Solidity%20compiler%20versions%20to%20compile%20your%20project.%0A%0AThis%20key%20is%20ignored%20if%20%60solc_version%60%20is%20set.%0A%0A%23%23%23%23%23%20%60offline%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_OFFLINE%60%20or%20%60DAPP_OFFLINE%60%0A%0AIf%20enabled%2C%20Foundry%20will%20not%20attempt%20to%20download%20any%20missing%20solc%20versions.%0A%0AIf%20both%20%60offline%60%20and%20%60auto-detect-solc%60%20are%20set%20to%20%60true%60%2C%20the%20required%20version(s)%20of%20solc%20will%20be%20auto%20detected%20but%20any%20missing%20versions%20will%20_not_%20be%20installed.%0A%0A%23%23%23%23%23%20%60ignored_warnings_from%60%0A%0A-%20Type%3A%20array%20of%20strings%20(file%20paths)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_IGNORED_WARNINGS_FROM%60%20OR%20%60DAPP_IGNORED_WARNINGS_FROM%60%0A%0AAn%20array%20of%20file%20paths%20from%20which%20warnings%20should%20be%20ignored%20during%20the%20compulation%20process.%20This%20is%20useful%20when%20you%20have%20a%20specific%0Adirectories%20of%20files%20that%20produce%20known%20warnings%20and%20you%20wish%20to%20suppress%20these%20warnings%20without%20affecting%20others.%0A%0AEach%20entry%20in%20the%20array%20should%20be%20a%20path%20to%20a%20directory%20or%20a%20specific%20file.%20For%20Example%3A%0A%0A%60ignored_warnings_from%20%3D%20%5B%22path%2Fto%2Fwarnings%2Ffile1.sol%22%2C%20%22path%2Fto%2Fwarnings%2Ffile2.sol%22%5D%60%0A%0AThis%20configuration%20will%20cause%20the%20compiler%20to%20ignore%20any%20warnings%20that%20originate%20from%20the%20specified%20paths.%0A%0A%23%23%23%23%23%20%60ignored_error_codes%60%0A%0A-%20Type%3A%20array%20of%20integers%2Fstrings%0A-%20Default%3A%20none%20for%20source%2C%20SPDX%20license%20identifiers%20and%20contract%20size%20for%20tests%0A-%20Environment%3A%20%60FOUNDRY_IGNORED_ERROR_CODES%60%20or%20%60DAPP_IGNORED_ERROR_CODES%60%0A%0AAn%20array%20of%20Solidity%20compiler%20error%20codes%20to%20ignore%20during%20build%2C%20such%20as%20warnings.%0A%0AValid%20values%20are%3A%0A%0A-%20%60license%60%3A%201878%0A-%20%60code-size%60%3A%205574%0A-%20%60func-mutability%60%3A%202018%0A-%20%60unused-var%60%3A%202072%0A-%20%60unused-param%60%3A%205667%0A-%20%60unused-return%60%3A%209302%0A-%20%60virtual-interfaces%60%3A%205815%0A-%20%60missing-receive-ether%60%3A%203628%0A-%20%60shadowing%60%3A%202519%0A-%20%60same-varname%60%3A%208760%0A-%20%60unnamed-return%60%3A%206321%0A-%20%60unreachable%60%3A%205740%0A-%20%60pragma-solidity%60%3A%203420%0A-%20%60constructor-visibility%60%3A%202462%0A-%20%60init-code-size%60%3A%203860%0A-%20%60transient-storage%60%3A%202394%0A-%20%60too-many-warnings%60%3A%204591%0A%0A%23%23%23%23%23%20%60deny_warnings%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_DENY_WARNINGS%60%20or%20%60DAPP_DENY_WARNINGS%60%0A%0AIf%20enabled%2C%20Foundry%20will%20treat%20Solidity%20compiler%20warnings%20as%20errors%2C%20stopping%20artifacts%20from%20being%20written%20to%20disk.%0A%0A%23%23%23%23%23%20%60evm_version%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20prague%0A-%20Environment%3A%20%60FOUNDRY_EVM_VERSION%60%20or%20%60DAPP_EVM_VERSION%60%0A%0AThe%20EVM%20version%20to%20use%20during%20tests.%20The%20value%20**must**%20be%20an%20EVM%20hardfork%20name%2C%20such%20as%20%60london%60%2C%20%60paris%60%2C%20%60shanghai%60%2C%20%60cancun%60%2C%20%60prague%60%2C%20etc.%0A%0AIf%20you%20are%20relying%20on%20a%20specific%20EVM%20version%20for%20compatibility%20reasons%20you%20are%20recommended%20to%20pin%20to%20it%20in%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0Aevm_version%20%3D%20%22paris%22%0A%60%60%60%0A%0A%23%23%23%23%23%20%60revert_strings%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20default%0A-%20Environment%3A%20%60FOUNDRY_REVERT_STRINGS%60%20or%20%60DAPP_REVERT_STRINGS%60%0A%0APossible%20values%20are%3A%0A%0A-%20%60default%60%20does%20not%20inject%20compiler-generated%20revert%20strings%20and%20keeps%20user-supplied%20ones.%0A-%20%60strip%60%20removes%20all%20revert%20strings%20(if%20possible%2C%20i.e.%20if%20literals%20are%20used)%20keeping%20side-effects.%0A-%20%60debug%60%20injects%20strings%20for%20compiler-generated%20internal%20reverts%2C%20implemented%20for%20ABI%20encoders%20V1%20and%20V2%20for%20now.%0A-%20%60verboseDebug%60%20even%20appends%20further%20information%20to%20user-supplied%20revert%20strings%20(not%20yet%20implemented).%0A%0A%23%23%23%23%23%20%60extra_output_files%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20none%0A-%20Environment%3A%20N%2FA%0A%0AExtra%20output%20from%20the%20Solidity%20compiler%20that%20should%20be%20written%20to%20files%20in%20the%20artifacts%20directory.%0A%0AValid%20values%20are%3A%0A%0A-%20%60metadata%60%3A%20Written%20as%20a%20%60metadata.json%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ir%60%3A%20Written%20as%20a%20%60.ir%60%20file%20in%20the%20artifacts%20directory%0A-%20%60irOptimized%60%3A%20Written%20as%20a%20%60.iropt%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ewasm%60%3A%20Written%20as%20a%20%60.ewasm%60%20file%20in%20the%20artifacts%20directory%0A-%20%60evm.assembly%60%3A%20Written%20as%20a%20%60.asm%60%20file%20in%20the%20artifacts%20directory%0A%0A%23%23%23%23%23%20%60extra_output%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20see%20below%0A-%20Environment%3A%20N%2FA%0A%0AExtra%20output%20to%20include%20in%20the%20contract's%20artifact.%0A%0AThe%20following%20values%20are%20always%20set%2C%20since%20they're%20required%20by%20Forge%3A%0A%0A%60%60%60toml%0Aextra_output%20%3D%20%5B%0A%20%20%22abi%22%2C%0A%20%20%22evm.bytecode%22%2C%0A%20%20%22evm.deployedBytecode%22%2C%0A%20%20%22evm.methodIdentifiers%22%2C%0A%5D%0A%60%60%60%0A%0AFor%20a%20list%20of%20valid%20values%2C%20see%20the%20%5BSolidity%20docs%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23input-description)%20(search%20for%3A%20_The%20available%20output%20types%20are%20as%20follows_).%0A%0A%23%23%23%23%23%20%60bytecode_hash%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20ipfs%0A-%20Environment%3A%20%60FOUNDRY_BYTECODE_HASH%60%20or%20%60DAPP_BYTECODE_HASH%60%0A%0ADetermines%20the%20hash%20method%20for%20the%20metadata%20hash%20that%20is%20appended%20to%20the%20bytecode.%0A%0AValid%20values%20are%3A%0A%0A-%20ipfs%20(default)%0A-%20bzzr1%0A-%20none%0A%0A%23%23%23%23%23%20%60sparse_mode%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_SPARSE_MODE%60%20or%20%60DAPP_SPARSE_MODE%60%0A%0AEnables%20%5Bsparse%20mode%5D(%2Fforge%2Freference%2Fforge-build%23sparse-mode-experimental)%20for%20builds.%0A%0A%23%23%23%20Optimizer%0A%0AConfiguration%20related%20to%20the%20Solidity%20optimizer.%0A%0A%23%23%23%23%23%20%60optimizer%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_OPTIMIZER%60%20or%20%60DAPP_OPTIMIZER%60%0A%0AWhether%20or%20not%20to%20enable%20the%20Solidity%20optimizer.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20Solidity%20optimizer%20is%20automatically%20enabled%20if%20%60optimizer_runs%60%20is%20set%20to%20a%20value%20greater%20than%200.%0A%0A%23%23%23%23%23%20%60optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20200%0A-%20Environment%3A%20%60FOUNDRY_OPTIMIZER_RUNS%60%20or%20%60DAPP_OPTIMIZER_RUNS%60%0A%0AThe%20number%20of%20runs%20specifies%20roughly%20how%20often%20each%20opcode%20of%20the%20deployed%20code%20will%20be%20executed%20across%20the%20life-time%20of%20the%20contract.%20This%20means%20it%20is%20a%20trade-off%20parameter%20between%20code%20size%20(deploy%20cost)%20and%20code%20execution%20cost%20(cost%20after%20deployment).%20A%20%60optimizer_runs%60%20parameter%20of%20%601%60%20will%20produce%20short%20but%20expensive%20code.%20In%20contrast%2C%20a%20larger%20%60optimizer_runs%60%20parameter%20will%20produce%20longer%20but%20more%20gas%20efficient%20code.%20The%20maximum%20value%20of%20the%20parameter%20is%20%602**32-1%60.%0A%0AA%20common%20misconception%20is%20that%20this%20parameter%20specifies%20the%20number%20of%20iterations%20of%20the%20optimizer.%20This%20is%20not%20true%3A%20The%20optimizer%20will%20always%20run%20as%20many%20times%20as%20it%20can%20still%20improve%20the%20code.%0A%0A%23%23%23%23%23%20%60via_ir%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_VIA_IR%60%20or%20%60DAPP_VIA_IR%60%0A%0AIf%20set%20to%20true%2C%20changes%20compilation%20pipeline%20to%20go%20through%20the%20new%20IR%20optimizer.%0A%0A%23%23%23%23%23%20%60use_literal_content%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A%0AIf%20set%20to%20true%2C%20changes%20compilation%20to%20only%20use%20literal%20content%20and%20not%20URLs.%0A%0A%23%23%23%23%23%20%60%5Boptimizer_details%5D%60%0A%0AThe%20optimizer%20details%20section%20is%20used%20to%20tweak%20how%20the%20Solidity%20optimizer%20behaves.%20There%20are%20several%20configurable%20values%20in%20this%20section%20(each%20of%20them%20are%20booleans)%3A%0A%0A-%20%60peephole%60%0A-%20%60inliner%60%0A-%20%60jumpdestRemover%60%0A-%20%60orderLiterals%60%0A-%20%60deduplicate%60%0A-%20%60cse%60%0A-%20%60constantOptimizer%60%0A-%20%60yul%60%0A%0ARefer%20to%20the%20Solidity%20%5Bcompiler%20input%20description%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%20for%20the%20default%20values.%0A%0A%23%23%23%23%23%20%60%5Boptimizer_details.yul_details%5D%60%0A%0AThe%20Yul%20details%20subsection%20of%20the%20optimizer%20details%20section%20is%20used%20to%20tweak%20how%20the%20new%20IR%20optimizer%20behaves.%20There%20are%20two%20configuration%20values%3A%0A%0A-%20%60stack_allocation%60%3A%20Tries%20to%20improve%20the%20allocation%20of%20stack%20slots%20by%20freeing%20them%20up%20earlier.%0A-%20%60optimizer_steps%60%3A%20Selects%20the%20optimizer%20steps%20to%20be%20applied.%0A%0ARefer%20to%20the%20Solidity%20%5Bcompiler%20input%20description%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%20for%20the%20default%20values.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20If%20you%20encounter%20compiler%20errors%20when%20using%20%60via_ir%60%2C%20explicitly%20enable%20the%20legacy%20%60optimizer%60%20and%20leave%20%60optimizer_steps%60%20as%20an%20empty%20string%0A%0A%23%23%23%20Model%20checker%0A%0AThe%20Solidity%20model%20checker%20is%20a%20built-in%20opt-in%20module%20that%20is%20available%20in%20Solidity%20compilers%20for%20OSX%20and%20Linux.%20Learn%20more%20about%20the%20model%20checker%20in%20the%20%5BSolidity%20compiler%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23tutorial)%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20The%20model%20checker%20requires%20%60z3%60%20version%204.8.8%20or%204.8.14%20on%20Linux.%0A%0AThe%20model%20checker%20settings%20are%20configured%20in%20the%20%60%5Bmodel_checker%5D%60%20section%20of%20the%20configuration.%0A%0AThe%20model%20checker%20will%20run%20when%20%60forge%20build%60%20is%20invoked%2C%20and%20any%20findings%20will%20show%20up%20as%20warnings.%0A%0AThese%20are%20the%20recommended%20settings%20when%20using%20the%20model%20checker%3A%0A%0A%60%60%60toml%0A%5Bprofile.default.model_checker%5D%0Acontracts%20%3D%20%7B'%2Fpath%2Fto%2Fproject%2Fsrc%2FContract.sol'%20%3D%20%5B'Contract'%5D%7D%0Aengine%20%3D%20'chc'%0Atimeout%20%3D%2010000%0Atargets%20%3D%20%5B'assert'%5D%0A%60%60%60%0A%0ASetting%20which%20contract%20should%20be%20verified%20is%20extremely%20important%2C%20otherwise%20all%20available%20contracts%20will%20be%20verified%20which%20may%20take%20a%20long%20time.%0A%0AThe%20recommended%20engine%20is%20%60chc%60%2C%20but%20%60bmc%60%20and%20%60all%60%20(which%20runs%20both)%20are%20also%20accepted.%0A%0AIt%20is%20also%20important%20to%20set%20a%20proper%20timeout%20(given%20in%20milliseconds)%2C%20since%20the%20default%20time%20given%20to%20the%20underlying%20solver%20may%20not%20be%20enough.%0A%0AIf%20no%20verification%20targets%20are%20given%2C%20only%20assertions%20will%20be%20checked.%0A%0A%23%23%23%23%23%20%60%5Bmodel_checker%5D%60%0A%0AThe%20following%20keys%20are%20available%20in%20the%20model%20checker%20section.%0A%0A%23%23%23%23%23%23%20%60model_checker.contracts%60%0A%0A-%20Type%3A%20table%0A-%20Default%3A%20all%0A-%20Environment%3A%20N%2FA%0A%0ASpecifies%20what%20contracts%20the%20model%20checker%20will%20analyze.%0A%0AThe%20key%20of%20the%20table%20is%20the%20path%20to%20a%20source%20file%2C%20and%20the%20value%20is%20an%20array%20of%20contract%20names%20to%20check.%0A%0AFor%20example%3A%0A%0A%60%60%60toml%0A%5Bprofile.default.model_checker%5D%0Acontracts%20%3D%20%7B%20%22src%2FMyContracts.sol%22%20%3D%20%5B%22ContractA%22%2C%20%22ContractB%22%5D%20%7D%0A%60%60%60%0A%0A%23%23%23%23%23%23%20%60model_checker.div_mod_with_slacks%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20N%2FA%0A%0ASets%20how%20division%20and%20modulo%20operations%20should%20be%20encoded.%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23division-and-modulo-with-slack-variables)%20for%20more%20information.%0A%0A%23%23%23%23%23%23%20%60model_checker.engine%60%0A%0A-%20Type%3A%20string%20(see%20below)%0A-%20Default%3A%20all%0A-%20Environment%3A%20N%2FA%0A%0ASpecifies%20the%20model%20checker%20engine%20to%20run.%20Valid%20values%20are%3A%0A%0A-%20%60chc%60%3A%20The%20constrained%20horn%20clauses%20engine%0A-%20%60bmc%60%3A%20The%20bounded%20model%20checker%20engine%0A-%20%60all%60%3A%20Runs%20both%20engines%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23model-checking-engines)%20for%20more%20information%20on%20the%20engines.%0A%0A%23%23%23%23%23%23%20%60model_checker.invariants%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20N%2FA%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20model%20checker%20invariants.%20Valid%20values%20are%3A%0A%0A-%20%60contract%60%3A%20Contract%20Invariants%0A-%20%60reentrancy%60%3A%20Reentrancy%20Properties%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23reported-inferred-inductive-invariants)%20for%20more%20information%20on%20the%20invariants.%0A%0A%23%23%23%23%23%23%20%60model_checker.show_unproved%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20N%2FA%0A%0AWhether%20or%20not%20to%20output%20all%20unproved%20targets.%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23unproved-targets)%20for%20more%20information.%0A%0A%23%23%23%23%23%23%20%60model_checker.solvers%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20N%2FA%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20model%20checker%20solvers.%20Valid%20values%20are%3A%0A%0A-%20%60cvc4%60%0A-%20%60eld%60%3A%20introduced%20in%20v0.8.18%0A-%20%60smtlib2%60%0A-%20%60z3%60%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23smt-and-horn-solvers)%20for%20more%20information.%0A%0A%23%23%23%23%23%23%20%60model_checker.timeout%60%0A%0A-%20Type%3A%20number%20(milliseconds)%0A-%20Default%3A%20N%2FA%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20timeout%20for%20the%20underlying%20model%20checker%20engines%20(in%20milliseconds).%0A%0A%23%23%23%23%23%23%20%60model_checker.targets%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20assert%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20model%20checker%20targets.%20Valid%20values%20are%3A%0A%0A-%20%60assert%60%3A%20Assertions%0A-%20%60underflow%60%3A%20Arithmetic%20underflow%0A-%20%60overflow%60%3A%20Arithmetic%20overflow%0A-%20%60divByZero%60%3A%20Division%20by%20zero%0A-%20%60constantCondition%60%3A%20Trivial%20conditions%20and%20unreachable%20code%0A-%20%60popEmptyArray%60%3A%20Popping%20an%20empty%20array%0A-%20%60outOfBounds%60%3A%20Out%20of%20bounds%20array%2Ffixed%20bytes%20index%20access%0A-%20%60default%60%3A%20All%20of%20the%20above%20(note%3A%20not%20the%20default%20for%20Forge)%0A%0A%23%23%23%20Compilation%20Restrictions%0A%0ACompilation%20restrictions%20allows%20configuration%20of%20how%20individual%20files%20or%20directories%20within%20projects%20are%20compiled.%0A%0A%3E%20For%20a%20complex%20configuration%20of%20compiler%20profiles%20and%20compiler%20restrictions%20please%20refer%20to%20Uniswap%20%5Bcontracts%20monorepo%5D(https%3A%2F%2Fgithub.com%2FUniswap%2Fcontracts%2Fblob%2F4d80a9cfed9b920b83a394b168a95319606a0b73%2Ffoundry.toml%23L27-L72).%0A%0AFor%20example%2C%20with%20configuration%20below%2C%20%60Counter.sol%60%20contract%20under%20%60src%60%20is%20compiled%20with%20%60via-ir%60%20option%20enabled%20while%20all%20other%20contracts%20(including%20tests)%20are%20compiled%20with%20the%20default%20profile.%0A%0A%60%60%60toml%0A%23%20add%20via_ir%20profile%0Aadditional_compiler_profiles%20%3D%20%5B%20%7B%20name%20%3D%20%22via-ir%22%2C%20via_ir%20%3D%20true%20%7D%20%5D%0A%0A%23%20enforce%20compiling%20tests%20without%20via_ir%20and%20only%20some%20heavy%20contract%20with%20via_ir%0A%23%20note%3A%20it%20will%20only%20work%20if%20tests%20are%20using%20vm.deployCode%20to%20deploy%20contract%0Acompilation_restrictions%20%3D%20%5B%0A%20%20%20%20%7B%20paths%20%3D%20%22test%2F**%22%2C%20via_ir%20%3D%20false%20%7D%2C%0A%20%20%20%20%7B%20paths%20%3D%20%22src%2FCounter.sol%22%2C%20via_ir%20%3D%20true%20%7D%2C%0A%5D%0A%60%60%60%0A%0AWe%20can%20configure%20how%20individual%20files%20or%20directories%20are%20compiled%20by%20specifying%20the%20%60compilation_restrictions%60%20configuration%20(which%20applies%20to%20sources%20importing%20the%20restricted%20file%20as%20well).%20%20%0AOnce%20we%20have%20a%20set%20of%20restrictions%20we%20need%20to%20construct%20settings%20objects%20to%20satisfy%20them.%20This%20is%20done%20by%20adding%20%60additional_compiler_profiles%60%2C%20which%20is%20a%20mapping%20from%20profile%20name%20to%20settings%20overrides.%0A%0AIn%20the%20example%20above%2C%20we%20added%20a%20single%20profile%20named%20%60via-ir%60%20which%20uses%20default%20compilation%20settings%20but%20enables%20%60via_ir%60%20option%2C%20making%20it%20possible%20to%20compile%20the%20%60Counter.sol%60%20contract%20with%20%60via_ir%60%2C%20while%20all%20other%20contracts%20(including%20tests)%20with%20the%20default%20profile.%20%20%0AWhen%20choosing%20compiler%20profile%2C%20first%20profile%20(starting%20with%20default%20one)%20satisfying%20restrictions%20of%20the%20source%20file%20and%20all%20of%20its%20imports%20will%20be%20used.%0A%0A%3E%20If%20the%20same%20source%20file%20is%20compiled%20with%20several%20profiles%2C%20then%20an%20artifact%20is%20generated%20for%20each%20profile%20-%20if%20%60Counter%60%20is%20compiled%20with%20default%20and%20%60v1%60%20profile%2C%20%60Counter.json%60%20and%20%60Counter.v1.json%60%20artifacts%20are%20created.%0A%0A%23%23%23%23%20Additional%20compiler%20settings%3A%0A%0A%60%5Badditional_compiler_profiles%5D%60%0A%0A-%20Type%3A%20array%20of%20additional%20compiler%20profiles%0A%0AConfigures%20a%20mapping%20from%20profile%20name%20to%20settings%20overrides.%0A%0AFor%20example%2C%20an%20additional%20%60via-ir%60%20compiler%20profile%20that%20changes%20compilation%20pipeline%20to%20go%20through%20the%20new%20IR%20optimizer%20can%20be%20defined%20as%3A%0A%0A%60%60%60toml%0Aadditional_compiler_profiles%20%3D%20%5B%20%7B%20name%20%3D%20%22via-ir%22%2C%20via_ir%20%3D%20true%20%7D%20%5D%0A%60%60%60%0A%0AThere%20are%20several%20configurable%20values%20for%20a%20compiler%20profile%3A%0A%0A-%20%60name%60%0A-%20%60via_ir%60%0A-%20%60evm_version%60%0A-%20%60optimizer%60%0A-%20%60optimizer_runs%60%0A-%20%60bytecode_hash%60%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.name%60%0A%0A-%20Type%3A%20string%0A%0AAdditional%20compiler%20profile%20name.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.via_ir%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A%0AAdditional%20compiler%20profile%20%5Bvia_ir%5D(%23via_ir)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.evm_version%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20prague%0A%0AAdditional%20compiler%20profile%20%5Bevm_version%5D(%23evm_version)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.optimizer%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A%0AAdditional%20compiler%20profile%20%5Boptimizer%5D(%23optimizer)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20200%0A%0AAdditional%20compiler%20profile%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.bytecode_hash%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20ipfs%0A%0AAdditional%20compiler%20profile%20%5Bbytecode_hash%5D(%23bytecode_hash)%20setting.%0A%0A%23%23%23%23%20Compilation%20restrictions%20settings%3A%0A%0A%23%23%23%23%20%60%5Bcompilation_restrictions%5D%60%0A%0A-%20Type%3A%20array%20of%20compilation%20restrictions%20settings%0A%0A%23%23%23%23%23%20%60compilation_restriction.paths%60%0A%0A-%20Type%3A%20regex%0A%0AOnly%20applies%20compilation%20restrictions%20on%20files%20matching%20given%20paths.%0A%0AFor%20example%3A%0A%0A-%20%60src%2Fcontracts%2FCounter.sol%60%20-%20apply%20restrictions%20for%20specific%20contract%0A-%20%60src%2Fcontracts%2F%7BCounter%2CCounterFactory%7D.sol%60%20-%20apply%20restrictions%20for%20multiple%20contracts%2C%20by%20name%0A-%20%60src%2Fv1%2F**%60%20or%20%60src%2Fv3%2F**%2Flibraries%2F**%60%20-%20apply%20restrictions%20for%20all%20contracts%20in%20matching%20source%20path%0A%0AThere%20are%20several%20configurable%20values%20for%20an%20compilation%20restriction%3A%0A%0A-%20%60version%60%0A-%20%60via_ir%60%0A-%20%60bytecode_hash%60%0A-%20%60optimizer_runs%60%0A-%20%60min_optimizer_runs%60%0A-%20%60max_optimizer_runs%60%0A-%20%60evm_version%60%0A-%20%60min_evm_version%60%0A-%20%60max_evm_version%60%0A%0A%23%23%23%23%23%20%60compilation_restriction.version%60%0A%0A-%20Type%3A%20string%20(semver)%0A%0ARestrict%20compilation%20for%20specific%20%5Bsolc_version%5D(%23solc_version).%0A%0A%23%23%23%23%23%20%60compilation_restriction.via_ir%60%0A%0A-%20Type%3A%20boolean%0A%0ARestrict%20compilation%20for%20specific%20%5Bvia_ir%5D(%23via_ir)%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.bytecode_hash%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20matching%20provided%20bytecode%20hash%20method.%0A%0A%23%23%23%23%23%20%60compilation_restriction.optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A%0ARestrict%20compilation%20for%20specific%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%20Conflicts%20with%20%60min_optimizer_runs%60%20and%20%60max_optimizer_runs%60%20settings.%0A%0A%23%23%23%23%23%20%60compilation_restriction.min_optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A%0ARestrict%20compilation%20for%20min%20of%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%20Conflicts%20with%20%60optimizer_runs%60%20setting%2C%20requires%20%60max_optimizer_runs%60%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.max_optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A%0ARestrict%20compilation%20for%20max%20of%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%20Conflicts%20with%20%60optimizer_runs%60%20setting%2C%20requires%20%60min_optimizer_runs%60%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.evm_version%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20for%20specific%20%5Bevm_version%5D(%23evm_version)%20setting.%20Conflicts%20with%20%60min_evm_version%60%20and%20%60max_evm_version%60%20settings.%0A%0A%23%23%23%23%23%20%60compilation_restriction.min_evm_version%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20for%20a%20min%20version%20of%20%5Bevm_version%5D(%23evm_version)%20setting.%20Conflicts%20with%20%60evm_version%60%20setting%2C%20requires%20%60max_evm_version%60%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.max_evm_version%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20for%20a%20max%20version%20of%20%5Bevm_version%5D(%23evm_version)%20setting.%20Conflicts%20with%20%60evm_version%60%20setting%2C%20requires%20%60min_evm_version%60%20setting.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./solidity-compiler-CleE3q8O.js"),__vite__mapDeps([156,1])),path:"/config/reference/solidity-compiler.html",type:"mdx",filePath:"config/reference/solidity-compiler.mdx",content:"%23%23%20Solidity%20compiler%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Solidity%20compiler.%0A%0A**Sections**%0A%0A-%20%5BGeneral%5D(%23general)%0A-%20%5BOptimizer%5D(%23optimizer)%0A-%20%5BModel%20Checker%5D(%23model-checker)%0A-%20%5BCompilation%20Restrictions%5D(%23compilation-restrictions)%0A%0A%23%23%23%20General%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20the%20Solidity%20compiler.%0A%0A%23%23%23%23%23%20%60remappings%60%0A%0A-%20Type%3A%20array%20of%20strings%20(remappings)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_REMAPPINGS%60%20or%20%60DAPP_REMAPPINGS%60%0A%0AAn%20array%20of%20remappings%20in%20the%20following%20format%3A%20%60%3Cname%3E%3D%3Ctarget%3E%60.%0A%0AA%20remapping%20_remaps_%20Solidity%20imports%20to%20different%20directories.%20For%20example%2C%20the%20following%20remapping%0A%0A%60%60%60%0A%40openzeppelin%2F%3Dnode_modules%2F%40openzeppelin%2Fopenzeppelin-contracts%2F%0A%60%60%60%0A%0Awith%20an%20import%20like%0A%0A%60%60%60solidity%0Aimport%20%7BContext%7D%20from%20%22%40openzeppelin%2Fcontracts%2Futils%2FContext.sol%22%3B%0A%60%60%60%0A%0Abecomes%0A%0A%60%60%60solidity%0Aimport%20%7BContext%7D%20from%20%22node_modules%2F%40openzeppelin%2Fopenzeppelin-contracts%2Fcontracts%2Futils%2FContext.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%23%23%20%60auto_detect_remappings%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_AUTO_DETECT_REMAPPINGS%60%20or%20%60DAPP_AUTO_DETECT_REMAPPINGS%60%0A%0AIf%20enabled%2C%20Foundry%20will%20automatically%20try%20auto-detect%20remappings%20by%20scanning%20the%20%60libs%60%20folder(s).%0A%0AIf%20set%20to%20%60false%60%2C%20only%20the%20remappings%20in%20%60foundry.toml%60%20and%20%60remappings.txt%60%20are%20used.%0A%0A%23%23%23%23%23%20%60allow_paths%60%0A%0A-%20Type%3A%20array%20of%20strings%20(paths)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_ALLOW_PATHS%60%20or%20%60DAPP_ALLOW_PATHS%60%0A%0ATells%20solc%20to%20allow%20reading%20source%20files%20from%20additional%20directories.%20This%20is%20mainly%20relevant%20for%20complex%20workspaces%20managed%20by%20%60pnpm%60%20or%20similar.%0A%0ASee%20also%20%5Bsolc%20allowed-paths%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html%23allowed-paths)%0A%0A%23%23%23%23%23%20%60include_paths%60%0A%0A-%20Type%3A%20array%20of%20strings%20(paths)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_INCLUDE_PATHS%60%20or%20%60DAPP_INCLUDE_PATHS%60%0A%0AMake%20an%20additional%20source%20directory%20available%20to%20the%20default%20import%20callback.%20Use%20this%20option%20if%20you%20want%20to%20import%20contracts%20whose%20location%20is%20not%20fixed%20in%20relation%20to%20your%20main%20source%20tree%2C%20e.g.%20third-party%20libraries%20installed%20using%20a%20package%20manager.%20Can%20be%20used%20multiple%20times.%20Can%20only%20be%20used%20if%20base%20path%20has%20a%20non-empty%20value.%0A%0ASee%20also%20%5Bsolc%20path%20resolution%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html)%0A%0A%23%23%23%23%23%20%60libraries%60%0A%0A-%20Type%3A%20array%20of%20strings%20(libraries)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_LIBRARIES%60%20or%20%60DAPP_LIBRARIES%60%0A%0AAn%20array%20of%20libraries%20to%20link%20against%20in%20the%20following%20format%3A%20%60%3Cfile%3E%3A%3Clib%3E%3A%3Caddress%3E%60%2C%20for%20example%3A%20%60src%2FMyLibrary.sol%3AMyLibrary%3A0xfD88CeE74f7D78697775aBDAE53f9Da1559728E4%60.%0A%0A%23%23%23%23%23%20%60solc_version%60%0A%0A-%20Type%3A%20string%20(semver)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_SOLC_VERSION%60%20or%20%60DAPP_SOLC_VERSION%60%0A%0AIf%20specified%2C%20overrides%20the%20auto-detection%20system%20(more%20below)%20and%20uses%20a%20single%20Solidity%20compiler%20version%20for%20the%20project.%0A%0AOnly%20strict%20versions%20are%20supported%20(i.e.%20%600.8.11%60%20is%20valid%2C%20but%20%60%5E0.8.0%60%20is%20not).%0A%0A%23%23%23%23%23%20%60auto_detect_solc%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_AUTO_DETECT_SOLC%60%20or%20%60DAPP_AUTO_DETECT_SOLC%60%0A%0AIf%20enabled%2C%20Foundry%20will%20automatically%20try%20to%20resolve%20appropriate%20Solidity%20compiler%20versions%20to%20compile%20your%20project.%0A%0AThis%20key%20is%20ignored%20if%20%60solc_version%60%20is%20set.%0A%0A%23%23%23%23%23%20%60offline%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_OFFLINE%60%20or%20%60DAPP_OFFLINE%60%0A%0AIf%20enabled%2C%20Foundry%20will%20not%20attempt%20to%20download%20any%20missing%20solc%20versions.%0A%0AIf%20both%20%60offline%60%20and%20%60auto-detect-solc%60%20are%20set%20to%20%60true%60%2C%20the%20required%20version(s)%20of%20solc%20will%20be%20auto%20detected%20but%20any%20missing%20versions%20will%20_not_%20be%20installed.%0A%0A%23%23%23%23%23%20%60ignored_warnings_from%60%0A%0A-%20Type%3A%20array%20of%20strings%20(file%20paths)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_IGNORED_WARNINGS_FROM%60%20OR%20%60DAPP_IGNORED_WARNINGS_FROM%60%0A%0AAn%20array%20of%20file%20paths%20from%20which%20warnings%20should%20be%20ignored%20during%20the%20compulation%20process.%20This%20is%20useful%20when%20you%20have%20a%20specific%0Adirectories%20of%20files%20that%20produce%20known%20warnings%20and%20you%20wish%20to%20suppress%20these%20warnings%20without%20affecting%20others.%0A%0AEach%20entry%20in%20the%20array%20should%20be%20a%20path%20to%20a%20directory%20or%20a%20specific%20file.%20For%20Example%3A%0A%0A%60ignored_warnings_from%20%3D%20%5B%22path%2Fto%2Fwarnings%2Ffile1.sol%22%2C%20%22path%2Fto%2Fwarnings%2Ffile2.sol%22%5D%60%0A%0AThis%20configuration%20will%20cause%20the%20compiler%20to%20ignore%20any%20warnings%20that%20originate%20from%20the%20specified%20paths.%0A%0A%23%23%23%23%23%20%60ignored_error_codes%60%0A%0A-%20Type%3A%20array%20of%20integers%2Fstrings%0A-%20Default%3A%20none%20for%20source%2C%20SPDX%20license%20identifiers%20and%20contract%20size%20for%20tests%0A-%20Environment%3A%20%60FOUNDRY_IGNORED_ERROR_CODES%60%20or%20%60DAPP_IGNORED_ERROR_CODES%60%0A%0AAn%20array%20of%20Solidity%20compiler%20error%20codes%20to%20ignore%20during%20build%2C%20such%20as%20warnings.%0A%0AValid%20values%20are%3A%0A%0A-%20%60license%60%3A%201878%0A-%20%60code-size%60%3A%205574%0A-%20%60func-mutability%60%3A%202018%0A-%20%60unused-var%60%3A%202072%0A-%20%60unused-param%60%3A%205667%0A-%20%60unused-return%60%3A%209302%0A-%20%60virtual-interfaces%60%3A%205815%0A-%20%60missing-receive-ether%60%3A%203628%0A-%20%60shadowing%60%3A%202519%0A-%20%60same-varname%60%3A%208760%0A-%20%60unnamed-return%60%3A%206321%0A-%20%60unreachable%60%3A%205740%0A-%20%60pragma-solidity%60%3A%203420%0A-%20%60constructor-visibility%60%3A%202462%0A-%20%60init-code-size%60%3A%203860%0A-%20%60transient-storage%60%3A%202394%0A-%20%60too-many-warnings%60%3A%204591%0A%0A%23%23%23%23%23%20%60deny_warnings%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_DENY_WARNINGS%60%20or%20%60DAPP_DENY_WARNINGS%60%0A%0AIf%20enabled%2C%20Foundry%20will%20treat%20Solidity%20compiler%20warnings%20as%20errors%2C%20stopping%20artifacts%20from%20being%20written%20to%20disk.%0A%0A%23%23%23%23%23%20%60evm_version%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20prague%0A-%20Environment%3A%20%60FOUNDRY_EVM_VERSION%60%20or%20%60DAPP_EVM_VERSION%60%0A%0AThe%20EVM%20version%20to%20use%20during%20tests.%20The%20value%20**must**%20be%20an%20EVM%20hardfork%20name%2C%20such%20as%20%60london%60%2C%20%60paris%60%2C%20%60shanghai%60%2C%20%60cancun%60%2C%20%60prague%60%2C%20etc.%0A%0AIf%20you%20are%20relying%20on%20a%20specific%20EVM%20version%20for%20compatibility%20reasons%20you%20are%20recommended%20to%20pin%20to%20it%20in%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0Aevm_version%20%3D%20%22paris%22%0A%60%60%60%0A%0A%23%23%23%23%23%20%60revert_strings%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20default%0A-%20Environment%3A%20%60FOUNDRY_REVERT_STRINGS%60%20or%20%60DAPP_REVERT_STRINGS%60%0A%0APossible%20values%20are%3A%0A%0A-%20%60default%60%20does%20not%20inject%20compiler-generated%20revert%20strings%20and%20keeps%20user-supplied%20ones.%0A-%20%60strip%60%20removes%20all%20revert%20strings%20(if%20possible%2C%20i.e.%20if%20literals%20are%20used)%20keeping%20side-effects.%0A-%20%60debug%60%20injects%20strings%20for%20compiler-generated%20internal%20reverts%2C%20implemented%20for%20ABI%20encoders%20V1%20and%20V2%20for%20now.%0A-%20%60verboseDebug%60%20even%20appends%20further%20information%20to%20user-supplied%20revert%20strings%20(not%20yet%20implemented).%0A%0A%23%23%23%23%23%20%60extra_output_files%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20none%0A-%20Environment%3A%20N%2FA%0A%0AExtra%20output%20from%20the%20Solidity%20compiler%20that%20should%20be%20written%20to%20files%20in%20the%20artifacts%20directory.%0A%0AValid%20values%20are%3A%0A%0A-%20%60metadata%60%3A%20Written%20as%20a%20%60metadata.json%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ir%60%3A%20Written%20as%20a%20%60.ir%60%20file%20in%20the%20artifacts%20directory%0A-%20%60irOptimized%60%3A%20Written%20as%20a%20%60.iropt%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ewasm%60%3A%20Written%20as%20a%20%60.ewasm%60%20file%20in%20the%20artifacts%20directory%0A-%20%60evm.assembly%60%3A%20Written%20as%20a%20%60.asm%60%20file%20in%20the%20artifacts%20directory%0A%0A%23%23%23%23%23%20%60extra_output%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20see%20below%0A-%20Environment%3A%20N%2FA%0A%0AExtra%20output%20to%20include%20in%20the%20contract's%20artifact.%0A%0AThe%20following%20values%20are%20always%20set%2C%20since%20they're%20required%20by%20Forge%3A%0A%0A%60%60%60toml%0Aextra_output%20%3D%20%5B%0A%20%20%22abi%22%2C%0A%20%20%22evm.bytecode%22%2C%0A%20%20%22evm.deployedBytecode%22%2C%0A%20%20%22evm.methodIdentifiers%22%2C%0A%5D%0A%60%60%60%0A%0AFor%20a%20list%20of%20valid%20values%2C%20see%20the%20%5BSolidity%20docs%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23input-description)%20(search%20for%3A%20_The%20available%20output%20types%20are%20as%20follows_).%0A%0A%23%23%23%23%23%20%60bytecode_hash%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20ipfs%0A-%20Environment%3A%20%60FOUNDRY_BYTECODE_HASH%60%20or%20%60DAPP_BYTECODE_HASH%60%0A%0ADetermines%20the%20hash%20method%20for%20the%20metadata%20hash%20that%20is%20appended%20to%20the%20bytecode.%0A%0AValid%20values%20are%3A%0A%0A-%20ipfs%20(default)%0A-%20bzzr1%0A-%20none%0A%0A%23%23%23%23%23%20%60sparse_mode%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_SPARSE_MODE%60%20or%20%60DAPP_SPARSE_MODE%60%0A%0AEnables%20%5Bsparse%20mode%5D(%2Fforge%2Freference%2Fforge-build%23sparse-mode-experimental)%20for%20builds.%0A%0A%23%23%23%20Optimizer%0A%0AConfiguration%20related%20to%20the%20Solidity%20optimizer.%0A%0A%23%23%23%23%23%20%60optimizer%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_OPTIMIZER%60%20or%20%60DAPP_OPTIMIZER%60%0A%0AWhether%20or%20not%20to%20enable%20the%20Solidity%20optimizer.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20Solidity%20optimizer%20is%20automatically%20enabled%20if%20%60optimizer_runs%60%20is%20set%20to%20a%20value%20greater%20than%200.%0A%0A%23%23%23%23%23%20%60optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20200%0A-%20Environment%3A%20%60FOUNDRY_OPTIMIZER_RUNS%60%20or%20%60DAPP_OPTIMIZER_RUNS%60%0A%0AThe%20number%20of%20runs%20specifies%20roughly%20how%20often%20each%20opcode%20of%20the%20deployed%20code%20will%20be%20executed%20across%20the%20life-time%20of%20the%20contract.%20This%20means%20it%20is%20a%20trade-off%20parameter%20between%20code%20size%20(deploy%20cost)%20and%20code%20execution%20cost%20(cost%20after%20deployment).%20A%20%60optimizer_runs%60%20parameter%20of%20%601%60%20will%20produce%20short%20but%20expensive%20code.%20In%20contrast%2C%20a%20larger%20%60optimizer_runs%60%20parameter%20will%20produce%20longer%20but%20more%20gas%20efficient%20code.%20The%20maximum%20value%20of%20the%20parameter%20is%20%602**32-1%60.%0A%0AA%20common%20misconception%20is%20that%20this%20parameter%20specifies%20the%20number%20of%20iterations%20of%20the%20optimizer.%20This%20is%20not%20true%3A%20The%20optimizer%20will%20always%20run%20as%20many%20times%20as%20it%20can%20still%20improve%20the%20code.%0A%0A%23%23%23%23%23%20%60via_ir%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_VIA_IR%60%20or%20%60DAPP_VIA_IR%60%0A%0AIf%20set%20to%20true%2C%20changes%20compilation%20pipeline%20to%20go%20through%20the%20new%20IR%20optimizer.%0A%0A%23%23%23%23%23%20%60use_literal_content%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A%0AIf%20set%20to%20true%2C%20changes%20compilation%20to%20only%20use%20literal%20content%20and%20not%20URLs.%0A%0A%23%23%23%23%23%20%60%5Boptimizer_details%5D%60%0A%0AThe%20optimizer%20details%20section%20is%20used%20to%20tweak%20how%20the%20Solidity%20optimizer%20behaves.%20There%20are%20several%20configurable%20values%20in%20this%20section%20(each%20of%20them%20are%20booleans)%3A%0A%0A-%20%60peephole%60%0A-%20%60inliner%60%0A-%20%60jumpdestRemover%60%0A-%20%60orderLiterals%60%0A-%20%60deduplicate%60%0A-%20%60cse%60%0A-%20%60constantOptimizer%60%0A-%20%60yul%60%0A%0ARefer%20to%20the%20Solidity%20%5Bcompiler%20input%20description%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%20for%20the%20default%20values.%0A%0A%23%23%23%23%23%20%60%5Boptimizer_details.yul_details%5D%60%0A%0AThe%20Yul%20details%20subsection%20of%20the%20optimizer%20details%20section%20is%20used%20to%20tweak%20how%20the%20new%20IR%20optimizer%20behaves.%20There%20are%20two%20configuration%20values%3A%0A%0A-%20%60stack_allocation%60%3A%20Tries%20to%20improve%20the%20allocation%20of%20stack%20slots%20by%20freeing%20them%20up%20earlier.%0A-%20%60optimizer_steps%60%3A%20Selects%20the%20optimizer%20steps%20to%20be%20applied.%0A%0ARefer%20to%20the%20Solidity%20%5Bcompiler%20input%20description%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%20for%20the%20default%20values.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20If%20you%20encounter%20compiler%20errors%20when%20using%20%60via_ir%60%2C%20explicitly%20enable%20the%20legacy%20%60optimizer%60%20and%20leave%20%60optimizer_steps%60%20as%20an%20empty%20string%0A%0A%23%23%23%20Model%20checker%0A%0AThe%20Solidity%20model%20checker%20is%20a%20built-in%20opt-in%20module%20that%20is%20available%20in%20Solidity%20compilers%20for%20OSX%20and%20Linux.%20Learn%20more%20about%20the%20model%20checker%20in%20the%20%5BSolidity%20compiler%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23tutorial)%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%20The%20model%20checker%20requires%20%60z3%60%20version%204.8.8%20or%204.8.14%20on%20Linux.%0A%0AThe%20model%20checker%20settings%20are%20configured%20in%20the%20%60%5Bmodel_checker%5D%60%20section%20of%20the%20configuration.%0A%0AThe%20model%20checker%20will%20run%20when%20%60forge%20build%60%20is%20invoked%2C%20and%20any%20findings%20will%20show%20up%20as%20warnings.%0A%0AThese%20are%20the%20recommended%20settings%20when%20using%20the%20model%20checker%3A%0A%0A%60%60%60toml%0A%5Bprofile.default.model_checker%5D%0Acontracts%20%3D%20%7B'%2Fpath%2Fto%2Fproject%2Fsrc%2FContract.sol'%20%3D%20%5B'Contract'%5D%7D%0Aengine%20%3D%20'chc'%0Atimeout%20%3D%2010000%0Atargets%20%3D%20%5B'assert'%5D%0A%60%60%60%0A%0ASetting%20which%20contract%20should%20be%20verified%20is%20extremely%20important%2C%20otherwise%20all%20available%20contracts%20will%20be%20verified%20which%20may%20take%20a%20long%20time.%0A%0AThe%20recommended%20engine%20is%20%60chc%60%2C%20but%20%60bmc%60%20and%20%60all%60%20(which%20runs%20both)%20are%20also%20accepted.%0A%0AIt%20is%20also%20important%20to%20set%20a%20proper%20timeout%20(given%20in%20milliseconds)%2C%20since%20the%20default%20time%20given%20to%20the%20underlying%20solver%20may%20not%20be%20enough.%0A%0AIf%20no%20verification%20targets%20are%20given%2C%20only%20assertions%20will%20be%20checked.%0A%0A%23%23%23%23%23%20%60%5Bmodel_checker%5D%60%0A%0AThe%20following%20keys%20are%20available%20in%20the%20model%20checker%20section.%0A%0A%23%23%23%23%23%23%20%60model_checker.contracts%60%0A%0A-%20Type%3A%20table%0A-%20Default%3A%20all%0A-%20Environment%3A%20N%2FA%0A%0ASpecifies%20what%20contracts%20the%20model%20checker%20will%20analyze.%0A%0AThe%20key%20of%20the%20table%20is%20the%20path%20to%20a%20source%20file%2C%20and%20the%20value%20is%20an%20array%20of%20contract%20names%20to%20check.%0A%0AFor%20example%3A%0A%0A%60%60%60toml%0A%5Bprofile.default.model_checker%5D%0Acontracts%20%3D%20%7B%20%22src%2FMyContracts.sol%22%20%3D%20%5B%22ContractA%22%2C%20%22ContractB%22%5D%20%7D%0A%60%60%60%0A%0A%23%23%23%23%23%23%20%60model_checker.div_mod_with_slacks%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20N%2FA%0A%0ASets%20how%20division%20and%20modulo%20operations%20should%20be%20encoded.%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23division-and-modulo-with-slack-variables)%20for%20more%20information.%0A%0A%23%23%23%23%23%23%20%60model_checker.engine%60%0A%0A-%20Type%3A%20string%20(see%20below)%0A-%20Default%3A%20all%0A-%20Environment%3A%20N%2FA%0A%0ASpecifies%20the%20model%20checker%20engine%20to%20run.%20Valid%20values%20are%3A%0A%0A-%20%60chc%60%3A%20The%20constrained%20horn%20clauses%20engine%0A-%20%60bmc%60%3A%20The%20bounded%20model%20checker%20engine%0A-%20%60all%60%3A%20Runs%20both%20engines%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23model-checking-engines)%20for%20more%20information%20on%20the%20engines.%0A%0A%23%23%23%23%23%23%20%60model_checker.invariants%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20N%2FA%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20model%20checker%20invariants.%20Valid%20values%20are%3A%0A%0A-%20%60contract%60%3A%20Contract%20Invariants%0A-%20%60reentrancy%60%3A%20Reentrancy%20Properties%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23reported-inferred-inductive-invariants)%20for%20more%20information%20on%20the%20invariants.%0A%0A%23%23%23%23%23%23%20%60model_checker.show_unproved%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20N%2FA%0A%0AWhether%20or%20not%20to%20output%20all%20unproved%20targets.%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23unproved-targets)%20for%20more%20information.%0A%0A%23%23%23%23%23%23%20%60model_checker.solvers%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20N%2FA%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20model%20checker%20solvers.%20Valid%20values%20are%3A%0A%0A-%20%60cvc4%60%0A-%20%60eld%60%3A%20introduced%20in%20v0.8.18%0A-%20%60smtlib2%60%0A-%20%60z3%60%0A%0ARefer%20to%20the%20%5BSolidity%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23smt-and-horn-solvers)%20for%20more%20information.%0A%0A%23%23%23%23%23%23%20%60model_checker.timeout%60%0A%0A-%20Type%3A%20number%20(milliseconds)%0A-%20Default%3A%20N%2FA%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20timeout%20for%20the%20underlying%20model%20checker%20engines%20(in%20milliseconds).%0A%0A%23%23%23%23%23%23%20%60model_checker.targets%60%0A%0A-%20Type%3A%20array%20of%20strings%0A-%20Default%3A%20assert%0A-%20Environment%3A%20N%2FA%0A%0ASets%20the%20model%20checker%20targets.%20Valid%20values%20are%3A%0A%0A-%20%60assert%60%3A%20Assertions%0A-%20%60underflow%60%3A%20Arithmetic%20underflow%0A-%20%60overflow%60%3A%20Arithmetic%20overflow%0A-%20%60divByZero%60%3A%20Division%20by%20zero%0A-%20%60constantCondition%60%3A%20Trivial%20conditions%20and%20unreachable%20code%0A-%20%60popEmptyArray%60%3A%20Popping%20an%20empty%20array%0A-%20%60outOfBounds%60%3A%20Out%20of%20bounds%20array%2Ffixed%20bytes%20index%20access%0A-%20%60default%60%3A%20All%20of%20the%20above%20(note%3A%20not%20the%20default%20for%20Forge)%0A%0A%23%23%23%20Compilation%20Restrictions%0A%0ACompilation%20restrictions%20allows%20configuration%20of%20how%20individual%20files%20or%20directories%20within%20projects%20are%20compiled.%0A%0A%3E%20For%20a%20complex%20configuration%20of%20compiler%20profiles%20and%20compiler%20restrictions%20please%20refer%20to%20Uniswap%20%5Bcontracts%20monorepo%5D(https%3A%2F%2Fgithub.com%2FUniswap%2Fcontracts%2Fblob%2F4d80a9cfed9b920b83a394b168a95319606a0b73%2Ffoundry.toml%23L27-L72).%0A%0AFor%20example%2C%20with%20configuration%20below%2C%20%60Counter.sol%60%20contract%20under%20%60src%60%20is%20compiled%20with%20%60via-ir%60%20option%20enabled%20while%20all%20other%20contracts%20(including%20tests)%20are%20compiled%20with%20the%20default%20profile.%0A%0A%60%60%60toml%0A%23%20add%20via_ir%20profile%0Aadditional_compiler_profiles%20%3D%20%5B%20%7B%20name%20%3D%20%22via-ir%22%2C%20via_ir%20%3D%20true%20%7D%20%5D%0A%0A%23%20enforce%20compiling%20tests%20without%20via_ir%20and%20only%20some%20heavy%20contract%20with%20via_ir%0A%23%20note%3A%20it%20will%20only%20work%20if%20tests%20are%20using%20vm.deployCode%20to%20deploy%20contract%0Acompilation_restrictions%20%3D%20%5B%0A%20%20%20%20%7B%20paths%20%3D%20%22test%2F**%22%2C%20via_ir%20%3D%20false%20%7D%2C%0A%20%20%20%20%7B%20paths%20%3D%20%22src%2FCounter.sol%22%2C%20via_ir%20%3D%20true%20%7D%2C%0A%5D%0A%60%60%60%0A%0AWe%20can%20configure%20how%20individual%20files%20or%20directories%20are%20compiled%20by%20specifying%20the%20%60compilation_restrictions%60%20configuration%20(which%20applies%20to%20sources%20importing%20the%20restricted%20file%20as%20well).%20%20%0AOnce%20we%20have%20a%20set%20of%20restrictions%20we%20need%20to%20construct%20settings%20objects%20to%20satisfy%20them.%20This%20is%20done%20by%20adding%20%60additional_compiler_profiles%60%2C%20which%20is%20a%20mapping%20from%20profile%20name%20to%20settings%20overrides.%0A%0AIn%20the%20example%20above%2C%20we%20added%20a%20single%20profile%20named%20%60via-ir%60%20which%20uses%20default%20compilation%20settings%20but%20enables%20%60via_ir%60%20option%2C%20making%20it%20possible%20to%20compile%20the%20%60Counter.sol%60%20contract%20with%20%60via_ir%60%2C%20while%20all%20other%20contracts%20(including%20tests)%20with%20the%20default%20profile.%20%20%0AWhen%20choosing%20compiler%20profile%2C%20first%20profile%20(starting%20with%20default%20one)%20satisfying%20restrictions%20of%20the%20source%20file%20and%20all%20of%20its%20imports%20will%20be%20used.%0A%0A%3E%20If%20the%20same%20source%20file%20is%20compiled%20with%20several%20profiles%2C%20then%20an%20artifact%20is%20generated%20for%20each%20profile%20-%20if%20%60Counter%60%20is%20compiled%20with%20default%20and%20%60v1%60%20profile%2C%20%60Counter.json%60%20and%20%60Counter.v1.json%60%20artifacts%20are%20created.%0A%0A%23%23%23%23%20Additional%20compiler%20settings%3A%0A%0A%60%5Badditional_compiler_profiles%5D%60%0A%0A-%20Type%3A%20array%20of%20additional%20compiler%20profiles%0A%0AConfigures%20a%20mapping%20from%20profile%20name%20to%20settings%20overrides.%0A%0AFor%20example%2C%20an%20additional%20%60via-ir%60%20compiler%20profile%20that%20changes%20compilation%20pipeline%20to%20go%20through%20the%20new%20IR%20optimizer%20can%20be%20defined%20as%3A%0A%0A%60%60%60toml%0Aadditional_compiler_profiles%20%3D%20%5B%20%7B%20name%20%3D%20%22via-ir%22%2C%20via_ir%20%3D%20true%20%7D%20%5D%0A%60%60%60%0A%0AThere%20are%20several%20configurable%20values%20for%20a%20compiler%20profile%3A%0A%0A-%20%60name%60%0A-%20%60via_ir%60%0A-%20%60evm_version%60%0A-%20%60optimizer%60%0A-%20%60optimizer_runs%60%0A-%20%60bytecode_hash%60%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.name%60%0A%0A-%20Type%3A%20string%0A%0AAdditional%20compiler%20profile%20name.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.via_ir%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A%0AAdditional%20compiler%20profile%20%5Bvia_ir%5D(%23via_ir)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.evm_version%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20prague%0A%0AAdditional%20compiler%20profile%20%5Bevm_version%5D(%23evm_version)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.optimizer%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A%0AAdditional%20compiler%20profile%20%5Boptimizer%5D(%23optimizer)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20200%0A%0AAdditional%20compiler%20profile%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%0A%0A%23%23%23%23%23%20%60additional_compiler_profile.bytecode_hash%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20ipfs%0A%0AAdditional%20compiler%20profile%20%5Bbytecode_hash%5D(%23bytecode_hash)%20setting.%0A%0A%23%23%23%23%20Compilation%20restrictions%20settings%3A%0A%0A%23%23%23%23%20%60%5Bcompilation_restrictions%5D%60%0A%0A-%20Type%3A%20array%20of%20compilation%20restrictions%20settings%0A%0A%23%23%23%23%23%20%60compilation_restriction.paths%60%0A%0A-%20Type%3A%20regex%0A%0AOnly%20applies%20compilation%20restrictions%20on%20files%20matching%20given%20paths.%0A%0AFor%20example%3A%0A%0A-%20%60src%2Fcontracts%2FCounter.sol%60%20-%20apply%20restrictions%20for%20specific%20contract%0A-%20%60src%2Fcontracts%2F%7BCounter%2CCounterFactory%7D.sol%60%20-%20apply%20restrictions%20for%20multiple%20contracts%2C%20by%20name%0A-%20%60src%2Fv1%2F**%60%20or%20%60src%2Fv3%2F**%2Flibraries%2F**%60%20-%20apply%20restrictions%20for%20all%20contracts%20in%20matching%20source%20path%0A%0AThere%20are%20several%20configurable%20values%20for%20an%20compilation%20restriction%3A%0A%0A-%20%60version%60%0A-%20%60via_ir%60%0A-%20%60bytecode_hash%60%0A-%20%60optimizer_runs%60%0A-%20%60min_optimizer_runs%60%0A-%20%60max_optimizer_runs%60%0A-%20%60evm_version%60%0A-%20%60min_evm_version%60%0A-%20%60max_evm_version%60%0A%0A%23%23%23%23%23%20%60compilation_restriction.version%60%0A%0A-%20Type%3A%20string%20(semver)%0A%0ARestrict%20compilation%20for%20specific%20%5Bsolc_version%5D(%23solc_version).%0A%0A%23%23%23%23%23%20%60compilation_restriction.via_ir%60%0A%0A-%20Type%3A%20boolean%0A%0ARestrict%20compilation%20for%20specific%20%5Bvia_ir%5D(%23via_ir)%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.bytecode_hash%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20matching%20provided%20bytecode%20hash%20method.%0A%0A%23%23%23%23%23%20%60compilation_restriction.optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A%0ARestrict%20compilation%20for%20specific%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%20Conflicts%20with%20%60min_optimizer_runs%60%20and%20%60max_optimizer_runs%60%20settings.%0A%0A%23%23%23%23%23%20%60compilation_restriction.min_optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A%0ARestrict%20compilation%20for%20min%20of%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%20Conflicts%20with%20%60optimizer_runs%60%20setting%2C%20requires%20%60max_optimizer_runs%60%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.max_optimizer_runs%60%0A%0A-%20Type%3A%20integer%0A%0ARestrict%20compilation%20for%20max%20of%20%5Boptimizer_runs%5D(%23optimizer_runs)%20setting.%20Conflicts%20with%20%60optimizer_runs%60%20setting%2C%20requires%20%60min_optimizer_runs%60%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.evm_version%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20for%20specific%20%5Bevm_version%5D(%23evm_version)%20setting.%20Conflicts%20with%20%60min_evm_version%60%20and%20%60max_evm_version%60%20settings.%0A%0A%23%23%23%23%23%20%60compilation_restriction.min_evm_version%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20for%20a%20min%20version%20of%20%5Bevm_version%5D(%23evm_version)%20setting.%20Conflicts%20with%20%60evm_version%60%20setting%2C%20requires%20%60max_evm_version%60%20setting.%0A%0A%23%23%23%23%23%20%60compilation_restriction.max_evm_version%60%0A%0A-%20Type%3A%20string%0A%0ARestrict%20compilation%20for%20a%20max%20version%20of%20%5Bevm_version%5D(%23evm_version)%20setting.%20Conflicts%20with%20%60evm_version%60%20setting%2C%20requires%20%60min_evm_version%60%20setting.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./testing-PZ0kVD32.js"),__vite__mapDeps([157,1])),path:"/config/reference/testing",type:"mdx",filePath:"config/reference/testing.mdx",content:"%23%23%20Testing%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20%60forge%20test%60.%0A%0A**Sections**%0A%0A-%20%5BGeneral%5D(%23general)%0A-%20%5BFuzz%5D(%23fuzz)%0A-%20%5BInvariant%5D(%23invariant)%0A%0A%23%23%23%20General%0A%0A%23%23%23%23%23%20%60verbosity%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_VERBOSITY%60%20or%20%60DAPP_VERBOSITY%60%0A%0AThe%20verbosity%20level%20to%20use%20during%20tests.%0A%0A-%20**Level%202%20(%60-vv%60)**%3A%20Logs%20emitted%20during%20tests%20are%20also%20displayed.%0A-%20**Level%203%20(%60-vvv%60)**%3A%20Stack%20traces%20for%20failing%20tests%20are%20also%20displayed.%0A-%20**Level%204%20(%60-vvvv%60)**%3A%20Stack%20traces%20for%20all%20tests%20are%20displayed%2C%20and%20setup%20traces%20for%20failing%20tests%20are%20displayed.%0A-%20**Level%205%20(%60-vvvvv%60)**%3A%20Stack%20traces%20and%20setup%20traces%20are%20always%20displayed.%0A%0A%23%23%23%23%23%20%60ffi%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FFI%60%20or%20%60DAPP_FFI%60%0A%0AWhether%20or%20not%20to%20enable%20the%20%60ffi%60%20cheatcode.%0A%0A**Warning%3A**%20Enabling%20this%20cheatcode%20has%20security%20implications%20for%20your%20project%2C%20as%20it%20allows%20tests%20to%20execute%20arbitrary%20programs%20on%20your%20computer.%0A%0A%23%23%23%23%23%20%60sender%60%0A%0A-%20Type%3A%20string%20(address)%0A-%20Default%3A%200x1804c8AB1F12E6bbf3894d4083f33e07309d1f38%0A-%20Environment%3A%20%60FOUNDRY_SENDER%60%20or%20%60DAPP_SENDER%60%0A%0AThe%20value%20of%20%60msg.sender%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60tx_origin%60%0A%0A-%20Type%3A%20string%20(address)%0A-%20Default%3A%200x1804c8AB1F12E6bbf3894d4083f33e07309d1f38%0A-%20Environment%3A%20%60FOUNDRY_TX_ORIGIN%60%20or%20%60DAPP_TX_ORIGIN%60%0A%0AThe%20value%20of%20%60tx.origin%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60initial_balance%60%0A%0A-%20Type%3A%20string%20(hexadecimal)%0A-%20Default%3A%200xffffffffffffffffffffffff%0A-%20Environment%3A%20%60FOUNDRY_INITIAL_BALANCE%60%20or%20%60DAPP_INITIAL_BALANCE%60%0A%0AThe%20initial%20balance%20of%20the%20test%20contracts%20in%20wei%2C%20written%20in%20hexadecimal.%0A%0A%23%23%23%23%23%20%60block_number%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%201%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_NUMBER%60%20or%20%60DAPP_BLOCK_NUMBER%60%0A%0AThe%20value%20of%20%60block.number%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60chain_id%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2031337%0A-%20Environment%3A%20%60FOUNDRY_CHAIN_ID%60%20or%20%60DAPP_CHAIN_ID%60%0A%0AThe%20value%20of%20the%20%60chainid%60%20opcode%20in%20tests.%0A%0A%23%23%23%23%23%20%60gas_limit%60%0A%0A-%20Type%3A%20integer%20or%20string%0A-%20Default%3A%209223372036854775807%0A-%20Environment%3A%20%60FOUNDRY_GAS_LIMIT%60%20or%20%60DAPP_GAS_LIMIT%60%0A%0AThe%20gas%20limit%20for%20each%20test%20case.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Due%20to%20a%20limitation%20in%20a%20dependency%20of%20Forge%2C%20you%20**cannot%20raise%20the%20gas%20limit**%20beyond%20the%20default%20without%20changing%20the%20value%20to%20a%20string.%0A%3E%0A%3E%20In%20order%20to%20use%20higher%20gas%20limits%20use%20a%20string%3A%0A%0A%60%60%60toml%0Agas_limit%20%3D%20%2218446744073709551615%22%20%23%20u64%3A%3AMAX%0A%60%60%60%0A%0A%23%23%23%23%23%20%60gas_price%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_GAS_PRICE%60%20or%20%60DAPP_GAS_PRICE%60%0A%0AThe%20price%20of%20gas%20(in%20wei)%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_base_fee_per_gas%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_BASE_FEE_PER_GAS%60%20or%20%60DAPP_BLOCK_BASE_FEE_PER_GAS%60%0A%0AThe%20base%20fee%20per%20gas%20(in%20wei)%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_coinbase%60%0A%0A-%20Type%3A%20string%20(address)%0A-%20Default%3A%200x0000000000000000000000000000000000000000%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_COINBASE%60%20or%20%60DAPP_BLOCK_COINBASE%60%0A%0AThe%20value%20of%20%60block.coinbase%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_timestamp%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%201%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_TIMESTAMP%60%20or%20%60DAPP_BLOCK_TIMESTAMP%60%0A%0AThe%20value%20of%20%60block.timestamp%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_difficulty%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_DIFFICULTY%60%20or%20%60DAPP_BLOCK_DIFFICULTY%60%0A%0AThe%20value%20of%20%60block.difficulty%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60gas_reports%60%0A%0A-%20Type%3A%20array%20of%20strings%20(contract%20names)%0A-%20Default%3A%20%5B%22*%22%5D%0A-%20Environment%3A%20%60FOUNDRY_GAS_REPORTS%60%20or%20%60DAPP_GAS_REPORTS%60%0A%0AThe%20contracts%20to%20print%20gas%20reports%20for.%0A%0A%23%23%23%23%23%20%60no_storage_caching%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_NO_STORAGE_CACHING%60%20or%20%60DAPP_NO_STORAGE_CACHING%60%0A%0AIf%20set%20to%20%60true%60%2C%20then%20block%20data%20from%20RPC%20endpoints%20in%20tests%20will%20not%20be%20cached.%20Otherwise%2C%20the%20data%20is%20cached%20to%20%60%24HOME%2F.foundry%2Fcache%2F%3Cchain%20id%3E%2F%3Cblock%20number%3E%60.%0A%0A%23%23%23%23%23%20%60%5Brpc_storage_caching%5D%60%0A%0AThe%20%60%5Brpc_storage_caching%5D%60%20block%20determines%20what%20RPC%20endpoints%20are%20cached.%0A%0A%23%23%23%23%23%23%20%60rpc_storage_caching.chains%60%0A%0A-%20Type%3A%20string%20or%20array%20of%20strings%20(chain%20names)%0A-%20Default%3A%20all%0A-%20Environment%3A%20N%2FA%0A%0ADetermines%20what%20chains%20are%20cached.%20By%20default%2C%20all%20chains%20are%20cached.%0A%0AValid%20values%20are%3A%0A%0A-%20%22all%22%0A-%20A%20list%20of%20chain%20names%2C%20e.g.%20%60%5B%22optimism%22%2C%20%22mainnet%22%5D%60%0A%0A%23%23%23%23%23%23%20%60rpc_storage_caching.endpoints%60%0A%0A-%20Type%3A%20string%20or%20array%20of%20regex%20patterns%20(to%20match%20URLs)%0A-%20Default%3A%20remote%0A-%20Environment%3A%20N%2FA%0A%0ADetermines%20what%20RPC%20endpoints%20are%20cached.%20By%20default%2C%20only%20remote%20endpoints%20are%20cached.%0A%0AValid%20values%20are%3A%0A%0A-%20all%0A-%20remote%20(default)%0A-%20A%20list%20of%20regex%20patterns%2C%20e.g.%20%60%5B%22localhost%22%5D%60%0A%0A%23%23%23%23%23%20%60eth_rpc_url%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_ETH_RPC_URL%60%20or%20%60DAPP_ETH_RPC_URL%60%0A%0AThe%20url%20of%20the%20rpc%20server%20that%20should%20be%20used%20for%20any%20rpc%20calls.%0A%0A%23%23%23%23%23%20%60etherscan_api_key%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_ETHERSCAN_API_KEY%60%20or%20%60DAPP_ETHERSCAN_API_KEY%60%0A%0AThe%20etherscan%20API%20key%20for%20RPC%20calls.%0A%0A%23%23%23%23%23%20%60match-test%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_MATCH_TEST%60%20or%20%60DAPP_MATCH_TEST%60%0A%0AOnly%20run%20test%20methods%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--match-test%20%3CTEST_PATTERN%3E%60%0A%0A%23%23%23%23%23%20%60no-match-test%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_NO_MATCH_TEST%60%20or%20%60DAPP_NO_MATCH_TEST%60%0A%0AOnly%20run%20test%20methods%20not%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--no-match-test%20%3CTEST_PATTERN_INVERSE%3E%60%0A%0A%23%23%23%23%23%20%60match-contract%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_MATCH_CONTRACT%60%20or%20%60DAPP_MATCH_CONTRACT%60%0A%0AOnly%20run%20test%20methods%20in%20contracts%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--match-contract%20%3CCONTRACT_PATTERN%3E%60%0A%0A%23%23%23%23%23%20%60no-match-contract%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_NO_MATCH_CONTRACT%60%20or%20%60DAPP_NO_MATCH_CONTRACT%60%0A%0AOnly%20run%20test%20methods%20in%20contracts%20not%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--no-match-contract%20%3CCONTRACT_PATTERN_INVERSE%3E%60%0A%0A%23%23%23%23%23%20%60match-path%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_MATCH_PATH%60%20or%20%60DAPP_MATCH_PATH%60%0A%0AOnly%20runs%20test%20methods%20on%20files%20matching%20the%20path.%0AEquivalent%20to%20%60forge%20test%20--match-path%20%3CPATH_PATTERN%3E%60%0A%0A%23%23%23%23%23%20%60no-match-path%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_NO_MATCH_PATH%60%20or%20%60DAPP_NO_MATCH_PATH%60%0A%0AOnly%20runs%20test%20methods%20on%20files%20not%20matching%20the%20path.%0AEquivalent%20to%20%60forge%20test%20--no-match-path%20%3CPATH_PATTERN_INVERSE%3E%60%0A%0A%23%23%23%23%23%20%60threads%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_THREADS%60%0A%0ANumber%20of%20threads%20to%20use.%0ANot%20set%20or%20zero%20specifies%20the%20number%20of%20logical%20cores.%0A%0A%23%23%23%23%23%20%60show_progress%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_SHOW_PROGRESS%60%0A%0AWhether%20to%20show%20test%20execution%20progress.%0A%0A%23%23%23%23%23%20%60block_gas_limit%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_GAS_LIMIT%60%20or%20%60DAPP_BLOCK_GAS_LIMIT%60%0A%0AThe%20block.gaslimit%20value%20during%20EVM%20execution.%0A%0A%23%23%23%23%23%20%60memory_limit%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2033554432%0A-%20Environment%3A%20%60FOUNDRY_MEMORY_LIMIT%60%20or%20%60DAPP_MEMORY_LIMIT%60%0A%0AThe%20memory%20limit%20of%20the%20EVM%20in%20bytes.%0A%0A%23%23%23%23%23%20%60names%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_NAMES%60%20or%20%60DAPP_NAMES%60%0A%0APrint%20compiled%20contract%20names.%0A%0A%23%23%23%23%23%20%60sizes%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_SIZES%60%20or%20%60DAPP_SIZES%60%0A%0APrint%20compiled%20contract%20sizes.%0A%0A%23%23%23%23%23%20%60rpc_endpoints%60%0A%0A-%20Type%3A%20table%20of%20RPC%20endpoints%0A-%20Default%3A%20none%0A-%20Environment%3A%20none%0A%0AThis%20section%20lives%20outside%20of%20profiles%20and%20defines%20a%20table%20of%20RPC%20endpoints%2C%20where%20the%20key%20specifies%20the%20RPC%20endpoints's%20name%20and%20the%20value%20is%20the%20RPC%20endpoint%20itself.%0A%0AThe%20value%20can%20either%20be%20a%20valid%20RPC%20endpoint%20or%20a%20reference%20to%20an%20environment%20variable%20(wrapped%20with%20in%20%60%24%7B%7D%60).%0A%0AThese%20RPC%20endpoints%20can%20be%20used%20in%20tests%20and%20Solidity%20scripts%20(see%20%5B%60vm.rpc%60%5D(%2Freference%2Fcheatcodes%2Frpc)).%0A%0AThe%20following%20example%20defines%20an%20endpoint%20named%20%60optimism%60%20and%20an%20endpoint%20named%20%60mainnet%60%20that%20references%20an%20environment%20variable%20%60RPC_MAINNET%60%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Aoptimism%20%3D%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22%0Amainnet%20%3D%20%22%24%7BRPC_MAINNET%7D%22%0A%60%60%60%0A%0A%23%23%23%23%23%20%60prompt_timeout%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20120%0A-%20Environment%3A%20%60FOUNDRY_PROMPT_TIMEOUT%60%0A%0AThe%20number%20of%20seconds%20to%20wait%20before%20%60vm.prompt%60%20reverts%20with%20a%20timeout.%0A%0A%23%23%23%20Fuzz%0A%0AConfiguration%20values%20for%20%60%5Bfuzz%5D%60%20section.%0A%0A%23%23%23%23%23%20%60runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_RUNS%60%20or%20%60DAPP_FUZZ_RUNS%60%0A%0AThe%20amount%20of%20fuzz%20runs%20to%20perform%20for%20each%20fuzz%20test%20case.%20Higher%20values%20gives%20more%20confidence%20in%20results%20at%20the%20cost%20of%20testing%20speed.%0A%0A%23%23%23%23%23%20%60max_test_rejects%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2065536%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_MAX_TEST_REJECTS%60%0A%0AThe%20maximum%20number%20of%20combined%20inputs%20that%20may%20be%20rejected%20before%20the%20test%20as%20a%20whole%20aborts.%0A%22Global%22%20filters%20apply%20to%20the%20whole%20test%20case.%20If%20the%20test%20case%20is%20rejected%2C%20the%20whole%20thing%20is%20regenerated.%0A%0A%23%23%23%23%23%20%60seed%60%0A%0A-%20Type%3A%20string%20(hexadecimal)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_SEED%60%0A%0AOptional%20seed%20for%20the%20fuzzing%20RNG%20algorithm.%0A%0A%23%23%23%23%23%20%60dictionary_weight%60%0A%0A-%20Type%3A%20integer%20(between%200%20and%20100)%0A-%20Default%3A%2040%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_DICTIONARY_WEIGHT%60%0A%0AThe%20weight%20of%20the%20dictionary.%20A%20higher%20dictionary%20weight%20will%20bias%20the%20fuzz%20inputs%20towards%20%22interesting%22%20values%2C%20e.g.%20boundary%20values%20like%20%60type(uint256).max%60%20or%20contract%20addresses%20from%20your%20environment.%0A%0A%23%23%23%23%23%20%60include_storage%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_STORAGE%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20values%20from%20storage.%0A%0A%23%23%23%23%23%20%60include_push_bytes%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_PUSH_BYTES%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values.%0A%0A%23%23%23%23%23%20%60gas_report_samples%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_GAS_REPORT_SAMPLES%60%0A%0ANumber%20of%20runs%20to%20use%20for%20generating%20gas%20report.%0A%0A%23%23%23%23%23%20%60failure_persist_dir%60%0A%0A-%20Type%3A%20string%20(path)%0A-%20Default%3A%20%60.%2Fcache%2Ffuzz%60%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_FAILURE_PERSIST_DIR%60%0A%0APath%20where%20fuzz%20failures%20are%20recorded%20and%20replayed.%0A%0A%23%23%23%23%23%20%60failure_persist_file%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60failures%60%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_FAILURE_PERSIST_FILE%60%0A%0AName%20of%20the%20file%20to%20record%20fuzz%20failures.%0A%0A%23%23%23%23%23%20%60show_logs%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_SHOW_LOGS%60%0A%0AThe%20flag%20indicates%20whether%20to%20display%20console%20logs%20in%20fuzz%20tests%20or%20not.%20Note%20that%20in%20order%20to%20enable%20displaying%20console%20logs%2C%20you'll%20need%20to%20set%20%60show_logs%20%3D%20true%60%20and%20then%20use%20%60forge%20test%20-vv%60%20or%20set%20%60verbosity%20%3E%3D%202%60.%0A%0A%23%23%23%20Invariant%0A%0AConfiguration%20values%20for%20%60%5Binvariant%5D%60%20section.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Configuration%20for%20%60%5Binvariant%5D%60%20section%20has%20the%20fallback%20logic%0A%3E%20for%20common%20config%20entries%20(%60runs%60%2C%20%60seed%60%2C%20%60dictionary_weight%60%20etc).%0A%3E%0A%3E%20-%20If%20the%20entries%20are%20not%20set%20in%20either%20section%2C%20then%20the%20defaults%20will%20be%20used.%0A%3E%20-%20If%20the%20entries%20are%20set%20in%20the%20%60%5Bfuzz%5D%60%20section%2C%20but%20are%20not%20set%20in%20the%20%60%5Binvariant%5D%60%0A%3E%20%20%20section%2C%20these%20values%20will%20automatically%20be%20set%20to%20the%20values%20specified%20in%0A%3E%20%20%20the%20%60%5Bfuzz%5D%60%20section.%0A%3E%20-%20For%20any%20profile%20other%20than%20%60default%60%3A%0A%3E%20%20%20-%20If%20at%20least%20one%20entry%20is%20set%20in%20the%20%60%5Binvariant%5D%60%20(same%20as%0A%3E%20%20%20%20%20%60%5Bprofile.default.invariant%5D%60)%20section%2C%20then%20the%20values%20from%0A%3E%20%20%20%20%20%60%5Binvariant%5D%60%20section%20will%20be%20used%2C%20including%20defaults.%0A%3E%20%20%20-%20If%20no%20entry%20is%20set%20in%20the%20%60%5Binvariant%5D%60%20section%2C%20but%20there%20are%0A%3E%20%20%20%20%20entries%20in%20the%20%60%5Bfuzz%5D%60%20(same%20as%20%60%5Bprofile.default.fuzz%5D%60)%20section%2C%0A%3E%20%20%20%20%20then%20the%20values%20from%20the%20%60%5Bfuzz%5D%60%20section%20will%20be%20used.%0A%3E%20%20%20-%20If%20it's%20none%20of%20the%20cases%20described%20above%2C%20then%20the%20defaults%0A%3E%20%20%20%20%20will%20be%20used.%0A%0A%23%23%23%23%23%20%60runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_RUNS%60%0A%0AThe%20number%20of%20runs%20that%20must%20execute%20for%20each%20invariant%20test%20group.%20See%20also%20%5Bfuzz.runs%5D(%23runs)%0A%0A%23%23%23%23%23%20%60depth%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20500%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_DEPTH%60%0A%0AThe%20number%20of%20calls%20executed%20to%20attempt%20to%20break%20invariants%20in%20one%20run.%0A%0A%23%23%23%23%23%20%60fail_on_revert%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_FAIL_ON_REVERT%60%0A%0AFails%20the%20invariant%20fuzzing%20if%20a%20revert%20occurs.%0A%0A%23%23%23%23%23%20%60call_override%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_CALL_OVERRIDE%60%0A%0AOverrides%20unsafe%20external%20calls%20when%20running%20invariant%20tests%2C%20useful%20for%20e.g.%20performing%20reentrancy%20checks.%0A%0A%23%23%23%23%23%20%60dictionary_weight%60%0A%0A-%20Type%3A%20integer%20(between%200%20and%20100)%0A-%20Default%3A%2080%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_DICTIONARY_WEIGHT%60%0A%0AThe%20weight%20of%20the%20dictionary.%20See%20also%20%5Bfuzz.dictionary_weight%5D(%23dictionary_weight)%0A%0A%23%23%23%23%23%20%60include_storage%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_STORAGE%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20values%20from%20storage.%20See%20also%20%5Bfuzz.include_storage%5D(%23include_storage)%0A%0A%23%23%23%23%23%20%60include_push_bytes%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_PUSH_BYTES%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values.%20See%20also%20%5Bfuzz.include_push_bytes%5D(%23include_push_bytes)%0A%0A%23%23%23%23%23%20%60shrink_run_limit%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%205000%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_SHRINK_RUN_LIMIT%60%0A%0AThe%20maximum%20number%20of%20attempts%20to%20shrink%20a%20failed%20the%20sequence.%20Shrink%20process%20is%20disabled%20if%20set%20to%200.%0A%0A%23%23%23%23%23%20%60max_assume_rejects%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2065536%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_MAX_ASSUME_REJECTS%60%0A%0AThe%20maximum%20number%20of%20rejects%20via%20%60vm.assume%60%20which%20can%20be%20encountered%20during%20a%20single%20invariant%20run.%0A%0A%23%23%23%23%23%20%60gas_report_samples%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_GAS_REPORT_SAMPLES%60%0A%0ANumber%20of%20runs%20to%20use%20for%20generating%20gas%20report.%0A%0A%23%23%23%23%23%20%60failure_persist_dir%60%0A%0A-%20Type%3A%20string%20(path)%0A-%20Default%3A%20%60.%2Fcache%2Finvariant%60%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_FAILURE_PERSIST_DIR%60%0A%0APath%20where%20invariant%20failures%20are%20recorded%20and%20replayed.%0A%0A%23%23%23%23%23%20%60show_metrics%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_SHOW_METRICS%60%0A%0AThe%20flag%20indicating%20whether%20to%20collect%20and%20display%20fuzzed%20selectors%20metrics%20in%20test%20report.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./testing-PZ0kVD32.js"),__vite__mapDeps([157,1])),path:"/config/reference/testing.html",type:"mdx",filePath:"config/reference/testing.mdx",content:"%23%23%20Testing%0A%0AConfiguration%20related%20to%20the%20behavior%20of%20%60forge%20test%60.%0A%0A**Sections**%0A%0A-%20%5BGeneral%5D(%23general)%0A-%20%5BFuzz%5D(%23fuzz)%0A-%20%5BInvariant%5D(%23invariant)%0A%0A%23%23%23%20General%0A%0A%23%23%23%23%23%20%60verbosity%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_VERBOSITY%60%20or%20%60DAPP_VERBOSITY%60%0A%0AThe%20verbosity%20level%20to%20use%20during%20tests.%0A%0A-%20**Level%202%20(%60-vv%60)**%3A%20Logs%20emitted%20during%20tests%20are%20also%20displayed.%0A-%20**Level%203%20(%60-vvv%60)**%3A%20Stack%20traces%20for%20failing%20tests%20are%20also%20displayed.%0A-%20**Level%204%20(%60-vvvv%60)**%3A%20Stack%20traces%20for%20all%20tests%20are%20displayed%2C%20and%20setup%20traces%20for%20failing%20tests%20are%20displayed.%0A-%20**Level%205%20(%60-vvvvv%60)**%3A%20Stack%20traces%20and%20setup%20traces%20are%20always%20displayed.%0A%0A%23%23%23%23%23%20%60ffi%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FFI%60%20or%20%60DAPP_FFI%60%0A%0AWhether%20or%20not%20to%20enable%20the%20%60ffi%60%20cheatcode.%0A%0A**Warning%3A**%20Enabling%20this%20cheatcode%20has%20security%20implications%20for%20your%20project%2C%20as%20it%20allows%20tests%20to%20execute%20arbitrary%20programs%20on%20your%20computer.%0A%0A%23%23%23%23%23%20%60sender%60%0A%0A-%20Type%3A%20string%20(address)%0A-%20Default%3A%200x1804c8AB1F12E6bbf3894d4083f33e07309d1f38%0A-%20Environment%3A%20%60FOUNDRY_SENDER%60%20or%20%60DAPP_SENDER%60%0A%0AThe%20value%20of%20%60msg.sender%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60tx_origin%60%0A%0A-%20Type%3A%20string%20(address)%0A-%20Default%3A%200x1804c8AB1F12E6bbf3894d4083f33e07309d1f38%0A-%20Environment%3A%20%60FOUNDRY_TX_ORIGIN%60%20or%20%60DAPP_TX_ORIGIN%60%0A%0AThe%20value%20of%20%60tx.origin%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60initial_balance%60%0A%0A-%20Type%3A%20string%20(hexadecimal)%0A-%20Default%3A%200xffffffffffffffffffffffff%0A-%20Environment%3A%20%60FOUNDRY_INITIAL_BALANCE%60%20or%20%60DAPP_INITIAL_BALANCE%60%0A%0AThe%20initial%20balance%20of%20the%20test%20contracts%20in%20wei%2C%20written%20in%20hexadecimal.%0A%0A%23%23%23%23%23%20%60block_number%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%201%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_NUMBER%60%20or%20%60DAPP_BLOCK_NUMBER%60%0A%0AThe%20value%20of%20%60block.number%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60chain_id%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2031337%0A-%20Environment%3A%20%60FOUNDRY_CHAIN_ID%60%20or%20%60DAPP_CHAIN_ID%60%0A%0AThe%20value%20of%20the%20%60chainid%60%20opcode%20in%20tests.%0A%0A%23%23%23%23%23%20%60gas_limit%60%0A%0A-%20Type%3A%20integer%20or%20string%0A-%20Default%3A%209223372036854775807%0A-%20Environment%3A%20%60FOUNDRY_GAS_LIMIT%60%20or%20%60DAPP_GAS_LIMIT%60%0A%0AThe%20gas%20limit%20for%20each%20test%20case.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Due%20to%20a%20limitation%20in%20a%20dependency%20of%20Forge%2C%20you%20**cannot%20raise%20the%20gas%20limit**%20beyond%20the%20default%20without%20changing%20the%20value%20to%20a%20string.%0A%3E%0A%3E%20In%20order%20to%20use%20higher%20gas%20limits%20use%20a%20string%3A%0A%0A%60%60%60toml%0Agas_limit%20%3D%20%2218446744073709551615%22%20%23%20u64%3A%3AMAX%0A%60%60%60%0A%0A%23%23%23%23%23%20%60gas_price%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_GAS_PRICE%60%20or%20%60DAPP_GAS_PRICE%60%0A%0AThe%20price%20of%20gas%20(in%20wei)%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_base_fee_per_gas%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_BASE_FEE_PER_GAS%60%20or%20%60DAPP_BLOCK_BASE_FEE_PER_GAS%60%0A%0AThe%20base%20fee%20per%20gas%20(in%20wei)%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_coinbase%60%0A%0A-%20Type%3A%20string%20(address)%0A-%20Default%3A%200x0000000000000000000000000000000000000000%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_COINBASE%60%20or%20%60DAPP_BLOCK_COINBASE%60%0A%0AThe%20value%20of%20%60block.coinbase%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_timestamp%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%201%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_TIMESTAMP%60%20or%20%60DAPP_BLOCK_TIMESTAMP%60%0A%0AThe%20value%20of%20%60block.timestamp%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60block_difficulty%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%200%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_DIFFICULTY%60%20or%20%60DAPP_BLOCK_DIFFICULTY%60%0A%0AThe%20value%20of%20%60block.difficulty%60%20in%20tests.%0A%0A%23%23%23%23%23%20%60gas_reports%60%0A%0A-%20Type%3A%20array%20of%20strings%20(contract%20names)%0A-%20Default%3A%20%5B%22*%22%5D%0A-%20Environment%3A%20%60FOUNDRY_GAS_REPORTS%60%20or%20%60DAPP_GAS_REPORTS%60%0A%0AThe%20contracts%20to%20print%20gas%20reports%20for.%0A%0A%23%23%23%23%23%20%60no_storage_caching%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_NO_STORAGE_CACHING%60%20or%20%60DAPP_NO_STORAGE_CACHING%60%0A%0AIf%20set%20to%20%60true%60%2C%20then%20block%20data%20from%20RPC%20endpoints%20in%20tests%20will%20not%20be%20cached.%20Otherwise%2C%20the%20data%20is%20cached%20to%20%60%24HOME%2F.foundry%2Fcache%2F%3Cchain%20id%3E%2F%3Cblock%20number%3E%60.%0A%0A%23%23%23%23%23%20%60%5Brpc_storage_caching%5D%60%0A%0AThe%20%60%5Brpc_storage_caching%5D%60%20block%20determines%20what%20RPC%20endpoints%20are%20cached.%0A%0A%23%23%23%23%23%23%20%60rpc_storage_caching.chains%60%0A%0A-%20Type%3A%20string%20or%20array%20of%20strings%20(chain%20names)%0A-%20Default%3A%20all%0A-%20Environment%3A%20N%2FA%0A%0ADetermines%20what%20chains%20are%20cached.%20By%20default%2C%20all%20chains%20are%20cached.%0A%0AValid%20values%20are%3A%0A%0A-%20%22all%22%0A-%20A%20list%20of%20chain%20names%2C%20e.g.%20%60%5B%22optimism%22%2C%20%22mainnet%22%5D%60%0A%0A%23%23%23%23%23%23%20%60rpc_storage_caching.endpoints%60%0A%0A-%20Type%3A%20string%20or%20array%20of%20regex%20patterns%20(to%20match%20URLs)%0A-%20Default%3A%20remote%0A-%20Environment%3A%20N%2FA%0A%0ADetermines%20what%20RPC%20endpoints%20are%20cached.%20By%20default%2C%20only%20remote%20endpoints%20are%20cached.%0A%0AValid%20values%20are%3A%0A%0A-%20all%0A-%20remote%20(default)%0A-%20A%20list%20of%20regex%20patterns%2C%20e.g.%20%60%5B%22localhost%22%5D%60%0A%0A%23%23%23%23%23%20%60eth_rpc_url%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_ETH_RPC_URL%60%20or%20%60DAPP_ETH_RPC_URL%60%0A%0AThe%20url%20of%20the%20rpc%20server%20that%20should%20be%20used%20for%20any%20rpc%20calls.%0A%0A%23%23%23%23%23%20%60etherscan_api_key%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_ETHERSCAN_API_KEY%60%20or%20%60DAPP_ETHERSCAN_API_KEY%60%0A%0AThe%20etherscan%20API%20key%20for%20RPC%20calls.%0A%0A%23%23%23%23%23%20%60match-test%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_MATCH_TEST%60%20or%20%60DAPP_MATCH_TEST%60%0A%0AOnly%20run%20test%20methods%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--match-test%20%3CTEST_PATTERN%3E%60%0A%0A%23%23%23%23%23%20%60no-match-test%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_NO_MATCH_TEST%60%20or%20%60DAPP_NO_MATCH_TEST%60%0A%0AOnly%20run%20test%20methods%20not%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--no-match-test%20%3CTEST_PATTERN_INVERSE%3E%60%0A%0A%23%23%23%23%23%20%60match-contract%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_MATCH_CONTRACT%60%20or%20%60DAPP_MATCH_CONTRACT%60%0A%0AOnly%20run%20test%20methods%20in%20contracts%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--match-contract%20%3CCONTRACT_PATTERN%3E%60%0A%0A%23%23%23%23%23%20%60no-match-contract%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_NO_MATCH_CONTRACT%60%20or%20%60DAPP_NO_MATCH_CONTRACT%60%0A%0AOnly%20run%20test%20methods%20in%20contracts%20not%20matching%20regex.%0AEquivalent%20to%20%60forge%20test%20--no-match-contract%20%3CCONTRACT_PATTERN_INVERSE%3E%60%0A%0A%23%23%23%23%23%20%60match-path%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_MATCH_PATH%60%20or%20%60DAPP_MATCH_PATH%60%0A%0AOnly%20runs%20test%20methods%20on%20files%20matching%20the%20path.%0AEquivalent%20to%20%60forge%20test%20--match-path%20%3CPATH_PATTERN%3E%60%0A%0A%23%23%23%23%23%20%60no-match-path%60%0A%0A-%20Type%3A%20regex%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_NO_MATCH_PATH%60%20or%20%60DAPP_NO_MATCH_PATH%60%0A%0AOnly%20runs%20test%20methods%20on%20files%20not%20matching%20the%20path.%0AEquivalent%20to%20%60forge%20test%20--no-match-path%20%3CPATH_PATTERN_INVERSE%3E%60%0A%0A%23%23%23%23%23%20%60threads%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_THREADS%60%0A%0ANumber%20of%20threads%20to%20use.%0ANot%20set%20or%20zero%20specifies%20the%20number%20of%20logical%20cores.%0A%0A%23%23%23%23%23%20%60show_progress%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_SHOW_PROGRESS%60%0A%0AWhether%20to%20show%20test%20execution%20progress.%0A%0A%23%23%23%23%23%20%60block_gas_limit%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_BLOCK_GAS_LIMIT%60%20or%20%60DAPP_BLOCK_GAS_LIMIT%60%0A%0AThe%20block.gaslimit%20value%20during%20EVM%20execution.%0A%0A%23%23%23%23%23%20%60memory_limit%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2033554432%0A-%20Environment%3A%20%60FOUNDRY_MEMORY_LIMIT%60%20or%20%60DAPP_MEMORY_LIMIT%60%0A%0AThe%20memory%20limit%20of%20the%20EVM%20in%20bytes.%0A%0A%23%23%23%23%23%20%60names%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_NAMES%60%20or%20%60DAPP_NAMES%60%0A%0APrint%20compiled%20contract%20names.%0A%0A%23%23%23%23%23%20%60sizes%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_SIZES%60%20or%20%60DAPP_SIZES%60%0A%0APrint%20compiled%20contract%20sizes.%0A%0A%23%23%23%23%23%20%60rpc_endpoints%60%0A%0A-%20Type%3A%20table%20of%20RPC%20endpoints%0A-%20Default%3A%20none%0A-%20Environment%3A%20none%0A%0AThis%20section%20lives%20outside%20of%20profiles%20and%20defines%20a%20table%20of%20RPC%20endpoints%2C%20where%20the%20key%20specifies%20the%20RPC%20endpoints's%20name%20and%20the%20value%20is%20the%20RPC%20endpoint%20itself.%0A%0AThe%20value%20can%20either%20be%20a%20valid%20RPC%20endpoint%20or%20a%20reference%20to%20an%20environment%20variable%20(wrapped%20with%20in%20%60%24%7B%7D%60).%0A%0AThese%20RPC%20endpoints%20can%20be%20used%20in%20tests%20and%20Solidity%20scripts%20(see%20%5B%60vm.rpc%60%5D(%2Freference%2Fcheatcodes%2Frpc)).%0A%0AThe%20following%20example%20defines%20an%20endpoint%20named%20%60optimism%60%20and%20an%20endpoint%20named%20%60mainnet%60%20that%20references%20an%20environment%20variable%20%60RPC_MAINNET%60%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Aoptimism%20%3D%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22%0Amainnet%20%3D%20%22%24%7BRPC_MAINNET%7D%22%0A%60%60%60%0A%0A%23%23%23%23%23%20%60prompt_timeout%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20120%0A-%20Environment%3A%20%60FOUNDRY_PROMPT_TIMEOUT%60%0A%0AThe%20number%20of%20seconds%20to%20wait%20before%20%60vm.prompt%60%20reverts%20with%20a%20timeout.%0A%0A%23%23%23%20Fuzz%0A%0AConfiguration%20values%20for%20%60%5Bfuzz%5D%60%20section.%0A%0A%23%23%23%23%23%20%60runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_RUNS%60%20or%20%60DAPP_FUZZ_RUNS%60%0A%0AThe%20amount%20of%20fuzz%20runs%20to%20perform%20for%20each%20fuzz%20test%20case.%20Higher%20values%20gives%20more%20confidence%20in%20results%20at%20the%20cost%20of%20testing%20speed.%0A%0A%23%23%23%23%23%20%60max_test_rejects%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2065536%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_MAX_TEST_REJECTS%60%0A%0AThe%20maximum%20number%20of%20combined%20inputs%20that%20may%20be%20rejected%20before%20the%20test%20as%20a%20whole%20aborts.%0A%22Global%22%20filters%20apply%20to%20the%20whole%20test%20case.%20If%20the%20test%20case%20is%20rejected%2C%20the%20whole%20thing%20is%20regenerated.%0A%0A%23%23%23%23%23%20%60seed%60%0A%0A-%20Type%3A%20string%20(hexadecimal)%0A-%20Default%3A%20none%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_SEED%60%0A%0AOptional%20seed%20for%20the%20fuzzing%20RNG%20algorithm.%0A%0A%23%23%23%23%23%20%60dictionary_weight%60%0A%0A-%20Type%3A%20integer%20(between%200%20and%20100)%0A-%20Default%3A%2040%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_DICTIONARY_WEIGHT%60%0A%0AThe%20weight%20of%20the%20dictionary.%20A%20higher%20dictionary%20weight%20will%20bias%20the%20fuzz%20inputs%20towards%20%22interesting%22%20values%2C%20e.g.%20boundary%20values%20like%20%60type(uint256).max%60%20or%20contract%20addresses%20from%20your%20environment.%0A%0A%23%23%23%23%23%20%60include_storage%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_STORAGE%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20values%20from%20storage.%0A%0A%23%23%23%23%23%20%60include_push_bytes%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_PUSH_BYTES%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values.%0A%0A%23%23%23%23%23%20%60gas_report_samples%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_GAS_REPORT_SAMPLES%60%0A%0ANumber%20of%20runs%20to%20use%20for%20generating%20gas%20report.%0A%0A%23%23%23%23%23%20%60failure_persist_dir%60%0A%0A-%20Type%3A%20string%20(path)%0A-%20Default%3A%20%60.%2Fcache%2Ffuzz%60%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_FAILURE_PERSIST_DIR%60%0A%0APath%20where%20fuzz%20failures%20are%20recorded%20and%20replayed.%0A%0A%23%23%23%23%23%20%60failure_persist_file%60%0A%0A-%20Type%3A%20string%0A-%20Default%3A%20%60failures%60%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_FAILURE_PERSIST_FILE%60%0A%0AName%20of%20the%20file%20to%20record%20fuzz%20failures.%0A%0A%23%23%23%23%23%20%60show_logs%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_SHOW_LOGS%60%0A%0AThe%20flag%20indicates%20whether%20to%20display%20console%20logs%20in%20fuzz%20tests%20or%20not.%20Note%20that%20in%20order%20to%20enable%20displaying%20console%20logs%2C%20you'll%20need%20to%20set%20%60show_logs%20%3D%20true%60%20and%20then%20use%20%60forge%20test%20-vv%60%20or%20set%20%60verbosity%20%3E%3D%202%60.%0A%0A%23%23%23%20Invariant%0A%0AConfiguration%20values%20for%20%60%5Binvariant%5D%60%20section.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Configuration%20for%20%60%5Binvariant%5D%60%20section%20has%20the%20fallback%20logic%0A%3E%20for%20common%20config%20entries%20(%60runs%60%2C%20%60seed%60%2C%20%60dictionary_weight%60%20etc).%0A%3E%0A%3E%20-%20If%20the%20entries%20are%20not%20set%20in%20either%20section%2C%20then%20the%20defaults%20will%20be%20used.%0A%3E%20-%20If%20the%20entries%20are%20set%20in%20the%20%60%5Bfuzz%5D%60%20section%2C%20but%20are%20not%20set%20in%20the%20%60%5Binvariant%5D%60%0A%3E%20%20%20section%2C%20these%20values%20will%20automatically%20be%20set%20to%20the%20values%20specified%20in%0A%3E%20%20%20the%20%60%5Bfuzz%5D%60%20section.%0A%3E%20-%20For%20any%20profile%20other%20than%20%60default%60%3A%0A%3E%20%20%20-%20If%20at%20least%20one%20entry%20is%20set%20in%20the%20%60%5Binvariant%5D%60%20(same%20as%0A%3E%20%20%20%20%20%60%5Bprofile.default.invariant%5D%60)%20section%2C%20then%20the%20values%20from%0A%3E%20%20%20%20%20%60%5Binvariant%5D%60%20section%20will%20be%20used%2C%20including%20defaults.%0A%3E%20%20%20-%20If%20no%20entry%20is%20set%20in%20the%20%60%5Binvariant%5D%60%20section%2C%20but%20there%20are%0A%3E%20%20%20%20%20entries%20in%20the%20%60%5Bfuzz%5D%60%20(same%20as%20%60%5Bprofile.default.fuzz%5D%60)%20section%2C%0A%3E%20%20%20%20%20then%20the%20values%20from%20the%20%60%5Bfuzz%5D%60%20section%20will%20be%20used.%0A%3E%20%20%20-%20If%20it's%20none%20of%20the%20cases%20described%20above%2C%20then%20the%20defaults%0A%3E%20%20%20%20%20will%20be%20used.%0A%0A%23%23%23%23%23%20%60runs%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_RUNS%60%0A%0AThe%20number%20of%20runs%20that%20must%20execute%20for%20each%20invariant%20test%20group.%20See%20also%20%5Bfuzz.runs%5D(%23runs)%0A%0A%23%23%23%23%23%20%60depth%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20500%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_DEPTH%60%0A%0AThe%20number%20of%20calls%20executed%20to%20attempt%20to%20break%20invariants%20in%20one%20run.%0A%0A%23%23%23%23%23%20%60fail_on_revert%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_FAIL_ON_REVERT%60%0A%0AFails%20the%20invariant%20fuzzing%20if%20a%20revert%20occurs.%0A%0A%23%23%23%23%23%20%60call_override%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_CALL_OVERRIDE%60%0A%0AOverrides%20unsafe%20external%20calls%20when%20running%20invariant%20tests%2C%20useful%20for%20e.g.%20performing%20reentrancy%20checks.%0A%0A%23%23%23%23%23%20%60dictionary_weight%60%0A%0A-%20Type%3A%20integer%20(between%200%20and%20100)%0A-%20Default%3A%2080%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_DICTIONARY_WEIGHT%60%0A%0AThe%20weight%20of%20the%20dictionary.%20See%20also%20%5Bfuzz.dictionary_weight%5D(%23dictionary_weight)%0A%0A%23%23%23%23%23%20%60include_storage%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_STORAGE%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20values%20from%20storage.%20See%20also%20%5Bfuzz.include_storage%5D(%23include_storage)%0A%0A%23%23%23%23%23%20%60include_push_bytes%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20true%0A-%20Environment%3A%20%60FOUNDRY_FUZZ_INCLUDE_PUSH_BYTES%60%0A%0AThe%20flag%20indicating%20whether%20to%20include%20push%20bytes%20values.%20See%20also%20%5Bfuzz.include_push_bytes%5D(%23include_push_bytes)%0A%0A%23%23%23%23%23%20%60shrink_run_limit%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%205000%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_SHRINK_RUN_LIMIT%60%0A%0AThe%20maximum%20number%20of%20attempts%20to%20shrink%20a%20failed%20the%20sequence.%20Shrink%20process%20is%20disabled%20if%20set%20to%200.%0A%0A%23%23%23%23%23%20%60max_assume_rejects%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%2065536%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_MAX_ASSUME_REJECTS%60%0A%0AThe%20maximum%20number%20of%20rejects%20via%20%60vm.assume%60%20which%20can%20be%20encountered%20during%20a%20single%20invariant%20run.%0A%0A%23%23%23%23%23%20%60gas_report_samples%60%0A%0A-%20Type%3A%20integer%0A-%20Default%3A%20256%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_GAS_REPORT_SAMPLES%60%0A%0ANumber%20of%20runs%20to%20use%20for%20generating%20gas%20report.%0A%0A%23%23%23%23%23%20%60failure_persist_dir%60%0A%0A-%20Type%3A%20string%20(path)%0A-%20Default%3A%20%60.%2Fcache%2Finvariant%60%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_FAILURE_PERSIST_DIR%60%0A%0APath%20where%20invariant%20failures%20are%20recorded%20and%20replayed.%0A%0A%23%23%23%23%23%20%60show_metrics%60%0A%0A-%20Type%3A%20boolean%0A-%20Default%3A%20false%0A-%20Environment%3A%20%60FOUNDRY_INVARIANT_SHOW_METRICS%60%0A%0AThe%20flag%20indicating%20whether%20to%20collect%20and%20display%20fuzzed%20selectors%20metrics%20in%20test%20report.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./differential-ffi-testing-DHfAOxu8.js"),__vite__mapDeps([158,1])),path:"/forge/advanced-testing/differential-ffi-testing",type:"mdx",filePath:"forge/advanced-testing/differential-ffi-testing.md",content:"---%0Adescription%3A%20Compare%20multiple%20implementations%20using%20differential%20testing%20and%20FFI%20to%20validate%20correctness%20against%20reference%20implementations.%0A---%0A%0A%23%23%20Differential%20Testing%0A%0AForge%20can%20be%20used%20for%20differential%20testing%20and%20differential%20fuzzing.%20You%20can%20even%20test%20against%20non-EVM%20executables%20using%20the%20%60ffi%60%20%5Bcheatcode%5D(%2Freference%2Fcheatcodes%2Fffi).%0A%0A%23%23%23%20Background%0A%0A%5BDifferential%20testing%5D(https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FDifferential_testing)%20cross%20references%20multiple%20implementations%20of%20the%20same%20function%20by%20comparing%20each%20one's%20output.%20Imagine%20we%20have%20a%20function%20specification%20%60F(X)%60%2C%20and%20two%20implementations%20of%20that%20specification%3A%20%60f1(X)%60%20and%20%60f2(X)%60.%20We%20expect%20%60f1(x)%20%3D%3D%20f2(x)%60%20for%20all%20x%20that%20exist%20in%20an%20appropriate%20input%20space.%20If%20%60f1(x)%20!%3D%20f2(x)%60%2C%20we%20know%20that%20at%20least%20one%20function%20is%20incorrectly%20implementing%20%60F(X)%60.%20This%20process%20of%20testing%20for%20equality%20and%20identifying%20discrepancies%20is%20the%20core%20of%20differential%20testing.%0A%0ADifferential%20fuzzing%20is%20an%20extension%20of%20differential%20testing.%20Differential%20fuzzing%20programmatically%20generates%20many%20values%20of%20%60x%60%20to%20find%20discrepancies%20and%20edge%20cases%20that%20manually%20chosen%20inputs%20might%20not%20reveal.%0A%0A%3E%20Note%3A%20the%20%60%3D%3D%60%20operator%20in%20this%20case%20can%20be%20a%20custom%20definition%20of%20equality.%20For%20example%2C%20if%20testing%20floating%20point%20implementations%2C%20you%20might%20use%20approximate%20equality%20with%20a%20certain%20tolerance.%0A%0ASome%20real%20life%20uses%20of%20this%20type%20of%20testing%20include%3A%0A%0A-%20Comparing%20upgraded%20implementations%20to%20their%20predecessors%0A-%20Testing%20code%20against%20known%20reference%20implementations%0A-%20Confirming%20compatibility%20with%20third%20party%20tools%20and%20dependencies%0A%0ABelow%20are%20some%20examples%20of%20how%20Forge%20is%20used%20for%20differential%20testing.%0A%0A%23%23%23%20Primer%3A%20The%20%60ffi%60%20cheatcode%0A%0A%5B%60ffi%60%5D(%2Freference%2Fcheatcodes%2Fffi)%20allows%20you%20to%20execute%20an%20arbitrary%20shell%20command%20and%20capture%20the%20output.%20Here's%20a%20mock%20example%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20TestContract%20is%20Test%20%7B%0A%0A%20%20%20%20function%20testMyFFI%20()%20public%20%7B%0A%20%20%20%20%20%20%20%20string%5B%5D%20memory%20cmds%20%3D%20new%20string%5B%5D(2)%3B%0A%20%20%20%20%20%20%20%20cmds%5B0%5D%20%3D%20%22cat%22%3B%0A%20%20%20%20%20%20%20%20cmds%5B1%5D%20%3D%20%22address.txt%22%3B%20%2F%2F%20assume%20contains%20abi-encoded%20address.%0A%20%20%20%20%20%20%20%20bytes%20memory%20result%20%3D%20vm.ffi(cmds)%3B%0A%20%20%20%20%20%20%20%20address%20loadedAddress%20%3D%20abi.decode(result%2C%20(address))%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Do%20something%20with%20the%20address%0A%20%20%20%20%20%20%20%20%2F%2F%20...%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AAn%20address%20has%20previously%20been%20written%20to%20%60address.txt%60%2C%20and%20we%20read%20it%20in%20using%20the%20FFI%20cheatcode.%20This%20data%20can%20now%20be%20used%20throughout%20your%20test%20contract.%0A%0A%23%23%23%20Example%3A%20Differential%20Testing%20Merkle%20Tree%20Implementations%0A%0A%5BMerkle%20Trees%5D(https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FMerkle_tree)%20are%20a%20cryptographic%20commitment%20scheme%20frequently%20used%20in%20blockchain%20applications.%20Their%20popularity%20has%20led%20to%20a%20number%20of%20different%20implementations%20of%20Merkle%20Tree%20generators%2C%20provers%2C%20and%20verifiers.%20Merkle%20roots%20and%20proofs%20are%20often%20generated%20using%20a%20language%20like%20JavaScript%20or%20Python%2C%20while%20proof%20verification%20usually%20occurs%20on-chain%20in%20Solidity.%0A%0A%5BMurky%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Fmurky)%20is%20a%20complete%20implementation%20of%20Merkle%20roots%2C%20proofs%2C%20and%20verification%20in%20Solidity.%20Its%20test%20suite%20includes%20differential%20tests%20against%20OpenZeppelin's%20Merkle%20proof%20library%2C%20as%20well%20as%20root%20generation%20tests%20against%20a%20reference%20JavaScript%20implementation.%20These%20tests%20are%20powered%20by%20Foundry's%20fuzzing%20and%20%60ffi%60%20capabilities.%0A%0A%23%23%23%23%20Differential%20fuzzing%20against%20a%20reference%20TypeScript%20implementation%0A%0AUsing%20the%20%60ffi%60%20cheatcode%2C%20Murky%20tests%20its%20own%20Merkle%20root%20implementation%20against%20a%20TypeScript%20implementation%20using%20data%20provided%20by%20Forge's%20fuzzer%3A%0A%0A%60%60%60solidity%0Afunction%20testMerkleRootMatchesJSImplementationFuzzed(bytes32%5B%5D%20memory%20leaves)%20public%20%7B%0A%20%20%20%20vm.assume(leaves.length%20%3E%201)%3B%0A%20%20%20%20bytes%20memory%20packed%20%3D%20abi.encodePacked(leaves)%3B%0A%20%20%20%20string%5B%5D%20memory%20runJsInputs%20%3D%20new%20string%5B%5D(8)%3B%0A%0A%20%20%20%20%2F%2F%20Build%20ffi%20command%20string%0A%20%20%20%20runJsInputs%5B0%5D%20%3D%20'npm'%3B%0A%20%20%20%20runJsInputs%5B1%5D%20%3D%20'--prefix'%3B%0A%20%20%20%20runJsInputs%5B2%5D%20%3D%20'differential_testing%2Fscripts%2F'%3B%0A%20%20%20%20runJsInputs%5B3%5D%20%3D%20'--silent'%3B%0A%20%20%20%20runJsInputs%5B4%5D%20%3D%20'run'%3B%0A%20%20%20%20runJsInputs%5B5%5D%20%3D%20'generate-root-cli'%3B%0A%20%20%20%20runJsInputs%5B6%5D%20%3D%20leaves.length.toString()%3B%0A%20%20%20%20runJsInputs%5B7%5D%20%3D%20packed.toHexString()%3B%0A%0A%20%20%20%20%2F%2F%20Run%20command%20and%20capture%20output%0A%20%20%20%20bytes%20memory%20jsResult%20%3D%20vm.ffi(runJsInputs)%3B%0A%20%20%20%20bytes32%20jsGeneratedRoot%20%3D%20abi.decode(jsResult%2C%20(bytes32))%3B%0A%0A%20%20%20%20%2F%2F%20Calculate%20root%20using%20Murky%0A%20%20%20%20bytes32%20murkyGeneratedRoot%20%3D%20m.getRoot(leaves)%3B%0A%20%20%20%20assertEq(murkyGeneratedRoot%2C%20jsGeneratedRoot)%3B%0A%7D%0A%60%60%60%0A%0A%3E%20Note%3A%20see%20%5B%60Strings2.sol%60%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Fmurky%2Fblob%2Fmain%2Fdifferential_testing%2Ftest%2Futils%2FStrings2.sol)%20in%20the%20Murky%20Repo%20for%20the%20library%20that%20enables%20%60(bytes%20memory).toHexString()%60%0A%0AForge%20runs%20%60npm%20--prefix%20differential_testing%2Fscripts%2F%20--silent%20run%20generate-root-cli%20%7BnumLeaves%7D%20%7BhexEncodedLeaves%7D%60.%20This%20calculates%20the%20Merkle%20root%20for%20the%20input%20data%20using%20the%20reference%20JavaScript%20implementation.%20The%20script%20prints%20the%20root%20to%20stdout%2C%20and%20that%20printout%20is%20captured%20as%20%60bytes%60%20in%20the%20return%20value%20of%20%60vm.ffi()%60.%0A%0AThe%20test%20then%20calculates%20the%20root%20using%20the%20Solidity%20implementation.%0A%0AFinally%2C%20the%20test%20asserts%20that%20the%20both%20roots%20are%20exactly%20equal.%20If%20they%20are%20not%20equal%2C%20the%20test%20fails.%0A%0A%23%23%23%23%20Differential%20fuzzing%20against%20OpenZeppelin's%20Merkle%20Proof%20Library%0A%0AYou%20may%20want%20to%20use%20differential%20testing%20against%20another%20Solidity%20implementation.%20In%20that%20case%2C%20%60ffi%60%20is%20not%20needed.%20Instead%2C%20the%20reference%20implementation%20is%20imported%20directly%20into%20the%20test.%0A%0A%60%60%60solidity%0Aimport%20%7BMerkleProof%7D%20from%20%22openzeppelin-contracts%2Fcontracts%2Futils%2Fcryptography%2FMerkleProof.sol%22%3B%0A%2F%2F...%0Afunction%20testCompatibilityOpenZeppelinProver(bytes32%5B%5D%20memory%20_data%2C%20uint256%20node)%20public%20%7B%0A%20%20%20%20vm.assume(_data.length%20%3E%201)%3B%0A%20%20%20%20vm.assume(node%20%3C%20_data.length)%3B%0A%20%20%20%20bytes32%20root%20%3D%20m.getRoot(_data)%3B%0A%20%20%20%20bytes32%5B%5D%20memory%20proof%20%3D%20m.getProof(_data%2C%20node)%3B%0A%20%20%20%20bytes32%20valueToProve%20%3D%20_data%5Bnode%5D%3B%0A%20%20%20%20bool%20murkyVerified%20%3D%20m.verifyProof(root%2C%20proof%2C%20valueToProve)%3B%0A%20%20%20%20bool%20ozVerified%20%3D%20MerkleProof.verify(proof%2C%20root%2C%20valueToProve)%3B%0A%20%20%20%20assertTrue(murkyVerified%20%3D%3D%20ozVerified)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20Differential%20testing%20against%20a%20known%20edge%20case%0A%0ADifferential%20tests%20are%20not%20always%20fuzzed%20--%20they%20are%20also%20useful%20for%20testing%20known%20edge%20cases.%20In%20the%20case%20of%20the%20Murky%20codebase%2C%20the%20initial%20implementation%20of%20the%20%60log2ceil%60%20function%20did%20not%20work%20for%20certain%20arrays%20whose%20lengths%20were%20close%20to%20a%20power%20of%202%20(like%20129).%20As%20a%20safety%20check%2C%20a%20test%20is%20always%20run%20against%20an%20array%20of%20this%20length%20and%20compared%20to%20the%20TypeScript%20implementation.%20You%20can%20see%20the%20full%20test%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Fmurky%2Fblob%2Fmain%2Fdifferential_testing%2Ftest%2FDifferentialTests.t.sol%23L21).%0A%0A%23%23%23%23%20Standardized%20Testing%20against%20reference%20data%0A%0AFFI%20is%20also%20useful%20for%20injecting%20reproducible%2C%20standardized%20data%20into%20the%20testing%20environment.%20In%20the%20Murky%20library%2C%20it%20is%20used%20as%20follows%3A%0A%0A%60%60%60solidity%0Abytes32%5B100%5D%20data%3B%0Auint256%5B8%5D%20leaves%20%3D%20%5B4%2C%208%2C%2015%2C%2016%2C%2023%2C%2042%2C%2069%2C%2088%5D%3B%0A%0Afunction%20setUp()%20public%20%7B%0A%20%20%20%20string%5B%5D%20memory%20inputs%20%3D%20new%20string%5B%5D(2)%3B%0A%20%20%20%20inputs%5B0%5D%20%3D%20%22cat%22%3B%0A%20%20%20%20inputs%5B1%5D%20%3D%20%22src%2Ftest%2Fstandard_data%2FStandardInput.txt%22%3B%0A%20%20%20%20bytes%20memory%20result%20%3D%20%20vm.ffi(inputs)%3B%0A%20%20%20%20data%20%3D%20abi.decode(result%2C%20(bytes32%5B100%5D))%3B%0A%20%20%20%20m%20%3D%20new%20Merkle()%3B%0A%7D%0A%0Afunction%20testMerkleGenerateProofStandard()%20public%20view%20%7B%0A%20%20%20%20bytes32%5B%5D%20memory%20_data%20%3D%20_getData()%3B%0A%20%20%20%20for%20(uint%20i%20%3D%200%3B%20i%20%3C%20leaves.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20m.getProof(_data%2C%20leaves%5Bi%5D)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%60src%2Ftest%2Fstandard_data%2FStandardInput.txt%60%20is%20a%20text%20file%20that%20contains%20an%20encoded%20%60bytes32%5B100%5D%60%20array.%20It's%20generated%20outside%20of%20the%20test%20and%20can%20be%20used%20in%20any%20language's%20Web3%20SDK.%20It%20looks%20something%20like%3A%0A%0A%60%60%60bash%0A0xf910ccaa307836354233316666386231414464306335333243453944383735313..423532%0A%60%60%60%0A%0AThe%20standardized%20testing%20contract%20reads%20in%20the%20file%20using%20%60ffi%60.%20It%20decodes%20the%20data%20into%20an%20array%20and%20then%2C%20in%20this%20example%2C%20generates%20proofs%20for%208%20different%20leaves.%20Because%20the%20data%20is%20constant%20and%20standard%2C%20we%20can%20meaningfully%20measure%20gas%20and%20performance%20improvements%20using%20this%20test.%0A%0A%3E%20Of%20course%2C%20one%20could%20just%20hardcode%20the%20array%20into%20the%20test!%20But%20that%20makes%20it%20much%20harder%20to%20do%20consistent%20testing%20across%20contracts%2C%20implementations%2C%20etc.%0A%0A%23%23%23%20Example%3A%20Differential%20Testing%20Gradual%20Dutch%20Auctions%0A%0AThe%20reference%20implementation%20for%20Paradigm's%20%5BGradual%20Dutch%20Auction%5D(https%3A%2F%2Fwww.paradigm.xyz%2F2022%2F04%2Fgda)%20mechanism%20contains%20a%20number%20of%20differential%2C%20fuzzed%20tests.%20It%20is%20an%20excellent%20repository%20to%20further%20explore%20differential%20testing%20using%20%60ffi%60.%0A%0A-%20Differential%20tests%20for%20%5BDiscrete%20GDAs%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction%2Fblob%2Fmaster%2Fsrc%2Ftest%2FDiscreteGDA.t.sol%23L78)%0A-%20Differential%20tests%20for%20%5BContinuous%20GDAs%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction%2Fblob%2Fmaster%2Fsrc%2Ftest%2FContinuousGDA.t.sol%23L89)%0A-%20Reference%20%5BPython%20implementation%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction%2Fblob%2Fmaster%2Fanalysis%2Fcompute_price.py)%0A%0A%23%23%23%20Reference%20Repositories%0A%0A-%20%5BGradual%20Dutch%20Auctions%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction)%0A-%20%5BMurky%5D(https%3A%2F%2Fwww.github.com%2Fdmfxyz%2Fmurky)%0A-%20%5BSolidity%20Fuzzing%20Template%5D(https%3A%2F%2Fgithub.com%2Fpatrickd-%2Fsolidity-fuzzing-boilerplate)%0A%0AIf%20you%20have%20another%20repository%20that%20would%20serve%20as%20a%20reference%2C%20please%20contribute%20it!%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./differential-ffi-testing-DHfAOxu8.js"),__vite__mapDeps([158,1])),path:"/forge/advanced-testing/differential-ffi-testing.html",type:"mdx",filePath:"forge/advanced-testing/differential-ffi-testing.md",content:"---%0Adescription%3A%20Compare%20multiple%20implementations%20using%20differential%20testing%20and%20FFI%20to%20validate%20correctness%20against%20reference%20implementations.%0A---%0A%0A%23%23%20Differential%20Testing%0A%0AForge%20can%20be%20used%20for%20differential%20testing%20and%20differential%20fuzzing.%20You%20can%20even%20test%20against%20non-EVM%20executables%20using%20the%20%60ffi%60%20%5Bcheatcode%5D(%2Freference%2Fcheatcodes%2Fffi).%0A%0A%23%23%23%20Background%0A%0A%5BDifferential%20testing%5D(https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FDifferential_testing)%20cross%20references%20multiple%20implementations%20of%20the%20same%20function%20by%20comparing%20each%20one's%20output.%20Imagine%20we%20have%20a%20function%20specification%20%60F(X)%60%2C%20and%20two%20implementations%20of%20that%20specification%3A%20%60f1(X)%60%20and%20%60f2(X)%60.%20We%20expect%20%60f1(x)%20%3D%3D%20f2(x)%60%20for%20all%20x%20that%20exist%20in%20an%20appropriate%20input%20space.%20If%20%60f1(x)%20!%3D%20f2(x)%60%2C%20we%20know%20that%20at%20least%20one%20function%20is%20incorrectly%20implementing%20%60F(X)%60.%20This%20process%20of%20testing%20for%20equality%20and%20identifying%20discrepancies%20is%20the%20core%20of%20differential%20testing.%0A%0ADifferential%20fuzzing%20is%20an%20extension%20of%20differential%20testing.%20Differential%20fuzzing%20programmatically%20generates%20many%20values%20of%20%60x%60%20to%20find%20discrepancies%20and%20edge%20cases%20that%20manually%20chosen%20inputs%20might%20not%20reveal.%0A%0A%3E%20Note%3A%20the%20%60%3D%3D%60%20operator%20in%20this%20case%20can%20be%20a%20custom%20definition%20of%20equality.%20For%20example%2C%20if%20testing%20floating%20point%20implementations%2C%20you%20might%20use%20approximate%20equality%20with%20a%20certain%20tolerance.%0A%0ASome%20real%20life%20uses%20of%20this%20type%20of%20testing%20include%3A%0A%0A-%20Comparing%20upgraded%20implementations%20to%20their%20predecessors%0A-%20Testing%20code%20against%20known%20reference%20implementations%0A-%20Confirming%20compatibility%20with%20third%20party%20tools%20and%20dependencies%0A%0ABelow%20are%20some%20examples%20of%20how%20Forge%20is%20used%20for%20differential%20testing.%0A%0A%23%23%23%20Primer%3A%20The%20%60ffi%60%20cheatcode%0A%0A%5B%60ffi%60%5D(%2Freference%2Fcheatcodes%2Fffi)%20allows%20you%20to%20execute%20an%20arbitrary%20shell%20command%20and%20capture%20the%20output.%20Here's%20a%20mock%20example%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20TestContract%20is%20Test%20%7B%0A%0A%20%20%20%20function%20testMyFFI%20()%20public%20%7B%0A%20%20%20%20%20%20%20%20string%5B%5D%20memory%20cmds%20%3D%20new%20string%5B%5D(2)%3B%0A%20%20%20%20%20%20%20%20cmds%5B0%5D%20%3D%20%22cat%22%3B%0A%20%20%20%20%20%20%20%20cmds%5B1%5D%20%3D%20%22address.txt%22%3B%20%2F%2F%20assume%20contains%20abi-encoded%20address.%0A%20%20%20%20%20%20%20%20bytes%20memory%20result%20%3D%20vm.ffi(cmds)%3B%0A%20%20%20%20%20%20%20%20address%20loadedAddress%20%3D%20abi.decode(result%2C%20(address))%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Do%20something%20with%20the%20address%0A%20%20%20%20%20%20%20%20%2F%2F%20...%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AAn%20address%20has%20previously%20been%20written%20to%20%60address.txt%60%2C%20and%20we%20read%20it%20in%20using%20the%20FFI%20cheatcode.%20This%20data%20can%20now%20be%20used%20throughout%20your%20test%20contract.%0A%0A%23%23%23%20Example%3A%20Differential%20Testing%20Merkle%20Tree%20Implementations%0A%0A%5BMerkle%20Trees%5D(https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FMerkle_tree)%20are%20a%20cryptographic%20commitment%20scheme%20frequently%20used%20in%20blockchain%20applications.%20Their%20popularity%20has%20led%20to%20a%20number%20of%20different%20implementations%20of%20Merkle%20Tree%20generators%2C%20provers%2C%20and%20verifiers.%20Merkle%20roots%20and%20proofs%20are%20often%20generated%20using%20a%20language%20like%20JavaScript%20or%20Python%2C%20while%20proof%20verification%20usually%20occurs%20on-chain%20in%20Solidity.%0A%0A%5BMurky%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Fmurky)%20is%20a%20complete%20implementation%20of%20Merkle%20roots%2C%20proofs%2C%20and%20verification%20in%20Solidity.%20Its%20test%20suite%20includes%20differential%20tests%20against%20OpenZeppelin's%20Merkle%20proof%20library%2C%20as%20well%20as%20root%20generation%20tests%20against%20a%20reference%20JavaScript%20implementation.%20These%20tests%20are%20powered%20by%20Foundry's%20fuzzing%20and%20%60ffi%60%20capabilities.%0A%0A%23%23%23%23%20Differential%20fuzzing%20against%20a%20reference%20TypeScript%20implementation%0A%0AUsing%20the%20%60ffi%60%20cheatcode%2C%20Murky%20tests%20its%20own%20Merkle%20root%20implementation%20against%20a%20TypeScript%20implementation%20using%20data%20provided%20by%20Forge's%20fuzzer%3A%0A%0A%60%60%60solidity%0Afunction%20testMerkleRootMatchesJSImplementationFuzzed(bytes32%5B%5D%20memory%20leaves)%20public%20%7B%0A%20%20%20%20vm.assume(leaves.length%20%3E%201)%3B%0A%20%20%20%20bytes%20memory%20packed%20%3D%20abi.encodePacked(leaves)%3B%0A%20%20%20%20string%5B%5D%20memory%20runJsInputs%20%3D%20new%20string%5B%5D(8)%3B%0A%0A%20%20%20%20%2F%2F%20Build%20ffi%20command%20string%0A%20%20%20%20runJsInputs%5B0%5D%20%3D%20'npm'%3B%0A%20%20%20%20runJsInputs%5B1%5D%20%3D%20'--prefix'%3B%0A%20%20%20%20runJsInputs%5B2%5D%20%3D%20'differential_testing%2Fscripts%2F'%3B%0A%20%20%20%20runJsInputs%5B3%5D%20%3D%20'--silent'%3B%0A%20%20%20%20runJsInputs%5B4%5D%20%3D%20'run'%3B%0A%20%20%20%20runJsInputs%5B5%5D%20%3D%20'generate-root-cli'%3B%0A%20%20%20%20runJsInputs%5B6%5D%20%3D%20leaves.length.toString()%3B%0A%20%20%20%20runJsInputs%5B7%5D%20%3D%20packed.toHexString()%3B%0A%0A%20%20%20%20%2F%2F%20Run%20command%20and%20capture%20output%0A%20%20%20%20bytes%20memory%20jsResult%20%3D%20vm.ffi(runJsInputs)%3B%0A%20%20%20%20bytes32%20jsGeneratedRoot%20%3D%20abi.decode(jsResult%2C%20(bytes32))%3B%0A%0A%20%20%20%20%2F%2F%20Calculate%20root%20using%20Murky%0A%20%20%20%20bytes32%20murkyGeneratedRoot%20%3D%20m.getRoot(leaves)%3B%0A%20%20%20%20assertEq(murkyGeneratedRoot%2C%20jsGeneratedRoot)%3B%0A%7D%0A%60%60%60%0A%0A%3E%20Note%3A%20see%20%5B%60Strings2.sol%60%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Fmurky%2Fblob%2Fmain%2Fdifferential_testing%2Ftest%2Futils%2FStrings2.sol)%20in%20the%20Murky%20Repo%20for%20the%20library%20that%20enables%20%60(bytes%20memory).toHexString()%60%0A%0AForge%20runs%20%60npm%20--prefix%20differential_testing%2Fscripts%2F%20--silent%20run%20generate-root-cli%20%7BnumLeaves%7D%20%7BhexEncodedLeaves%7D%60.%20This%20calculates%20the%20Merkle%20root%20for%20the%20input%20data%20using%20the%20reference%20JavaScript%20implementation.%20The%20script%20prints%20the%20root%20to%20stdout%2C%20and%20that%20printout%20is%20captured%20as%20%60bytes%60%20in%20the%20return%20value%20of%20%60vm.ffi()%60.%0A%0AThe%20test%20then%20calculates%20the%20root%20using%20the%20Solidity%20implementation.%0A%0AFinally%2C%20the%20test%20asserts%20that%20the%20both%20roots%20are%20exactly%20equal.%20If%20they%20are%20not%20equal%2C%20the%20test%20fails.%0A%0A%23%23%23%23%20Differential%20fuzzing%20against%20OpenZeppelin's%20Merkle%20Proof%20Library%0A%0AYou%20may%20want%20to%20use%20differential%20testing%20against%20another%20Solidity%20implementation.%20In%20that%20case%2C%20%60ffi%60%20is%20not%20needed.%20Instead%2C%20the%20reference%20implementation%20is%20imported%20directly%20into%20the%20test.%0A%0A%60%60%60solidity%0Aimport%20%7BMerkleProof%7D%20from%20%22openzeppelin-contracts%2Fcontracts%2Futils%2Fcryptography%2FMerkleProof.sol%22%3B%0A%2F%2F...%0Afunction%20testCompatibilityOpenZeppelinProver(bytes32%5B%5D%20memory%20_data%2C%20uint256%20node)%20public%20%7B%0A%20%20%20%20vm.assume(_data.length%20%3E%201)%3B%0A%20%20%20%20vm.assume(node%20%3C%20_data.length)%3B%0A%20%20%20%20bytes32%20root%20%3D%20m.getRoot(_data)%3B%0A%20%20%20%20bytes32%5B%5D%20memory%20proof%20%3D%20m.getProof(_data%2C%20node)%3B%0A%20%20%20%20bytes32%20valueToProve%20%3D%20_data%5Bnode%5D%3B%0A%20%20%20%20bool%20murkyVerified%20%3D%20m.verifyProof(root%2C%20proof%2C%20valueToProve)%3B%0A%20%20%20%20bool%20ozVerified%20%3D%20MerkleProof.verify(proof%2C%20root%2C%20valueToProve)%3B%0A%20%20%20%20assertTrue(murkyVerified%20%3D%3D%20ozVerified)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20Differential%20testing%20against%20a%20known%20edge%20case%0A%0ADifferential%20tests%20are%20not%20always%20fuzzed%20--%20they%20are%20also%20useful%20for%20testing%20known%20edge%20cases.%20In%20the%20case%20of%20the%20Murky%20codebase%2C%20the%20initial%20implementation%20of%20the%20%60log2ceil%60%20function%20did%20not%20work%20for%20certain%20arrays%20whose%20lengths%20were%20close%20to%20a%20power%20of%202%20(like%20129).%20As%20a%20safety%20check%2C%20a%20test%20is%20always%20run%20against%20an%20array%20of%20this%20length%20and%20compared%20to%20the%20TypeScript%20implementation.%20You%20can%20see%20the%20full%20test%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Fdmfxyz%2Fmurky%2Fblob%2Fmain%2Fdifferential_testing%2Ftest%2FDifferentialTests.t.sol%23L21).%0A%0A%23%23%23%23%20Standardized%20Testing%20against%20reference%20data%0A%0AFFI%20is%20also%20useful%20for%20injecting%20reproducible%2C%20standardized%20data%20into%20the%20testing%20environment.%20In%20the%20Murky%20library%2C%20it%20is%20used%20as%20follows%3A%0A%0A%60%60%60solidity%0Abytes32%5B100%5D%20data%3B%0Auint256%5B8%5D%20leaves%20%3D%20%5B4%2C%208%2C%2015%2C%2016%2C%2023%2C%2042%2C%2069%2C%2088%5D%3B%0A%0Afunction%20setUp()%20public%20%7B%0A%20%20%20%20string%5B%5D%20memory%20inputs%20%3D%20new%20string%5B%5D(2)%3B%0A%20%20%20%20inputs%5B0%5D%20%3D%20%22cat%22%3B%0A%20%20%20%20inputs%5B1%5D%20%3D%20%22src%2Ftest%2Fstandard_data%2FStandardInput.txt%22%3B%0A%20%20%20%20bytes%20memory%20result%20%3D%20%20vm.ffi(inputs)%3B%0A%20%20%20%20data%20%3D%20abi.decode(result%2C%20(bytes32%5B100%5D))%3B%0A%20%20%20%20m%20%3D%20new%20Merkle()%3B%0A%7D%0A%0Afunction%20testMerkleGenerateProofStandard()%20public%20view%20%7B%0A%20%20%20%20bytes32%5B%5D%20memory%20_data%20%3D%20_getData()%3B%0A%20%20%20%20for%20(uint%20i%20%3D%200%3B%20i%20%3C%20leaves.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20m.getProof(_data%2C%20leaves%5Bi%5D)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%60src%2Ftest%2Fstandard_data%2FStandardInput.txt%60%20is%20a%20text%20file%20that%20contains%20an%20encoded%20%60bytes32%5B100%5D%60%20array.%20It's%20generated%20outside%20of%20the%20test%20and%20can%20be%20used%20in%20any%20language's%20Web3%20SDK.%20It%20looks%20something%20like%3A%0A%0A%60%60%60bash%0A0xf910ccaa307836354233316666386231414464306335333243453944383735313..423532%0A%60%60%60%0A%0AThe%20standardized%20testing%20contract%20reads%20in%20the%20file%20using%20%60ffi%60.%20It%20decodes%20the%20data%20into%20an%20array%20and%20then%2C%20in%20this%20example%2C%20generates%20proofs%20for%208%20different%20leaves.%20Because%20the%20data%20is%20constant%20and%20standard%2C%20we%20can%20meaningfully%20measure%20gas%20and%20performance%20improvements%20using%20this%20test.%0A%0A%3E%20Of%20course%2C%20one%20could%20just%20hardcode%20the%20array%20into%20the%20test!%20But%20that%20makes%20it%20much%20harder%20to%20do%20consistent%20testing%20across%20contracts%2C%20implementations%2C%20etc.%0A%0A%23%23%23%20Example%3A%20Differential%20Testing%20Gradual%20Dutch%20Auctions%0A%0AThe%20reference%20implementation%20for%20Paradigm's%20%5BGradual%20Dutch%20Auction%5D(https%3A%2F%2Fwww.paradigm.xyz%2F2022%2F04%2Fgda)%20mechanism%20contains%20a%20number%20of%20differential%2C%20fuzzed%20tests.%20It%20is%20an%20excellent%20repository%20to%20further%20explore%20differential%20testing%20using%20%60ffi%60.%0A%0A-%20Differential%20tests%20for%20%5BDiscrete%20GDAs%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction%2Fblob%2Fmaster%2Fsrc%2Ftest%2FDiscreteGDA.t.sol%23L78)%0A-%20Differential%20tests%20for%20%5BContinuous%20GDAs%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction%2Fblob%2Fmaster%2Fsrc%2Ftest%2FContinuousGDA.t.sol%23L89)%0A-%20Reference%20%5BPython%20implementation%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction%2Fblob%2Fmaster%2Fanalysis%2Fcompute_price.py)%0A%0A%23%23%23%20Reference%20Repositories%0A%0A-%20%5BGradual%20Dutch%20Auctions%5D(https%3A%2F%2Fgithub.com%2FFrankieIsLost%2Fgradual-dutch-auction)%0A-%20%5BMurky%5D(https%3A%2F%2Fwww.github.com%2Fdmfxyz%2Fmurky)%0A-%20%5BSolidity%20Fuzzing%20Template%5D(https%3A%2F%2Fgithub.com%2Fpatrickd-%2Fsolidity-fuzzing-boilerplate)%0A%0AIf%20you%20have%20another%20repository%20that%20would%20serve%20as%20a%20reference%2C%20please%20contribute%20it!%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fuzz-testing-BqetK0Ro.js"),__vite__mapDeps([159,1])),path:"/forge/advanced-testing/fuzz-testing",type:"mdx",filePath:"forge/advanced-testing/fuzz-testing.md",content:"---%0Adescription%3A%20Property-based%20testing%20with%20randomized%20inputs%20to%20test%20general%20behaviors%20and%20edge%20cases%20in%20smart%20contracts.%0A---%0A%0A%23%23%20Fuzz%20Testing%0A%0AForge%20supports%20property%20based%20testing.%0A%0AProperty-based%20testing%20is%20a%20way%20of%20testing%20general%20behaviors%20as%20opposed%20to%20isolated%20scenarios.%0A%0ALet's%20examine%20what%20that%20means%20by%20writing%20a%20unit%20test%2C%20finding%20the%20general%20property%20we%20are%20testing%20for%2C%20and%20converting%20it%20to%20a%20property-based%20test%20instead%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.1%3Aall%5D%0A%60%60%60%0A%0ARunning%20the%20test%2C%20we%20see%20it%20passes%3A%0A%0A%60%60%60bash%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ffuzz_testing%2Fforge-test-no-fuzz%3Aall%5D%0A%60%60%60%0A%0AThis%20unit%20test%20_does%20test_%20that%20we%20can%20withdraw%20ether%20from%20our%20safe.%20However%2C%20who%20is%20to%20say%20that%20it%20works%20for%20all%20amounts%2C%20not%20just%201%20ether%3F%0A%0AThe%20general%20property%20here%20is%3A%20given%20a%20safe%20balance%2C%20when%20we%20withdraw%2C%20we%20should%20get%20whatever%20is%20in%20the%20safe.%0A%0AForge%20will%20run%20any%20test%20that%20takes%20at%20least%20one%20parameter%20as%20a%20property-based%20test%2C%20so%20let's%20rewrite%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.2%3Acontract_prelude%5D%0A%20%20%20%20%2F%2F%20...%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.2%3Atest%5D%0A%7D%0A%60%60%60%0A%0AIf%20we%20run%20the%20test%20now%2C%20we%20can%20see%20that%20Forge%20runs%20the%20property-based%20test%2C%20but%20it%20fails%20for%20high%20values%20of%20%60amount%60%3A%0A%0A%60%60%60sh%0Aforge%20test%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ffuzz_testing%2Fforge-test-fail-fuzz%3Aoutput%5D%0A%60%60%60%0A%0AThe%20default%20amount%20of%20ether%20that%20the%20test%20contract%20is%20given%20is%20%602**96%20wei%60%20(as%20in%20DappTools)%2C%20so%20we%20have%20to%20restrict%20the%20type%20of%20amount%20to%20%60uint96%60%20to%20make%20sure%20we%20don't%20try%20to%20send%20more%20than%20we%20have%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.3%3Asignature%5D%0A%60%60%60%0A%0AAnd%20now%20it%20passes%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ffuzz_testing%2Fforge-test-success-fuzz%3Aall%5D%0A%60%60%60%0A%0AYou%20may%20want%20to%20exclude%20certain%20cases%20using%20the%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume)%20cheatcode.%20In%20those%20cases%2C%20fuzzer%20will%20discard%20the%20inputs%20and%20start%20a%20new%20fuzz%20run%3A%0A%0A%60%60%60solidity%0Afunction%20testFuzz_Withdraw(uint96%20amount)%20public%20%7B%0A%20%20%20%20vm.assume(amount%20%3E%200.1%20ether)%3B%0A%20%20%20%20%2F%2F%20snip%0A%7D%0A%60%60%60%0A%0AThere%20are%20different%20ways%20to%20run%20property-based%20tests%2C%20notably%20parametric%20testing%20and%20fuzzing.%20Forge%20only%20supports%20fuzzing.%0A%0A%23%23%23%20Interpreting%20results%0A%0AYou%20might%20have%20noticed%20that%20fuzz%20tests%20are%20summarized%20a%20bit%20differently%20compared%20to%20unit%20tests%3A%0A%0A-%20%22runs%22%20refers%20to%20the%20amount%20of%20scenarios%20the%20fuzzer%20tested.%20By%20default%2C%20the%20fuzzer%20will%20generate%20256%20scenarios%2C%20but%20this%20and%20other%20test%20execution%20parameters%20can%20be%20setup%20by%20the%20user.%20Fuzzer%20configuration%20details%20are%20provided%20%5B%60here%60%5D(%23configuring-fuzz-test-execution).%0A-%20%22%CE%BC%22%20(Greek%20letter%20mu)%20is%20the%20mean%20gas%20used%20across%20all%20fuzz%20runs%0A-%20%22~%22%20(tilde)%20is%20the%20median%20gas%20used%20across%20all%20fuzz%20runs%0A%0A%23%23%23%20Configuring%20fuzz%20test%20execution%0A%0AFuzz%20tests%20execution%20is%20governed%20by%20parameters%20that%20can%20be%20controlled%20by%20users%20via%20Forge%20configuration%20primitives.%20Configs%20can%20be%20applied%20globally%20or%20on%20a%20per-test%20basis.%20For%20details%20on%20this%20topic%20please%20refer%20to%0A%F0%9F%93%9A%20%5B%60Global%20config%60%5D(%2Fconfig%2Freference%2Foverview)%20and%20%F0%9F%93%9A%20%5B%60In-line%20config%60%5D(%2Fconfig%2Freference%2Finline-test-config).%0A%0A%23%23%23%23%20Fuzz%20test%20fixtures%0A%0AFuzz%20test%20fixtures%20can%20be%20defined%20when%20you%20want%20to%20make%20sure%20a%20certain%20set%20of%20values%20is%20used%20as%20inputs%20for%20fuzzed%20parameters.%0AThese%20fixtures%20can%20be%20declared%20in%20tests%20as%3A%0A%0A-%20storage%20arrays%20prefixed%20with%20%60fixture%60%20and%20followed%20by%20param%20name%20to%20be%20fuzzed.%20For%20example%2C%20fixtures%20to%20be%20used%20when%20fuzzing%20parameter%20%60amount%60%20of%20type%20%60uint32%60%20can%20be%20defined%20as%0A%0A%60%60%60solidity%0Auint32%5B%5D%20public%20fixtureAmount%20%3D%20%5B1%2C%205%2C%20555%5D%3B%0A%60%60%60%0A%0A-%20functions%20named%20with%20%60fixture%60%20prefix%2C%20followed%20by%20param%20name%20to%20be%20fuzzed.%20Function%20should%20return%20an%20(fixed%20size%20or%20dynamic)%20array%20of%20values%20to%20be%20used%20for%20fuzzing.%20For%20example%2C%20fixtures%20to%20be%20used%20when%20fuzzing%20parameter%20named%20%60owner%60%20of%20type%20%60address%60%20can%20be%20defined%20in%20a%20function%20with%20signature%0A%0A%60%60%60solidity%0Afunction%20fixtureOwner()%20public%20returns%20(address%5B%5D%20memory)%0A%60%60%60%0A%0AIf%20the%20type%20of%20value%20provided%20as%20a%20fixture%20is%20not%20the%20same%20type%20as%20the%20named%20parameter%20to%20be%20fuzzed%20then%20it%20is%20rejected%20and%20an%20error%20is%20raised.%0A%0AAn%20example%20where%20fixture%20could%20be%20used%20is%20to%20reproduce%20the%20%60DSChief%60%20vulnerability.%20Consider%20the%202%20functions%0A%0A%60%60%60solidity%0A%20%20%20%20function%20etch(address%20yay)%20public%20returns%20(bytes32%20slate)%20%7B%0A%20%20%20%20%20%20%20%20bytes32%20hash%20%3D%20keccak256(abi.encodePacked(yay))%3B%0A%0A%20%20%20%20%20%20%20%20slates%5Bhash%5D%20%3D%20yay%3B%0A%0A%20%20%20%20%20%20%20%20return%20hash%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20voteSlate(bytes32%20slate)%20public%20%7B%0A%20%20%20%20%20%20%20%20uint%20weight%20%3D%20deposits%5Bmsg.sender%5D%3B%0A%20%20%20%20%20%20%20%20subWeight(weight%2C%20votes%5Bmsg.sender%5D)%3B%0A%20%20%20%20%20%20%20%20votes%5Bmsg.sender%5D%20%3D%20slate%3B%0A%20%20%20%20%20%20%20%20addWeight(weight%2C%20votes%5Bmsg.sender%5D)%3B%0A%20%20%20%20%7D%0A%60%60%60%0A%0Awhere%20the%20vulnerability%20can%20be%20reproduced%20by%20calling%20%60voteSlate%60%20before%20%60etch%60%2C%20with%20%60slate%60%20value%20being%20a%20hash%20of%20%60yay%60%20address.%0ATo%20make%20sure%20fuzzer%20includes%20in%20the%20same%20run%20a%20%60slate%60%20value%20derived%20from%20a%20%60yay%60%20address%2C%20following%20fixtures%20can%20be%20defined%3A%0A%0A%60%60%60solidity%0A%20%20%20%20address%5B%5D%20public%20fixtureYay%20%3D%20%5B%0A%20%20%20%20%20%20%20%20makeAddr(%22yay1%22)%2C%0A%20%20%20%20%20%20%20%20makeAddr(%22yay2%22)%2C%0A%20%20%20%20%20%20%20%20makeAddr(%22yay3%22)%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20bytes32%5B%5D%20public%20fixtureSlate%20%3D%20%5B%0A%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(makeAddr(%22yay1%22)))%2C%0A%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(makeAddr(%22yay2%22)))%2C%0A%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(makeAddr(%22yay3%22)))%0A%20%20%20%20%5D%3B%0A%60%60%60%0A%0AFollowing%20image%20shows%20how%20fuzzer%20generates%20values%20with%20and%20without%20fixtures%20being%20declared%3A%0A%0A!%5BFuzzer%5D(%2Ffuzzer.png)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fuzz-testing-BqetK0Ro.js"),__vite__mapDeps([159,1])),path:"/forge/advanced-testing/fuzz-testing.html",type:"mdx",filePath:"forge/advanced-testing/fuzz-testing.md",content:"---%0Adescription%3A%20Property-based%20testing%20with%20randomized%20inputs%20to%20test%20general%20behaviors%20and%20edge%20cases%20in%20smart%20contracts.%0A---%0A%0A%23%23%20Fuzz%20Testing%0A%0AForge%20supports%20property%20based%20testing.%0A%0AProperty-based%20testing%20is%20a%20way%20of%20testing%20general%20behaviors%20as%20opposed%20to%20isolated%20scenarios.%0A%0ALet's%20examine%20what%20that%20means%20by%20writing%20a%20unit%20test%2C%20finding%20the%20general%20property%20we%20are%20testing%20for%2C%20and%20converting%20it%20to%20a%20property-based%20test%20instead%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.1%3Aall%5D%0A%60%60%60%0A%0ARunning%20the%20test%2C%20we%20see%20it%20passes%3A%0A%0A%60%60%60bash%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ffuzz_testing%2Fforge-test-no-fuzz%3Aall%5D%0A%60%60%60%0A%0AThis%20unit%20test%20_does%20test_%20that%20we%20can%20withdraw%20ether%20from%20our%20safe.%20However%2C%20who%20is%20to%20say%20that%20it%20works%20for%20all%20amounts%2C%20not%20just%201%20ether%3F%0A%0AThe%20general%20property%20here%20is%3A%20given%20a%20safe%20balance%2C%20when%20we%20withdraw%2C%20we%20should%20get%20whatever%20is%20in%20the%20safe.%0A%0AForge%20will%20run%20any%20test%20that%20takes%20at%20least%20one%20parameter%20as%20a%20property-based%20test%2C%20so%20let's%20rewrite%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.2%3Acontract_prelude%5D%0A%20%20%20%20%2F%2F%20...%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.2%3Atest%5D%0A%7D%0A%60%60%60%0A%0AIf%20we%20run%20the%20test%20now%2C%20we%20can%20see%20that%20Forge%20runs%20the%20property-based%20test%2C%20but%20it%20fails%20for%20high%20values%20of%20%60amount%60%3A%0A%0A%60%60%60sh%0Aforge%20test%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ffuzz_testing%2Fforge-test-fail-fuzz%3Aoutput%5D%0A%60%60%60%0A%0AThe%20default%20amount%20of%20ether%20that%20the%20test%20contract%20is%20given%20is%20%602**96%20wei%60%20(as%20in%20DappTools)%2C%20so%20we%20have%20to%20restrict%20the%20type%20of%20amount%20to%20%60uint96%60%20to%20make%20sure%20we%20don't%20try%20to%20send%20more%20than%20we%20have%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Ffuzz_testing%2Ftest%2FSafe.t.sol.3%3Asignature%5D%0A%60%60%60%0A%0AAnd%20now%20it%20passes%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ffuzz_testing%2Fforge-test-success-fuzz%3Aall%5D%0A%60%60%60%0A%0AYou%20may%20want%20to%20exclude%20certain%20cases%20using%20the%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume)%20cheatcode.%20In%20those%20cases%2C%20fuzzer%20will%20discard%20the%20inputs%20and%20start%20a%20new%20fuzz%20run%3A%0A%0A%60%60%60solidity%0Afunction%20testFuzz_Withdraw(uint96%20amount)%20public%20%7B%0A%20%20%20%20vm.assume(amount%20%3E%200.1%20ether)%3B%0A%20%20%20%20%2F%2F%20snip%0A%7D%0A%60%60%60%0A%0AThere%20are%20different%20ways%20to%20run%20property-based%20tests%2C%20notably%20parametric%20testing%20and%20fuzzing.%20Forge%20only%20supports%20fuzzing.%0A%0A%23%23%23%20Interpreting%20results%0A%0AYou%20might%20have%20noticed%20that%20fuzz%20tests%20are%20summarized%20a%20bit%20differently%20compared%20to%20unit%20tests%3A%0A%0A-%20%22runs%22%20refers%20to%20the%20amount%20of%20scenarios%20the%20fuzzer%20tested.%20By%20default%2C%20the%20fuzzer%20will%20generate%20256%20scenarios%2C%20but%20this%20and%20other%20test%20execution%20parameters%20can%20be%20setup%20by%20the%20user.%20Fuzzer%20configuration%20details%20are%20provided%20%5B%60here%60%5D(%23configuring-fuzz-test-execution).%0A-%20%22%CE%BC%22%20(Greek%20letter%20mu)%20is%20the%20mean%20gas%20used%20across%20all%20fuzz%20runs%0A-%20%22~%22%20(tilde)%20is%20the%20median%20gas%20used%20across%20all%20fuzz%20runs%0A%0A%23%23%23%20Configuring%20fuzz%20test%20execution%0A%0AFuzz%20tests%20execution%20is%20governed%20by%20parameters%20that%20can%20be%20controlled%20by%20users%20via%20Forge%20configuration%20primitives.%20Configs%20can%20be%20applied%20globally%20or%20on%20a%20per-test%20basis.%20For%20details%20on%20this%20topic%20please%20refer%20to%0A%F0%9F%93%9A%20%5B%60Global%20config%60%5D(%2Fconfig%2Freference%2Foverview)%20and%20%F0%9F%93%9A%20%5B%60In-line%20config%60%5D(%2Fconfig%2Freference%2Finline-test-config).%0A%0A%23%23%23%23%20Fuzz%20test%20fixtures%0A%0AFuzz%20test%20fixtures%20can%20be%20defined%20when%20you%20want%20to%20make%20sure%20a%20certain%20set%20of%20values%20is%20used%20as%20inputs%20for%20fuzzed%20parameters.%0AThese%20fixtures%20can%20be%20declared%20in%20tests%20as%3A%0A%0A-%20storage%20arrays%20prefixed%20with%20%60fixture%60%20and%20followed%20by%20param%20name%20to%20be%20fuzzed.%20For%20example%2C%20fixtures%20to%20be%20used%20when%20fuzzing%20parameter%20%60amount%60%20of%20type%20%60uint32%60%20can%20be%20defined%20as%0A%0A%60%60%60solidity%0Auint32%5B%5D%20public%20fixtureAmount%20%3D%20%5B1%2C%205%2C%20555%5D%3B%0A%60%60%60%0A%0A-%20functions%20named%20with%20%60fixture%60%20prefix%2C%20followed%20by%20param%20name%20to%20be%20fuzzed.%20Function%20should%20return%20an%20(fixed%20size%20or%20dynamic)%20array%20of%20values%20to%20be%20used%20for%20fuzzing.%20For%20example%2C%20fixtures%20to%20be%20used%20when%20fuzzing%20parameter%20named%20%60owner%60%20of%20type%20%60address%60%20can%20be%20defined%20in%20a%20function%20with%20signature%0A%0A%60%60%60solidity%0Afunction%20fixtureOwner()%20public%20returns%20(address%5B%5D%20memory)%0A%60%60%60%0A%0AIf%20the%20type%20of%20value%20provided%20as%20a%20fixture%20is%20not%20the%20same%20type%20as%20the%20named%20parameter%20to%20be%20fuzzed%20then%20it%20is%20rejected%20and%20an%20error%20is%20raised.%0A%0AAn%20example%20where%20fixture%20could%20be%20used%20is%20to%20reproduce%20the%20%60DSChief%60%20vulnerability.%20Consider%20the%202%20functions%0A%0A%60%60%60solidity%0A%20%20%20%20function%20etch(address%20yay)%20public%20returns%20(bytes32%20slate)%20%7B%0A%20%20%20%20%20%20%20%20bytes32%20hash%20%3D%20keccak256(abi.encodePacked(yay))%3B%0A%0A%20%20%20%20%20%20%20%20slates%5Bhash%5D%20%3D%20yay%3B%0A%0A%20%20%20%20%20%20%20%20return%20hash%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20voteSlate(bytes32%20slate)%20public%20%7B%0A%20%20%20%20%20%20%20%20uint%20weight%20%3D%20deposits%5Bmsg.sender%5D%3B%0A%20%20%20%20%20%20%20%20subWeight(weight%2C%20votes%5Bmsg.sender%5D)%3B%0A%20%20%20%20%20%20%20%20votes%5Bmsg.sender%5D%20%3D%20slate%3B%0A%20%20%20%20%20%20%20%20addWeight(weight%2C%20votes%5Bmsg.sender%5D)%3B%0A%20%20%20%20%7D%0A%60%60%60%0A%0Awhere%20the%20vulnerability%20can%20be%20reproduced%20by%20calling%20%60voteSlate%60%20before%20%60etch%60%2C%20with%20%60slate%60%20value%20being%20a%20hash%20of%20%60yay%60%20address.%0ATo%20make%20sure%20fuzzer%20includes%20in%20the%20same%20run%20a%20%60slate%60%20value%20derived%20from%20a%20%60yay%60%20address%2C%20following%20fixtures%20can%20be%20defined%3A%0A%0A%60%60%60solidity%0A%20%20%20%20address%5B%5D%20public%20fixtureYay%20%3D%20%5B%0A%20%20%20%20%20%20%20%20makeAddr(%22yay1%22)%2C%0A%20%20%20%20%20%20%20%20makeAddr(%22yay2%22)%2C%0A%20%20%20%20%20%20%20%20makeAddr(%22yay3%22)%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20bytes32%5B%5D%20public%20fixtureSlate%20%3D%20%5B%0A%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(makeAddr(%22yay1%22)))%2C%0A%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(makeAddr(%22yay2%22)))%2C%0A%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(makeAddr(%22yay3%22)))%0A%20%20%20%20%5D%3B%0A%60%60%60%0A%0AFollowing%20image%20shows%20how%20fuzzer%20generates%20values%20with%20and%20without%20fixtures%20being%20declared%3A%0A%0A!%5BFuzzer%5D(%2Ffuzzer.png)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./invariant-testing-DtBeT8Hz.js"),__vite__mapDeps([160,1])),path:"/forge/advanced-testing/invariant-testing",type:"mdx",filePath:"forge/advanced-testing/invariant-testing.md",content:"---%0Adescription%3A%20Test%20protocol%20invariants%20with%20randomized%20function%20call%20sequences%20to%20find%20edge%20cases%20and%20logic%20errors.%0A---%0A%0A%23%20Invariant%20Testing%0A%0A%23%23%20Overview%0A%0AInvariant%20testing%20allows%20for%20a%20set%20of%20invariant%20expressions%20to%20be%20tested%20against%20randomized%20sequences%20of%20pre-defined%20function%20calls%20from%20pre-defined%20contracts.%20After%20each%20function%20call%20is%20performed%2C%20all%20defined%20invariants%20are%20asserted.%0A%0AInvariant%20testing%20is%20a%20powerful%20tool%20to%20expose%20incorrect%20logic%20in%20protocols.%20Due%20to%20the%20fact%20that%20function%20call%20sequences%20are%20randomized%20and%20have%20fuzzed%20inputs%2C%20invariant%20testing%20can%20expose%20false%20assumptions%20and%20incorrect%20logic%20in%20edge%20cases%20and%20highly%20complex%20protocol%20states.%0A%0AInvariant%20testing%20campaigns%20have%20two%20dimensions%2C%20%60runs%60%20and%20%60depth%60%3A%0A%0A-%20%60runs%60%3A%20Number%20of%20times%20that%20a%20sequence%20of%20function%20calls%20is%20generated%20and%20run.%0A-%20%60depth%60%3A%20Number%20of%20function%20calls%20made%20in%20a%20given%20%60run%60.%20Invariants%20are%20asserted%20after%20each%20function%20call%20is%20made.%20If%20a%20function%20call%20reverts%2C%20the%20%60depth%60%20counter%20still%20increments.%0A%0AFor%20long%20invariant%20campaigns%20a%20%60timeout%60%20(in%20seconds)%20can%20be%20set%2C%20ensuring%20test%20ends%20after%20specified%20time%20elapsed.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20When%20implementing%20invariant%20tests%20is%20important%20to%20be%20aware%20that%20for%20each%20%60invariant_*%60%20function%20a%20different%20EVM%20executor%20is%20created%2C%20therefore%20invariants%20are%20not%20asserted%20against%20same%20EVM%20state.%20This%20means%20that%20if%20%60invariant_A()%60%20and%20%60invariant_B()%60%20functions%20are%20defined%20then%20%60invariant_B()%60%20won't%20be%20asserted%20against%20EVM%20state%20of%20%60invariant_A()%60%20(and%20the%20other%20way%20around).%0A%3E%0A%3E%20If%20you%20want%20to%20assert%20all%20invariants%20at%20the%20same%20time%20then%20they%20can%20be%20grouped%20and%20run%20on%20multiple%20jobs.%20For%20example%2C%20assert%20all%20invariants%20using%20two%20jobs%20can%20be%20implemented%20as%3A%0A%3E%0A%3E%20%60%60%60Solidity%0A%3E%20function%20invariant_job1()%20public%20%7B%0A%3E%20%20%20%20assertInvariants()%3B%0A%3E%20%7D%0A%3E%0A%3E%20function%20invariant_job2()%20public%20%7B%0A%3E%20%20%20%20assertInvariants()%3B%0A%3E%20%7D%0A%3E%0A%3E%20function%20assertInvariants()%20internal%20%7B%0A%3E%20%20%20%20assertEq(val1%2C%20val2)%3B%0A%3E%20%20%20%20assertEq(val3%2C%20val4)%3B%0A%3E%20%7D%0A%3E%20%60%60%60%0A%0AThese%20and%20other%20invariant%20configuration%20aspects%20are%20explained%20%5B%60here%60%5D(%23configuring-invariant-test-execution).%0A%0ASimilar%20to%20how%20standard%20tests%20are%20run%20in%20Foundry%20by%20prefixing%20a%20function%20name%20with%20%60test%60%2C%20invariant%20tests%20are%20denoted%20by%20prefixing%20the%20function%20name%20with%20%60invariant%60%20(e.g.%2C%20%60function%20invariant_A()%60).%0A%0A%60afterInvariant()%60%20function%20is%20called%20at%20the%20end%20of%20each%20invariant%20run%20(if%20declared)%2C%20allowing%20post%20campaign%20processing.%20This%20function%20can%20be%20used%20for%20logging%20campaign%20metrics%20(e.g.%20how%20many%20times%20a%20selector%20was%20called)%20and%20post%20fuzz%20campaign%20testing%20(e.g.%20close%20out%20all%20positions%20and%20assert%20all%20funds%20are%20able%20to%20exit%20the%20system).%0A%0A%23%23%23%20Configuring%20invariant%20test%20execution%0A%0AInvariant%20tests%20execution%20is%20governed%20by%20parameters%20that%20can%20be%20controlled%20by%20users%20via%20Forge%20configuration%20primitives.%20Configs%20can%20be%20applied%20globally%20or%20on%20a%20per-test%20basis.%20For%20details%20on%20this%20topic%20please%20refer%20to%0A%F0%9F%93%9A%20%5B%60Global%20config%60%5D(%2Fconfig%2Freference%2Foverview)%20and%20%F0%9F%93%9A%20%5B%60In-line%20config%60%5D(%2Fconfig%2Freference%2Finline-test-config).%0A%0A%23%23%20Defining%20Invariants%0A%0AInvariants%20are%20conditions%20expressions%20that%20should%20always%20hold%20true%20over%20the%20course%20of%20a%20fuzzing%20campaign.%20A%20good%20invariant%20testing%20suite%20should%20have%20as%20many%20invariants%20as%20possible%2C%20and%20can%20have%20different%20testing%20suites%20for%20different%20protocol%20states.%0A%0AExamples%20of%20invariants%20are%3A%0A%0A-%20_%22The%20xy%3Dk%20formula%20always%20holds%22_%20for%20Uniswap%0A-%20_%22The%20sum%20of%20all%20user%20balances%20is%20equal%20to%20the%20total%20supply%22_%20for%20an%20ERC-20%20token.%0A%0AThere%20are%20different%20ways%20to%20assert%20invariants%2C%20as%20outlined%20in%20the%20table%20below%3A%0A%0A%3Ctable%3E%0A%3Ctr%3E%3Cth%3EType%3C%2Fth%3E%3Cth%3EExplanation%3C%2Fth%3E%3Cth%3EExample%3C%2Fth%3E%3C%2Ftr%3E%0A%0A%3Ctr%3E%0A%0A%3Ctd%3EDirect%20assertions%3C%2Ftd%3E%0A%3Ctd%3EQuery%20a%20protocol%20smart%20contract%20and%20assert%20values%20are%20as%20expected.%3C%2Ftd%3E%0A%3Ctd%3E%0A%0A%60%60%60solidity%0AassertGe(%0A%20%20%20%20token.totalAssets()%2C%0A%20%20%20%20token.totalSupply()%0A)%0A%60%60%60%0A%0A%3C%2Ftd%3E%0A%0A%3C%2Ftr%3E%0A%0A%3Ctr%3E%0A%0A%3Ctd%3EGhost%20variable%20assertions%3C%2Ftd%3E%0A%3Ctd%3EQuery%20a%20protocol%20smart%20contract%20and%20compare%20it%20against%20a%20value%20that%20has%20been%20persisted%20in%20the%20test%20environment%20(ghost%20variable).%3C%2Ftd%3E%0A%3Ctd%3E%0A%0A%60%60%60solidity%0AassertEq(%0A%20%20%20%20token.totalSupply()%2C%0A%20%20%20%20sumBalanceOf%0A)%0A%60%60%60%0A%0A%3C%2Ftd%3E%0A%0A%3C%2Ftr%3E%0A%0A%3Ctr%3E%0A%0A%3Ctd%3EDeoptimizing%20(Naive%20implementation%20assertions)%3C%2Ftd%3E%0A%3Ctd%3EQuery%20a%20protocol%20smart%20contract%20and%20compare%20it%20against%20a%20naive%20and%20typically%20highly%20gas-inefficient%20implementation%20of%20the%20same%20desired%20logic.%3C%2Ftd%3E%0A%3Ctd%3E%0A%0A%60%60%60solidity%0AassertEq(%0A%20%20%20%20pool.outstandingInterest()%2C%0A%20%20%20%20test.naiveInterest()%0A)%0A%60%60%60%0A%0A%3C%2Ftd%3E%0A%0A%3C%2Ftr%3E%0A%3C%2Ftable%3E%0A%0A%23%23%23%20Conditional%20Invariants%0A%0AInvariants%20must%20hold%20over%20the%20course%20of%20a%20given%20fuzzing%20campaign%2C%20but%20that%20doesn't%20mean%20they%20must%20hold%20true%20in%20every%20situation.%20There%20is%20the%20possibility%20for%20certain%20invariants%20to%20be%20introduced%2Fremoved%20in%20a%20given%20scenario%20(e.g.%2C%20during%20a%20liquidation).%0A%0AIt%20is%20not%20recommended%20to%20introduce%20conditional%20logic%20into%20invariant%20assertions%20because%20they%20have%20the%20possibility%20of%20introducing%20false%20positives%20because%20of%20an%20incorrect%20code%20path.%20For%20example%3A%0A%0A%60%60%60solidity%0Afunction%20invariant_example()%20external%20%7B%0A%20%20%20%20if%20(protocolCondition)%20return%3B%0A%0A%20%20%20%20assertEq(val1%2C%20val2)%3B%0A%7D%0A%60%60%60%0A%0AIn%20this%20situation%2C%20if%20%60protocolCondition%20%3D%3D%20true%60%2C%20the%20invariant%20is%20not%20asserted%20at%20all.%20Sometimes%20this%20can%20be%20desired%20behavior%2C%20but%20it%20can%20cause%20issues%20if%20the%20%60protocolCondition%60%20is%20true%20for%20the%20whole%20fuzzing%20campaign%20unexpectedly%2C%20or%20there%20is%20a%20logic%20error%20in%20the%20condition%20itself.%20For%20this%20reason%20its%20better%20to%20try%20and%20define%20an%20alternative%20invariant%20for%20that%20condition%20as%20well%2C%20for%20example%3A%0A%0A%60%60%60solidity%0Afunction%20invariant_example()%20external%20%7B%0A%20%20%20%20if%20(protocolCondition)%20%7B%0A%20%20%20%20%20%20%20%20assertLe(val1%2C%20val2)%3B%0A%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20assertEq(val1%2C%20val2)%3B%0A%7D%0A%60%60%60%0A%0AAnother%20approach%20to%20handle%20different%20invariants%20across%20protocol%20states%20is%20to%20utilize%20dedicated%20invariant%20testing%20contracts%20for%20different%20scenarios.%20These%20scenarios%20can%20be%20bootstrapped%20using%20the%20%60setUp%60%20function%2C%20but%20it%20is%20more%20powerful%20to%20leverage%20_invariant%20targets_%20to%20govern%20the%20fuzzer%20to%20behave%20in%20a%20way%20that%20will%20only%20yield%20certain%20results%20(e.g.%2C%20avoid%20liquidations).%0A%0A%23%23%20Invariant%20Targets%0A%0A**Target%20Contracts**%3A%20The%20set%20of%20contracts%20that%20will%20be%20called%20over%20the%20course%20of%20a%20given%20invariant%20test%20fuzzing%20campaign.%20This%20set%20of%20contracts%20defaults%20to%20all%20contracts%20that%20were%20deployed%20in%20the%20%60setUp%60%20function%2C%20but%20can%20be%20customized%20to%20allow%20for%20more%20advanced%20invariant%20testing.%0A%0A**Target%20Senders**%3A%20The%20invariant%20test%20fuzzer%20picks%20values%20for%20%60msg.sender%60%20at%20random%20when%20performing%20fuzz%20campaigns%20to%20simulate%20multiple%20actors%20in%20a%20system%20by%20default.%20If%20desired%2C%20the%20set%20of%20senders%20can%20be%20customized%20in%20the%20%60setUp%60%20function.%0A%0A**Target%20Interfaces**%3A%20The%20set%20of%20addresses%20and%20their%20project%20identifiers%20that%20are%20not%20deployed%20during%20%60setUp%60%20but%20fuzzed%20in%20a%20forked%20environment%20(E.g.%20%60%5B(0x1%2C%20%5B%22IERC20%22%5D)%2C%20(0x2%2C%20(%22IOwnable%22))%5D%60).%20This%20enables%20targeting%20of%20delegate%20proxies%20and%20contracts%20deployed%20with%20%60create%60%20or%20%60create2%60.%0A%0A**Target%20Selectors**%3A%20The%20set%20of%20function%20selectors%20that%20are%20used%20by%20the%20fuzzer%20for%20invariant%20testing.%20These%20can%20be%20used%20to%20use%20a%20subset%20of%20functions%20within%20a%20given%20target%20contract.%0A%0A**Target%20Artifacts**%3A%20The%20desired%20ABI%20to%20be%20used%20for%20a%20given%20contract.%20These%20can%20be%20used%20for%20proxy%20contract%20configurations.%0A%0A**Target%20Artifact%20Selectors**%3A%20The%20desired%20subset%20of%20function%20selectors%20to%20be%20used%20within%20a%20given%20ABI%20to%20be%20used%20for%20a%20given%20contract.%20These%20can%20be%20used%20for%20proxy%20contract%20configurations.%0A%0APriorities%20for%20the%20invariant%20fuzzer%20in%20the%20cases%20of%20target%20clashes%20are%3A%0A%0A%60targetInterfaces%20%7C%20targetSelectors%20%3E%20excludeSelectors%20%7C%20targetArtifactSelectors%20%3E%20excludeContracts%20%7C%20excludeArtifacts%20%3E%20targetContracts%20%7C%20targetArtifacts%60%0A%0A%23%23%23%20Function%20Call%20Probability%20Distribution%0A%0AFunctions%20from%20these%20contracts%20will%20be%20called%20at%20random%20(with%20a%20uniformly%20distributed%20probability)%20with%20fuzzed%20inputs.%0A%0AFor%20example%3A%0A%0A%60%60%60text%0AtargetContract1%3A%0A%E2%94%9C%E2%94%80%20function1%3A%2020%25%0A%E2%94%94%E2%94%80%20function2%3A%2020%25%0A%0AtargetContract2%3A%0A%E2%94%9C%E2%94%80%20function1%3A%2020%25%0A%E2%94%9C%E2%94%80%20function2%3A%2020%25%0A%E2%94%94%E2%94%80%20function3%3A%2020%25%0A%60%60%60%0A%0AThis%20is%20something%20to%20be%20mindful%20of%20when%20designing%20target%20contracts%2C%20as%20target%20contracts%20with%20less%20functions%20will%20have%20each%20function%20called%20more%20often%20due%20to%20this%20probability%20distribution.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20A%20good%20practice%20is%20to%20set%20%60show_metrics%20%3D%20true%60%20in%20order%20to%20get%20a%20breakdown%20of%20all%20handler%20function%20calls%20and%20which%20functions%20are%20reverting%2Fgetting%20discarded%20(through%20%60vm.assume%60%20cheatcode).%0A%0A%23%23%23%20Invariant%20Test%20Helper%20Functions%0A%0AInvariant%20test%20helper%20functions%20are%20included%20in%20%5B%60forge-std%60%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FStdInvariant.sol)%20to%20allow%20for%20configurable%20invariant%20test%20setup.%20The%20helper%20functions%20are%20outlined%20below%3A%0A%0A%7C%20Function%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20DescriptionexcludeContract(address%20newExcludedContract_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_excludedContracts%60%20array.%20This%20set%20of%20contracts%20is%20explicitly%20excluded%20from%20the%20target%20contractsexcludeSelector(FuzzSelector%20memory%20newExcludedSelector_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20%60FuzzSelector%60%20to%20the%20%60_excludedSelectors%60%20array.%20This%20set%20of%20%60FuzzSelector%60s%20is%20explicitly%20excluded%20from%20the%20target%20contract%20selectorsexcludeSender(address%20newExcludedSender_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_excludedSenders%60%20array.%20This%20set%20of%20addresses%20is%20explicitly%20excluded%20from%20the%20target%20sendersexcludeArtifact(string%20memory%20newExcludedArtifact_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20string%20to%20the%20%60_excludedArtifacts%60%20array.%20This%20set%20of%20strings%20is%20explicitly%20excluded%20from%20the%20target%20artifactstargetArtifact(string%20memory%20newTargetedArtifact_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20string%20to%20the%20%60_targetedArtifacts%60%20array.%20This%20set%20of%20strings%20is%20used%20for%20the%20target%20artifactstargetArtifactSelector(FuzzArtifactSelector%20memory%20newTargetedArtifactSelector_)%60%20%7C%20Adds%20a%20given%20%60FuzzArtifactSelector%60%20to%20the%20%60_targetedArtifactSelectors%60%20array.%20This%20set%20of%20%60FuzzArtifactSelector%60s%20is%20used%20for%20the%20target%20artifact%20selectorstargetContract(address%20newTargetedContract_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_targetedContracts%60%20array.%20This%20set%20of%20addresses%20is%20used%20for%20the%20target%20contracts.%20This%20array%20overwrites%20the%20set%20of%20contracts%20that%20was%20deployed%20during%20the%20%60setUp%60.%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%60targetSelector(FuzzSelector%20memory%20newTargetedSelector_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20%60FuzzSelector%60%20to%20the%20%60_targetedSelectors%60%20array.%20This%20set%20of%20%60FuzzSelector%60s%20is%20used%20for%20the%20target%20contract%20selectorstargetSender(address%20newTargetedSender_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_targetedSenders%60%20array.%20This%20set%20of%20addresses%20is%20used%20for%20the%20target%20senderstargetInterface(FuzzInterface%20memory%20newTargetedInterface_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20%60FuzzInterface%60%20to%20the%20%60_targetedInterfaces%60%20array.%20This%20set%20of%20%60FuzzInterface%60%20extends%20the%20contracts%20and%20selectors%20to%20fuzz%20and%20enables%20targeting%20of%20addresses%20that%20are%20not%20deployed%20during%20%60setUp%60%20such%20as%20when%20fuzzing%20in%20a%20forked%20environment.%20Also%20enables%20targeting%20of%20delegate%20proxies%20and%20contracts%20deployed%20with%20%60create%60%20or%20%60create2%60.%20%7C%0A%0A%23%23%23%20Target%20Contract%20Setup%0A%0ATarget%20contracts%20can%20be%20set%20up%20using%20the%20following%20three%20methods%3A%0A%0A1.%20Contracts%20that%20are%20manually%20added%20to%20the%20%60targetContracts%60%20array%20are%20added%20to%20the%20set%20of%20target%20contracts.%0A2.%20Contracts%20that%20are%20deployed%20in%20the%20%60setUp%60%20function%20are%20automatically%20added%20to%20the%20set%20of%20target%20contracts%20(only%20works%20if%20no%20contracts%20have%20been%20manually%20added%20using%20option%201).%0A3.%20Contracts%20that%20are%20deployed%20in%20the%20%60setUp%60%20can%20be%20**removed**%20from%20the%20target%20contracts%20if%20they%20are%20added%20to%20the%20%60excludeContracts%60%20array.%0A%0A%23%23%20Open%20Testing%0A%0AThe%20default%20configuration%20for%20target%20contracts%20is%20set%20to%20all%20contracts%20that%20are%20deployed%20during%20the%20setup.%20For%20smaller%20modules%20and%20more%20arithmetic%20contracts%2C%20this%20works%20well.%20For%20example%3A%0A%0A%60%60%60solidity%0Acontract%20ExampleContract1%20%7B%0A%0A%20%20%20%20uint256%20public%20val1%3B%0A%20%20%20%20uint256%20public%20val2%3B%0A%20%20%20%20uint256%20public%20val3%3B%0A%0A%20%20%20%20function%20addToA(uint256%20amount)%20external%20%7B%0A%20%20%20%20%20%20%20%20val1%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20val3%20%2B%3D%20amount%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20addToB(uint256%20amount)%20external%20%7B%0A%20%20%20%20%20%20%20%20val2%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20val3%20%2B%3D%20amount%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%60%60%60%0A%0AThis%20contract%20could%20be%20deployed%20and%20tested%20using%20the%20default%20target%20contract%20pattern%3A%0A%0A%60%60%60solidity%0Acontract%20InvariantExample1%20is%20Test%20%7B%0A%0A%20%20%20%20ExampleContract1%20foo%3B%0A%0A%20%20%20%20function%20setUp()%20external%20%7B%0A%20%20%20%20%20%20%20%20foo%20%3D%20new%20ExampleContract1()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_A()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertEq(foo.val1()%20%2B%20foo.val2()%2C%20foo.val3())%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_B()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertGe(foo.val1()%20%2B%20foo.val2()%2C%20foo.val3())%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%60%60%60%0A%0AThis%20setup%20will%20call%20%60foo.addToA()%60%20and%20%60foo.addToB()%60%20with%20a%2050%25-50%25%20probability%20distribution%20with%20fuzzed%20inputs.%20Inevitably%2C%20the%20inputs%20will%20start%20to%20cause%20overflows%20and%20the%20function%20calls%20will%20start%20reverting.%20Since%20the%20default%20configuration%20in%20invariant%20testing%20is%20%60fail_on_revert%20%3D%20false%60%2C%20this%20will%20not%20cause%20the%20tests%20to%20fail.%20The%20invariants%20will%20hold%20throughout%20the%20rest%20of%20the%20fuzzing%20campaign%20and%20the%20result%20is%20that%20the%20test%20will%20pass.%20The%20output%20will%20look%20something%20like%20this%3A%0A%0A%60%60%60text%0A%5BPASS%5D%20invariant_A()%20(runs%3A%2050%2C%20calls%3A%2010000%2C%20reverts%3A%205533)%0A%5BPASS%5D%20invariant_B()%20(runs%3A%2050%2C%20calls%3A%2010000%2C%20reverts%3A%205533)%0A%60%60%60%0A%0A%23%23%20Handler-Based%20Testing%0A%0AFor%20more%20complex%20and%20integrated%20protocols%2C%20more%20sophisticated%20target%20contract%20usage%20is%20required%20to%20achieve%20the%20desired%20results.%20To%20illustrate%20how%20Handlers%20can%20be%20leveraged%2C%20the%20following%20contract%20will%20be%20used%20(an%20ERC-4626%20based%20contract%20that%20accepts%20deposits%20of%20another%20ERC-20%20token)%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Ainterface%20IERC20Like%20%7B%0A%0A%20%20%20%20function%20balanceOf(address%20owner_)%20external%20view%20returns%20(uint256%20balance_)%3B%0A%0A%20%20%20%20function%20transferFrom(%0A%20%20%20%20%20%20%20%20address%20owner_%2C%0A%20%20%20%20%20%20%20%20address%20recipient_%2C%0A%20%20%20%20%20%20%20%20uint256%20amount_%0A%20%20%20%20)%20external%20returns%20(bool%20success_)%3B%0A%0A%7D%0A%0Acontract%20Basic4626Deposit%20%7B%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20Storage%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20address%20public%20immutable%20asset%3B%0A%0A%20%20%20%20string%20public%20name%3B%0A%20%20%20%20string%20public%20symbol%3B%0A%0A%20%20%20%20uint8%20public%20immutable%20decimals%3B%0A%0A%20%20%20%20uint256%20public%20totalSupply%3B%0A%0A%20%20%20%20mapping(address%20%3D%3E%20uint256)%20public%20balanceOf%3B%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20Constructor%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20constructor(address%20asset_%2C%20string%20memory%20name_%2C%20string%20memory%20symbol_%2C%20uint8%20decimals_)%20%7B%0A%20%20%20%20%20%20%20%20asset%20%20%20%20%3D%20asset_%3B%0A%20%20%20%20%20%20%20%20name%20%20%20%20%20%3D%20name_%3B%0A%20%20%20%20%20%20%20%20symbol%20%20%20%3D%20symbol_%3B%0A%20%20%20%20%20%20%20%20decimals%20%3D%20decimals_%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20External%20Functions%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20function%20deposit(uint256%20assets_%2C%20address%20receiver_)%20external%20returns%20(uint256%20shares_)%20%7B%0A%20%20%20%20%20%20%20%20shares_%20%3D%20convertToShares(assets_)%3B%0A%0A%20%20%20%20%20%20%20%20require(receiver_%20!%3D%20address(0)%2C%20%22ZERO_RECEIVER%22)%3B%0A%20%20%20%20%20%20%20%20require(shares_%20%20%20!%3D%20uint256(0)%2C%20%22ZERO_SHARES%22)%3B%0A%20%20%20%20%20%20%20%20require(assets_%20%20%20!%3D%20uint256(0)%2C%20%22ZERO_ASSETS%22)%3B%0A%0A%20%20%20%20%20%20%20%20totalSupply%20%2B%3D%20shares_%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Cannot%20overflow%20because%20totalSupply%20would%20first%20overflow%20in%20the%20statement%20above.%0A%20%20%20%20%20%20%20%20unchecked%20%7B%20balanceOf%5Breceiver_%5D%20%2B%3D%20shares_%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20require(%0A%20%20%20%20%20%20%20%20%20%20%20%20IERC20Like(asset).transferFrom(msg.sender%2C%20address(this)%2C%20assets_)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22TRANSFER_FROM%22%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20transfer(address%20recipient_%2C%20uint256%20amount_)%20external%20returns%20(bool%20success_)%20%7B%0A%20%20%20%20%20%20%20%20balanceOf%5Bmsg.sender%5D%20-%3D%20amount_%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Cannot%20overflow%20because%20minting%20prevents%20overflow%20of%20totalSupply%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20and%20sum%20of%20user%20balances%20%3D%3D%20totalSupply.%0A%20%20%20%20%20%20%20%20unchecked%20%7B%20balanceOf%5Brecipient_%5D%20%2B%3D%20amount_%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20return%20true%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20Public%20View%20Functions%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20function%20convertToShares(uint256%20assets_)%20public%20view%20returns%20(uint256%20shares_)%20%7B%0A%20%20%20%20%20%20%20%20uint256%20supply_%20%3D%20totalSupply%3B%20%20%2F%2F%20Cache%20to%20stack.%0A%0A%20%20%20%20%20%20%20%20shares_%20%3D%20supply_%20%3D%3D%200%20%3F%20assets_%20%3A%20(assets_%20*%20supply_)%20%2F%20totalAssets()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20totalAssets()%20public%20view%20returns%20(uint256%20assets_)%20%7B%0A%20%20%20%20%20%20%20%20assets_%20%3D%20IERC20Like(asset).balanceOf(address(this))%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%0A%60%60%60%0A%0A%23%23%23%20Handler%20Functions%0A%0AThis%20contract's%20%60deposit%60%20function%20requires%20that%20the%20caller%20has%20a%20non-zero%20balance%20of%20the%20ERC-20%20%60asset%60.%20In%20the%20Open%20invariant%20testing%20approach%2C%20%60deposit()%60%20and%20%60transfer()%60%20would%20be%20called%20with%20a%2050-50%25%20distribution%2C%20but%20they%20would%20revert%20on%20every%20call.%20This%20would%20cause%20the%20invariant%20tests%20to%20%22pass%22%2C%20but%20in%20reality%20no%20state%20was%20manipulated%20in%20the%20desired%20contract%20at%20all.%20This%20is%20where%20target%20contracts%20can%20be%20leveraged.%20When%20a%20contract%20requires%20some%20additional%20logic%20in%20order%20to%20function%20properly%2C%20it%20can%20be%20added%20in%20a%20dedicated%20contract%20called%20a%20%60Handler%60.%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%7D%0A%60%60%60%0A%0AThis%20contract%20will%20provide%20the%20necessary%20setup%20before%20a%20function%20call%20is%20made%20in%20order%20to%20ensure%20it%20is%20successful.%0A%0ABuilding%20on%20this%20concept%2C%20Handlers%20can%20be%20used%20to%20develop%20more%20sophisticated%20invariant%20tests.%20With%20Open%20invariant%20testing%2C%20the%20tests%20run%20as%20shown%20in%20the%20diagram%20below%2C%20with%20random%20sequences%20of%20function%20calls%20being%20made%20to%20the%20protocol%20contracts%20directly%20with%20fuzzed%20parameters.%20This%20will%20cause%20reverts%20for%20more%20complex%20systems%20as%20outlined%20above.%0A%0A!%5BBlank%20diagram%5D(https%3A%2F%2Fuser-images.githubusercontent.com%2F44272939%2F214752968-5f0e7653-d52e-43e6-b453-cac935f5d97d.svg)%0A%0ABy%20manually%20adding%20all%20Handler%20contracts%20to%20the%20%60targetContracts%60%20array%2C%20all%20function%20calls%20made%20to%20protocol%20contracts%20can%20be%20made%20in%20a%20way%20that%20is%20governed%20by%20the%20Handler%20to%20ensure%20successful%20calls.%20This%20is%20outlined%20in%20the%20diagram%20below.%0A%0A!%5BInvariant%20Diagrams%20-%20Page%202%5D(https%3A%2F%2Fuser-images.githubusercontent.com%2F44272939%2F216420091-8a5c2bcc-d586-458f-be1e-a9ea0ef5961f.svg)%0A%0AWith%20this%20layer%20between%20the%20fuzzer%20and%20the%20protocol%2C%20more%20powerful%20testing%20can%20be%20achieved.%0A%0A%23%23%23%20Handler%20Ghost%20Variables%0A%0AWithin%20Handlers%2C%20%22ghost%20variables%22%20can%20be%20tracked%20across%20multiple%20function%20calls%20to%20add%20additional%20information%20for%20invariant%20tests.%20A%20good%20example%20of%20this%20is%20summing%20all%20of%20the%20%60shares%60%20that%20each%20LP%20owns%20after%20depositing%20into%20the%20ERC-4626%20token%20as%20shown%20above%2C%20and%20using%20that%20in%20the%20invariant%20(%60totalSupply%20%3D%3D%20sumBalanceOf%60).%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Function-Level%20Assertions%0A%0AAnother%20benefit%20is%20the%20ability%20to%20perform%20assertions%20on%20function%20calls%20as%20they%20are%20happening.%20An%20example%20is%20asserting%20the%20ERC-20%20balance%20of%20the%20LP%20has%20decremented%20by%20%60assets%60%20during%20the%20%60deposit%60%20function%20call%2C%20as%20well%20as%20their%20LP%20token%20balance%20incrementing%20by%20%60shares%60.%20In%20this%20way%2C%20handler%20functions%20are%20similar%20to%20fuzz%20tests%20because%20they%20can%20take%20in%20fuzzed%20inputs%2C%20perform%20state%20changes%2C%20and%20assert%20before%2Fafter%20state.%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Bounded%2FUnbounded%20Functions%0A%0AIn%20addition%2C%20with%20Handlers%2C%20input%20parameters%20can%20be%20bounded%20to%20reasonable%20expected%20values%20such%20that%20%60fail_on_revert%60%20in%20%60foundry.toml%60%20can%20be%20set%20to%20%60true%60.%20This%20can%20be%20accomplished%20using%20the%20%60bound()%60%20helper%20function%20from%20%60forge-std%60.%20This%20ensures%20that%20every%20function%20call%20that%20is%20being%20made%20by%20the%20fuzzer%20must%20be%20successful%20against%20the%20protocol%20in%20order%20to%20get%20tests%20to%20pass.%20This%20is%20very%20useful%20for%20visibility%20and%20confidence%20that%20the%20protocol%20is%20being%20tested%20in%20the%20desired%20way.%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20external%20%7B%0A%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0AThis%20can%20also%20be%20accomplished%20by%20inheriting%20non-bounded%20functions%20from%20dedicated%20%22unbounded%22%20Handler%20contracts%20that%20can%20be%20used%20for%20%60fail_on_revert%20%3D%20false%60%20testing.%20This%20type%20of%20testing%20is%20also%20useful%20since%20it%20can%20expose%20issues%20in%20assumptions%20made%20with%20%60bound%60%20function%20usage.%0A%0A%60%60%60solidity%0A%2F%2F%20Unbounded%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Bounded%0Afunction%20deposit(uint256%20assets)%20external%20%7B%0A%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20super.deposit(assets)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Actor%20Management%0A%0AIn%20the%20function%20calls%20above%2C%20it%20can%20be%20seen%20that%20%60address(this)%60%20is%20the%20sole%20depositor%20in%20the%20ERC-4626%20contract%2C%20which%20is%20not%20a%20realistic%20representation%20of%20its%20intended%20use.%20By%20leveraging%20the%20%60prank%60%20cheatcodes%20in%20%60forge-std%60%2C%20each%20Handler%20can%20manage%20a%20set%20of%20actors%20and%20use%20them%20to%20perform%20the%20same%20function%20call%20from%20different%20%60msg.sender%60%20addresses.%20This%20can%20be%20accomplished%20using%20the%20following%20modifier%3A%0A%0A%60%60%60solidity%0Aaddress%5B%5D%20public%20actors%3B%0A%0Aaddress%20internal%20currentActor%3B%0A%0Amodifier%20useActor(uint256%20actorIndexSeed)%20%7B%0A%20%20%20%20currentActor%20%3D%20actors%5Bbound(actorIndexSeed%2C%200%2C%20actors.length%20-%201)%5D%3B%0A%20%20%20%20vm.startPrank(currentActor)%3B%0A%20%20%20%20_%3B%0A%20%20%20%20vm.stopPrank()%3B%0A%7D%0A%60%60%60%0A%0AUsing%20multiple%20actors%20allows%20for%20more%20granular%20ghost%20variable%20usage%20as%20well.%20This%20is%20demonstrated%20in%20the%20functions%20below%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Unbounded%0Afunction%20deposit(%0A%20%20%20%20uint256%20assets%2C%0A%20%20%20%20uint256%20actorIndexSeed%0A)%20public%20virtual%20useActor(actorIndexSeed)%20%7B%0A%20%20%20%20asset.mint(currentActor%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%0A%20%20%20%20sumDeposits%5BcurrentActor%5D%20%2B%3D%20assets%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Bounded%0Afunction%20deposit(uint256%20assets%2C%20uint256%20actorIndexSeed)%20external%20%7B%0A%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20super.deposit(assets%2C%20actorIndexSeed)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./invariant-testing-DtBeT8Hz.js"),__vite__mapDeps([160,1])),path:"/forge/advanced-testing/invariant-testing.html",type:"mdx",filePath:"forge/advanced-testing/invariant-testing.md",content:"---%0Adescription%3A%20Test%20protocol%20invariants%20with%20randomized%20function%20call%20sequences%20to%20find%20edge%20cases%20and%20logic%20errors.%0A---%0A%0A%23%20Invariant%20Testing%0A%0A%23%23%20Overview%0A%0AInvariant%20testing%20allows%20for%20a%20set%20of%20invariant%20expressions%20to%20be%20tested%20against%20randomized%20sequences%20of%20pre-defined%20function%20calls%20from%20pre-defined%20contracts.%20After%20each%20function%20call%20is%20performed%2C%20all%20defined%20invariants%20are%20asserted.%0A%0AInvariant%20testing%20is%20a%20powerful%20tool%20to%20expose%20incorrect%20logic%20in%20protocols.%20Due%20to%20the%20fact%20that%20function%20call%20sequences%20are%20randomized%20and%20have%20fuzzed%20inputs%2C%20invariant%20testing%20can%20expose%20false%20assumptions%20and%20incorrect%20logic%20in%20edge%20cases%20and%20highly%20complex%20protocol%20states.%0A%0AInvariant%20testing%20campaigns%20have%20two%20dimensions%2C%20%60runs%60%20and%20%60depth%60%3A%0A%0A-%20%60runs%60%3A%20Number%20of%20times%20that%20a%20sequence%20of%20function%20calls%20is%20generated%20and%20run.%0A-%20%60depth%60%3A%20Number%20of%20function%20calls%20made%20in%20a%20given%20%60run%60.%20Invariants%20are%20asserted%20after%20each%20function%20call%20is%20made.%20If%20a%20function%20call%20reverts%2C%20the%20%60depth%60%20counter%20still%20increments.%0A%0AFor%20long%20invariant%20campaigns%20a%20%60timeout%60%20(in%20seconds)%20can%20be%20set%2C%20ensuring%20test%20ends%20after%20specified%20time%20elapsed.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20When%20implementing%20invariant%20tests%20is%20important%20to%20be%20aware%20that%20for%20each%20%60invariant_*%60%20function%20a%20different%20EVM%20executor%20is%20created%2C%20therefore%20invariants%20are%20not%20asserted%20against%20same%20EVM%20state.%20This%20means%20that%20if%20%60invariant_A()%60%20and%20%60invariant_B()%60%20functions%20are%20defined%20then%20%60invariant_B()%60%20won't%20be%20asserted%20against%20EVM%20state%20of%20%60invariant_A()%60%20(and%20the%20other%20way%20around).%0A%3E%0A%3E%20If%20you%20want%20to%20assert%20all%20invariants%20at%20the%20same%20time%20then%20they%20can%20be%20grouped%20and%20run%20on%20multiple%20jobs.%20For%20example%2C%20assert%20all%20invariants%20using%20two%20jobs%20can%20be%20implemented%20as%3A%0A%3E%0A%3E%20%60%60%60Solidity%0A%3E%20function%20invariant_job1()%20public%20%7B%0A%3E%20%20%20%20assertInvariants()%3B%0A%3E%20%7D%0A%3E%0A%3E%20function%20invariant_job2()%20public%20%7B%0A%3E%20%20%20%20assertInvariants()%3B%0A%3E%20%7D%0A%3E%0A%3E%20function%20assertInvariants()%20internal%20%7B%0A%3E%20%20%20%20assertEq(val1%2C%20val2)%3B%0A%3E%20%20%20%20assertEq(val3%2C%20val4)%3B%0A%3E%20%7D%0A%3E%20%60%60%60%0A%0AThese%20and%20other%20invariant%20configuration%20aspects%20are%20explained%20%5B%60here%60%5D(%23configuring-invariant-test-execution).%0A%0ASimilar%20to%20how%20standard%20tests%20are%20run%20in%20Foundry%20by%20prefixing%20a%20function%20name%20with%20%60test%60%2C%20invariant%20tests%20are%20denoted%20by%20prefixing%20the%20function%20name%20with%20%60invariant%60%20(e.g.%2C%20%60function%20invariant_A()%60).%0A%0A%60afterInvariant()%60%20function%20is%20called%20at%20the%20end%20of%20each%20invariant%20run%20(if%20declared)%2C%20allowing%20post%20campaign%20processing.%20This%20function%20can%20be%20used%20for%20logging%20campaign%20metrics%20(e.g.%20how%20many%20times%20a%20selector%20was%20called)%20and%20post%20fuzz%20campaign%20testing%20(e.g.%20close%20out%20all%20positions%20and%20assert%20all%20funds%20are%20able%20to%20exit%20the%20system).%0A%0A%23%23%23%20Configuring%20invariant%20test%20execution%0A%0AInvariant%20tests%20execution%20is%20governed%20by%20parameters%20that%20can%20be%20controlled%20by%20users%20via%20Forge%20configuration%20primitives.%20Configs%20can%20be%20applied%20globally%20or%20on%20a%20per-test%20basis.%20For%20details%20on%20this%20topic%20please%20refer%20to%0A%F0%9F%93%9A%20%5B%60Global%20config%60%5D(%2Fconfig%2Freference%2Foverview)%20and%20%F0%9F%93%9A%20%5B%60In-line%20config%60%5D(%2Fconfig%2Freference%2Finline-test-config).%0A%0A%23%23%20Defining%20Invariants%0A%0AInvariants%20are%20conditions%20expressions%20that%20should%20always%20hold%20true%20over%20the%20course%20of%20a%20fuzzing%20campaign.%20A%20good%20invariant%20testing%20suite%20should%20have%20as%20many%20invariants%20as%20possible%2C%20and%20can%20have%20different%20testing%20suites%20for%20different%20protocol%20states.%0A%0AExamples%20of%20invariants%20are%3A%0A%0A-%20_%22The%20xy%3Dk%20formula%20always%20holds%22_%20for%20Uniswap%0A-%20_%22The%20sum%20of%20all%20user%20balances%20is%20equal%20to%20the%20total%20supply%22_%20for%20an%20ERC-20%20token.%0A%0AThere%20are%20different%20ways%20to%20assert%20invariants%2C%20as%20outlined%20in%20the%20table%20below%3A%0A%0A%3Ctable%3E%0A%3Ctr%3E%3Cth%3EType%3C%2Fth%3E%3Cth%3EExplanation%3C%2Fth%3E%3Cth%3EExample%3C%2Fth%3E%3C%2Ftr%3E%0A%0A%3Ctr%3E%0A%0A%3Ctd%3EDirect%20assertions%3C%2Ftd%3E%0A%3Ctd%3EQuery%20a%20protocol%20smart%20contract%20and%20assert%20values%20are%20as%20expected.%3C%2Ftd%3E%0A%3Ctd%3E%0A%0A%60%60%60solidity%0AassertGe(%0A%20%20%20%20token.totalAssets()%2C%0A%20%20%20%20token.totalSupply()%0A)%0A%60%60%60%0A%0A%3C%2Ftd%3E%0A%0A%3C%2Ftr%3E%0A%0A%3Ctr%3E%0A%0A%3Ctd%3EGhost%20variable%20assertions%3C%2Ftd%3E%0A%3Ctd%3EQuery%20a%20protocol%20smart%20contract%20and%20compare%20it%20against%20a%20value%20that%20has%20been%20persisted%20in%20the%20test%20environment%20(ghost%20variable).%3C%2Ftd%3E%0A%3Ctd%3E%0A%0A%60%60%60solidity%0AassertEq(%0A%20%20%20%20token.totalSupply()%2C%0A%20%20%20%20sumBalanceOf%0A)%0A%60%60%60%0A%0A%3C%2Ftd%3E%0A%0A%3C%2Ftr%3E%0A%0A%3Ctr%3E%0A%0A%3Ctd%3EDeoptimizing%20(Naive%20implementation%20assertions)%3C%2Ftd%3E%0A%3Ctd%3EQuery%20a%20protocol%20smart%20contract%20and%20compare%20it%20against%20a%20naive%20and%20typically%20highly%20gas-inefficient%20implementation%20of%20the%20same%20desired%20logic.%3C%2Ftd%3E%0A%3Ctd%3E%0A%0A%60%60%60solidity%0AassertEq(%0A%20%20%20%20pool.outstandingInterest()%2C%0A%20%20%20%20test.naiveInterest()%0A)%0A%60%60%60%0A%0A%3C%2Ftd%3E%0A%0A%3C%2Ftr%3E%0A%3C%2Ftable%3E%0A%0A%23%23%23%20Conditional%20Invariants%0A%0AInvariants%20must%20hold%20over%20the%20course%20of%20a%20given%20fuzzing%20campaign%2C%20but%20that%20doesn't%20mean%20they%20must%20hold%20true%20in%20every%20situation.%20There%20is%20the%20possibility%20for%20certain%20invariants%20to%20be%20introduced%2Fremoved%20in%20a%20given%20scenario%20(e.g.%2C%20during%20a%20liquidation).%0A%0AIt%20is%20not%20recommended%20to%20introduce%20conditional%20logic%20into%20invariant%20assertions%20because%20they%20have%20the%20possibility%20of%20introducing%20false%20positives%20because%20of%20an%20incorrect%20code%20path.%20For%20example%3A%0A%0A%60%60%60solidity%0Afunction%20invariant_example()%20external%20%7B%0A%20%20%20%20if%20(protocolCondition)%20return%3B%0A%0A%20%20%20%20assertEq(val1%2C%20val2)%3B%0A%7D%0A%60%60%60%0A%0AIn%20this%20situation%2C%20if%20%60protocolCondition%20%3D%3D%20true%60%2C%20the%20invariant%20is%20not%20asserted%20at%20all.%20Sometimes%20this%20can%20be%20desired%20behavior%2C%20but%20it%20can%20cause%20issues%20if%20the%20%60protocolCondition%60%20is%20true%20for%20the%20whole%20fuzzing%20campaign%20unexpectedly%2C%20or%20there%20is%20a%20logic%20error%20in%20the%20condition%20itself.%20For%20this%20reason%20its%20better%20to%20try%20and%20define%20an%20alternative%20invariant%20for%20that%20condition%20as%20well%2C%20for%20example%3A%0A%0A%60%60%60solidity%0Afunction%20invariant_example()%20external%20%7B%0A%20%20%20%20if%20(protocolCondition)%20%7B%0A%20%20%20%20%20%20%20%20assertLe(val1%2C%20val2)%3B%0A%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20assertEq(val1%2C%20val2)%3B%0A%7D%0A%60%60%60%0A%0AAnother%20approach%20to%20handle%20different%20invariants%20across%20protocol%20states%20is%20to%20utilize%20dedicated%20invariant%20testing%20contracts%20for%20different%20scenarios.%20These%20scenarios%20can%20be%20bootstrapped%20using%20the%20%60setUp%60%20function%2C%20but%20it%20is%20more%20powerful%20to%20leverage%20_invariant%20targets_%20to%20govern%20the%20fuzzer%20to%20behave%20in%20a%20way%20that%20will%20only%20yield%20certain%20results%20(e.g.%2C%20avoid%20liquidations).%0A%0A%23%23%20Invariant%20Targets%0A%0A**Target%20Contracts**%3A%20The%20set%20of%20contracts%20that%20will%20be%20called%20over%20the%20course%20of%20a%20given%20invariant%20test%20fuzzing%20campaign.%20This%20set%20of%20contracts%20defaults%20to%20all%20contracts%20that%20were%20deployed%20in%20the%20%60setUp%60%20function%2C%20but%20can%20be%20customized%20to%20allow%20for%20more%20advanced%20invariant%20testing.%0A%0A**Target%20Senders**%3A%20The%20invariant%20test%20fuzzer%20picks%20values%20for%20%60msg.sender%60%20at%20random%20when%20performing%20fuzz%20campaigns%20to%20simulate%20multiple%20actors%20in%20a%20system%20by%20default.%20If%20desired%2C%20the%20set%20of%20senders%20can%20be%20customized%20in%20the%20%60setUp%60%20function.%0A%0A**Target%20Interfaces**%3A%20The%20set%20of%20addresses%20and%20their%20project%20identifiers%20that%20are%20not%20deployed%20during%20%60setUp%60%20but%20fuzzed%20in%20a%20forked%20environment%20(E.g.%20%60%5B(0x1%2C%20%5B%22IERC20%22%5D)%2C%20(0x2%2C%20(%22IOwnable%22))%5D%60).%20This%20enables%20targeting%20of%20delegate%20proxies%20and%20contracts%20deployed%20with%20%60create%60%20or%20%60create2%60.%0A%0A**Target%20Selectors**%3A%20The%20set%20of%20function%20selectors%20that%20are%20used%20by%20the%20fuzzer%20for%20invariant%20testing.%20These%20can%20be%20used%20to%20use%20a%20subset%20of%20functions%20within%20a%20given%20target%20contract.%0A%0A**Target%20Artifacts**%3A%20The%20desired%20ABI%20to%20be%20used%20for%20a%20given%20contract.%20These%20can%20be%20used%20for%20proxy%20contract%20configurations.%0A%0A**Target%20Artifact%20Selectors**%3A%20The%20desired%20subset%20of%20function%20selectors%20to%20be%20used%20within%20a%20given%20ABI%20to%20be%20used%20for%20a%20given%20contract.%20These%20can%20be%20used%20for%20proxy%20contract%20configurations.%0A%0APriorities%20for%20the%20invariant%20fuzzer%20in%20the%20cases%20of%20target%20clashes%20are%3A%0A%0A%60targetInterfaces%20%7C%20targetSelectors%20%3E%20excludeSelectors%20%7C%20targetArtifactSelectors%20%3E%20excludeContracts%20%7C%20excludeArtifacts%20%3E%20targetContracts%20%7C%20targetArtifacts%60%0A%0A%23%23%23%20Function%20Call%20Probability%20Distribution%0A%0AFunctions%20from%20these%20contracts%20will%20be%20called%20at%20random%20(with%20a%20uniformly%20distributed%20probability)%20with%20fuzzed%20inputs.%0A%0AFor%20example%3A%0A%0A%60%60%60text%0AtargetContract1%3A%0A%E2%94%9C%E2%94%80%20function1%3A%2020%25%0A%E2%94%94%E2%94%80%20function2%3A%2020%25%0A%0AtargetContract2%3A%0A%E2%94%9C%E2%94%80%20function1%3A%2020%25%0A%E2%94%9C%E2%94%80%20function2%3A%2020%25%0A%E2%94%94%E2%94%80%20function3%3A%2020%25%0A%60%60%60%0A%0AThis%20is%20something%20to%20be%20mindful%20of%20when%20designing%20target%20contracts%2C%20as%20target%20contracts%20with%20less%20functions%20will%20have%20each%20function%20called%20more%20often%20due%20to%20this%20probability%20distribution.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20A%20good%20practice%20is%20to%20set%20%60show_metrics%20%3D%20true%60%20in%20order%20to%20get%20a%20breakdown%20of%20all%20handler%20function%20calls%20and%20which%20functions%20are%20reverting%2Fgetting%20discarded%20(through%20%60vm.assume%60%20cheatcode).%0A%0A%23%23%23%20Invariant%20Test%20Helper%20Functions%0A%0AInvariant%20test%20helper%20functions%20are%20included%20in%20%5B%60forge-std%60%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FStdInvariant.sol)%20to%20allow%20for%20configurable%20invariant%20test%20setup.%20The%20helper%20functions%20are%20outlined%20below%3A%0A%0A%7C%20Function%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20DescriptionexcludeContract(address%20newExcludedContract_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_excludedContracts%60%20array.%20This%20set%20of%20contracts%20is%20explicitly%20excluded%20from%20the%20target%20contractsexcludeSelector(FuzzSelector%20memory%20newExcludedSelector_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20%60FuzzSelector%60%20to%20the%20%60_excludedSelectors%60%20array.%20This%20set%20of%20%60FuzzSelector%60s%20is%20explicitly%20excluded%20from%20the%20target%20contract%20selectorsexcludeSender(address%20newExcludedSender_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_excludedSenders%60%20array.%20This%20set%20of%20addresses%20is%20explicitly%20excluded%20from%20the%20target%20sendersexcludeArtifact(string%20memory%20newExcludedArtifact_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20string%20to%20the%20%60_excludedArtifacts%60%20array.%20This%20set%20of%20strings%20is%20explicitly%20excluded%20from%20the%20target%20artifactstargetArtifact(string%20memory%20newTargetedArtifact_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20string%20to%20the%20%60_targetedArtifacts%60%20array.%20This%20set%20of%20strings%20is%20used%20for%20the%20target%20artifactstargetArtifactSelector(FuzzArtifactSelector%20memory%20newTargetedArtifactSelector_)%60%20%7C%20Adds%20a%20given%20%60FuzzArtifactSelector%60%20to%20the%20%60_targetedArtifactSelectors%60%20array.%20This%20set%20of%20%60FuzzArtifactSelector%60s%20is%20used%20for%20the%20target%20artifact%20selectorstargetContract(address%20newTargetedContract_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_targetedContracts%60%20array.%20This%20set%20of%20addresses%20is%20used%20for%20the%20target%20contracts.%20This%20array%20overwrites%20the%20set%20of%20contracts%20that%20was%20deployed%20during%20the%20%60setUp%60.%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%60targetSelector(FuzzSelector%20memory%20newTargetedSelector_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20%60FuzzSelector%60%20to%20the%20%60_targetedSelectors%60%20array.%20This%20set%20of%20%60FuzzSelector%60s%20is%20used%20for%20the%20target%20contract%20selectorstargetSender(address%20newTargetedSender_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20address%20to%20the%20%60_targetedSenders%60%20array.%20This%20set%20of%20addresses%20is%20used%20for%20the%20target%20senderstargetInterface(FuzzInterface%20memory%20newTargetedInterface_)%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Adds%20a%20given%20%60FuzzInterface%60%20to%20the%20%60_targetedInterfaces%60%20array.%20This%20set%20of%20%60FuzzInterface%60%20extends%20the%20contracts%20and%20selectors%20to%20fuzz%20and%20enables%20targeting%20of%20addresses%20that%20are%20not%20deployed%20during%20%60setUp%60%20such%20as%20when%20fuzzing%20in%20a%20forked%20environment.%20Also%20enables%20targeting%20of%20delegate%20proxies%20and%20contracts%20deployed%20with%20%60create%60%20or%20%60create2%60.%20%7C%0A%0A%23%23%23%20Target%20Contract%20Setup%0A%0ATarget%20contracts%20can%20be%20set%20up%20using%20the%20following%20three%20methods%3A%0A%0A1.%20Contracts%20that%20are%20manually%20added%20to%20the%20%60targetContracts%60%20array%20are%20added%20to%20the%20set%20of%20target%20contracts.%0A2.%20Contracts%20that%20are%20deployed%20in%20the%20%60setUp%60%20function%20are%20automatically%20added%20to%20the%20set%20of%20target%20contracts%20(only%20works%20if%20no%20contracts%20have%20been%20manually%20added%20using%20option%201).%0A3.%20Contracts%20that%20are%20deployed%20in%20the%20%60setUp%60%20can%20be%20**removed**%20from%20the%20target%20contracts%20if%20they%20are%20added%20to%20the%20%60excludeContracts%60%20array.%0A%0A%23%23%20Open%20Testing%0A%0AThe%20default%20configuration%20for%20target%20contracts%20is%20set%20to%20all%20contracts%20that%20are%20deployed%20during%20the%20setup.%20For%20smaller%20modules%20and%20more%20arithmetic%20contracts%2C%20this%20works%20well.%20For%20example%3A%0A%0A%60%60%60solidity%0Acontract%20ExampleContract1%20%7B%0A%0A%20%20%20%20uint256%20public%20val1%3B%0A%20%20%20%20uint256%20public%20val2%3B%0A%20%20%20%20uint256%20public%20val3%3B%0A%0A%20%20%20%20function%20addToA(uint256%20amount)%20external%20%7B%0A%20%20%20%20%20%20%20%20val1%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20val3%20%2B%3D%20amount%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20addToB(uint256%20amount)%20external%20%7B%0A%20%20%20%20%20%20%20%20val2%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20val3%20%2B%3D%20amount%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%60%60%60%0A%0AThis%20contract%20could%20be%20deployed%20and%20tested%20using%20the%20default%20target%20contract%20pattern%3A%0A%0A%60%60%60solidity%0Acontract%20InvariantExample1%20is%20Test%20%7B%0A%0A%20%20%20%20ExampleContract1%20foo%3B%0A%0A%20%20%20%20function%20setUp()%20external%20%7B%0A%20%20%20%20%20%20%20%20foo%20%3D%20new%20ExampleContract1()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_A()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertEq(foo.val1()%20%2B%20foo.val2()%2C%20foo.val3())%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20invariant_B()%20external%20%7B%0A%20%20%20%20%20%20%20%20assertGe(foo.val1()%20%2B%20foo.val2()%2C%20foo.val3())%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%60%60%60%0A%0AThis%20setup%20will%20call%20%60foo.addToA()%60%20and%20%60foo.addToB()%60%20with%20a%2050%25-50%25%20probability%20distribution%20with%20fuzzed%20inputs.%20Inevitably%2C%20the%20inputs%20will%20start%20to%20cause%20overflows%20and%20the%20function%20calls%20will%20start%20reverting.%20Since%20the%20default%20configuration%20in%20invariant%20testing%20is%20%60fail_on_revert%20%3D%20false%60%2C%20this%20will%20not%20cause%20the%20tests%20to%20fail.%20The%20invariants%20will%20hold%20throughout%20the%20rest%20of%20the%20fuzzing%20campaign%20and%20the%20result%20is%20that%20the%20test%20will%20pass.%20The%20output%20will%20look%20something%20like%20this%3A%0A%0A%60%60%60text%0A%5BPASS%5D%20invariant_A()%20(runs%3A%2050%2C%20calls%3A%2010000%2C%20reverts%3A%205533)%0A%5BPASS%5D%20invariant_B()%20(runs%3A%2050%2C%20calls%3A%2010000%2C%20reverts%3A%205533)%0A%60%60%60%0A%0A%23%23%20Handler-Based%20Testing%0A%0AFor%20more%20complex%20and%20integrated%20protocols%2C%20more%20sophisticated%20target%20contract%20usage%20is%20required%20to%20achieve%20the%20desired%20results.%20To%20illustrate%20how%20Handlers%20can%20be%20leveraged%2C%20the%20following%20contract%20will%20be%20used%20(an%20ERC-4626%20based%20contract%20that%20accepts%20deposits%20of%20another%20ERC-20%20token)%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Ainterface%20IERC20Like%20%7B%0A%0A%20%20%20%20function%20balanceOf(address%20owner_)%20external%20view%20returns%20(uint256%20balance_)%3B%0A%0A%20%20%20%20function%20transferFrom(%0A%20%20%20%20%20%20%20%20address%20owner_%2C%0A%20%20%20%20%20%20%20%20address%20recipient_%2C%0A%20%20%20%20%20%20%20%20uint256%20amount_%0A%20%20%20%20)%20external%20returns%20(bool%20success_)%3B%0A%0A%7D%0A%0Acontract%20Basic4626Deposit%20%7B%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20Storage%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20address%20public%20immutable%20asset%3B%0A%0A%20%20%20%20string%20public%20name%3B%0A%20%20%20%20string%20public%20symbol%3B%0A%0A%20%20%20%20uint8%20public%20immutable%20decimals%3B%0A%0A%20%20%20%20uint256%20public%20totalSupply%3B%0A%0A%20%20%20%20mapping(address%20%3D%3E%20uint256)%20public%20balanceOf%3B%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20Constructor%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20constructor(address%20asset_%2C%20string%20memory%20name_%2C%20string%20memory%20symbol_%2C%20uint8%20decimals_)%20%7B%0A%20%20%20%20%20%20%20%20asset%20%20%20%20%3D%20asset_%3B%0A%20%20%20%20%20%20%20%20name%20%20%20%20%20%3D%20name_%3B%0A%20%20%20%20%20%20%20%20symbol%20%20%20%3D%20symbol_%3B%0A%20%20%20%20%20%20%20%20decimals%20%3D%20decimals_%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20External%20Functions%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20function%20deposit(uint256%20assets_%2C%20address%20receiver_)%20external%20returns%20(uint256%20shares_)%20%7B%0A%20%20%20%20%20%20%20%20shares_%20%3D%20convertToShares(assets_)%3B%0A%0A%20%20%20%20%20%20%20%20require(receiver_%20!%3D%20address(0)%2C%20%22ZERO_RECEIVER%22)%3B%0A%20%20%20%20%20%20%20%20require(shares_%20%20%20!%3D%20uint256(0)%2C%20%22ZERO_SHARES%22)%3B%0A%20%20%20%20%20%20%20%20require(assets_%20%20%20!%3D%20uint256(0)%2C%20%22ZERO_ASSETS%22)%3B%0A%0A%20%20%20%20%20%20%20%20totalSupply%20%2B%3D%20shares_%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Cannot%20overflow%20because%20totalSupply%20would%20first%20overflow%20in%20the%20statement%20above.%0A%20%20%20%20%20%20%20%20unchecked%20%7B%20balanceOf%5Breceiver_%5D%20%2B%3D%20shares_%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20require(%0A%20%20%20%20%20%20%20%20%20%20%20%20IERC20Like(asset).transferFrom(msg.sender%2C%20address(this)%2C%20assets_)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22TRANSFER_FROM%22%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20transfer(address%20recipient_%2C%20uint256%20amount_)%20external%20returns%20(bool%20success_)%20%7B%0A%20%20%20%20%20%20%20%20balanceOf%5Bmsg.sender%5D%20-%3D%20amount_%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Cannot%20overflow%20because%20minting%20prevents%20overflow%20of%20totalSupply%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20and%20sum%20of%20user%20balances%20%3D%3D%20totalSupply.%0A%20%20%20%20%20%20%20%20unchecked%20%7B%20balanceOf%5Brecipient_%5D%20%2B%3D%20amount_%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20return%20true%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%20%20%20%20%2F***%20Public%20View%20Functions%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20***%2F%0A%20%20%20%20%2F**********************************************************************************************%2F%0A%0A%20%20%20%20function%20convertToShares(uint256%20assets_)%20public%20view%20returns%20(uint256%20shares_)%20%7B%0A%20%20%20%20%20%20%20%20uint256%20supply_%20%3D%20totalSupply%3B%20%20%2F%2F%20Cache%20to%20stack.%0A%0A%20%20%20%20%20%20%20%20shares_%20%3D%20supply_%20%3D%3D%200%20%3F%20assets_%20%3A%20(assets_%20*%20supply_)%20%2F%20totalAssets()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20totalAssets()%20public%20view%20returns%20(uint256%20assets_)%20%7B%0A%20%20%20%20%20%20%20%20assets_%20%3D%20IERC20Like(asset).balanceOf(address(this))%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%0A%60%60%60%0A%0A%23%23%23%20Handler%20Functions%0A%0AThis%20contract's%20%60deposit%60%20function%20requires%20that%20the%20caller%20has%20a%20non-zero%20balance%20of%20the%20ERC-20%20%60asset%60.%20In%20the%20Open%20invariant%20testing%20approach%2C%20%60deposit()%60%20and%20%60transfer()%60%20would%20be%20called%20with%20a%2050-50%25%20distribution%2C%20but%20they%20would%20revert%20on%20every%20call.%20This%20would%20cause%20the%20invariant%20tests%20to%20%22pass%22%2C%20but%20in%20reality%20no%20state%20was%20manipulated%20in%20the%20desired%20contract%20at%20all.%20This%20is%20where%20target%20contracts%20can%20be%20leveraged.%20When%20a%20contract%20requires%20some%20additional%20logic%20in%20order%20to%20function%20properly%2C%20it%20can%20be%20added%20in%20a%20dedicated%20contract%20called%20a%20%60Handler%60.%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%7D%0A%60%60%60%0A%0AThis%20contract%20will%20provide%20the%20necessary%20setup%20before%20a%20function%20call%20is%20made%20in%20order%20to%20ensure%20it%20is%20successful.%0A%0ABuilding%20on%20this%20concept%2C%20Handlers%20can%20be%20used%20to%20develop%20more%20sophisticated%20invariant%20tests.%20With%20Open%20invariant%20testing%2C%20the%20tests%20run%20as%20shown%20in%20the%20diagram%20below%2C%20with%20random%20sequences%20of%20function%20calls%20being%20made%20to%20the%20protocol%20contracts%20directly%20with%20fuzzed%20parameters.%20This%20will%20cause%20reverts%20for%20more%20complex%20systems%20as%20outlined%20above.%0A%0A!%5BBlank%20diagram%5D(https%3A%2F%2Fuser-images.githubusercontent.com%2F44272939%2F214752968-5f0e7653-d52e-43e6-b453-cac935f5d97d.svg)%0A%0ABy%20manually%20adding%20all%20Handler%20contracts%20to%20the%20%60targetContracts%60%20array%2C%20all%20function%20calls%20made%20to%20protocol%20contracts%20can%20be%20made%20in%20a%20way%20that%20is%20governed%20by%20the%20Handler%20to%20ensure%20successful%20calls.%20This%20is%20outlined%20in%20the%20diagram%20below.%0A%0A!%5BInvariant%20Diagrams%20-%20Page%202%5D(https%3A%2F%2Fuser-images.githubusercontent.com%2F44272939%2F216420091-8a5c2bcc-d586-458f-be1e-a9ea0ef5961f.svg)%0A%0AWith%20this%20layer%20between%20the%20fuzzer%20and%20the%20protocol%2C%20more%20powerful%20testing%20can%20be%20achieved.%0A%0A%23%23%23%20Handler%20Ghost%20Variables%0A%0AWithin%20Handlers%2C%20%22ghost%20variables%22%20can%20be%20tracked%20across%20multiple%20function%20calls%20to%20add%20additional%20information%20for%20invariant%20tests.%20A%20good%20example%20of%20this%20is%20summing%20all%20of%20the%20%60shares%60%20that%20each%20LP%20owns%20after%20depositing%20into%20the%20ERC-4626%20token%20as%20shown%20above%2C%20and%20using%20that%20in%20the%20invariant%20(%60totalSupply%20%3D%3D%20sumBalanceOf%60).%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Function-Level%20Assertions%0A%0AAnother%20benefit%20is%20the%20ability%20to%20perform%20assertions%20on%20function%20calls%20as%20they%20are%20happening.%20An%20example%20is%20asserting%20the%20ERC-20%20balance%20of%20the%20LP%20has%20decremented%20by%20%60assets%60%20during%20the%20%60deposit%60%20function%20call%2C%20as%20well%20as%20their%20LP%20token%20balance%20incrementing%20by%20%60shares%60.%20In%20this%20way%2C%20handler%20functions%20are%20similar%20to%20fuzz%20tests%20because%20they%20can%20take%20in%20fuzzed%20inputs%2C%20perform%20state%20changes%2C%20and%20assert%20before%2Fafter%20state.%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Bounded%2FUnbounded%20Functions%0A%0AIn%20addition%2C%20with%20Handlers%2C%20input%20parameters%20can%20be%20bounded%20to%20reasonable%20expected%20values%20such%20that%20%60fail_on_revert%60%20in%20%60foundry.toml%60%20can%20be%20set%20to%20%60true%60.%20This%20can%20be%20accomplished%20using%20the%20%60bound()%60%20helper%20function%20from%20%60forge-std%60.%20This%20ensures%20that%20every%20function%20call%20that%20is%20being%20made%20by%20the%20fuzzer%20must%20be%20successful%20against%20the%20protocol%20in%20order%20to%20get%20tests%20to%20pass.%20This%20is%20very%20useful%20for%20visibility%20and%20confidence%20that%20the%20protocol%20is%20being%20tested%20in%20the%20desired%20way.%0A%0A%60%60%60solidity%0Afunction%20deposit(uint256%20assets)%20external%20%7B%0A%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0AThis%20can%20also%20be%20accomplished%20by%20inheriting%20non-bounded%20functions%20from%20dedicated%20%22unbounded%22%20Handler%20contracts%20that%20can%20be%20used%20for%20%60fail_on_revert%20%3D%20false%60%20testing.%20This%20type%20of%20testing%20is%20also%20useful%20since%20it%20can%20expose%20issues%20in%20assumptions%20made%20with%20%60bound%60%20function%20usage.%0A%0A%60%60%60solidity%0A%2F%2F%20Unbounded%0Afunction%20deposit(uint256%20assets)%20public%20virtual%20%7B%0A%20%20%20%20asset.mint(address(this)%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Bounded%0Afunction%20deposit(uint256%20assets)%20external%20%7B%0A%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20super.deposit(assets)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Actor%20Management%0A%0AIn%20the%20function%20calls%20above%2C%20it%20can%20be%20seen%20that%20%60address(this)%60%20is%20the%20sole%20depositor%20in%20the%20ERC-4626%20contract%2C%20which%20is%20not%20a%20realistic%20representation%20of%20its%20intended%20use.%20By%20leveraging%20the%20%60prank%60%20cheatcodes%20in%20%60forge-std%60%2C%20each%20Handler%20can%20manage%20a%20set%20of%20actors%20and%20use%20them%20to%20perform%20the%20same%20function%20call%20from%20different%20%60msg.sender%60%20addresses.%20This%20can%20be%20accomplished%20using%20the%20following%20modifier%3A%0A%0A%60%60%60solidity%0Aaddress%5B%5D%20public%20actors%3B%0A%0Aaddress%20internal%20currentActor%3B%0A%0Amodifier%20useActor(uint256%20actorIndexSeed)%20%7B%0A%20%20%20%20currentActor%20%3D%20actors%5Bbound(actorIndexSeed%2C%200%2C%20actors.length%20-%201)%5D%3B%0A%20%20%20%20vm.startPrank(currentActor)%3B%0A%20%20%20%20_%3B%0A%20%20%20%20vm.stopPrank()%3B%0A%7D%0A%60%60%60%0A%0AUsing%20multiple%20actors%20allows%20for%20more%20granular%20ghost%20variable%20usage%20as%20well.%20This%20is%20demonstrated%20in%20the%20functions%20below%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Unbounded%0Afunction%20deposit(%0A%20%20%20%20uint256%20assets%2C%0A%20%20%20%20uint256%20actorIndexSeed%0A)%20public%20virtual%20useActor(actorIndexSeed)%20%7B%0A%20%20%20%20asset.mint(currentActor%2C%20assets)%3B%0A%0A%20%20%20%20asset.approve(address(token)%2C%20assets)%3B%0A%0A%20%20%20%20uint256%20beforeBalance%20%3D%20asset.balanceOf(address(this))%3B%0A%0A%20%20%20%20uint256%20shares%20%3D%20token.deposit(assets%2C%20address(this))%3B%0A%0A%20%20%20%20assertEq(asset.balanceOf(address(this))%2C%20beforeBalance%20-%20assets)%3B%0A%0A%20%20%20%20sumBalanceOf%20%2B%3D%20shares%3B%0A%0A%20%20%20%20sumDeposits%5BcurrentActor%5D%20%2B%3D%20assets%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Bounded%0Afunction%20deposit(uint256%20assets%2C%20uint256%20actorIndexSeed)%20external%20%7B%0A%20%20%20%20assets%20%3D%20bound(assets%2C%200%2C%201e30)%3B%0A%0A%20%20%20%20super.deposit(assets%2C%20actorIndexSeed)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CLgIobcx.js"),__vite__mapDeps([161,1])),path:"/forge/advanced-testing/overview",type:"mdx",filePath:"forge/advanced-testing/overview.md",content:"---%0Adescription%3A%20Explore%20advanced%20testing%20methodologies%20including%20fuzz%20testing%2C%20invariant%20testing%2C%20and%20differential%20testing%20with%20Forge.%0A---%0A%0A%23%23%20Advanced%20Testing%0A%0AForge%20comes%20with%20a%20number%20of%20advanced%20testing%20methods%3A%0A%0A-%20%5BTable%20Testing%5D(%2Fforge%2Fadvanced-testing%2Ftable-testing)%0A-%20%5BFuzz%20Testing%5D(%2Fforge%2Fadvanced-testing%2Ffuzz-testing)%0A-%20%5BInvariant%20Testing%5D(%2Fforge%2Fadvanced-testing%2Finvariant-testing)%0A-%20%5BDifferential%20Testing%5D(%2Fforge%2Fadvanced-testing%2Fdifferential-ffi-testing)%0A%0AIn%20the%20future%2C%20Forge%20will%20also%20support%20these%3A%0A%0A-%20%5BSymbolic%20Execution%5D(%23)%0A-%20%5BMutation%20Testing%5D(%23)%0A%0AEach%20chapter%20dives%20into%20what%20problem%20the%20testing%20methods%20solve%2C%20and%20how%20to%20apply%20them%20to%20your%20own%20project.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CLgIobcx.js"),__vite__mapDeps([161,1])),path:"/forge/advanced-testing/overview.html",type:"mdx",filePath:"forge/advanced-testing/overview.md",content:"---%0Adescription%3A%20Explore%20advanced%20testing%20methodologies%20including%20fuzz%20testing%2C%20invariant%20testing%2C%20and%20differential%20testing%20with%20Forge.%0A---%0A%0A%23%23%20Advanced%20Testing%0A%0AForge%20comes%20with%20a%20number%20of%20advanced%20testing%20methods%3A%0A%0A-%20%5BTable%20Testing%5D(%2Fforge%2Fadvanced-testing%2Ftable-testing)%0A-%20%5BFuzz%20Testing%5D(%2Fforge%2Fadvanced-testing%2Ffuzz-testing)%0A-%20%5BInvariant%20Testing%5D(%2Fforge%2Fadvanced-testing%2Finvariant-testing)%0A-%20%5BDifferential%20Testing%5D(%2Fforge%2Fadvanced-testing%2Fdifferential-ffi-testing)%0A%0AIn%20the%20future%2C%20Forge%20will%20also%20support%20these%3A%0A%0A-%20%5BSymbolic%20Execution%5D(%23)%0A-%20%5BMutation%20Testing%5D(%23)%0A%0AEach%20chapter%20dives%20into%20what%20problem%20the%20testing%20methods%20solve%2C%20and%20how%20to%20apply%20them%20to%20your%20own%20project.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./table-testing-Bn5pb0D3.js"),__vite__mapDeps([162,1])),path:"/forge/advanced-testing/table-testing",type:"mdx",filePath:"forge/advanced-testing/table-testing.md",content:"---%0Adescription%3A%20Property-based%20testing%20with%20test%20cases%20inputs%20organized%20into%20a%20table%20format%20(with%20columns%20for%20inputs%2C%20expected%20outputs%2C%20and%20potentially%20other%20relevant%20parameters)%20to%20test%20general%20behaviors%20and%20edge%20cases%20in%20smart%20contracts.%0A---%0A%0A%23%23%20Table%20Testing%0A%0AFoundry%20v1.3.0%20comes%20with%20support%20for%20table%20testing%2C%20which%20enables%20the%20definition%20of%20a%20dataset%20(the%20%22table%22)%20and%20the%20execution%20of%20a%20test%20function%20for%20each%20entry%20in%20that%20dataset.%20This%20approach%20helps%20ensure%20that%20certain%20combinations%20of%20inputs%20and%20conditions%20are%20tested.%0A%0A%23%23%23%23%20Test%20definition%0A%0AIn%20forge%2C%20table%20tests%20are%20functions%20named%20with%20%60table%60%20prefix%20that%20accepts%20datasets%20as%20one%20or%20multiple%20arguments%3A%0A%60%60%60solidity%0Afunction%20tableSumsTest(TestCase%20memory%20testCaseSum)%20public%0A%60%60%60%0A%60%60%60solidity%0Afunction%20tableSumsTest(TestCase%20memory%20testCaseSum%2C%20bool%20enable)%20public%0A%60%60%60%0A%0AThe%20datasets%20are%20defined%20as%20forge%20fixtures%20which%20can%20be%3A%0A-%20storage%20arrays%20prefixed%20with%20%60fixture%60%20prefix%20and%20followed%20by%20dataset%20name%0A-%20functions%20named%20with%20%60fixture%60%20prefix%2C%20followed%20by%20dataset%20name.%20Function%20should%20return%20an%20(fixed%20size%20or%20dynamic)%20array%20of%20values.%0A%0A%23%23%23%23%20Examples%0A%0A-%20Single%20dataset.%20In%20following%20example%2C%20%60tableSumsTest%60%20test%20will%20be%20executed%20twice%2C%20with%20inputs%20from%20%60fixtureSums%60%20dataset%3A%20once%20with%20%60TestCase(1%2C%202%2C%203)%60%20and%20once%20with%20%60TestCase(4%2C%205%2C%209)%60.%0A%60%60%60solidity%0Astruct%20TestCase%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20uint256%20expected%3B%0A%7D%0A%20%20%20%20%0Afunction%20fixtureSums()%20public%20returns%20(TestCase%5B%5D%20memory)%20%7B%0A%20%20%20%20TestCase%5B%5D%20memory%20entries%20%3D%20new%20TestCase%5B%5D(2)%3B%0A%20%20%20%20entries%5B0%5D%20%3D%20TestCase(1%2C%202%2C%203)%3B%0A%20%20%20%20entries%5B1%5D%20%3D%20TestCase(4%2C%205%2C%209)%3B%0A%20%20%20%20return%20entries%3B%0A%7D%0A%0Afunction%20tableSumsTest(TestCase%20memory%20sums)%20public%20pure%20%7B%0A%20%20%20%20require(sums.a%20%2B%20sums.b%20%3D%3D%20sums.expected%2C%20%22wrong%20sum%22)%3B%0A%7D%0A%60%60%60%0A%0A-%20Multiple%20datasets.%20%60tableSwapTest%60%20test%20will%20be%20executed%20twice%2C%20by%20using%20values%20at%20the%20same%20position%20from%20%60fixtureWallet%60%20and%20%60fixtureSwap%60%20datasets.%0A%60%60%60solidity%0Astruct%20Wallet%20%7B%0A%20%20%20%20address%20owner%3B%0A%20%20%20%20uint256%20amount%3B%0A%7D%0A%0Astruct%20Swap%20%7B%0A%20%20%20%20bool%20swap%3B%0A%20%20%20%20uint256%20amount%3B%0A%7D%0A%20%20%20%20%0AWallet%5B%5D%20public%20fixtureWallet%3B%0ASwap%5B%5D%20public%20fixtureSwap%3B%0A%0Afunction%20setUp()%20public%20%7B%0A%20%20%20%20%2F%2F%20first%20table%20test%20input%0A%20%20%20%20fixtureWallet.push(Wallet(address(11)%2C%2011))%3B%0A%20%20%20%20fixtureSwap.push(Swap(true%2C%2011))%3B%0A%0A%20%20%20%20%2F%2F%20second%20table%20test%20input%0A%20%20%20%20fixtureWallet.push(Wallet(address(12)%2C%2012))%3B%20%20%20%20%20%20%20%20%0A%20%20%20%20fixtureSwap.push(Swap(false%2C%2012))%3B%0A%7D%0A%0Afunction%20tableSwapTest(Wallet%20memory%20wallet%2C%20Swap%20memory%20swap)%20public%20pure%20%7B%0A%20%20%20%20require(%0A%20%20%20%20%20%20%20%20(wallet.owner%20%3D%3D%20address(11)%20%26%26%20swap.swap)%20%7C%7C%20(wallet.owner%20%3D%3D%20address(12)%20%26%26%20!swap.swap)%2C%20%22not%20allowed%22%0A%20%20%20%20)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./table-testing-Bn5pb0D3.js"),__vite__mapDeps([162,1])),path:"/forge/advanced-testing/table-testing.html",type:"mdx",filePath:"forge/advanced-testing/table-testing.md",content:"---%0Adescription%3A%20Property-based%20testing%20with%20test%20cases%20inputs%20organized%20into%20a%20table%20format%20(with%20columns%20for%20inputs%2C%20expected%20outputs%2C%20and%20potentially%20other%20relevant%20parameters)%20to%20test%20general%20behaviors%20and%20edge%20cases%20in%20smart%20contracts.%0A---%0A%0A%23%23%20Table%20Testing%0A%0AFoundry%20v1.3.0%20comes%20with%20support%20for%20table%20testing%2C%20which%20enables%20the%20definition%20of%20a%20dataset%20(the%20%22table%22)%20and%20the%20execution%20of%20a%20test%20function%20for%20each%20entry%20in%20that%20dataset.%20This%20approach%20helps%20ensure%20that%20certain%20combinations%20of%20inputs%20and%20conditions%20are%20tested.%0A%0A%23%23%23%23%20Test%20definition%0A%0AIn%20forge%2C%20table%20tests%20are%20functions%20named%20with%20%60table%60%20prefix%20that%20accepts%20datasets%20as%20one%20or%20multiple%20arguments%3A%0A%60%60%60solidity%0Afunction%20tableSumsTest(TestCase%20memory%20testCaseSum)%20public%0A%60%60%60%0A%60%60%60solidity%0Afunction%20tableSumsTest(TestCase%20memory%20testCaseSum%2C%20bool%20enable)%20public%0A%60%60%60%0A%0AThe%20datasets%20are%20defined%20as%20forge%20fixtures%20which%20can%20be%3A%0A-%20storage%20arrays%20prefixed%20with%20%60fixture%60%20prefix%20and%20followed%20by%20dataset%20name%0A-%20functions%20named%20with%20%60fixture%60%20prefix%2C%20followed%20by%20dataset%20name.%20Function%20should%20return%20an%20(fixed%20size%20or%20dynamic)%20array%20of%20values.%0A%0A%23%23%23%23%20Examples%0A%0A-%20Single%20dataset.%20In%20following%20example%2C%20%60tableSumsTest%60%20test%20will%20be%20executed%20twice%2C%20with%20inputs%20from%20%60fixtureSums%60%20dataset%3A%20once%20with%20%60TestCase(1%2C%202%2C%203)%60%20and%20once%20with%20%60TestCase(4%2C%205%2C%209)%60.%0A%60%60%60solidity%0Astruct%20TestCase%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20uint256%20expected%3B%0A%7D%0A%20%20%20%20%0Afunction%20fixtureSums()%20public%20returns%20(TestCase%5B%5D%20memory)%20%7B%0A%20%20%20%20TestCase%5B%5D%20memory%20entries%20%3D%20new%20TestCase%5B%5D(2)%3B%0A%20%20%20%20entries%5B0%5D%20%3D%20TestCase(1%2C%202%2C%203)%3B%0A%20%20%20%20entries%5B1%5D%20%3D%20TestCase(4%2C%205%2C%209)%3B%0A%20%20%20%20return%20entries%3B%0A%7D%0A%0Afunction%20tableSumsTest(TestCase%20memory%20sums)%20public%20pure%20%7B%0A%20%20%20%20require(sums.a%20%2B%20sums.b%20%3D%3D%20sums.expected%2C%20%22wrong%20sum%22)%3B%0A%7D%0A%60%60%60%0A%0A-%20Multiple%20datasets.%20%60tableSwapTest%60%20test%20will%20be%20executed%20twice%2C%20by%20using%20values%20at%20the%20same%20position%20from%20%60fixtureWallet%60%20and%20%60fixtureSwap%60%20datasets.%0A%60%60%60solidity%0Astruct%20Wallet%20%7B%0A%20%20%20%20address%20owner%3B%0A%20%20%20%20uint256%20amount%3B%0A%7D%0A%0Astruct%20Swap%20%7B%0A%20%20%20%20bool%20swap%3B%0A%20%20%20%20uint256%20amount%3B%0A%7D%0A%20%20%20%20%0AWallet%5B%5D%20public%20fixtureWallet%3B%0ASwap%5B%5D%20public%20fixtureSwap%3B%0A%0Afunction%20setUp()%20public%20%7B%0A%20%20%20%20%2F%2F%20first%20table%20test%20input%0A%20%20%20%20fixtureWallet.push(Wallet(address(11)%2C%2011))%3B%0A%20%20%20%20fixtureSwap.push(Swap(true%2C%2011))%3B%0A%0A%20%20%20%20%2F%2F%20second%20table%20test%20input%0A%20%20%20%20fixtureWallet.push(Wallet(address(12)%2C%2012))%3B%20%20%20%20%20%20%20%20%0A%20%20%20%20fixtureSwap.push(Swap(false%2C%2012))%3B%0A%7D%0A%0Afunction%20tableSwapTest(Wallet%20memory%20wallet%2C%20Swap%20memory%20swap)%20public%20pure%20%7B%0A%20%20%20%20require(%0A%20%20%20%20%20%20%20%20(wallet.owner%20%3D%3D%20address(11)%20%26%26%20swap.swap)%20%7C%7C%20(wallet.owner%20%3D%3D%20address(12)%20%26%26%20!swap.swap)%2C%20%22not%20allowed%22%0A%20%20%20%20)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-function-snapshots-CGyZD2u7.js"),__vite__mapDeps([163,1])),path:"/forge/gas-tracking/gas-function-snapshots",type:"mdx",filePath:"forge/gas-tracking/gas-function-snapshots.md",content:"---%0Adescription%3A%20Capture%20and%20compare%20gas%20consumption%20snapshots%20for%20functions%20to%20track%20optimization%20progress%20over%20time.%0A---%0A%0A%23%23%20Gas%20Function%20Snapshots%0A%0AForge%20can%20generate%20gas%20snapshots%20for%20all%20your%20test%20functions.%20This%20can%0Abe%20useful%20to%20get%20a%20general%20feel%20for%20how%20much%20gas%20your%20contract%20will%20consume%2C%0Aor%20to%20compare%20gas%20usage%20before%20and%20after%20various%20optimizations.%0A%0ATo%20generate%20the%20gas%20snapshot%2C%20run%20%5B%60forge%20snapshot%60%5D(%2Fforge%2Freference%2Fforge-snapshot).%0A%0AThis%20will%20generate%20a%20file%20called%20%60.gas-snapshot%60%20by%20default%20with%20all%20your%0Atests%20and%20their%20respective%20gas%20usage.%0A%0A%60%60%60%0Aforge%20snapshot%0Acat%20.gas-snapshot%0A%0AERC20Test%3AtestApprove()%20(gas%3A%2031162)%0AERC20Test%3AtestBurn()%20(gas%3A%2059875)%0AERC20Test%3AtestRevertTransferFromInsufficientAllowance()%20(gas%3A%2081034)%0AERC20Test%3AtestRevertTransferFromInsufficientBalance()%20(gas%3A%2081662)%0AERC20Test%3AtestRevertTransferInsufficientBalance()%20(gas%3A%2052882)%0AERC20Test%3AtestInfiniteApproveTransferFrom()%20(gas%3A%2090167)%0AERC20Test%3AtestMetadata()%20(gas%3A%2014606)%0AERC20Test%3AtestMint()%20(gas%3A%2053830)%0AERC20Test%3AtestTransfer()%20(gas%3A%2060473)%0AERC20Test%3AtestTransferFrom()%20(gas%3A%2084152)%0A%60%60%60%0A%0A%23%23%23%20Filtering%0A%0AIf%20you%20would%20like%20to%20specify%20a%20different%20output%20file%2C%20run%20%60forge%20snapshot%20--snap%20%3CFILE_NAME%3E%60.%0A%0AYou%20can%20also%20sort%20the%20results%20by%20gas%20usage.%20Use%20the%20%60--asc%60%20option%20to%20sort%20the%20results%20in%0Aascending%20order%20and%20%60--desc%60%20to%20sort%20the%20results%20in%20descending%20order.%0A%0AFinally%2C%20you%20can%20also%20specify%20a%20min%2Fmax%20gas%20threshold%20for%20all%20your%20tests.%0ATo%20only%20include%20results%20above%20a%20threshold%2C%20you%20can%20use%20the%20%60--min%20%3CVALUE%3E%60%20option.%0AIn%20the%20same%20way%2C%20to%20only%20include%20results%20under%20a%20threshold%2C%0Ayou%20can%20use%20the%20%60--max%20%3CVALUE%3E%60%20option.%0A%0AKeep%20in%20mind%20that%20the%20changes%20will%20be%20made%20in%20the%20snapshot%20file%2C%20and%20not%20in%20the%20snapshot%20being%0Adisplayed%20on%20your%20screen.%0A%0AYou%20can%20also%20use%20it%20in%20combination%20with%20the%20filters%20for%20%60forge%20test%60%2C%20such%20as%20%60forge%20snapshot%20--match-path%20contracts%2Ftest%2FERC721.t.sol%60%20to%20generate%20a%20gas%20snapshot%20relevant%20to%20this%20test%20contract.%0A%0A%23%23%23%20Comparing%20gas%20usage%0A%0AIf%20you%20would%20like%20to%20compare%20the%20current%20snapshot%20file%20with%20your%0Alatest%20changes%2C%20you%20can%20use%20the%20%60--diff%60%20or%20%60--check%60%20options.%0A%0A%60--diff%60%20will%20compare%20against%20the%20snapshot%20and%20display%20changes%20from%20the%20snapshot.%0A%0AIt%20can%20also%20optionally%20take%20a%20file%20name%20(%60--diff%20%3CFILE_NAME%3E%60)%2C%20with%20the%20default%0Abeing%20%60.gas-snapshot%60.%0A%0AFor%20example%3A%0A%0A%60%60%60%0Aforge%20snapshot%20--diff%20.gas-snapshot2%0A%0ARunning%2010%20tests%20for%20src%2Ftest%2FERC20.t.sol%3AERC20Test%0A%5BPASS%5D%20testApprove()%20(gas%3A%2031162)%0A%5BPASS%5D%20testBurn()%20(gas%3A%2059875)%0A%5BPASS%5D%20testRevertTransferFromInsufficientAllowance()%20(gas%3A%2081034)%0A%5BPASS%5D%20testRevertTransferFromInsufficientBalance()%20(gas%3A%2081662)%0A%5BPASS%5D%20testRevertTransferInsufficientBalance()%20(gas%3A%2052882)%0A%5BPASS%5D%20testInfiniteApproveTransferFrom()%20(gas%3A%2090167)%0A%5BPASS%5D%20testMetadata()%20(gas%3A%2014606)%0A%5BPASS%5D%20testMint()%20(gas%3A%2053830)%0A%5BPASS%5D%20testTransfer()%20(gas%3A%2060473)%0A%5BPASS%5D%20testTransferFrom()%20(gas%3A%2084152)%0ATest%20result%3A%20ok.%2010%20passed%3B%200%20failed%3B%20finished%20in%202.86ms%0AtestBurn()%20(gas%3A%200%20(0.000%25))%0AtestRevertTransferFromInsufficientAllowance()%20(gas%3A%200%20(0.000%25))%0AtestRevertTransferFromInsufficientBalance()%20(gas%3A%200%20(0.000%25))%0AtestRevertTransferInsufficientBalance()%20(gas%3A%200%20(0.000%25))%0AtestInfiniteApproveTransferFrom()%20(gas%3A%200%20(0.000%25))%0AtestMetadata()%20(gas%3A%200%20(0.000%25))%0AtestMint()%20(gas%3A%200%20(0.000%25))%0AtestTransfer()%20(gas%3A%200%20(0.000%25))%0AtestTransferFrom()%20(gas%3A%200%20(0.000%25))%0AtestApprove()%20(gas%3A%20-8%20(-0.000%25))%0AOverall%20gas%20change%3A%20-8%20(-0.000%25)%0A%60%60%60%0A%0A%60--check%60%20will%20compare%20a%20snapshot%20with%20an%20existing%20snapshot%20file%20and%20display%20all%20the%0Adifferences%2C%20if%20any.%20You%20can%20change%20the%20file%20to%20compare%20against%20by%20providing%20a%20different%20file%20name%3A%20%60--check%20%3CFILE_NAME%3E%60.%0A%0AFor%20example%3A%0A%0A%60%60%60%0Aforge%20snapshot%20--check%20.gas-snapshot2%0A%0ARunning%2010%20tests%20for%20src%2Ftest%2FERC20.t.sol%3AERC20Test%0A%5BPASS%5D%20testApprove()%20(gas%3A%2031162)%0A%5BPASS%5D%20testBurn()%20(gas%3A%2059875)%0A%5BPASS%5D%20testRevertTransferFromInsufficientAllowance()%20(gas%3A%2081034)%0A%5BPASS%5D%20testRevertTransferFromInsufficientBalance()%20(gas%3A%2081662)%0A%5BPASS%5D%20testRevertTransferInsufficientBalance()%20(gas%3A%2052882)%0A%5BPASS%5D%20testInfiniteApproveTransferFrom()%20(gas%3A%2090167)%0A%5BPASS%5D%20testMetadata()%20(gas%3A%2014606)%0A%5BPASS%5D%20testMint()%20(gas%3A%2053830)%0A%5BPASS%5D%20testTransfer()%20(gas%3A%2060473)%0A%5BPASS%5D%20testTransferFrom()%20(gas%3A%2084152)%0ATest%20result%3A%20ok.%2010%20passed%3B%200%20failed%3B%20finished%20in%202.47ms%0ADiff%20in%20%22ERC20Test%3A%3AtestApprove()%22%3A%20consumed%20%22(gas%3A%2031162)%22%20gas%2C%20expected%20%22(gas%3A%2031170)%22%20gas%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-function-snapshots-CGyZD2u7.js"),__vite__mapDeps([163,1])),path:"/forge/gas-tracking/gas-function-snapshots.html",type:"mdx",filePath:"forge/gas-tracking/gas-function-snapshots.md",content:"---%0Adescription%3A%20Capture%20and%20compare%20gas%20consumption%20snapshots%20for%20functions%20to%20track%20optimization%20progress%20over%20time.%0A---%0A%0A%23%23%20Gas%20Function%20Snapshots%0A%0AForge%20can%20generate%20gas%20snapshots%20for%20all%20your%20test%20functions.%20This%20can%0Abe%20useful%20to%20get%20a%20general%20feel%20for%20how%20much%20gas%20your%20contract%20will%20consume%2C%0Aor%20to%20compare%20gas%20usage%20before%20and%20after%20various%20optimizations.%0A%0ATo%20generate%20the%20gas%20snapshot%2C%20run%20%5B%60forge%20snapshot%60%5D(%2Fforge%2Freference%2Fforge-snapshot).%0A%0AThis%20will%20generate%20a%20file%20called%20%60.gas-snapshot%60%20by%20default%20with%20all%20your%0Atests%20and%20their%20respective%20gas%20usage.%0A%0A%60%60%60%0Aforge%20snapshot%0Acat%20.gas-snapshot%0A%0AERC20Test%3AtestApprove()%20(gas%3A%2031162)%0AERC20Test%3AtestBurn()%20(gas%3A%2059875)%0AERC20Test%3AtestRevertTransferFromInsufficientAllowance()%20(gas%3A%2081034)%0AERC20Test%3AtestRevertTransferFromInsufficientBalance()%20(gas%3A%2081662)%0AERC20Test%3AtestRevertTransferInsufficientBalance()%20(gas%3A%2052882)%0AERC20Test%3AtestInfiniteApproveTransferFrom()%20(gas%3A%2090167)%0AERC20Test%3AtestMetadata()%20(gas%3A%2014606)%0AERC20Test%3AtestMint()%20(gas%3A%2053830)%0AERC20Test%3AtestTransfer()%20(gas%3A%2060473)%0AERC20Test%3AtestTransferFrom()%20(gas%3A%2084152)%0A%60%60%60%0A%0A%23%23%23%20Filtering%0A%0AIf%20you%20would%20like%20to%20specify%20a%20different%20output%20file%2C%20run%20%60forge%20snapshot%20--snap%20%3CFILE_NAME%3E%60.%0A%0AYou%20can%20also%20sort%20the%20results%20by%20gas%20usage.%20Use%20the%20%60--asc%60%20option%20to%20sort%20the%20results%20in%0Aascending%20order%20and%20%60--desc%60%20to%20sort%20the%20results%20in%20descending%20order.%0A%0AFinally%2C%20you%20can%20also%20specify%20a%20min%2Fmax%20gas%20threshold%20for%20all%20your%20tests.%0ATo%20only%20include%20results%20above%20a%20threshold%2C%20you%20can%20use%20the%20%60--min%20%3CVALUE%3E%60%20option.%0AIn%20the%20same%20way%2C%20to%20only%20include%20results%20under%20a%20threshold%2C%0Ayou%20can%20use%20the%20%60--max%20%3CVALUE%3E%60%20option.%0A%0AKeep%20in%20mind%20that%20the%20changes%20will%20be%20made%20in%20the%20snapshot%20file%2C%20and%20not%20in%20the%20snapshot%20being%0Adisplayed%20on%20your%20screen.%0A%0AYou%20can%20also%20use%20it%20in%20combination%20with%20the%20filters%20for%20%60forge%20test%60%2C%20such%20as%20%60forge%20snapshot%20--match-path%20contracts%2Ftest%2FERC721.t.sol%60%20to%20generate%20a%20gas%20snapshot%20relevant%20to%20this%20test%20contract.%0A%0A%23%23%23%20Comparing%20gas%20usage%0A%0AIf%20you%20would%20like%20to%20compare%20the%20current%20snapshot%20file%20with%20your%0Alatest%20changes%2C%20you%20can%20use%20the%20%60--diff%60%20or%20%60--check%60%20options.%0A%0A%60--diff%60%20will%20compare%20against%20the%20snapshot%20and%20display%20changes%20from%20the%20snapshot.%0A%0AIt%20can%20also%20optionally%20take%20a%20file%20name%20(%60--diff%20%3CFILE_NAME%3E%60)%2C%20with%20the%20default%0Abeing%20%60.gas-snapshot%60.%0A%0AFor%20example%3A%0A%0A%60%60%60%0Aforge%20snapshot%20--diff%20.gas-snapshot2%0A%0ARunning%2010%20tests%20for%20src%2Ftest%2FERC20.t.sol%3AERC20Test%0A%5BPASS%5D%20testApprove()%20(gas%3A%2031162)%0A%5BPASS%5D%20testBurn()%20(gas%3A%2059875)%0A%5BPASS%5D%20testRevertTransferFromInsufficientAllowance()%20(gas%3A%2081034)%0A%5BPASS%5D%20testRevertTransferFromInsufficientBalance()%20(gas%3A%2081662)%0A%5BPASS%5D%20testRevertTransferInsufficientBalance()%20(gas%3A%2052882)%0A%5BPASS%5D%20testInfiniteApproveTransferFrom()%20(gas%3A%2090167)%0A%5BPASS%5D%20testMetadata()%20(gas%3A%2014606)%0A%5BPASS%5D%20testMint()%20(gas%3A%2053830)%0A%5BPASS%5D%20testTransfer()%20(gas%3A%2060473)%0A%5BPASS%5D%20testTransferFrom()%20(gas%3A%2084152)%0ATest%20result%3A%20ok.%2010%20passed%3B%200%20failed%3B%20finished%20in%202.86ms%0AtestBurn()%20(gas%3A%200%20(0.000%25))%0AtestRevertTransferFromInsufficientAllowance()%20(gas%3A%200%20(0.000%25))%0AtestRevertTransferFromInsufficientBalance()%20(gas%3A%200%20(0.000%25))%0AtestRevertTransferInsufficientBalance()%20(gas%3A%200%20(0.000%25))%0AtestInfiniteApproveTransferFrom()%20(gas%3A%200%20(0.000%25))%0AtestMetadata()%20(gas%3A%200%20(0.000%25))%0AtestMint()%20(gas%3A%200%20(0.000%25))%0AtestTransfer()%20(gas%3A%200%20(0.000%25))%0AtestTransferFrom()%20(gas%3A%200%20(0.000%25))%0AtestApprove()%20(gas%3A%20-8%20(-0.000%25))%0AOverall%20gas%20change%3A%20-8%20(-0.000%25)%0A%60%60%60%0A%0A%60--check%60%20will%20compare%20a%20snapshot%20with%20an%20existing%20snapshot%20file%20and%20display%20all%20the%0Adifferences%2C%20if%20any.%20You%20can%20change%20the%20file%20to%20compare%20against%20by%20providing%20a%20different%20file%20name%3A%20%60--check%20%3CFILE_NAME%3E%60.%0A%0AFor%20example%3A%0A%0A%60%60%60%0Aforge%20snapshot%20--check%20.gas-snapshot2%0A%0ARunning%2010%20tests%20for%20src%2Ftest%2FERC20.t.sol%3AERC20Test%0A%5BPASS%5D%20testApprove()%20(gas%3A%2031162)%0A%5BPASS%5D%20testBurn()%20(gas%3A%2059875)%0A%5BPASS%5D%20testRevertTransferFromInsufficientAllowance()%20(gas%3A%2081034)%0A%5BPASS%5D%20testRevertTransferFromInsufficientBalance()%20(gas%3A%2081662)%0A%5BPASS%5D%20testRevertTransferInsufficientBalance()%20(gas%3A%2052882)%0A%5BPASS%5D%20testInfiniteApproveTransferFrom()%20(gas%3A%2090167)%0A%5BPASS%5D%20testMetadata()%20(gas%3A%2014606)%0A%5BPASS%5D%20testMint()%20(gas%3A%2053830)%0A%5BPASS%5D%20testTransfer()%20(gas%3A%2060473)%0A%5BPASS%5D%20testTransferFrom()%20(gas%3A%2084152)%0ATest%20result%3A%20ok.%2010%20passed%3B%200%20failed%3B%20finished%20in%202.47ms%0ADiff%20in%20%22ERC20Test%3A%3AtestApprove()%22%3A%20consumed%20%22(gas%3A%2031162)%22%20gas%2C%20expected%20%22(gas%3A%2031170)%22%20gas%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-reports-BFstDH-O.js"),__vite__mapDeps([164,1])),path:"/forge/gas-tracking/gas-reports",type:"mdx",filePath:"forge/gas-tracking/gas-reports.md",content:"---%0Adescription%3A%20Generate%20detailed%20gas%20consumption%20reports%20for%20contract%20functions.%0A---%0A%0A%23%23%20Gas%20Reports%0A%0AForge%20can%20produce%20gas%20reports%20for%20your%20contracts.%20You%20can%20configure%20which%20contracts%20output%20gas%20reports%20via%20the%20%60gas_reports%60%20field%20in%20%60foundry.toml%60.%0A%0ATo%20produce%20reports%20for%20specific%20contracts%3A%0A%0A%60%60%60toml%0Agas_reports%20%3D%20%5B%22MyContract%22%2C%20%22MyContractFactory%22%5D%0A%60%60%60%0A%0ATo%20produce%20reports%20for%20all%20contracts%3A%0A%0A%60%60%60toml%0Agas_reports%20%3D%20%5B%22*%22%5D%0A%60%60%60%0A%0ATo%20generate%20gas%20reports%2C%20run%20%60forge%20test%20--gas-report%60.%0A%0AYou%20can%20also%20use%20it%20in%20combination%20with%20other%20subcommands%2C%20such%20as%20%60forge%20test%20--match-test%20testBurn%20--gas-report%60%2C%20to%20generate%20only%20a%20gas%20report%20relevant%20to%20this%20test.%0A%0AExample%20outputockERC1155%20contracteployment%20Cost%20%20%20%20%20%20%20%E2%94%86%20Deployment%20Sizeunction%20Name%20%20%20%20%20%20%20%20%20%E2%94%86%20min%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20avg%20%20%20%20%E2%94%86%20median%20%E2%94%86%20max%20%20%20%20%E2%94%86%20%23%20callsbalanceOf%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20596%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20596%20%20%20%20%E2%94%86%20596%20%20%20%20%E2%94%86%20596%20%20%20%20%E2%94%86%2044%20%20%20%20%20%20%E2%94%82%0A%E2%94%9C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%A4%0A%E2%94%82%20balanceOfBatchbatchBurnbatchMintburnisApprovedForAllmintsafeBatchTransferFromsafeTransferFromsetApprovalForAllxample%20contracteployment%20Cost%20%20%20%20%20%20%20%E2%94%86%20Deployment%20Sizeunction%20Name%20%20%20%20%20%20%20%20%20%E2%94%86%20min%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20avg%20%20%20%20%E2%94%86%20median%20%E2%94%86%20max%20%20%20%20%E2%94%86%20%23%20callsfoobarbazou%20can%20also%20ignore%20contracts%20via%20the%20%60gas_reports_ignore%60%20field%20in%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0Agas_reports_ignore%20%3D%20%5B%22Example%22%5D%0A%60%60%60%0A%0AThis%20would%20change%20the%20output%20toockERC1155%20contracteployment%20Cost%20%20%20%20%20%20%20%E2%94%86%20Deployment%20Sizeunction%20Name%20%20%20%20%20%20%20%20%20%E2%94%86%20min%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20avg%20%20%20%20%E2%94%86%20median%20%E2%94%86%20max%20%20%20%20%E2%94%86%20%23%20callsbalanceOfbalanceOfBatchbatchBurnbatchMintburnisApprovedForAllmintsafeBatchTransferFromsafeTransferFromsetApprovalForAlllastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-reports-BFstDH-O.js"),__vite__mapDeps([164,1])),path:"/forge/gas-tracking/gas-reports.html",type:"mdx",filePath:"forge/gas-tracking/gas-reports.md",content:"---%0Adescription%3A%20Generate%20detailed%20gas%20consumption%20reports%20for%20contract%20functions.%0A---%0A%0A%23%23%20Gas%20Reports%0A%0AForge%20can%20produce%20gas%20reports%20for%20your%20contracts.%20You%20can%20configure%20which%20contracts%20output%20gas%20reports%20via%20the%20%60gas_reports%60%20field%20in%20%60foundry.toml%60.%0A%0ATo%20produce%20reports%20for%20specific%20contracts%3A%0A%0A%60%60%60toml%0Agas_reports%20%3D%20%5B%22MyContract%22%2C%20%22MyContractFactory%22%5D%0A%60%60%60%0A%0ATo%20produce%20reports%20for%20all%20contracts%3A%0A%0A%60%60%60toml%0Agas_reports%20%3D%20%5B%22*%22%5D%0A%60%60%60%0A%0ATo%20generate%20gas%20reports%2C%20run%20%60forge%20test%20--gas-report%60.%0A%0AYou%20can%20also%20use%20it%20in%20combination%20with%20other%20subcommands%2C%20such%20as%20%60forge%20test%20--match-test%20testBurn%20--gas-report%60%2C%20to%20generate%20only%20a%20gas%20report%20relevant%20to%20this%20test.%0A%0AExample%20outputockERC1155%20contracteployment%20Cost%20%20%20%20%20%20%20%E2%94%86%20Deployment%20Sizeunction%20Name%20%20%20%20%20%20%20%20%20%E2%94%86%20min%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20avg%20%20%20%20%E2%94%86%20median%20%E2%94%86%20max%20%20%20%20%E2%94%86%20%23%20callsbalanceOfbalanceOfBatch%20%20%20%20%20%20%20%20%E2%94%86%202363%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%204005%20%20%20%E2%94%86%204005%20%20%20%E2%94%86%205647%20%20%20%E2%94%86%202%20%20%20%20%20%20%20%E2%94%82%0A%E2%94%9C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%A4%0A%E2%94%82%20batchBurnbatchMintburnisApprovedForAllmintsafeBatchTransferFromsafeTransferFromsetApprovalForAllxample%20contracteployment%20Cost%20%20%20%20%20%20%20%E2%94%86%20Deployment%20Sizeunction%20Name%20%20%20%20%20%20%20%20%20%E2%94%86%20min%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20avg%20%20%20%20%E2%94%86%20median%20%E2%94%86%20max%20%20%20%20%E2%94%86%20%23%20callsfoobarbazou%20can%20also%20ignore%20contracts%20via%20the%20%60gas_reports_ignore%60%20field%20in%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0Agas_reports_ignore%20%3D%20%5B%22Example%22%5D%0A%60%60%60%0A%0AThis%20would%20change%20the%20output%20toockERC1155%20contracteployment%20Cost%20%20%20%20%20%20%20%E2%94%86%20Deployment%20Sizeunction%20Name%20%20%20%20%20%20%20%20%20%E2%94%86%20min%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20avg%20%20%20%20%E2%94%86%20median%20%E2%94%86%20max%20%20%20%20%E2%94%86%20%23%20calls%20%E2%94%82%0A%E2%94%9C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%A4%0A%E2%94%82%20balanceOfbalanceOfBatch%20%20%20%20%20%20%20%20%E2%94%86%202363%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%204005%20%20%20%E2%94%86%204005%20%20%20%E2%94%86%205647%20%20%20%E2%94%86%202%20%20%20%20%20%20%20%E2%94%82%0A%E2%94%9C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%A4%0A%E2%94%82%20batchBurn%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%202126%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%205560%20%20%20%E2%94%86%202584%20%20%20%E2%94%86%2011970%20%20%E2%94%86%203%20%20%20%20%20%20%20%E2%94%82%0A%E2%94%9C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%A4%0A%E2%94%82%20batchMint%20%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%202444%20%20%20%20%20%20%20%20%20%20%20%20%E2%94%86%20135299%20%E2%94%86%20125081%20%E2%94%86%20438531%20%E2%94%86%2018%20%20%20%20%20%20%E2%94%82%0A%E2%94%9C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%BC%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%95%8C%E2%94%A4%0A%E2%94%82%20burnisApprovedForAllmintsafeBatchTransferFromsafeTransferFromsetApprovalForAlllastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-section-snapshots-z5qAwNlS.js"),__vite__mapDeps([165,166,1])),path:"/forge/gas-tracking/gas-section-snapshots",type:"mdx",filePath:"forge/gas-tracking/gas-section-snapshots.mdx",content:"---%0Adescription%3A%20Capture%20granular%20gas%20usage%20measurements%20for%20arbitrary%20code%20sections%20using%20snapshotGas%20cheatcodes%20in%20tests.%0A---%0A%0Aimport%20GasSnapshots%20from%20%22..%2F..%2Freference%2Fcheatcodes%2Fgas-snapshots.mdx%22%3B%0A%0A%23%20Gas%20Section%20Snapshots%0A%0AForge%20can%20capture%20gas%20snapshots%20over%20arbitrary%20sections%20inside%20of%20your%20test%20functions.%20This%20can%20be%20useful%20to%20get%20a%20granular%20measurement%20of%20how%20much%20gas%20your%20logic%20is%20consuming%20as%20both%20external%20calls%20and%20internal%20gas%20usage%20are%20measured.%0A%0AInstead%20of%20running%20a%20command%20like%20%60forge%20snapshot%60%20or%20%60forge%20test%20--gas-report%60%2C%20you%20use%20the%20%60snapshotGas%60%20%5Bcheatcodes%5D(%2Freference%2Fcheatcodes%2Fgas-snapshots)%20in%20your%20tests%20to%20capture%20gas%20usage%20as%20follows%3A%0A%0A%3CGasSnapshots%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-section-snapshots-z5qAwNlS.js"),__vite__mapDeps([165,166,1])),path:"/forge/gas-tracking/gas-section-snapshots.html",type:"mdx",filePath:"forge/gas-tracking/gas-section-snapshots.mdx",content:"---%0Adescription%3A%20Capture%20granular%20gas%20usage%20measurements%20for%20arbitrary%20code%20sections%20using%20snapshotGas%20cheatcodes%20in%20tests.%0A---%0A%0Aimport%20GasSnapshots%20from%20%22..%2F..%2Freference%2Fcheatcodes%2Fgas-snapshots.mdx%22%3B%0A%0A%23%20Gas%20Section%20Snapshots%0A%0AForge%20can%20capture%20gas%20snapshots%20over%20arbitrary%20sections%20inside%20of%20your%20test%20functions.%20This%20can%20be%20useful%20to%20get%20a%20granular%20measurement%20of%20how%20much%20gas%20your%20logic%20is%20consuming%20as%20both%20external%20calls%20and%20internal%20gas%20usage%20are%20measured.%0A%0AInstead%20of%20running%20a%20command%20like%20%60forge%20snapshot%60%20or%20%60forge%20test%20--gas-report%60%2C%20you%20use%20the%20%60snapshotGas%60%20%5Bcheatcodes%5D(%2Freference%2Fcheatcodes%2Fgas-snapshots)%20in%20your%20tests%20to%20capture%20gas%20usage%20as%20follows%3A%0A%0A%3CGasSnapshots%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-WQNOddVC.js"),__vite__mapDeps([167,1])),path:"/forge/gas-tracking/overview",type:"mdx",filePath:"forge/gas-tracking/overview.md",content:"---%0Adescription%3A%20Track%20and%20optimize%20gas%20consumption%20with%20reports%2C%20function%20snapshots%2C%20and%20section%20snapshots%20for%20performance%20analysis.%0A---%0A%0A%23%23%20Gas%20Tracking%0A%0AForge%20can%20help%20you%20estimate%20how%20much%20gas%20your%20contract%20will%20consume.%0A%0ACurrently%2C%20Forge%20ships%20with%20three%20different%20tools%20for%20this%20job%3A%0A%0A-%20%5B**Gas%20reports**%5D(%2Fforge%2Fgas-tracking%2Fgas-reports)%3A%20Gas%20reports%20give%20you%20an%20overview%20of%20how%20much%20Forge%20thinks%20the%0A%20%20individual%20functions%20in%20your%20contracts%20will%20consume%20in%20gas.%0A-%20%5B**Gas%20function%20snapshots**%5D(%2Fforge%2Fgas-tracking%2Fgas-function-snapshots)%3A%20Gas%20function%20snapshots%20give%20you%20an%20overview%20of%20how%20much%0A%20%20each%20test%20function%20consumes%20in%20gas.%0A-%20%5B**Gas%20section%20snapshots**%5D(%2Fforge%2Fgas-tracking%2Fgas-section-snapshots)%3A%20Gas%20section%20snapshots%20give%20you%20the%20ability%20to%20capture%20gas%20usage%20over%20arbitrary%20sections%20inside%20of%20test%20functions.%0A%20%20This%20also%20tracks%20internal%20gas%20usage.%20You%20can%20access%20this%20by%20using%20the%20%60snapshotGas*%60%20cheatcodes%20inside%20your%20tests.%0A%0AGas%20reports%2C%20gas%20function%20snapshots%20and%20gas%20section%20snapshots%20differ%20in%20some%20ways%3A%0A%0A-%20Gas%20reports%20use%20tracing%20to%20figure%20out%20gas%20costs%20for%20individual%20contract%20calls.%20%20%0A%20%20This%20gives%20more%20granular%20insight%2C%20at%20the%20cost%20of%20speed.%0A-%20Gas%20function%20snapshots%20have%20more%20built-in%20tools%2C%20such%20as%20diffs%20and%20exporting%20the%20results%20to%20a%20file.%0A%20%20Snapshots%20are%20not%20as%20granular%20as%20gas%20reports%2C%20but%20they%20are%20faster%20to%20generate.%0A-%20Gas%20section%20snapshots%20provides%20the%20most%20granular%20way%20to%20capture%20gas%20usage.%20Every%20captured%20gas%20snapshot%20is%20written%20to%20a%20file%20in%20a%20%60snapshots%60%20directory.%0A%20%20By%20default%20these%20snapshots%20are%20grouped%20by%20the%20contract%20name%20of%20the%20test.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-WQNOddVC.js"),__vite__mapDeps([167,1])),path:"/forge/gas-tracking/overview.html",type:"mdx",filePath:"forge/gas-tracking/overview.md",content:"---%0Adescription%3A%20Track%20and%20optimize%20gas%20consumption%20with%20reports%2C%20function%20snapshots%2C%20and%20section%20snapshots%20for%20performance%20analysis.%0A---%0A%0A%23%23%20Gas%20Tracking%0A%0AForge%20can%20help%20you%20estimate%20how%20much%20gas%20your%20contract%20will%20consume.%0A%0ACurrently%2C%20Forge%20ships%20with%20three%20different%20tools%20for%20this%20job%3A%0A%0A-%20%5B**Gas%20reports**%5D(%2Fforge%2Fgas-tracking%2Fgas-reports)%3A%20Gas%20reports%20give%20you%20an%20overview%20of%20how%20much%20Forge%20thinks%20the%0A%20%20individual%20functions%20in%20your%20contracts%20will%20consume%20in%20gas.%0A-%20%5B**Gas%20function%20snapshots**%5D(%2Fforge%2Fgas-tracking%2Fgas-function-snapshots)%3A%20Gas%20function%20snapshots%20give%20you%20an%20overview%20of%20how%20much%0A%20%20each%20test%20function%20consumes%20in%20gas.%0A-%20%5B**Gas%20section%20snapshots**%5D(%2Fforge%2Fgas-tracking%2Fgas-section-snapshots)%3A%20Gas%20section%20snapshots%20give%20you%20the%20ability%20to%20capture%20gas%20usage%20over%20arbitrary%20sections%20inside%20of%20test%20functions.%0A%20%20This%20also%20tracks%20internal%20gas%20usage.%20You%20can%20access%20this%20by%20using%20the%20%60snapshotGas*%60%20cheatcodes%20inside%20your%20tests.%0A%0AGas%20reports%2C%20gas%20function%20snapshots%20and%20gas%20section%20snapshots%20differ%20in%20some%20ways%3A%0A%0A-%20Gas%20reports%20use%20tracing%20to%20figure%20out%20gas%20costs%20for%20individual%20contract%20calls.%20%20%0A%20%20This%20gives%20more%20granular%20insight%2C%20at%20the%20cost%20of%20speed.%0A-%20Gas%20function%20snapshots%20have%20more%20built-in%20tools%2C%20such%20as%20diffs%20and%20exporting%20the%20results%20to%20a%20file.%0A%20%20Snapshots%20are%20not%20as%20granular%20as%20gas%20reports%2C%20but%20they%20are%20faster%20to%20generate.%0A-%20Gas%20section%20snapshots%20provides%20the%20most%20granular%20way%20to%20capture%20gas%20usage.%20Every%20captured%20gas%20snapshot%20is%20written%20to%20a%20file%20in%20a%20%60snapshots%60%20directory.%0A%20%20By%20default%20these%20snapshots%20are%20grouped%20by%20the%20contract%20name%20of%20the%20test.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CyzlaiFo.js"),__vite__mapDeps([168,1])),path:"/forge/reference/README",type:"mdx",filePath:"forge/reference/README.mdx",content:"%23%23%20forge%20Commands%0A%0A-%20%5BGeneral%20Commands%5D(%2Fforge%2Freference%2Fgeneral-commands.mdx)%0A-%20%5BProject%20Commands%5D(%2Fforge%2Freference%2Fproject-commands.mdx)%0A-%20%5BBuild%20Commands%5D(%2Fforge%2Freference%2Fbuild-commands.mdx)%0A-%20%5BTest%20Commands%5D(%2Fforge%2Freference%2Ftest-commands.mdx)%0A-%20%5BDeploy%20Commands%5D(%2Fforge%2Freference%2Fdeploy-commands.mdx)%0A-%20%5BUtility%20Commands%5D(%2Fforge%2Freference%2Futility-commands.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./README-CyzlaiFo.js"),__vite__mapDeps([168,1])),path:"/forge/reference/README.html",type:"mdx",filePath:"forge/reference/README.mdx",content:"%23%23%20forge%20Commands%0A%0A-%20%5BGeneral%20Commands%5D(%2Fforge%2Freference%2Fgeneral-commands.mdx)%0A-%20%5BProject%20Commands%5D(%2Fforge%2Freference%2Fproject-commands.mdx)%0A-%20%5BBuild%20Commands%5D(%2Fforge%2Freference%2Fbuild-commands.mdx)%0A-%20%5BTest%20Commands%5D(%2Fforge%2Freference%2Ftest-commands.mdx)%0A-%20%5BDeploy%20Commands%5D(%2Fforge%2Freference%2Fdeploy-commands.mdx)%0A-%20%5BUtility%20Commands%5D(%2Fforge%2Freference%2Futility-commands.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./build-commands-D7P19DfK.js"),__vite__mapDeps([169,1])),path:"/forge/reference/build-commands",type:"mdx",filePath:"forge/reference/build-commands.mdx",content:"%23%23%20Build%20Commands%0A%0A-%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%0A-%20%5Bforge%20clean%5D(%2Fforge%2Freference%2Fforge-clean.mdx)%0A-%20%5Bforge%20inspect%5D(%2Fforge%2Freference%2Fforge-inspect.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./build-commands-D7P19DfK.js"),__vite__mapDeps([169,1])),path:"/forge/reference/build-commands.html",type:"mdx",filePath:"forge/reference/build-commands.mdx",content:"%23%23%20Build%20Commands%0A%0A-%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%0A-%20%5Bforge%20clean%5D(%2Fforge%2Freference%2Fforge-clean.mdx)%0A-%20%5Bforge%20inspect%5D(%2Fforge%2Freference%2Fforge-inspect.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./common-options-GfkPOrEd.js"),__vite__mapDeps([170,1])),path:"/forge/reference/common-options",type:"mdx",filePath:"forge/reference/common-options.mdx",content:"%23%23%23%23%20Common%20Options%0A%0A%60-h%60%20%20%0A%60--help%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20help%20information.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./common-options-GfkPOrEd.js"),__vite__mapDeps([170,1])),path:"/forge/reference/common-options.html",type:"mdx",filePath:"forge/reference/common-options.mdx",content:"%23%23%23%23%20Common%20Options%0A%0A%60-h%60%20%20%0A%60--help%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20help%20information.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./compiler-options-BCpvSNbq.js"),__vite__mapDeps([171,1])),path:"/forge/reference/compiler-options",type:"mdx",filePath:"forge/reference/compiler-options.mdx",content:"%23%23%23%23%20Compiler%20Options%0A%0A%60--optimize%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BActivate%20the%20Solidity%20optimizer.%0A%0A%60--optimizer-runs%60%20*runs*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20number%20of%20optimizer%20runs.%0A%0A%60--via-ir%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20Yul%20intermediate%20representation%20compilation%20pipeline.%0A%0A%60--revert-strings%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BHow%20to%20treat%20revert%20and%20require%20reason%20strings.%0A%0A%60--use%60%20*solc_version*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20solc%20version%2C%20or%20a%20path%20to%20a%20local%20solc%2C%20to%20build%20with.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BValid%20values%20are%20in%20the%20format%20%60x.y.z%60%2C%20%60solc%3Ax.y.z%60%20or%20%60path%2Fto%2Fsolc%60.%0A%0A%60--offline%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20access%20the%20network.%20Missing%20solc%20versions%20will%20not%20be%20installed.%0A%0A%60--no-auto-detect%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20auto-detect%20solc.%0A%0A%60--ignored-error-codes%60%20*error_codes*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIgnore%20solc%20warnings%20by%20error%20code.%20The%20parameter%20is%20a%20comma-separated%20list%20of%20error%20codes.%0A%0A%60--extra-output%60%20*selector*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExtra%20output%20to%20include%20in%20the%20contract's%20artifact.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExample%20keys%3A%20%60abi%60%2C%20%60storageLayout%60%2C%20%60evm.assembly%60%2C%20%60ewasm%60%2C%20%60ir%60%2C%20%60ir-optimized%60%2C%20%60metadata%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFor%20a%20full%20description%2C%20see%20the%20%5BSolidity%20docs%5D%5Boutput-desc%5D.%0A%0A%60--extra-output-files%60%20*selector*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExtra%20output%20to%20write%20to%20separate%20files.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExample%20keys%3A%20%60abi%60%2C%20%60storageLayout%60%2C%20%60evm.assembly%60%2C%20%60ewasm%60%2C%20%60ir%60%2C%20%60ir-optimized%60%2C%20%60metadata%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFor%20a%20full%20description%2C%20see%20the%20%5BSolidity%20docs%5D%5Boutput-desc%5D.%0A%0A%60--evm-version%60%20*version*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20target%20EVM%20version.%0A%0A%5Boutput-desc%5D%3A%20https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-api%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./compiler-options-BCpvSNbq.js"),__vite__mapDeps([171,1])),path:"/forge/reference/compiler-options.html",type:"mdx",filePath:"forge/reference/compiler-options.mdx",content:"%23%23%23%23%20Compiler%20Options%0A%0A%60--optimize%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BActivate%20the%20Solidity%20optimizer.%0A%0A%60--optimizer-runs%60%20*runs*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20number%20of%20optimizer%20runs.%0A%0A%60--via-ir%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20Yul%20intermediate%20representation%20compilation%20pipeline.%0A%0A%60--revert-strings%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BHow%20to%20treat%20revert%20and%20require%20reason%20strings.%0A%0A%60--use%60%20*solc_version*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20solc%20version%2C%20or%20a%20path%20to%20a%20local%20solc%2C%20to%20build%20with.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BValid%20values%20are%20in%20the%20format%20%60x.y.z%60%2C%20%60solc%3Ax.y.z%60%20or%20%60path%2Fto%2Fsolc%60.%0A%0A%60--offline%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20access%20the%20network.%20Missing%20solc%20versions%20will%20not%20be%20installed.%0A%0A%60--no-auto-detect%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20auto-detect%20solc.%0A%0A%60--ignored-error-codes%60%20*error_codes*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIgnore%20solc%20warnings%20by%20error%20code.%20The%20parameter%20is%20a%20comma-separated%20list%20of%20error%20codes.%0A%0A%60--extra-output%60%20*selector*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExtra%20output%20to%20include%20in%20the%20contract's%20artifact.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExample%20keys%3A%20%60abi%60%2C%20%60storageLayout%60%2C%20%60evm.assembly%60%2C%20%60ewasm%60%2C%20%60ir%60%2C%20%60ir-optimized%60%2C%20%60metadata%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFor%20a%20full%20description%2C%20see%20the%20%5BSolidity%20docs%5D%5Boutput-desc%5D.%0A%0A%60--extra-output-files%60%20*selector*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExtra%20output%20to%20write%20to%20separate%20files.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExample%20keys%3A%20%60abi%60%2C%20%60storageLayout%60%2C%20%60evm.assembly%60%2C%20%60ewasm%60%2C%20%60ir%60%2C%20%60ir-optimized%60%2C%20%60metadata%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFor%20a%20full%20description%2C%20see%20the%20%5BSolidity%20docs%5D%5Boutput-desc%5D.%0A%0A%60--evm-version%60%20*version*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20target%20EVM%20version.%0A%0A%5Boutput-desc%5D%3A%20https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-api%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./core-build-options-Dgi0sYgk.js"),__vite__mapDeps([172,171,1,173])),path:"/forge/reference/core-build-options",type:"mdx",filePath:"forge/reference/core-build-options.mdx",content:"import%20CompilerOptions%20from%20%22.%2Fcompiler-options.mdx%22%3B%0Aimport%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0A%0A%23%23%23%23%20Cache%20Options%0A%0A%60--force%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BClear%20the%20cache%20and%20artifacts%20folder%20and%20recompile.%0A%0A%23%23%23%23%20Linker%20Options%0A%0A%60--libraries%60%20_libraries_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSet%20pre-linked%20libraries.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20parameter%20must%20be%20in%20the%20format%20%60%3Cremapped%20path%20to%20lib%3E%3A%3Clibrary%20name%3E%3A%3Caddress%3E%60%2C%20e.g.%20%60src%2FContract.sol%3ALibrary%3A0x...%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20also%20be%20set%20in%20your%20configuration%20file%20as%20%60libraries%20%3D%20%5B%22%3Cpath%3E%3A%3Clib%20name%3E%3A%3Caddress%3E%22%5D%60.%0A%0A%3CCompilerOptions%20%2F%3E%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%60-o%60%20_path_%20%20%0A%60--out%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20artifacts%20directory.%0A%0A%60--silent%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSuppress%20all%20output.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./core-build-options-Dgi0sYgk.js"),__vite__mapDeps([172,171,1,173])),path:"/forge/reference/core-build-options.html",type:"mdx",filePath:"forge/reference/core-build-options.mdx",content:"import%20CompilerOptions%20from%20%22.%2Fcompiler-options.mdx%22%3B%0Aimport%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0A%0A%23%23%23%23%20Cache%20Options%0A%0A%60--force%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BClear%20the%20cache%20and%20artifacts%20folder%20and%20recompile.%0A%0A%23%23%23%23%20Linker%20Options%0A%0A%60--libraries%60%20_libraries_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSet%20pre-linked%20libraries.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20parameter%20must%20be%20in%20the%20format%20%60%3Cremapped%20path%20to%20lib%3E%3A%3Clibrary%20name%3E%3A%3Caddress%3E%60%2C%20e.g.%20%60src%2FContract.sol%3ALibrary%3A0x...%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCan%20also%20be%20set%20in%20your%20configuration%20file%20as%20%60libraries%20%3D%20%5B%22%3Cpath%3E%3A%3Clib%20name%3E%3A%3Caddress%3E%22%5D%60.%0A%0A%3CCompilerOptions%20%2F%3E%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%60-o%60%20_path_%20%20%0A%60--out%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20artifacts%20directory.%0A%0A%60--silent%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSuppress%20all%20output.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deploy-commands-n0zDVeJq.js"),__vite__mapDeps([174,1])),path:"/forge/reference/deploy-commands",type:"mdx",filePath:"forge/reference/deploy-commands.mdx",content:"%23%23%20Deploy%20Commands%0A%0A-%20%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%0A-%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A-%20%5Bforge%20verify-check%5D(%2Fforge%2Freference%2Fforge-verify-check.mdx)%0A-%20%5Bforge%20flatten%5D(%2Fforge%2Freference%2Fforge-flatten.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deploy-commands-n0zDVeJq.js"),__vite__mapDeps([174,1])),path:"/forge/reference/deploy-commands.html",type:"mdx",filePath:"forge/reference/deploy-commands.mdx",content:"%23%23%20Deploy%20Commands%0A%0A-%20%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%0A-%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A-%20%5Bforge%20verify-check%5D(%2Fforge%2Freference%2Fforge-verify-check.mdx)%0A-%20%5Bforge%20flatten%5D(%2Fforge%2Freference%2Fforge-flatten.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./evm-options-CIv_ltnd.js"),__vite__mapDeps([175,1])),path:"/forge/reference/evm-options",type:"mdx",filePath:"forge/reference/evm-options.mdx",content:"%23%23%23%23%20EVM%20Options%0A%0A%60-f%60%20*url*%20%20%0A%60--rpc-url%60%20*url*%20%20%0A%60--fork-url%60%20*url*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFetch%20state%20over%20a%20remote%20endpoint%20instead%20of%20starting%20from%20an%20empty%20state.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIn%20most%20cases%2C%20%60--rpc-url%60%20is%20preferred%20for%20specifying%20network%20connections%2C%20including%20custom%20chains.%0A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20you%20want%20to%20fetch%20state%20from%20a%20specific%20block%20number%2C%20see%0A%60--fork-block-number%60.%0A%0A%60--fork-block-number%60%20*block*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFetch%20state%20from%20a%20specific%20block%20number%20over%20a%20remote%20endpoint.%20See%20%60--fork-url%60.%0A%0A%60--fork-retry-backoff%20%3CBACKOFF%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Initial%20retry%20backoff%20on%20encountering%20errors.%0A%0A%60--no-storage-caching%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExplicitly%20disables%20the%20use%20of%20RPC%20caching.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAll%20storage%20slots%20are%20read%20entirely%20from%20the%20endpoint.%20See%20%60--fork-url%60.%0A%0A%60-v%60%20%20%0A%60--verbosity%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerbosity%20of%20the%20EVM.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPass%20multiple%20times%20to%20increase%20the%20verbosity%20(e.g.%20%60-v%60%2C%20%60-vv%60%2C%20%60-vvv%60).%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerbosity%20levels%3A%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%202%3A%20Print%20logs%20for%20all%20tests%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%203%3A%20Print%20execution%20traces%20for%20failing%20tests%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%204%3A%20Print%20execution%20traces%20for%20all%20tests%2C%20and%20setup%20traces%20for%20failing%20tests%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%205%3A%20Print%20execution%20and%20setup%20traces%20for%20all%20tests%0A%0A%60--sender%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20address%20which%20will%20be%20executing%20tests%0A%0A%60--initial-balance%60%20*balance*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20initial%20balance%20of%20deployed%20contracts%0A%0A%60--ffi%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnables%20the%20%5BFFI%20cheatcode%5D%5Bffi-cheatcode%5D%0A%0A%5Bffi-cheatcode%5D%3A%20..%2F..%2Fcheatcodes%2Fffi.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./evm-options-CIv_ltnd.js"),__vite__mapDeps([175,1])),path:"/forge/reference/evm-options.html",type:"mdx",filePath:"forge/reference/evm-options.mdx",content:"%23%23%23%23%20EVM%20Options%0A%0A%60-f%60%20*url*%20%20%0A%60--rpc-url%60%20*url*%20%20%0A%60--fork-url%60%20*url*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFetch%20state%20over%20a%20remote%20endpoint%20instead%20of%20starting%20from%20an%20empty%20state.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIn%20most%20cases%2C%20%60--rpc-url%60%20is%20preferred%20for%20specifying%20network%20connections%2C%20including%20custom%20chains.%0A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20you%20want%20to%20fetch%20state%20from%20a%20specific%20block%20number%2C%20see%0A%60--fork-block-number%60.%0A%0A%60--fork-block-number%60%20*block*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFetch%20state%20from%20a%20specific%20block%20number%20over%20a%20remote%20endpoint.%20See%20%60--fork-url%60.%0A%0A%60--fork-retry-backoff%20%3CBACKOFF%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Initial%20retry%20backoff%20on%20encountering%20errors.%0A%0A%60--no-storage-caching%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExplicitly%20disables%20the%20use%20of%20RPC%20caching.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAll%20storage%20slots%20are%20read%20entirely%20from%20the%20endpoint.%20See%20%60--fork-url%60.%0A%0A%60-v%60%20%20%0A%60--verbosity%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerbosity%20of%20the%20EVM.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPass%20multiple%20times%20to%20increase%20the%20verbosity%20(e.g.%20%60-v%60%2C%20%60-vv%60%2C%20%60-vvv%60).%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerbosity%20levels%3A%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%202%3A%20Print%20logs%20for%20all%20tests%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%203%3A%20Print%20execution%20traces%20for%20failing%20tests%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%204%3A%20Print%20execution%20traces%20for%20all%20tests%2C%20and%20setup%20traces%20for%20failing%20tests%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%205%3A%20Print%20execution%20and%20setup%20traces%20for%20all%20tests%0A%0A%60--sender%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20address%20which%20will%20be%20executing%20tests%0A%0A%60--initial-balance%60%20*balance*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20initial%20balance%20of%20deployed%20contracts%0A%0A%60--ffi%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnables%20the%20%5BFFI%20cheatcode%5D%5Bffi-cheatcode%5D%0A%0A%5Bffi-cheatcode%5D%3A%20..%2F..%2Fcheatcodes%2Fffi.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./executor-options-CW-TDtAD.js"),__vite__mapDeps([176,1])),path:"/forge/reference/executor-options",type:"mdx",filePath:"forge/reference/executor-options.mdx",content:"%23%23%23%23%20Executor%20Options%0A%0A%60--base-fee%20%3CFEE%3E%60%20%20%0A%60--block-base-fee-per-gas%20%3CFEE%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20base%20fee%20in%20a%20block%20(in%20wei).%0A%0A%60--block-coinbase%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20coinbase%20of%20the%20block.%0A%0A%60--block-difficulty%60%20*difficulty*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20difficulty.%0A%0A%60--block-gas-limit%60%20*gas_limit*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20gas%20limit.%0A%0A%60--block-number%60%20*block*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20number.%0A%0A%60--block-timestamp%60%20*timestamp*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20timestamp%20of%20the%20block%20(in%20seconds).%0A%0A%60--chain-id%60%20*chain_id*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20chain%20ID.%0A%0A%60--gas-limit%60%20*gas_limit*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20gas%20limit.%0A%0A%60--gas-price%60%20*gas_price*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20gas%20price%20(in%20wei).%0A%0A%60--tx-origin%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20transaction%20origin.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./executor-options-CW-TDtAD.js"),__vite__mapDeps([176,1])),path:"/forge/reference/executor-options.html",type:"mdx",filePath:"forge/reference/executor-options.mdx",content:"%23%23%23%23%20Executor%20Options%0A%0A%60--base-fee%20%3CFEE%3E%60%20%20%0A%60--block-base-fee-per-gas%20%3CFEE%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20base%20fee%20in%20a%20block%20(in%20wei).%0A%0A%60--block-coinbase%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20coinbase%20of%20the%20block.%0A%0A%60--block-difficulty%60%20*difficulty*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20difficulty.%0A%0A%60--block-gas-limit%60%20*gas_limit*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20gas%20limit.%0A%0A%60--block-number%60%20*block*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20number.%0A%0A%60--block-timestamp%60%20*timestamp*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20timestamp%20of%20the%20block%20(in%20seconds).%0A%0A%60--chain-id%60%20*chain_id*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20chain%20ID.%0A%0A%60--gas-limit%60%20*gas_limit*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20block%20gas%20limit.%0A%0A%60--gas-price%60%20*gas_price*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20gas%20price%20(in%20wei).%0A%0A%60--tx-origin%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20transaction%20origin.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-bind-Daq4ywdu.js"),__vite__mapDeps([177,170,1,172,171,173])),path:"/forge/reference/forge-bind",type:"mdx",filePath:"forge/reference/forge-bind.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0A%0A%23%23%20forge%20bind%0A%0A%23%23%23%20NAME%0A%0Aforge-bind%20-%20Generate%20Rust%20bindings%20for%20smart%20contracts.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20bind%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20Rust%20bindings%20for%20smart%20contracts%20using%20%5Balloy%5D(https%3A%2F%2Fgithub.com%2Falloy-rs%2Falloy).%0A%0AThe%20bindings%20are%20generated%20from%20the%20project's%20artifacts%2C%20which%20by%20default%20is%20%60.%2Fout%2F%60.%0AIf%20you%20want%20to%20generate%20bindings%20for%20artifacts%20in%20a%20different%20directory%2C%20pass%20%60--bindings-path%20%3CPATH%3E%60.%0A%0AThere%20are%20three%20output%20options%3A%0A%0A-%20Generate%20bindings%20in%20a%20crate%20(default)%0A-%20Generate%20bindings%20in%20a%20module%20by%20passing%20%60--module%60%0A-%20Generate%20bindings%20in%20a%20single%20file%20by%20passing%20%60--single-file%60%0A%0ABy%20default%2C%20the%20command%20will%20check%20that%20existing%20bindings%20are%20correct%20and%20exit%20accordingly.%0AYou%20can%20overwrite%20the%20existing%20bindings%20by%20passing%20%60--overwrite%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Project%20Options%0A%0A%60-b%60%20_path_%20%20%0A%60--bindings-path%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--crate-name%60%20_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20name%20of%20the%20Rust%20crate%20to%20generate%2C%20if%20you%20are%20generating%20a%20crate%20(default).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20should%20be%20a%20valid%20crates.io%20crate%20name.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20foundry-contracts%0A%0A%60--crate-version%60%20_semver_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20version%20of%20the%20Rust%20crate%20to%20generate%2C%20if%20you%20are%20generating%20a%20crate%20(default).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20should%20be%20a%20standard%20semver%20version%20string.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%200.0.1%0A%0A%60--module%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20the%20bindings%20as%20a%20module%20instead%20of%20a%20crate.%0A%0A%60--single-file%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20bindings%20as%20a%20single%20file.%0A%0A%60--overwrite%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOverwrite%20existing%20generated%20bindings.%20By%20default%2C%20the%20command%20will%20check%20that%20the%20bindings%20are%20correct%2C%20and%20then%20exit.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20%60--overwrite%60%20is%20passed%2C%20it%20will%20instead%20delete%20and%20overwrite%20the%20bindings.%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--skip-cargo-toml%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20Cargo.toml%20consistency%20checks.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20allows%20you%20to%20manage%20the%20%5Balloy%5D(https%3A%2F%2Fgithub.com%2Falloy-rs%2Falloy)%20version%20without%20giving%20up%20on%20consistency%20checks.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAn%20example%20would%20be%20if%20you%20use%20additional%20features%20of%20alloy%20and%20get%20a%20version%20mismatch.%0A%0A%60--skip-build%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkips%20running%20forge%20build%20before%20generating%20binding.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20allows%20you%20to%20skip%20the%20default%20%60forge%20build%60%20step%20that's%20executed%20first%20and%20instead%20generate%20bindings%20using%20the%20already%20existing%20artifacts.%0A%0A%60--skip-extra-derives%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDon't%20add%20any%20additional%20derives%20to%20generated%20bindings.%0A%0A%60--alloy-version%60%20_version_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20%60alloy%60%20version%20on%20Crates.%0A%0A%60--alloy-rev%60%20_rev_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20%60alloy%60%20revision%20on%20GitHub.%0A%0A%60--select-all%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%20all%20contracts%20ending%20with%20%60Test%60%20or%20%60Script%60%20are%20excluded.%20This%20will%20explicitly%20generate%20bindings%20for%20all%20contracts.%20Conflicts%20with%20%60--select%60%20and%20%60--skip%60.%0A%0A%60--select%60%20_regex%2B_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20bindings%20only%20for%20contracts%20whose%20names%20match%20the%20specified%20filter(s).%20Conflicts%20with%20%60--skip%60.%0A%0A%60--skip%60%20_regex%2B_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20bindings%20only%20for%20contracts%20whose%20names%20do%20not%20match%20the%20specified%20filter(s).%20Conflicts%20with%20%60--select%60.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-bind-Daq4ywdu.js"),__vite__mapDeps([177,170,1,172,171,173])),path:"/forge/reference/forge-bind.html",type:"mdx",filePath:"forge/reference/forge-bind.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0A%0A%23%23%20forge%20bind%0A%0A%23%23%23%20NAME%0A%0Aforge-bind%20-%20Generate%20Rust%20bindings%20for%20smart%20contracts.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20bind%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20Rust%20bindings%20for%20smart%20contracts%20using%20%5Balloy%5D(https%3A%2F%2Fgithub.com%2Falloy-rs%2Falloy).%0A%0AThe%20bindings%20are%20generated%20from%20the%20project's%20artifacts%2C%20which%20by%20default%20is%20%60.%2Fout%2F%60.%0AIf%20you%20want%20to%20generate%20bindings%20for%20artifacts%20in%20a%20different%20directory%2C%20pass%20%60--bindings-path%20%3CPATH%3E%60.%0A%0AThere%20are%20three%20output%20options%3A%0A%0A-%20Generate%20bindings%20in%20a%20crate%20(default)%0A-%20Generate%20bindings%20in%20a%20module%20by%20passing%20%60--module%60%0A-%20Generate%20bindings%20in%20a%20single%20file%20by%20passing%20%60--single-file%60%0A%0ABy%20default%2C%20the%20command%20will%20check%20that%20existing%20bindings%20are%20correct%20and%20exit%20accordingly.%0AYou%20can%20overwrite%20the%20existing%20bindings%20by%20passing%20%60--overwrite%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Project%20Options%0A%0A%60-b%60%20_path_%20%20%0A%60--bindings-path%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--crate-name%60%20_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20name%20of%20the%20Rust%20crate%20to%20generate%2C%20if%20you%20are%20generating%20a%20crate%20(default).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20should%20be%20a%20valid%20crates.io%20crate%20name.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20foundry-contracts%0A%0A%60--crate-version%60%20_semver_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20version%20of%20the%20Rust%20crate%20to%20generate%2C%20if%20you%20are%20generating%20a%20crate%20(default).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20should%20be%20a%20standard%20semver%20version%20string.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%200.0.1%0A%0A%60--module%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20the%20bindings%20as%20a%20module%20instead%20of%20a%20crate.%0A%0A%60--single-file%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20bindings%20as%20a%20single%20file.%0A%0A%60--overwrite%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOverwrite%20existing%20generated%20bindings.%20By%20default%2C%20the%20command%20will%20check%20that%20the%20bindings%20are%20correct%2C%20and%20then%20exit.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20%60--overwrite%60%20is%20passed%2C%20it%20will%20instead%20delete%20and%20overwrite%20the%20bindings.%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--skip-cargo-toml%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20Cargo.toml%20consistency%20checks.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20allows%20you%20to%20manage%20the%20%5Balloy%5D(https%3A%2F%2Fgithub.com%2Falloy-rs%2Falloy)%20version%20without%20giving%20up%20on%20consistency%20checks.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAn%20example%20would%20be%20if%20you%20use%20additional%20features%20of%20alloy%20and%20get%20a%20version%20mismatch.%0A%0A%60--skip-build%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkips%20running%20forge%20build%20before%20generating%20binding.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20allows%20you%20to%20skip%20the%20default%20%60forge%20build%60%20step%20that's%20executed%20first%20and%20instead%20generate%20bindings%20using%20the%20already%20existing%20artifacts.%0A%0A%60--skip-extra-derives%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDon't%20add%20any%20additional%20derives%20to%20generated%20bindings.%0A%0A%60--alloy-version%60%20_version_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20%60alloy%60%20version%20on%20Crates.%0A%0A%60--alloy-rev%60%20_rev_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20%60alloy%60%20revision%20on%20GitHub.%0A%0A%60--select-all%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%20all%20contracts%20ending%20with%20%60Test%60%20or%20%60Script%60%20are%20excluded.%20This%20will%20explicitly%20generate%20bindings%20for%20all%20contracts.%20Conflicts%20with%20%60--select%60%20and%20%60--skip%60.%0A%0A%60--select%60%20_regex%2B_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20bindings%20only%20for%20contracts%20whose%20names%20match%20the%20specified%20filter(s).%20Conflicts%20with%20%60--skip%60.%0A%0A%60--skip%60%20_regex%2B_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20bindings%20only%20for%20contracts%20whose%20names%20do%20not%20match%20the%20specified%20filter(s).%20Conflicts%20with%20%60--select%60.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-build-Mln5RKiW.js"),__vite__mapDeps([178,172,171,1,173,179,170])),path:"/forge/reference/forge-build",type:"mdx",filePath:"forge/reference/forge-build.mdx",content:"import%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20WatchOptions%20from%20%22.%2Fwatch-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20build%0A%0A%23%23%23%20NAME%0A%0Aforge-build%20-%20Build%20the%20project's%20smart%20contracts.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20build%60%20or%20%60forge%20b%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ABuild%20the%20project's%20smart%20contracts.%0A%0AThe%20command%20will%20try%20to%20detect%20the%20latest%20version%20that%20can%20compile%20your%20project%20by%20looking%20at%20the%0Aversion%20requirements%20of%20all%20your%20contracts%20and%20dependencies.%0A%0AYou%20can%20override%20this%20behaviour%20by%20passing%20%60--no-auto-detect%60.%20Alternatively%2C%20you%20can%20pass%20%60--use%20%3CSOLC_VERSION%3E%60.%0A%0AIf%20the%20command%20detects%20that%20the%20Solidity%20compiler%20version%20it%20is%20using%20to%20build%20is%20not%20installed%2C%0Ait%20will%20download%20it%20and%20install%20it%20in%20%60~%2F.svm%60.%20You%20can%20disable%20this%20behavior%20by%20passing%20%60--offline%60.%0A%0AThe%20build%20is%20incremental%2C%20and%20the%20build%20cache%20is%20saved%20in%20%60cache%2F%60%20in%20the%20project%20root%20by%20default.%20If%20you%0Awant%20to%20clear%20the%20cache%2C%20pass%20%60--force%60%2C%20and%20if%20you%20want%20to%20change%20the%20cache%20directory%2C%20pass%20%60--cache-path%20%3CPATH%3E%60.%0A%0AIt%20is%20possible%20to%20choose%20sources%20to%20build%20by%20specifying%20multiple%20path%20options%20(can%20be%20paths%20to%20source%20directories%20or%20files).%0A%0A%23%23%23%23%20Build%20Modes%0A%0AThere%20are%20three%20build%20modes%3A%0A%0A-%20Just%20compilation%20(default)%3A%20Builds%20the%20project%20and%20saves%20the%20contract%20artifacts%20in%20%60out%2F%60%20(or%20the%20path%20specified%20by%20%60--out%20%3CPATH%3E%60).%0A-%20Size%20mode%20(%60--sizes%60)%3A%20Builds%20the%20project%2C%20displays%20the%20size%20of%20non-test%20contracts%20and%20exits%20with%20code%201%20if%20any%20of%20them%20are%20above%20the%20size%20limit.%0A-%20Name%20mode%20(%60--names%60)%3A%20Builds%20the%20project%2C%20displays%20the%20names%20of%20the%20contracts%20and%20exits.%0A%0A%23%23%23%23%20The%20Optimizer%0A%0AYou%20can%20enable%20the%20optimizer%20by%20passing%20%60--optimize%60%2C%20and%20you%20can%20adjust%20the%20number%20of%20optimizer%20runs%20by%20passing%20%60--optimizer-runs%20%3CRUNS%3E%60.%0A%0AYou%20can%20also%20opt-in%20to%20the%20Solidity%20IR%20compilation%20pipeline%20by%20passing%20%60--via-ir%60.%20Read%20more%20about%20the%20IR%20pipeline%20in%20the%20%5BSolidity%20docs%5D%5Bir-pipeline%5D.%0A%0ABy%20default%2C%20the%20optimizer%20is%20enabled%20and%20runs%20for%20200%20cycles.%0A%0A%23%23%23%23%23%20Conditional%20Optimizer%20Usage%0A%0AMany%20projects%20use%20the%20solc%20optimizer%2C%20either%20through%20the%20standard%20compilation%20pipeline%20or%20the%20IR%20pipeline.%20But%20in%20some%20cases%2C%20the%20optimizer%20can%20significantly%20slow%20down%20compilation%20speeds.%0A%0AA%20config%20file%20for%20a%20project%20using%20the%20optimizer%20may%20look%20like%20this%20for%20regular%20compilation%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Aoptimizer%20%3D%20true%0Aoptimizer-runs%20%3D%2010_000_000%0A%60%60%60%0A%0AOr%20like%20this%20for%20%60via-ir%60%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Avia_ir%20%3D%20true%0A%60%60%60%0A%0ATo%20reduce%20compilation%20speeds%20during%20development%20and%20testing%2C%20one%20approach%20is%20to%20have%20a%20%60lite%60%20profile%20that%20has%20the%20optimizer%20off%20and%20use%20this%20for%20development%2Ftesting%20cycle.%20The%20updated%20config%20file%20for%20regular%20compilation%20may%20look%20like%20this%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Aoptimizer%20%3D%20true%0Aoptimizer-runs%20%3D%2010_000_000%0A%0A%5Bprofile.lite%5D%0Aoptimizer%20%3D%20false%0A%60%60%60%0A%0AOr%20like%20this%20for%20%60via-ir%60%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Avia_ir%20%3D%20true%0A%0A%5Bprofile.lite.optimizer_details.yulDetails%5D%0AoptimizerSteps%20%3D%20''%0A%60%60%60%0A%0AWhen%20setup%20like%20this%2C%20%60forge%20build%60%20(or%20%60forge%20test%60%20%2F%20%60forge%20script%60)%20still%20uses%20the%20standard%20profile%2C%20so%20by%20default%20a%20%60forge%20script%60%20invocation%20will%20deploy%20your%20contracts%20with%20the%20production%20setting.%20Running%20%60FOUNDRY_PROFILE%3Dlite%20forge%20build%60%20(and%20again%2C%20same%20for%20the%20test%20and%20script%20commands)%20will%20use%20the%20lite%20profile%20to%20reduce%20compilation%20times.%0A%0A%3E%20There%20are%20additional%20optimizer%20details%20you%20can%20configure%2C%20see%20the%20%5BAdditional%20Optimizer%20Settings%5D(%23additional-optimizer-settings)%20section%20below%20for%20more%20info.%0A%0A%23%23%23%23%20Artifacts%0A%0AYou%20can%20add%20extra%20output%20from%20the%20Solidity%20compiler%20to%20your%20artifacts%20by%20passing%20%60--extra-output%20%3CSELECTOR%3E%60.%0A%0AThe%20selector%20is%20a%20path%20in%20the%20Solidity%20compiler%20output%2C%20which%20you%20can%20read%20more%20about%20in%20the%20%5BSolidity%20docs%5D%5Boutput-desc%5D.%0A%0AYou%20can%20also%20write%20some%20of%20the%20compiler%20output%20to%20separate%20files%20by%20passing%20%60--extra-output-files%20%3CSELECTOR%3E%60.%0A%0AValid%20selectors%20for%20%60--extra-output-files%60%20are%3A%0A%0A-%20%60metadata%60%3A%20Written%20as%20a%20%60metadata.json%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ir%60%3A%20Written%20as%20a%20%60.ir%60%20file%20in%20the%20artifacts%20directory%0A-%20%60irOptimized%60%3A%20Written%20as%20a%20%60.iropt%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ewasm%60%3A%20Written%20as%20a%20%60.ewasm%60%20file%20in%20the%20artifacts%20directory%0A-%20%60evm.assembly%60%3A%20Written%20as%20a%20%60.asm%60%20file%20in%20the%20artifacts%20directory%0A%0A%23%23%23%23%20Watch%20Mode%0A%0AThe%20command%20can%20be%20run%20in%20watch%20mode%20by%20passing%20%60--watch%20%5BPATH...%5D%60%2C%20which%20will%20rebuild%20every%20time%20a%0Awatched%20file%20or%20directory%20is%20changed.%20The%20source%20directory%20is%20watched%20by%20default.%0A%0A%23%23%23%23%20Sparse%20Mode%20(experimental)%0A%0ASparse%20mode%20only%20compiles%20files%20that%20match%20certain%20criteria.%0A%0ABy%20default%2C%20this%20filter%20applies%20to%20files%20that%20have%20not%20been%20changed%20since%20the%20last%20build%2C%20but%20for%20commands%20that%0Atake%20file%20filters%20(e.g.%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx))%2C%20sparse%20mode%20will%20only%20recompile%20files%20that%20match%20the%20filter.%0A%0ASparse%20mode%20is%20opt-in%20until%20the%20feature%20is%20stabilized.%20To%20opt-in%20to%20sparse%20mode%20and%20try%20it%20out%2C%20set%20%5B%60sparse_mode%60%5D%5Bsparse-mode%5D%0Ain%20your%20configuration%20file.%0A%0A%23%23%23%23%20Additional%20Optimizer%20Settings%0A%0AThe%20optimizer%20can%20be%20fine-tuned%20with%20additional%20settings.%20Simply%20set%20the%20%60optimizer_details%60%20table%20in%20your%20configuration%20file.%20For%20example%3A%0A%0A%60%60%60toml%0A%5Bprofile.default.optimizer_details%5D%0AconstantOptimizer%20%3D%20true%0Ayul%20%3D%20true%0A%0A%5Bprofile.default.optimizer_details.yulDetails%5D%0AstackAllocation%20%3D%20true%0AoptimizerSteps%20%3D%20'dhfoDgvulfnTUtnIf'%0A%60%60%60%0A%0ASee%20the%20%5Bcompiler%20input%20description%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%0Afor%20more%20information%20on%20available%20settings%20(specifically%20%60settings.optimizer.details%60).%0A%0A%23%23%23%23%20Revert%20Strings%0A%0AYou%20can%20control%20how%20revert%20strings%20are%20generated%20by%20the%20compiler.%20By%20default%2C%20only%20user%20supplied%20revert%20strings%20are%20included%20in%20the%20bytecode%2C%20but%20there%20are%20other%20options%3A%0A%0A-%20%60strip%60%3A%20Removes%20all%20revert%20strings%20(if%20possible%2C%20i.e.%20if%20literals%20are%20used)%20keeping%20side-effects.%0A-%20%60debug%60%3A%20Injects%20strings%20for%20compiler-generated%20internal%20reverts%2C%20implemented%20for%20ABI%20encoders%20V1%20and%20V2%20for%20now.%0A-%20%60verboseDebug%60%3A%20Appends%20further%20information%20to%20user-supplied%20revert%20strings%20(not%20yet%20implemented).%0A%0A%23%23%23%23%20Additional%20Model%20Checker%20settings%0A%0A%5BSolidity's%20built-in%20model%20checker%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23tutorial)%20is%20an%20opt-in%20module%20that%20can%20be%20enabled%20via%20the%20%60ModelChecker%60%20object.%0A%0ASee%20%5BCompiler%20Input%20Description%20%60settings.modelChecker%60%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%20and%20%5Bthe%20model%20checker's%20options%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23smtchecker-options-and-tuning).%0A%0AThe%20module%20is%20available%20in%20%60solc%60%20release%20binaries%20for%20OSX%20and%20Linux.%20The%20latter%20requires%20the%20z3%20library%20version%20%5B4.8.8%2C%204.8.14%5D%20to%20be%20installed%20in%20the%20system%20(SO%20version%204.8).%0A%0ASimilarly%20to%20the%20optimizer%20settings%20above%2C%20the%20%60model_checker%60%20settings%20must%20be%20prefixed%20with%20the%20profile%20they%20correspond%20to%3A%20%60%5Bprofile.default.model_checker%5D%60%20belongs%20to%20the%20%60%5Bprofile.default%5D%60.%0A%0A%60%60%60toml%0A%23%23%20foundry.toml%0A%5Bprofile.default.model_checker%5D%0Acontracts%20%3D%20%7B%20'%2Fpath%2Fto%2Fproject%2Fsrc%2FContract.sol'%20%3D%20%5B%20'Contract'%20%5D%20%7D%0Aengine%20%3D%20'chc'%0Atimeout%20%3D%2010000%0Atargets%20%3D%20%5B%20'assert'%20%5D%0A%60%60%60%0A%0AThe%20fields%20above%20are%20recommended%20when%20using%20the%20model%20checker.%0ASetting%20which%20contract%20should%20be%20verified%20is%20extremely%20important%2C%20otherwise%20all%20available%20contracts%20will%20be%20verified%20which%20can%20consume%20a%20lot%20of%20time.%0AThe%20recommended%20engine%20is%20%60chc%60%2C%20but%20%60bmc%60%20and%20%60all%60%20(runs%20both)%20are%20also%20accepted.%0AIt%20is%20also%20important%20to%20set%20a%20proper%20timeout%20(given%20in%20milliseconds)%2C%20since%20the%20default%20time%20given%20to%20the%20underlying%20solvers%20may%20not%20be%20enough.%0AIf%20no%20verification%20targets%20are%20given%2C%20only%20assertions%20will%20be%20checked.%0A%0AThe%20model%20checker%20will%20run%20when%20%60forge%20build%60%20is%20invoked%2C%20and%20will%20show%20findings%20as%20warnings%20if%20any.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Build%20Options%0A%0A%60--names%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20contract%20names.%0A%0A%60--sizes%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20non-test%20contract%20sizes%2C%20exiting%20with%20code%201%20if%20any%20of%20them%20are%20above%20the%20size%20limit.%0A%0A%60--skip%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20compilation%20of%20non-essential%20contract%20directories%20like%20test%20or%20script%20(usage%20%60--skip%20test%60).%0A%0A%60%5BPATHS%5D...%60%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBuild%20source%20files%20from%20specified%20paths.%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CWatchOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Build%20the%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%0A%20%20%20%60%60%60%0A%0A2.%20Build%20the%20project%20with%20solc%200.6.0%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--use%20solc%3A0.6.0%0A%20%20%20%60%60%60%0A%0A3.%20Build%20the%20project%20with%20additional%20artifact%20output%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--extra-output%20evm.assembly%0A%20%20%20%60%60%60%0A%0A4.%20Build%20the%20project%20in%20watch%20mode%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--watch%0A%20%20%20%60%60%60%0A%0A5.%20Build%20source%20files%20from%20%60test%2Finvariant%60%20directory%20and%20%60test%2FRegressionTest.sol%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20test%2Finvariant%20test%2FRegressionTest.sol%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20clean%5D(%2Fforge%2Freference%2Fforge-clean.mdx)%2C%20%5Bforge%20inspect%5D(%2Fforge%2Freference%2Fforge-inspect.mdx)%2C%20%5Bsparse-mode%5D(%2Fconfig%2Freference%2Fsolidity-compiler.mdx%23sparse_mode)%2C%20%5Bir-pipeline%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fir-breaking-changes.html)%2C%20%5Boutput-desc%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-api)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-build-Mln5RKiW.js"),__vite__mapDeps([178,172,171,1,173,179,170])),path:"/forge/reference/forge-build.html",type:"mdx",filePath:"forge/reference/forge-build.mdx",content:"import%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20WatchOptions%20from%20%22.%2Fwatch-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20build%0A%0A%23%23%23%20NAME%0A%0Aforge-build%20-%20Build%20the%20project's%20smart%20contracts.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20build%60%20or%20%60forge%20b%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ABuild%20the%20project's%20smart%20contracts.%0A%0AThe%20command%20will%20try%20to%20detect%20the%20latest%20version%20that%20can%20compile%20your%20project%20by%20looking%20at%20the%0Aversion%20requirements%20of%20all%20your%20contracts%20and%20dependencies.%0A%0AYou%20can%20override%20this%20behaviour%20by%20passing%20%60--no-auto-detect%60.%20Alternatively%2C%20you%20can%20pass%20%60--use%20%3CSOLC_VERSION%3E%60.%0A%0AIf%20the%20command%20detects%20that%20the%20Solidity%20compiler%20version%20it%20is%20using%20to%20build%20is%20not%20installed%2C%0Ait%20will%20download%20it%20and%20install%20it%20in%20%60~%2F.svm%60.%20You%20can%20disable%20this%20behavior%20by%20passing%20%60--offline%60.%0A%0AThe%20build%20is%20incremental%2C%20and%20the%20build%20cache%20is%20saved%20in%20%60cache%2F%60%20in%20the%20project%20root%20by%20default.%20If%20you%0Awant%20to%20clear%20the%20cache%2C%20pass%20%60--force%60%2C%20and%20if%20you%20want%20to%20change%20the%20cache%20directory%2C%20pass%20%60--cache-path%20%3CPATH%3E%60.%0A%0AIt%20is%20possible%20to%20choose%20sources%20to%20build%20by%20specifying%20multiple%20path%20options%20(can%20be%20paths%20to%20source%20directories%20or%20files).%0A%0A%23%23%23%23%20Build%20Modes%0A%0AThere%20are%20three%20build%20modes%3A%0A%0A-%20Just%20compilation%20(default)%3A%20Builds%20the%20project%20and%20saves%20the%20contract%20artifacts%20in%20%60out%2F%60%20(or%20the%20path%20specified%20by%20%60--out%20%3CPATH%3E%60).%0A-%20Size%20mode%20(%60--sizes%60)%3A%20Builds%20the%20project%2C%20displays%20the%20size%20of%20non-test%20contracts%20and%20exits%20with%20code%201%20if%20any%20of%20them%20are%20above%20the%20size%20limit.%0A-%20Name%20mode%20(%60--names%60)%3A%20Builds%20the%20project%2C%20displays%20the%20names%20of%20the%20contracts%20and%20exits.%0A%0A%23%23%23%23%20The%20Optimizer%0A%0AYou%20can%20enable%20the%20optimizer%20by%20passing%20%60--optimize%60%2C%20and%20you%20can%20adjust%20the%20number%20of%20optimizer%20runs%20by%20passing%20%60--optimizer-runs%20%3CRUNS%3E%60.%0A%0AYou%20can%20also%20opt-in%20to%20the%20Solidity%20IR%20compilation%20pipeline%20by%20passing%20%60--via-ir%60.%20Read%20more%20about%20the%20IR%20pipeline%20in%20the%20%5BSolidity%20docs%5D%5Bir-pipeline%5D.%0A%0ABy%20default%2C%20the%20optimizer%20is%20enabled%20and%20runs%20for%20200%20cycles.%0A%0A%23%23%23%23%23%20Conditional%20Optimizer%20Usage%0A%0AMany%20projects%20use%20the%20solc%20optimizer%2C%20either%20through%20the%20standard%20compilation%20pipeline%20or%20the%20IR%20pipeline.%20But%20in%20some%20cases%2C%20the%20optimizer%20can%20significantly%20slow%20down%20compilation%20speeds.%0A%0AA%20config%20file%20for%20a%20project%20using%20the%20optimizer%20may%20look%20like%20this%20for%20regular%20compilation%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Aoptimizer%20%3D%20true%0Aoptimizer-runs%20%3D%2010_000_000%0A%60%60%60%0A%0AOr%20like%20this%20for%20%60via-ir%60%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Avia_ir%20%3D%20true%0A%60%60%60%0A%0ATo%20reduce%20compilation%20speeds%20during%20development%20and%20testing%2C%20one%20approach%20is%20to%20have%20a%20%60lite%60%20profile%20that%20has%20the%20optimizer%20off%20and%20use%20this%20for%20development%2Ftesting%20cycle.%20The%20updated%20config%20file%20for%20regular%20compilation%20may%20look%20like%20this%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Aoptimizer%20%3D%20true%0Aoptimizer-runs%20%3D%2010_000_000%0A%0A%5Bprofile.lite%5D%0Aoptimizer%20%3D%20false%0A%60%60%60%0A%0AOr%20like%20this%20for%20%60via-ir%60%3A%0A%0A%60%60%60toml%0A%5Bprofile.default%5D%0Asolc-version%20%3D%20%220.8.17%22%0Avia_ir%20%3D%20true%0A%0A%5Bprofile.lite.optimizer_details.yulDetails%5D%0AoptimizerSteps%20%3D%20''%0A%60%60%60%0A%0AWhen%20setup%20like%20this%2C%20%60forge%20build%60%20(or%20%60forge%20test%60%20%2F%20%60forge%20script%60)%20still%20uses%20the%20standard%20profile%2C%20so%20by%20default%20a%20%60forge%20script%60%20invocation%20will%20deploy%20your%20contracts%20with%20the%20production%20setting.%20Running%20%60FOUNDRY_PROFILE%3Dlite%20forge%20build%60%20(and%20again%2C%20same%20for%20the%20test%20and%20script%20commands)%20will%20use%20the%20lite%20profile%20to%20reduce%20compilation%20times.%0A%0A%3E%20There%20are%20additional%20optimizer%20details%20you%20can%20configure%2C%20see%20the%20%5BAdditional%20Optimizer%20Settings%5D(%23additional-optimizer-settings)%20section%20below%20for%20more%20info.%0A%0A%23%23%23%23%20Artifacts%0A%0AYou%20can%20add%20extra%20output%20from%20the%20Solidity%20compiler%20to%20your%20artifacts%20by%20passing%20%60--extra-output%20%3CSELECTOR%3E%60.%0A%0AThe%20selector%20is%20a%20path%20in%20the%20Solidity%20compiler%20output%2C%20which%20you%20can%20read%20more%20about%20in%20the%20%5BSolidity%20docs%5D%5Boutput-desc%5D.%0A%0AYou%20can%20also%20write%20some%20of%20the%20compiler%20output%20to%20separate%20files%20by%20passing%20%60--extra-output-files%20%3CSELECTOR%3E%60.%0A%0AValid%20selectors%20for%20%60--extra-output-files%60%20are%3A%0A%0A-%20%60metadata%60%3A%20Written%20as%20a%20%60metadata.json%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ir%60%3A%20Written%20as%20a%20%60.ir%60%20file%20in%20the%20artifacts%20directory%0A-%20%60irOptimized%60%3A%20Written%20as%20a%20%60.iropt%60%20file%20in%20the%20artifacts%20directory%0A-%20%60ewasm%60%3A%20Written%20as%20a%20%60.ewasm%60%20file%20in%20the%20artifacts%20directory%0A-%20%60evm.assembly%60%3A%20Written%20as%20a%20%60.asm%60%20file%20in%20the%20artifacts%20directory%0A%0A%23%23%23%23%20Watch%20Mode%0A%0AThe%20command%20can%20be%20run%20in%20watch%20mode%20by%20passing%20%60--watch%20%5BPATH...%5D%60%2C%20which%20will%20rebuild%20every%20time%20a%0Awatched%20file%20or%20directory%20is%20changed.%20The%20source%20directory%20is%20watched%20by%20default.%0A%0A%23%23%23%23%20Sparse%20Mode%20(experimental)%0A%0ASparse%20mode%20only%20compiles%20files%20that%20match%20certain%20criteria.%0A%0ABy%20default%2C%20this%20filter%20applies%20to%20files%20that%20have%20not%20been%20changed%20since%20the%20last%20build%2C%20but%20for%20commands%20that%0Atake%20file%20filters%20(e.g.%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx))%2C%20sparse%20mode%20will%20only%20recompile%20files%20that%20match%20the%20filter.%0A%0ASparse%20mode%20is%20opt-in%20until%20the%20feature%20is%20stabilized.%20To%20opt-in%20to%20sparse%20mode%20and%20try%20it%20out%2C%20set%20%5B%60sparse_mode%60%5D%5Bsparse-mode%5D%0Ain%20your%20configuration%20file.%0A%0A%23%23%23%23%20Additional%20Optimizer%20Settings%0A%0AThe%20optimizer%20can%20be%20fine-tuned%20with%20additional%20settings.%20Simply%20set%20the%20%60optimizer_details%60%20table%20in%20your%20configuration%20file.%20For%20example%3A%0A%0A%60%60%60toml%0A%5Bprofile.default.optimizer_details%5D%0AconstantOptimizer%20%3D%20true%0Ayul%20%3D%20true%0A%0A%5Bprofile.default.optimizer_details.yulDetails%5D%0AstackAllocation%20%3D%20true%0AoptimizerSteps%20%3D%20'dhfoDgvulfnTUtnIf'%0A%60%60%60%0A%0ASee%20the%20%5Bcompiler%20input%20description%20documentation%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%0Afor%20more%20information%20on%20available%20settings%20(specifically%20%60settings.optimizer.details%60).%0A%0A%23%23%23%23%20Revert%20Strings%0A%0AYou%20can%20control%20how%20revert%20strings%20are%20generated%20by%20the%20compiler.%20By%20default%2C%20only%20user%20supplied%20revert%20strings%20are%20included%20in%20the%20bytecode%2C%20but%20there%20are%20other%20options%3A%0A%0A-%20%60strip%60%3A%20Removes%20all%20revert%20strings%20(if%20possible%2C%20i.e.%20if%20literals%20are%20used)%20keeping%20side-effects.%0A-%20%60debug%60%3A%20Injects%20strings%20for%20compiler-generated%20internal%20reverts%2C%20implemented%20for%20ABI%20encoders%20V1%20and%20V2%20for%20now.%0A-%20%60verboseDebug%60%3A%20Appends%20further%20information%20to%20user-supplied%20revert%20strings%20(not%20yet%20implemented).%0A%0A%23%23%23%23%20Additional%20Model%20Checker%20settings%0A%0A%5BSolidity's%20built-in%20model%20checker%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23tutorial)%20is%20an%20opt-in%20module%20that%20can%20be%20enabled%20via%20the%20%60ModelChecker%60%20object.%0A%0ASee%20%5BCompiler%20Input%20Description%20%60settings.modelChecker%60%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-input-and-output-json-description)%20and%20%5Bthe%20model%20checker's%20options%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fsmtchecker.html%23smtchecker-options-and-tuning).%0A%0AThe%20module%20is%20available%20in%20%60solc%60%20release%20binaries%20for%20OSX%20and%20Linux.%20The%20latter%20requires%20the%20z3%20library%20version%20%5B4.8.8%2C%204.8.14%5D%20to%20be%20installed%20in%20the%20system%20(SO%20version%204.8).%0A%0ASimilarly%20to%20the%20optimizer%20settings%20above%2C%20the%20%60model_checker%60%20settings%20must%20be%20prefixed%20with%20the%20profile%20they%20correspond%20to%3A%20%60%5Bprofile.default.model_checker%5D%60%20belongs%20to%20the%20%60%5Bprofile.default%5D%60.%0A%0A%60%60%60toml%0A%23%23%20foundry.toml%0A%5Bprofile.default.model_checker%5D%0Acontracts%20%3D%20%7B%20'%2Fpath%2Fto%2Fproject%2Fsrc%2FContract.sol'%20%3D%20%5B%20'Contract'%20%5D%20%7D%0Aengine%20%3D%20'chc'%0Atimeout%20%3D%2010000%0Atargets%20%3D%20%5B%20'assert'%20%5D%0A%60%60%60%0A%0AThe%20fields%20above%20are%20recommended%20when%20using%20the%20model%20checker.%0ASetting%20which%20contract%20should%20be%20verified%20is%20extremely%20important%2C%20otherwise%20all%20available%20contracts%20will%20be%20verified%20which%20can%20consume%20a%20lot%20of%20time.%0AThe%20recommended%20engine%20is%20%60chc%60%2C%20but%20%60bmc%60%20and%20%60all%60%20(runs%20both)%20are%20also%20accepted.%0AIt%20is%20also%20important%20to%20set%20a%20proper%20timeout%20(given%20in%20milliseconds)%2C%20since%20the%20default%20time%20given%20to%20the%20underlying%20solvers%20may%20not%20be%20enough.%0AIf%20no%20verification%20targets%20are%20given%2C%20only%20assertions%20will%20be%20checked.%0A%0AThe%20model%20checker%20will%20run%20when%20%60forge%20build%60%20is%20invoked%2C%20and%20will%20show%20findings%20as%20warnings%20if%20any.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Build%20Options%0A%0A%60--names%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20contract%20names.%0A%0A%60--sizes%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20non-test%20contract%20sizes%2C%20exiting%20with%20code%201%20if%20any%20of%20them%20are%20above%20the%20size%20limit.%0A%0A%60--skip%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20compilation%20of%20non-essential%20contract%20directories%20like%20test%20or%20script%20(usage%20%60--skip%20test%60).%0A%0A%60%5BPATHS%5D...%60%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBuild%20source%20files%20from%20specified%20paths.%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CWatchOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Build%20the%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%0A%20%20%20%60%60%60%0A%0A2.%20Build%20the%20project%20with%20solc%200.6.0%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--use%20solc%3A0.6.0%0A%20%20%20%60%60%60%0A%0A3.%20Build%20the%20project%20with%20additional%20artifact%20output%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--extra-output%20evm.assembly%0A%20%20%20%60%60%60%0A%0A4.%20Build%20the%20project%20in%20watch%20mode%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--watch%0A%20%20%20%60%60%60%0A%0A5.%20Build%20source%20files%20from%20%60test%2Finvariant%60%20directory%20and%20%60test%2FRegressionTest.sol%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20test%2Finvariant%20test%2FRegressionTest.sol%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20clean%5D(%2Fforge%2Freference%2Fforge-clean.mdx)%2C%20%5Bforge%20inspect%5D(%2Fforge%2Freference%2Fforge-inspect.mdx)%2C%20%5Bsparse-mode%5D(%2Fconfig%2Freference%2Fsolidity-compiler.mdx%23sparse_mode)%2C%20%5Bir-pipeline%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fir-breaking-changes.html)%2C%20%5Boutput-desc%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fusing-the-compiler.html%23compiler-api)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-cache-clean-DzxW27I7.js"),__vite__mapDeps([180,170,1])),path:"/forge/reference/forge-cache-clean",type:"mdx",filePath:"forge/reference/forge-cache-clean.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20%60forge%20cache%20clean%60%0A%0A%23%23%23%20NAME%0A%0Aforge-cache-clean%20-%20Cleans%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20cache%20clean%60%20%5B*options*%5D%20%5B*--*%5D%20%5B*chains..*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARemoves%20files%20in%20the%20%60~%2F.foundry%2Fcache%60%20folder%20which%20is%20used%20to%20cache%20Etherscan%20verification%20status%20and%20block%20data.%0A%0A%23%23%23%20OPTIONS%0A%0A%60-b%60%20%20%0A%60--blocks%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOne%20or%20more%20block%20numbers%20separated%20by%20comma%20with%20no%20spaces%0A%0A%60--etherscan%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BA%20boolean%20flag%20that%20specifies%20to%20only%20remove%20the%20block%20explorer%20portion%20of%20the%20cache%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Remove%20the%20entire%20cache%20(also%2C%20%60forge%20cache%20clean%60%20is%20an%20alias%20for%20this)%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20all%0A%20%20%20%60%60%60%0A%0A2.%20Remove%20the%20entire%20block%20explorer%20cache%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20all%20--etherscan%0A%20%20%20%60%60%60%0A%0A3.%20Remove%20cache%20data%20for%20a%20specific%20chain%2C%20by%20name%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%0A%20%20%20%60%60%60%0A%0A4.%20Remove%20cache%20data%20for%20a%20specific%20block%20number%20on%20a%20specific%20chain.%20Does%20not%20work%20if%20%60chain%60%20is%20%60all%60%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20-b%20150000%0A%20%20%20%60%60%60%0A%0A5.%20Remove%20block%20explorer%20cache%20data%20for%20a%20specific%20chain.%20Does%20not%20work%20if%20%60--blocks%60%20are%20specified.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20--etherscan%0A%20%20%20%60%60%60%0A%0A6.%20Specify%20multiple%20chains%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20mainnet%0A%20%20%20%60%60%60%0A%0A7.%20Specify%20multiple%20blocks%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20--blocks%20530000%2C9000000%2C9200000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-cache-clean-DzxW27I7.js"),__vite__mapDeps([180,170,1])),path:"/forge/reference/forge-cache-clean.html",type:"mdx",filePath:"forge/reference/forge-cache-clean.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20%60forge%20cache%20clean%60%0A%0A%23%23%23%20NAME%0A%0Aforge-cache-clean%20-%20Cleans%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20cache%20clean%60%20%5B*options*%5D%20%5B*--*%5D%20%5B*chains..*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARemoves%20files%20in%20the%20%60~%2F.foundry%2Fcache%60%20folder%20which%20is%20used%20to%20cache%20Etherscan%20verification%20status%20and%20block%20data.%0A%0A%23%23%23%20OPTIONS%0A%0A%60-b%60%20%20%0A%60--blocks%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOne%20or%20more%20block%20numbers%20separated%20by%20comma%20with%20no%20spaces%0A%0A%60--etherscan%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BA%20boolean%20flag%20that%20specifies%20to%20only%20remove%20the%20block%20explorer%20portion%20of%20the%20cache%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Remove%20the%20entire%20cache%20(also%2C%20%60forge%20cache%20clean%60%20is%20an%20alias%20for%20this)%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20all%0A%20%20%20%60%60%60%0A%0A2.%20Remove%20the%20entire%20block%20explorer%20cache%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20all%20--etherscan%0A%20%20%20%60%60%60%0A%0A3.%20Remove%20cache%20data%20for%20a%20specific%20chain%2C%20by%20name%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%0A%20%20%20%60%60%60%0A%0A4.%20Remove%20cache%20data%20for%20a%20specific%20block%20number%20on%20a%20specific%20chain.%20Does%20not%20work%20if%20%60chain%60%20is%20%60all%60%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20-b%20150000%0A%20%20%20%60%60%60%0A%0A5.%20Remove%20block%20explorer%20cache%20data%20for%20a%20specific%20chain.%20Does%20not%20work%20if%20%60--blocks%60%20are%20specified.%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20--etherscan%0A%20%20%20%60%60%60%0A%0A6.%20Specify%20multiple%20chains%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20mainnet%0A%20%20%20%60%60%60%0A%0A7.%20Specify%20multiple%20blocks%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20clean%20rinkeby%20--blocks%20530000%2C9000000%2C9200000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-cache-ls-BQwmYFvF.js"),__vite__mapDeps([181,170,1])),path:"/forge/reference/forge-cache-ls",type:"mdx",filePath:"forge/reference/forge-cache-ls.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20%60forge%20cache%20ls%60%0A%0A%23%23%23%20NAME%0A%0Aforge-cache-ls%20-%20Shows%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20cache%20ls%60%20%5B*chains..*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ALists%20what%20is%20in%20the%20%60~%2F.foundry%2Fcache%60%20folder%20currently.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Show%20the%20entire%20cache%20(also%2C%20%60forge%20cache%20ls%60%20is%20an%20alias%20for%20this)%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20ls%20all%0A%20%20%20%60%60%60%0A%0A2.%20Show%20cache%20data%20for%20a%20specific%20chain%2C%20by%20name%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20ls%20rinkeby%0A%20%20%20%60%60%60%0A3.%20Specify%20multiple%20chains%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20ls%20rinkeby%20mainnet%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-cache-ls-BQwmYFvF.js"),__vite__mapDeps([181,170,1])),path:"/forge/reference/forge-cache-ls.html",type:"mdx",filePath:"forge/reference/forge-cache-ls.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20%60forge%20cache%20ls%60%0A%0A%23%23%23%20NAME%0A%0Aforge-cache-ls%20-%20Shows%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20cache%20ls%60%20%5B*chains..*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ALists%20what%20is%20in%20the%20%60~%2F.foundry%2Fcache%60%20folder%20currently.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Show%20the%20entire%20cache%20(also%2C%20%60forge%20cache%20ls%60%20is%20an%20alias%20for%20this)%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20ls%20all%0A%20%20%20%60%60%60%0A%0A2.%20Show%20cache%20data%20for%20a%20specific%20chain%2C%20by%20name%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20ls%20rinkeby%0A%20%20%20%60%60%60%0A3.%20Specify%20multiple%20chains%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20cache%20ls%20rinkeby%20mainnet%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-cache-CmvCX3Kw.js"),__vite__mapDeps([182,170,1])),path:"/forge/reference/forge-cache",type:"mdx",filePath:"forge/reference/forge-cache.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20%60forge%20cache%60%0A%0A%23%23%23%20NAME%0A%0Aforge-cache%20-%20Manage%20the%20Foundry%20cache.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20cache%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%20%20%0A%60forge%20cache%60%20%5B*options*%5D%20%60--version%60%20%20%0A%60forge%20cache%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20manage%20the%20Foundry%20cache.%0A%0A%23%23%23%20COMMANDS%0A%0A%5Bforge%20cache%20clean%5D(%2Fforge%2Freference%2Fforge-cache-clean.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCleans%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%5Bforge%20cache%20ls%5D(%2Fforge%2Freference%2Fforge-cache-ls.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BShows%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%20%20%0A%60--version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-cache-CmvCX3Kw.js"),__vite__mapDeps([182,170,1])),path:"/forge/reference/forge-cache.html",type:"mdx",filePath:"forge/reference/forge-cache.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20%60forge%20cache%60%0A%0A%23%23%23%20NAME%0A%0Aforge-cache%20-%20Manage%20the%20Foundry%20cache.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20cache%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%20%20%0A%60forge%20cache%60%20%5B*options*%5D%20%60--version%60%20%20%0A%60forge%20cache%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20manage%20the%20Foundry%20cache.%0A%0A%23%23%23%20COMMANDS%0A%0A%5Bforge%20cache%20clean%5D(%2Fforge%2Freference%2Fforge-cache-clean.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCleans%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%5Bforge%20cache%20ls%5D(%2Fforge%2Freference%2Fforge-cache-ls.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BShows%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%20%20%0A%60--version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-clean-ar4HYAjK.js"),__vite__mapDeps([183,170,1])),path:"/forge/reference/forge-clean",type:"mdx",filePath:"forge/reference/forge-clean.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20clean%0A%0A%23%23%23%20NAME%0A%0Aforge-clean%20-%20Remove%20the%20build%20artifacts%20and%20cache%20directories.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20clean%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARemove%20the%20build%20artifacts%20and%20cache%20directories.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Clean%20Options%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20Defaults%20to%20the%20current%20working%20directory.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Clean%20artifacts%20and%20cache%20in%20a%20project%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clean%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-clean-ar4HYAjK.js"),__vite__mapDeps([183,170,1])),path:"/forge/reference/forge-clean.html",type:"mdx",filePath:"forge/reference/forge-clean.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20clean%0A%0A%23%23%23%20NAME%0A%0Aforge-clean%20-%20Remove%20the%20build%20artifacts%20and%20cache%20directories.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20clean%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARemove%20the%20build%20artifacts%20and%20cache%20directories.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Clean%20Options%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20Defaults%20to%20the%20current%20working%20directory.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Clean%20artifacts%20and%20cache%20in%20a%20project%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clean%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-clone-Dy6nTaq2.js"),__vite__mapDeps([184,170,1])),path:"/forge/reference/forge-clone",type:"mdx",filePath:"forge/reference/forge-clone.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20clone%0A%0A%23%23%23%20NAME%0A%0Aforge-clone%20-%20Clone%20an%20on-chain%20verified%20contract%20as%20a%20Forge%20project.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20clone%60%20%5B*options*%5D%20_address_%20%5B*root*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreates%20a%20new%20Forge%20project%20by%20cloning%20the%20source%20code%20of%20an%20on-chain%20verified%20contract%20in%20the%20directory%20_root_%20(by%20default%20the%20current%20working%20directory).%0A%0ABy%20default%2C%20%60forge%20clone%60%20clones%20contracts%20from%20Ethereum%20mainnet%20(via%20Etherscan)%2C%20but%20it%20is%20also%20possible%20to%20clone%20from%20other%20EVM-compatible%20blockchains%20that%20foundry%20supports%2C%20e.g.%2C%20BNB%20Smart%20Chain%20(BSC)%2C%20by%20specifying%20chain%20ID%3A%20%60--chain%20%3CChainID%3E%60.%0A%0AAn%20Etherscan%20API%20key%20is%20required%20and%20can%20be%20passed%20via%20%60--etherscan-api-key%20%3CAPI_KEY%3E%60.%0A%0AJust%20as%20%60forge%20init%60%2C%20%60forge%20clone%60%20will%20by%20default%20initialize%20a%20new%20git%20repository%20and%20install%20some%20submodules.%0A%0AIf%20you%20do%20not%20want%20this%20behavior%2C%20pass%20%60--no-git%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Clone%20Options%0A%0A%60-c%60%20_chain_id_%20%20%0A%60--chain%60%20_chain_id_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20name%20or%20EIP-155%20ID%20of%20the%20chain%20to%20clone%20contract%20from.%0A%0A%60-e%60%20_api_key_%20%20%0A%60--etherscan-api-key%60%20_api_key_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20API%20key%20of%20Etherscan%20(or%20equivalent).%0A%0A%60--no-remappings-txt%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPut%20remappings%20inside%20the%20%60foundry.toml%60%20configuration%20file%2C%20instead%20of%20generating%20a%20separate%20%60remappings.txt%60%20file.%0A%0A%23%23%23%23%20VCS%20Options%0A%0A%60--commit%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20an%20initial%20commit.%0A%0A%60--no-git%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20create%20a%20git%20repository.%0A%0A%23%23%23%23%20Display%20Options%0A%0A%60-q%60%20%20%0A%60--quiet%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20print%20any%20messages.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Clone%20UniswapV3Pool%20contract%20from%20Ethereum%20mainnet%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clone%200x8f8EF111B67C04Eb1641f5ff19EE54Cda062f163%20UniswapV3Pool%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%60%60%60%0A%0A2.%20Clone%20a%20contract%2C%20but%20do%20not%20create%20a%20git%20repository%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clone%20--no-git%200x8f8EF111B67C04Eb1641f5ff19EE54Cda062f163%20UniswapV3Pool%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%60%60%60%0A%0A3.%20Clone%20a%20contract%20from%20BNB%20Smart%20Chain%20(BSC)%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clone%20--chain%20bsc%200x7862D9B4bE2156B15d54F41ee4EDE2d5b0b455e4%20UniswapV3Pool%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%60%60%60%0A%0A%23%23%23%20Metadata%0A%0AThe%20cloned%20Forge%20project%20comes%20with%20an%20additional%20%60.clone.meta%60%20metadata%20file%20in%20the%20root%20directory.%0A%60clone.meta%60%20is%20a%20compact%20JSON%20data%20file%20that%20contains%20the%20information%20of%20the%20on-chain%20contract%20instance.%0AThe%20metadata%20includes%3A%0A%0A-%20%60path%60%3A%20The%20path%20to%20the%20source%20file%20that%20contains%20the%20declaration%20of%20contract%20deployed%20on%20chain.%0A-%20%60targetContract%60%3A%20The%20name%20of%20the%20on-chain%20contract%20in%20the%20source%20file.%0A-%20%60address%60%3A%20The%20address%20of%20the%20contract%20deployed%20on%20chain.%0A-%20%60chainId%60%3A%20EIP-155%20ID%20of%20the%20chain%20where%20the%20contract%20is%20deployed.%0A-%20%60creationTransaction%60%3A%20The%20hash%20of%20the%20transaction%20that%20deployed%20the%20contract.%0A-%20%60deployer%60%3A%20The%20account%20address%20who%20is%20the%20sender%20of%20the%20%60creationTransaction%60.%0A-%20%60constructorArguments%60%3A%20The%20constructor%20arguments%20that%20is%20used%20when%20deploying%20the%20contract.%0A-%20%60storageLayout%60%3A%20The%20storage%20layout%20of%20the%20on-chain%20contract%20(if%20the%20corresponding%20contract%20compiler%20version%20supports%20exporting%20storage%20layout).%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-clone-Dy6nTaq2.js"),__vite__mapDeps([184,170,1])),path:"/forge/reference/forge-clone.html",type:"mdx",filePath:"forge/reference/forge-clone.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20clone%0A%0A%23%23%23%20NAME%0A%0Aforge-clone%20-%20Clone%20an%20on-chain%20verified%20contract%20as%20a%20Forge%20project.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20clone%60%20%5B*options*%5D%20_address_%20%5B*root*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreates%20a%20new%20Forge%20project%20by%20cloning%20the%20source%20code%20of%20an%20on-chain%20verified%20contract%20in%20the%20directory%20_root_%20(by%20default%20the%20current%20working%20directory).%0A%0ABy%20default%2C%20%60forge%20clone%60%20clones%20contracts%20from%20Ethereum%20mainnet%20(via%20Etherscan)%2C%20but%20it%20is%20also%20possible%20to%20clone%20from%20other%20EVM-compatible%20blockchains%20that%20foundry%20supports%2C%20e.g.%2C%20BNB%20Smart%20Chain%20(BSC)%2C%20by%20specifying%20chain%20ID%3A%20%60--chain%20%3CChainID%3E%60.%0A%0AAn%20Etherscan%20API%20key%20is%20required%20and%20can%20be%20passed%20via%20%60--etherscan-api-key%20%3CAPI_KEY%3E%60.%0A%0AJust%20as%20%60forge%20init%60%2C%20%60forge%20clone%60%20will%20by%20default%20initialize%20a%20new%20git%20repository%20and%20install%20some%20submodules.%0A%0AIf%20you%20do%20not%20want%20this%20behavior%2C%20pass%20%60--no-git%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Clone%20Options%0A%0A%60-c%60%20_chain_id_%20%20%0A%60--chain%60%20_chain_id_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20name%20or%20EIP-155%20ID%20of%20the%20chain%20to%20clone%20contract%20from.%0A%0A%60-e%60%20_api_key_%20%20%0A%60--etherscan-api-key%60%20_api_key_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecify%20the%20API%20key%20of%20Etherscan%20(or%20equivalent).%0A%0A%60--no-remappings-txt%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPut%20remappings%20inside%20the%20%60foundry.toml%60%20configuration%20file%2C%20instead%20of%20generating%20a%20separate%20%60remappings.txt%60%20file.%0A%0A%23%23%23%23%20VCS%20Options%0A%0A%60--commit%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20an%20initial%20commit.%0A%0A%60--no-git%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20create%20a%20git%20repository.%0A%0A%23%23%23%23%20Display%20Options%0A%0A%60-q%60%20%20%0A%60--quiet%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20print%20any%20messages.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Clone%20UniswapV3Pool%20contract%20from%20Ethereum%20mainnet%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clone%200x8f8EF111B67C04Eb1641f5ff19EE54Cda062f163%20UniswapV3Pool%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%60%60%60%0A%0A2.%20Clone%20a%20contract%2C%20but%20do%20not%20create%20a%20git%20repository%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clone%20--no-git%200x8f8EF111B67C04Eb1641f5ff19EE54Cda062f163%20UniswapV3Pool%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%60%60%60%0A%0A3.%20Clone%20a%20contract%20from%20BNB%20Smart%20Chain%20(BSC)%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20clone%20--chain%20bsc%200x7862D9B4bE2156B15d54F41ee4EDE2d5b0b455e4%20UniswapV3Pool%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%60%60%60%0A%0A%23%23%23%20Metadata%0A%0AThe%20cloned%20Forge%20project%20comes%20with%20an%20additional%20%60.clone.meta%60%20metadata%20file%20in%20the%20root%20directory.%0A%60clone.meta%60%20is%20a%20compact%20JSON%20data%20file%20that%20contains%20the%20information%20of%20the%20on-chain%20contract%20instance.%0AThe%20metadata%20includes%3A%0A%0A-%20%60path%60%3A%20The%20path%20to%20the%20source%20file%20that%20contains%20the%20declaration%20of%20contract%20deployed%20on%20chain.%0A-%20%60targetContract%60%3A%20The%20name%20of%20the%20on-chain%20contract%20in%20the%20source%20file.%0A-%20%60address%60%3A%20The%20address%20of%20the%20contract%20deployed%20on%20chain.%0A-%20%60chainId%60%3A%20EIP-155%20ID%20of%20the%20chain%20where%20the%20contract%20is%20deployed.%0A-%20%60creationTransaction%60%3A%20The%20hash%20of%20the%20transaction%20that%20deployed%20the%20contract.%0A-%20%60deployer%60%3A%20The%20account%20address%20who%20is%20the%20sender%20of%20the%20%60creationTransaction%60.%0A-%20%60constructorArguments%60%3A%20The%20constructor%20arguments%20that%20is%20used%20when%20deploying%20the%20contract.%0A-%20%60storageLayout%60%3A%20The%20storage%20layout%20of%20the%20on-chain%20contract%20(if%20the%20corresponding%20contract%20compiler%20version%20supports%20exporting%20storage%20layout).%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-completions-Bf1MzCYD.js"),__vite__mapDeps([185,170,1])),path:"/forge/reference/forge-completions",type:"mdx",filePath:"forge/reference/forge-completions.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20completions%0A%0A%23%23%23%20NAME%0A%0Aforge-completions%20-%20Generate%20shell%20completions%20script%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20completions%60%20_shell_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20shell%20completions%20script%20for%20the%20given%20shell.%0A%0ASupported%20shells%20are%3A%0A%0A-%20bash%0A-%20elvish%0A-%20fish%0A-%20powershell%0A-%20zsh%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20shell%20completions%20script%20for%20zsh%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20completions%20zsh%20%3E%20%24HOME%2F.oh-my-zsh%2Fcompletions%2F_forge%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-completions-Bf1MzCYD.js"),__vite__mapDeps([185,170,1])),path:"/forge/reference/forge-completions.html",type:"mdx",filePath:"forge/reference/forge-completions.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20completions%0A%0A%23%23%23%20NAME%0A%0Aforge-completions%20-%20Generate%20shell%20completions%20script%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20completions%60%20_shell_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20a%20shell%20completions%20script%20for%20the%20given%20shell.%0A%0ASupported%20shells%20are%3A%0A%0A-%20bash%0A-%20elvish%0A-%20fish%0A-%20powershell%0A-%20zsh%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20shell%20completions%20script%20for%20zsh%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20completions%20zsh%20%3E%20%24HOME%2F.oh-my-zsh%2Fcompletions%2F_forge%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-config-CH-4N-BR.js"),__vite__mapDeps([186,170,1])),path:"/forge/reference/forge-config",type:"mdx",filePath:"forge/reference/forge-config.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20config%0A%0A%23%23%23%20NAME%0A%0Aforge-config%20-%20Display%20the%20current%20config.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20config%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADisplay%20the%20current%20config.%0A%0AThis%20command%20can%20be%20used%20to%20create%20a%20new%20basic%20%60foundry.toml%60%20or%20to%20see%0Awhat%20values%20are%20currently%20set%2C%20taking%20environment%20variables%20and%20the%20global%0Aconfiguration%20file%20into%20account.%0A%0AThe%20command%20supports%20almost%20all%20flags%20of%20the%20other%20commands%20in%20Forge%20to%20allow%0Aoverriding%20values%20in%20the%20displayed%20configuration.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Config%20Options%0A%0A%60--basic%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20a%20basic%20configuration%20file.%0A%0A%60--fix%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAttempts%20to%20fix%20any%20configuration%20warnings.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20basic%20config%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20config%20%3E%20foundry.toml%0A%20%20%20%60%60%60%0A%0A2.%20Enable%20FFI%20in%20%60foundry.toml%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20config%20--ffi%20%3E%20foundry.toml%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-config-CH-4N-BR.js"),__vite__mapDeps([186,170,1])),path:"/forge/reference/forge-config.html",type:"mdx",filePath:"forge/reference/forge-config.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20config%0A%0A%23%23%23%20NAME%0A%0Aforge-config%20-%20Display%20the%20current%20config.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20config%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADisplay%20the%20current%20config.%0A%0AThis%20command%20can%20be%20used%20to%20create%20a%20new%20basic%20%60foundry.toml%60%20or%20to%20see%0Awhat%20values%20are%20currently%20set%2C%20taking%20environment%20variables%20and%20the%20global%0Aconfiguration%20file%20into%20account.%0A%0AThe%20command%20supports%20almost%20all%20flags%20of%20the%20other%20commands%20in%20Forge%20to%20allow%0Aoverriding%20values%20in%20the%20displayed%20configuration.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Config%20Options%0A%0A%60--basic%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrints%20a%20basic%20configuration%20file.%0A%0A%60--fix%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAttempts%20to%20fix%20any%20configuration%20warnings.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20basic%20config%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20config%20%3E%20foundry.toml%0A%20%20%20%60%60%60%0A%0A2.%20Enable%20FFI%20in%20%60foundry.toml%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20config%20--ffi%20%3E%20foundry.toml%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-coverage-D4_rnI4N.js"),__vite__mapDeps([187,170,1])),path:"/forge/reference/forge-coverage",type:"mdx",filePath:"forge/reference/forge-coverage.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20coverage%0A%0A%23%23%23%20NAME%0A%0Aforge-coverage%20-%20Displays%20which%20parts%20of%20your%20code%20are%20covered%20by%20tests.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20coverage%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADisplays%20which%20parts%20of%20your%20code%20are%20covered%20by%20tests.%0A%0A%3E%20**Warning**%20%E2%9A%A0%EF%B8%8F%0A%3E%0A%3E%20The%20%60derive%20function%20end%20line%60%20feature%20introduced%20in%20%60lcov%60%202.0%20version%20(and%20enabled%20by%20default)%20is%20not%20supported%2C%20therefore%20%60lcov%60%20and%20%60genhtml%60%20should%20be%20run%20with%20%60--rc%20derive_function_end_line%3D0%60%20option%20in%20order%20to%20generate%20coverage%20report.%0A%0A%23%23%23%20Options%0A%0A%23%23%23%23%20Report%20Options%0A%0A%60--report%60%20allows%20you%20to%20specify%20the%20report%20type%20to%20use%20for%20coverage.%20This%20flag%20can%20be%20used%20multiple%20times.%0A%0AIt%20has%20three%20different%20options%20and%20is%20set%20to%20%60summary%60%20by%20default.%0A%0A%60summary%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutputs%20a%20chart%20showing%20what%20percentage%20of%20your%20code%20is%20covered%20by%20tests.%0A%0A%60lcov%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreates%20a%20lcov.info%20file%20containing%20your%20coverage%20data%20in%20the%20root%20of%20your%20project's%20directory.%0A%0A%60debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutputs%20lines%20describing%20the%20location%20of%20uncovered%20code.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%23%20Optimization%20Option%0A%0A%60--ir-minimum%60%20allows%20you%20to%20run%20the%20coverage%20with%20%60via-ir%60%20enabled%20for%20the%20%5B%22minimum%20amount%20of%20optimization%22%5D(https%3A%2F%2Fgithub.com%2Fethereum%2Fsolidity%2Fissues%2F12533%23issuecomment-1013073350)%20necessary.%0A%0A%23%23%23%23%20Contract%20Exclusion%0A%0A%60--no-match-coverage%20%22(script%7CFoo%7CBar)%22%60%20allows%20you%20to%20exclude%20paths%20and%20contracts%20from%20the%20coverage%20report.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20View%20summarized%20coverage%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%0A%20%20%20%60%60%60%0A%0A2.%20Create%20lcov%20file%20with%20coverage%20data%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%20--report%20lcov%0A%20%20%20%60%60%60%0A%0A3.%20Output%20uncovered%20code%20locations%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%20--report%20debug%0A%20%20%20%60%60%60%0A%0A4.%20Coverage%20report%20without%20including%20%60script%60%20directory%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%20--no-match-coverage%20script%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-coverage-D4_rnI4N.js"),__vite__mapDeps([187,170,1])),path:"/forge/reference/forge-coverage.html",type:"mdx",filePath:"forge/reference/forge-coverage.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20coverage%0A%0A%23%23%23%20NAME%0A%0Aforge-coverage%20-%20Displays%20which%20parts%20of%20your%20code%20are%20covered%20by%20tests.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20coverage%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADisplays%20which%20parts%20of%20your%20code%20are%20covered%20by%20tests.%0A%0A%3E%20**Warning**%20%E2%9A%A0%EF%B8%8F%0A%3E%0A%3E%20The%20%60derive%20function%20end%20line%60%20feature%20introduced%20in%20%60lcov%60%202.0%20version%20(and%20enabled%20by%20default)%20is%20not%20supported%2C%20therefore%20%60lcov%60%20and%20%60genhtml%60%20should%20be%20run%20with%20%60--rc%20derive_function_end_line%3D0%60%20option%20in%20order%20to%20generate%20coverage%20report.%0A%0A%23%23%23%20Options%0A%0A%23%23%23%23%20Report%20Options%0A%0A%60--report%60%20allows%20you%20to%20specify%20the%20report%20type%20to%20use%20for%20coverage.%20This%20flag%20can%20be%20used%20multiple%20times.%0A%0AIt%20has%20three%20different%20options%20and%20is%20set%20to%20%60summary%60%20by%20default.%0A%0A%60summary%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutputs%20a%20chart%20showing%20what%20percentage%20of%20your%20code%20is%20covered%20by%20tests.%0A%0A%60lcov%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreates%20a%20lcov.info%20file%20containing%20your%20coverage%20data%20in%20the%20root%20of%20your%20project's%20directory.%0A%0A%60debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutputs%20lines%20describing%20the%20location%20of%20uncovered%20code.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%23%20Optimization%20Option%0A%0A%60--ir-minimum%60%20allows%20you%20to%20run%20the%20coverage%20with%20%60via-ir%60%20enabled%20for%20the%20%5B%22minimum%20amount%20of%20optimization%22%5D(https%3A%2F%2Fgithub.com%2Fethereum%2Fsolidity%2Fissues%2F12533%23issuecomment-1013073350)%20necessary.%0A%0A%23%23%23%23%20Contract%20Exclusion%0A%0A%60--no-match-coverage%20%22(script%7CFoo%7CBar)%22%60%20allows%20you%20to%20exclude%20paths%20and%20contracts%20from%20the%20coverage%20report.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20View%20summarized%20coverage%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%0A%20%20%20%60%60%60%0A%0A2.%20Create%20lcov%20file%20with%20coverage%20data%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%20--report%20lcov%0A%20%20%20%60%60%60%0A%0A3.%20Output%20uncovered%20code%20locations%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%20--report%20debug%0A%20%20%20%60%60%60%0A%0A4.%20Coverage%20report%20without%20including%20%60script%60%20directory%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20coverage%20--no-match-coverage%20script%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-create-BsTqwbQD.js"),__vite__mapDeps([188,189,1,93,73,44,45,46,47,48,49,50,51,172,171,173,58,170])),path:"/forge/reference/forge-create",type:"mdx",filePath:"forge/reference/forge-create.mdx",content:"import%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20TransactionOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Ftransaction-options.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20create%0A%0A%23%23%23%20NAME%0A%0Aforge-create%20-%20Deploy%20a%20smart%20contract.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20create%60%20_contract_%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADeploy%20a%20smart%20contract.%0A%0AThe%20path%20to%20the%20contract%20must%20be%20specified%20first%2C%20in%20the%20format%20%60%3Cpath%3E%3A%3Ccontract%3E%60%2C%20e.g.%20%60src%2FContract.sol%3AContract%60.%0A%0AYou%20can%20specify%20constructor%20arguments%20with%20%60--constructor-args%60.%20Alternatively%2C%20you%20can%20specify%20a%20file%0Acontaining%20space-separated%20constructor%20arguments%20with%20%60--constructor-args-path%60.%0A%0ADynamic%20linking%20is%20not%20supported%3A%20you%20should%20predeploy%20your%20libraries%20and%20manually%20specify%20their%20addresses%20(see%20%60--libraries%60).%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20The%20%60--constructor-args%60%20flag%20must%20be%20positioned%20last%20in%20the%20command%2C%20since%20it%20takes%20multiple%20values.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Build%20Options%0A%0A%60--constructor-args%60%20_args..._%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20constructor%20arguments.%0A%0A%60--constructor-args-path%60%20_file_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20a%20file%20containing%20the%20constructor%20arguments.%0A%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20contract%20after%20creation.%20Runs%20%60forge%20verify-contract%60%20with%20the%20appropriate%20parameters.%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%60--unlocked%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20via%20%60eth_sendTransaction%60%20using%20the%20%60--from%60%20argument%20or%20%60%24ETH_FROM%60%20as%20sender.%0A%0A%3CTransactionOptions%20%2F%3E%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Deploy%20a%20contract%20with%20no%20constructor%20arguments%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20src%2FContract.sol%3AContractWithNoConstructor%0A%20%20%20%60%60%60%0A%0A2.%20Deploy%20a%20contract%20with%20two%20constructor%20arguments%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20src%2FContract.sol%3AMyToken%20--constructor-args%20%22My%20Token%22%20%22MT%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%2C%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A%0A%5Beip1559%5D%3A%20https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-1559.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-create-BsTqwbQD.js"),__vite__mapDeps([188,189,1,93,73,44,45,46,47,48,49,50,51,172,171,173,58,170])),path:"/forge/reference/forge-create.html",type:"mdx",filePath:"forge/reference/forge-create.mdx",content:"import%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20TransactionOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Ftransaction-options.mdx%22%3B%0Aimport%20WalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fwallet-options.mdx%22%3B%0Aimport%20RpcOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Frpc-options.mdx%22%3B%0Aimport%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20create%0A%0A%23%23%23%20NAME%0A%0Aforge-create%20-%20Deploy%20a%20smart%20contract.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20create%60%20_contract_%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADeploy%20a%20smart%20contract.%0A%0AThe%20path%20to%20the%20contract%20must%20be%20specified%20first%2C%20in%20the%20format%20%60%3Cpath%3E%3A%3Ccontract%3E%60%2C%20e.g.%20%60src%2FContract.sol%3AContract%60.%0A%0AYou%20can%20specify%20constructor%20arguments%20with%20%60--constructor-args%60.%20Alternatively%2C%20you%20can%20specify%20a%20file%0Acontaining%20space-separated%20constructor%20arguments%20with%20%60--constructor-args-path%60.%0A%0ADynamic%20linking%20is%20not%20supported%3A%20you%20should%20predeploy%20your%20libraries%20and%20manually%20specify%20their%20addresses%20(see%20%60--libraries%60).%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20The%20%60--constructor-args%60%20flag%20must%20be%20positioned%20last%20in%20the%20command%2C%20since%20it%20takes%20multiple%20values.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Build%20Options%0A%0A%60--constructor-args%60%20_args..._%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20constructor%20arguments.%0A%0A%60--constructor-args-path%60%20_file_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20a%20file%20containing%20the%20constructor%20arguments.%0A%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20contract%20after%20creation.%20Runs%20%60forge%20verify-contract%60%20with%20the%20appropriate%20parameters.%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%60--unlocked%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20via%20%60eth_sendTransaction%60%20using%20the%20%60--from%60%20argument%20or%20%60%24ETH_FROM%60%20as%20sender.%0A%0A%3CTransactionOptions%20%2F%3E%0A%0A%3CWalletOptions%20%2F%3E%0A%0A%3CRpcOptions%20%2F%3E%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Deploy%20a%20contract%20with%20no%20constructor%20arguments%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20src%2FContract.sol%3AContractWithNoConstructor%0A%20%20%20%60%60%60%0A%0A2.%20Deploy%20a%20contract%20with%20two%20constructor%20arguments%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20src%2FContract.sol%3AMyToken%20--constructor-args%20%22My%20Token%22%20%22MT%22%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%2C%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A%0A%5Beip1559%5D%3A%20https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-1559.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-doc-CCBmlRM_.js"),__vite__mapDeps([190,170,1])),path:"/forge/reference/forge-doc",type:"mdx",filePath:"forge/reference/forge-doc.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20doc%0A%0A%23%23%23%20NAME%0A%0Aforge-doc%20-%20Generate%20documentation%20for%20Solidity%20source%20files.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20doc%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20and%20builds%20an%20mdbook%20from%20Solidity%20source%20files.%0A%0A%23%23%23%20OPTIONS%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--out%60%20_path_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20output%20path%20for%20the%20generated%20mdbook.%20By%20default%2C%20it%20is%20the%20%60docs%2F%60%20in%20project%20root.%0A%0A%60--build%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBuild%20the%20%60mdbook%60%20from%20generated%20files.%0A%0A%60--serve%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BServe%20the%20documentation%20locally.%0A%0A%60--hostname%60%20_hostname_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BHostname%20for%20serving%20documentation.%20Requires%20%60--serve%60.%0A%0A%60--port%60%20_port_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPort%20for%20serving%20documentation.%20Requires%20%60--serve%60.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20documentation.%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20doc%0A%20%20%20%60%60%60%0A2.%20Generate%20and%20build%20documentation%20with%20specified%20output%20directory.%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20doc%20--build%20--out%20.%2Fdocumentation%0A%20%20%20%60%60%60%0A3.%20Generate%20and%20serve%20documentation%20locally%20on%20port%204000.%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20doc%20--serve%20--port%204000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5BDoc%20config%5D(%2Fconfig%2Freference%2Fdoc-generator.mdx)%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-doc-CCBmlRM_.js"),__vite__mapDeps([190,170,1])),path:"/forge/reference/forge-doc.html",type:"mdx",filePath:"forge/reference/forge-doc.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20doc%0A%0A%23%23%23%20NAME%0A%0Aforge-doc%20-%20Generate%20documentation%20for%20Solidity%20source%20files.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20doc%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGenerates%20and%20builds%20an%20mdbook%20from%20Solidity%20source%20files.%0A%0A%23%23%23%20OPTIONS%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--out%60%20_path_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20output%20path%20for%20the%20generated%20mdbook.%20By%20default%2C%20it%20is%20the%20%60docs%2F%60%20in%20project%20root.%0A%0A%60--build%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBuild%20the%20%60mdbook%60%20from%20generated%20files.%0A%0A%60--serve%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BServe%20the%20documentation%20locally.%0A%0A%60--hostname%60%20_hostname_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BHostname%20for%20serving%20documentation.%20Requires%20%60--serve%60.%0A%0A%60--port%60%20_port_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPort%20for%20serving%20documentation.%20Requires%20%60--serve%60.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Generate%20documentation.%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20doc%0A%20%20%20%60%60%60%0A2.%20Generate%20and%20build%20documentation%20with%20specified%20output%20directory.%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20doc%20--build%20--out%20.%2Fdocumentation%0A%20%20%20%60%60%60%0A3.%20Generate%20and%20serve%20documentation%20locally%20on%20port%204000.%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20doc%20--serve%20--port%204000%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5BDoc%20config%5D(%2Fconfig%2Freference%2Fdoc-generator.mdx)%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-flatten-CmxZ-6Pd.js"),__vite__mapDeps([191,173,1,170])),path:"/forge/reference/forge-flatten",type:"mdx",filePath:"forge/reference/forge-flatten.mdx",content:"import%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20flatten%0A%0A%23%23%23%20NAME%0A%0Aforge-flatten%20-%20Flatten%20a%20source%20file%20and%20all%20of%20its%20imports%20into%20one%20file.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20flatten%60%20%5B*options*%5D%20_file_%0A%0A%23%23%23%20DESCRIPTION%0A%0AFlatten%20a%20source%20file%20and%20all%20of%20its%20imports%20into%20one%20file.%0A%0AIf%20%60--output%20%3CFILE%3E%60%20is%20not%20set%2C%20then%20the%20flattened%20contract%20will%20be%20output%20to%20stdout.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Flatten%20Options%0A%0A%60-o%60%20_file_%20%20%0A%60--output%60%20_file_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20output%20the%20flattened%20contract.%20If%20not%20specified%2C%20the%20flattened%20contract%20will%20be%20output%20to%20stdout.%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Flatten%20%60src%2FContract.sol%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20flatten%20src%2FContract.sol%0A%20%20%20%60%60%60%0A%0A2.%20Flatten%20%60src%2FContract.sol%60%20and%20write%20the%20result%20to%20%60src%2FContract.flattened.sol%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20flatten%20--output%20src%2FContract.flattened.sol%20src%2FContract.sol%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-flatten-CmxZ-6Pd.js"),__vite__mapDeps([191,173,1,170])),path:"/forge/reference/forge-flatten.html",type:"mdx",filePath:"forge/reference/forge-flatten.mdx",content:"import%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20flatten%0A%0A%23%23%23%20NAME%0A%0Aforge-flatten%20-%20Flatten%20a%20source%20file%20and%20all%20of%20its%20imports%20into%20one%20file.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20flatten%60%20%5B*options*%5D%20_file_%0A%0A%23%23%23%20DESCRIPTION%0A%0AFlatten%20a%20source%20file%20and%20all%20of%20its%20imports%20into%20one%20file.%0A%0AIf%20%60--output%20%3CFILE%3E%60%20is%20not%20set%2C%20then%20the%20flattened%20contract%20will%20be%20output%20to%20stdout.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Flatten%20Options%0A%0A%60-o%60%20_file_%20%20%0A%60--output%60%20_file_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20output%20the%20flattened%20contract.%20If%20not%20specified%2C%20the%20flattened%20contract%20will%20be%20output%20to%20stdout.%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Flatten%20%60src%2FContract.sol%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20flatten%20src%2FContract.sol%0A%20%20%20%60%60%60%0A%0A2.%20Flatten%20%60src%2FContract.sol%60%20and%20write%20the%20result%20to%20%60src%2FContract.flattened.sol%60%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20flatten%20--output%20src%2FContract.flattened.sol%20src%2FContract.sol%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-geiger-C6IDb56C.js"),__vite__mapDeps([192,170,1])),path:"/forge/reference/forge-geiger",type:"mdx",filePath:"forge/reference/forge-geiger.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20geiger%0A%0A%23%23%23%20NAME%0A%0Aforge-geiger%20-%20Detects%20usage%20of%20unsafe%20cheat%20codes%20in%20a%20foundry%20project%20and%20its%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20geiger%60%20%5B*options*%5D%20%5B*path*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADetects%20usage%20of%20unsafe%20cheat%20codes%20in%20a%20foundry%20project%20and%20its%20dependencies.%0A%0A%23%23%23%20OPTIONS%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--check%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20in%20'check'%20mode.%20Exits%20with%200%20if%20no%20unsafe%20cheat%20codes%20were%20found.%20Exits%20with%201%20if%20unsafe%20cheat%20codes%20are%20detected.%0A%0A%60--full%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20a%20full%20report%20of%20all%20files%20even%20if%20no%20unsafe%20functions%20are%20found.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-geiger-C6IDb56C.js"),__vite__mapDeps([192,170,1])),path:"/forge/reference/forge-geiger.html",type:"mdx",filePath:"forge/reference/forge-geiger.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20geiger%0A%0A%23%23%23%20NAME%0A%0Aforge-geiger%20-%20Detects%20usage%20of%20unsafe%20cheat%20codes%20in%20a%20foundry%20project%20and%20its%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20geiger%60%20%5B*options*%5D%20%5B*path*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADetects%20usage%20of%20unsafe%20cheat%20codes%20in%20a%20foundry%20project%20and%20its%20dependencies.%0A%0A%23%23%23%20OPTIONS%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--check%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20in%20'check'%20mode.%20Exits%20with%200%20if%20no%20unsafe%20cheat%20codes%20were%20found.%20Exits%20with%201%20if%20unsafe%20cheat%20codes%20are%20detected.%0A%0A%60--full%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20a%20full%20report%20of%20all%20files%20even%20if%20no%20unsafe%20functions%20are%20found.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-help-92WlvSO8.js"),__vite__mapDeps([193,1])),path:"/forge/reference/forge-help",type:"mdx",filePath:"forge/reference/forge-help.mdx",content:"%23%23%20forge%20help%0A%0A%23%23%23%20NAME%0A%0Aforge-help%20-%20Get%20help%20for%20a%20Forge%20command%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20help%60%20%5B*subcommand*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APrints%20a%20help%20message%20for%20the%20given%20command.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20help%20for%20a%20command%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20help%20build%0A%20%20%20%60%60%60%0A%0A2.%20Help%20is%20also%20available%20with%20the%20%60--help%60%20flag%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--help%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-help-92WlvSO8.js"),__vite__mapDeps([193,1])),path:"/forge/reference/forge-help.html",type:"mdx",filePath:"forge/reference/forge-help.mdx",content:"%23%23%20forge%20help%0A%0A%23%23%23%20NAME%0A%0Aforge-help%20-%20Get%20help%20for%20a%20Forge%20command%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20help%60%20%5B*subcommand*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0APrints%20a%20help%20message%20for%20the%20given%20command.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Get%20help%20for%20a%20command%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20help%20build%0A%20%20%20%60%60%60%0A%0A2.%20Help%20is%20also%20available%20with%20the%20%60--help%60%20flag%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%20--help%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-init-CJV6pX5m.js"),__vite__mapDeps([194,170,1])),path:"/forge/reference/forge-init",type:"mdx",filePath:"forge/reference/forge-init.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20init%0A%0A%23%23%23%20NAME%0A%0Aforge-init%20-%20Create%20a%20new%20Forge%20project.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20init%60%20%5B*options*%5D%20%5B*root*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20new%20Forge%20project%20in%20the%20directory%20_root_%20(by%20default%20the%20current%20working%20directory).%0A%0AThe%20default%20template%20creates%20the%20following%20project%20layout%3A%0A%0A%60%60%60bash%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree-with-files%3Aoutput%5D%0A%60%60%60%0A%0AHowever%2C%20it%20is%20possible%20to%20create%20a%20project%20from%20another%20using%20%60--template%60.%0A%0ABy%20default%2C%20%60forge%20init%60%20will%20also%20initialize%20a%20new%20git%20repository%20and%20install%20some%20submodules.%0A%0AIf%20you%20do%20not%20want%20this%20behavior%2C%20pass%20%60--no-git%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Init%20Options%0A%0A%60--force%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20the%20project%20even%20if%20the%20specified%20root%20directory%20is%20not%20empty.%0A%0A%60-t%60%20_template_%20%20%0A%60--template%60%20_template_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20template%20to%20start%20from.%0A%0A%60--vscode%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20%60.vscode%2Fsettings.json%60%20file%20with%20Solidity%20settings%2C%20and%20generate%20a%20%60remappings.txt%60%20file.%0A%0A%60--offline%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20install%20dependencies%20from%20the%20network.%0A%0A%23%23%23%23%20VCS%20Options%0A%0A%60--commit%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20an%20initial%20commit.%0A%0A%60--no-git%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20create%20a%20git%20repository.%0A%0A%23%23%23%23%20Display%20Options%0A%0A%60-q%60%20%20%0A%60--quiet%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20print%20any%20messages.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20hello_foundry%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20new%20project%2C%20but%20do%20not%20create%20a%20git%20repository%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20--no-git%20hello_foundry%0A%20%20%20%60%60%60%0A%0A3.%20Forcibly%20create%20a%20new%20project%20in%20a%20non-empty%20directory%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20--force%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-init-CJV6pX5m.js"),__vite__mapDeps([194,170,1])),path:"/forge/reference/forge-init.html",type:"mdx",filePath:"forge/reference/forge-init.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20init%0A%0A%23%23%23%20NAME%0A%0Aforge-init%20-%20Create%20a%20new%20Forge%20project.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20init%60%20%5B*options*%5D%20%5B*root*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20new%20Forge%20project%20in%20the%20directory%20_root_%20(by%20default%20the%20current%20working%20directory).%0A%0AThe%20default%20template%20creates%20the%20following%20project%20layout%3A%0A%0A%60%60%60bash%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree-with-files%3Aoutput%5D%0A%60%60%60%0A%0AHowever%2C%20it%20is%20possible%20to%20create%20a%20project%20from%20another%20using%20%60--template%60.%0A%0ABy%20default%2C%20%60forge%20init%60%20will%20also%20initialize%20a%20new%20git%20repository%20and%20install%20some%20submodules.%0A%0AIf%20you%20do%20not%20want%20this%20behavior%2C%20pass%20%60--no-git%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Init%20Options%0A%0A%60--force%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20the%20project%20even%20if%20the%20specified%20root%20directory%20is%20not%20empty.%0A%0A%60-t%60%20_template_%20%20%0A%60--template%60%20_template_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20template%20to%20start%20from.%0A%0A%60--vscode%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20%60.vscode%2Fsettings.json%60%20file%20with%20Solidity%20settings%2C%20and%20generate%20a%20%60remappings.txt%60%20file.%0A%0A%60--offline%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20install%20dependencies%20from%20the%20network.%0A%0A%23%23%23%23%20VCS%20Options%0A%0A%60--commit%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20an%20initial%20commit.%0A%0A%60--no-git%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20create%20a%20git%20repository.%0A%0A%23%23%23%23%20Display%20Options%0A%0A%60-q%60%20%20%0A%60--quiet%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20print%20any%20messages.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20hello_foundry%0A%20%20%20%60%60%60%0A%0A2.%20Create%20a%20new%20project%2C%20but%20do%20not%20create%20a%20git%20repository%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20--no-git%20hello_foundry%0A%20%20%20%60%60%60%0A%0A3.%20Forcibly%20create%20a%20new%20project%20in%20a%20non-empty%20directory%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20--force%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-inspect-GAxAV_4y.js"),__vite__mapDeps([195,172,171,1,173,170])),path:"/forge/reference/forge-inspect",type:"mdx",filePath:"forge/reference/forge-inspect.mdx",content:"import%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20inspect%0A%0A%23%23%23%20NAME%0A%0Aforge-inspect%20-%20Get%20specialized%20information%20about%20a%20smart%20contract%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20inspect%60%20%5B*options*%5D%20_contract_name_%20_field_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20specialized%20information%20about%20a%20smart%20contract.%0A%0AThe%20field%20to%20inspect%20(_field_)%20can%20be%20any%20of%3A%0A%0A-%20%60abi%60%0A-%20%60b%60%2F%60bytes%60%2F%60bytecode%60%0A-%20%60deployedBytecode%60%2F%60deployed_bytecode%60%2F%60deployed-bytecode%60%2F%60deployedbytecode%60%2F%60deployed%60%0A-%20%60assembly%60%2F%60asm%60%0A-%20%60asmOptimized%60%2F%60assemblyOptimized%60%2F%60assemblyoptimized%60%2F%60assembly_optimized%60%2F%60asmopt%60%2F%60assembly-optimized%60%2F%60asmo%60%2F%60asm-optimized%60%2F%60asmoptimized%60%2F%60asm_optimized%60%0A-%20%60methods%60%2F%60methodidentifiers%60%2F%60methodIdentifiers%60%2F%60method_identifiers%60%2F%60method-identifiers%60%2F%60mi%60%0A-%20%60gasEstimates%60%2F%60gas%60%2F%60gas_estimates%60%2F%60gas-estimates%60%2F%60gasestimates%60%0A-%20%60storageLayout%60%2F%60storage_layout%60%2F%60storage-layout%60%2F%60storagelayout%60%2F%60storage%60%0A-%20%60devdoc%60%2F%60dev-doc%60%2F%60devDoc%60%0A-%20%60ir%60%0A-%20%60ir-optimized%60%2F%60irOptimized%60%2F%60iroptimized%60%2F%60iro%60%2F%60iropt%60%0A-%20%60metadata%60%2F%60meta%60%0A-%20%60userdoc%60%2F%60userDoc%60%2F%60user-doc%60%0A-%20%60ewasm%60%2F%60e-wasm%60%0A-%20%60errors%60%0A-%20%60events%60%0A%0A%23%23%23%20OPTIONS%0A%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFormat%20output%20as%20JSON.%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Inspect%20the%20bytecode%20of%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20inspect%20MyContract%20bytecode%0A%20%20%20%60%60%60%0A%0A2.%20Inspect%20the%20storage%20layout%20of%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20inspect%20MyContract%20storage%0A%20%20%20%60%60%60%0A%0A3.%20Inspect%20the%20abi%20of%20a%20contract%20in%20JSON%20format%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20inspect%20--json%20MyContract%20abi%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-inspect-GAxAV_4y.js"),__vite__mapDeps([195,172,171,1,173,170])),path:"/forge/reference/forge-inspect.html",type:"mdx",filePath:"forge/reference/forge-inspect.mdx",content:"import%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20inspect%0A%0A%23%23%23%20NAME%0A%0Aforge-inspect%20-%20Get%20specialized%20information%20about%20a%20smart%20contract%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20inspect%60%20%5B*options*%5D%20_contract_name_%20_field_%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20specialized%20information%20about%20a%20smart%20contract.%0A%0AThe%20field%20to%20inspect%20(_field_)%20can%20be%20any%20of%3A%0A%0A-%20%60abi%60%0A-%20%60b%60%2F%60bytes%60%2F%60bytecode%60%0A-%20%60deployedBytecode%60%2F%60deployed_bytecode%60%2F%60deployed-bytecode%60%2F%60deployedbytecode%60%2F%60deployed%60%0A-%20%60assembly%60%2F%60asm%60%0A-%20%60asmOptimized%60%2F%60assemblyOptimized%60%2F%60assemblyoptimized%60%2F%60assembly_optimized%60%2F%60asmopt%60%2F%60assembly-optimized%60%2F%60asmo%60%2F%60asm-optimized%60%2F%60asmoptimized%60%2F%60asm_optimized%60%0A-%20%60methods%60%2F%60methodidentifiers%60%2F%60methodIdentifiers%60%2F%60method_identifiers%60%2F%60method-identifiers%60%2F%60mi%60%0A-%20%60gasEstimates%60%2F%60gas%60%2F%60gas_estimates%60%2F%60gas-estimates%60%2F%60gasestimates%60%0A-%20%60storageLayout%60%2F%60storage_layout%60%2F%60storage-layout%60%2F%60storagelayout%60%2F%60storage%60%0A-%20%60devdoc%60%2F%60dev-doc%60%2F%60devDoc%60%0A-%20%60ir%60%0A-%20%60ir-optimized%60%2F%60irOptimized%60%2F%60iroptimized%60%2F%60iro%60%2F%60iropt%60%0A-%20%60metadata%60%2F%60meta%60%0A-%20%60userdoc%60%2F%60userDoc%60%2F%60user-doc%60%0A-%20%60ewasm%60%2F%60e-wasm%60%0A-%20%60errors%60%0A-%20%60events%60%0A%0A%23%23%23%20OPTIONS%0A%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFormat%20output%20as%20JSON.%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Inspect%20the%20bytecode%20of%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20inspect%20MyContract%20bytecode%0A%20%20%20%60%60%60%0A%0A2.%20Inspect%20the%20storage%20layout%20of%20a%20contract%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20inspect%20MyContract%20storage%0A%20%20%20%60%60%60%0A%0A3.%20Inspect%20the%20abi%20of%20a%20contract%20in%20JSON%20format%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20inspect%20--json%20MyContract%20abi%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-install-BKZyH6ej.js"),__vite__mapDeps([196,170,1])),path:"/forge/reference/forge-install",type:"mdx",filePath:"forge/reference/forge-install.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20install%0A%0A%23%23%23%20NAME%0A%0Aforge-install%20-%20Install%20one%20or%20more%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20install%60%20%5B*options*%5D%20%5B*deps...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AInstall%20one%20or%20more%20dependencies.%0A%0ADependencies%20are%20installed%20as%20git%20submodules.%20If%20you%20do%20not%20want%20this%20behavior%2C%20pass%20%60--no-git%60.%0A%0AIf%20no%20arguments%20are%20provided%2C%20then%20existing%20dependencies%20are%20installed.%0A%0ADependencies%20can%20be%20a%20raw%20URL%20(%60https%3A%2F%2Ffoo.com%2Fdep%60)%2C%20an%20SSH%20URL%20(%60git%40github.com%3Aowner%2Frepo%60)%2C%20or%20the%20path%20to%20a%20GitHub%20repository%20(%60owner%2Frepo%60).%0AAdditionally%2C%20a%20ref%20can%20be%20added%20to%20the%20dependency%20path%20to%20install%20a%20specific%20version%20of%20a%20dependency.%0A%0AA%20ref%20can%20be%3A%0A%0A-%20A%20branch%3A%20%60owner%2Frepo%40master%60%0A-%20A%20tag%3A%20%60owner%2Frepo%40v1.2.3%60%0A-%20A%20commit%3A%20%60owner%2Frepo%408e8128%60%0A%0AThe%20ref%20defaults%20to%20%60master%60.%0A%0AYou%20can%20also%20choose%20the%20name%20of%20the%20folder%20the%20dependency%20will%20be%20in.%20By%20default%2C%20the%20folder%20name%20is%20the%20name%20of%0Athe%20repository.%20If%20you%20want%20to%20change%20the%20name%20of%20the%20folder%2C%20prepend%20%60%3Cfolder%3E%3D%60%20to%20the%20dependency.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Project%20Options%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%23%23%23%23%20VCS%20Options%0A%0A%60--commit%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20commit%20after%20installing%20the%20dependencies.%0A%0A%60--no-git%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInstall%20without%20adding%20the%20dependency%20as%20a%20submodule.%0A%0A%23%23%23%23%20Display%20Options%0A%0A%60-q%60%20%20%0A%60--quiet%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20print%20any%20messages.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Install%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20transmissions11%2Fsolmate%0A%20%20%20%60%60%60%0A%0A2.%20Install%20a%20specific%20version%20of%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20transmissions11%2Fsolmate%40v7%0A%20%20%20%60%60%60%0A%0A3.%20Install%20multiple%20dependencies%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20transmissions11%2Fsolmate%40v7%20OpenZeppelin%2Fopenzeppelin-contracts%0A%20%20%20%60%60%60%0A%0A4.%20Install%20a%20dependency%20without%20creating%20a%20submodule%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20--no-git%20transmissions11%2Fsolmate%0A%20%20%20%60%60%60%0A%0A5.%20Install%20a%20dependency%20in%20a%20specific%20folder%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20soulmate%3Dtransmissions11%2Fsolmate%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%2C%20%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-install-BKZyH6ej.js"),__vite__mapDeps([196,170,1])),path:"/forge/reference/forge-install.html",type:"mdx",filePath:"forge/reference/forge-install.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20install%0A%0A%23%23%23%20NAME%0A%0Aforge-install%20-%20Install%20one%20or%20more%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20install%60%20%5B*options*%5D%20%5B*deps...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AInstall%20one%20or%20more%20dependencies.%0A%0ADependencies%20are%20installed%20as%20git%20submodules.%20If%20you%20do%20not%20want%20this%20behavior%2C%20pass%20%60--no-git%60.%0A%0AIf%20no%20arguments%20are%20provided%2C%20then%20existing%20dependencies%20are%20installed.%0A%0ADependencies%20can%20be%20a%20raw%20URL%20(%60https%3A%2F%2Ffoo.com%2Fdep%60)%2C%20an%20SSH%20URL%20(%60git%40github.com%3Aowner%2Frepo%60)%2C%20or%20the%20path%20to%20a%20GitHub%20repository%20(%60owner%2Frepo%60).%0AAdditionally%2C%20a%20ref%20can%20be%20added%20to%20the%20dependency%20path%20to%20install%20a%20specific%20version%20of%20a%20dependency.%0A%0AA%20ref%20can%20be%3A%0A%0A-%20A%20branch%3A%20%60owner%2Frepo%40master%60%0A-%20A%20tag%3A%20%60owner%2Frepo%40v1.2.3%60%0A-%20A%20commit%3A%20%60owner%2Frepo%408e8128%60%0A%0AThe%20ref%20defaults%20to%20%60master%60.%0A%0AYou%20can%20also%20choose%20the%20name%20of%20the%20folder%20the%20dependency%20will%20be%20in.%20By%20default%2C%20the%20folder%20name%20is%20the%20name%20of%0Athe%20repository.%20If%20you%20want%20to%20change%20the%20name%20of%20the%20folder%2C%20prepend%20%60%3Cfolder%3E%3D%60%20to%20the%20dependency.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Project%20Options%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%23%23%23%23%20VCS%20Options%0A%0A%60--commit%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20commit%20after%20installing%20the%20dependencies.%0A%0A%60--no-git%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInstall%20without%20adding%20the%20dependency%20as%20a%20submodule.%0A%0A%23%23%23%23%20Display%20Options%0A%0A%60-q%60%20%20%0A%60--quiet%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20print%20any%20messages.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Install%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20transmissions11%2Fsolmate%0A%20%20%20%60%60%60%0A%0A2.%20Install%20a%20specific%20version%20of%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20transmissions11%2Fsolmate%40v7%0A%20%20%20%60%60%60%0A%0A3.%20Install%20multiple%20dependencies%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20transmissions11%2Fsolmate%40v7%20OpenZeppelin%2Fopenzeppelin-contracts%0A%20%20%20%60%60%60%0A%0A4.%20Install%20a%20dependency%20without%20creating%20a%20submodule%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20--no-git%20transmissions11%2Fsolmate%0A%20%20%20%60%60%60%0A%0A5.%20Install%20a%20dependency%20in%20a%20specific%20folder%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20install%20soulmate%3Dtransmissions11%2Fsolmate%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%2C%20%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-lint-B0QSymET.js"),__vite__mapDeps([197,1])),path:"/forge/reference/forge-lint",type:"mdx",filePath:"forge/reference/forge-lint.mdx",content:"%23%23%20forge%20lint%0A%0A%23%23%23%20NAME%0A%0Aforge-lint%20%E2%80%93%20Lint%20Solidity%20source%20files.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20lint%60%20%5B*options*%5D%20%5B*path*%5D...%0A%0A%23%23%23%20DESCRIPTION%0A%0AAnalyzes%20Solidity%20source%20files%20for%20style%2C%20correctness%2C%20and%20best%20practices%20by%20running%20a%20configurable%20set%20of%20lints.%20Supports%20filtering%20by%20lint%20severity%20and%20specific%20lint%20identifiers.%20Can%20output%20results%20in%20a%20JSON%20format%20compatible%20with%20%60rustc%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%60%5BPATH%5D...%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPaths%20to%20the%20Solidity%20files%20or%20directories%20to%20be%20checked.%20Overrides%20the%20%60ignore%60%20project%20config.%20If%20omitted%2C%20all%20source%20files%20in%20the%20project%20are%20linted.%0A%0A%60--root%60%20_path_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--severity%60%20_severity_...%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecifies%20which%20lints%20to%20run%20based%20on%20severity.%20Overrides%20the%20%60severity%60%20project%20config.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSupported%20values%3A%20%60high%60%2C%20%60med%60%2C%20%60low%60%2C%20%60info%60%2C%20%60gas%60.%0A%0A%60--only-lint%60%20_lint_id_...%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecifies%20which%20lints%20to%20run%20by%20their%20ID%20(e.g.%2C%20%60incorrect-shift%60).%20Overrides%20the%20%60exclude_lints%60%20project%20config.%0A%0A%60--json%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BActivates%20the%20linter's%20JSON%20formatter%20(rustc-compatible).%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Lint%20all%20Solidity%20files%20in%20the%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%0A%20%20%20%60%60%60%0A%0A2.%20Lint%20only%20files%20in%20a%20specific%20directory%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%20src%2Fcontracts%2F%0A%20%20%20%60%60%60%0A%0A3.%20Lint%20with%20only%20%60high%60%20and%20%60gas%60%20severity%20lints%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%20--severity%20high%20--severity%20gas%0A%20%20%20%60%60%60%0A%0A4.%20Lint%20with%20specific%20lint%20ID%20and%20output%20as%20JSON%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%20--only-lint%20incorrect-shift%20--json%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SUPPORTED%20LINTS%0A%0AThis%20section%20details%20the%20lints%20supported%20by%20%60forge%20lint%60.%20Each%20lint%20includes%20an%20ID%2C%20a%20description%20of%20the%20issue%20it%20checks%20for%2C%20its%20severity%2C%20and%20examples%20of%20incorrect%20and%20correct%20code.%0A%0A%23%23%23%23%20High%20Severity%0A%0A%23%23%23%23%23%20%60incorrect-shift%60%0A%0AWarns%20against%20shift%20operations%20where%20the%20operands%20might%20be%20in%20an%20unconventional%20or%20potentially%20erroneous%20order%2C%20specifically%20when%20a%20literal%20is%20shifted%20by%20a%20non-literal.%0A%0AIn%20Solidity%2C%20bitwise%20shift%20operations%20(%60%3C%3C%60%20for%20left%20shift%2C%20%60%3E%3E%60%20for%20right%20shift)%20take%20the%20value%20to%20be%20shifted%20as%20the%20left%20operand%20and%20the%20number%20of%20bits%20to%20shift%20as%20the%20right%20operand.%0A%0AThis%20lint%20rule%20uses%20a%20heuristic%20to%20flag%20potentially%20incorrect%20shift%20oferations.%20To%20do%20so%2C%20it%20identifies%20expressions%20where%20literal%20is%20shifted%20by%20a%20variable%2C%20which%20can%20often%20be%20an%20indication%20of%20a%20logical%20error%20where%20the%20operands%20were%20intended%20to%20be%20reversed.%20If%20that%20was%20indeed%20intended%2C%20it%20is%20recommended%20to%20replace%20literals%20by%20constants.%20Alternatively%2C%20the%20lint%20rule%20can%20be%20disabled.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20IncorrectShift%20%7B%0A%20%20%20%20uint64%20const%20LARGE_NUM%20%3D%201%20ether%3B%0A%20%20%20%20uint256%20foo%20%3D%20100%3B%0A%0A%20%20%20%20function%20correct()%20public%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifting%20'foo'%20by%20a%20literal%20'2'.%0A%20%20%20%20%20%20%20%20return%20foo%20%3C%3C%202%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifting%20a%20const%20'LARGE_NUM'%20by%20a%20variable%20'foo'.%0A%20%20%20%20%20%20%20%20return%20LARGE_NUM%20%3C%3C%20foo%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifting%20a%20literal%20'2'%20by%20a%20variable%20'foo'.%20This%20is%20likely%20an%20error.%0A%20%20%20%20%20%20%20%20return%202%20%3C%3C%20foo%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22incorrect-shift%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60unchecked-call%60%0A%0AWarns%20when%20low-level%20calls%20(%60.call()%60%2C%20%60.delegatecall()%60%2C%20%60.staticcall()%60)%20do%20not%20check%20the%20success%20return%20value.%0A%0ALow-level%20calls%20in%20Solidity%20return%20a%20tuple%20%60(bool%20success%2C%20bytes%20memory%20data)%60.%20Not%20checking%20the%20%60success%60%20value%20can%20lead%20to%20silent%20failures%20where%20the%20called%20function%20reverts%20but%20execution%20continues%2C%20potentially%20resulting%20in%20unexpected%20behavior%20or%20security%20vulnerabilities.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20UncheckedCall%20%7B%0A%20%20%20%20function%20correct()%20public%20%7B%0A%20%20%20%20%20%20%20%20(bool%20success%2C%20)%20%3D%20address(target).call(%22%22)%3B%0A%20%20%20%20%20%20%20%20require(success%2C%20%22Call%20failed%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Or%20using%20if%20statement%0A%20%20%20%20%20%20%20%20(bool%20ok%2C%20bytes%20memory%20data)%20%3D%20address(target).call(abi.encodeWithSignature(%22foo()%22))%3B%0A%20%20%20%20%20%20%20%20if%20(!ok)%20revert(%22Call%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20call%20-%20success%20value%20is%20ignored%0A%20%20%20%20%20%20%20%20address(target).call(%22%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20call%20-%20only%20data%20is%20used%0A%20%20%20%20%20%20%20%20(%2C%20bytes%20memory%20data)%20%3D%20address(target).call(%22%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22unchecked-call%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60erc20-unchecked-transfer%60%0A%0AWarns%20when%20ERC20%20%60transfer%60%20or%20%60transferFrom%60%20calls%20do%20not%20check%20the%20return%20value.%0A%0AWhile%20the%20ERC20%20standard%20specifies%20that%20these%20functions%20should%20return%20a%20boolean%20indicating%20success%2C%20not%20all%20implementations%20follow%20this%20pattern%20correctly.%20Some%20tokens%20revert%20on%20failure%2C%20while%20others%20return%20false.%20Not%20checking%20the%20return%20value%20can%20lead%20to%20situations%20where%20a%20transfer%20fails%20silently%2C%20causing%20loss%20of%20funds%20or%20incorrect%20contract%20state.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20ERC20UncheckedTransfer%20%7B%0A%20%20%20%20IERC20%20public%20token%3B%0A%0A%20%20%20%20function%20correct()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Check%20return%20value%20with%20require%0A%20%20%20%20%20%20%20%20require(token.transfer(recipient%2C%20amount)%2C%20%22Transfer%20failed%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Or%20capture%20and%20check%20explicitly%0A%20%20%20%20%20%20%20%20bool%20success%20%3D%20token.transferFrom(sender%2C%20recipient%2C%20amount)%3B%0A%20%20%20%20%20%20%20%20if%20(!success)%20revert(%22Transfer%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20transfer%20-%20return%20value%20ignored%0A%20%20%20%20%20%20%20%20token.transfer(recipient%2C%20amount)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20transferFrom%20-%20return%20value%20ignored%0A%20%20%20%20%20%20%20%20token.transferFrom(sender%2C%20recipient%2C%20amount)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22erc20-unchecked-transfer%22%5D%0A%60%60%60%0A%0ANote%20that%20this%20lint%20could%20fire%20false%20positives%2C%20as%20it%20only%20checks%20the%20function%20name%2C%20but%20it%20doesn't%20ensure%20that%20the%20called%20address%20is%20an%20ERC20%20contract.%20Because%20of%20that%2C%20you%20may%20have%20to%20disable%20individual%20occurrences%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%20Medium%20Severity%0A%0A%23%23%23%23%23%20divide-before-multiply%0A%0AWarns%20against%20performing%20division%20before%20multiplication%20within%20the%20same%20expression%2C%20especially%20with%20integer%20arithmetic.%0A%0AIn%20Solidity%2C%20integer%20division%20truncates%20(rounds%20down%20towards%20zero).%0APerforming%20division%20before%20multiplication%20can%20lead%20to%20a%20loss%20of%20precision%20that%20might%20be%20unintended%20and%20could%20have%20been%20avoided%20by%20reordering%20operations.%0AFor%20example%2C%20%60(a%20%2F%20b)%20*%20c%60%20might%20result%20in%20%600%60%20if%20%60a%20%3C%20b%60%2C%20even%20if%20%60(a%20*%20c)%20%2F%20b%60%20would%20have%20yielded%20a%20non-zero%20result.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20DivideBeforeMultiply%20%7B%0A%20%20%20%20function%20correct()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20(1%20*%203)%20%2F%202%3B%20%2F%2F%20Results%20in%201.%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20(1%20%2F%202)%20*%203%3B%20%2F%2F%20Results%20in%200.%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22divide-before-multiply%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%20Informational%20%2F%20Style%20Guide%0A%0A%23%23%23%23%23%20%60pascal-case-struct%60%0A%0AEnsures%20that%20struct%20names%20adhere%20to%20%60PascalCase%60%20(e.g.%2C%20%60MyStruct%60)%20convention.%20This%20is%20a%20common%20styling%20guideline%20in%20Solidity%20to%20improve%20code%20readability%20and%20maintain%20consistency.%0A%0AUseful%20resources%3A%20%5BSolidity%20Style%20Guide%20-%20Struct%20Names%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fstyle-guide.html%23struct-names)%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20PascalCaseStruct%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20uint256%20data%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20struct%20my_struct%20%7B%0A%20%20%20%20%20%20%20%20uint256%20data%3B%0A%20%20%20%20%7D%0A%20%20%20%20struct%20myStruct%20%7B%0A%20%20%20%20%20%20%20%20uint256%20data%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22pascal-case-struct%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60mixed-case-function%60%0A%0AEnsures%20that%20function%20names%20adhere%20to%20%60mixedCase%60%20(e.g.%2C%20%60myFunction%60)%20convention.%20This%20helps%20in%20differentiate%20functions%20from%20other%20identifiers%20like%20structs%20or%20events%20and%20is%20a%20standard%20practice.%0A%0AUseful%20resources%3A%20%5BSolidity%20Style%20Guide%20-%20Function%20Names%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fstyle-guide.html%23function-names)%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20MixedCaseFunction%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20function%20myFunction()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20function%20MyFunction()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%7D%0A%20%20%20%20function%20my_function()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22mixed-case-function%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60mixed-case-variable%60%0A%0AEnsures%20that%20mutable%20variable%20names%20(local%20variables%20and%20state%20variables%20that%20are%20not%20%60constant%60%20or%20%60immutable%60)%20adhere%20to%20%60mixedCase%60%20(e.g.%2C%20%60myVariable%60)%20convention.%20This%20aligns%20with%20the%20general%20Solidity%20style%20for%20variable%20naming.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20MixedCaseVariable%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20uint256%20stateVariable%3B%0A%0A%20%20%20%20function%20correct()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20localVariable%20%3D%2010%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20uint256%20state_variable%3B%0A%0A%20%20%20%20function%20incorrect()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20local_variable%20%3D%2020%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22mixed-case-variable%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60screaming-snake-case-const%60%0A%0AEnsures%20that%20%60constant%60%20variable%20names%20adhere%20to%20%60SCREAMING_SNAKE_CASE%60%20(e.g.%2C%20%60MY_CONSTANT%60).%20This%20is%20the%20standard%20convention%20for%20constants%20in%20Solidity%2C%20making%20them%20easily%20identifiable.%0A%0AUseful%20resources%3A%20%5BSolidity%20Style%20Guide%20-%20Constants%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fstyle-guide.html%23constants)%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20ScreamingSnakeCaseConstant%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20uint256%20constant%20MY_CONSTANT%20%3D%201%3B%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20uint256%20constant%20myConstant%20%3D%202%3B%0A%20%20%20%20uint256%20constant%20my_constant%20%3D%203%3B%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22screaming-snake-case-constant%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60screaming-snake-case-immutable%60%0A%0AEnsures%20that%20%60immutable%60%20variable%20names%20adhere%20to%20%60SCREAMING_SNAKE_CASE%60%20(e.g.%2C%20%60MY_IMMUTABLE_VAR%60).%20Similar%20to%20constants%2C%20this%20convention%20helps%20in%20distinguish%20immutable%20variables%20and%20maintaining%20consistency.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20ScreamingSnakeCaseImmutable%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20uint256%20immutable%20MY_IMMUTABLE_VAR%3B%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20uint256%20immutable%20myImmutableVar%3B%0A%20%20%20%20address%20immutable%20my_immutable_var%3B%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22screaming-snake-case-immutable%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%20Gas%20Optimizations%0A%0A%23%23%23%23%23%20%60asm-keccak256%60%0A%0ARecommends%20using%20inline%20assembly%20for%20%60keccak256%60%20hashing%20when%20possible.%20The%20Solidity%20global%20function%20%60keccak256()%60%20involves%20memory%20allocation%20and%20copying%20which%20can%20be%20less%20gas-efficient%20than%20a%20direct%20inline%20assembly%20implementation%20that%20operates%20on%20memory%20directly%2C%20especially%20for%20hashing%20small%2C%20fixed-size%20data.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20HashOptimization%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20function%20correct(uint256%20a%2C%20uint256%20b)%20public%20pure%20returns%20(bytes32%20hashedVal)%20%7B%0A%20%20%20%20%20%20%20%20assembly%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x00%2C%20a)%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x20%2C%20b)%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20hashedVal%20%3A%3D%20keccak256(0x00%2C%200x40)%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20function%20incorrect(uint256%20a%2C%20uint256%20b)%20public%20pure%20returns%20(bytes32)%20%7B%0A%20%20%20%20%20%20%20%20return%20keccak256(abi.encodePacked(a%2C%20b))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22asm-keccak256%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5BLint%20config%5D(%2Fconfig%2Freference%2Flinter)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-lint-B0QSymET.js"),__vite__mapDeps([197,1])),path:"/forge/reference/forge-lint.html",type:"mdx",filePath:"forge/reference/forge-lint.mdx",content:"%23%23%20forge%20lint%0A%0A%23%23%23%20NAME%0A%0Aforge-lint%20%E2%80%93%20Lint%20Solidity%20source%20files.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20lint%60%20%5B*options*%5D%20%5B*path*%5D...%0A%0A%23%23%23%20DESCRIPTION%0A%0AAnalyzes%20Solidity%20source%20files%20for%20style%2C%20correctness%2C%20and%20best%20practices%20by%20running%20a%20configurable%20set%20of%20lints.%20Supports%20filtering%20by%20lint%20severity%20and%20specific%20lint%20identifiers.%20Can%20output%20results%20in%20a%20JSON%20format%20compatible%20with%20%60rustc%60.%0A%0A%23%23%23%20OPTIONS%0A%0A%60%5BPATH%5D...%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPaths%20to%20the%20Solidity%20files%20or%20directories%20to%20be%20checked.%20Overrides%20the%20%60ignore%60%20project%20config.%20If%20omitted%2C%20all%20source%20files%20in%20the%20project%20are%20linted.%0A%0A%60--root%60%20_path_%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--severity%60%20_severity_...%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecifies%20which%20lints%20to%20run%20based%20on%20severity.%20Overrides%20the%20%60severity%60%20project%20config.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSupported%20values%3A%20%60high%60%2C%20%60med%60%2C%20%60low%60%2C%20%60info%60%2C%20%60gas%60.%0A%0A%60--only-lint%60%20_lint_id_...%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSpecifies%20which%20lints%20to%20run%20by%20their%20ID%20(e.g.%2C%20%60incorrect-shift%60).%20Overrides%20the%20%60exclude_lints%60%20project%20config.%0A%0A%60--json%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BActivates%20the%20linter's%20JSON%20formatter%20(rustc-compatible).%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Lint%20all%20Solidity%20files%20in%20the%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%0A%20%20%20%60%60%60%0A%0A2.%20Lint%20only%20files%20in%20a%20specific%20directory%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%20src%2Fcontracts%2F%0A%20%20%20%60%60%60%0A%0A3.%20Lint%20with%20only%20%60high%60%20and%20%60gas%60%20severity%20lints%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%20--severity%20high%20--severity%20gas%0A%20%20%20%60%60%60%0A%0A4.%20Lint%20with%20specific%20lint%20ID%20and%20output%20as%20JSON%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20lint%20--only-lint%20incorrect-shift%20--json%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SUPPORTED%20LINTS%0A%0AThis%20section%20details%20the%20lints%20supported%20by%20%60forge%20lint%60.%20Each%20lint%20includes%20an%20ID%2C%20a%20description%20of%20the%20issue%20it%20checks%20for%2C%20its%20severity%2C%20and%20examples%20of%20incorrect%20and%20correct%20code.%0A%0A%23%23%23%23%20High%20Severity%0A%0A%23%23%23%23%23%20%60incorrect-shift%60%0A%0AWarns%20against%20shift%20operations%20where%20the%20operands%20might%20be%20in%20an%20unconventional%20or%20potentially%20erroneous%20order%2C%20specifically%20when%20a%20literal%20is%20shifted%20by%20a%20non-literal.%0A%0AIn%20Solidity%2C%20bitwise%20shift%20operations%20(%60%3C%3C%60%20for%20left%20shift%2C%20%60%3E%3E%60%20for%20right%20shift)%20take%20the%20value%20to%20be%20shifted%20as%20the%20left%20operand%20and%20the%20number%20of%20bits%20to%20shift%20as%20the%20right%20operand.%0A%0AThis%20lint%20rule%20uses%20a%20heuristic%20to%20flag%20potentially%20incorrect%20shift%20oferations.%20To%20do%20so%2C%20it%20identifies%20expressions%20where%20literal%20is%20shifted%20by%20a%20variable%2C%20which%20can%20often%20be%20an%20indication%20of%20a%20logical%20error%20where%20the%20operands%20were%20intended%20to%20be%20reversed.%20If%20that%20was%20indeed%20intended%2C%20it%20is%20recommended%20to%20replace%20literals%20by%20constants.%20Alternatively%2C%20the%20lint%20rule%20can%20be%20disabled.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20IncorrectShift%20%7B%0A%20%20%20%20uint64%20const%20LARGE_NUM%20%3D%201%20ether%3B%0A%20%20%20%20uint256%20foo%20%3D%20100%3B%0A%0A%20%20%20%20function%20correct()%20public%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifting%20'foo'%20by%20a%20literal%20'2'.%0A%20%20%20%20%20%20%20%20return%20foo%20%3C%3C%202%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifting%20a%20const%20'LARGE_NUM'%20by%20a%20variable%20'foo'.%0A%20%20%20%20%20%20%20%20return%20LARGE_NUM%20%3C%3C%20foo%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Shifting%20a%20literal%20'2'%20by%20a%20variable%20'foo'.%20This%20is%20likely%20an%20error.%0A%20%20%20%20%20%20%20%20return%202%20%3C%3C%20foo%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22incorrect-shift%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60unchecked-call%60%0A%0AWarns%20when%20low-level%20calls%20(%60.call()%60%2C%20%60.delegatecall()%60%2C%20%60.staticcall()%60)%20do%20not%20check%20the%20success%20return%20value.%0A%0ALow-level%20calls%20in%20Solidity%20return%20a%20tuple%20%60(bool%20success%2C%20bytes%20memory%20data)%60.%20Not%20checking%20the%20%60success%60%20value%20can%20lead%20to%20silent%20failures%20where%20the%20called%20function%20reverts%20but%20execution%20continues%2C%20potentially%20resulting%20in%20unexpected%20behavior%20or%20security%20vulnerabilities.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20UncheckedCall%20%7B%0A%20%20%20%20function%20correct()%20public%20%7B%0A%20%20%20%20%20%20%20%20(bool%20success%2C%20)%20%3D%20address(target).call(%22%22)%3B%0A%20%20%20%20%20%20%20%20require(success%2C%20%22Call%20failed%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Or%20using%20if%20statement%0A%20%20%20%20%20%20%20%20(bool%20ok%2C%20bytes%20memory%20data)%20%3D%20address(target).call(abi.encodeWithSignature(%22foo()%22))%3B%0A%20%20%20%20%20%20%20%20if%20(!ok)%20revert(%22Call%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20call%20-%20success%20value%20is%20ignored%0A%20%20%20%20%20%20%20%20address(target).call(%22%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20call%20-%20only%20data%20is%20used%0A%20%20%20%20%20%20%20%20(%2C%20bytes%20memory%20data)%20%3D%20address(target).call(%22%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22unchecked-call%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60erc20-unchecked-transfer%60%0A%0AWarns%20when%20ERC20%20%60transfer%60%20or%20%60transferFrom%60%20calls%20do%20not%20check%20the%20return%20value.%0A%0AWhile%20the%20ERC20%20standard%20specifies%20that%20these%20functions%20should%20return%20a%20boolean%20indicating%20success%2C%20not%20all%20implementations%20follow%20this%20pattern%20correctly.%20Some%20tokens%20revert%20on%20failure%2C%20while%20others%20return%20false.%20Not%20checking%20the%20return%20value%20can%20lead%20to%20situations%20where%20a%20transfer%20fails%20silently%2C%20causing%20loss%20of%20funds%20or%20incorrect%20contract%20state.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20ERC20UncheckedTransfer%20%7B%0A%20%20%20%20IERC20%20public%20token%3B%0A%0A%20%20%20%20function%20correct()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Check%20return%20value%20with%20require%0A%20%20%20%20%20%20%20%20require(token.transfer(recipient%2C%20amount)%2C%20%22Transfer%20failed%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Or%20capture%20and%20check%20explicitly%0A%20%20%20%20%20%20%20%20bool%20success%20%3D%20token.transferFrom(sender%2C%20recipient%2C%20amount)%3B%0A%20%20%20%20%20%20%20%20if%20(!success)%20revert(%22Transfer%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20transfer%20-%20return%20value%20ignored%0A%20%20%20%20%20%20%20%20token.transfer(recipient%2C%20amount)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Unchecked%20transferFrom%20-%20return%20value%20ignored%0A%20%20%20%20%20%20%20%20token.transferFrom(sender%2C%20recipient%2C%20amount)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22erc20-unchecked-transfer%22%5D%0A%60%60%60%0A%0ANote%20that%20this%20lint%20could%20fire%20false%20positives%2C%20as%20it%20only%20checks%20the%20function%20name%2C%20but%20it%20doesn't%20ensure%20that%20the%20called%20address%20is%20an%20ERC20%20contract.%20Because%20of%20that%2C%20you%20may%20have%20to%20disable%20individual%20occurrences%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%20Medium%20Severity%0A%0A%23%23%23%23%23%20divide-before-multiply%0A%0AWarns%20against%20performing%20division%20before%20multiplication%20within%20the%20same%20expression%2C%20especially%20with%20integer%20arithmetic.%0A%0AIn%20Solidity%2C%20integer%20division%20truncates%20(rounds%20down%20towards%20zero).%0APerforming%20division%20before%20multiplication%20can%20lead%20to%20a%20loss%20of%20precision%20that%20might%20be%20unintended%20and%20could%20have%20been%20avoided%20by%20reordering%20operations.%0AFor%20example%2C%20%60(a%20%2F%20b)%20*%20c%60%20might%20result%20in%20%600%60%20if%20%60a%20%3C%20b%60%2C%20even%20if%20%60(a%20*%20c)%20%2F%20b%60%20would%20have%20yielded%20a%20non-zero%20result.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20DivideBeforeMultiply%20%7B%0A%20%20%20%20function%20correct()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20(1%20*%203)%20%2F%202%3B%20%2F%2F%20Results%20in%201.%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20incorrect()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20(1%20%2F%202)%20*%203%3B%20%2F%2F%20Results%20in%200.%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22divide-before-multiply%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%20Informational%20%2F%20Style%20Guide%0A%0A%23%23%23%23%23%20%60pascal-case-struct%60%0A%0AEnsures%20that%20struct%20names%20adhere%20to%20%60PascalCase%60%20(e.g.%2C%20%60MyStruct%60)%20convention.%20This%20is%20a%20common%20styling%20guideline%20in%20Solidity%20to%20improve%20code%20readability%20and%20maintain%20consistency.%0A%0AUseful%20resources%3A%20%5BSolidity%20Style%20Guide%20-%20Struct%20Names%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fstyle-guide.html%23struct-names)%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20PascalCaseStruct%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20struct%20MyStruct%20%7B%0A%20%20%20%20%20%20%20%20uint256%20data%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20struct%20my_struct%20%7B%0A%20%20%20%20%20%20%20%20uint256%20data%3B%0A%20%20%20%20%7D%0A%20%20%20%20struct%20myStruct%20%7B%0A%20%20%20%20%20%20%20%20uint256%20data%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22pascal-case-struct%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60mixed-case-function%60%0A%0AEnsures%20that%20function%20names%20adhere%20to%20%60mixedCase%60%20(e.g.%2C%20%60myFunction%60)%20convention.%20This%20helps%20in%20differentiate%20functions%20from%20other%20identifiers%20like%20structs%20or%20events%20and%20is%20a%20standard%20practice.%0A%0AUseful%20resources%3A%20%5BSolidity%20Style%20Guide%20-%20Function%20Names%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fstyle-guide.html%23function-names)%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20MixedCaseFunction%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20function%20myFunction()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20function%20MyFunction()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%7D%0A%20%20%20%20function%20my_function()%20public%20pure%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22mixed-case-function%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60mixed-case-variable%60%0A%0AEnsures%20that%20mutable%20variable%20names%20(local%20variables%20and%20state%20variables%20that%20are%20not%20%60constant%60%20or%20%60immutable%60)%20adhere%20to%20%60mixedCase%60%20(e.g.%2C%20%60myVariable%60)%20convention.%20This%20aligns%20with%20the%20general%20Solidity%20style%20for%20variable%20naming.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20MixedCaseVariable%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20uint256%20stateVariable%3B%0A%0A%20%20%20%20function%20correct()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20localVariable%20%3D%2010%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20uint256%20state_variable%3B%0A%0A%20%20%20%20function%20incorrect()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20local_variable%20%3D%2020%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22mixed-case-variable%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60screaming-snake-case-const%60%0A%0AEnsures%20that%20%60constant%60%20variable%20names%20adhere%20to%20%60SCREAMING_SNAKE_CASE%60%20(e.g.%2C%20%60MY_CONSTANT%60).%20This%20is%20the%20standard%20convention%20for%20constants%20in%20Solidity%2C%20making%20them%20easily%20identifiable.%0A%0AUseful%20resources%3A%20%5BSolidity%20Style%20Guide%20-%20Constants%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fstyle-guide.html%23constants)%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20ScreamingSnakeCaseConstant%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20uint256%20constant%20MY_CONSTANT%20%3D%201%3B%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20uint256%20constant%20myConstant%20%3D%202%3B%0A%20%20%20%20uint256%20constant%20my_constant%20%3D%203%3B%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22screaming-snake-case-constant%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%23%20%60screaming-snake-case-immutable%60%0A%0AEnsures%20that%20%60immutable%60%20variable%20names%20adhere%20to%20%60SCREAMING_SNAKE_CASE%60%20(e.g.%2C%20%60MY_IMMUTABLE_VAR%60).%20Similar%20to%20constants%2C%20this%20convention%20helps%20in%20distinguish%20immutable%20variables%20and%20maintaining%20consistency.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20ScreamingSnakeCaseImmutable%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20uint256%20immutable%20MY_IMMUTABLE_VAR%3B%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20uint256%20immutable%20myImmutableVar%3B%0A%20%20%20%20address%20immutable%20my_immutable_var%3B%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22screaming-snake-case-immutable%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%23%20Gas%20Optimizations%0A%0A%23%23%23%23%23%20%60asm-keccak256%60%0A%0ARecommends%20using%20inline%20assembly%20for%20%60keccak256%60%20hashing%20when%20possible.%20The%20Solidity%20global%20function%20%60keccak256()%60%20involves%20memory%20allocation%20and%20copying%20which%20can%20be%20less%20gas-efficient%20than%20a%20direct%20inline%20assembly%20implementation%20that%20operates%20on%20memory%20directly%2C%20especially%20for%20hashing%20small%2C%20fixed-size%20data.%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.0%3B%0A%0Acontract%20HashOptimization%20%7B%0A%20%20%20%20%2F%2F%20Correct%0A%20%20%20%20function%20correct(uint256%20a%2C%20uint256%20b)%20public%20pure%20returns%20(bytes32%20hashedVal)%20%7B%0A%20%20%20%20%20%20%20%20assembly%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x00%2C%20a)%0A%20%20%20%20%20%20%20%20%20%20%20%20mstore(0x20%2C%20b)%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20hashedVal%20%3A%3D%20keccak256(0x00%2C%200x40)%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Incorrect%0A%20%20%20%20function%20incorrect(uint256%20a%2C%20uint256%20b)%20public%20pure%20returns%20(bytes32)%20%7B%0A%20%20%20%20%20%20%20%20return%20keccak256(abi.encodePacked(a%2C%20b))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20disable%20this%20lint%20for%20your%20project%2C%20you%20can%20add%20its%20ID%20to%20the%20%60exclude_lints%60%20array%20within%20the%20%60%5Blint%5D%60%20section%20of%20the%20%60foundry.toml%60%20configuration%20file%3A%0A%0A%60%60%60toml%0A%5Blint%5D%0A%23%20...%20rest%20of%20lint%20config%20...%0Aexclude_lints%20%3D%20%5B%22asm-keccak256%22%5D%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20also%20disable%20this%20individual%20occurrence%20using%20%5Binline%20configuration%5D(%2Fconfig%2Freference%2Flinter%23inline-configuration).%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5BLint%20config%5D(%2Fconfig%2Freference%2Flinter)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-remappings-D0WTf1Ge.js"),__vite__mapDeps([198,170,1])),path:"/forge/reference/forge-remappings",type:"mdx",filePath:"forge/reference/forge-remappings.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20remappings%0A%0A%23%23%23%20NAME%0A%0Aforge-remappings%20-%20Get%20the%20automatically%20inferred%20remappings%20for%20the%20project.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20remappings%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20automatically%20inferred%20remappings%20for%20the%20project.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Project%20Options%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--lib-path%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20library%20folder.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20%60remappings.txt%60%20file%20from%20the%20inferred%20remappings%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20remappings%20%3E%20remappings.txt%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-remappings-D0WTf1Ge.js"),__vite__mapDeps([198,170,1])),path:"/forge/reference/forge-remappings.html",type:"mdx",filePath:"forge/reference/forge-remappings.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20remappings%0A%0A%23%23%23%20NAME%0A%0Aforge-remappings%20-%20Get%20the%20automatically%20inferred%20remappings%20for%20the%20project.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20remappings%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AGet%20the%20automatically%20inferred%20remappings%20for%20the%20project.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Project%20Options%0A%0A%60--root%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60--lib-path%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20library%20folder.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20%60remappings.txt%60%20file%20from%20the%20inferred%20remappings%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20remappings%20%3E%20remappings.txt%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-remove-DWEHqDZv.js"),__vite__mapDeps([199,170,1])),path:"/forge/reference/forge-remove",type:"mdx",filePath:"forge/reference/forge-remove.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20remove%0A%0A%23%23%23%20NAME%0A%0Aforge-remove%20-%20Remove%20one%20or%20multiple%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20remove%60%20%5B*options*%5D%20%5B*deps...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARemove%20one%20or%20multiple%20dependencies.%0A%0ADependencies%20can%20be%20a%20raw%20URL%20(%60https%3A%2F%2Ffoo.com%2Fdep%60)%2C%20the%20path%20to%20a%20GitHub%20repository%20(%60owner%2Frepo%60)%20or%20the%20path%20to%20the%20dependency%20in%20the%20project%20tree.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Remove%20a%20dependency%20by%20path%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20remove%20lib%2Fsolmate%0A%20%20%20%60%60%60%0A%0A2.%20Remove%20a%20dependency%20by%20GitHub%20repository%20name%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20remove%20dapphub%2Fsolmate%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%2C%20%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-remove-DWEHqDZv.js"),__vite__mapDeps([199,170,1])),path:"/forge/reference/forge-remove.html",type:"mdx",filePath:"forge/reference/forge-remove.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20remove%0A%0A%23%23%23%20NAME%0A%0Aforge-remove%20-%20Remove%20one%20or%20multiple%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20remove%60%20%5B*options*%5D%20%5B*deps...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARemove%20one%20or%20multiple%20dependencies.%0A%0ADependencies%20can%20be%20a%20raw%20URL%20(%60https%3A%2F%2Ffoo.com%2Fdep%60)%2C%20the%20path%20to%20a%20GitHub%20repository%20(%60owner%2Frepo%60)%20or%20the%20path%20to%20the%20dependency%20in%20the%20project%20tree.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Remove%20a%20dependency%20by%20path%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20remove%20lib%2Fsolmate%0A%20%20%20%60%60%60%0A%0A2.%20Remove%20a%20dependency%20by%20GitHub%20repository%20name%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20remove%20dapphub%2Fsolmate%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%2C%20%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-script-BRhlpuO9.js"),__vite__mapDeps([200,51,1,189,201,172,171,173,179,202,203,204,205,206,175,176,170])),path:"/forge/reference/forge-script",type:"mdx",filePath:"forge/reference/forge-script.mdx",content:"import%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20RetryOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fretry-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20WatchOptions%20from%20%22.%2Fwatch-options.mdx%22%3B%0Aimport%20MultiWalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fmulti-wallet-options.mdx%22%3B%0Aimport%20EvmOptions%20from%20%22.%2Fevm-options.mdx%22%3B%0Aimport%20ExecutorOptions%20from%20%22.%2Fexecutor-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20script%0A%0A%23%23%23%20NAME%0A%0Aforge-script%20-%20Run%20a%20smart%20contract%20as%20a%20script%2C%20building%20transactions%20that%20can%20be%20sent%20onchain.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20script%60%20%5B*options*%5D%20_path_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARun%20a%20smart%20contract%20as%20a%20script%2C%20building%20transactions%20that%20can%20be%20sent%20onchain.%0A%0AScripts%20can%20be%20used%20to%20apply%20state%20transitions%20on%20live%20contracts%2C%20or%20deploy%20and%20initialize%20a%20complex%20set%20of%20smart%20contracts%20using%20Solidity.%0A%0A%23%23%23%20OPTIONS%0A%0A%60--broadcast%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBroadcasts%20the%20transactions.%0A%0A%60--debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpen%20the%20script%20in%20the%20%5Bdebugger%5D%5Bdebugger%5D.%20Takes%20precedence%20over%20broadcast.%0A%0A%60-g%60%20%20%0A%60--gas-estimate-multiplier%60%20_multiplier_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRelative%20percentage%20by%20which%20to%20multiply%20all%20gas%20estimates.%20(i.e.%20set%20to%20200%20to%20double%20them)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20130%0A%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20results%20in%20JSON%20format.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNote%3A%20The%20output%20is%20under%20development%20and%20prone%20to%20change.%0A%0A%60--legacy%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20legacy%20transactions%20instead%20of%20EIP1559%20ones.%20This%20is%20auto-enabled%20for%20common%20networks%20without%20EIP1559.%0A%0A%60--resume%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BResumes%20submitting%20transactions%20that%20failed%20or%20timed-out%20previously.%0A%0A%60-s%60%20%20%0A%60--sig%60%20_signature_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20signature%20of%20the%20function%20you%20want%20to%20call%20in%20the%20contract%2C%20or%20raw%20calldata.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20%60run()%60%0A%0A%60--skip-simulation%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkips%20on-chain%20simulation.%0A%0A%60--skip%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20compilation%20of%20non-essential%20contract%20directories%20like%20test%20or%20script%20(usage%20%60--skip%20test%60).%0A%0A%60--non-interactive%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRemove%20interactive%20prompts%20which%20appear%20if%20the%20contract%20is%20near%20the%20%5BEIP-170%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-170)%20size%20limit.%0A%0A%60--slow%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BMakes%20sure%20a%20transaction%20is%20sent%2C%20only%20after%20its%20previous%20one%20has%20been%20confirmed%20and%20succeeded.%0A%0A%60--target-contract%60%20_contract_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20name%20of%20the%20contract%20you%20want%20to%20run.%0A%0A%60--priority-gas-price%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSets%20the%20priority%20gas%20price%20for%20EIP1559%20transactions.%20Useful%20for%20when%20gas%20prices%20are%20volatile%20and%20you%20want%20to%20get%20your%20transaction%20included.%0A%0A%60--with-gas-price%60%20_price_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSets%20the%20gas%20price%20for%20**broadcasted**%20legacy%20transactions%2C%20or%20the%20max%20fee%20for%20broadcasted%20EIP1559%20transactions.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNote%3A%20To%20set%20the%20gas%20price%20in%20the%20execution%20environment%20of%20the%20script%20use%20%60--gas-price%60%20instead%20(see%20below).%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%23%23%23%23%20Verification%20Options%0A%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20it%20finds%20a%20matching%20broadcast%20log%2C%20it%20tries%20to%20verify%20every%20contract%20found%20in%20the%20receipts.%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%3CRetryOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%23%23%23%23%20Build%20Options%0A%0A%60--names%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20contract%20names.%0A%0A%60--sizes%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20non-test%20contract%20sizes%2C%20exiting%20with%20code%201%20if%20any%20of%20them%20are%20above%20the%20size%20limit.%0A%0A%3CWatchOptions%20%2F%3E%0A%0A%3CMultiWalletOptions%20%2F%3E%0A%0A%3CEvmOptions%20%2F%3E%0A%0A%3CExecutorOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Run%20%60BroadcastTest%60%20as%20a%20script%2C%20broadcasting%20generated%20transactions%20on-chain%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20.%2Ftest%2FBroadcast.t.sol%20--tc%20BroadcastTest%20--sig%20%22deploy()%22%20%5C%0A%20%20%20%20%20%20%20-vvv%20--fork-url%20%24SEPOLIA_RPC_URL%0A%20%20%20%60%60%60%0A%0A2.%20Deploy%20a%20contract%20on%20Polygon%20%5Bsee%20the%20%60Scripting%20with%20Solidity%60%20guide%20for%20an%20example%20script%5D(%2Fguides%2Fscripting-with-solidity).%20_The%20verifier%20url%20is%20different%20for%20every%20network._%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20script%2FNFT.s.sol%3AMyScript%20--chain-id%20137%20--rpc-url%20%24RPC_URL%20%5C%0A%20%20%20%20%20%20%20--etherscan-api-key%20%24POLYGONSCAN_API_KEY%20--verifier-url%20https%3A%2F%2Fapi.polygonscan.com%2Fapi%20%5C%0A%20%20%20%20%20%20%20--broadcast%20--verify%20-vvvv%0A%20%20%20%60%60%60%0A%0A3.%20Resume%20a%20failed%20script.%20Using%20the%20above%20as%20an%20example%2C%20remove%20%60--broadcast%60%20add%20%60--resume%60%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20script%2FNFT.s.sol%3AMyScript%20--chain-id%20137%20--rpc-url%20%24RPC_URL%20%5C%0A%20%20%20%20%20%20%20--etherscan-api-key%20%24POLYGONSCAN_API_KEY%20--verifier-url%20https%3A%2F%2Fapi.polygonscan.com%2Fapi%20%5C%0A%20%20%20%20%20%20%20--verify%20-vvvv%20--resume%0A%20%20%20%60%60%60%0A%0A4.%20Verify%20contracts%20that%20were%20just%20deployed%20with%20a%20script%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20script%2FNFT.s.sol%20--rpc-url%20%24RPC_URL%20--verify%20--resume%0A%20%20%20%60%60%60%0A%0A%5Bdebugger%5D%3A%20..%2F..%2Fforge%2Fdebugger.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-script-BRhlpuO9.js"),__vite__mapDeps([200,51,1,189,201,172,171,173,179,202,203,204,205,206,175,176,170])),path:"/forge/reference/forge-script.html",type:"mdx",filePath:"forge/reference/forge-script.mdx",content:"import%20EtherscanOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fetherscan-options.mdx%22%3B%0Aimport%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20RetryOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fretry-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20WatchOptions%20from%20%22.%2Fwatch-options.mdx%22%3B%0Aimport%20MultiWalletOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fmulti-wallet-options.mdx%22%3B%0Aimport%20EvmOptions%20from%20%22.%2Fevm-options.mdx%22%3B%0Aimport%20ExecutorOptions%20from%20%22.%2Fexecutor-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20script%0A%0A%23%23%23%20NAME%0A%0Aforge-script%20-%20Run%20a%20smart%20contract%20as%20a%20script%2C%20building%20transactions%20that%20can%20be%20sent%20onchain.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20script%60%20%5B*options*%5D%20_path_%20%5B*args...*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARun%20a%20smart%20contract%20as%20a%20script%2C%20building%20transactions%20that%20can%20be%20sent%20onchain.%0A%0AScripts%20can%20be%20used%20to%20apply%20state%20transitions%20on%20live%20contracts%2C%20or%20deploy%20and%20initialize%20a%20complex%20set%20of%20smart%20contracts%20using%20Solidity.%0A%0A%23%23%23%20OPTIONS%0A%0A%60--broadcast%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBroadcasts%20the%20transactions.%0A%0A%60--debug%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpen%20the%20script%20in%20the%20%5Bdebugger%5D%5Bdebugger%5D.%20Takes%20precedence%20over%20broadcast.%0A%0A%60-g%60%20%20%0A%60--gas-estimate-multiplier%60%20_multiplier_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRelative%20percentage%20by%20which%20to%20multiply%20all%20gas%20estimates.%20(i.e.%20set%20to%20200%20to%20double%20them)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20130%0A%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20results%20in%20JSON%20format.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNote%3A%20The%20output%20is%20under%20development%20and%20prone%20to%20change.%0A%0A%60--legacy%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20legacy%20transactions%20instead%20of%20EIP1559%20ones.%20This%20is%20auto-enabled%20for%20common%20networks%20without%20EIP1559.%0A%0A%60--resume%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BResumes%20submitting%20transactions%20that%20failed%20or%20timed-out%20previously.%0A%0A%60-s%60%20%20%0A%60--sig%60%20_signature_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20signature%20of%20the%20function%20you%20want%20to%20call%20in%20the%20contract%2C%20or%20raw%20calldata.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20%60run()%60%0A%0A%60--skip-simulation%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkips%20on-chain%20simulation.%0A%0A%60--skip%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSkip%20compilation%20of%20non-essential%20contract%20directories%20like%20test%20or%20script%20(usage%20%60--skip%20test%60).%0A%0A%60--non-interactive%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRemove%20interactive%20prompts%20which%20appear%20if%20the%20contract%20is%20near%20the%20%5BEIP-170%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-170)%20size%20limit.%0A%0A%60--slow%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BMakes%20sure%20a%20transaction%20is%20sent%2C%20only%20after%20its%20previous%20one%20has%20been%20confirmed%20and%20succeeded.%0A%0A%60--target-contract%60%20_contract_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20name%20of%20the%20contract%20you%20want%20to%20run.%0A%0A%60--priority-gas-price%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSets%20the%20priority%20gas%20price%20for%20EIP1559%20transactions.%20Useful%20for%20when%20gas%20prices%20are%20volatile%20and%20you%20want%20to%20get%20your%20transaction%20included.%0A%0A%60--with-gas-price%60%20_price_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSets%20the%20gas%20price%20for%20**broadcasted**%20legacy%20transactions%2C%20or%20the%20max%20fee%20for%20broadcasted%20EIP1559%20transactions.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNote%3A%20To%20set%20the%20gas%20price%20in%20the%20execution%20environment%20of%20the%20script%20use%20%60--gas-price%60%20instead%20(see%20below).%0A%0A%3CEtherscanOptions%20%2F%3E%0A%0A%23%23%23%23%20Verification%20Options%0A%0A%60--verify%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20it%20finds%20a%20matching%20broadcast%20log%2C%20it%20tries%20to%20verify%20every%20contract%20found%20in%20the%20receipts.%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%3CRetryOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%23%23%23%23%20Build%20Options%0A%0A%60--names%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20contract%20names.%0A%0A%60--sizes%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20compiled%20non-test%20contract%20sizes%2C%20exiting%20with%20code%201%20if%20any%20of%20them%20are%20above%20the%20size%20limit.%0A%0A%3CWatchOptions%20%2F%3E%0A%0A%3CMultiWalletOptions%20%2F%3E%0A%0A%3CEvmOptions%20%2F%3E%0A%0A%3CExecutorOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Run%20%60BroadcastTest%60%20as%20a%20script%2C%20broadcasting%20generated%20transactions%20on-chain%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20.%2Ftest%2FBroadcast.t.sol%20--tc%20BroadcastTest%20--sig%20%22deploy()%22%20%5C%0A%20%20%20%20%20%20%20-vvv%20--fork-url%20%24SEPOLIA_RPC_URL%0A%20%20%20%60%60%60%0A%0A2.%20Deploy%20a%20contract%20on%20Polygon%20%5Bsee%20the%20%60Scripting%20with%20Solidity%60%20guide%20for%20an%20example%20script%5D(%2Fguides%2Fscripting-with-solidity).%20_The%20verifier%20url%20is%20different%20for%20every%20network._%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20script%2FNFT.s.sol%3AMyScript%20--chain-id%20137%20--rpc-url%20%24RPC_URL%20%5C%0A%20%20%20%20%20%20%20--etherscan-api-key%20%24POLYGONSCAN_API_KEY%20--verifier-url%20https%3A%2F%2Fapi.polygonscan.com%2Fapi%20%5C%0A%20%20%20%20%20%20%20--broadcast%20--verify%20-vvvv%0A%20%20%20%60%60%60%0A%0A3.%20Resume%20a%20failed%20script.%20Using%20the%20above%20as%20an%20example%2C%20remove%20%60--broadcast%60%20add%20%60--resume%60%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20script%2FNFT.s.sol%3AMyScript%20--chain-id%20137%20--rpc-url%20%24RPC_URL%20%5C%0A%20%20%20%20%20%20%20--etherscan-api-key%20%24POLYGONSCAN_API_KEY%20--verifier-url%20https%3A%2F%2Fapi.polygonscan.com%2Fapi%20%5C%0A%20%20%20%20%20%20%20--verify%20-vvvv%20--resume%0A%20%20%20%60%60%60%0A%0A4.%20Verify%20contracts%20that%20were%20just%20deployed%20with%20a%20script%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20script%20script%2FNFT.s.sol%20--rpc-url%20%24RPC_URL%20--verify%20--resume%0A%20%20%20%60%60%60%0A%0A%5Bdebugger%5D%3A%20..%2F..%2Fforge%2Fdebugger.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-snapshot-B1Ewxgz-.js"),__vite__mapDeps([207,208,1,175,176,172,171,173,58,170])),path:"/forge/reference/forge-snapshot",type:"mdx",filePath:"forge/reference/forge-snapshot.mdx",content:"import%20TestOptions%20from%20%22.%2Ftest-options.mdx%22%3B%0Aimport%20EvmOptions%20from%20%22.%2Fevm-options.mdx%22%3B%0Aimport%20ExecutorOptions%20from%20%22.%2Fexecutor-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20snapshot%0A%0A%23%23%23%20NAME%0A%0Aforge-snapshot%20-%20Create%20a%20snapshot%20of%20each%20test's%20gas%20usage.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20snapshot%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20snapshot%20of%20each%20test's%20gas%20usage.%0A%0AThe%20results%20are%20written%20to%20a%20file%20named%20%60.gas-snapshot%60.%20You%20can%20change%20the%20name%20of%20the%20file%0Aby%20passing%20%60--snap%20%3CPATH%3E%60.%0A%0AFuzz%20tests%20are%20included%20by%20default%20in%20the%20snapshot.%20They%20use%20a%20static%20seed%20to%20achieve%20deterministic%20results.%0A%0ASnapshots%20can%20be%20compared%20with%20%60--diff%60%20and%20%60--check%60.%20The%20first%20flag%20will%20output%20a%20diff%2C%20and%20the%20second%0Awill%20output%20a%20diff%20_and_%20exit%20with%20code%201%20if%20the%20snapshots%20do%20not%20match.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Snapshot%20Options%0A%0A%60--asc%60%20%20%0ASort%20results%20by%20gas%20used%20(ascending).%0A%0A%60--desc%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSort%20results%20by%20gas%20used%20(descending).%0A%0A%60--min%60%20_min_gas_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20include%20tests%20that%20used%20more%20gas%20that%20the%20given%20amount.%0A%0A%60--max%60%20_max_gas_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20include%20tests%20that%20used%20less%20gas%20that%20the%20given%20amount.%0A%0A%60--tolerance%60%20_threshold_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BTolerates%20gas%20deviations%20up%20to%20the%20specified%20percentage%20(0-100).%0A%0A%60--diff%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20a%20diff%20against%20a%20pre-existing%20snapshot.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%20the%20comparison%20is%20done%20with%20%60.gas-snapshot%60.%0A%0A%60--check%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCompare%20against%20a%20pre-existing%20snapshot%2C%20exiting%20with%20code%201%20if%20they%20do%20not%20match.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutputs%20a%20diff%20if%20the%20snapshots%20do%20not%20match.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%20the%20comparison%20is%20done%20with%20%60.gas-snapshot%60.%0A%0A%60--snap%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20file%20for%20the%20snapshot.%20Default%3A%20%60.gas-snapshot%60.%0A%0A%3CTestOptions%20%2F%3E%0A%0A%3CEvmOptions%20%2F%3E%0A%0A%3CExecutorOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20snapshot%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20snapshot%0A%20%20%20%60%60%60%0A%0A2.%20Generate%20a%20diff%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20snapshot%20--diff%0A%20%20%20%60%60%60%0A%0A3.%20Check%20that%20the%20snapshots%20match%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20snapshot%20--check%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-snapshot-B1Ewxgz-.js"),__vite__mapDeps([207,208,1,175,176,172,171,173,58,170])),path:"/forge/reference/forge-snapshot.html",type:"mdx",filePath:"forge/reference/forge-snapshot.mdx",content:"import%20TestOptions%20from%20%22.%2Ftest-options.mdx%22%3B%0Aimport%20EvmOptions%20from%20%22.%2Fevm-options.mdx%22%3B%0Aimport%20ExecutorOptions%20from%20%22.%2Fexecutor-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20snapshot%0A%0A%23%23%23%20NAME%0A%0Aforge-snapshot%20-%20Create%20a%20snapshot%20of%20each%20test's%20gas%20usage.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20snapshot%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ACreate%20a%20snapshot%20of%20each%20test's%20gas%20usage.%0A%0AThe%20results%20are%20written%20to%20a%20file%20named%20%60.gas-snapshot%60.%20You%20can%20change%20the%20name%20of%20the%20file%0Aby%20passing%20%60--snap%20%3CPATH%3E%60.%0A%0AFuzz%20tests%20are%20included%20by%20default%20in%20the%20snapshot.%20They%20use%20a%20static%20seed%20to%20achieve%20deterministic%20results.%0A%0ASnapshots%20can%20be%20compared%20with%20%60--diff%60%20and%20%60--check%60.%20The%20first%20flag%20will%20output%20a%20diff%2C%20and%20the%20second%0Awill%20output%20a%20diff%20_and_%20exit%20with%20code%201%20if%20the%20snapshots%20do%20not%20match.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Snapshot%20Options%0A%0A%60--asc%60%20%20%0ASort%20results%20by%20gas%20used%20(ascending).%0A%0A%60--desc%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSort%20results%20by%20gas%20used%20(descending).%0A%0A%60--min%60%20_min_gas_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20include%20tests%20that%20used%20more%20gas%20that%20the%20given%20amount.%0A%0A%60--max%60%20_max_gas_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20include%20tests%20that%20used%20less%20gas%20that%20the%20given%20amount.%0A%0A%60--tolerance%60%20_threshold_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BTolerates%20gas%20deviations%20up%20to%20the%20specified%20percentage%20(0-100).%0A%0A%60--diff%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20a%20diff%20against%20a%20pre-existing%20snapshot.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%20the%20comparison%20is%20done%20with%20%60.gas-snapshot%60.%0A%0A%60--check%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCompare%20against%20a%20pre-existing%20snapshot%2C%20exiting%20with%20code%201%20if%20they%20do%20not%20match.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutputs%20a%20diff%20if%20the%20snapshots%20do%20not%20match.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%20the%20comparison%20is%20done%20with%20%60.gas-snapshot%60.%0A%0A%60--snap%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20file%20for%20the%20snapshot.%20Default%3A%20%60.gas-snapshot%60.%0A%0A%3CTestOptions%20%2F%3E%0A%0A%3CEvmOptions%20%2F%3E%0A%0A%3CExecutorOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20snapshot%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20snapshot%0A%20%20%20%60%60%60%0A%0A2.%20Generate%20a%20diff%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20snapshot%20--diff%0A%20%20%20%60%60%60%0A%0A3.%20Check%20that%20the%20snapshots%20match%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20snapshot%20--check%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-test-D3-1eRsi.js"),__vite__mapDeps([209,208,1,175,176,172,171,173,179,58,170])),path:"/forge/reference/forge-test",type:"mdx",filePath:"forge/reference/forge-test.mdx",content:"import%20TestOptions%20from%20%22.%2Ftest-options.mdx%22%3B%0Aimport%20EvmOptions%20from%20%22.%2Fevm-options.mdx%22%3B%0Aimport%20ExecutorOptions%20from%20%22.%2Fexecutor-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20WatchOptions%20from%20%22.%2Fwatch-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20test%0A%0A%23%23%23%20NAME%0A%0Aforge-test%20-%20Run%20the%20project's%20tests.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20test%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARun%20the%20project's%20tests.%0A%0A%23%23%23%23%20Forking%0A%0AIt%20is%20possible%20to%20run%20the%20tests%20in%20a%20forked%20environment%20by%20passing%20%60--fork-url%20%3CURL%3E%60.%0A%0AWhen%20the%20tests%20are%20running%20in%20a%20forked%20environment%2C%20you%20can%20access%20all%20the%20state%20of%20the%20forked%20chain%20as%20you%20would%0Aif%20you%20had%20deployed%20the%20contracts.%20%5BCheatcodes%5D%5Bcheatcodes%5D%20are%20still%20available.%0A%0AYou%20can%20also%20specify%20a%20block%20number%20to%20fork%20from%20by%20passing%20%60--fork-block-number%20%3CBLOCK%3E%60.%20When%20forking%20from%20a%0Aspecific%20block%2C%20the%20chain%20data%20is%20cached%20to%20%60~%2F.foundry%2Fcache%60.%20If%20you%20do%20not%20want%20to%20cache%20the%20chain%20data%2C%0Apass%20%60--no-storage-caching%60.%0A%0ATraces%20that%20cannot%20be%20decoded%20by%20local%20contracts%20when%20running%20in%20a%20forked%20environment%20(e.g.%20calls%20to%0Acontracts%20that%20live%20on%20mainnet%2C%20like%20tokens)%20can%20optionally%20be%20decoded%20using%20Etherscan.%20To%20use%20Etherscan%0Afor%20trace%20decoding%2C%20set%20%60ETHERSCAN_API_KEY%60%20or%20pass%20%60--etherscan-api-key%20%3CKEY%3E%60.%0A%0A%23%23%23%23%20Debugging%0A%0AIt%20is%20possible%20to%20run%20a%20test%20in%20an%20interactive%20debugger.%20To%20start%20the%20debugger%2C%20pass%20%60--debug%20%3CTEST%3E%60.%0A%0AIf%20multiple%20tests%20match%20the%20specified%20pattern%2C%20you%20must%20use%20other%20test%20filters%20in%20order%20to%20reduce%0Athe%20matching%20number%20of%20tests%20to%20exactly%201.%0A%0AIf%20the%20test%20is%20a%20unit%20test%2C%20it%20is%20immediately%20opened%20in%20the%20debugger.%0A%0AIf%20the%20test%20is%20a%20fuzz%20test%2C%20the%20fuzz%20test%20is%20run%20and%20the%20debugger%20is%20opened%20on%20the%20first%20failing%20scenario.%0AIf%20there%20are%20no%20failing%20scenarios%20for%20the%20fuzz%20test%2C%20the%20debugger%20is%20opened%20on%20the%20last%20scenario.%0A%0AMore%20information%20on%20the%20debugger%20can%20be%20found%20in%20the%20%5Bdebugger%20chapter%5D%5Bdebugger%5D.%0A%0A%23%23%23%23%20Gas%20reports%0A%0AYou%20can%20generate%20a%20gas%20report%20by%20passing%20%60--gas-report%60.%0A%0AMore%20information%20on%20gas%20reports%20can%20be%20found%20in%20the%20%5Bgas%20reports%20chapter%5D%5Bgas-reports%5D.%0A%0A%23%23%23%23%20List%0A%0AIt%20is%20possible%20to%20list%20the%20tests%20without%20running%20them.%0AYou%20can%20pass%20%60--json%60%20to%20make%20it%20easier%20for%20outside%20extensions%20to%20parse%20structured%20content.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CTestOptions%20%2F%3E%0A%0A%3CEvmOptions%20%2F%3E%0A%0A%3CExecutorOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CWatchOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%60--list%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BList%20tests%20instead%20of%20running%20them.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Run%20the%20tests%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%0A%20%20%20%60%60%60%0A%0A2.%20Open%20a%20test%20in%20the%20debugger%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--debug%20testSomething%0A%20%20%20%60%60%60%0A%0A3.%20Generate%20a%20gas%20report%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--gas-report%0A%20%20%20%60%60%60%0A%0A4.%20Only%20run%20tests%20in%20%60test%2FContract.t.sol%60%20in%20the%20%60BigTest%60%20contract%20that%20start%20with%20%60testRevert%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--match-path%20test%2FContract.t.sol%20--match-contract%20BigTest%20%5C%0A%20%20%20%20%20--match-test%20%22testRevert*%22%0A%20%20%20%60%60%60%0A%0A5.%20List%20tests%20in%20desired%20format%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--list%0A%20%20%20forge%20test%20--list%20--json%0A%20%20%20forge%20test%20--list%20--json%20--match-test%20%22testRevert*%22%20%7C%20tail%20-n%201%20%7C%20json_pp%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%2C%20%5Bforge%20snapshot%5D(%2Fforge%2Freference%2Fforge-snapshot.mdx)%2C%0A%0A%5Bdebugger%5D%3A%20%2Fforge%2Fdebugger%0A%5Bcheatcodes%5D%3A%20%2Freference%2Fcheatcodes%0A%5Bgas-reports%5D%3A%20%2Fforge%2Fgas-tracking%2Fgas-reports%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-test-D3-1eRsi.js"),__vite__mapDeps([209,208,1,175,176,172,171,173,179,58,170])),path:"/forge/reference/forge-test.html",type:"mdx",filePath:"forge/reference/forge-test.mdx",content:"import%20TestOptions%20from%20%22.%2Ftest-options.mdx%22%3B%0Aimport%20EvmOptions%20from%20%22.%2Fevm-options.mdx%22%3B%0Aimport%20ExecutorOptions%20from%20%22.%2Fexecutor-options.mdx%22%3B%0Aimport%20CoreBuildOptions%20from%20%22.%2Fcore-build-options.mdx%22%3B%0Aimport%20WatchOptions%20from%20%22.%2Fwatch-options.mdx%22%3B%0Aimport%20DisplayOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fdisplay-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20test%0A%0A%23%23%23%20NAME%0A%0Aforge-test%20-%20Run%20the%20project's%20tests.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20test%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ARun%20the%20project's%20tests.%0A%0A%23%23%23%23%20Forking%0A%0AIt%20is%20possible%20to%20run%20the%20tests%20in%20a%20forked%20environment%20by%20passing%20%60--fork-url%20%3CURL%3E%60.%0A%0AWhen%20the%20tests%20are%20running%20in%20a%20forked%20environment%2C%20you%20can%20access%20all%20the%20state%20of%20the%20forked%20chain%20as%20you%20would%0Aif%20you%20had%20deployed%20the%20contracts.%20%5BCheatcodes%5D%5Bcheatcodes%5D%20are%20still%20available.%0A%0AYou%20can%20also%20specify%20a%20block%20number%20to%20fork%20from%20by%20passing%20%60--fork-block-number%20%3CBLOCK%3E%60.%20When%20forking%20from%20a%0Aspecific%20block%2C%20the%20chain%20data%20is%20cached%20to%20%60~%2F.foundry%2Fcache%60.%20If%20you%20do%20not%20want%20to%20cache%20the%20chain%20data%2C%0Apass%20%60--no-storage-caching%60.%0A%0ATraces%20that%20cannot%20be%20decoded%20by%20local%20contracts%20when%20running%20in%20a%20forked%20environment%20(e.g.%20calls%20to%0Acontracts%20that%20live%20on%20mainnet%2C%20like%20tokens)%20can%20optionally%20be%20decoded%20using%20Etherscan.%20To%20use%20Etherscan%0Afor%20trace%20decoding%2C%20set%20%60ETHERSCAN_API_KEY%60%20or%20pass%20%60--etherscan-api-key%20%3CKEY%3E%60.%0A%0A%23%23%23%23%20Debugging%0A%0AIt%20is%20possible%20to%20run%20a%20test%20in%20an%20interactive%20debugger.%20To%20start%20the%20debugger%2C%20pass%20%60--debug%20%3CTEST%3E%60.%0A%0AIf%20multiple%20tests%20match%20the%20specified%20pattern%2C%20you%20must%20use%20other%20test%20filters%20in%20order%20to%20reduce%0Athe%20matching%20number%20of%20tests%20to%20exactly%201.%0A%0AIf%20the%20test%20is%20a%20unit%20test%2C%20it%20is%20immediately%20opened%20in%20the%20debugger.%0A%0AIf%20the%20test%20is%20a%20fuzz%20test%2C%20the%20fuzz%20test%20is%20run%20and%20the%20debugger%20is%20opened%20on%20the%20first%20failing%20scenario.%0AIf%20there%20are%20no%20failing%20scenarios%20for%20the%20fuzz%20test%2C%20the%20debugger%20is%20opened%20on%20the%20last%20scenario.%0A%0AMore%20information%20on%20the%20debugger%20can%20be%20found%20in%20the%20%5Bdebugger%20chapter%5D%5Bdebugger%5D.%0A%0A%23%23%23%23%20Gas%20reports%0A%0AYou%20can%20generate%20a%20gas%20report%20by%20passing%20%60--gas-report%60.%0A%0AMore%20information%20on%20gas%20reports%20can%20be%20found%20in%20the%20%5Bgas%20reports%20chapter%5D%5Bgas-reports%5D.%0A%0A%23%23%23%23%20List%0A%0AIt%20is%20possible%20to%20list%20the%20tests%20without%20running%20them.%0AYou%20can%20pass%20%60--json%60%20to%20make%20it%20easier%20for%20outside%20extensions%20to%20parse%20structured%20content.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CTestOptions%20%2F%3E%0A%0A%3CEvmOptions%20%2F%3E%0A%0A%3CExecutorOptions%20%2F%3E%0A%0A%3CCoreBuildOptions%20%2F%3E%0A%0A%3CWatchOptions%20%2F%3E%0A%0A%3CDisplayOptions%20%2F%3E%0A%0A%60--list%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BList%20tests%20instead%20of%20running%20them.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Run%20the%20tests%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%0A%20%20%20%60%60%60%0A%0A2.%20Open%20a%20test%20in%20the%20debugger%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--debug%20testSomething%0A%20%20%20%60%60%60%0A%0A3.%20Generate%20a%20gas%20report%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--gas-report%0A%20%20%20%60%60%60%0A%0A4.%20Only%20run%20tests%20in%20%60test%2FContract.t.sol%60%20in%20the%20%60BigTest%60%20contract%20that%20start%20with%20%60testRevert%60%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--match-path%20test%2FContract.t.sol%20--match-contract%20BigTest%20%5C%0A%20%20%20%20%20--match-test%20%22testRevert*%22%0A%20%20%20%60%60%60%0A%0A5.%20List%20tests%20in%20desired%20format%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%20--list%0A%20%20%20forge%20test%20--list%20--json%0A%20%20%20forge%20test%20--list%20--json%20--match-test%20%22testRevert*%22%20%7C%20tail%20-n%201%20%7C%20json_pp%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%2C%20%5Bforge%20snapshot%5D(%2Fforge%2Freference%2Fforge-snapshot.mdx)%2C%0A%0A%5Bdebugger%5D%3A%20%2Fforge%2Fdebugger%0A%5Bcheatcodes%5D%3A%20%2Freference%2Fcheatcodes%0A%5Bgas-reports%5D%3A%20%2Fforge%2Fgas-tracking%2Fgas-reports%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-tree-D69idRBX.js"),__vite__mapDeps([210,173,1,170])),path:"/forge/reference/forge-tree",type:"mdx",filePath:"forge/reference/forge-tree.mdx",content:"import%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20tree%0A%0A%23%23%23%20NAME%0A%0Aforge-tree%20-%20Display%20a%20tree%20visualization%20of%20the%20project's%20dependency%20graph.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20tree%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADisplay%20a%20visualization%20of%20the%20project's%20dependency%20graph.%0A%0A%60%60%60%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fforge_tree%2Fforge-tree%3Aall%5D%0A%60%60%60%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Flatten%20Options%0A%0A%60--charset%60%20_charset_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCharacter%20set%20to%20use%20in%20output%3A%20utf8%2C%20ascii.%20Default%3A%20utf8%0A%0A%60--no-dedupe%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20de-duplicate%20(repeats%20all%20shared%20dependencies)%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-tree-D69idRBX.js"),__vite__mapDeps([210,173,1,170])),path:"/forge/reference/forge-tree.html",type:"mdx",filePath:"forge/reference/forge-tree.mdx",content:"import%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20tree%0A%0A%23%23%23%20NAME%0A%0Aforge-tree%20-%20Display%20a%20tree%20visualization%20of%20the%20project's%20dependency%20graph.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20tree%60%20%5B*options*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0ADisplay%20a%20visualization%20of%20the%20project's%20dependency%20graph.%0A%0A%60%60%60%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fforge_tree%2Fforge-tree%3Aall%5D%0A%60%60%60%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Flatten%20Options%0A%0A%60--charset%60%20_charset_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCharacter%20set%20to%20use%20in%20output%3A%20utf8%2C%20ascii.%20Default%3A%20utf8%0A%0A%60--no-dedupe%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20de-duplicate%20(repeats%20all%20shared%20dependencies)%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-update-Dyx6eoSy.js"),__vite__mapDeps([211,170,1])),path:"/forge/reference/forge-update",type:"mdx",filePath:"forge/reference/forge-update.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20update%0A%0A%23%23%23%20NAME%0A%0Aforge-update%20-%20Update%20one%20or%20more%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20update%60%20%5B*options*%5D%20%5B*dep*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AUpdate%20one%20or%20more%20dependencies.%0A%0AThe%20argument%20_dep_%20is%20a%20path%20to%20the%20dependency%20you%20want%20to%20update.%0AForge%20will%20update%20to%20the%20latest%20version%20on%20the%20ref%20you%20specified%20for%20the%20dependency%20when%20you%20ran%20%5B%60forge%20install%60%5D(%2Fforge%2Freference%2Fforge-install.mdx).%0A%0AIf%20no%20argument%20is%20provided%2C%20then%20all%20dependencies%20are%20updated.%0A%0A%23%23%23%20Lockfile%0A%0APost%20%5Bfoundry%239522%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fpull%2F9522)%2C%20every%20%60install%60%2C%20%60update%60%20or%20%60remove%60%20syncs%20the%20lockfile%20(%60foundry.lock%60)%20which%20has%20been%20introduced%20to%20ensure%20that%20git%20submodules%20stay%20pinned%20to%20the%20tag%2Frevision%20that%20the%20user%20specified%20while%20installing%20the%20dependency.%0A%0AWithout%20the%20lockfile%20submodules%20pinned%20to%20a%20tag%2Frevision%20get%20silently%20updated%20to%20the%20master%2Fmain%20branch%20of%20the%20dependency.%20See%20%5Bfoundry%237225%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F7225)%0A%0AIf%20you%20wish%20to%20update%20your%20dependencies%20tag%2Frev%20you%20can%20do%20so%20using%3A%0A%0A%60%60%60sh%0A%23%20Update%20the%20tag%20of%20the%20dependency%0Aforge%20update%20owner%2Fdependency-name%40new-tag%0Aforge%20update%20owner%2Fdependency-name%40tag%3Dsome-tag%0A%0A%23%20Update%20the%20revision%20of%20the%20dependency%0Aforge%20update%20owner%2Fdependency-name%4001234abc%0Aforge%20update%20owner%2Fdependency-name%40rev%3D01234abc%0A%60%60%60%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Update%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20update%20lib%2Fsolmate%0A%20%20%20%60%60%60%0A%0A2.%20Update%20all%20dependencies%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20%23%20Note%3A%20Dependencies%20pinned%20to%20tags%2Frevs%20in%20%60foundry.lock%60%20will%20not%20be%20updated.%0A%20%20%20%23%20They%20must%20be%20overwritten%20explicitly.%0A%20%20%20forge%20update%0A%20%20%20%60%60%60%0A%0A3.%20Update%20the%20tag%2Frev%20of%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20%23%20Update%20the%20tag%20of%20the%20dependency%0A%20%20%20forge%20update%20owner%2Fdependency-name%40new-tag%0A%20%20%20forge%20update%20owner%2Fdependency-name%40tag%3Dsome-tag%0A%0A%20%20%20%23%20Update%20the%20revision%20of%20the%20dependency%0A%20%20%20forge%20update%20owner%2Fdependency-name%4001234abc%0A%20%20%20forge%20update%20owner%2Fdependency-name%40rev%3D01234abc%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%2C%20%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-update-Dyx6eoSy.js"),__vite__mapDeps([211,170,1])),path:"/forge/reference/forge-update.html",type:"mdx",filePath:"forge/reference/forge-update.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20update%0A%0A%23%23%23%20NAME%0A%0Aforge-update%20-%20Update%20one%20or%20more%20dependencies.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20update%60%20%5B*options*%5D%20%5B*dep*%5D%0A%0A%23%23%23%20DESCRIPTION%0A%0AUpdate%20one%20or%20more%20dependencies.%0A%0AThe%20argument%20_dep_%20is%20a%20path%20to%20the%20dependency%20you%20want%20to%20update.%0AForge%20will%20update%20to%20the%20latest%20version%20on%20the%20ref%20you%20specified%20for%20the%20dependency%20when%20you%20ran%20%5B%60forge%20install%60%5D(%2Fforge%2Freference%2Fforge-install.mdx).%0A%0AIf%20no%20argument%20is%20provided%2C%20then%20all%20dependencies%20are%20updated.%0A%0A%23%23%23%20Lockfile%0A%0APost%20%5Bfoundry%239522%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fpull%2F9522)%2C%20every%20%60install%60%2C%20%60update%60%20or%20%60remove%60%20syncs%20the%20lockfile%20(%60foundry.lock%60)%20which%20has%20been%20introduced%20to%20ensure%20that%20git%20submodules%20stay%20pinned%20to%20the%20tag%2Frevision%20that%20the%20user%20specified%20while%20installing%20the%20dependency.%0A%0AWithout%20the%20lockfile%20submodules%20pinned%20to%20a%20tag%2Frevision%20get%20silently%20updated%20to%20the%20master%2Fmain%20branch%20of%20the%20dependency.%20See%20%5Bfoundry%237225%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F7225)%0A%0AIf%20you%20wish%20to%20update%20your%20dependencies%20tag%2Frev%20you%20can%20do%20so%20using%3A%0A%0A%60%60%60sh%0A%23%20Update%20the%20tag%20of%20the%20dependency%0Aforge%20update%20owner%2Fdependency-name%40new-tag%0Aforge%20update%20owner%2Fdependency-name%40tag%3Dsome-tag%0A%0A%23%20Update%20the%20revision%20of%20the%20dependency%0Aforge%20update%20owner%2Fdependency-name%4001234abc%0Aforge%20update%20owner%2Fdependency-name%40rev%3D01234abc%0A%60%60%60%0A%0A%23%23%23%20OPTIONS%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Update%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20update%20lib%2Fsolmate%0A%20%20%20%60%60%60%0A%0A2.%20Update%20all%20dependencies%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20%23%20Note%3A%20Dependencies%20pinned%20to%20tags%2Frevs%20in%20%60foundry.lock%60%20will%20not%20be%20updated.%0A%20%20%20%23%20They%20must%20be%20overwritten%20explicitly.%0A%20%20%20forge%20update%0A%20%20%20%60%60%60%0A%0A3.%20Update%20the%20tag%2Frev%20of%20a%20dependency%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20%23%20Update%20the%20tag%20of%20the%20dependency%0A%20%20%20forge%20update%20owner%2Fdependency-name%40new-tag%0A%20%20%20forge%20update%20owner%2Fdependency-name%40tag%3Dsome-tag%0A%0A%20%20%20%23%20Update%20the%20revision%20of%20the%20dependency%0A%20%20%20forge%20update%20owner%2Fdependency-name%4001234abc%0A%20%20%20forge%20update%20owner%2Fdependency-name%40rev%3D01234abc%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%2C%20%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-upload-selectors-CsoyAtAK.js"),__vite__mapDeps([212,173,1,170])),path:"/forge/reference/forge-upload-selectors",type:"mdx",filePath:"forge/reference/forge-upload-selectors.mdx",content:"import%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20upload-selectors%0A%0A%23%23%23%20NAME%0A%0Aforge-upload-selectors%20-%20Uploads%20abi%20of%20given%20contract%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20function%20selector%20database.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20upload-selectors%60%20%5B*options*%5D%20_contract_%0A%0A%23%23%23%20DESCRIPTION%0A%0AUploads%20abi%20of%20given%20contract%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20function%20selector%20database.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Upload%20ABI%20to%20selector%20database%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20upload-selectors%20LinearVestingVault%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-upload-selectors-CsoyAtAK.js"),__vite__mapDeps([212,173,1,170])),path:"/forge/reference/forge-upload-selectors.html",type:"mdx",filePath:"forge/reference/forge-upload-selectors.mdx",content:"import%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20upload-selectors%0A%0A%23%23%23%20NAME%0A%0Aforge-upload-selectors%20-%20Uploads%20abi%20of%20given%20contract%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20function%20selector%20database.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20upload-selectors%60%20%5B*options*%5D%20_contract_%0A%0A%23%23%23%20DESCRIPTION%0A%0AUploads%20abi%20of%20given%20contract%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20function%20selector%20database.%0A%0A%23%23%23%20OPTIONS%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Upload%20ABI%20to%20selector%20database%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20upload-selectors%20LinearVestingVault%0A%20%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-verify-check-CfXhrxTv.js"),__vite__mapDeps([213,189,1,201,170])),path:"/forge/reference/forge-verify-check",type:"mdx",filePath:"forge/reference/forge-verify-check.mdx",content:"import%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20RetryOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fretry-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20verify-check%0A%0A%23%23%23%20NAME%0A%0Aforge-verify-check%20-%20Check%20verification%20status%20on%20a%20chosen%20verification%20provider.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20verify-check%60%20%5B*options*%5D%20_id_%20%5B*etherscan_key*%5D%0A%0AThe%20_id_%20is%20the%20verification%20identifier.%20For%20Etherscan%20%26%20Bloxroute%20-%20it%20is%20the%20submission%20GUID%2C%20for%20Sourcify%20-%20it's%20the%20contract%20address.%0A%0A%23%23%23%20DESCRIPTION%0A%0ACheck%20verification%20status%20on%20a%20chosen%20verification%20provider.%0A%0AFor%20Etherscan%2C%20you%20must%20provide%20an%20Etherscan%20API%20key%2C%20either%20by%20passing%20it%20as%20an%20argument%20or%20setting%20%60ETHERSCAN_API_KEY%60%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Verify%20Contract%20Options%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%60--chain-id%60%20_chain_id_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20chain%20ID%20the%20contract%20is%20deployed%20to%20(either%20a%20number%20or%20a%20chain%20name).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20mainnet%0A%0A%3CRetryOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%2C%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-verify-check-CfXhrxTv.js"),__vite__mapDeps([213,189,1,201,170])),path:"/forge/reference/forge-verify-check.html",type:"mdx",filePath:"forge/reference/forge-verify-check.mdx",content:"import%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20RetryOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fretry-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20verify-check%0A%0A%23%23%23%20NAME%0A%0Aforge-verify-check%20-%20Check%20verification%20status%20on%20a%20chosen%20verification%20provider.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20verify-check%60%20%5B*options*%5D%20_id_%20%5B*etherscan_key*%5D%0A%0AThe%20_id_%20is%20the%20verification%20identifier.%20For%20Etherscan%20%26%20Bloxroute%20-%20it%20is%20the%20submission%20GUID%2C%20for%20Sourcify%20-%20it's%20the%20contract%20address.%0A%0A%23%23%23%20DESCRIPTION%0A%0ACheck%20verification%20status%20on%20a%20chosen%20verification%20provider.%0A%0AFor%20Etherscan%2C%20you%20must%20provide%20an%20Etherscan%20API%20key%2C%20either%20by%20passing%20it%20as%20an%20argument%20or%20setting%20%60ETHERSCAN_API_KEY%60%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Verify%20Contract%20Options%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%60--chain-id%60%20_chain_id_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20chain%20ID%20the%20contract%20is%20deployed%20to%20(either%20a%20number%20or%20a%20chain%20name).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20mainnet%0A%0A%3CRetryOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%2C%20%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-verify-contract-z7_y3Cth.js"),__vite__mapDeps([214,189,1,201,173,170])),path:"/forge/reference/forge-verify-contract",type:"mdx",filePath:"forge/reference/forge-verify-contract.mdx",content:"import%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20RetryOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fretry-options.mdx%22%3B%0Aimport%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20verify-contract%0A%0A%23%23%23%20NAME%0A%0Aforge-verify-contract%20-%20Verify%20smart%20contracts%20on%20a%20chosen%20verification%20provider.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20verify-contract%60%20%5B*options*%5D%20_address_%20_contract_%0A%0A%23%23%23%20DESCRIPTION%0A%0AVerifies%20a%20smart%20contract%20on%20a%20chosen%20verification%20provider.%0A%0AYou%20must%20provide%3A%0A%0A-%20The%20contract%20address%0A-%20The%20contract%20name%20or%20the%20path%20to%20the%20contract%20(read%20below)%0A%0AIn%20case%20of%20Etherscan%20and%20similar%20explorers%20verification%20(including%20BscScan%2FBaseScan%2FPolygonscan)%2C%20you%20must%20also%20provide%3A%0A-%20Your%20%5BEtherscan%20API%20key%5D(https%3A%2F%2Fdocs.etherscan.io%2Fetherscan-v2)%2C%20either%20by%20passing%20it%20as%20an%20argument%20or%20setting%20%60ETHERSCAN_API_KEY%60%0A-%20Legacy%20keys%20from%20specific%20explorers%20(eg%20BscScan%2FBaseScan%2FPolygonscan)%20are%20no%20longer%20suported%20and%20will%20throw%20an%20Invalid%20API%20key%20error%0A%0ATo%20find%20the%20exact%20compiler%20version%2C%20run%20%60~%2F.svm%2Fx.y.z%2Fsolc-x.y.z%20--version%60%20and%20search%20for%20the%208%20hex%20digits%20in%20the%20version%20string%20%5Bhere%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions).%0A%0AThe%20path%20to%20the%20contract%20is%20in%20the%20format%20%60%3Cpath%3E%3A%3Ccontract%3E%60%2C%20e.g.%20%60src%2FContract.sol%3AContract%60.%0A%0ABy%20default%2C%20smart%20contracts%20are%20verified%20in%20a%20multi-file%20fashion.%20If%20you%20want%20to%20flatten%20the%20contract%20before%20verifying%2C%20pass%20%60--flatten%60.%0A%0AThis%20command%20will%20try%20to%20compile%20the%20source%20code%20of%20the%20flattened%20contract%20if%20%60--flatten%60%20is%20passed%20before%20verifying.%20If%20you%20do%20not%20want%20that%2C%20pass%20%60--force%60.%0A%0AYou%20can%20specify%20**ABI-encoded**%20constructor%20arguments%20with%20%60--constructor-args%60.%20Alternatively%2C%0Ayou%20can%20specify%20a%20file%20containing%20**space-separated**%20constructor%20arguments%20with%20%60--constructor-args-path%60.%0A(Note%20that%20%5Bcache%5D(%2Fconfig%2Freference%2Fproject)%20must%20be%20enabled%20in%20the%20config%20for%20the%20latter%20to%20work.)%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Verify%20Contract%20Options%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%60--skip-is-verified-check%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20the%20verification%20request%20even%20if%20the%20contract%20is%20already%20verified.%0A%0A%60--compiler-version%60%20_version_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20compiler%20version%20used%20to%20build%20the%20smart%20contract.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BTo%20find%20the%20exact%20compiler%20version%2C%20run%20%60~%2F.svm%2Fx.y.z%2Fsolc-x.y.z%20--version%60%20where%20%60x%60%20and%0A%60y%60%20are%20major%20and%20minor%20version%20numbers%20respectively%2C%20then%20search%20for%20the%208%20hex%20digits%20in%20the%20version%20string%20%5Bhere%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions).%0A%0A%60--num-of-optimizations%60%20_num_%20%20%0A%60--optimizer-runs%60%20_num_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20number%20of%20optimization%20runs%20used%20to%20build%20the%20smart%20contract.%0A%0A%60--constructor-args%60%20_args_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20ABI-encoded%20constructor%20arguments.%20Conflicts%20with%20%60--constructor-args-path%60.%0A%0A%60--constructor-args-path%60%20_file_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20a%20file%20containing%20the%20constructor%20arguments.%20Conflicts%20with%20%60--constructor-args%60.%0A%0A%60--chain-id%60%20_chain_%20%20%0A%60--chain%60%20_chain_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20ID%20or%20name%20of%20the%20chain%20the%20contract%20is%20deployed%20to.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20mainnet%0A%0A%60--flatten%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFlag%20indicating%20whether%20to%20flatten%20the%20source%20code%20before%20verifying.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20this%20flag%20is%20not%20provided%2C%20the%20JSON%20standard%20input%20will%20be%20used%20instead.%0A%0A%60-f%60%20%20%0A%60--force%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20compile%20the%20flattened%20smart%20contract%20before%20verifying.%0A%0A%3CRetryOptions%20%2F%3E%0A%0A%60--show-standard-json-input%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCommand%20outputs%20JSON%20suitable%20for%20saving%20to%20a%20file%20and%20uploading%20to%20block%20explorers%20for%20verification.%0A%0A%60--watch%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWait%20for%20verification%20result%20after%20submission.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAutomatically%20runs%20%60forge%20verify-check%60%20until%20the%20verification%20either%20fails%20or%20succeeds.%0A%0A%60--via-ir%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSet%20%60viaIR%60%20to%20true.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20you%20compiled%20using%20%60--via-ir%60%20when%20deploying%2C%20pass%20it%20here%20too%20in%20order%20to%20prevent%20a%20bytecode%20mismatch.%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Verify%20a%20contract%20on%20Etherscan%0A%20%20%20%20%60%60%60sh%0A%20%20%20%20forge%20verify-contract%20--watch%20--chain%20sepolia%200x324eca20b358b18e48f2611f7452560ce3b3c1bb%20src%2FGmWorld.sol%3AGmWorld%20--verifier%20etherscan%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%20%0A2.%20Deploy%20and%20verify%20a%20contract%20on%20Etherscan%0A%20%20%20%20%60%60%60sh%0A%20%20%20%20%20forge%20create%20--broadcast%20--rpc-url%20https%3A%2F%2Frpc.sepolia.ethpandaops.io%20--private-key%20YourPrivateKey%20src%2FGmWorld.sol%3AGmWorld%20--verify%20--verifier%20etherscan%20--etherscan-api-key%20YourApiKeyToken%0A%0A3.%20Verify%20a%20contract%20on%20a%20custom%20Sourcify%20instance%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%20--verifier%20sourcify%20%5C%0A%20%20%20%20%20--verifier-url%20http%3A%2F%2Flocalhost%3A5000%20%3Caddress%3E%20SomeContract%0A%20%20%20%60%60%60%0A%0A4.%20Verify%20a%20flattened%20contract%20built%20with%20solc%20v0.8.11%2Bcommit.d7f03943%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%20--flatten%20--watch%20--compiler-version%20%22v0.8.11%2Bcommit.d7f03943%22%20%5C%0A%20%20%20%20%20--constructor-args%20%24(cast%20abi-encode%20%22constructor(string%2Cstring%2Cuint256%2Cuint256)%22%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000)%20%5C%0A%20%20%20%20%20%3Caddress%3E%20MyToken%0A%20%20%20%60%60%60%0A%0A5.%20Verify%20a%20flattened%20contract%20by%20specifying%20constructor%20arguments%20in%20a%20file%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%20--flatten%20--watch%20--compiler-version%20%22v0.8.11%2Bcommit.d7f03943%22%20%5C%0A%20%20%20%20%20--constructor-args-path%20constructor-args.txt%20%3Caddress%3E%20src%2FToken.sol%3AMyToken%0A%20%20%20%60%60%60%0A%20%20%20where%20%60constructor-args.txt%60%20contains%20the%20following%20content%3A%0A%20%20%20%60%60%60text%0A%20%20%20ForgeUSD%20FUSD%2018%201000000000000000000000%0A%20%20%20%60%60%60%0A6.%20Verify%20a%20contract%20with%20Blockscout%20right%20after%20deployment%20(make%20sure%20you%20add%20%22%2Fapi%3F%22%20to%20the%20end%20of%20the%20Blockscout%20homepage%20explorer%20URL)%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20--rpc-url%20%3Crpc_https_endpoint%3E%20--private-key%20%24devTestnetPrivateKey%20src%2FContract.sol%3ASimpleStorage%20--verify%20--verifier%20blockscout%20--verifier-url%20%3Cblockscout_homepage_explorer_url%3E%2Fapi%3F%0A%20%20%20%60%60%60%0A%0A7.%20verify%20a%20contract%20with%20Oklink%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%200x8CDDE82cFB4555D6ca21B5b28F97630265DA94c4%20Counter%20--verifier%20oklink%20--verifier-url%20https%3A%2F%2Fwww.oklink.com%2Fapi%2Fv5%2Fexplorer%2Fcontract%2Fverify-source-code-plugin%2FXLAYER%20%20--api-key%20%24OKLINK_API_KEY%0A%20%20%20%60%60%60%0A8.%20verify%20a%20contract%20with%20Oklink%20while%20deploying%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20Counter%20--rpc-url%20%3Crpc_https_endpoint%3E%20--verify%20--verifier%20oklink%20--verifier-url%20https%3A%2F%2Fwww.oklink.com%2Fapi%2Fv5%2Fexplorer%2Fcontract%2Fverify-source-code-plugin%2FXLAYER%20--etherscan-api-key%20%24OKLINK_API_KEY%20--private-key%20%24PRIVATE_KEY%20--legacy%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%2C%20%5Bforge%20flatten%5D(%2Fforge%2Freference%2Fforge-flatten.mdx)%2C%20%5Bforge%20verify-check%5D(%2Fforge%2Freference%2Fforge-verify-check.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-verify-contract-z7_y3Cth.js"),__vite__mapDeps([214,189,1,201,173,170])),path:"/forge/reference/forge-verify-contract.html",type:"mdx",filePath:"forge/reference/forge-verify-contract.mdx",content:"import%20VerifierOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fverifier-options.mdx%22%3B%0Aimport%20RetryOptions%20from%20%22..%2F..%2Freference%2Fcommon%2Fretry-options.mdx%22%3B%0Aimport%20ProjectOptions%20from%20%22.%2Fproject-options.mdx%22%3B%0Aimport%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%20verify-contract%0A%0A%23%23%23%20NAME%0A%0Aforge-verify-contract%20-%20Verify%20smart%20contracts%20on%20a%20chosen%20verification%20provider.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%20verify-contract%60%20%5B*options*%5D%20_address_%20_contract_%0A%0A%23%23%23%20DESCRIPTION%0A%0AVerifies%20a%20smart%20contract%20on%20a%20chosen%20verification%20provider.%0A%0AYou%20must%20provide%3A%0A%0A-%20The%20contract%20address%0A-%20The%20contract%20name%20or%20the%20path%20to%20the%20contract%20(read%20below)%0A%0AIn%20case%20of%20Etherscan%20and%20similar%20explorers%20verification%20(including%20BscScan%2FBaseScan%2FPolygonscan)%2C%20you%20must%20also%20provide%3A%0A-%20Your%20%5BEtherscan%20API%20key%5D(https%3A%2F%2Fdocs.etherscan.io%2Fetherscan-v2)%2C%20either%20by%20passing%20it%20as%20an%20argument%20or%20setting%20%60ETHERSCAN_API_KEY%60%0A-%20Legacy%20keys%20from%20specific%20explorers%20(eg%20BscScan%2FBaseScan%2FPolygonscan)%20are%20no%20longer%20suported%20and%20will%20throw%20an%20Invalid%20API%20key%20error%0A%0ATo%20find%20the%20exact%20compiler%20version%2C%20run%20%60~%2F.svm%2Fx.y.z%2Fsolc-x.y.z%20--version%60%20and%20search%20for%20the%208%20hex%20digits%20in%20the%20version%20string%20%5Bhere%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions).%0A%0AThe%20path%20to%20the%20contract%20is%20in%20the%20format%20%60%3Cpath%3E%3A%3Ccontract%3E%60%2C%20e.g.%20%60src%2FContract.sol%3AContract%60.%0A%0ABy%20default%2C%20smart%20contracts%20are%20verified%20in%20a%20multi-file%20fashion.%20If%20you%20want%20to%20flatten%20the%20contract%20before%20verifying%2C%20pass%20%60--flatten%60.%0A%0AThis%20command%20will%20try%20to%20compile%20the%20source%20code%20of%20the%20flattened%20contract%20if%20%60--flatten%60%20is%20passed%20before%20verifying.%20If%20you%20do%20not%20want%20that%2C%20pass%20%60--force%60.%0A%0AYou%20can%20specify%20**ABI-encoded**%20constructor%20arguments%20with%20%60--constructor-args%60.%20Alternatively%2C%0Ayou%20can%20specify%20a%20file%20containing%20**space-separated**%20constructor%20arguments%20with%20%60--constructor-args-path%60.%0A(Note%20that%20%5Bcache%5D(%2Fconfig%2Freference%2Fproject)%20must%20be%20enabled%20in%20the%20config%20for%20the%20latter%20to%20work.)%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Verify%20Contract%20Options%0A%0A%3CVerifierOptions%20%2F%3E%0A%0A%60--skip-is-verified-check%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20the%20verification%20request%20even%20if%20the%20contract%20is%20already%20verified.%0A%0A%60--compiler-version%60%20_version_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20compiler%20version%20used%20to%20build%20the%20smart%20contract.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BTo%20find%20the%20exact%20compiler%20version%2C%20run%20%60~%2F.svm%2Fx.y.z%2Fsolc-x.y.z%20--version%60%20where%20%60x%60%20and%0A%60y%60%20are%20major%20and%20minor%20version%20numbers%20respectively%2C%20then%20search%20for%20the%208%20hex%20digits%20in%20the%20version%20string%20%5Bhere%5D(https%3A%2F%2Fetherscan.io%2Fsolcversions).%0A%0A%60--num-of-optimizations%60%20_num_%20%20%0A%60--optimizer-runs%60%20_num_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20number%20of%20optimization%20runs%20used%20to%20build%20the%20smart%20contract.%0A%0A%60--constructor-args%60%20_args_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20ABI-encoded%20constructor%20arguments.%20Conflicts%20with%20%60--constructor-args-path%60.%0A%0A%60--constructor-args-path%60%20_file_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20a%20file%20containing%20the%20constructor%20arguments.%20Conflicts%20with%20%60--constructor-args%60.%0A%0A%60--chain-id%60%20_chain_%20%20%0A%60--chain%60%20_chain_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20ID%20or%20name%20of%20the%20chain%20the%20contract%20is%20deployed%20to.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%20mainnet%0A%0A%60--flatten%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFlag%20indicating%20whether%20to%20flatten%20the%20source%20code%20before%20verifying.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20this%20flag%20is%20not%20provided%2C%20the%20JSON%20standard%20input%20will%20be%20used%20instead.%0A%0A%60-f%60%20%20%0A%60--force%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20compile%20the%20flattened%20smart%20contract%20before%20verifying.%0A%0A%3CRetryOptions%20%2F%3E%0A%0A%60--show-standard-json-input%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCommand%20outputs%20JSON%20suitable%20for%20saving%20to%20a%20file%20and%20uploading%20to%20block%20explorers%20for%20verification.%0A%0A%60--watch%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWait%20for%20verification%20result%20after%20submission.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BAutomatically%20runs%20%60forge%20verify-check%60%20until%20the%20verification%20either%20fails%20or%20succeeds.%0A%0A%60--via-ir%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSet%20%60viaIR%60%20to%20true.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20you%20compiled%20using%20%60--via-ir%60%20when%20deploying%2C%20pass%20it%20here%20too%20in%20order%20to%20prevent%20a%20bytecode%20mismatch.%0A%0A%3CProjectOptions%20%2F%3E%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Verify%20a%20contract%20on%20Etherscan%0A%20%20%20%20%60%60%60sh%0A%20%20%20%20forge%20verify-contract%20--watch%20--chain%20sepolia%200x324eca20b358b18e48f2611f7452560ce3b3c1bb%20src%2FGmWorld.sol%3AGmWorld%20--verifier%20etherscan%20--etherscan-api-key%20YourApiKeyToken%0A%20%20%20%20%0A2.%20Deploy%20and%20verify%20a%20contract%20on%20Etherscan%0A%20%20%20%20%60%60%60sh%0A%20%20%20%20%20forge%20create%20--broadcast%20--rpc-url%20https%3A%2F%2Frpc.sepolia.ethpandaops.io%20--private-key%20YourPrivateKey%20src%2FGmWorld.sol%3AGmWorld%20--verify%20--verifier%20etherscan%20--etherscan-api-key%20YourApiKeyToken%0A%0A3.%20Verify%20a%20contract%20on%20a%20custom%20Sourcify%20instance%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%20--verifier%20sourcify%20%5C%0A%20%20%20%20%20--verifier-url%20http%3A%2F%2Flocalhost%3A5000%20%3Caddress%3E%20SomeContract%0A%20%20%20%60%60%60%0A%0A4.%20Verify%20a%20flattened%20contract%20built%20with%20solc%20v0.8.11%2Bcommit.d7f03943%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%20--flatten%20--watch%20--compiler-version%20%22v0.8.11%2Bcommit.d7f03943%22%20%5C%0A%20%20%20%20%20--constructor-args%20%24(cast%20abi-encode%20%22constructor(string%2Cstring%2Cuint256%2Cuint256)%22%20%22ForgeUSD%22%20%22FUSD%22%2018%201000000000000000000000)%20%5C%0A%20%20%20%20%20%3Caddress%3E%20MyToken%0A%20%20%20%60%60%60%0A%0A5.%20Verify%20a%20flattened%20contract%20by%20specifying%20constructor%20arguments%20in%20a%20file%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%20--flatten%20--watch%20--compiler-version%20%22v0.8.11%2Bcommit.d7f03943%22%20%5C%0A%20%20%20%20%20--constructor-args-path%20constructor-args.txt%20%3Caddress%3E%20src%2FToken.sol%3AMyToken%0A%20%20%20%60%60%60%0A%20%20%20where%20%60constructor-args.txt%60%20contains%20the%20following%20content%3A%0A%20%20%20%60%60%60text%0A%20%20%20ForgeUSD%20FUSD%2018%201000000000000000000000%0A%20%20%20%60%60%60%0A6.%20Verify%20a%20contract%20with%20Blockscout%20right%20after%20deployment%20(make%20sure%20you%20add%20%22%2Fapi%3F%22%20to%20the%20end%20of%20the%20Blockscout%20homepage%20explorer%20URL)%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20--rpc-url%20%3Crpc_https_endpoint%3E%20--private-key%20%24devTestnetPrivateKey%20src%2FContract.sol%3ASimpleStorage%20--verify%20--verifier%20blockscout%20--verifier-url%20%3Cblockscout_homepage_explorer_url%3E%2Fapi%3F%0A%20%20%20%60%60%60%0A%0A7.%20verify%20a%20contract%20with%20Oklink%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20verify-contract%200x8CDDE82cFB4555D6ca21B5b28F97630265DA94c4%20Counter%20--verifier%20oklink%20--verifier-url%20https%3A%2F%2Fwww.oklink.com%2Fapi%2Fv5%2Fexplorer%2Fcontract%2Fverify-source-code-plugin%2FXLAYER%20%20--api-key%20%24OKLINK_API_KEY%0A%20%20%20%60%60%60%0A8.%20verify%20a%20contract%20with%20Oklink%20while%20deploying%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20create%20Counter%20--rpc-url%20%3Crpc_https_endpoint%3E%20--verify%20--verifier%20oklink%20--verifier-url%20https%3A%2F%2Fwww.oklink.com%2Fapi%2Fv5%2Fexplorer%2Fcontract%2Fverify-source-code-plugin%2FXLAYER%20--etherscan-api-key%20%24OKLINK_API_KEY%20--private-key%20%24PRIVATE_KEY%20--legacy%0A%20%20%20%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bforge%5D(%2Fforge%2Freference%2Foverview)%2C%20%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%2C%20%5Bforge%20flatten%5D(%2Fforge%2Freference%2Fforge-flatten.mdx)%2C%20%5Bforge%20verify-check%5D(%2Fforge%2Freference%2Fforge-verify-check.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./general-commands-DoCrkbCw.js"),__vite__mapDeps([215,1])),path:"/forge/reference/general-commands",type:"mdx",filePath:"forge/reference/general-commands.mdx",content:"%23%23%20General%20Commands%0A%0A-%20%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A-%20%5Bforge%20help%5D(%2Fforge%2Freference%2Fforge-help.mdx)%0A-%20%5Bforge%20completions%5D(%2Fforge%2Freference%2Fforge-completions.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./general-commands-DoCrkbCw.js"),__vite__mapDeps([215,1])),path:"/forge/reference/general-commands.html",type:"mdx",filePath:"forge/reference/general-commands.mdx",content:"%23%23%20General%20Commands%0A%0A-%20%5Bforge%5D(%2Fforge%2Freference%2Foverview)%0A-%20%5Bforge%20help%5D(%2Fforge%2Freference%2Fforge-help.mdx)%0A-%20%5Bforge%20completions%5D(%2Fforge%2Freference%2Fforge-completions.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CB0eHgN2.js"),__vite__mapDeps([216,170,1])),path:"/forge/reference/overview",type:"mdx",filePath:"forge/reference/overview.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%0A%0A%23%23%23%20NAME%0A%0Aforge%20-%20Build%2C%20test%2C%20fuzz%2C%20debug%20and%20deploy%20Solidity%20contracts.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%20%20%0A%60forge%60%20%5B*options*%5D%20%60--version%60%20%20%0A%60forge%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20build%2C%20test%2C%20fuzz%2C%20debug%20and%20deploy%20Solidity%20smart%20contracts.%0A%0A%23%23%23%20COMMANDS%0A%0A%23%23%23%23%20General%20Commands%0A%0A%5Bforge%20help%5D(%2Fforge%2Freference%2Fforge-help.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20help%20information%20about%20Forge.%0A%0A%5Bforge%20completions%5D(%2Fforge%2Freference%2Fforge-completions.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20shell%20autocompletions%20for%20Forge.%0A%0A%23%23%23%23%20Project%20Commands%0A%0A%5Bforge%20init%5D(%2Fforge%2Freference%2Fforge-init.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20new%20Forge%20project.%0A%0A%5Bforge%20clone%5D(%2Fforge%2Freference%2Fforge-clone.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BClone%20a%20on-chain%20verified%20contract%20as%20a%20Forge%20project.%0A%0A%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInstall%20one%20or%20multiple%20dependencies.%0A%0A%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUpdate%20one%20or%20multiple%20dependencies.%0A%0A%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRemove%20one%20or%20multiple%20dependencies.%0A%0A%5Bforge%20config%5D(%2Fforge%2Freference%2Fforge-config.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20the%20current%20config.%0A%0A%5Bforge%20remappings%5D(%2Fforge%2Freference%2Fforge-remappings.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20automatically%20inferred%20remappings%20for%20this%20project.%0A%0A%5Bforge%20tree%5D(%2Fforge%2Freference%2Fforge-tree.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20a%20tree%20visualization%20of%20the%20project's%20dependency%20graph.%0A%0A%5Bforge%20geiger%5D(%2Fforge%2Freference%2Fforge-geiger.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDetects%20usage%20of%20unsafe%20cheat%20codes%20in%20a%20foundry%20project%20and%20its%20dependencies.%0A%0A%23%23%23%23%20Build%20Commands%0A%0A%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBuild%20the%20project's%20smart%20contracts.%0A%0A%5Bforge%20clean%5D(%2Fforge%2Freference%2Fforge-clean.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRemove%20the%20build%20artifacts%20and%20cache%20directories.%0A%0A%5Bforge%20inspect%5D(%2Fforge%2Freference%2Fforge-inspect.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20specialized%20information%20about%20a%20smart%20contract.%0A%0A%23%23%23%23%20Test%20Commands%0A%0A%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20the%20project's%20tests.%0A%0A%5Bforge%20snapshot%5D(%2Fforge%2Freference%2Fforge-snapshot.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20snapshot%20of%20each%20test's%20gas%20usage.%0A%0A%5Bforge%20coverage%5D(%2Fforge%2Freference%2Fforge-coverage.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20coverage%20reports.%0A%0A%23%23%23%23%20Deploy%20Commands%0A%0A%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDeploy%20a%20smart%20contract.%0A%0A%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20smart%20contracts%20on%20Etherscan.%0A%0A%5Bforge%20verify-check%5D(%2Fforge%2Freference%2Fforge-verify-check.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCheck%20verification%20status%20on%20Etherscan.%0A%0A%5Bforge%20flatten%5D(%2Fforge%2Freference%2Fforge-flatten.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFlatten%20a%20source%20file%20and%20all%20of%20its%20imports%20into%20one%20file.%0A%0A%23%23%23%23%20Utility%20Commands%0A%0A%5Bforge%20bind%5D(%2Fforge%2Freference%2Fforge-bind.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20Rust%20bindings%20for%20smart%20contracts.%0A%0A%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BManage%20the%20Foundry%20cache.%0A%0A%5Bforge%20cache%20clean%5D(%2Fforge%2Freference%2Fforge-cache-clean.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCleans%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%5Bforge%20cache%20ls%5D(%2Fforge%2Freference%2Fforge-cache-ls.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BShows%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%5Bforge%20script%5D(%2Fforge%2Freference%2Fforge-script.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20a%20smart%20contract%20as%20a%20script%2C%20building%20transactions%20that%20can%20be%20sent%20onchain.%0A%0A%5Bforge%20upload-selectors%5D(%2Fforge%2Freference%2Fforge-upload-selectors.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUploads%20abi%20of%20given%20contract%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20function%20selector%20database.%0A%0A%5Bforge%20doc%5D(%2Fforge%2Freference%2Fforge-doc.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20documentation%20for%20Solidity%20source%20files.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%20%20%0A%60--version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20FILES%0A%0A%60~%2F.foundry%2F%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%20location%20for%20Foundry's%20%22home%22%20directory%20where%20it%20stores%20various%20files.%0A%0A%60~%2F.foundry%2Fbin%2F%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBinaries%20installed%20using%20%60foundryup%60%20will%20be%20located%20here.%0A%0A%60~%2F.foundry%2Fcache%2F%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BForge's%20cache%20directory%2C%20where%20it%20stores%20cached%20block%20data%20and%20more.%0A%0A%60~%2F.foundry%2Ffoundry.toml%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20global%20%5BFoundry%20config%5D(%2Fconfig%2Freference%2Foverview.mdx).%0A%0A%60~%2F.svm%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20location%20of%20the%20Forge-managed%20solc%20binaries.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20Forge%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20hello_foundry%0A%20%20%20%60%60%60%0A%0A2.%20Build%20a%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%0A%20%20%20%60%60%60%0A%0A3.%20Run%20a%20project's%20tests%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%0A%20%20%20%60%60%60%0A%0A%23%23%23%20BUGS%0A%0ASee%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%20for%20issues.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-CB0eHgN2.js"),__vite__mapDeps([216,170,1])),path:"/forge/reference/overview.html",type:"mdx",filePath:"forge/reference/overview.mdx",content:"import%20CommonOptions%20from%20%22.%2Fcommon-options.mdx%22%3B%0A%0A%23%23%20forge%0A%0A%23%23%23%20NAME%0A%0Aforge%20-%20Build%2C%20test%2C%20fuzz%2C%20debug%20and%20deploy%20Solidity%20contracts.%0A%0A%23%23%23%20SYNOPSIS%0A%0A%60forge%60%20%5B*options*%5D%20_command_%20%5B*args*%5D%20%20%0A%60forge%60%20%5B*options*%5D%20%60--version%60%20%20%0A%60forge%60%20%5B*options*%5D%20%60--help%60%0A%0A%23%23%23%20DESCRIPTION%0A%0AThis%20program%20is%20a%20set%20of%20tools%20to%20build%2C%20test%2C%20fuzz%2C%20debug%20and%20deploy%20Solidity%20smart%20contracts.%0A%0A%23%23%23%20COMMANDS%0A%0A%23%23%23%23%20General%20Commands%0A%0A%5Bforge%20help%5D(%2Fforge%2Freference%2Fforge-help.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20help%20information%20about%20Forge.%0A%0A%5Bforge%20completions%5D(%2Fforge%2Freference%2Fforge-completions.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20shell%20autocompletions%20for%20Forge.%0A%0A%23%23%23%23%20Project%20Commands%0A%0A%5Bforge%20init%5D(%2Fforge%2Freference%2Fforge-init.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20new%20Forge%20project.%0A%0A%5Bforge%20clone%5D(%2Fforge%2Freference%2Fforge-clone.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BClone%20a%20on-chain%20verified%20contract%20as%20a%20Forge%20project.%0A%0A%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BInstall%20one%20or%20multiple%20dependencies.%0A%0A%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUpdate%20one%20or%20multiple%20dependencies.%0A%0A%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRemove%20one%20or%20multiple%20dependencies.%0A%0A%5Bforge%20config%5D(%2Fforge%2Freference%2Fforge-config.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20the%20current%20config.%0A%0A%5Bforge%20remappings%5D(%2Fforge%2Freference%2Fforge-remappings.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20the%20automatically%20inferred%20remappings%20for%20this%20project.%0A%0A%5Bforge%20tree%5D(%2Fforge%2Freference%2Fforge-tree.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDisplay%20a%20tree%20visualization%20of%20the%20project's%20dependency%20graph.%0A%0A%5Bforge%20geiger%5D(%2Fforge%2Freference%2Fforge-geiger.mdx)%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDetects%20usage%20of%20unsafe%20cheat%20codes%20in%20a%20foundry%20project%20and%20its%20dependencies.%0A%0A%23%23%23%23%20Build%20Commands%0A%0A%5Bforge%20build%5D(%2Fforge%2Freference%2Fforge-build.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBuild%20the%20project's%20smart%20contracts.%0A%0A%5Bforge%20clean%5D(%2Fforge%2Freference%2Fforge-clean.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRemove%20the%20build%20artifacts%20and%20cache%20directories.%0A%0A%5Bforge%20inspect%5D(%2Fforge%2Freference%2Fforge-inspect.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGet%20specialized%20information%20about%20a%20smart%20contract.%0A%0A%23%23%23%23%20Test%20Commands%0A%0A%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20the%20project's%20tests.%0A%0A%5Bforge%20snapshot%5D(%2Fforge%2Freference%2Fforge-snapshot.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCreate%20a%20snapshot%20of%20each%20test's%20gas%20usage.%0A%0A%5Bforge%20coverage%5D(%2Fforge%2Freference%2Fforge-coverage.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20coverage%20reports.%0A%0A%23%23%23%23%20Deploy%20Commands%0A%0A%5Bforge%20create%5D(%2Fforge%2Freference%2Fforge-create.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDeploy%20a%20smart%20contract.%0A%0A%5Bforge%20verify-contract%5D(%2Fforge%2Freference%2Fforge-verify-contract.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BVerify%20smart%20contracts%20on%20Etherscan.%0A%0A%5Bforge%20verify-check%5D(%2Fforge%2Freference%2Fforge-verify-check.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCheck%20verification%20status%20on%20Etherscan.%0A%0A%5Bforge%20flatten%5D(%2Fforge%2Freference%2Fforge-flatten.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFlatten%20a%20source%20file%20and%20all%20of%20its%20imports%20into%20one%20file.%0A%0A%23%23%23%23%20Utility%20Commands%0A%0A%5Bforge%20bind%5D(%2Fforge%2Freference%2Fforge-bind.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20Rust%20bindings%20for%20smart%20contracts.%0A%0A%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BManage%20the%20Foundry%20cache.%0A%0A%5Bforge%20cache%20clean%5D(%2Fforge%2Freference%2Fforge-cache-clean.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BCleans%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%5Bforge%20cache%20ls%5D(%2Fforge%2Freference%2Fforge-cache-ls.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BShows%20cached%20data%20from%20%60~%2F.foundry%60.%0A%0A%5Bforge%20script%5D(%2Fforge%2Freference%2Fforge-script.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20a%20smart%20contract%20as%20a%20script%2C%20building%20transactions%20that%20can%20be%20sent%20onchain.%0A%0A%5Bforge%20upload-selectors%5D(%2Fforge%2Freference%2Fforge-upload-selectors.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUploads%20abi%20of%20given%20contract%20to%20https%3A%2F%2Fopenchain.xyz%2Fsignatures%20function%20selector%20database.%0A%0A%5Bforge%20doc%5D(%2Fforge%2Freference%2Fforge-doc.mdx)%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20documentation%20for%20Solidity%20source%20files.%0A%0A%23%23%23%20OPTIONS%0A%0A%23%23%23%23%20Special%20Options%0A%0A%60-V%60%20%20%0A%60--version%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20version%20info%20and%20exit.%0A%0A%3CCommonOptions%20%2F%3E%0A%0A%23%23%23%20FILES%0A%0A%60~%2F.foundry%2F%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%20location%20for%20Foundry's%20%22home%22%20directory%20where%20it%20stores%20various%20files.%0A%0A%60~%2F.foundry%2Fbin%2F%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBinaries%20installed%20using%20%60foundryup%60%20will%20be%20located%20here.%0A%0A%60~%2F.foundry%2Fcache%2F%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BForge's%20cache%20directory%2C%20where%20it%20stores%20cached%20block%20data%20and%20more.%0A%0A%60~%2F.foundry%2Ffoundry.toml%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20global%20%5BFoundry%20config%5D(%2Fconfig%2Freference%2Foverview.mdx).%0A%0A%60~%2F.svm%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20location%20of%20the%20Forge-managed%20solc%20binaries.%0A%0A%23%23%23%20EXAMPLES%0A%0A1.%20Create%20a%20new%20Forge%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20init%20hello_foundry%0A%20%20%20%60%60%60%0A%0A2.%20Build%20a%20project%3A%0A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20build%0A%20%20%20%60%60%60%0A%0A3.%20Run%20a%20project's%20tests%3A%0A%20%20%20%60%60%60sh%0A%20%20%20forge%20test%0A%20%20%20%60%60%60%0A%0A%23%23%23%20BUGS%0A%0ASee%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%20for%20issues.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-commands-d2YQHd7I.js"),__vite__mapDeps([217,1])),path:"/forge/reference/project-commands",type:"mdx",filePath:"forge/reference/project-commands.mdx",content:"%23%23%20Project%20Commands%0A%0A-%20%5Bforge%20init%5D(%2Fforge%2Freference%2Fforge-init.mdx)%0A-%20%5Bforge%20clone%5D(%2Fforge%2Freference%2Fforge-clone.mdx)%0A-%20%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%0A-%20%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%0A-%20%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%0A-%20%5Bforge%20config%5D(%2Fforge%2Freference%2Fforge-config.mdx)%0A-%20%5Bforge%20remappings%5D(%2Fforge%2Freference%2Fforge-remappings.mdx)%0A-%20%5Bforge%20tree%5D(%2Fforge%2Freference%2Fforge-tree.mdx)%0A-%20%5Bforge%20geiger%5D(%2Fforge%2Freference%2Fforge-geiger.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-commands-d2YQHd7I.js"),__vite__mapDeps([217,1])),path:"/forge/reference/project-commands.html",type:"mdx",filePath:"forge/reference/project-commands.mdx",content:"%23%23%20Project%20Commands%0A%0A-%20%5Bforge%20init%5D(%2Fforge%2Freference%2Fforge-init.mdx)%0A-%20%5Bforge%20clone%5D(%2Fforge%2Freference%2Fforge-clone.mdx)%0A-%20%5Bforge%20install%5D(%2Fforge%2Freference%2Fforge-install.mdx)%0A-%20%5Bforge%20update%5D(%2Fforge%2Freference%2Fforge-update.mdx)%0A-%20%5Bforge%20remove%5D(%2Fforge%2Freference%2Fforge-remove.mdx)%0A-%20%5Bforge%20config%5D(%2Fforge%2Freference%2Fforge-config.mdx)%0A-%20%5Bforge%20remappings%5D(%2Fforge%2Freference%2Fforge-remappings.mdx)%0A-%20%5Bforge%20tree%5D(%2Fforge%2Freference%2Fforge-tree.mdx)%0A-%20%5Bforge%20geiger%5D(%2Fforge%2Freference%2Fforge-geiger.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-options-BKric660.js"),__vite__mapDeps([173,1])),path:"/forge/reference/project-options",type:"mdx",filePath:"forge/reference/project-options.mdx",content:"%23%23%23%23%20Project%20Options%0A%0A%60--build-info%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20build%20info%20files.%0A%0A%60--build-info-path%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20path%20to%20directory%20that%20build%20info%20files%20will%20be%20written%20to.%0A%0A%60--root%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60-C%60%20*path*%20%20%0A%60--contracts%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20contracts%20source%20directory.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60DAPP_SRC%60%0A%0A%60--lib-paths%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20library%20folder.%0A%0A%60-R%60%20*remappings*%20%20%0A%60--remappings%60%20*remappings*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20remappings.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20parameter%20is%20a%20comma-separated%20list%20of%20remappings%20in%20the%20format%20%60%3Csource%3E%3D%3Cdest%3E%60.%0A%0A%60--cache-path%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20compiler%20cache.%0A%0A%60--config-path%60%20*file*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPath%20to%20the%20config%20file.%0A%0A%60--hh%60%20%20%0A%60--hardhat%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20is%20a%20convenience%20flag%2C%20and%20is%20the%20same%20as%20passing%20%60--contracts%20contracts%20--lib-paths%20node-modules%60.%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-options-BKric660.js"),__vite__mapDeps([173,1])),path:"/forge/reference/project-options.html",type:"mdx",filePath:"forge/reference/project-options.mdx",content:"%23%23%23%23%20Project%20Options%0A%0A%60--build-info%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGenerate%20build%20info%20files.%0A%0A%60--build-info-path%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOutput%20path%20to%20directory%20that%20build%20info%20files%20will%20be%20written%20to.%0A%0A%60--root%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20root%20path.%20By%20default%2C%20this%20is%20the%20root%20directory%20of%20the%20current%20git%20repository%2C%20or%20the%20current%20working%20directory.%0A%0A%60-C%60%20*path*%20%20%0A%60--contracts%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20contracts%20source%20directory.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60DAPP_SRC%60%0A%0A%60--lib-paths%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20library%20folder.%0A%0A%60-R%60%20*remappings*%20%20%0A%60--remappings%60%20*remappings*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20project's%20remappings.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20parameter%20is%20a%20comma-separated%20list%20of%20remappings%20in%20the%20format%20%60%3Csource%3E%3D%3Cdest%3E%60.%0A%0A%60--cache-path%60%20*path*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20path%20to%20the%20compiler%20cache.%0A%0A%60--config-path%60%20*file*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPath%20to%20the%20config%20file.%0A%0A%60--hh%60%20%20%0A%60--hardhat%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20is%20a%20convenience%20flag%2C%20and%20is%20the%20same%20as%20passing%20%60--contracts%20contracts%20--lib-paths%20node-modules%60.%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./test-commands-cm3371U3.js"),__vite__mapDeps([218,1])),path:"/forge/reference/test-commands",type:"mdx",filePath:"forge/reference/test-commands.mdx",content:"%23%23%20Test%20Commands%0A%0A-%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%0A-%20%5Bforge%20snapshot%5D(%2Fforge%2Freference%2Fforge-snapshot.mdx)%0A-%20%5Bforge%20coverage%5D(%2Fforge%2Freference%2Fforge-coverage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./test-commands-cm3371U3.js"),__vite__mapDeps([218,1])),path:"/forge/reference/test-commands.html",type:"mdx",filePath:"forge/reference/test-commands.mdx",content:"%23%23%20Test%20Commands%0A%0A-%20%5Bforge%20test%5D(%2Fforge%2Freference%2Fforge-test.mdx)%0A-%20%5Bforge%20snapshot%5D(%2Fforge%2Freference%2Fforge-snapshot.mdx)%0A-%20%5Bforge%20coverage%5D(%2Fforge%2Freference%2Fforge-coverage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./test-options-C0nj2loq.js"),__vite__mapDeps([208,1])),path:"/forge/reference/test-options",type:"mdx",filePath:"forge/reference/test-options.mdx",content:"%23%23%23%23%20Test%20Options%0A%0A%60-m%60%20*regex*%20%20%0A%60--match%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20test%20functions%20matching%20the%20specified%20regex%20pattern.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B**Deprecated%3A%20See%20%60--match-test%60.**%0A%0A%60--match-test%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20test%20functions%20matching%20the%20specified%20regex%20pattern.%0A%0A%60--no-match-test%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20test%20functions%20that%20do%20not%20match%20the%20specified%20regex%20pattern.%0A%0A%60--match-contract%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20contracts%20matching%20the%20specified%20regex%20pattern.%0A%0A%60--no-match-contract%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20contracts%20that%20do%20not%20match%20the%20specified%20regex%20pattern.%0A%0A%60--match-path%60%20*glob*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20source%20files%20matching%20the%20specified%20glob%20pattern.%0A%0A%60--no-match-path%60%20*glob*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20source%20files%20that%20do%20not%20match%20the%20specified%20glob%20pattern.%0A%0A%60--debug%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20a%20test%20in%20the%20debugger.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20argument%20passed%20to%20this%20flag%20is%20the%20name%20of%20the%20test%20function%20you%20want%20to%20run%2C%20and%20it%20works%20the%20same%20as%20%60--match-test%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20more%20than%20one%20test%20matches%20your%20specified%20criteria%2C%20you%20must%20add%20additional%20filters%20until%20only%20one%20test%20is%20found%20(see%20%60--match-contract%60%20and%20%60--match-path%60).%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20matching%20test%20will%20be%20opened%20in%20the%20debugger%20regardless%20of%20the%20outcome%20of%20the%20test.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20the%20matching%20test%20is%20a%20fuzz%20test%2C%20then%20it%20will%20open%20the%20debugger%20on%20the%20first%20failure%20case.%20If%20the%20fuzz%20test%20does%20not%20fail%2C%20it%20will%20open%20the%20debugger%20on%20the%20last%20fuzz%20case.%0A%0A%60--gas-report%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20a%20gas%20report.%0A%0A%60--allow-failure%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExit%20with%20code%200%20even%20if%20a%20test%20fails.%0A%0A%60--fail-fast%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BStop%20running%20tests%20after%20the%20first%20failure.%0A%0A%60--etherscan-api-key%60%20*key*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEtherscan%20API%20key.%20If%20set%2C%20traces%20are%20decoded%20using%20Etherscan%20if%20%60--fork-url%60%20is%20also%20set.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETHERSCAN_API_KEY%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./test-options-C0nj2loq.js"),__vite__mapDeps([208,1])),path:"/forge/reference/test-options.html",type:"mdx",filePath:"forge/reference/test-options.mdx",content:"%23%23%23%23%20Test%20Options%0A%0A%60-m%60%20*regex*%20%20%0A%60--match%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20test%20functions%20matching%20the%20specified%20regex%20pattern.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B**Deprecated%3A%20See%20%60--match-test%60.**%0A%0A%60--match-test%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20test%20functions%20matching%20the%20specified%20regex%20pattern.%0A%0A%60--no-match-test%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20test%20functions%20that%20do%20not%20match%20the%20specified%20regex%20pattern.%0A%0A%60--match-contract%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20contracts%20matching%20the%20specified%20regex%20pattern.%0A%0A%60--no-match-contract%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20contracts%20that%20do%20not%20match%20the%20specified%20regex%20pattern.%0A%0A%60--match-path%60%20*glob*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20source%20files%20matching%20the%20specified%20glob%20pattern.%0A%0A%60--no-match-path%60%20*glob*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOnly%20run%20tests%20in%20source%20files%20that%20do%20not%20match%20the%20specified%20glob%20pattern.%0A%0A%60--debug%60%20*regex*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BRun%20a%20test%20in%20the%20debugger.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20argument%20passed%20to%20this%20flag%20is%20the%20name%20of%20the%20test%20function%20you%20want%20to%20run%2C%20and%20it%20works%20the%20same%20as%20%60--match-test%60.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20more%20than%20one%20test%20matches%20your%20specified%20criteria%2C%20you%20must%20add%20additional%20filters%20until%20only%20one%20test%20is%20found%20(see%20%60--match-contract%60%20and%20%60--match-path%60).%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20matching%20test%20will%20be%20opened%20in%20the%20debugger%20regardless%20of%20the%20outcome%20of%20the%20test.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BIf%20the%20matching%20test%20is%20a%20fuzz%20test%2C%20then%20it%20will%20open%20the%20debugger%20on%20the%20first%20failure%20case.%20If%20the%20fuzz%20test%20does%20not%20fail%2C%20it%20will%20open%20the%20debugger%20on%20the%20last%20fuzz%20case.%0A%0A%60--gas-report%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BPrint%20a%20gas%20report.%0A%0A%60--allow-failure%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExit%20with%20code%200%20even%20if%20a%20test%20fails.%0A%0A%60--fail-fast%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BStop%20running%20tests%20after%20the%20first%20failure.%0A%0A%60--etherscan-api-key%60%20*key*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEtherscan%20API%20key.%20If%20set%2C%20traces%20are%20decoded%20using%20Etherscan%20if%20%60--fork-url%60%20is%20also%20set.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETHERSCAN_API_KEY%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./utility-commands-D5MahUFc.js"),__vite__mapDeps([219,1])),path:"/forge/reference/utility-commands",type:"mdx",filePath:"forge/reference/utility-commands.mdx",content:"%23%23%20Utility%20Commands%0A%0A-%20%5Bforge%20bind%5D(%2Fforge%2Freference%2Fforge-bind.mdx)%0A-%20%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%0A-%20%5Bforge%20cache%20clean%5D(%2Fforge%2Freference%2Fforge-cache-clean.mdx)%0A-%20%5Bforge%20cache%20ls%5D(%2Fforge%2Freference%2Fforge-cache-ls.mdx)%0A-%20%5Bforge%20script%5D(%2Fforge%2Freference%2Fforge-script.mdx)%0A-%20%5Bforge%20upload-selectors%5D(%2Fforge%2Freference%2Fforge-upload-selectors.mdx)%0A-%20%5Bforge%20doc%5D(%2Fforge%2Freference%2Fforge-doc.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./utility-commands-D5MahUFc.js"),__vite__mapDeps([219,1])),path:"/forge/reference/utility-commands.html",type:"mdx",filePath:"forge/reference/utility-commands.mdx",content:"%23%23%20Utility%20Commands%0A%0A-%20%5Bforge%20bind%5D(%2Fforge%2Freference%2Fforge-bind.mdx)%0A-%20%5Bforge%20cache%5D(%2Fforge%2Freference%2Fforge-cache.mdx)%0A-%20%5Bforge%20cache%20clean%5D(%2Fforge%2Freference%2Fforge-cache-clean.mdx)%0A-%20%5Bforge%20cache%20ls%5D(%2Fforge%2Freference%2Fforge-cache-ls.mdx)%0A-%20%5Bforge%20script%5D(%2Fforge%2Freference%2Fforge-script.mdx)%0A-%20%5Bforge%20upload-selectors%5D(%2Fforge%2Freference%2Fforge-upload-selectors.mdx)%0A-%20%5Bforge%20doc%5D(%2Fforge%2Freference%2Fforge-doc.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./watch-options-BnHHaP1Q.js"),__vite__mapDeps([179,1])),path:"/forge/reference/watch-options",type:"mdx",filePath:"forge/reference/watch-options.mdx",content:"%23%23%23%23%20Watch%20Options%0A%0A%60-w%60%20%5B*path...*%5D%20%20%0A%60--watch%60%20%5B*path...*%5D%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWatch%20specific%20file(s)%20or%20folder(s).%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%2C%20the%20project's%20source%20directory%20is%20watched.%0A%0A%60-d%60%20*delay*%20%20%0A%60--delay%60%20*delay*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFile%20update%20debounce%20delay.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDuring%20the%20delay%2C%20incoming%20change%20events%20are%20accumulated%20and%20only%20once%20the%20delay%20has%20passed%2C%20is%20an%20action%20taken.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNote%20that%20this%20does%20not%20mean%20a%20command%20will%20be%20started%3A%20if%20%60--no-restart%60%20is%20given%20and%20a%20command%20is%20already%20running%2C%20the%20outcome%20of%20the%20action%20will%20be%20to%20do%20nothing.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefaults%20to%2050ms.%20Parses%20as%20decimal%20seconds%20by%20default%2C%20but%20using%20an%20integer%20with%20the%20%60ms%60%20suffix%20may%20be%20more%20convenient.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWhen%20using%20%60--poll%60%20mode%2C%20you'll%20want%20a%20larger%20duration%2C%20or%20risk%20overloading%20disk%20I%2FO.%0A%0A%60--no-restart%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20restart%20the%20command%20while%20it's%20running.%0A%0A%60--run-all%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExplicitly%20re-run%20the%20command%20on%20all%20files%20when%20a%20change%20is%20made.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./watch-options-BnHHaP1Q.js"),__vite__mapDeps([179,1])),path:"/forge/reference/watch-options.html",type:"mdx",filePath:"forge/reference/watch-options.mdx",content:"%23%23%23%23%20Watch%20Options%0A%0A%60-w%60%20%5B*path...*%5D%20%20%0A%60--watch%60%20%5B*path...*%5D%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWatch%20specific%20file(s)%20or%20folder(s).%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BBy%20default%2C%20the%20project's%20source%20directory%20is%20watched.%0A%0A%60-d%60%20*delay*%20%20%0A%60--delay%60%20*delay*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BFile%20update%20debounce%20delay.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDuring%20the%20delay%2C%20incoming%20change%20events%20are%20accumulated%20and%20only%20once%20the%20delay%20has%20passed%2C%20is%20an%20action%20taken.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNote%20that%20this%20does%20not%20mean%20a%20command%20will%20be%20started%3A%20if%20%60--no-restart%60%20is%20given%20and%20a%20command%20is%20already%20running%2C%20the%20outcome%20of%20the%20action%20will%20be%20to%20do%20nothing.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefaults%20to%2050ms.%20Parses%20as%20decimal%20seconds%20by%20default%2C%20but%20using%20an%20integer%20with%20the%20%60ms%60%20suffix%20may%20be%20more%20convenient.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BWhen%20using%20%60--poll%60%20mode%2C%20you'll%20want%20a%20larger%20duration%2C%20or%20risk%20overloading%20disk%20I%2FO.%0A%0A%60--no-restart%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDo%20not%20restart%20the%20command%20while%20it's%20running.%0A%0A%60--run-all%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BExplicitly%20re-run%20the%20command%20on%20all%20files%20when%20a%20change%20is%20made.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cheatcodes-RTfpa-Q5.js"),__vite__mapDeps([220,1])),path:"/forge/tests/cheatcodes",type:"mdx",filePath:"forge/tests/cheatcodes.md",content:"---%0Adescription%3A%20Use%20cheatcodes%20to%20manipulate%20blockchain%20state%2C%20test%20reverts%2C%20and%20verify%20events%20in%20your%20smart%20contract%20tests.%0A---%0A%0A%23%23%20Cheatcodes%0A%0AMost%20of%20the%20time%2C%20simply%20testing%20your%20smart%20contracts%20outputs%20isn't%20enough.%20To%20manipulate%20the%20state%20of%20the%20blockchain%2C%20as%20well%20as%20test%20for%20specific%20reverts%20and%20events%2C%20Foundry%20is%20shipped%20with%20a%20set%20of%20cheatcodes.%0A%0ACheatcodes%20allow%20you%20to%20change%20the%20block%20number%2C%20your%20identity%2C%20and%20more.%20They%20are%20invoked%20by%20calling%20specific%20functions%20on%20a%20specially%20designated%20address%3A%20%600x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60.%0A%0AYou%20can%20access%20cheatcodes%20easily%20via%20the%20%60vm%60%20instance%20available%20in%20Forge%20Standard%20Library's%20%60Test%60%20contract.%20Forge%20Standard%20Library%20is%20explained%20in%20greater%20detail%20in%20the%20following%20%5Bsection%5D(%2Fforge%2Ftests%2Fforge-std).%0A%0ALet's%20write%20a%20test%20for%20a%20smart%20contract%20that%20is%20only%20callable%20by%20its%20owner.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Aprelude%5D%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Acontract%5D%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Acontract_prelude%5D%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Asimple_test%5D%0A%7D%0A%60%60%60%0A%0AIf%20we%20run%20%60forge%20test%60%20now%2C%20we%20will%20see%20that%20the%20test%20passes%2C%20since%20%60OwnerUpOnlyTest%60%20is%20the%20owner%20of%20%60OwnerUpOnly%60.%0A%0A%60%60%60sh%0Aforge%20test%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcheatcodes%2Fforge-test-simple%3Aoutput%7D%5D%0A%60%60%60%0A%0ALet's%20make%20sure%20that%20someone%20who%20is%20definitely%20not%20the%20owner%20can't%20increment%20the%20count%2C%20by%20using%20the%20%60expectRevert%60%20cheatcode%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Acontract_prelude%5D%0A%0A%20%20%20%20%2F%2F%20...%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Atest_expectrevert%5D%0A%7D%0A%60%60%60%0A%0AIf%20we%20run%20%60forge%20test%60%20one%20last%20time%2C%20we%20see%20that%20the%20test%20still%20passes%2C%20but%20this%20time%20we%20are%20sure%20that%20it%20will%20always%20fail%20if%20we%20revert%20for%20any%20other%20reason.%0A%0A%60%60%60bash%0Aforge%20test%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcheatcodes%2Fforge-test-cheatcodes-expectrevert%3Aoutput%5D%0A%60%60%60%0A%0AAnother%20cheatcode%20that%20is%20perhaps%20not%20so%20intuitive%20is%20the%20%60expectEmit%60%20function.%20Before%20looking%20at%20%60expectEmit%60%2C%20we%20need%20to%20understand%20what%20an%20event%20is.%0A%0AEvents%20are%20inheritable%20members%20of%20contracts.%20When%20you%20emit%20an%20event%2C%20the%20arguments%20are%20stored%20on%20the%20blockchain.%20The%20%60indexed%60%20attribute%20can%20be%20added%20to%20a%20maximum%20of%20three%20parameters%20of%20an%20event%20to%20form%20a%20data%20structure%20known%20as%20a%20%22topic.%22%20Topics%20allow%20users%20to%20search%20for%20events%20on%20the%20blockchain.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FEmitContract.t.sol%3Aall%5D%0A%60%60%60%0A%0AWhen%20we%20call%20%60vm.expectEmit(true%2C%20true%2C%20false%2C%20true)%3B%60%2C%20we%20want%20to%20check%20the%201st%20and%202nd%20%60indexed%60%20topic%20for%20the%20next%20event.%0A%0AThe%20expected%20%60Transfer%60%20event%20in%20%60test_ExpectEmit()%60%20means%20we%20are%20expecting%20that%20%60from%60%20is%20%60address(this)%60%2C%20and%20%60to%60%20is%20%60address(1337)%60.%20This%20is%20compared%20against%20the%20event%20emitted%20from%20%60emitter.t()%60.%0A%0AIn%20other%20words%2C%20we%20are%20checking%20that%20the%20first%20topic%20from%20%60emitter.t()%60%20is%20equal%20to%20%60address(this)%60.%20The%203rd%20argument%20in%20%60expectEmit%60%20is%20set%20to%20%60false%60%20because%20there%20is%20no%20need%20to%20check%20the%20third%20topic%20in%20the%20%60Transfer%60%20event%2C%20since%20there%20are%20only%20two.%20It%20does%20not%20matter%20even%20if%20we%20set%20to%20%60true%60.%0A%0AThe%204th%20argument%20in%20%60expectEmit%60%20is%20set%20to%20%60true%60%2C%20which%20means%20that%20we%20want%20to%20check%20%22non-indexed%20topics%22%2C%20also%20known%20as%20data.%0A%0AFor%20example%2C%20we%20want%20the%20data%20from%20the%20expected%20event%20in%20%60test_ExpectEmit%60%20-%20which%20is%20%60amount%60%20-%20to%20equal%20to%20the%20data%20in%20the%20actual%20emitted%20event.%20In%20other%20words%2C%20we%20are%20asserting%20that%20%60amount%60%20emitted%20by%20%60emitter.t()%60%20is%20equal%20to%20%601337%60.%20If%20the%20fourth%20argument%20in%20%60expectEmit%60%20was%20set%20to%20%60false%60%2C%20we%20would%20not%20check%20%60amount%60.%0A%0AIn%20other%20words%2C%20%60test_ExpectEmit_DoNotCheckData%60%20is%20a%20valid%20test%20case%2C%20even%20though%20the%20amounts%20differ%2C%20since%20we%20do%20not%20check%20the%20data.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview)%20for%20a%20complete%20overview%20of%20all%20the%20available%20cheatcodes.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./cheatcodes-RTfpa-Q5.js"),__vite__mapDeps([220,1])),path:"/forge/tests/cheatcodes.html",type:"mdx",filePath:"forge/tests/cheatcodes.md",content:"---%0Adescription%3A%20Use%20cheatcodes%20to%20manipulate%20blockchain%20state%2C%20test%20reverts%2C%20and%20verify%20events%20in%20your%20smart%20contract%20tests.%0A---%0A%0A%23%23%20Cheatcodes%0A%0AMost%20of%20the%20time%2C%20simply%20testing%20your%20smart%20contracts%20outputs%20isn't%20enough.%20To%20manipulate%20the%20state%20of%20the%20blockchain%2C%20as%20well%20as%20test%20for%20specific%20reverts%20and%20events%2C%20Foundry%20is%20shipped%20with%20a%20set%20of%20cheatcodes.%0A%0ACheatcodes%20allow%20you%20to%20change%20the%20block%20number%2C%20your%20identity%2C%20and%20more.%20They%20are%20invoked%20by%20calling%20specific%20functions%20on%20a%20specially%20designated%20address%3A%20%600x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60.%0A%0AYou%20can%20access%20cheatcodes%20easily%20via%20the%20%60vm%60%20instance%20available%20in%20Forge%20Standard%20Library's%20%60Test%60%20contract.%20Forge%20Standard%20Library%20is%20explained%20in%20greater%20detail%20in%20the%20following%20%5Bsection%5D(%2Fforge%2Ftests%2Fforge-std).%0A%0ALet's%20write%20a%20test%20for%20a%20smart%20contract%20that%20is%20only%20callable%20by%20its%20owner.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Aprelude%5D%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Acontract%5D%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Acontract_prelude%5D%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Asimple_test%5D%0A%7D%0A%60%60%60%0A%0AIf%20we%20run%20%60forge%20test%60%20now%2C%20we%20will%20see%20that%20the%20test%20passes%2C%20since%20%60OwnerUpOnlyTest%60%20is%20the%20owner%20of%20%60OwnerUpOnly%60.%0A%0A%60%60%60sh%0Aforge%20test%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcheatcodes%2Fforge-test-simple%3Aoutput%7D%5D%0A%60%60%60%0A%0ALet's%20make%20sure%20that%20someone%20who%20is%20definitely%20not%20the%20owner%20can't%20increment%20the%20count%2C%20by%20using%20the%20%60expectRevert%60%20cheatcode%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Acontract_prelude%5D%0A%0A%20%20%20%20%2F%2F%20...%0A%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FOwnerUpOnly.t.sol%3Atest_expectrevert%5D%0A%7D%0A%60%60%60%0A%0AIf%20we%20run%20%60forge%20test%60%20one%20last%20time%2C%20we%20see%20that%20the%20test%20still%20passes%2C%20but%20this%20time%20we%20are%20sure%20that%20it%20will%20always%20fail%20if%20we%20revert%20for%20any%20other%20reason.%0A%0A%60%60%60bash%0Aforge%20test%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fcheatcodes%2Fforge-test-cheatcodes-expectrevert%3Aoutput%5D%0A%60%60%60%0A%0AAnother%20cheatcode%20that%20is%20perhaps%20not%20so%20intuitive%20is%20the%20%60expectEmit%60%20function.%20Before%20looking%20at%20%60expectEmit%60%2C%20we%20need%20to%20understand%20what%20an%20event%20is.%0A%0AEvents%20are%20inheritable%20members%20of%20contracts.%20When%20you%20emit%20an%20event%2C%20the%20arguments%20are%20stored%20on%20the%20blockchain.%20The%20%60indexed%60%20attribute%20can%20be%20added%20to%20a%20maximum%20of%20three%20parameters%20of%20an%20event%20to%20form%20a%20data%20structure%20known%20as%20a%20%22topic.%22%20Topics%20allow%20users%20to%20search%20for%20events%20on%20the%20blockchain.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FEmitContract.t.sol%3Aall%5D%0A%60%60%60%0A%0AWhen%20we%20call%20%60vm.expectEmit(true%2C%20true%2C%20false%2C%20true)%3B%60%2C%20we%20want%20to%20check%20the%201st%20and%202nd%20%60indexed%60%20topic%20for%20the%20next%20event.%0A%0AThe%20expected%20%60Transfer%60%20event%20in%20%60test_ExpectEmit()%60%20means%20we%20are%20expecting%20that%20%60from%60%20is%20%60address(this)%60%2C%20and%20%60to%60%20is%20%60address(1337)%60.%20This%20is%20compared%20against%20the%20event%20emitted%20from%20%60emitter.t()%60.%0A%0AIn%20other%20words%2C%20we%20are%20checking%20that%20the%20first%20topic%20from%20%60emitter.t()%60%20is%20equal%20to%20%60address(this)%60.%20The%203rd%20argument%20in%20%60expectEmit%60%20is%20set%20to%20%60false%60%20because%20there%20is%20no%20need%20to%20check%20the%20third%20topic%20in%20the%20%60Transfer%60%20event%2C%20since%20there%20are%20only%20two.%20It%20does%20not%20matter%20even%20if%20we%20set%20to%20%60true%60.%0A%0AThe%204th%20argument%20in%20%60expectEmit%60%20is%20set%20to%20%60true%60%2C%20which%20means%20that%20we%20want%20to%20check%20%22non-indexed%20topics%22%2C%20also%20known%20as%20data.%0A%0AFor%20example%2C%20we%20want%20the%20data%20from%20the%20expected%20event%20in%20%60test_ExpectEmit%60%20-%20which%20is%20%60amount%60%20-%20to%20equal%20to%20the%20data%20in%20the%20actual%20emitted%20event.%20In%20other%20words%2C%20we%20are%20asserting%20that%20%60amount%60%20emitted%20by%20%60emitter.t()%60%20is%20equal%20to%20%601337%60.%20If%20the%20fourth%20argument%20in%20%60expectEmit%60%20was%20set%20to%20%60false%60%2C%20we%20would%20not%20check%20%60amount%60.%0A%0AIn%20other%20words%2C%20%60test_ExpectEmit_DoNotCheckData%60%20is%20a%20valid%20test%20case%2C%20even%20though%20the%20amounts%20differ%2C%20since%20we%20do%20not%20check%20the%20data.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview)%20for%20a%20complete%20overview%20of%20all%20the%20available%20cheatcodes.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-std-D9tbbClt.js"),__vite__mapDeps([221,1])),path:"/forge/tests/forge-std",type:"mdx",filePath:"forge/tests/forge-std.md",content:"---%0Adescription%3A%20Forge%20Standard%20Library%20provides%20essential%20testing%20utilities%20including%20cheatcodes%2C%20assertions%2C%20logging%2C%20and%20storage%20manipulation.%0A---%0A%0A%23%23%20Forge%20Standard%20Library%20Overview%0A%0AForge%20Standard%20Library%20(Forge%20Std%20for%20short)%20is%20a%20collection%20of%20helpful%20contracts%20that%20make%20writing%20tests%20easier%2C%20faster%2C%20and%20more%20user-friendly.%0A%0AUsing%20Forge%20Std%20is%20the%20preferred%20way%20of%20writing%20tests%20with%20Foundry.%0A%0AIt%20provides%20all%20the%20essential%20functionality%20you%20need%20to%20get%20started%20writing%20tests%3A%0A%0A-%20%60Vm.sol%60%3A%20Up-to-date%20cheatcodes%20interface%0A-%20%60console.sol%60%20and%20%60console2.sol%60%3A%20Hardhat-style%20logging%20functionality%0A-%20%60Script.sol%60%3A%20Basic%20utilities%20for%20%5Bscripting%20with%20Solidity%5D(%2Fguides%2Fscripting-with-solidity)%0A-%20%60Test.sol%60%3A%20A%20superset%20of%20DSTest%20containing%20standard%20libraries%2C%20a%20cheatcodes%20instance%20(%60vm%60)%2C%20and%20Hardhat%20console%0A%0ASimply%20import%20%60Test.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20ContractTest%20is%20Test%20%7B%20...%0A%60%60%60%0A%0ANow%2C%20you%20can%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Access%20Hevm%20via%20the%20%60vm%60%20instance%0Avm.startPrank(alice)%3B%0A%0A%2F%2F%20Assert%20and%20log%20using%20Dappsys%20Test%0AassertEq(dai.balanceOf(alice)%2C%2010000e18)%3B%0A%0A%2F%2F%20Log%20with%20the%20Hardhat%20%60console%60%20(%60console2%60)%0Aconsole.log(alice.balance)%3B%0A%0A%2F%2F%20Use%20anything%20from%20the%20Forge%20Std%20std-libraries%0Adeal(address(dai)%2C%20alice%2C%2010000e18)%3B%0A%60%60%60%0A%0ATo%20import%20the%20%60Vm%60%20interface%20or%20the%20%60console%60%20library%20individually%3A%0A%0A%60%60%60solidity%0Aimport%20%7BVm%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Aimport%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%0A%60%60%60%0A%0A**Note%3A**%20%60console2.sol%60%20contains%20patches%20to%20%60console.sol%60%20that%20allows%20Forge%20to%20decode%20traces%20for%20calls%20to%20the%20console%2C%20but%20it%20is%20not%20compatible%20with%20Hardhat.%0A%0A%60%60%60solidity%0Aimport%20%7Bconsole2%7D%20from%20%22forge-std%2Fconsole2.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%20Standard%20libraries%0A%0AForge%20Std%20currently%20consists%20of%20six%20standard%20libraries.%0A%0A%23%23%23%23%20Std%20Logs%0A%0AStd%20Logs%20expand%20upon%20the%20logging%20events%20from%20the%20%5B%60DSTest%60%5D(%2Freference%2Fds-test%23logging)%20library.%0A%0A%23%23%23%23%20Std%20Assertions%0A%0AStd%20Assertions%20expand%20upon%20the%20assertion%20functions%20from%20the%20%5B%60DSTest%60%5D(%2Freference%2Fds-test%23asserting)%20library.%0A%0A%23%23%23%23%20Std%20Cheats%0A%0AStd%20Cheats%20are%20wrappers%20around%20Forge%20cheatcodes%20that%20make%20them%20safer%20to%20use%20and%20improve%20the%20DX.%0A%0AYou%20can%20access%20Std%20Cheats%20by%20simply%20calling%20them%20inside%20your%20test%20contract%2C%20as%20you%20would%20any%20other%20internal%20function%3A%0A%0A%60%60%60solidity%0A%2F%2F%20set%20up%20a%20prank%20as%20Alice%20with%20100%20ETH%20balance%0Ahoax(alice%2C%20100%20ether)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Std%20Errors%0A%0AStd%20Errors%20provide%20wrappers%20around%20common%20internal%20Solidity%20errors%20and%20reverts.%0A%0AStd%20Errors%20are%20most%20useful%20in%20combination%20with%20the%20%5B%60expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert)%20cheatcode%2C%20as%20you%20do%20not%20need%20to%20remember%20the%20internal%20Solidity%20panic%20codes%20yourself.%20Note%20that%20you%20have%20to%20access%20them%20through%20%60stdError%60%2C%20as%20this%20is%20a%20library.%0A%0A%60%60%60solidity%0A%2F%2F%20expect%20an%20arithmetic%20error%20on%20the%20next%20call%20(e.g.%20underflow)%0Avm.expectRevert(stdError.arithmeticError)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Std%20Storage%0A%0AStd%20Storage%20makes%20manipulating%20contract%20storage%20easy.%20It%20can%20find%20and%20write%20to%20the%20storage%20slot(s)%20associated%20with%20a%20particular%20variable.%0A%0AThe%20%60Test%60%20contract%20already%20provides%20a%20%60StdStorage%60%20instance%20%60stdstore%60%20through%20which%20you%20can%20access%20any%20std-storage%20functionality.%20Note%20that%20you%20must%20add%20%60using%20stdStorage%20for%20StdStorage%60%20in%20your%20test%20contract%20first.%0A%0A%60%60%60solidity%0A%2F%2F%20find%20the%20variable%20%60score%60%20in%20the%20contract%20%60game%60%0A%2F%2F%20and%20change%20its%20value%20to%2010%0Astdstore%0A%20%20%20%20.target(address(game))%0A%20%20%20%20.sig(game.score.selector)%0A%20%20%20%20.checked_write(10)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Std%20Math%0A%0AStd%20Math%20is%20a%20library%20with%20useful%20mathematical%20functions%20that%20are%20not%20provided%20in%20Solidity.%0A%0ANote%20that%20you%20have%20to%20access%20them%20through%20%60stdMath%60%2C%20as%20this%20is%20a%20library.%0A%0A%60%60%60solidity%0A%2F%2F%20get%20the%20absolute%20value%20of%20-10%0Auint256%20ten%20%3D%20stdMath.abs(-10)%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5BForge%20Standard%20Library%20Reference%5D(%2Freference%2Fforge-std%2Foverview)%20for%20a%20complete%20overview%20of%20Forge%20Standard%20Library.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forge-std-D9tbbClt.js"),__vite__mapDeps([221,1])),path:"/forge/tests/forge-std.html",type:"mdx",filePath:"forge/tests/forge-std.md",content:"---%0Adescription%3A%20Forge%20Standard%20Library%20provides%20essential%20testing%20utilities%20including%20cheatcodes%2C%20assertions%2C%20logging%2C%20and%20storage%20manipulation.%0A---%0A%0A%23%23%20Forge%20Standard%20Library%20Overview%0A%0AForge%20Standard%20Library%20(Forge%20Std%20for%20short)%20is%20a%20collection%20of%20helpful%20contracts%20that%20make%20writing%20tests%20easier%2C%20faster%2C%20and%20more%20user-friendly.%0A%0AUsing%20Forge%20Std%20is%20the%20preferred%20way%20of%20writing%20tests%20with%20Foundry.%0A%0AIt%20provides%20all%20the%20essential%20functionality%20you%20need%20to%20get%20started%20writing%20tests%3A%0A%0A-%20%60Vm.sol%60%3A%20Up-to-date%20cheatcodes%20interface%0A-%20%60console.sol%60%20and%20%60console2.sol%60%3A%20Hardhat-style%20logging%20functionality%0A-%20%60Script.sol%60%3A%20Basic%20utilities%20for%20%5Bscripting%20with%20Solidity%5D(%2Fguides%2Fscripting-with-solidity)%0A-%20%60Test.sol%60%3A%20A%20superset%20of%20DSTest%20containing%20standard%20libraries%2C%20a%20cheatcodes%20instance%20(%60vm%60)%2C%20and%20Hardhat%20console%0A%0ASimply%20import%20%60Test.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20ContractTest%20is%20Test%20%7B%20...%0A%60%60%60%0A%0ANow%2C%20you%20can%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Access%20Hevm%20via%20the%20%60vm%60%20instance%0Avm.startPrank(alice)%3B%0A%0A%2F%2F%20Assert%20and%20log%20using%20Dappsys%20Test%0AassertEq(dai.balanceOf(alice)%2C%2010000e18)%3B%0A%0A%2F%2F%20Log%20with%20the%20Hardhat%20%60console%60%20(%60console2%60)%0Aconsole.log(alice.balance)%3B%0A%0A%2F%2F%20Use%20anything%20from%20the%20Forge%20Std%20std-libraries%0Adeal(address(dai)%2C%20alice%2C%2010000e18)%3B%0A%60%60%60%0A%0ATo%20import%20the%20%60Vm%60%20interface%20or%20the%20%60console%60%20library%20individually%3A%0A%0A%60%60%60solidity%0Aimport%20%7BVm%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Aimport%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%0A%60%60%60%0A%0A**Note%3A**%20%60console2.sol%60%20contains%20patches%20to%20%60console.sol%60%20that%20allows%20Forge%20to%20decode%20traces%20for%20calls%20to%20the%20console%2C%20but%20it%20is%20not%20compatible%20with%20Hardhat.%0A%0A%60%60%60solidity%0Aimport%20%7Bconsole2%7D%20from%20%22forge-std%2Fconsole2.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%20Standard%20libraries%0A%0AForge%20Std%20currently%20consists%20of%20six%20standard%20libraries.%0A%0A%23%23%23%23%20Std%20Logs%0A%0AStd%20Logs%20expand%20upon%20the%20logging%20events%20from%20the%20%5B%60DSTest%60%5D(%2Freference%2Fds-test%23logging)%20library.%0A%0A%23%23%23%23%20Std%20Assertions%0A%0AStd%20Assertions%20expand%20upon%20the%20assertion%20functions%20from%20the%20%5B%60DSTest%60%5D(%2Freference%2Fds-test%23asserting)%20library.%0A%0A%23%23%23%23%20Std%20Cheats%0A%0AStd%20Cheats%20are%20wrappers%20around%20Forge%20cheatcodes%20that%20make%20them%20safer%20to%20use%20and%20improve%20the%20DX.%0A%0AYou%20can%20access%20Std%20Cheats%20by%20simply%20calling%20them%20inside%20your%20test%20contract%2C%20as%20you%20would%20any%20other%20internal%20function%3A%0A%0A%60%60%60solidity%0A%2F%2F%20set%20up%20a%20prank%20as%20Alice%20with%20100%20ETH%20balance%0Ahoax(alice%2C%20100%20ether)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Std%20Errors%0A%0AStd%20Errors%20provide%20wrappers%20around%20common%20internal%20Solidity%20errors%20and%20reverts.%0A%0AStd%20Errors%20are%20most%20useful%20in%20combination%20with%20the%20%5B%60expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert)%20cheatcode%2C%20as%20you%20do%20not%20need%20to%20remember%20the%20internal%20Solidity%20panic%20codes%20yourself.%20Note%20that%20you%20have%20to%20access%20them%20through%20%60stdError%60%2C%20as%20this%20is%20a%20library.%0A%0A%60%60%60solidity%0A%2F%2F%20expect%20an%20arithmetic%20error%20on%20the%20next%20call%20(e.g.%20underflow)%0Avm.expectRevert(stdError.arithmeticError)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Std%20Storage%0A%0AStd%20Storage%20makes%20manipulating%20contract%20storage%20easy.%20It%20can%20find%20and%20write%20to%20the%20storage%20slot(s)%20associated%20with%20a%20particular%20variable.%0A%0AThe%20%60Test%60%20contract%20already%20provides%20a%20%60StdStorage%60%20instance%20%60stdstore%60%20through%20which%20you%20can%20access%20any%20std-storage%20functionality.%20Note%20that%20you%20must%20add%20%60using%20stdStorage%20for%20StdStorage%60%20in%20your%20test%20contract%20first.%0A%0A%60%60%60solidity%0A%2F%2F%20find%20the%20variable%20%60score%60%20in%20the%20contract%20%60game%60%0A%2F%2F%20and%20change%20its%20value%20to%2010%0Astdstore%0A%20%20%20%20.target(address(game))%0A%20%20%20%20.sig(game.score.selector)%0A%20%20%20%20.checked_write(10)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Std%20Math%0A%0AStd%20Math%20is%20a%20library%20with%20useful%20mathematical%20functions%20that%20are%20not%20provided%20in%20Solidity.%0A%0ANote%20that%20you%20have%20to%20access%20them%20through%20%60stdMath%60%2C%20as%20this%20is%20a%20library.%0A%0A%60%60%60solidity%0A%2F%2F%20get%20the%20absolute%20value%20of%20-10%0Auint256%20ten%20%3D%20stdMath.abs(-10)%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Ainfo%0ASee%20the%20%5BForge%20Standard%20Library%20Reference%5D(%2Freference%2Fforge-std%2Foverview)%20for%20a%20complete%20overview%20of%20Forge%20Standard%20Library.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fork-testing-DRxNbPMB.js"),__vite__mapDeps([222,1])),path:"/forge/tests/fork-testing",type:"mdx",filePath:"forge/tests/fork-testing.md",content:"---%0Adescription%3A%20Test%20against%20live%20blockchain%20state%20using%20fork%20mode%20or%20forking%20cheatcodes%20for%20integration%20testing%20with%20real%20contracts.%0A---%0A%0A%23%23%20Fork%20Testing%0A%0AForge%20supports%20testing%20in%20a%20forked%20environment%20with%20two%20different%20approaches%3A%0A%0A-%20%5B**Forking%20Mode**%5D(%23forking-mode)%20%E2%80%94%C2%A0use%20a%20single%20fork%20for%20all%20your%20tests%20via%20the%20%60forge%20test%20--fork-url%60%20flag%0A-%20%5B**Forking%20Cheatcodes**%5D(%23forking-cheatcodes)%20%E2%80%94%20create%2C%20select%2C%20and%20manage%20multiple%20forks%20directly%20in%20Solidity%20test%20code%20via%20%5Bforking%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Fforking)%0A%0AWhich%20approach%20to%20use%3F%20Forking%20mode%20affords%20running%20an%20entire%20test%20suite%20against%20a%20specific%20forked%20environment%2C%20while%20forking%20cheatcodes%20provide%20more%20flexibility%20and%20expressiveness%20to%20work%20with%20multiple%20forks%20in%20your%20tests.%20Your%20particular%20use%20case%20and%20testing%20strategy%20will%20help%20inform%20which%20approach%20to%20use.%0A%0A%23%23%23%20Forking%20Mode%0A%0ATo%20run%20all%20tests%20in%20a%20forked%20environment%2C%20such%20as%20a%20forked%20Ethereum%20mainnet%2C%20pass%20an%20RPC%20URL%20via%20the%20%60--fork-url%60%20flag%3A%0A%0A%60%60%60bash%0Aforge%20test%20--fork-url%20%3Cyour_rpc_url%3E%0A%60%60%60%0A%0AThe%20following%20values%20are%20changed%20to%20reflect%20those%20of%20the%20chain%20at%20the%20moment%20of%20forking%3A%0A%0A-%20%5B%60block_number%60%5D(%2Fconfig%2Freference%2Ftesting%23block_number)%0A-%20%5B%60chain_id%60%5D(%2Fconfig%2Freference%2Ftesting%23chain_id)%0A-%20%5B%60gas_limit%60%5D(%2Fconfig%2Freference%2Ftesting%23gas_limit)%0A-%20%5B%60gas_price%60%5D(%2Fconfig%2Freference%2Ftesting%23gas_price)%0A-%20%5B%60block_base_fee_per_gas%60%5D(%2Fconfig%2Freference%2Ftesting%23block_base_fee_per_gas)%0A-%20%5B%60block_coinbase%60%5D(%2Fconfig%2Freference%2Ftesting%23block_coinbase)%0A-%20%5B%60block_timestamp%60%5D(%2Fconfig%2Freference%2Ftesting%23block_timestamp)%0A-%20%5B%60block_difficulty%60%5D(%2Fconfig%2Freference%2Ftesting%23block_difficulty)%0A%0AIt%20is%20possible%20to%20specify%20a%20block%20from%20which%20to%20fork%20with%20%60--fork-block-number%60%3A%0A%0A%60%60%60bash%0Aforge%20test%20--fork-url%20%3Cyour_rpc_url%3E%20--fork-block-number%201%0A%60%60%60%0A%0AForking%20is%20especially%20useful%20when%20you%20need%20to%20interact%20with%20existing%20contracts.%20You%20may%20choose%20to%20do%20integration%20testing%20this%20way%2C%20as%20if%20you%20were%20on%20an%20actual%20network.%0A%0A%23%23%23%23%20Caching%0A%0AIf%20both%20%60--fork-url%60%20and%20%60--fork-block-number%60%20are%20specified%2C%20then%20data%20for%20that%20block%20is%20cached%20for%20future%20test%20runs.%0A%0AThe%20data%20is%20cached%20in%20%60~%2F.foundry%2Fcache%2Frpc%2F%3Cchain%20name%3E%2F%3Cblock%20number%3E%60.%20To%20clear%20the%20cache%2C%20simply%20remove%20the%20directory%20or%20run%20%5B%60forge%20clean%60%5D(%2Fforge%2Freference%2Fforge-clean)%20(removes%20all%20build%20artifacts%20and%20cache%20directories).%0A%0AIt%20is%20also%20possible%20to%20ignore%20the%20cache%20entirely%20by%20passing%20%60--no-storage-caching%60%2C%20or%20with%20%60foundry.toml%60%20by%20configuring%20%5B%60no_storage_caching%60%5D(%2Fconfig%2Freference%2Ftesting%23no_storage_caching)%20and%20%5B%60rpc_storage_caching%60%5D(%2Fconfig%2Freference%2Ftesting%23rpc_storage_caching).%0A%0A%23%23%23%23%20Improved%20traces%0A%0AForge%20supports%20identifying%20contracts%20in%20a%20forked%20environment%20with%20Etherscan.%0A%0ATo%20use%20this%20feature%2C%20pass%20the%20Etherscan%20API%20key%20via%20the%20%60--etherscan-api-key%60%20flag%3A%0A%0A%60%60%60bash%0Aforge%20test%20--fork-url%20%3Cyour_rpc_url%3E%20--etherscan-api-key%20%3Cyour_etherscan_api_key%3E%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20set%20the%20%60ETHERSCAN_API_KEY%60%20environment%20variable.%0A%0A%23%23%23%20Forking%20Cheatcodes%0A%0AForking%20cheatcodes%20allow%20you%20to%20enter%20forking%20mode%20programmatically%20in%20your%20Solidity%20test%20code.%20Instead%20of%20configuring%20forking%20mode%20via%20%60forge%60%20CLI%20arguments%2C%20these%20cheatcodes%20allow%20you%20to%20use%20forking%20mode%20on%20a%20test-by-test%20basis%20and%20work%20with%20multiple%20forks%20in%20your%20tests.%20Each%20fork%20is%20identified%20via%20its%20own%20unique%20%60uint256%60%20identifier.%0A%0A%23%23%23%23%20Usage%0A%0AImportant%20to%20keep%20in%20mind%20that%20_all_%20test%20functions%20are%20isolated%2C%20meaning%20each%20test%20function%20is%20executed%20with%20a%20_copy_%20of%20the%20state%20_after_%20%60setUp%60%20and%20is%20executed%20in%20its%20own%20stand-alone%20EVM.%0A%0ATherefore%20forks%20created%20during%20%60setUp%60%20are%20available%20in%20tests.%20The%20code%20example%20below%20uses%20%5B%60createFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-fork)%20to%20create%20two%20forks%2C%20but%20does%20_not_%20select%20one%20initially.%20Each%20fork%20is%20identified%20with%20a%20unique%20identifier%20(%60uint256%20forkId%60)%2C%20which%20is%20assigned%20when%20it%20is%20first%20created.%0A%0AEnabling%20a%20specific%20fork%20is%20done%20via%20passing%20that%20%60forkId%60%20to%20%5B%60selectFork%60%5D(%2Freference%2Fcheatcodes%2Fselect-fork).%0A%0A%5B%60createSelectFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-select-fork)%20is%20a%20one-liner%20for%20%60createFork%60%20plus%20%60selectFork%60.%0A%0AThere%20can%20only%20be%20one%20fork%20active%20at%20a%20time%2C%20and%20the%20identifier%20for%20the%20currently%20active%20fork%20can%20be%20retrieved%20via%20%5B%60activeFork%60%5D(%2Freference%2Fcheatcodes%2Factive-fork).%0A%0ASimilar%20to%20%5B%60roll%60%5D(%2Freference%2Fcheatcodes%2Froll)%2C%20you%20can%20set%20%60block.number%60%20of%20a%20fork%20with%20%5B%60rollFork%60%5D(%2Freference%2Fcheatcodes%2Froll-fork).%0A%0ATo%20understand%20what%20happens%20when%20a%20fork%20is%20selected%2C%20it%20is%20important%20to%20know%20how%20the%20forking%20mode%20works%20in%20general%3A%0A%0AEach%20fork%20is%20a%20standalone%20EVM%2C%20i.e.%20all%20forks%20use%20completely%20independent%20storage.%20The%20only%20exception%20is%20the%20state%20of%20the%20%60msg.sender%60%20and%20the%20test%20contract%20itself%2C%20which%20are%20persistent%20across%20fork%20swaps.%0AIn%20other%20words%20all%20changes%20that%20are%20made%20while%20fork%20%60A%60%20is%20active%20(%60selectFork(A)%60)%20are%20only%20recorded%20in%20fork%20%60A%60's%20storage%20and%20are%20not%20available%20if%20another%20fork%20is%20selected.%20However%2C%20changes%20recorded%20in%20the%20test%20contract%20itself%20(variables)%20are%20still%20available%20because%20the%20test%20contract%20is%20a%20_persistent_%20account.%0A%0AThe%20%60selectFork%60%20cheatcode%20sets%20the%20_remote_%20section%20with%20the%20fork's%20data%20source%2C%20however%20the%20_local_%20memory%20remains%20persistent%20across%20fork%20swaps.%20This%20also%20means%20%60selectFork%60%20can%20be%20called%20at%20all%20times%20with%20any%20fork%2C%20to%20set%20the%20_remote_%20data%20source.%20However%2C%20it%20is%20important%20to%20keep%20in%20mind%20the%20above%20rules%20for%20%60read%2Fwrite%60%20access%20always%20apply%2C%20meaning%20_writes_%20are%20persistent%20across%20fork%20swaps.%0A%0A%23%23%23%23%20Examples%0A%0A%23%23%23%23%23%20Create%20and%20Select%20Forks%0A%0A%60%60%60solidity%0Acontract%20ForkTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20the%20identifiers%20of%20the%20forks%0A%20%20%20%20uint256%20mainnetFork%3B%0A%20%20%20%20uint256%20optimismFork%3B%0A%0A%20%20%20%20%2F%2FAccess%20variables%20from%20.env%20file%20via%20vm.envString(%22varname%22)%0A%20%20%20%20%2F%2FReplace%20ALCHEMY_KEY%20by%20your%20alchemy%20key%20or%20Etherscan%20key%2C%20change%20RPC%20url%20if%20need%0A%20%20%20%20%2F%2Finside%20your%20.env%20file%20e.g%3A%0A%20%20%20%20%2F%2FMAINNET_RPC_URL%20%3D%20'https%3A%2F%2Feth-mainnet.g.alchemy.com%2Fv2%2FALCHEMY_KEY'%0A%20%20%20%20%2F%2Fstring%20MAINNET_RPC_URL%20%3D%20vm.envString(%22MAINNET_RPC_URL%22)%3B%0A%20%20%20%20%2F%2Fstring%20OPTIMISM_RPC_URL%20%3D%20vm.envString(%22OPTIMISM_RPC_URL%22)%3B%0A%0A%20%20%20%20%2F%2F%20create%20two%20_different_%20forks%20during%20setup%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20mainnetFork%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0A%20%20%20%20%20%20%20%20optimismFork%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20demonstrate%20fork%20ids%20are%20unique%0A%20%20%20%20function%20testForkIdDiffer()%20public%20%7B%0A%20%20%20%20%20%20%20%20assert(mainnetFork%20!%3D%20optimismFork)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20select%20a%20specific%20fork%0A%20%20%20%20function%20testCanSelectFork()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20select%20the%20fork%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20mainnetFork)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20from%20here%20on%20data%20is%20fetched%20from%20the%20%60mainnetFork%60%20if%20the%20EVM%20requests%20it%20and%20written%20to%20the%20storage%20of%20%60mainnetFork%60%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20manage%20multiple%20forks%20in%20the%20same%20test%0A%20%20%20%20function%20testCanSwitchForks()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20mainnetFork)%3B%0A%0A%20%20%20%20%20%20%20%20vm.selectFork(optimismFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20optimismFork)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20forks%20can%20be%20created%20at%20all%20times%0A%20%20%20%20function%20testCanCreateAndSelectForkInOneStep()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20creates%20a%20new%20fork%20and%20also%20selects%20it%0A%20%20%20%20%20%20%20%20uint256%20anotherFork%20%3D%20vm.createSelectFork(MAINNET_RPC_URL)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20anotherFork)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20set%20%60block.number%60%20of%20a%20fork%0A%20%20%20%20function%20testCanSetForkBlockNumber()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20vm.rollFork(1_337_000)%3B%0A%0A%20%20%20%20%20%20%20%20assertEq(block.number%2C%201_337_000)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%23%20Separated%20and%20persistent%20storage%0A%0AAs%20mentioned%20each%20fork%20is%20essentially%20an%20independent%20EVM%20with%20separated%20storage.%0A%0AOnly%20the%20accounts%20of%20%60msg.sender%60%20and%20the%20test%20contract%20(%60ForkTest%60)%20are%20persistent%20when%20forks%20are%20selected.%20But%20any%20account%20can%20be%20turned%20into%20a%20persistent%20account%3A%20%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent).%0A%0AAn%20account%20that%20is%20_persistent_%20is%20unique%2C%20i.e.%20it%20exists%20on%20all%20forks%0A%0A%60%60%60solidity%0Acontract%20ForkTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20the%20identifiers%20of%20the%20forks%0A%20%20%20%20uint256%20mainnetFork%3B%0A%20%20%20%20uint256%20optimismFork%3B%0A%0A%20%20%20%20%2F%2FAccess%20variables%20from%20.env%20file%20via%20vm.envString(%22varname%22)%0A%20%20%20%20%2F%2FReplace%20ALCHEMY_KEY%20by%20your%20alchemy%20key%20or%20Etherscan%20key%2C%20change%20RPC%20url%20if%20need%0A%20%20%20%20%2F%2Finside%20your%20.env%20file%20e.g%3A%0A%20%20%20%20%2F%2FMAINNET_RPC_URL%20%3D%20'https%3A%2F%2Feth-mainnet.g.alchemy.com%2Fv2%2FALCHEMY_KEY'%0A%20%20%20%20%2F%2Fstring%20MAINNET_RPC_URL%20%3D%20vm.envString(%22MAINNET_RPC_URL%22)%3B%0A%20%20%20%20%2F%2Fstring%20OPTIMISM_RPC_URL%20%3D%20vm.envString(%22OPTIMISM_RPC_URL%22)%3B%0A%0A%20%20%20%20%2F%2F%20create%20two%20_different_%20forks%20during%20setup%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20mainnetFork%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0A%20%20%20%20%20%20%20%20optimismFork%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20creates%20a%20new%20contract%20while%20a%20fork%20is%20active%0A%20%20%20%20function%20testCreateContract()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20mainnetFork)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20the%20new%20contract%20is%20written%20to%20%60mainnetFork%60's%20storage%0A%20%20%20%20%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20and%20can%20be%20used%20as%20normal%0A%20%20%20%20%20%20%20%20simple.set(100)%3B%0A%20%20%20%20%20%20%20%20assertEq(simple.value()%2C%20100)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20after%20switching%20to%20another%20contract%20we%20still%20know%20%60address(simple)%60%20but%20the%20contract%20only%20lives%20in%20%60mainnetFork%60%0A%20%20%20%20%20%20%20%20vm.selectFork(optimismFork)%3B%0A%0A%20%20%20%20%20%20%20%20%2F*%20this%20call%20will%20therefore%20revert%20because%20%60simple%60%20now%20points%20to%20a%20contract%20that%20does%20not%20exist%20on%20the%20active%20fork%0A%20%20%20%20%20%20%20%20*%20it%20will%20produce%20following%20revert%20message%3A%0A%20%20%20%20%20%20%20%20*%0A%20%20%20%20%20%20%20%20*%20%22Contract%200xCe71065D4017F316EC606Fe4422e11eB2c47c246%20does%20not%20exist%20on%20active%20fork%20with%20id%20%601%60%0A%20%20%20%20%20%20%20%20*%20%20%20%20%20%20%20But%20exists%20on%20non%20active%20forks%3A%20%60%5B0%5D%60%22%0A%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%20%20simple.value()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%20%2F%2F%20creates%20a%20new%20_persistent_%20contract%20while%20a%20fork%20is%20active%0A%20%20%20%20%20function%20testCreatePersistentContract()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%20%20%20%20%20%20%20%20simple.set(100)%3B%0A%20%20%20%20%20%20%20%20assertEq(simple.value()%2C%20100)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20mark%20the%20contract%20as%20persistent%20so%20it%20is%20also%20available%20when%20other%20forks%20are%20active%0A%20%20%20%20%20%20%20%20vm.makePersistent(address(simple))%3B%0A%20%20%20%20%20%20%20%20assert(vm.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%20%20%20%20vm.selectFork(optimismFork)%3B%0A%20%20%20%20%20%20%20%20assert(vm.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20This%20will%20succeed%20because%20the%20contract%20is%20now%20also%20available%20on%20the%20%60optimismFork%60%0A%20%20%20%20%20%20%20%20assertEq(simple.value()%2C%20100)%3B%0A%20%20%20%20%20%7D%0A%7D%0A%0Acontract%20SimpleStorageContract%20%7B%0A%20%20%20%20uint256%20public%20value%3B%0A%0A%20%20%20%20function%20set(uint256%20_value)%20public%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20_value%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AFor%20more%20details%20and%20examples%2C%20see%20the%20%5Bforking%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Fforking)%20reference.%0A%0A%23%23%23%20EVM%20version%0A%0AProper%20configuration%20is%20needed%20to%20execute%20forked%20tests%20with%20chains%20using%20different%20EVM%20versions%3A%0A%0A-%20if%20same%20EVM%20version%20applies%20for%20all%20forked%20chains%20used%2C%20then%20it%20can%20be%20globally%20configured%20in%20%60foundry.toml%60%20file%0A%0A%60%60%60toml%0Aevm_version%20%3D%20%22prague%22%0A%60%60%60%0A%0A-%20if%20different%20EVM%20versions%20are%20used%2C%20specific%20EVM%20test%20version%20can%20be%20set%20using%20inline%20configuration%0A%0A%60%60%60solidity%0A%2F%2F%2F%20forge-config%3A%20default.evm_version%20%3D%20%22shanghai%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fork-testing-DRxNbPMB.js"),__vite__mapDeps([222,1])),path:"/forge/tests/fork-testing.html",type:"mdx",filePath:"forge/tests/fork-testing.md",content:"---%0Adescription%3A%20Test%20against%20live%20blockchain%20state%20using%20fork%20mode%20or%20forking%20cheatcodes%20for%20integration%20testing%20with%20real%20contracts.%0A---%0A%0A%23%23%20Fork%20Testing%0A%0AForge%20supports%20testing%20in%20a%20forked%20environment%20with%20two%20different%20approaches%3A%0A%0A-%20%5B**Forking%20Mode**%5D(%23forking-mode)%20%E2%80%94%C2%A0use%20a%20single%20fork%20for%20all%20your%20tests%20via%20the%20%60forge%20test%20--fork-url%60%20flag%0A-%20%5B**Forking%20Cheatcodes**%5D(%23forking-cheatcodes)%20%E2%80%94%20create%2C%20select%2C%20and%20manage%20multiple%20forks%20directly%20in%20Solidity%20test%20code%20via%20%5Bforking%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Fforking)%0A%0AWhich%20approach%20to%20use%3F%20Forking%20mode%20affords%20running%20an%20entire%20test%20suite%20against%20a%20specific%20forked%20environment%2C%20while%20forking%20cheatcodes%20provide%20more%20flexibility%20and%20expressiveness%20to%20work%20with%20multiple%20forks%20in%20your%20tests.%20Your%20particular%20use%20case%20and%20testing%20strategy%20will%20help%20inform%20which%20approach%20to%20use.%0A%0A%23%23%23%20Forking%20Mode%0A%0ATo%20run%20all%20tests%20in%20a%20forked%20environment%2C%20such%20as%20a%20forked%20Ethereum%20mainnet%2C%20pass%20an%20RPC%20URL%20via%20the%20%60--fork-url%60%20flag%3A%0A%0A%60%60%60bash%0Aforge%20test%20--fork-url%20%3Cyour_rpc_url%3E%0A%60%60%60%0A%0AThe%20following%20values%20are%20changed%20to%20reflect%20those%20of%20the%20chain%20at%20the%20moment%20of%20forking%3A%0A%0A-%20%5B%60block_number%60%5D(%2Fconfig%2Freference%2Ftesting%23block_number)%0A-%20%5B%60chain_id%60%5D(%2Fconfig%2Freference%2Ftesting%23chain_id)%0A-%20%5B%60gas_limit%60%5D(%2Fconfig%2Freference%2Ftesting%23gas_limit)%0A-%20%5B%60gas_price%60%5D(%2Fconfig%2Freference%2Ftesting%23gas_price)%0A-%20%5B%60block_base_fee_per_gas%60%5D(%2Fconfig%2Freference%2Ftesting%23block_base_fee_per_gas)%0A-%20%5B%60block_coinbase%60%5D(%2Fconfig%2Freference%2Ftesting%23block_coinbase)%0A-%20%5B%60block_timestamp%60%5D(%2Fconfig%2Freference%2Ftesting%23block_timestamp)%0A-%20%5B%60block_difficulty%60%5D(%2Fconfig%2Freference%2Ftesting%23block_difficulty)%0A%0AIt%20is%20possible%20to%20specify%20a%20block%20from%20which%20to%20fork%20with%20%60--fork-block-number%60%3A%0A%0A%60%60%60bash%0Aforge%20test%20--fork-url%20%3Cyour_rpc_url%3E%20--fork-block-number%201%0A%60%60%60%0A%0AForking%20is%20especially%20useful%20when%20you%20need%20to%20interact%20with%20existing%20contracts.%20You%20may%20choose%20to%20do%20integration%20testing%20this%20way%2C%20as%20if%20you%20were%20on%20an%20actual%20network.%0A%0A%23%23%23%23%20Caching%0A%0AIf%20both%20%60--fork-url%60%20and%20%60--fork-block-number%60%20are%20specified%2C%20then%20data%20for%20that%20block%20is%20cached%20for%20future%20test%20runs.%0A%0AThe%20data%20is%20cached%20in%20%60~%2F.foundry%2Fcache%2Frpc%2F%3Cchain%20name%3E%2F%3Cblock%20number%3E%60.%20To%20clear%20the%20cache%2C%20simply%20remove%20the%20directory%20or%20run%20%5B%60forge%20clean%60%5D(%2Fforge%2Freference%2Fforge-clean)%20(removes%20all%20build%20artifacts%20and%20cache%20directories).%0A%0AIt%20is%20also%20possible%20to%20ignore%20the%20cache%20entirely%20by%20passing%20%60--no-storage-caching%60%2C%20or%20with%20%60foundry.toml%60%20by%20configuring%20%5B%60no_storage_caching%60%5D(%2Fconfig%2Freference%2Ftesting%23no_storage_caching)%20and%20%5B%60rpc_storage_caching%60%5D(%2Fconfig%2Freference%2Ftesting%23rpc_storage_caching).%0A%0A%23%23%23%23%20Improved%20traces%0A%0AForge%20supports%20identifying%20contracts%20in%20a%20forked%20environment%20with%20Etherscan.%0A%0ATo%20use%20this%20feature%2C%20pass%20the%20Etherscan%20API%20key%20via%20the%20%60--etherscan-api-key%60%20flag%3A%0A%0A%60%60%60bash%0Aforge%20test%20--fork-url%20%3Cyour_rpc_url%3E%20--etherscan-api-key%20%3Cyour_etherscan_api_key%3E%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20set%20the%20%60ETHERSCAN_API_KEY%60%20environment%20variable.%0A%0A%23%23%23%20Forking%20Cheatcodes%0A%0AForking%20cheatcodes%20allow%20you%20to%20enter%20forking%20mode%20programmatically%20in%20your%20Solidity%20test%20code.%20Instead%20of%20configuring%20forking%20mode%20via%20%60forge%60%20CLI%20arguments%2C%20these%20cheatcodes%20allow%20you%20to%20use%20forking%20mode%20on%20a%20test-by-test%20basis%20and%20work%20with%20multiple%20forks%20in%20your%20tests.%20Each%20fork%20is%20identified%20via%20its%20own%20unique%20%60uint256%60%20identifier.%0A%0A%23%23%23%23%20Usage%0A%0AImportant%20to%20keep%20in%20mind%20that%20_all_%20test%20functions%20are%20isolated%2C%20meaning%20each%20test%20function%20is%20executed%20with%20a%20_copy_%20of%20the%20state%20_after_%20%60setUp%60%20and%20is%20executed%20in%20its%20own%20stand-alone%20EVM.%0A%0ATherefore%20forks%20created%20during%20%60setUp%60%20are%20available%20in%20tests.%20The%20code%20example%20below%20uses%20%5B%60createFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-fork)%20to%20create%20two%20forks%2C%20but%20does%20_not_%20select%20one%20initially.%20Each%20fork%20is%20identified%20with%20a%20unique%20identifier%20(%60uint256%20forkId%60)%2C%20which%20is%20assigned%20when%20it%20is%20first%20created.%0A%0AEnabling%20a%20specific%20fork%20is%20done%20via%20passing%20that%20%60forkId%60%20to%20%5B%60selectFork%60%5D(%2Freference%2Fcheatcodes%2Fselect-fork).%0A%0A%5B%60createSelectFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-select-fork)%20is%20a%20one-liner%20for%20%60createFork%60%20plus%20%60selectFork%60.%0A%0AThere%20can%20only%20be%20one%20fork%20active%20at%20a%20time%2C%20and%20the%20identifier%20for%20the%20currently%20active%20fork%20can%20be%20retrieved%20via%20%5B%60activeFork%60%5D(%2Freference%2Fcheatcodes%2Factive-fork).%0A%0ASimilar%20to%20%5B%60roll%60%5D(%2Freference%2Fcheatcodes%2Froll)%2C%20you%20can%20set%20%60block.number%60%20of%20a%20fork%20with%20%5B%60rollFork%60%5D(%2Freference%2Fcheatcodes%2Froll-fork).%0A%0ATo%20understand%20what%20happens%20when%20a%20fork%20is%20selected%2C%20it%20is%20important%20to%20know%20how%20the%20forking%20mode%20works%20in%20general%3A%0A%0AEach%20fork%20is%20a%20standalone%20EVM%2C%20i.e.%20all%20forks%20use%20completely%20independent%20storage.%20The%20only%20exception%20is%20the%20state%20of%20the%20%60msg.sender%60%20and%20the%20test%20contract%20itself%2C%20which%20are%20persistent%20across%20fork%20swaps.%0AIn%20other%20words%20all%20changes%20that%20are%20made%20while%20fork%20%60A%60%20is%20active%20(%60selectFork(A)%60)%20are%20only%20recorded%20in%20fork%20%60A%60's%20storage%20and%20are%20not%20available%20if%20another%20fork%20is%20selected.%20However%2C%20changes%20recorded%20in%20the%20test%20contract%20itself%20(variables)%20are%20still%20available%20because%20the%20test%20contract%20is%20a%20_persistent_%20account.%0A%0AThe%20%60selectFork%60%20cheatcode%20sets%20the%20_remote_%20section%20with%20the%20fork's%20data%20source%2C%20however%20the%20_local_%20memory%20remains%20persistent%20across%20fork%20swaps.%20This%20also%20means%20%60selectFork%60%20can%20be%20called%20at%20all%20times%20with%20any%20fork%2C%20to%20set%20the%20_remote_%20data%20source.%20However%2C%20it%20is%20important%20to%20keep%20in%20mind%20the%20above%20rules%20for%20%60read%2Fwrite%60%20access%20always%20apply%2C%20meaning%20_writes_%20are%20persistent%20across%20fork%20swaps.%0A%0A%23%23%23%23%20Examples%0A%0A%23%23%23%23%23%20Create%20and%20Select%20Forks%0A%0A%60%60%60solidity%0Acontract%20ForkTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20the%20identifiers%20of%20the%20forks%0A%20%20%20%20uint256%20mainnetFork%3B%0A%20%20%20%20uint256%20optimismFork%3B%0A%0A%20%20%20%20%2F%2FAccess%20variables%20from%20.env%20file%20via%20vm.envString(%22varname%22)%0A%20%20%20%20%2F%2FReplace%20ALCHEMY_KEY%20by%20your%20alchemy%20key%20or%20Etherscan%20key%2C%20change%20RPC%20url%20if%20need%0A%20%20%20%20%2F%2Finside%20your%20.env%20file%20e.g%3A%0A%20%20%20%20%2F%2FMAINNET_RPC_URL%20%3D%20'https%3A%2F%2Feth-mainnet.g.alchemy.com%2Fv2%2FALCHEMY_KEY'%0A%20%20%20%20%2F%2Fstring%20MAINNET_RPC_URL%20%3D%20vm.envString(%22MAINNET_RPC_URL%22)%3B%0A%20%20%20%20%2F%2Fstring%20OPTIMISM_RPC_URL%20%3D%20vm.envString(%22OPTIMISM_RPC_URL%22)%3B%0A%0A%20%20%20%20%2F%2F%20create%20two%20_different_%20forks%20during%20setup%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20mainnetFork%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0A%20%20%20%20%20%20%20%20optimismFork%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20demonstrate%20fork%20ids%20are%20unique%0A%20%20%20%20function%20testForkIdDiffer()%20public%20%7B%0A%20%20%20%20%20%20%20%20assert(mainnetFork%20!%3D%20optimismFork)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20select%20a%20specific%20fork%0A%20%20%20%20function%20testCanSelectFork()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20select%20the%20fork%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20mainnetFork)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20from%20here%20on%20data%20is%20fetched%20from%20the%20%60mainnetFork%60%20if%20the%20EVM%20requests%20it%20and%20written%20to%20the%20storage%20of%20%60mainnetFork%60%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20manage%20multiple%20forks%20in%20the%20same%20test%0A%20%20%20%20function%20testCanSwitchForks()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20mainnetFork)%3B%0A%0A%20%20%20%20%20%20%20%20vm.selectFork(optimismFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20optimismFork)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20forks%20can%20be%20created%20at%20all%20times%0A%20%20%20%20function%20testCanCreateAndSelectForkInOneStep()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20creates%20a%20new%20fork%20and%20also%20selects%20it%0A%20%20%20%20%20%20%20%20uint256%20anotherFork%20%3D%20vm.createSelectFork(MAINNET_RPC_URL)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20anotherFork)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20set%20%60block.number%60%20of%20a%20fork%0A%20%20%20%20function%20testCanSetForkBlockNumber()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20vm.rollFork(1_337_000)%3B%0A%0A%20%20%20%20%20%20%20%20assertEq(block.number%2C%201_337_000)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%23%20Separated%20and%20persistent%20storage%0A%0AAs%20mentioned%20each%20fork%20is%20essentially%20an%20independent%20EVM%20with%20separated%20storage.%0A%0AOnly%20the%20accounts%20of%20%60msg.sender%60%20and%20the%20test%20contract%20(%60ForkTest%60)%20are%20persistent%20when%20forks%20are%20selected.%20But%20any%20account%20can%20be%20turned%20into%20a%20persistent%20account%3A%20%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent).%0A%0AAn%20account%20that%20is%20_persistent_%20is%20unique%2C%20i.e.%20it%20exists%20on%20all%20forks%0A%0A%60%60%60solidity%0Acontract%20ForkTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20the%20identifiers%20of%20the%20forks%0A%20%20%20%20uint256%20mainnetFork%3B%0A%20%20%20%20uint256%20optimismFork%3B%0A%0A%20%20%20%20%2F%2FAccess%20variables%20from%20.env%20file%20via%20vm.envString(%22varname%22)%0A%20%20%20%20%2F%2FReplace%20ALCHEMY_KEY%20by%20your%20alchemy%20key%20or%20Etherscan%20key%2C%20change%20RPC%20url%20if%20need%0A%20%20%20%20%2F%2Finside%20your%20.env%20file%20e.g%3A%0A%20%20%20%20%2F%2FMAINNET_RPC_URL%20%3D%20'https%3A%2F%2Feth-mainnet.g.alchemy.com%2Fv2%2FALCHEMY_KEY'%0A%20%20%20%20%2F%2Fstring%20MAINNET_RPC_URL%20%3D%20vm.envString(%22MAINNET_RPC_URL%22)%3B%0A%20%20%20%20%2F%2Fstring%20OPTIMISM_RPC_URL%20%3D%20vm.envString(%22OPTIMISM_RPC_URL%22)%3B%0A%0A%20%20%20%20%2F%2F%20create%20two%20_different_%20forks%20during%20setup%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20mainnetFork%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0A%20%20%20%20%20%20%20%20optimismFork%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20creates%20a%20new%20contract%20while%20a%20fork%20is%20active%0A%20%20%20%20function%20testCreateContract()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20assertEq(vm.activeFork()%2C%20mainnetFork)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20the%20new%20contract%20is%20written%20to%20%60mainnetFork%60's%20storage%0A%20%20%20%20%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20and%20can%20be%20used%20as%20normal%0A%20%20%20%20%20%20%20%20simple.set(100)%3B%0A%20%20%20%20%20%20%20%20assertEq(simple.value()%2C%20100)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20after%20switching%20to%20another%20contract%20we%20still%20know%20%60address(simple)%60%20but%20the%20contract%20only%20lives%20in%20%60mainnetFork%60%0A%20%20%20%20%20%20%20%20vm.selectFork(optimismFork)%3B%0A%0A%20%20%20%20%20%20%20%20%2F*%20this%20call%20will%20therefore%20revert%20because%20%60simple%60%20now%20points%20to%20a%20contract%20that%20does%20not%20exist%20on%20the%20active%20fork%0A%20%20%20%20%20%20%20%20*%20it%20will%20produce%20following%20revert%20message%3A%0A%20%20%20%20%20%20%20%20*%0A%20%20%20%20%20%20%20%20*%20%22Contract%200xCe71065D4017F316EC606Fe4422e11eB2c47c246%20does%20not%20exist%20on%20active%20fork%20with%20id%20%601%60%0A%20%20%20%20%20%20%20%20*%20%20%20%20%20%20%20But%20exists%20on%20non%20active%20forks%3A%20%60%5B0%5D%60%22%0A%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%20%20simple.value()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%20%2F%2F%20creates%20a%20new%20_persistent_%20contract%20while%20a%20fork%20is%20active%0A%20%20%20%20%20function%20testCreatePersistentContract()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.selectFork(mainnetFork)%3B%0A%20%20%20%20%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%20%20%20%20%20%20%20%20simple.set(100)%3B%0A%20%20%20%20%20%20%20%20assertEq(simple.value()%2C%20100)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20mark%20the%20contract%20as%20persistent%20so%20it%20is%20also%20available%20when%20other%20forks%20are%20active%0A%20%20%20%20%20%20%20%20vm.makePersistent(address(simple))%3B%0A%20%20%20%20%20%20%20%20assert(vm.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%20%20%20%20vm.selectFork(optimismFork)%3B%0A%20%20%20%20%20%20%20%20assert(vm.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20This%20will%20succeed%20because%20the%20contract%20is%20now%20also%20available%20on%20the%20%60optimismFork%60%0A%20%20%20%20%20%20%20%20assertEq(simple.value()%2C%20100)%3B%0A%20%20%20%20%20%7D%0A%7D%0A%0Acontract%20SimpleStorageContract%20%7B%0A%20%20%20%20uint256%20public%20value%3B%0A%0A%20%20%20%20function%20set(uint256%20_value)%20public%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20_value%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AFor%20more%20details%20and%20examples%2C%20see%20the%20%5Bforking%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Fforking)%20reference.%0A%0A%23%23%23%20EVM%20version%0A%0AProper%20configuration%20is%20needed%20to%20execute%20forked%20tests%20with%20chains%20using%20different%20EVM%20versions%3A%0A%0A-%20if%20same%20EVM%20version%20applies%20for%20all%20forked%20chains%20used%2C%20then%20it%20can%20be%20globally%20configured%20in%20%60foundry.toml%60%20file%0A%0A%60%60%60toml%0Aevm_version%20%3D%20%22prague%22%0A%60%60%60%0A%0A-%20if%20different%20EVM%20versions%20are%20used%2C%20specific%20EVM%20test%20version%20can%20be%20set%20using%20inline%20configuration%0A%0A%60%60%60solidity%0A%2F%2F%2F%20forge-config%3A%20default.evm_version%20%3D%20%22shanghai%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Bw5cXeOG.js"),__vite__mapDeps([223,1])),path:"/forge/tests/overview",type:"mdx",filePath:"forge/tests/overview.md",content:"---%0Adescription%3A%20Test%20smart%20contract%20using%20forge%20test.%0A---%0A%0A%23%23%20Tests%0A%0AForge%20can%20run%20your%20tests%20with%20the%20%5B%60forge%20test%60%5D(%2Fforge%2Freference%2Fforge-test)%20command.%20All%20tests%20are%20written%20in%20Solidity.%0A%0AForge%20will%20look%20for%20the%20tests%20anywhere%20in%20your%20source%20directory.%20Any%20contract%20with%20a%20function%20that%20starts%20with%20%60test%60%20is%20considered%20to%20be%20a%20test.%20Usually%2C%20tests%20will%20be%20placed%20in%20%60test%2F%60%20by%20convention%20and%20end%20with%20%60.t.sol%60.%0A%0AHere's%20an%20example%20of%20running%20%60forge%20test%60%20in%20a%20freshly%20created%20project%2C%20that%20only%20has%20the%20default%20test%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-test%3Aall%5D%0A%60%60%60%0A%0AYou%20can%20also%20run%20specific%20tests%20by%20passing%20a%20filter%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ftest_filters%2Fforge-test-match-contract-and-test%3Aall%5D%0A%60%60%60%0A%0AThis%20will%20run%20the%20tests%20in%20the%20%60ComplicatedContractTest%60%20test%20contract%20with%20%60testDeposit%60%20in%20the%20name.%0AInverse%20versions%20of%20these%20flags%20also%20exist%20(%60--no-match-contract%60%20and%20%60--no-match-test%60).%0A%0AYou%20can%20run%20tests%20in%20filenames%20that%20match%20a%20glob%20pattern%20with%20%60--match-path%60.%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ftest_filters%2Fforge-test-match-path%3Aall%5D%0A%60%60%60%0A%0AThe%20inverse%20of%20the%20%60--match-path%60%20flag%20is%20%60--no-match-path%60.%0A%0A%23%23%23%20Logs%20and%20traces%0A%0AThe%20default%20behavior%20for%20%60forge%20test%60%20is%20to%20only%20display%20a%20summary%20of%20passing%20and%20failing%20tests.%20You%20can%20control%20this%20behavior%20by%20increasing%20the%20verbosity%20(using%20the%20%60-v%60%20flag).%20Each%20level%20of%20verbosity%20adds%20more%20information%3A%0A%0A-%20**Level%202%20(%60-vv%60)**%3A%20Logs%20emitted%20during%20tests%20are%20also%20displayed.%20That%20includes%20assertion%20errors%20from%20tests%2C%20showing%20information%20such%20as%20expected%20vs%20actual.%0A-%20**Level%203%20(%60-vvv%60)**%3A%20Stack%20traces%20for%20failing%20tests%20are%20also%20displayed.%0A-%20**Level%204%20(%60-vvvv%60)**%3A%20Stack%20traces%20for%20all%20tests%20are%20displayed%2C%20and%20setup%20traces%20for%20failing%20tests%20are%20displayed.%0A-%20**Level%205%20(%60-vvvvv%60)**%3A%20Stack%20traces%20and%20setup%20traces%20are%20always%20displayed.%0A%0A%23%23%23%20Watch%20mode%0A%0AForge%20can%20re-run%20your%20tests%20when%20you%20make%20changes%20to%20your%20files%20using%20%60forge%20test%20--watch%60.%0A%0ABy%20default%2C%20only%20changed%20test%20files%20are%20re-run.%20If%20you%20want%20to%20re-run%20all%20tests%20on%20a%20change%2C%20you%20can%20use%20%60forge%20test%20--watch%20--run-all%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Bw5cXeOG.js"),__vite__mapDeps([223,1])),path:"/forge/tests/overview.html",type:"mdx",filePath:"forge/tests/overview.md",content:"---%0Adescription%3A%20Test%20smart%20contract%20using%20forge%20test.%0A---%0A%0A%23%23%20Tests%0A%0AForge%20can%20run%20your%20tests%20with%20the%20%5B%60forge%20test%60%5D(%2Fforge%2Freference%2Fforge-test)%20command.%20All%20tests%20are%20written%20in%20Solidity.%0A%0AForge%20will%20look%20for%20the%20tests%20anywhere%20in%20your%20source%20directory.%20Any%20contract%20with%20a%20function%20that%20starts%20with%20%60test%60%20is%20considered%20to%20be%20a%20test.%20Usually%2C%20tests%20will%20be%20placed%20in%20%60test%2F%60%20by%20convention%20and%20end%20with%20%60.t.sol%60.%0A%0AHere's%20an%20example%20of%20running%20%60forge%20test%60%20in%20a%20freshly%20created%20project%2C%20that%20only%20has%20the%20default%20test%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-test%3Aall%5D%0A%60%60%60%0A%0AYou%20can%20also%20run%20specific%20tests%20by%20passing%20a%20filter%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ftest_filters%2Fforge-test-match-contract-and-test%3Aall%5D%0A%60%60%60%0A%0AThis%20will%20run%20the%20tests%20in%20the%20%60ComplicatedContractTest%60%20test%20contract%20with%20%60testDeposit%60%20in%20the%20name.%0AInverse%20versions%20of%20these%20flags%20also%20exist%20(%60--no-match-contract%60%20and%20%60--no-match-test%60).%0A%0AYou%20can%20run%20tests%20in%20filenames%20that%20match%20a%20glob%20pattern%20with%20%60--match-path%60.%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Ftest_filters%2Fforge-test-match-path%3Aall%5D%0A%60%60%60%0A%0AThe%20inverse%20of%20the%20%60--match-path%60%20flag%20is%20%60--no-match-path%60.%0A%0A%23%23%23%20Logs%20and%20traces%0A%0AThe%20default%20behavior%20for%20%60forge%20test%60%20is%20to%20only%20display%20a%20summary%20of%20passing%20and%20failing%20tests.%20You%20can%20control%20this%20behavior%20by%20increasing%20the%20verbosity%20(using%20the%20%60-v%60%20flag).%20Each%20level%20of%20verbosity%20adds%20more%20information%3A%0A%0A-%20**Level%202%20(%60-vv%60)**%3A%20Logs%20emitted%20during%20tests%20are%20also%20displayed.%20That%20includes%20assertion%20errors%20from%20tests%2C%20showing%20information%20such%20as%20expected%20vs%20actual.%0A-%20**Level%203%20(%60-vvv%60)**%3A%20Stack%20traces%20for%20failing%20tests%20are%20also%20displayed.%0A-%20**Level%204%20(%60-vvvv%60)**%3A%20Stack%20traces%20for%20all%20tests%20are%20displayed%2C%20and%20setup%20traces%20for%20failing%20tests%20are%20displayed.%0A-%20**Level%205%20(%60-vvvvv%60)**%3A%20Stack%20traces%20and%20setup%20traces%20are%20always%20displayed.%0A%0A%23%23%23%20Watch%20mode%0A%0AForge%20can%20re-run%20your%20tests%20when%20you%20make%20changes%20to%20your%20files%20using%20%60forge%20test%20--watch%60.%0A%0ABy%20default%2C%20only%20changed%20test%20files%20are%20re-run.%20If%20you%20want%20to%20re-run%20all%20tests%20on%20a%20change%2C%20you%20can%20use%20%60forge%20test%20--watch%20--run-all%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./replay-testing-lHXYdTAN.js"),__vite__mapDeps([224,1])),path:"/forge/tests/replay-testing",type:"mdx",filePath:"forge/tests/replay-testing.md",content:"---%0Adescription%3A%20Replay%20test%20failures%20incrementally%20using%20persisted%20failure%20data%20for%20fuzz%20tests%2C%20invariant%20tests%2C%20and%20unit%20tests.%0A---%0A%0A%23%23%20Replaying%20Failures%0A%0AForge%20supports%20incrementally%20replaying%20last%20test%20run%20failures%20by%20persisting%20them%20on%20the%20disk.%0A%0A%23%23%23%20Rerun%20failures%0A%0AThe%20%60--rerun%60%20option%20can%20be%20used%20to%20omit%20successful%20tests%20and%20replay%20recorded%20failures%20only%3A%0A%0A%60%60%60bash%0Aforge%20test%20--rerun%0A%60%60%60%0A%0AThe%20failed%20tests%20are%20written%20in%20%60~%2F.foundry%2Fcache%2Ftest-failures%60%20file.%20This%20file%20is%20updated%20each%20time%20%60forge%20test%60%20is%20performed%2C%20so%20it%20reflects%20failures%20from%20the%20last%20run.%0A%0A%23%23%23%20Fuzz%20tests%20failures%0A%0AForge%20saves%20all%20fuzz%20tests%20counterexamples%20and%20replays%20them%20before%20new%20test%20campaigns%20are%20started%20(This%20is%20done%20in%20order%20to%20ensure%20there%20is%20no%20regression%20introduced).%0AFuzz%20tests%20failures%20encountered%20in%20several%20runs%20are%20by%20default%20persisted%20in%20%60~%2F.foundry%2Fcache%2Ffuzz%2Ffailures%60%20file.%20The%20file%20content%20is%20not%20replaced%20by%20subsequent%20test%20runs%2C%20but%20new%20records%20are%20added%20to%20existing%20entries.%0A%0AThe%20default%20file%20used%20to%20persist%20and%20rerun%20fuzz%20test%20failures%20from%20can%20be%20changed%20in%20foundry.toml%3A%0A%0A%60%60%60toml%0A%5Bfuzz%5D%0Afailure_persist_file%3D%22%2Ftests%2Ffailures.txt%22%0A%60%60%60%0A%0Aor%20by%20using%20inline%20config%0A%0A%60%60%60solidity%0A%2F%2F%2F%20forge-config%3A%20default.fuzz.failure-persist-file%20%3D%20%2Ftests%2Ffailures.txt%0A%60%60%60%0A%0A%23%23%23%20Invariant%20tests%20failures%0A%0AFailures%20from%20invariant%20tests%20are%20saved%20and%20replayed%20before%20new%20test%20campaigns%20are%20started%2C%20similar%20with%20fuzz%20tests.%20The%20difference%20is%20that%20the%20failed%20sequences%20are%20persisted%20in%20individual%20files%2C%20with%20specific%20%60~%2F.foundry%2Fcache%2Finvariant%2Ffailures%2F%7BTEST_SUITE_NAME%7D%2F%7BINVARIANT_NAME%7D%60%20default%20path.%20Content%20of%20this%20file%20is%20replaced%20only%20when%20a%20different%20counterexample%20is%20found.%0A%0AThe%20default%20directory%20to%20persist%20invariant%20test%20failures%20can%20be%20changed%20in%20foundry.toml%3A%0A%0A%60%60%60toml%0A%5Binvariant%5D%0Afailure_persist_dir%3D%22%2Ftests%2Fdir%22%0A%60%60%60%0A%0Aor%20by%20using%20inline%20config%0A%0A%60%60%60Solidity%0A%2F%2F%2F%20forge-config%3A%20default.invariant.failure-persist-dir%20%3D%20%2Ftests%2Fdir%0A%60%60%60%0A%0A%23%23%23%20Remove%20persisted%20failures%0A%0ATo%20ignore%20saved%20failures%20and%20start%20a%20clean%20test%20campaign%2C%20simply%20remove%20the%20persisted%20files%20or%20run%20%5B%60forge%20clean%60%5D(%2Fforge%2Freference%2Fforge-clean)%20(removes%20all%20build%20artifacts%20and%20cache%20directories).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./replay-testing-lHXYdTAN.js"),__vite__mapDeps([224,1])),path:"/forge/tests/replay-testing.html",type:"mdx",filePath:"forge/tests/replay-testing.md",content:"---%0Adescription%3A%20Replay%20test%20failures%20incrementally%20using%20persisted%20failure%20data%20for%20fuzz%20tests%2C%20invariant%20tests%2C%20and%20unit%20tests.%0A---%0A%0A%23%23%20Replaying%20Failures%0A%0AForge%20supports%20incrementally%20replaying%20last%20test%20run%20failures%20by%20persisting%20them%20on%20the%20disk.%0A%0A%23%23%23%20Rerun%20failures%0A%0AThe%20%60--rerun%60%20option%20can%20be%20used%20to%20omit%20successful%20tests%20and%20replay%20recorded%20failures%20only%3A%0A%0A%60%60%60bash%0Aforge%20test%20--rerun%0A%60%60%60%0A%0AThe%20failed%20tests%20are%20written%20in%20%60~%2F.foundry%2Fcache%2Ftest-failures%60%20file.%20This%20file%20is%20updated%20each%20time%20%60forge%20test%60%20is%20performed%2C%20so%20it%20reflects%20failures%20from%20the%20last%20run.%0A%0A%23%23%23%20Fuzz%20tests%20failures%0A%0AForge%20saves%20all%20fuzz%20tests%20counterexamples%20and%20replays%20them%20before%20new%20test%20campaigns%20are%20started%20(This%20is%20done%20in%20order%20to%20ensure%20there%20is%20no%20regression%20introduced).%0AFuzz%20tests%20failures%20encountered%20in%20several%20runs%20are%20by%20default%20persisted%20in%20%60~%2F.foundry%2Fcache%2Ffuzz%2Ffailures%60%20file.%20The%20file%20content%20is%20not%20replaced%20by%20subsequent%20test%20runs%2C%20but%20new%20records%20are%20added%20to%20existing%20entries.%0A%0AThe%20default%20file%20used%20to%20persist%20and%20rerun%20fuzz%20test%20failures%20from%20can%20be%20changed%20in%20foundry.toml%3A%0A%0A%60%60%60toml%0A%5Bfuzz%5D%0Afailure_persist_file%3D%22%2Ftests%2Ffailures.txt%22%0A%60%60%60%0A%0Aor%20by%20using%20inline%20config%0A%0A%60%60%60solidity%0A%2F%2F%2F%20forge-config%3A%20default.fuzz.failure-persist-file%20%3D%20%2Ftests%2Ffailures.txt%0A%60%60%60%0A%0A%23%23%23%20Invariant%20tests%20failures%0A%0AFailures%20from%20invariant%20tests%20are%20saved%20and%20replayed%20before%20new%20test%20campaigns%20are%20started%2C%20similar%20with%20fuzz%20tests.%20The%20difference%20is%20that%20the%20failed%20sequences%20are%20persisted%20in%20individual%20files%2C%20with%20specific%20%60~%2F.foundry%2Fcache%2Finvariant%2Ffailures%2F%7BTEST_SUITE_NAME%7D%2F%7BINVARIANT_NAME%7D%60%20default%20path.%20Content%20of%20this%20file%20is%20replaced%20only%20when%20a%20different%20counterexample%20is%20found.%0A%0AThe%20default%20directory%20to%20persist%20invariant%20test%20failures%20can%20be%20changed%20in%20foundry.toml%3A%0A%0A%60%60%60toml%0A%5Binvariant%5D%0Afailure_persist_dir%3D%22%2Ftests%2Fdir%22%0A%60%60%60%0A%0Aor%20by%20using%20inline%20config%0A%0A%60%60%60Solidity%0A%2F%2F%2F%20forge-config%3A%20default.invariant.failure-persist-dir%20%3D%20%2Ftests%2Fdir%0A%60%60%60%0A%0A%23%23%23%20Remove%20persisted%20failures%0A%0ATo%20ignore%20saved%20failures%20and%20start%20a%20clean%20test%20campaign%2C%20simply%20remove%20the%20persisted%20files%20or%20run%20%5B%60forge%20clean%60%5D(%2Fforge%2Freference%2Fforge-clean)%20(removes%20all%20build%20artifacts%20and%20cache%20directories).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./traces-CWHuxsGR.js"),__vite__mapDeps([225,1])),path:"/forge/tests/traces",type:"mdx",filePath:"forge/tests/traces.md",content:"---%0Adescription%3A%20Debug%20test%20execution%20with%20detailed%20call%20traces%20showing%20gas%20usage%2C%20contract%20interactions%2C%20and%20return%20values.%0A---%0A%0A%23%23%20Understanding%20Traces%0A%0AForge%20can%20produce%20traces%20either%20for%20failing%20tests%20(%60-vvv%60)%20or%20all%20tests%20(%60-vvvv%60).%0A%0ATraces%20follow%20the%20same%20general%20format%3A%0A%0A%60%60%60%0A%20%20%5B%3CGas%20Usage%3E%5D%20%3CContract%3E%3A%3A%3CFunction%3E(%3CParameters%3E)%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B%3CGas%20Usage%3E%5D%20%3CContract%3E%3A%3A%3CFunction%3E(%3CParameters%3E)%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%3CReturn%20Value%3E%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%3CReturn%20Value%3E%0A%60%60%60%0A%0AEach%20trace%20can%20have%20many%20more%20subtraces%2C%20each%20denoting%20a%20call%20to%20a%20contract%20and%20a%20return%20value.%0A%0AIf%20your%20terminal%20supports%20color%2C%20the%20traces%20will%20also%20come%20with%20a%20variety%20of%20colors%3A%0A%0A-%20**Green**%3A%20For%20calls%20that%20do%20not%20revert%0A-%20**Red**%3A%20For%20reverting%20calls%0A-%20**Blue**%3A%20For%20calls%20to%20cheat%20codes%0A-%20**Cyan**%3A%20For%20emitted%20logs%0A-%20**Yellow**%3A%20For%20contract%20deployments%0A%0AThe%20gas%20usage%20(marked%20in%20square%20brackets)%20is%20for%20the%20entirety%20of%20the%20function%20call.%20You%20may%20notice%2C%20however%2C%20that%20sometimes%20the%20gas%20usage%20of%20one%20trace%20does%20not%20exactly%20match%20the%20gas%20usage%20of%20all%20its%20subtraces%3A%0A%0A%60%60%60%0A%20%20%5B24661%5D%20OwnerUpOnlyTest%3A%3AtestIncrementAsOwner()%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B2262%5D%20OwnerUpOnly%3A%3Acount()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%200%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B20398%5D%20OwnerUpOnly%3A%3Aincrement()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20()%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B262%5D%20OwnerUpOnly%3A%3Acount()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%201%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20()%0A%60%60%60%0A%0AThe%20gas%20unaccounted%20for%20is%20due%20to%20some%20extra%20operations%20happening%20between%20calls%2C%20such%20as%20arithmetic%20and%20store%20reads%2Fwrites.%0A%0AForge%20will%20try%20to%20decode%20as%20many%20signatures%20and%20values%20as%20possible%2C%20but%20sometimes%20this%20is%20not%20possible.%20In%20these%20cases%2C%20the%20traces%20will%20appear%20like%20so%3A%0A%0A%60%60%60%0A%20%20%5B%3CGas%20Usage%3E%5D%20%3CAddress%3E%3A%3A%3CCalldata%3E%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%3CReturn%20Data%3E%0A%60%60%60%0A%0ASome%20traces%20might%20be%20harder%20to%20grasp%20at%20first%20glance.%20These%20include%3A%0A%0A-%20The%20%60OOG%60%20shorthand%20stands%20for%20%22Out%20Of%20Gas%22.%0A-%20The%20acronym%20%60EOF%60%20stands%20for%20%22Ethereum%20Object%20Format%22%2C%20which%20introduces%20an%20extensible%20and%20versioned%20container%20format%20for%20EVM%20bytecode.%20For%20more%20information%2C%20read%20%5Bhere%5D(https%3A%2F%2Fevmobjectformat.org%2F).%0A-%20%60NotActivated%60%20means%20the%20feature%20or%20opcode%20is%20not%20activated.%20Some%20versions%20of%20the%20EVM%20only%20support%20certain%20opcodes.%20You%20may%20need%20to%20use%20a%20more%20recent%20version%20using%20the%20%60--evm_version%60%20flag.%20For%20example%2C%20the%20%60PUSH0%60%20opcode%20is%20only%20available%20since%20the%20%5BShanghai%5D(https%3A%2F%2Fwww.evm.codes%2F%3Ffork%3Dshanghai)%20hardfork.%0A-%20%60InvalidFEOpcode%60%20means%20that%20an%20undefined%20bytecode%20value%20has%20been%20encountered%20during%20execution.%20The%20EVM%20catches%20the%20unknown%20bytecode%20and%20returns%20the%20%60INVALID%60%20opcode%20instead%2C%20of%20value%20%600xFE%60.%20You%20can%20find%20out%20more%20%5Bhere%5D(https%3A%2F%2Fwww.evm.codes%2F%23fe).%0A%0AFor%20a%20deeper%20insight%20into%20the%20various%20traces%2C%20you%20can%20explore%20the%20%5Brevm%20source%20code%5D(https%3A%2F%2Fgithub.com%2Fbluealloy%2Frevm%2Fblob%2Fmain%2Fcrates%2Finterpreter%2Fsrc%2Finstruction_result.rs).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./traces-CWHuxsGR.js"),__vite__mapDeps([225,1])),path:"/forge/tests/traces.html",type:"mdx",filePath:"forge/tests/traces.md",content:"---%0Adescription%3A%20Debug%20test%20execution%20with%20detailed%20call%20traces%20showing%20gas%20usage%2C%20contract%20interactions%2C%20and%20return%20values.%0A---%0A%0A%23%23%20Understanding%20Traces%0A%0AForge%20can%20produce%20traces%20either%20for%20failing%20tests%20(%60-vvv%60)%20or%20all%20tests%20(%60-vvvv%60).%0A%0ATraces%20follow%20the%20same%20general%20format%3A%0A%0A%60%60%60%0A%20%20%5B%3CGas%20Usage%3E%5D%20%3CContract%3E%3A%3A%3CFunction%3E(%3CParameters%3E)%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B%3CGas%20Usage%3E%5D%20%3CContract%3E%3A%3A%3CFunction%3E(%3CParameters%3E)%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%3CReturn%20Value%3E%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%3CReturn%20Value%3E%0A%60%60%60%0A%0AEach%20trace%20can%20have%20many%20more%20subtraces%2C%20each%20denoting%20a%20call%20to%20a%20contract%20and%20a%20return%20value.%0A%0AIf%20your%20terminal%20supports%20color%2C%20the%20traces%20will%20also%20come%20with%20a%20variety%20of%20colors%3A%0A%0A-%20**Green**%3A%20For%20calls%20that%20do%20not%20revert%0A-%20**Red**%3A%20For%20reverting%20calls%0A-%20**Blue**%3A%20For%20calls%20to%20cheat%20codes%0A-%20**Cyan**%3A%20For%20emitted%20logs%0A-%20**Yellow**%3A%20For%20contract%20deployments%0A%0AThe%20gas%20usage%20(marked%20in%20square%20brackets)%20is%20for%20the%20entirety%20of%20the%20function%20call.%20You%20may%20notice%2C%20however%2C%20that%20sometimes%20the%20gas%20usage%20of%20one%20trace%20does%20not%20exactly%20match%20the%20gas%20usage%20of%20all%20its%20subtraces%3A%0A%0A%60%60%60%0A%20%20%5B24661%5D%20OwnerUpOnlyTest%3A%3AtestIncrementAsOwner()%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B2262%5D%20OwnerUpOnly%3A%3Acount()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%200%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B20398%5D%20OwnerUpOnly%3A%3Aincrement()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20()%0A%20%20%20%20%E2%94%9C%E2%94%80%20%5B262%5D%20OwnerUpOnly%3A%3Acount()%0A%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%201%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20()%0A%60%60%60%0A%0AThe%20gas%20unaccounted%20for%20is%20due%20to%20some%20extra%20operations%20happening%20between%20calls%2C%20such%20as%20arithmetic%20and%20store%20reads%2Fwrites.%0A%0AForge%20will%20try%20to%20decode%20as%20many%20signatures%20and%20values%20as%20possible%2C%20but%20sometimes%20this%20is%20not%20possible.%20In%20these%20cases%2C%20the%20traces%20will%20appear%20like%20so%3A%0A%0A%60%60%60%0A%20%20%5B%3CGas%20Usage%3E%5D%20%3CAddress%3E%3A%3A%3CCalldata%3E%0A%20%20%20%20%E2%94%94%E2%94%80%20%E2%86%90%20%3CReturn%20Data%3E%0A%60%60%60%0A%0ASome%20traces%20might%20be%20harder%20to%20grasp%20at%20first%20glance.%20These%20include%3A%0A%0A-%20The%20%60OOG%60%20shorthand%20stands%20for%20%22Out%20Of%20Gas%22.%0A-%20The%20acronym%20%60EOF%60%20stands%20for%20%22Ethereum%20Object%20Format%22%2C%20which%20introduces%20an%20extensible%20and%20versioned%20container%20format%20for%20EVM%20bytecode.%20For%20more%20information%2C%20read%20%5Bhere%5D(https%3A%2F%2Fevmobjectformat.org%2F).%0A-%20%60NotActivated%60%20means%20the%20feature%20or%20opcode%20is%20not%20activated.%20Some%20versions%20of%20the%20EVM%20only%20support%20certain%20opcodes.%20You%20may%20need%20to%20use%20a%20more%20recent%20version%20using%20the%20%60--evm_version%60%20flag.%20For%20example%2C%20the%20%60PUSH0%60%20opcode%20is%20only%20available%20since%20the%20%5BShanghai%5D(https%3A%2F%2Fwww.evm.codes%2F%3Ffork%3Dshanghai)%20hardfork.%0A-%20%60InvalidFEOpcode%60%20means%20that%20an%20undefined%20bytecode%20value%20has%20been%20encountered%20during%20execution.%20The%20EVM%20catches%20the%20unknown%20bytecode%20and%20returns%20the%20%60INVALID%60%20opcode%20instead%2C%20of%20value%20%600xFE%60.%20You%20can%20find%20out%20more%20%5Bhere%5D(https%3A%2F%2Fwww.evm.codes%2F%23fe).%0A%0AFor%20a%20deeper%20insight%20into%20the%20various%20traces%2C%20you%20can%20explore%20the%20%5Brevm%20source%20code%5D(https%3A%2F%2Fgithub.com%2Fbluealloy%2Frevm%2Fblob%2Fmain%2Fcrates%2Finterpreter%2Fsrc%2Finstruction_result.rs).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-tests-QojKhHzZ.js"),__vite__mapDeps([226,1])),path:"/forge/tests/writing-tests",type:"mdx",filePath:"forge/tests/writing-tests.md",content:"---%0Adescription%3A%20Learn%20to%20write%20Solidity%20tests%20using%20Forge%20Standard%20Library%20with%20test%20functions%2C%20setup%20patterns%2C%20and%20shared%20contracts.%0A---%0A%0A%23%23%20Writing%20Tests%0A%0ATests%20are%20written%20in%20Solidity.%20If%20the%20test%20function%20reverts%2C%20the%20test%20fails%2C%20otherwise%20it%20passes.%0A%0ALet's%20go%20over%20the%20most%20common%20way%20of%20writing%20tests%2C%20using%20the%20%5BForge%20Standard%20Library%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std)'s%20%60Test%60%20contract%2C%20which%20is%20the%20preferred%20way%20of%20writing%20tests%20with%20Forge.%0A%0AIn%20this%20section%2C%20we'll%20go%20over%20the%20basics%20using%20the%20functions%20from%20the%20Forge%20Std's%20%60Test%60%20contract%2C%20which%20is%20itself%20a%20superset%20of%20%5BDSTest%5D(https%3A%2F%2Fgithub.com%2Fdapphub%2Fds-test).%20You%20will%20learn%20how%20to%20use%20more%20advanced%20stuff%20from%20the%20Forge%20Standard%20Library%20%5Bsoon%5D(%2Fforge%2Ftests%2Fforge-std).%0A%0ADSTest%20provides%20basic%20logging%20and%20assertion%20functionality.%20To%20get%20access%20to%20the%20functions%2C%20import%20%60forge-std%2FTest.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3Aimport%5D%0A%60%60%60%0A%0ALet's%20examine%20a%20basic%20test%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3Aall%5D%0A%60%60%60%0A%0AForge%20uses%20the%20following%20keywords%20in%20tests%3A%0A%0A-%20%60setUp%60%3A%20An%20optional%20function%20invoked%20before%20each%20test%20case%20is%20run.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3AsetUp%5D%0A%60%60%60%0A%0A-%20%60test%60%3A%20Functions%20prefixed%20with%20%60test%60%20are%20run%20as%20a%20test%20case.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3AtestNumberIs42%5D%0A%60%60%60%0A%0AA%20good%20practice%20is%20to%20use%20the%20pattern%20%60test_Revert%5BIf%7CWhen%5D_Condition%60%20in%20combination%20with%20the%20%5B%60expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert)%20cheatcode%20(cheatcodes%20are%20explained%20in%20greater%20detail%20in%20the%20following%20%5Bsection%5D(%2Fforge%2Ftests%2Fcheatcodes)).%20Also%2C%20other%20testing%20practices%20can%20be%20found%20in%20the%20%5BGuides%20section%5D(%2Fguides%2Fbest-practices%2Fwriting-tests).%0A%0A%3E%20**Note**%3A%20To%20use%20%60stdError%60%20constants%20(like%20%60arithmeticError%60%20in%20the%20example%20below)%2C%20make%20sure%20to%20import%20%60StdError.sol%60%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20import%20%7BstdError%7D%20from%20%22forge-std%2FStdError.sol%22%3B%0A%3E%20%60%60%60%0A%0AIn%20this%20way%20you%20know%20exactly%20what%20reverted%20and%20with%20which%20error%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic2.t.sol%3AtestCannotSubtract43%5D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0ATests%20are%20deployed%20to%20%600xb4c79daB8f259C7Aee6E5b2Aa729821864227e84%60.%20If%20you%20deploy%20a%20contract%20within%20your%20test%2C%20then%0A%600xb4c...7e84%60%20will%20be%20its%20deployer.%20If%20the%20contract%20deployed%20within%20a%20test%20gives%20special%20permissions%20to%20its%20deployer%2C%0Asuch%20as%20%60Ownable.sol%60's%20%60onlyOwner%60%20modifier%2C%20then%20the%20test%20contract%20%600xb4c...7e84%60%20will%20have%20those%20permissions.%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Test%20functions%20must%20have%20either%20%60external%60%20or%20%60public%60%20visibility.%20Functions%20declared%20as%20%60internal%60%20or%0A%3E%20%60private%60%20won't%20be%20picked%20up%20by%20Forge%2C%20even%20if%20they%20are%20prefixed%20with%20%60test%60.%0A%0A%23%23%23%20Before%20test%20setups%0A%0AUnit%20and%20fuzz%20tests%20are%20stateless%20and%20are%20executed%20as%20single%20transactions%2C%20meaning%20that%20the%20state%20modified%20by%20a%20test%20won't%20be%20available%20for%20a%20different%20one%20(instead%2C%20they'll%20use%20the%20same%20state%20created%20by%20%60setUp%60%20call).%0AIt%20is%20possible%20to%20simulate%20multiple%20transactions%20in%20a%20single%20test%2C%20with%20a%20dependency%20tree%2C%20by%20implementing%20the%20%60beforeTestSetup%60%20function.%0A%0A-%20%60beforeTestSetup%60%3A%20Optional%20function%20that%20configures%20a%20set%20of%20transactions%20to%20be%20executed%20before%20test.%0A%0A%60%60%60solidity%0Afunction%20beforeTestSetup(%0A%20%20%20%20bytes4%20testSelector%0A)%20public%20returns%20(bytes%5B%5D%20memory%20beforeTestCalldata)%0A%60%60%60%0A%0Awhere%0A%0A-%20%60bytes4%20testSelector%60%20is%20the%20selector%20of%20the%20test%20for%20which%20transactions%20are%20applied%0A-%20%60bytes%5B%5D%20memory%20beforeTestCalldata%60%20is%20an%20array%20of%20arbitrary%20calldata%20applied%20before%20test%20execution%0A%0A%3E%20%F0%9F%92%A1%20**Tip**%0A%3E%0A%3E%20This%20setup%20can%20be%20used%20for%20chaining%20tests%20or%20for%20scenarios%20when%20a%20test%20needs%20certain%20transactions%20committed%20before%20test%20run%20(e.g.%20when%20using%20%60selfdestruct%60).%0A%3E%20The%20test%20fails%20if%20any%20of%20the%20configured%20transaction%20reverts.%0A%0AFor%20example%2C%20in%20contract%20below%2C%20%60testC%60%20is%20configured%20to%20use%20state%20modified%20by%20%60testA%60%20and%20%60setB(uint256)%60%20functions%3A%0A%0A%60%60%60solidity%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20uint256%20b%3B%0A%0A%20%20%20%20function%20beforeTestSetup(%0A%20%20%20%20%20%20%20%20bytes4%20testSelector%0A%20%20%20%20)%20public%20pure%20returns%20(bytes%5B%5D%20memory%20beforeTestCalldata)%20%7B%0A%20%20%20%20%20%20%20%20if%20(testSelector%20%3D%3D%20this.testC.selector)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20beforeTestCalldata%20%3D%20new%20bytes%5B%5D(2)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20beforeTestCalldata%5B0%5D%20%3D%20abi.encodePacked(this.testA.selector)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20beforeTestCalldata%5B1%5D%20%3D%20abi.encodeWithSignature(%22setB(uint256)%22%2C%201)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testA()%20public%20%7B%0A%20%20%20%20%20%20%20%20require(a%20%3D%3D%200)%3B%0A%20%20%20%20%20%20%20%20a%20%2B%3D%201%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20setB(uint256%20value)%20public%20%7B%0A%20%20%20%20%20%20%20%20b%20%3D%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testC()%20public%20%7B%0A%20%20%20%20%20%20%20%20assertEq(a%2C%201)%3B%0A%20%20%20%20%20%20%20%20assertEq(b%2C%201)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Shared%20setups%0A%0AIt%20is%20possible%20to%20use%20shared%20setups%20by%20creating%20helper%20abstract%20contracts%20and%20inheriting%20them%20in%20your%20test%20contracts%3A%0A%0A%60%60%60solidity%0Aabstract%20contract%20HelperContract%20%7B%0A%20%20%20%20address%20constant%20IMPORTANT_ADDRESS%20%3D%200x543d...%3B%0A%20%20%20%20SomeContract%20someContract%3B%0A%20%20%20%20constructor()%20%7B...%7D%0A%7D%0A%0Acontract%20MyContractTest%20is%20Test%2C%20HelperContract%20%7B%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20someContract%20%3D%20new%20SomeContract(0%2C%20IMPORTANT_ADDRESS)%3B%0A%20%20%20%20%20%20%20%20...%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20MyOtherContractTest%20is%20Test%2C%20HelperContract%20%7B%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20someContract%20%3D%20new%20SomeContract(1000%2C%20IMPORTANT_ADDRESS)%3B%0A%20%20%20%20%20%20%20%20...%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Atip%0AUse%20the%20%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code)%20cheatcode%20to%20deploy%20contracts%20with%20incompatible%20Solidity%20versions.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-tests-QojKhHzZ.js"),__vite__mapDeps([226,1])),path:"/forge/tests/writing-tests.html",type:"mdx",filePath:"forge/tests/writing-tests.md",content:"---%0Adescription%3A%20Learn%20to%20write%20Solidity%20tests%20using%20Forge%20Standard%20Library%20with%20test%20functions%2C%20setup%20patterns%2C%20and%20shared%20contracts.%0A---%0A%0A%23%23%20Writing%20Tests%0A%0ATests%20are%20written%20in%20Solidity.%20If%20the%20test%20function%20reverts%2C%20the%20test%20fails%2C%20otherwise%20it%20passes.%0A%0ALet's%20go%20over%20the%20most%20common%20way%20of%20writing%20tests%2C%20using%20the%20%5BForge%20Standard%20Library%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std)'s%20%60Test%60%20contract%2C%20which%20is%20the%20preferred%20way%20of%20writing%20tests%20with%20Forge.%0A%0AIn%20this%20section%2C%20we'll%20go%20over%20the%20basics%20using%20the%20functions%20from%20the%20Forge%20Std's%20%60Test%60%20contract%2C%20which%20is%20itself%20a%20superset%20of%20%5BDSTest%5D(https%3A%2F%2Fgithub.com%2Fdapphub%2Fds-test).%20You%20will%20learn%20how%20to%20use%20more%20advanced%20stuff%20from%20the%20Forge%20Standard%20Library%20%5Bsoon%5D(%2Fforge%2Ftests%2Fforge-std).%0A%0ADSTest%20provides%20basic%20logging%20and%20assertion%20functionality.%20To%20get%20access%20to%20the%20functions%2C%20import%20%60forge-std%2FTest.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3Aimport%5D%0A%60%60%60%0A%0ALet's%20examine%20a%20basic%20test%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3Aall%5D%0A%60%60%60%0A%0AForge%20uses%20the%20following%20keywords%20in%20tests%3A%0A%0A-%20%60setUp%60%3A%20An%20optional%20function%20invoked%20before%20each%20test%20case%20is%20run.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3AsetUp%5D%0A%60%60%60%0A%0A-%20%60test%60%3A%20Functions%20prefixed%20with%20%60test%60%20are%20run%20as%20a%20test%20case.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic.t.sol%3AtestNumberIs42%5D%0A%60%60%60%0A%0AA%20good%20practice%20is%20to%20use%20the%20pattern%20%60test_Revert%5BIf%7CWhen%5D_Condition%60%20in%20combination%20with%20the%20%5B%60expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert)%20cheatcode%20(cheatcodes%20are%20explained%20in%20greater%20detail%20in%20the%20following%20%5Bsection%5D(%2Fforge%2Ftests%2Fcheatcodes)).%20Also%2C%20other%20testing%20practices%20can%20be%20found%20in%20the%20%5BGuides%20section%5D(%2Fguides%2Fbest-practices%2Fwriting-tests).%0A%0A%3E%20**Note**%3A%20To%20use%20%60stdError%60%20constants%20(like%20%60arithmeticError%60%20in%20the%20example%20below)%2C%20make%20sure%20to%20import%20%60StdError.sol%60%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20import%20%7BstdError%7D%20from%20%22forge-std%2FStdError.sol%22%3B%0A%3E%20%60%60%60%0A%0AIn%20this%20way%20you%20know%20exactly%20what%20reverted%20and%20with%20which%20error%3A%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fwriting_tests%2Ftest%2FBasic2.t.sol%3AtestCannotSubtract43%5D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0ATests%20are%20deployed%20to%20%600xb4c79daB8f259C7Aee6E5b2Aa729821864227e84%60.%20If%20you%20deploy%20a%20contract%20within%20your%20test%2C%20then%0A%600xb4c...7e84%60%20will%20be%20its%20deployer.%20If%20the%20contract%20deployed%20within%20a%20test%20gives%20special%20permissions%20to%20its%20deployer%2C%0Asuch%20as%20%60Ownable.sol%60's%20%60onlyOwner%60%20modifier%2C%20then%20the%20test%20contract%20%600xb4c...7e84%60%20will%20have%20those%20permissions.%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Test%20functions%20must%20have%20either%20%60external%60%20or%20%60public%60%20visibility.%20Functions%20declared%20as%20%60internal%60%20or%0A%3E%20%60private%60%20won't%20be%20picked%20up%20by%20Forge%2C%20even%20if%20they%20are%20prefixed%20with%20%60test%60.%0A%0A%23%23%23%20Before%20test%20setups%0A%0AUnit%20and%20fuzz%20tests%20are%20stateless%20and%20are%20executed%20as%20single%20transactions%2C%20meaning%20that%20the%20state%20modified%20by%20a%20test%20won't%20be%20available%20for%20a%20different%20one%20(instead%2C%20they'll%20use%20the%20same%20state%20created%20by%20%60setUp%60%20call).%0AIt%20is%20possible%20to%20simulate%20multiple%20transactions%20in%20a%20single%20test%2C%20with%20a%20dependency%20tree%2C%20by%20implementing%20the%20%60beforeTestSetup%60%20function.%0A%0A-%20%60beforeTestSetup%60%3A%20Optional%20function%20that%20configures%20a%20set%20of%20transactions%20to%20be%20executed%20before%20test.%0A%0A%60%60%60solidity%0Afunction%20beforeTestSetup(%0A%20%20%20%20bytes4%20testSelector%0A)%20public%20returns%20(bytes%5B%5D%20memory%20beforeTestCalldata)%0A%60%60%60%0A%0Awhere%0A%0A-%20%60bytes4%20testSelector%60%20is%20the%20selector%20of%20the%20test%20for%20which%20transactions%20are%20applied%0A-%20%60bytes%5B%5D%20memory%20beforeTestCalldata%60%20is%20an%20array%20of%20arbitrary%20calldata%20applied%20before%20test%20execution%0A%0A%3E%20%F0%9F%92%A1%20**Tip**%0A%3E%0A%3E%20This%20setup%20can%20be%20used%20for%20chaining%20tests%20or%20for%20scenarios%20when%20a%20test%20needs%20certain%20transactions%20committed%20before%20test%20run%20(e.g.%20when%20using%20%60selfdestruct%60).%0A%3E%20The%20test%20fails%20if%20any%20of%20the%20configured%20transaction%20reverts.%0A%0AFor%20example%2C%20in%20contract%20below%2C%20%60testC%60%20is%20configured%20to%20use%20state%20modified%20by%20%60testA%60%20and%20%60setB(uint256)%60%20functions%3A%0A%0A%60%60%60solidity%0Acontract%20ContractTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20uint256%20b%3B%0A%0A%20%20%20%20function%20beforeTestSetup(%0A%20%20%20%20%20%20%20%20bytes4%20testSelector%0A%20%20%20%20)%20public%20pure%20returns%20(bytes%5B%5D%20memory%20beforeTestCalldata)%20%7B%0A%20%20%20%20%20%20%20%20if%20(testSelector%20%3D%3D%20this.testC.selector)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20beforeTestCalldata%20%3D%20new%20bytes%5B%5D(2)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20beforeTestCalldata%5B0%5D%20%3D%20abi.encodePacked(this.testA.selector)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20beforeTestCalldata%5B1%5D%20%3D%20abi.encodeWithSignature(%22setB(uint256)%22%2C%201)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testA()%20public%20%7B%0A%20%20%20%20%20%20%20%20require(a%20%3D%3D%200)%3B%0A%20%20%20%20%20%20%20%20a%20%2B%3D%201%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20setB(uint256%20value)%20public%20%7B%0A%20%20%20%20%20%20%20%20b%20%3D%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testC()%20public%20%7B%0A%20%20%20%20%20%20%20%20assertEq(a%2C%201)%3B%0A%20%20%20%20%20%20%20%20assertEq(b%2C%201)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Shared%20setups%0A%0AIt%20is%20possible%20to%20use%20shared%20setups%20by%20creating%20helper%20abstract%20contracts%20and%20inheriting%20them%20in%20your%20test%20contracts%3A%0A%0A%60%60%60solidity%0Aabstract%20contract%20HelperContract%20%7B%0A%20%20%20%20address%20constant%20IMPORTANT_ADDRESS%20%3D%200x543d...%3B%0A%20%20%20%20SomeContract%20someContract%3B%0A%20%20%20%20constructor()%20%7B...%7D%0A%7D%0A%0Acontract%20MyContractTest%20is%20Test%2C%20HelperContract%20%7B%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20someContract%20%3D%20new%20SomeContract(0%2C%20IMPORTANT_ADDRESS)%3B%0A%20%20%20%20%20%20%20%20...%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20MyOtherContractTest%20is%20Test%2C%20HelperContract%20%7B%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20someContract%20%3D%20new%20SomeContract(1000%2C%20IMPORTANT_ADDRESS)%3B%0A%20%20%20%20%20%20%20%20...%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%3Cbr%3E%3C%2Fbr%3E%0A%0A%3A%3A%3Atip%0AUse%20the%20%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code)%20cheatcode%20to%20deploy%20contracts%20with%20incompatible%20Solidity%20versions.%0A%3A%3A%3A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./commenting-D0qW4myY.js"),__vite__mapDeps([227,1])),path:"/guides/best-practices/commenting",type:"mdx",filePath:"guides/best-practices/commenting.md",content:"---%0Adescription%3A%20Documentation%20standards%20using%20NatSpec%20comments%20for%20autogenerated%20docs%20and%20improved%20code%20readability.%0A---%0A%0A%23%23%20Commenting%0A%0A1.%20For%20public%20or%20external%20methods%20and%20variables%2C%20use%20%5BNatSpec%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fnatspec-format.html)%20comments.%0A%0A-%20%60forge%20doc%60%20will%20parse%20these%20to%20autogenerate%20documentation.%0A-%20Etherscan%20will%20display%20them%20in%20the%20contract%20UI.%0A%0A2.%20For%20simple%20NatSpec%20comments%2C%20consider%20just%20documenting%20params%20in%20the%20docstring%2C%20such%20as%20%60%60%20%2F%2F%2F%20%40notice%20Returns%20the%20sum%20of%20%60x%60%20and%20%60y%60.%20%60%60%2C%20instead%20of%20using%20%60%40param%60%20tags.%0A%0A3.%20For%20complex%20NatSpec%20comments%2C%20consider%20using%20a%20tool%20like%20%5BPlantUML%5D(https%3A%2F%2Fplantuml.com%2Fascii-art)%20to%20generate%20ASCII%20art%20diagrams%20to%20help%20explain%20complex%20aspects%20of%20the%20codebase.%0A%0A4.%20Any%20markdown%20in%20your%20comments%20will%20carry%20over%20properly%20when%20generating%20docs%20with%20%60forge%20doc%60%2C%20so%20structure%20comments%20with%20markdown%20when%20useful.%0A%0A%20%20%20-%20Good%3A%20%60%60%20%2F%2F%2F%20%40notice%20Returns%20the%20sum%20of%20%60x%60%20and%20%60y%60.%20%60%60%0A%20%20%20-%20Bad%3A%20%60%2F%2F%2F%20%40notice%20Returns%20the%20sum%20of%20x%20and%20y.%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./commenting-D0qW4myY.js"),__vite__mapDeps([227,1])),path:"/guides/best-practices/commenting.html",type:"mdx",filePath:"guides/best-practices/commenting.md",content:"---%0Adescription%3A%20Documentation%20standards%20using%20NatSpec%20comments%20for%20autogenerated%20docs%20and%20improved%20code%20readability.%0A---%0A%0A%23%23%20Commenting%0A%0A1.%20For%20public%20or%20external%20methods%20and%20variables%2C%20use%20%5BNatSpec%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fnatspec-format.html)%20comments.%0A%0A-%20%60forge%20doc%60%20will%20parse%20these%20to%20autogenerate%20documentation.%0A-%20Etherscan%20will%20display%20them%20in%20the%20contract%20UI.%0A%0A2.%20For%20simple%20NatSpec%20comments%2C%20consider%20just%20documenting%20params%20in%20the%20docstring%2C%20such%20as%20%60%60%20%2F%2F%2F%20%40notice%20Returns%20the%20sum%20of%20%60x%60%20and%20%60y%60.%20%60%60%2C%20instead%20of%20using%20%60%40param%60%20tags.%0A%0A3.%20For%20complex%20NatSpec%20comments%2C%20consider%20using%20a%20tool%20like%20%5BPlantUML%5D(https%3A%2F%2Fplantuml.com%2Fascii-art)%20to%20generate%20ASCII%20art%20diagrams%20to%20help%20explain%20complex%20aspects%20of%20the%20codebase.%0A%0A4.%20Any%20markdown%20in%20your%20comments%20will%20carry%20over%20properly%20when%20generating%20docs%20with%20%60forge%20doc%60%2C%20so%20structure%20comments%20with%20markdown%20when%20useful.%0A%0A%20%20%20-%20Good%3A%20%60%60%20%2F%2F%2F%20%40notice%20Returns%20the%20sum%20of%20%60x%60%20and%20%60y%60.%20%60%60%0A%20%20%20-%20Bad%3A%20%60%2F%2F%2F%20%40notice%20Returns%20the%20sum%20of%20x%20and%20y.%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-management-CixyyPP6.js"),__vite__mapDeps([228,1])),path:"/guides/best-practices/key-management",type:"mdx",filePath:"guides/best-practices/key-management.md",content:"---%0Adescription%3A%20Secure%20private%20key%20management%20strategies%20using%20hardware%20wallets%2C%20keystores%2C%20and%20throwaway%20keys%20for%20script%20execution.%0A---%0A%0A%23%23%20Key%20Management%0A%0AScript%20execution%20requires%20a%20private%20key%20to%20send%20transactions.%20This%20key%20controls%20all%20funds%20in%20the%20account%2C%20so%20it%20must%20be%20protected%20carefully.%20There%20are%20a%20few%20options%20for%20securely%20broadcasting%20transactions%20through%20a%20script%3A%0A%0A%23%23%23%20Using%20Hardware%20Wallet%0A%0AHardware%20wallets%20such%20as%20Ledger%20and%20Trezor%20store%20seed%20phrases%20in%20a%20secure%20enclave.%20Forge%20can%20send%20a%20raw%20transaction%20to%20the%20wallet%2C%20and%20the%20wallet%20will%20sign%20the%20transaction.%20The%20signed%20transaction%20is%20returned%20to%20forge%20and%20broadcaster.%20This%20way%2C%20private%20keys%20never%20leave%20the%20hardware%20wallet%2C%20making%20this%20a%20very%20secure%20approach.%20To%20use%20a%20hardware%20wallet%20with%20scripts%2C%20see%20the%20%60--ledger%60%20and%20%60--trezor%60%20%5Bflags%5D(%2Fforge%2Freference%2Fforge-script).%0A%0A%23%23%23%20Using%20Private%20Keys%0A%0AWith%20this%20approach%20you%20expose%20a%20private%20key%20on%20your%20machine%2C%20making%20it%20riskier%20than%20the%20above%20option.%20Therefore%20the%20suggested%20way%20to%20directly%20use%20a%20private%20key%20is%20to%20generate%20a%20new%20wallet%20for%20executing%20the%20script%2C%20and%20only%20send%20that%20wallet%20enough%20funds%20to%20run%20the%20script.%20Then%2C%20stop%20using%20the%20key%20after%20the%20script%20is%20complete.%20This%20way%2C%20if%20the%20key%20is%20compromised%2C%20only%20the%20funds%20on%20this%20throwaway%20key%20are%20lost%2C%20as%20opposed%20to%20losing%20everything%20in%20your%20wallet.%0A%0A1.%20%20It's%20very%20important%20that%20your%20scripts%20or%20contracts%20don't%20rely%20on%20%60msg.sender%60%20since%20the%20sender%20will%20not%20be%20an%20account%20that's%20meant%20to%20be%20used%20again.%20For%20example%2C%20if%20a%20deploy%20script%20configures%20a%20contract%20owner%2C%20ensure%20the%20owner%20a%20constructor%20argument%20and%20not%20set%20to%20%60msg.sender%60.%0A%0A2.%20%20To%20use%20this%20approach%2C%20you%20can%20either%20store%20the%20private%20key%20in%20an%20environment%20variable%20and%20use%20cheat%20codes%20to%20read%20it%20in%2C%20or%20use%20the%20%60--private-key%60%20flag%20to%20directly%20provide%20the%20key.%0A%0A%23%23%23%20Using%20a%20keystore%0A%0AThis%20can%20be%20thought%20of%20as%20a%20middle%20ground%20between%20the%20above%20two%20approaches.%20With%20%5B%60cast%20wallet%20import%60%5D(%2Fcast%2Freference%2Fcast-wallet-import)%20you%20import%20a%20private%20key%20and%20encrypt%20it%20with%20a%20password.%20This%20still%20temporarily%20exposes%20your%20private%20key%20on%20your%20machine%2C%20but%20it%20becomes%20encrypted%20and%20you'll%20provide%20the%20password%20to%20decrypt%20it%20to%20run%20a%20script.%0A%0AAdditional%20security%20precautions%20when%20using%20scripts%3A%0A%0A1.%20Use%20a%20separate%20wallet%20for%20testing%20and%20development%2C%20instead%20of%20using%20your%20main%20wallet%20with%20real%20funds.%20Diversifying%20minimizes%20the%20risk%20of%20losing%20funds%20if%20your%20development%20wallet%20is%20compromised.%0A2.%20If%20you%20accidentally%20push%20a%20private%20key%20or%20seed%20phrase%20to%20GitHub%2C%20or%20expose%20it%20online%20via%20other%20means%E2%80%94even%20momentarily%E2%80%94treat%20it%20as%20compromised.%20Act%20immediately%20to%20transfer%20your%20funds%20to%20a%20safer%20destination.%0A3.%20When%20in%20doubt%20about%20whether%20a%20wallet%20contains%20real%20funds%20or%20not%2C%20assume%20it%20does.%20Always%20be%20certain%20about%20a%20wallet's%20balances%20and%20status%20when%20using%20it%20for%20development%20purposes.%20Use%20%5Bblockscan%5D(https%3A%2F%2Fblockscan.com%2F)%20to%20easily%20check%20many%20chains%20to%20see%20where%20the%20address%20has%20been%20used.%0A4.%20Remember%20that%20adding%20an%20account%20in%20wallets%20like%20Metamask%20generates%20a%20new%20private%20key.%20However%2C%20that%20private%20key%20is%20derived%20from%20the%20same%20mnemonic%20as%20the%20other%20accounts%20generated%20in%20that%20wallet.%20Therefore%2C%20never%20expose%20the%20mnemonic%20as%20it%20may%20compromise%20all%20of%20your%20accounts.%0A%0A_This%20was%20section%20was%20inspired%20by%20%5BThe%20Pledge%5D(https%3A%2F%2Fgithub.com%2Fsmartcontractkit%2Ffull-blockchain-solidity-course-js%2Fdiscussions%2F5)%20from%20%5BPatrick%20Collins%5D(https%3A%2F%2Ftwitter.com%2FPatrickAlphaC)._%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-management-CixyyPP6.js"),__vite__mapDeps([228,1])),path:"/guides/best-practices/key-management.html",type:"mdx",filePath:"guides/best-practices/key-management.md",content:"---%0Adescription%3A%20Secure%20private%20key%20management%20strategies%20using%20hardware%20wallets%2C%20keystores%2C%20and%20throwaway%20keys%20for%20script%20execution.%0A---%0A%0A%23%23%20Key%20Management%0A%0AScript%20execution%20requires%20a%20private%20key%20to%20send%20transactions.%20This%20key%20controls%20all%20funds%20in%20the%20account%2C%20so%20it%20must%20be%20protected%20carefully.%20There%20are%20a%20few%20options%20for%20securely%20broadcasting%20transactions%20through%20a%20script%3A%0A%0A%23%23%23%20Using%20Hardware%20Wallet%0A%0AHardware%20wallets%20such%20as%20Ledger%20and%20Trezor%20store%20seed%20phrases%20in%20a%20secure%20enclave.%20Forge%20can%20send%20a%20raw%20transaction%20to%20the%20wallet%2C%20and%20the%20wallet%20will%20sign%20the%20transaction.%20The%20signed%20transaction%20is%20returned%20to%20forge%20and%20broadcaster.%20This%20way%2C%20private%20keys%20never%20leave%20the%20hardware%20wallet%2C%20making%20this%20a%20very%20secure%20approach.%20To%20use%20a%20hardware%20wallet%20with%20scripts%2C%20see%20the%20%60--ledger%60%20and%20%60--trezor%60%20%5Bflags%5D(%2Fforge%2Freference%2Fforge-script).%0A%0A%23%23%23%20Using%20Private%20Keys%0A%0AWith%20this%20approach%20you%20expose%20a%20private%20key%20on%20your%20machine%2C%20making%20it%20riskier%20than%20the%20above%20option.%20Therefore%20the%20suggested%20way%20to%20directly%20use%20a%20private%20key%20is%20to%20generate%20a%20new%20wallet%20for%20executing%20the%20script%2C%20and%20only%20send%20that%20wallet%20enough%20funds%20to%20run%20the%20script.%20Then%2C%20stop%20using%20the%20key%20after%20the%20script%20is%20complete.%20This%20way%2C%20if%20the%20key%20is%20compromised%2C%20only%20the%20funds%20on%20this%20throwaway%20key%20are%20lost%2C%20as%20opposed%20to%20losing%20everything%20in%20your%20wallet.%0A%0A1.%20%20It's%20very%20important%20that%20your%20scripts%20or%20contracts%20don't%20rely%20on%20%60msg.sender%60%20since%20the%20sender%20will%20not%20be%20an%20account%20that's%20meant%20to%20be%20used%20again.%20For%20example%2C%20if%20a%20deploy%20script%20configures%20a%20contract%20owner%2C%20ensure%20the%20owner%20a%20constructor%20argument%20and%20not%20set%20to%20%60msg.sender%60.%0A%0A2.%20%20To%20use%20this%20approach%2C%20you%20can%20either%20store%20the%20private%20key%20in%20an%20environment%20variable%20and%20use%20cheat%20codes%20to%20read%20it%20in%2C%20or%20use%20the%20%60--private-key%60%20flag%20to%20directly%20provide%20the%20key.%0A%0A%23%23%23%20Using%20a%20keystore%0A%0AThis%20can%20be%20thought%20of%20as%20a%20middle%20ground%20between%20the%20above%20two%20approaches.%20With%20%5B%60cast%20wallet%20import%60%5D(%2Fcast%2Freference%2Fcast-wallet-import)%20you%20import%20a%20private%20key%20and%20encrypt%20it%20with%20a%20password.%20This%20still%20temporarily%20exposes%20your%20private%20key%20on%20your%20machine%2C%20but%20it%20becomes%20encrypted%20and%20you'll%20provide%20the%20password%20to%20decrypt%20it%20to%20run%20a%20script.%0A%0AAdditional%20security%20precautions%20when%20using%20scripts%3A%0A%0A1.%20Use%20a%20separate%20wallet%20for%20testing%20and%20development%2C%20instead%20of%20using%20your%20main%20wallet%20with%20real%20funds.%20Diversifying%20minimizes%20the%20risk%20of%20losing%20funds%20if%20your%20development%20wallet%20is%20compromised.%0A2.%20If%20you%20accidentally%20push%20a%20private%20key%20or%20seed%20phrase%20to%20GitHub%2C%20or%20expose%20it%20online%20via%20other%20means%E2%80%94even%20momentarily%E2%80%94treat%20it%20as%20compromised.%20Act%20immediately%20to%20transfer%20your%20funds%20to%20a%20safer%20destination.%0A3.%20When%20in%20doubt%20about%20whether%20a%20wallet%20contains%20real%20funds%20or%20not%2C%20assume%20it%20does.%20Always%20be%20certain%20about%20a%20wallet's%20balances%20and%20status%20when%20using%20it%20for%20development%20purposes.%20Use%20%5Bblockscan%5D(https%3A%2F%2Fblockscan.com%2F)%20to%20easily%20check%20many%20chains%20to%20see%20where%20the%20address%20has%20been%20used.%0A4.%20Remember%20that%20adding%20an%20account%20in%20wallets%20like%20Metamask%20generates%20a%20new%20private%20key.%20However%2C%20that%20private%20key%20is%20derived%20from%20the%20same%20mnemonic%20as%20the%20other%20accounts%20generated%20in%20that%20wallet.%20Therefore%2C%20never%20expose%20the%20mnemonic%20as%20it%20may%20compromise%20all%20of%20your%20accounts.%0A%0A_This%20was%20section%20was%20inspired%20by%20%5BThe%20Pledge%5D(https%3A%2F%2Fgithub.com%2Fsmartcontractkit%2Ffull-blockchain-solidity-course-js%2Fdiscussions%2F5)%20from%20%5BPatrick%20Collins%5D(https%3A%2F%2Ftwitter.com%2FPatrickAlphaC)._%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./security-zgh-TEiQ.js"),__vite__mapDeps([229,1])),path:"/guides/best-practices/security",type:"mdx",filePath:"guides/best-practices/security.md",content:"---%0Adescription%3A%20Security%20best%20practices%20for%20smart%20contract%20development%20including%20taint%20analysis%20and%20comprehensive%20testing%20strategies.%0A---%0A%0A%23%23%20Security%20Practices%0A%0AThanks%20to%20%5B%40samsczun%5D(https%3A%2F%2Ftwitter.com%2Fsamczsun)'s%20%5BHow%20Do%20You%20Even%20Write%20Secure%20Code%20Anyways%5D(https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DWm3t8Fuiy1E)%20talk%20for%20the%20tips%20in%20this%20section%20and%20the%20following%20section.%0A%0A-%20Don't%20optimize%20for%20coverage%2C%20optimize%20for%20well%20thought-out%20tests.%0A-%20Write%20positive%20and%20negative%20unit%20tests.%0A%20%20-%20Write%20_positive_%20unit%20tests%20for%20things%20that%20the%20code%20should%20handle.%20Validate%20_all_%20state%20that%20changes%20from%20these%20tests.%0A%20%20-%20Write%20_negative_%20unit%20tests%20for%20things%20that%20the%20code%20should%20_not_%20handle.%20It's%20helpful%20to%20follow%20up%20(as%20an%20adjacent%20test)%20with%20the%20positive%20test%20and%20make%20the%20change%20that%20it%20needs%20to%20pass.%0A%20%20-%20Each%20code%20path%20should%20have%20its%20own%20unit%20test.%0A-%20Write%20integration%20tests%20to%20test%20entire%20features.%0A-%20Write%20fork%20tests%20to%20verify%20the%20correct%20behavior%20with%20existing%20deployed%20contract.%0A%0A%23%23%23%20Taint%20Analysis%0A%0AWhen%20testing%2C%20you%20should%20prioritize%20functions%20that%20an%20attacker%20can%20affect%2C%20that%20means%20functions%20that%20accept%20some%20kind%20of%20user%20input.%20These%20are%20called%20_sources_.%0A%0AConsider%20that%20input%20data%20as%20_tainted_%20until%20it%20has%20been%20checked%20by%20the%20code%2C%20at%20which%20point%20it's%20considered%20_clean_.%0A%0AA%20_sink_%20is%20a%20part%20of%20the%20code%20where%20some%20important%20operation%20is%20happening.%20For%20example%2C%20in%20MakerDAO%20that%20would%20be%20%60vat.sol%60.%0A%0AYou%20should%20_ensure_%20that%20no%20_tainted_%20data%20ever%20reaches%20a%20_sink_.%20That%20means%20that%20all%20data%20that%20find%20themselves%20in%20the%20sink%2C%20should%2C%20at%20some%20point%2C%20have%20been%20checked%20by%20you.%20So%2C%20you%20need%20to%20define%20what%20the%20data%20_should_%20be%20and%20then%20make%20sure%20your%20checks%20_ensure_%20that%20the%20data%20will%20be%20how%20you%20expect%20it%20to%20be.%0A%0AWrite%20more%20secure%20code%20and%20better%20tests%20using%20these%20as%20references%20to%20learn%20from%3A%0A%0A-%20%5Btransmissions11%2Fsolcurity%5D(https%3A%2F%2Fgithub.com%2Ftransmissions11%2Fsolcurity)%0A-%20%5Bnascentxyz%2Fsimple-security-toolkit%5D(https%3A%2F%2Fgithub.com%2Fnascentxyz%2Fsimple-security-toolkit)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./security-zgh-TEiQ.js"),__vite__mapDeps([229,1])),path:"/guides/best-practices/security.html",type:"mdx",filePath:"guides/best-practices/security.md",content:"---%0Adescription%3A%20Security%20best%20practices%20for%20smart%20contract%20development%20including%20taint%20analysis%20and%20comprehensive%20testing%20strategies.%0A---%0A%0A%23%23%20Security%20Practices%0A%0AThanks%20to%20%5B%40samsczun%5D(https%3A%2F%2Ftwitter.com%2Fsamczsun)'s%20%5BHow%20Do%20You%20Even%20Write%20Secure%20Code%20Anyways%5D(https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DWm3t8Fuiy1E)%20talk%20for%20the%20tips%20in%20this%20section%20and%20the%20following%20section.%0A%0A-%20Don't%20optimize%20for%20coverage%2C%20optimize%20for%20well%20thought-out%20tests.%0A-%20Write%20positive%20and%20negative%20unit%20tests.%0A%20%20-%20Write%20_positive_%20unit%20tests%20for%20things%20that%20the%20code%20should%20handle.%20Validate%20_all_%20state%20that%20changes%20from%20these%20tests.%0A%20%20-%20Write%20_negative_%20unit%20tests%20for%20things%20that%20the%20code%20should%20_not_%20handle.%20It's%20helpful%20to%20follow%20up%20(as%20an%20adjacent%20test)%20with%20the%20positive%20test%20and%20make%20the%20change%20that%20it%20needs%20to%20pass.%0A%20%20-%20Each%20code%20path%20should%20have%20its%20own%20unit%20test.%0A-%20Write%20integration%20tests%20to%20test%20entire%20features.%0A-%20Write%20fork%20tests%20to%20verify%20the%20correct%20behavior%20with%20existing%20deployed%20contract.%0A%0A%23%23%23%20Taint%20Analysis%0A%0AWhen%20testing%2C%20you%20should%20prioritize%20functions%20that%20an%20attacker%20can%20affect%2C%20that%20means%20functions%20that%20accept%20some%20kind%20of%20user%20input.%20These%20are%20called%20_sources_.%0A%0AConsider%20that%20input%20data%20as%20_tainted_%20until%20it%20has%20been%20checked%20by%20the%20code%2C%20at%20which%20point%20it's%20considered%20_clean_.%0A%0AA%20_sink_%20is%20a%20part%20of%20the%20code%20where%20some%20important%20operation%20is%20happening.%20For%20example%2C%20in%20MakerDAO%20that%20would%20be%20%60vat.sol%60.%0A%0AYou%20should%20_ensure_%20that%20no%20_tainted_%20data%20ever%20reaches%20a%20_sink_.%20That%20means%20that%20all%20data%20that%20find%20themselves%20in%20the%20sink%2C%20should%2C%20at%20some%20point%2C%20have%20been%20checked%20by%20you.%20So%2C%20you%20need%20to%20define%20what%20the%20data%20_should_%20be%20and%20then%20make%20sure%20your%20checks%20_ensure_%20that%20the%20data%20will%20be%20how%20you%20expect%20it%20to%20be.%0A%0AWrite%20more%20secure%20code%20and%20better%20tests%20using%20these%20as%20references%20to%20learn%20from%3A%0A%0A-%20%5Btransmissions11%2Fsolcurity%5D(https%3A%2F%2Fgithub.com%2Ftransmissions11%2Fsolcurity)%0A-%20%5Bnascentxyz%2Fsimple-security-toolkit%5D(https%3A%2F%2Fgithub.com%2Fnascentxyz%2Fsimple-security-toolkit)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-contracts-CDv7MhCG.js"),__vite__mapDeps([230,1])),path:"/guides/best-practices/writing-contracts",type:"mdx",filePath:"guides/best-practices/writing-contracts.md",content:"---%0Adescription%3A%20Best%20practices%20for%20writing%20clean%2C%20secure%2C%20and%20maintainable%20smart%20contracts%20with%20proper%20imports%20and%20formatting.%0A---%0A%0A%23%23%20General%20Contract%20Guidance%0A%0A%23%23%23%20Named%20Imports%0A%0AAlways%20use%20named%20import%20syntax%2C%20don't%20import%20full%20files.%20This%20restricts%20what%20is%20being%20imported%20to%20just%20the%20named%20items%2C%20not%20everything%20in%20the%20file.%20Importing%20full%20files%20can%20result%20in%20solc%20complaining%20about%20duplicate%20definitions%20and%20slither%20erroring%2C%20especially%20as%20repos%20grow%20and%20have%20more%20dependencies%20with%20overlapping%20names.%0A%0A-%20Good%3A%20%60import%20%7BMyContract%7D%20from%20%22src%2FMyContract.sol%22%60%20to%20only%20import%20%60MyContract%60.%0A-%20Bad%3A%20%60import%20%22src%2FMyContract.sol%22%60%20imports%20everything%20in%20%60MyContract.sol%60.%20(Importing%20%60forge-std%2FTest%60%20or%20%60Script%60%20can%20be%20an%20exception%20here%2C%20so%20you%20get%20the%20console%20library%2C%20etc).%0A%0A%23%23%23%20Absolute%20vs%20Relative%20Imports%0A%0ANote%20the%20tradeoffs%20between%20absolute%20and%20relative%20paths%20for%20imports%20(where%20absolute%20paths%20are%20relative%20to%20the%20repo%20root%2C%20e.g.%20%60%22src%2Finterfaces%2FIERC20.sol%22%60)%2C%20and%20choose%20the%20best%20approach%20for%20your%20project%3A%0A%0A-%20Absolute%20paths%20make%20it%20easier%20to%20see%20where%20files%20are%20from%20and%20reduce%20churn%20when%20moving%20files%20around.%0A-%20Relative%20paths%20make%20it%20more%20likely%20your%20editor%20can%20provide%20features%20like%20linting%20and%20autocomplete%2C%20since%20editors%2Fextensions%20may%20not%20understand%20your%20remappings.%0A%0A%23%23%23%20Copying%20Libraries%20from%20Dependencies%0A%0AIf%20copying%20a%20library%20from%20a%20dependency%20(instead%20of%20importing%20it)%2C%20use%20the%20%60ignore%20%3D%20%5B%5D%60%20option%20in%20the%20config%20file%20to%20avoid%20formatting%20that%20file.%20This%20makes%20diffing%20it%20against%20the%20original%20simpler%20for%20reviewers%20and%20auditors.%0A%0A%23%23%23%20Formatting%0A%0ASimilarly%2C%20feel%20free%20to%20use%20the%20%60%2F%2F%20forgefmt%3A%20disable-*%60%20comment%20directives%20to%20ignore%20lines%2Fsections%20of%20code%20that%20look%20better%20with%20manual%20formatting.%20Supported%20values%20for%20%60*%60%20are%3A%0A%0A-%20%60disable-line%60%0A-%20%60disable-next-line%60%0A-%20%60disable-next-item%60%0A-%20%60disable-start%60%0A-%20%60disable-end%60%0A%0A%23%23%23%20Write%20Secure%20Code%0A%0AAdditional%20best%20practices%20from%20%5Bsamsczun%5D(https%3A%2F%2Ftwitter.com%2Fsamczsun)'s%20%5BHow%20Do%20You%20Even%20Write%20Secure%20Code%20Anyways%5D(https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DWm3t8Fuiy1E)%20talk%3A%0A%0A-%20Use%20descriptive%20variable%20names.%0A-%20Limit%20the%20number%20of%20active%20variables.%0A-%20No%20redundant%20logic.%0A-%20Early%20exit%20as%20much%20as%20possible%20to%20reduce%20mental%20load%20when%20seeing%20the%20code.%0A-%20Related%20code%20should%20be%20placed%20near%20each%20other.%0A-%20Delete%20unused%20code.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-contracts-CDv7MhCG.js"),__vite__mapDeps([230,1])),path:"/guides/best-practices/writing-contracts.html",type:"mdx",filePath:"guides/best-practices/writing-contracts.md",content:"---%0Adescription%3A%20Best%20practices%20for%20writing%20clean%2C%20secure%2C%20and%20maintainable%20smart%20contracts%20with%20proper%20imports%20and%20formatting.%0A---%0A%0A%23%23%20General%20Contract%20Guidance%0A%0A%23%23%23%20Named%20Imports%0A%0AAlways%20use%20named%20import%20syntax%2C%20don't%20import%20full%20files.%20This%20restricts%20what%20is%20being%20imported%20to%20just%20the%20named%20items%2C%20not%20everything%20in%20the%20file.%20Importing%20full%20files%20can%20result%20in%20solc%20complaining%20about%20duplicate%20definitions%20and%20slither%20erroring%2C%20especially%20as%20repos%20grow%20and%20have%20more%20dependencies%20with%20overlapping%20names.%0A%0A-%20Good%3A%20%60import%20%7BMyContract%7D%20from%20%22src%2FMyContract.sol%22%60%20to%20only%20import%20%60MyContract%60.%0A-%20Bad%3A%20%60import%20%22src%2FMyContract.sol%22%60%20imports%20everything%20in%20%60MyContract.sol%60.%20(Importing%20%60forge-std%2FTest%60%20or%20%60Script%60%20can%20be%20an%20exception%20here%2C%20so%20you%20get%20the%20console%20library%2C%20etc).%0A%0A%23%23%23%20Absolute%20vs%20Relative%20Imports%0A%0ANote%20the%20tradeoffs%20between%20absolute%20and%20relative%20paths%20for%20imports%20(where%20absolute%20paths%20are%20relative%20to%20the%20repo%20root%2C%20e.g.%20%60%22src%2Finterfaces%2FIERC20.sol%22%60)%2C%20and%20choose%20the%20best%20approach%20for%20your%20project%3A%0A%0A-%20Absolute%20paths%20make%20it%20easier%20to%20see%20where%20files%20are%20from%20and%20reduce%20churn%20when%20moving%20files%20around.%0A-%20Relative%20paths%20make%20it%20more%20likely%20your%20editor%20can%20provide%20features%20like%20linting%20and%20autocomplete%2C%20since%20editors%2Fextensions%20may%20not%20understand%20your%20remappings.%0A%0A%23%23%23%20Copying%20Libraries%20from%20Dependencies%0A%0AIf%20copying%20a%20library%20from%20a%20dependency%20(instead%20of%20importing%20it)%2C%20use%20the%20%60ignore%20%3D%20%5B%5D%60%20option%20in%20the%20config%20file%20to%20avoid%20formatting%20that%20file.%20This%20makes%20diffing%20it%20against%20the%20original%20simpler%20for%20reviewers%20and%20auditors.%0A%0A%23%23%23%20Formatting%0A%0ASimilarly%2C%20feel%20free%20to%20use%20the%20%60%2F%2F%20forgefmt%3A%20disable-*%60%20comment%20directives%20to%20ignore%20lines%2Fsections%20of%20code%20that%20look%20better%20with%20manual%20formatting.%20Supported%20values%20for%20%60*%60%20are%3A%0A%0A-%20%60disable-line%60%0A-%20%60disable-next-line%60%0A-%20%60disable-next-item%60%0A-%20%60disable-start%60%0A-%20%60disable-end%60%0A%0A%23%23%23%20Write%20Secure%20Code%0A%0AAdditional%20best%20practices%20from%20%5Bsamsczun%5D(https%3A%2F%2Ftwitter.com%2Fsamczsun)'s%20%5BHow%20Do%20You%20Even%20Write%20Secure%20Code%20Anyways%5D(https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DWm3t8Fuiy1E)%20talk%3A%0A%0A-%20Use%20descriptive%20variable%20names.%0A-%20Limit%20the%20number%20of%20active%20variables.%0A-%20No%20redundant%20logic.%0A-%20Early%20exit%20as%20much%20as%20possible%20to%20reduce%20mental%20load%20when%20seeing%20the%20code.%0A-%20Related%20code%20should%20be%20placed%20near%20each%20other.%0A-%20Delete%20unused%20code.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-scripts-D-OlGY3I.js"),__vite__mapDeps([231,1])),path:"/guides/best-practices/writing-scripts",type:"mdx",filePath:"guides/best-practices/writing-scripts.md",content:"---%0Adescription%3A%20Best%20practices%20for%20writing%20secure%20and%20maintainable%20deployment%20scripts%20with%20proper%20testing%20and%20frontrunning%20protection.%0A---%0A%0A%23%23%20Scripting%20Practices%0A%0A%23%23%23%20Use%20%60run%60%20as%20the%20default%20function%0A%0AStick%20with%20%60run%60%20as%20the%20default%20function%20name%20for%20clarity.%0A%0A%23%23%23%20Assign%20correct%20function%20visibility%0A%0AAny%20methods%20that%20are%20not%20intended%20to%20be%20called%20directly%20in%20the%20script%20should%20be%20%60internal%60%20or%20%60private%60.%20Generally%20the%20only%20public%20method%20should%20be%20%60run%60%2C%20as%20it's%20easier%20to%20read%2Funderstand%20when%20each%20script%20file%20just%20does%20one%20thing.%0A%0A%23%23%23%20Naming%20script%20files%0A%0AConsider%20prefixing%20scripts%20with%20a%20number%20based%20on%20the%20order%20they're%20intended%20to%20be%20run%20over%20the%20protocol's%20lifecycle.%20For%20example%2C%20%6001_Deploy.s.sol%60%2C%20%6002_TransferOwnership.s.sol%60.%20This%20makes%20things%20more%20self-documenting.%20This%20may%20not%20always%20apply%20depending%20on%20your%20project.%0A%0A%23%23%23%20Test%20your%20scripts%0A%0A-%20Unit%20test%20them%20like%20you%20would%20test%20normal%20contracts%2C%20by%20writing%20tests%20that%20assert%20on%20the%20state%20changes%20made%20from%20running%20the%20script.%0A-%20Write%20your%20deploy%20script%20and%20scaffold%20tests%20by%20running%20that%20script.%20Then%2C%20run%20all%20tests%20against%20the%20state%20resulting%20from%20your%20production%20deployment%20script.%20This%20is%20a%20great%20way%20to%20gain%20confidence%20in%20a%20deploy%20script.%0A-%20Within%20your%20script%20itself%2C%20use%20%60require%60%20statements%20(or%20the%20%60if%20(condition)%20revert()%60%20pattern%20if%20you%20prefer)%20to%20stop%20execution%20of%20your%20script%20if%20something%20is%20wrong.%20For%20example%2C%20%60require(computedAddress%20%3D%3D%20deployedAddress%2C%20%22address%20mismatch%22)%60.%20Using%20the%20%60assertEq%60%20helpers%20instead%20will%20not%20stop%20execution.%0A%0A%23%23%23%20Audit%20Broadcast%20Transactions%0A%0A**Carefully%20audit%20which%20transactions%20are%20broadcast**.%20Transactions%20not%20broadcast%20are%20still%20executed%20in%20the%20context%20of%20a%20test%2C%20so%20missing%20broadcasts%20or%20extra%20broadcasts%20are%20easy%20sources%20of%20error%20in%20the%20previous%20step.%0A%0A%23%23%23%20Avoid%20getting%20frontrun%0A%0A**Watch%20out%20for%20frontrunning**.%20Forge%20simulates%20your%20script%2C%20generates%20transaction%20data%20from%20the%20simulation%20results%2C%20then%20broadcasts%20the%20transactions.%20Make%20sure%20your%20script%20is%20robust%20against%20chain-state%20changing%20between%20the%20simulation%20and%20broadcast.%20A%20sample%20script%20vulnerable%20to%20this%20is%20below%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Pseudo-code%2C%20may%20not%20compile.%0Acontract%20VulnerableScript%20is%20Script%20%7B%0A%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20vm.startBroadcast()%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Transaction%201%3A%20Deploy%20a%20new%20Gnosis%20Safe%20with%20CREATE.%0A%20%20%20%20%20%20%2F%2F%20Because%20we're%20using%20CREATE%20instead%20of%20CREATE2%2C%20the%20address%20of%20the%20new%0A%20%20%20%20%20%20%2F%2F%20Safe%20is%20a%20function%20of%20the%20nonce%20of%20the%20gnosisSafeProxyFactory.%0A%20%20%20%20%20%20address%20mySafe%20%3D%20gnosisSafeProxyFactory.createProxy(singleton%2C%20data)%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Transaction%202%3A%20Send%20tokens%20to%20the%20new%20Safe.%0A%20%20%20%20%20%20%2F%2F%20We%20know%20the%20address%20of%20mySafe%20is%20a%20function%20of%20the%20nonce%20of%20the%0A%20%20%20%20%20%20%2F%2F%20gnosisSafeProxyFactory.%20If%20someone%20else%20deploys%20a%20Gnosis%20Safe%20between%0A%20%20%20%20%20%20%2F%2F%20the%20simulation%20and%20broadcast%2C%20the%20address%20of%20mySafe%20will%20be%20different%2C%0A%20%20%20%20%20%20%2F%2F%20and%20this%20script%20will%20send%201000%20DAI%20to%20the%20other%20person's%20Safe.%20In%20this%0A%20%20%20%20%20%20%2F%2F%20case%2C%20we%20can%20protect%20ourselves%20from%20this%20by%20using%20CREATE2%20instead%20of%0A%20%20%20%20%20%20%2F%2F%20CREATE%2C%20but%20every%20situation%20may%20have%20different%20solutions.%0A%20%20%20%20%20%20dai.transfer(mySafe%2C%201000e18)%3B%0A%0A%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Reading%20JSON%20files%0A%0AFor%20scripts%20that%20read%20from%20JSON%20input%20files%2C%20put%20the%20input%20files%20in%20%60script%2Finput%2F%3CchainID%3E%2F%3Cdescription%3E.json%60.%20Then%20have%20%60run(string%20memory%20input)%60%20(or%20take%20multiple%20string%20inputs%20if%20you%20need%20to%20read%20from%20multiple%20files)%20as%20the%20script's%20signature%2C%20and%20use%20the%20below%20method%20to%20read%20the%20JSON%20file.%0A%0A%60%60%60solidity%0Afunction%20readInput(string%20memory%20input)%20internal%20returns%20(string%20memory)%20%7B%0A%20%20string%20memory%20inputDir%20%3D%20string.concat(vm.projectRoot()%2C%20%22%2Fscript%2Finput%2F%22)%3B%0A%20%20string%20memory%20chainDir%20%3D%20string.concat(vm.toString(block.chainid)%2C%20%22%2F%22)%3B%0A%20%20string%20memory%20file%20%3D%20string.concat(input%2C%20%22.json%22)%3B%0A%20%20return%20vm.readFile(string.concat(inputDir%2C%20chainDir%2C%20file))%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-scripts-D-OlGY3I.js"),__vite__mapDeps([231,1])),path:"/guides/best-practices/writing-scripts.html",type:"mdx",filePath:"guides/best-practices/writing-scripts.md",content:"---%0Adescription%3A%20Best%20practices%20for%20writing%20secure%20and%20maintainable%20deployment%20scripts%20with%20proper%20testing%20and%20frontrunning%20protection.%0A---%0A%0A%23%23%20Scripting%20Practices%0A%0A%23%23%23%20Use%20%60run%60%20as%20the%20default%20function%0A%0AStick%20with%20%60run%60%20as%20the%20default%20function%20name%20for%20clarity.%0A%0A%23%23%23%20Assign%20correct%20function%20visibility%0A%0AAny%20methods%20that%20are%20not%20intended%20to%20be%20called%20directly%20in%20the%20script%20should%20be%20%60internal%60%20or%20%60private%60.%20Generally%20the%20only%20public%20method%20should%20be%20%60run%60%2C%20as%20it's%20easier%20to%20read%2Funderstand%20when%20each%20script%20file%20just%20does%20one%20thing.%0A%0A%23%23%23%20Naming%20script%20files%0A%0AConsider%20prefixing%20scripts%20with%20a%20number%20based%20on%20the%20order%20they're%20intended%20to%20be%20run%20over%20the%20protocol's%20lifecycle.%20For%20example%2C%20%6001_Deploy.s.sol%60%2C%20%6002_TransferOwnership.s.sol%60.%20This%20makes%20things%20more%20self-documenting.%20This%20may%20not%20always%20apply%20depending%20on%20your%20project.%0A%0A%23%23%23%20Test%20your%20scripts%0A%0A-%20Unit%20test%20them%20like%20you%20would%20test%20normal%20contracts%2C%20by%20writing%20tests%20that%20assert%20on%20the%20state%20changes%20made%20from%20running%20the%20script.%0A-%20Write%20your%20deploy%20script%20and%20scaffold%20tests%20by%20running%20that%20script.%20Then%2C%20run%20all%20tests%20against%20the%20state%20resulting%20from%20your%20production%20deployment%20script.%20This%20is%20a%20great%20way%20to%20gain%20confidence%20in%20a%20deploy%20script.%0A-%20Within%20your%20script%20itself%2C%20use%20%60require%60%20statements%20(or%20the%20%60if%20(condition)%20revert()%60%20pattern%20if%20you%20prefer)%20to%20stop%20execution%20of%20your%20script%20if%20something%20is%20wrong.%20For%20example%2C%20%60require(computedAddress%20%3D%3D%20deployedAddress%2C%20%22address%20mismatch%22)%60.%20Using%20the%20%60assertEq%60%20helpers%20instead%20will%20not%20stop%20execution.%0A%0A%23%23%23%20Audit%20Broadcast%20Transactions%0A%0A**Carefully%20audit%20which%20transactions%20are%20broadcast**.%20Transactions%20not%20broadcast%20are%20still%20executed%20in%20the%20context%20of%20a%20test%2C%20so%20missing%20broadcasts%20or%20extra%20broadcasts%20are%20easy%20sources%20of%20error%20in%20the%20previous%20step.%0A%0A%23%23%23%20Avoid%20getting%20frontrun%0A%0A**Watch%20out%20for%20frontrunning**.%20Forge%20simulates%20your%20script%2C%20generates%20transaction%20data%20from%20the%20simulation%20results%2C%20then%20broadcasts%20the%20transactions.%20Make%20sure%20your%20script%20is%20robust%20against%20chain-state%20changing%20between%20the%20simulation%20and%20broadcast.%20A%20sample%20script%20vulnerable%20to%20this%20is%20below%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Pseudo-code%2C%20may%20not%20compile.%0Acontract%20VulnerableScript%20is%20Script%20%7B%0A%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20vm.startBroadcast()%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Transaction%201%3A%20Deploy%20a%20new%20Gnosis%20Safe%20with%20CREATE.%0A%20%20%20%20%20%20%2F%2F%20Because%20we're%20using%20CREATE%20instead%20of%20CREATE2%2C%20the%20address%20of%20the%20new%0A%20%20%20%20%20%20%2F%2F%20Safe%20is%20a%20function%20of%20the%20nonce%20of%20the%20gnosisSafeProxyFactory.%0A%20%20%20%20%20%20address%20mySafe%20%3D%20gnosisSafeProxyFactory.createProxy(singleton%2C%20data)%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Transaction%202%3A%20Send%20tokens%20to%20the%20new%20Safe.%0A%20%20%20%20%20%20%2F%2F%20We%20know%20the%20address%20of%20mySafe%20is%20a%20function%20of%20the%20nonce%20of%20the%0A%20%20%20%20%20%20%2F%2F%20gnosisSafeProxyFactory.%20If%20someone%20else%20deploys%20a%20Gnosis%20Safe%20between%0A%20%20%20%20%20%20%2F%2F%20the%20simulation%20and%20broadcast%2C%20the%20address%20of%20mySafe%20will%20be%20different%2C%0A%20%20%20%20%20%20%2F%2F%20and%20this%20script%20will%20send%201000%20DAI%20to%20the%20other%20person's%20Safe.%20In%20this%0A%20%20%20%20%20%20%2F%2F%20case%2C%20we%20can%20protect%20ourselves%20from%20this%20by%20using%20CREATE2%20instead%20of%0A%20%20%20%20%20%20%2F%2F%20CREATE%2C%20but%20every%20situation%20may%20have%20different%20solutions.%0A%20%20%20%20%20%20dai.transfer(mySafe%2C%201000e18)%3B%0A%0A%20%20%20%20%20%20vm.stopBroadcast()%3B%0A%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Reading%20JSON%20files%0A%0AFor%20scripts%20that%20read%20from%20JSON%20input%20files%2C%20put%20the%20input%20files%20in%20%60script%2Finput%2F%3CchainID%3E%2F%3Cdescription%3E.json%60.%20Then%20have%20%60run(string%20memory%20input)%60%20(or%20take%20multiple%20string%20inputs%20if%20you%20need%20to%20read%20from%20multiple%20files)%20as%20the%20script's%20signature%2C%20and%20use%20the%20below%20method%20to%20read%20the%20JSON%20file.%0A%0A%60%60%60solidity%0Afunction%20readInput(string%20memory%20input)%20internal%20returns%20(string%20memory)%20%7B%0A%20%20string%20memory%20inputDir%20%3D%20string.concat(vm.projectRoot()%2C%20%22%2Fscript%2Finput%2F%22)%3B%0A%20%20string%20memory%20chainDir%20%3D%20string.concat(vm.toString(block.chainid)%2C%20%22%2F%22)%3B%0A%20%20string%20memory%20file%20%3D%20string.concat(input%2C%20%22.json%22)%3B%0A%20%20return%20vm.readFile(string.concat(inputDir%2C%20chainDir%2C%20file))%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-tests-DwsVKwWf.js"),__vite__mapDeps([232,1])),path:"/guides/best-practices/writing-tests",type:"mdx",filePath:"guides/best-practices/writing-tests.md",content:"---%0Adescription%3A%20Comprehensive%20testing%20strategies%20including%20unit%20tests%2C%20fork%20tests%2C%20test%20organization%2C%20and%20harness%20patterns%20for%20smart%20contracts.%0A---%0A%0A%23%23%20Tests%0A%0A---%0A%0A%23%23%23%20General%20Test%20Guidance%0A%0A%23%23%23%23%20Naming%20test%20files%0A%0AFor%20testing%20%60MyContract.sol%60%2C%20the%20test%20file%20should%20be%20%60MyContract.t.sol%60.%20For%20testing%20%60MyScript.s.sol%60%2C%20the%20test%20file%20should%20be%20%60MyScript.t.sol%60.%0A%0A-%20If%20the%20contract%20is%20big%20and%20you%20want%20to%20split%20it%20over%20multiple%20files%2C%20group%20them%20logically%20like%20%60MyContract.owner.t.sol%60%2C%20%60MyContract.deposits.t.sol%60%2C%20etc.%0A%0A%23%23%23%23%20No%20assertions%20in%20%60setUp%60%0A%0ANever%20make%20assertions%20in%20the%20%60setUp%60%20function%2C%20instead%20use%20a%20dedicated%20test%20like%20%60test_SetUpState()%60%20if%20you%20need%20to%20ensure%20your%20%60setUp%60%20function%20does%20what%20you%20expected.%20More%20info%20on%20why%20in%20%5Bfoundry-rs%2Ffoundry%231291%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F1291)%0A%0A%23%23%23%23%20Organizing%20and%20Naming%20tests%0A%0AFor%20unit%20tests%2C%20there%20are%20two%20major%20ways%20to%20organize%20the%20tests%3A%0A%0A1.%20%20Treat%20contracts%20as%20describe%20blocks%3A%0A%0A%20%20%20%20-%20%60contract%20Add%60%20holds%20all%20unit%20tests%20for%20the%20%60add%60%20method%20of%20%60MyContract%60.%0A%20%20%20%20-%20%60contract%20Supply%60%20holds%20all%20tests%20for%20the%20%60supply%60%20method.%0A%20%20%20%20-%20%60contract%20Constructor%60%20hold%20all%20tests%20for%20the%20constructor.%0A%20%20%20%20-%20A%20benefit%20of%20this%20approach%20is%20that%20smaller%20contracts%20should%20compile%20faster%20than%20large%20ones%2C%20so%20this%20approach%20of%20many%20small%20contracts%20should%20save%20time%20as%20test%20suites%20get%20large.%0A%0A2.%20%20Have%20a%20Test%20contract%20per%20contract-under-test%2C%20with%20as%20many%20utilities%20and%20fixtures%20as%20you%20want%3A%0A%0A%20%20%20%20-%20%60contract%20MyContractTest%60%20holds%20all%20unit%20tests%20for%20%60MyContract%60.%0A%20%20%20%20-%20%60function%20test_add_AddsTwoNumbers()%60%20lives%20within%20%60MyContractTest%60%20to%20test%20the%20%60add%60%20method.%0A%20%20%20%20-%20%60function%20test_supply_UsersCanSupplyTokens()%60%20also%20lives%20within%20%60MyContractTest%60%20to%20test%20the%20%60supply%60%20method.%0A%20%20%20%20-%20A%20benefit%20of%20this%20approach%20is%20that%20test%20output%20is%20grouped%20by%20contract-under-test%2C%20which%20makes%20it%20easier%20to%20quickly%20see%20where%20failures%20are.%0A%0A3.%20%20Some%20general%20guidance%20for%20all%20kinds%20tests%3A%0A%0A%20%20%20%20-%20Test%20contracts%2Ffunctions%20should%20be%20written%20in%20the%20same%20order%20as%20the%20original%20functions%20in%20the%20contract-under-test.%0A%20%20%20%20-%20All%20unit%20tests%20that%20test%20the%20same%20function%20should%20live%20serially%20in%20the%20test%20file.%0A%20%20%20%20-%20Test%20contracts%20can%20inherit%20from%20any%20helper%20contracts%20you%20want.%20For%20example%20%60contract%20MyContractTest%60%20tests%20%60MyContract%60%2C%20but%20may%20inherit%20from%20forge-std's%20%60Test%60%2C%20as%20well%20as%20e.g.%20your%20own%20%60TestUtilities%60%20helper%20contract.%0A%0A4.%20%20Integration%20tests%20should%20live%20in%20the%20same%20%60test%60%20directory%2C%20with%20a%20clear%20naming%20convention.%20These%20may%20be%20in%20dedicated%20files%2C%20or%20they%20may%20live%20next%20to%20related%20unit%20tests%20in%20existing%20test%20files.%0A%0A5.%20%20Be%20consistent%20with%20test%20naming%2C%20as%20it's%20helpful%20for%20filtering%20tests%20(e.g.%20for%20gas%20reports%20you%20might%20want%20to%20filter%20out%20revert%20tests).%20When%20combining%20naming%20conventions%2C%20keep%20them%20alphabetical.%20Below%20is%20a%20sample%20of%20valid%20names.%20A%20comprehensive%20list%20of%20valid%20and%20invalid%20examples%20can%20be%20found%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2FScopeLift%2Fscopelint%2Fblob%2F1857e3940bfe92ac5a136827374f4b27ff083971%2Fsrc%2Fcheck%2Fvalidators%2Ftest_names.rs%23L106-L143).%0A%0A%20%20%20%20-%20%60test_Description%60%20for%20standard%20tests.%0A%20%20%20%20-%20%60testFuzz_Description%60%20for%20fuzz%20tests.%0A%20%20%20%20-%20%60test_Revert%5BIf%7CWhen%5D_Condition%60%20for%20tests%20expecting%20a%20revert.%0A%20%20%20%20-%20%60testFork_Description%60%20for%20tests%20that%20fork%20from%20a%20network.%0A%20%20%20%20-%20%60testForkFuzz_Revert%5BIf%7CWhen%5D_Condition%60%20for%20a%20fuzz%20test%20that%20forks%20and%20expects%20a%20revert.%0A%0A6.%20%20Name%20your%20constants%20and%20immutables%20using%20%60ALL_CAPS_WITH_UNDERSCORES%60%2C%20to%20make%20it%20easier%20to%20distinguish%20them%20from%20variables%20and%20functions.%0A%0A7.%20%20When%20using%20assertions%20like%20%60assertEq%60%2C%20consider%20leveraging%20the%20last%20string%20param%20to%20make%20it%20easier%20to%20identify%20failures.%20These%20can%20be%20kept%20brief%2C%20or%20even%20just%20be%20numbers%26mdash%3Bthey%20basically%20serve%20as%20a%20replacement%20for%20showing%20line%20numbers%20of%20the%20revert%2C%20e.g.%20%60assertEq(x%2C%20y%2C%20%221%22)%60%20or%20%60assertEq(x%2C%20y%2C%20%22sum1%22)%60.%20_(Note%3A%20%5Bfoundry-rs%2Ffoundry%232328%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F2328)%20tracks%20integrating%20this%20natively)._%0A%0A8.%20%20When%20testing%20events%2C%20prefer%20setting%20all%20%60expectEmit%60%20arguments%20to%20%60true%60%2C%20i.e.%20%60vm.expectEmit(true%2C%20true%2C%20true%2C%20true)%60%20or%20%60vm.expectEmit()%60.%20Benefits%3A%0A%0A%20%20%20%20-%20This%20ensures%20you%20test%20everything%20in%20your%20event.%0A%20%20%20%20-%20If%20you%20add%20a%20topic%20(i.e.%20a%20new%20indexed%20parameter)%2C%20it's%20now%20tested%20by%20default.%0A%20%20%20%20-%20Even%20if%20you%20only%20have%201%20topic%2C%20the%20extra%20%60true%60%20arguments%20don't%20hurt.%0A%0A9.%20%20Remember%20to%20write%20invariant%20tests!%20For%20the%20assertion%20string%2C%20use%20a%20verbose%20english%20description%20of%20the%20invariant%3A%20%60assertEq(x%20%2B%20y%2C%20z%2C%20%22Invariant%20violated%3A%20the%20sum%20of%20x%20and%20y%20must%20always%20equal%20z%22)%60.%0A%0A%23%23%23%20Fork%20Tests%0A%0A%23%23%23%23%20Use%20fork%20tests%20liberally%0A%0ADon't%20feel%20like%20you%20need%20to%20give%20forks%20tests%20special%20treatment%2C%20and%20use%20them%20liberally%3A%0A%0A-%20Mocks%20are%20_required_%20in%20closed-source%20web2%20development%E2%80%94you%20have%20to%20mock%20API%20responses%20because%20the%20code%20for%20that%20API%20isn't%20open%20source%20so%20you%20cannot%20just%20run%20it%20locally.%20But%20for%20blockchains%20that's%20not%20true%3A%20any%20code%20you're%20interacting%20with%20that's%20already%20deployed%20can%20be%20locally%20executed%20and%20even%20modified%20for%20free.%20So%20why%20introduce%20the%20risk%20of%20a%20wrong%20mock%20if%20you%20don't%20need%20to%3F%0A-%20A%20common%20reason%20to%20avoid%20fork%20tests%20and%20prefer%20mocks%20is%20that%20fork%20tests%20are%20slow.%20But%20this%20is%20not%20always%20true.%20By%20pinning%20to%20a%20block%20number%2C%20forge%20caches%20RPC%20responses%20so%20only%20the%20first%20run%20is%20slower%2C%20and%20subsequent%20runs%20are%20significantly%20faster.%20See%20%5Bthis%20benchmark%5D(https%3A%2F%2Fgithub.com%2Fmds1%2Fconvex-shutdown-simulation%2F)%2C%20where%20it%20took%20forge%207%20minutes%20for%20the%20first%20run%20with%20a%20remote%20RPC%2C%20but%20only%20half%20a%20second%20once%20data%20was%20cached.%20%5BAlchemy%5D(https%3A%2F%2Falchemy.com)%2C%20%5BInfura%5D(https%3A%2F%2Finfura.io)%20and%20%5BTenderly%5D(https%3A%2F%2Ftenderly.co)%20offer%20free%20archive%20data%2C%20so%20pinning%20to%20a%20block%20shouldn't%20be%20problematic.%0A-%20Note%20that%20the%20%5Bfoundry-toolchain%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry-toolchain)%20GitHub%20Action%20will%20cache%20RPC%20responses%20in%20CI%20by%20default%2C%20and%20it%20will%20also%20update%20the%20cache%20when%20you%20update%20your%20fork%20tests.%0A%0A%23%23%23%23%20Minimize%20RPC%20requests%0A%0ABe%20careful%20with%20fuzz%20tests%20on%20a%20fork%20to%20avoid%20burning%20through%20RPC%20requests%20with%20non-deterministic%20fuzzing.%20If%20the%20input%20to%20your%20fork%20fuzz%20test%20is%20some%20parameter%20which%20is%20used%20in%20an%20RPC%20call%20to%20fetch%20data%20(e.g.%20querying%20the%20token%20balance%20of%20an%20address)%2C%20each%20run%20of%20a%20fuzz%20test%20uses%20at%20least%201%20RPC%20request%2C%20so%20you'll%20quickly%20hit%20rate%20limits%20or%20usage%20limits.%20Solutions%20to%20consider%3A%0A%0A-%20Replace%20multiple%20RPC%20calls%20with%20a%20single%20%5Bmulticall%5D(https%3A%2F%2Fgithub.com%2Fmds1%2Fmulticall).%0A-%20Specify%20a%20fuzz%2Finvariant%20%5Bseed%5D(%2Fconfig%2Freference%2Ftesting%23seed)%3A%20this%20makes%20sure%20each%20%60forge%20test%60%20invocation%20uses%20the%20same%20fuzz%20inputs.%20RPC%20results%20are%20cached%20locally%2C%20so%20you'll%20only%20query%20the%20node%20the%20first%20time.%0A-%20In%20CI%2C%20consider%20setting%20the%20fuzz%20seed%20using%20a%20%5Bcomputed%20environment%20variable%5D(https%3A%2F%2Fgithub.com%2Fsablier-labs%2Fv2-core%2Fblob%2Fd1157b49ed4bceeff0c4e437c9f723e88c134d3a%2F.github%2Fworkflows%2Fci.yml%23L252-L254)%20so%20it%20changes%20every%20day%20or%20every%20week.%20This%20gives%20flexibility%20on%20the%20tradeoff%20between%20increasing%20randomness%20to%20find%20more%20bugs%20vs.%20using%20a%20seed%20to%20reduce%20RPC%20requests.%0A-%20Structure%20your%20tests%20so%20the%20data%20you%20are%20fuzzing%20over%20is%20computed%20locally%20by%20your%20contract%2C%20and%20not%20data%20that%20is%20used%20in%20an%20RPC%20call%20(may%20or%20may%20not%20be%20feasible%20based%20on%20what%20you're%20doing).%0A-%20Lastly%2C%20you%20can%20of%20course%20always%20run%20a%20local%20node%20or%20bump%20your%20RPC%20plan.%0A%0A%23%23%23%23%20Configure%20fork%20urls%20in%20%60foundry.toml%60%20and%20use%20cheatcodes%0A%0A1.%20When%20writing%20fork%20tests%2C%20do%20not%20use%20the%20%60--fork-url%60%20flag.%20Instead%2C%20prefer%20the%20following%20approach%20for%20its%20improved%20flexibility%3A%0A%0A%20%20%20-%20Define%20%60%5Brpc_endpoints%5D%60%20in%20the%20%60foundry.toml%60%20config%20file%20and%20use%20the%20%5Bforking%20cheatcodes%5D(%2Fforge%2Ftests%2Ffork-testing%23forking-cheatcodes).%0A%20%20%20-%20Access%20the%20RPC%20URL%20endpoint%20in%20your%20test%20with%20forge-std's%20%60stdChains.ChainName.rpcUrl%60.%20See%20the%20list%20of%20supported%20chains%20and%20expected%20config%20file%20aliases%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fff4bf7db008d096ea5a657f2c20516182252a3ed%2Fsrc%2FStdCheats.sol%23L255-L271).%0A%20%20%20-%20Always%20pin%20to%20a%20block%20so%20tests%20are%20deterministic%20and%20RPC%20responses%20are%20cached.%0A%20%20%20-%20More%20info%20on%20this%20fork%20test%20approach%20can%20be%20found%20%5Bhere%5D(https%3A%2F%2Ftwitter.com%2Fmsolomon44%2Fstatus%2F1564742781129502722)%20(this%20predates%20%60StdChains%60%20so%20that%20aspect%20is%20a%20bit%20out%20of%20date).%0A%0A%23%23%23%20Test%20Harnesses%0A%0A%23%23%23%23%20Internal%20Functions%0A%0ATo%20test%20%60internal%60%20functions%2C%20write%20a%20harness%20contract%20that%20inherits%20from%20the%20contract%20under%20test%20(CuT).%20Harness%20contracts%20that%20inherit%20from%20the%20CuT%20expose%20the%20%60internal%60%20functions%20as%20%60external%60%20ones.%0A%0AEach%20%60internal%60%20function%20that%20is%20tested%20should%20be%20exposed%20via%20an%20external%20one%20with%20a%20name%20that%20follows%20the%20pattern%20%60exposed_%3Cfunction_name%3E%60.%20For%20example%3A%0A%0A%60%60%60solidity%0A%2F%2F%20file%3A%20src%2FMyContract.sol%0Acontract%20MyContract%20%7B%0A%20%20function%20myInternalMethod()%20internal%20returns%20(uint)%20%7B%0A%20%20%20%20return%2042%3B%0A%20%20%7D%0A%7D%0A%0A%2F%2F%20file%3A%20test%2FMyContract.t.sol%0Aimport%20%7BMyContract%7D%20from%20%22src%2FMyContract.sol%22%3B%0A%0Acontract%20MyContractHarness%20is%20MyContract%20%7B%0A%20%20%2F%2F%20Deploy%20this%20contract%20then%20call%20this%20method%20to%20test%20%60myInternalMethod%60.%0A%20%20function%20exposed_myInternalMethod()%20external%20returns%20(uint)%20%7B%0A%20%20%20%20return%20myInternalMethod()%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20Private%20Functions%0A%0AUnfortunately%20there%20is%20currently%20no%20good%20way%20to%20unit%20test%20%60private%60%20methods%20since%20they%20cannot%20be%20accessed%20by%20any%20other%20contracts.%20Options%20include%3A%0A%0A-%20Converting%20%60private%60%20functions%20to%20%60internal%60.%0A-%20Copy%2Fpasting%20the%20logic%20into%20your%20test%20contract%20and%20writing%20a%20script%20that%20runs%20in%20CI%20check%20to%20ensure%20both%20functions%20are%20identical.%0A%0A%23%23%23%23%20Workaround%20Functions%0A%0AHarnesses%20can%20also%20be%20used%20to%20expose%20functionality%20or%20information%20otherwise%20unavailable%20in%20the%20original%20smart%20contract.%20The%20most%20straightforward%20example%20is%20when%20we%20want%20to%20test%20the%20length%20of%20a%20public%20array.%20The%20functions%20should%20follow%20the%20pattern%3A%20%60workaround_%3Cfunction_name%3E%60%2C%20such%20as%20%60workaround_queueLength()%60.%0A%0AAnother%20use%20case%20for%20this%20is%20tracking%20data%20that%20you%20would%20not%20track%20in%20production%20to%20help%20test%20invariants.%20For%20example%2C%20you%20might%20store%20a%20list%20of%20all%20token%20holders%20to%20simplify%20validation%20of%20the%20invariant%20%22sum%20of%20all%20balances%20must%20equal%20total%20supply%22.%20These%20are%20often%20known%20as%20%22ghost%20variables%22.%20You%20can%20learn%20more%20about%20this%20in%20%5BRikard%20Hjort%5D(https%3A%2F%2Ftwitter.com%2Frikardhjort)'s%20%5BFormal%20Methods%20for%20the%20Working%20DeFi%20Dev%5D(https%3A%2F%2Fyoutu.be%2FETlNhV9jYJw)%20talk.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./writing-tests-DwsVKwWf.js"),__vite__mapDeps([232,1])),path:"/guides/best-practices/writing-tests.html",type:"mdx",filePath:"guides/best-practices/writing-tests.md",content:"---%0Adescription%3A%20Comprehensive%20testing%20strategies%20including%20unit%20tests%2C%20fork%20tests%2C%20test%20organization%2C%20and%20harness%20patterns%20for%20smart%20contracts.%0A---%0A%0A%23%23%20Tests%0A%0A---%0A%0A%23%23%23%20General%20Test%20Guidance%0A%0A%23%23%23%23%20Naming%20test%20files%0A%0AFor%20testing%20%60MyContract.sol%60%2C%20the%20test%20file%20should%20be%20%60MyContract.t.sol%60.%20For%20testing%20%60MyScript.s.sol%60%2C%20the%20test%20file%20should%20be%20%60MyScript.t.sol%60.%0A%0A-%20If%20the%20contract%20is%20big%20and%20you%20want%20to%20split%20it%20over%20multiple%20files%2C%20group%20them%20logically%20like%20%60MyContract.owner.t.sol%60%2C%20%60MyContract.deposits.t.sol%60%2C%20etc.%0A%0A%23%23%23%23%20No%20assertions%20in%20%60setUp%60%0A%0ANever%20make%20assertions%20in%20the%20%60setUp%60%20function%2C%20instead%20use%20a%20dedicated%20test%20like%20%60test_SetUpState()%60%20if%20you%20need%20to%20ensure%20your%20%60setUp%60%20function%20does%20what%20you%20expected.%20More%20info%20on%20why%20in%20%5Bfoundry-rs%2Ffoundry%231291%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F1291)%0A%0A%23%23%23%23%20Organizing%20and%20Naming%20tests%0A%0AFor%20unit%20tests%2C%20there%20are%20two%20major%20ways%20to%20organize%20the%20tests%3A%0A%0A1.%20%20Treat%20contracts%20as%20describe%20blocks%3A%0A%0A%20%20%20%20-%20%60contract%20Add%60%20holds%20all%20unit%20tests%20for%20the%20%60add%60%20method%20of%20%60MyContract%60.%0A%20%20%20%20-%20%60contract%20Supply%60%20holds%20all%20tests%20for%20the%20%60supply%60%20method.%0A%20%20%20%20-%20%60contract%20Constructor%60%20hold%20all%20tests%20for%20the%20constructor.%0A%20%20%20%20-%20A%20benefit%20of%20this%20approach%20is%20that%20smaller%20contracts%20should%20compile%20faster%20than%20large%20ones%2C%20so%20this%20approach%20of%20many%20small%20contracts%20should%20save%20time%20as%20test%20suites%20get%20large.%0A%0A2.%20%20Have%20a%20Test%20contract%20per%20contract-under-test%2C%20with%20as%20many%20utilities%20and%20fixtures%20as%20you%20want%3A%0A%0A%20%20%20%20-%20%60contract%20MyContractTest%60%20holds%20all%20unit%20tests%20for%20%60MyContract%60.%0A%20%20%20%20-%20%60function%20test_add_AddsTwoNumbers()%60%20lives%20within%20%60MyContractTest%60%20to%20test%20the%20%60add%60%20method.%0A%20%20%20%20-%20%60function%20test_supply_UsersCanSupplyTokens()%60%20also%20lives%20within%20%60MyContractTest%60%20to%20test%20the%20%60supply%60%20method.%0A%20%20%20%20-%20A%20benefit%20of%20this%20approach%20is%20that%20test%20output%20is%20grouped%20by%20contract-under-test%2C%20which%20makes%20it%20easier%20to%20quickly%20see%20where%20failures%20are.%0A%0A3.%20%20Some%20general%20guidance%20for%20all%20kinds%20tests%3A%0A%0A%20%20%20%20-%20Test%20contracts%2Ffunctions%20should%20be%20written%20in%20the%20same%20order%20as%20the%20original%20functions%20in%20the%20contract-under-test.%0A%20%20%20%20-%20All%20unit%20tests%20that%20test%20the%20same%20function%20should%20live%20serially%20in%20the%20test%20file.%0A%20%20%20%20-%20Test%20contracts%20can%20inherit%20from%20any%20helper%20contracts%20you%20want.%20For%20example%20%60contract%20MyContractTest%60%20tests%20%60MyContract%60%2C%20but%20may%20inherit%20from%20forge-std's%20%60Test%60%2C%20as%20well%20as%20e.g.%20your%20own%20%60TestUtilities%60%20helper%20contract.%0A%0A4.%20%20Integration%20tests%20should%20live%20in%20the%20same%20%60test%60%20directory%2C%20with%20a%20clear%20naming%20convention.%20These%20may%20be%20in%20dedicated%20files%2C%20or%20they%20may%20live%20next%20to%20related%20unit%20tests%20in%20existing%20test%20files.%0A%0A5.%20%20Be%20consistent%20with%20test%20naming%2C%20as%20it's%20helpful%20for%20filtering%20tests%20(e.g.%20for%20gas%20reports%20you%20might%20want%20to%20filter%20out%20revert%20tests).%20When%20combining%20naming%20conventions%2C%20keep%20them%20alphabetical.%20Below%20is%20a%20sample%20of%20valid%20names.%20A%20comprehensive%20list%20of%20valid%20and%20invalid%20examples%20can%20be%20found%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2FScopeLift%2Fscopelint%2Fblob%2F1857e3940bfe92ac5a136827374f4b27ff083971%2Fsrc%2Fcheck%2Fvalidators%2Ftest_names.rs%23L106-L143).%0A%0A%20%20%20%20-%20%60test_Description%60%20for%20standard%20tests.%0A%20%20%20%20-%20%60testFuzz_Description%60%20for%20fuzz%20tests.%0A%20%20%20%20-%20%60test_Revert%5BIf%7CWhen%5D_Condition%60%20for%20tests%20expecting%20a%20revert.%0A%20%20%20%20-%20%60testFork_Description%60%20for%20tests%20that%20fork%20from%20a%20network.%0A%20%20%20%20-%20%60testForkFuzz_Revert%5BIf%7CWhen%5D_Condition%60%20for%20a%20fuzz%20test%20that%20forks%20and%20expects%20a%20revert.%0A%0A6.%20%20Name%20your%20constants%20and%20immutables%20using%20%60ALL_CAPS_WITH_UNDERSCORES%60%2C%20to%20make%20it%20easier%20to%20distinguish%20them%20from%20variables%20and%20functions.%0A%0A7.%20%20When%20using%20assertions%20like%20%60assertEq%60%2C%20consider%20leveraging%20the%20last%20string%20param%20to%20make%20it%20easier%20to%20identify%20failures.%20These%20can%20be%20kept%20brief%2C%20or%20even%20just%20be%20numbers%26mdash%3Bthey%20basically%20serve%20as%20a%20replacement%20for%20showing%20line%20numbers%20of%20the%20revert%2C%20e.g.%20%60assertEq(x%2C%20y%2C%20%221%22)%60%20or%20%60assertEq(x%2C%20y%2C%20%22sum1%22)%60.%20_(Note%3A%20%5Bfoundry-rs%2Ffoundry%232328%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F2328)%20tracks%20integrating%20this%20natively)._%0A%0A8.%20%20When%20testing%20events%2C%20prefer%20setting%20all%20%60expectEmit%60%20arguments%20to%20%60true%60%2C%20i.e.%20%60vm.expectEmit(true%2C%20true%2C%20true%2C%20true)%60%20or%20%60vm.expectEmit()%60.%20Benefits%3A%0A%0A%20%20%20%20-%20This%20ensures%20you%20test%20everything%20in%20your%20event.%0A%20%20%20%20-%20If%20you%20add%20a%20topic%20(i.e.%20a%20new%20indexed%20parameter)%2C%20it's%20now%20tested%20by%20default.%0A%20%20%20%20-%20Even%20if%20you%20only%20have%201%20topic%2C%20the%20extra%20%60true%60%20arguments%20don't%20hurt.%0A%0A9.%20%20Remember%20to%20write%20invariant%20tests!%20For%20the%20assertion%20string%2C%20use%20a%20verbose%20english%20description%20of%20the%20invariant%3A%20%60assertEq(x%20%2B%20y%2C%20z%2C%20%22Invariant%20violated%3A%20the%20sum%20of%20x%20and%20y%20must%20always%20equal%20z%22)%60.%0A%0A%23%23%23%20Fork%20Tests%0A%0A%23%23%23%23%20Use%20fork%20tests%20liberally%0A%0ADon't%20feel%20like%20you%20need%20to%20give%20forks%20tests%20special%20treatment%2C%20and%20use%20them%20liberally%3A%0A%0A-%20Mocks%20are%20_required_%20in%20closed-source%20web2%20development%E2%80%94you%20have%20to%20mock%20API%20responses%20because%20the%20code%20for%20that%20API%20isn't%20open%20source%20so%20you%20cannot%20just%20run%20it%20locally.%20But%20for%20blockchains%20that's%20not%20true%3A%20any%20code%20you're%20interacting%20with%20that's%20already%20deployed%20can%20be%20locally%20executed%20and%20even%20modified%20for%20free.%20So%20why%20introduce%20the%20risk%20of%20a%20wrong%20mock%20if%20you%20don't%20need%20to%3F%0A-%20A%20common%20reason%20to%20avoid%20fork%20tests%20and%20prefer%20mocks%20is%20that%20fork%20tests%20are%20slow.%20But%20this%20is%20not%20always%20true.%20By%20pinning%20to%20a%20block%20number%2C%20forge%20caches%20RPC%20responses%20so%20only%20the%20first%20run%20is%20slower%2C%20and%20subsequent%20runs%20are%20significantly%20faster.%20See%20%5Bthis%20benchmark%5D(https%3A%2F%2Fgithub.com%2Fmds1%2Fconvex-shutdown-simulation%2F)%2C%20where%20it%20took%20forge%207%20minutes%20for%20the%20first%20run%20with%20a%20remote%20RPC%2C%20but%20only%20half%20a%20second%20once%20data%20was%20cached.%20%5BAlchemy%5D(https%3A%2F%2Falchemy.com)%2C%20%5BInfura%5D(https%3A%2F%2Finfura.io)%20and%20%5BTenderly%5D(https%3A%2F%2Ftenderly.co)%20offer%20free%20archive%20data%2C%20so%20pinning%20to%20a%20block%20shouldn't%20be%20problematic.%0A-%20Note%20that%20the%20%5Bfoundry-toolchain%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry-toolchain)%20GitHub%20Action%20will%20cache%20RPC%20responses%20in%20CI%20by%20default%2C%20and%20it%20will%20also%20update%20the%20cache%20when%20you%20update%20your%20fork%20tests.%0A%0A%23%23%23%23%20Minimize%20RPC%20requests%0A%0ABe%20careful%20with%20fuzz%20tests%20on%20a%20fork%20to%20avoid%20burning%20through%20RPC%20requests%20with%20non-deterministic%20fuzzing.%20If%20the%20input%20to%20your%20fork%20fuzz%20test%20is%20some%20parameter%20which%20is%20used%20in%20an%20RPC%20call%20to%20fetch%20data%20(e.g.%20querying%20the%20token%20balance%20of%20an%20address)%2C%20each%20run%20of%20a%20fuzz%20test%20uses%20at%20least%201%20RPC%20request%2C%20so%20you'll%20quickly%20hit%20rate%20limits%20or%20usage%20limits.%20Solutions%20to%20consider%3A%0A%0A-%20Replace%20multiple%20RPC%20calls%20with%20a%20single%20%5Bmulticall%5D(https%3A%2F%2Fgithub.com%2Fmds1%2Fmulticall).%0A-%20Specify%20a%20fuzz%2Finvariant%20%5Bseed%5D(%2Fconfig%2Freference%2Ftesting%23seed)%3A%20this%20makes%20sure%20each%20%60forge%20test%60%20invocation%20uses%20the%20same%20fuzz%20inputs.%20RPC%20results%20are%20cached%20locally%2C%20so%20you'll%20only%20query%20the%20node%20the%20first%20time.%0A-%20In%20CI%2C%20consider%20setting%20the%20fuzz%20seed%20using%20a%20%5Bcomputed%20environment%20variable%5D(https%3A%2F%2Fgithub.com%2Fsablier-labs%2Fv2-core%2Fblob%2Fd1157b49ed4bceeff0c4e437c9f723e88c134d3a%2F.github%2Fworkflows%2Fci.yml%23L252-L254)%20so%20it%20changes%20every%20day%20or%20every%20week.%20This%20gives%20flexibility%20on%20the%20tradeoff%20between%20increasing%20randomness%20to%20find%20more%20bugs%20vs.%20using%20a%20seed%20to%20reduce%20RPC%20requests.%0A-%20Structure%20your%20tests%20so%20the%20data%20you%20are%20fuzzing%20over%20is%20computed%20locally%20by%20your%20contract%2C%20and%20not%20data%20that%20is%20used%20in%20an%20RPC%20call%20(may%20or%20may%20not%20be%20feasible%20based%20on%20what%20you're%20doing).%0A-%20Lastly%2C%20you%20can%20of%20course%20always%20run%20a%20local%20node%20or%20bump%20your%20RPC%20plan.%0A%0A%23%23%23%23%20Configure%20fork%20urls%20in%20%60foundry.toml%60%20and%20use%20cheatcodes%0A%0A1.%20When%20writing%20fork%20tests%2C%20do%20not%20use%20the%20%60--fork-url%60%20flag.%20Instead%2C%20prefer%20the%20following%20approach%20for%20its%20improved%20flexibility%3A%0A%0A%20%20%20-%20Define%20%60%5Brpc_endpoints%5D%60%20in%20the%20%60foundry.toml%60%20config%20file%20and%20use%20the%20%5Bforking%20cheatcodes%5D(%2Fforge%2Ftests%2Ffork-testing%23forking-cheatcodes).%0A%20%20%20-%20Access%20the%20RPC%20URL%20endpoint%20in%20your%20test%20with%20forge-std's%20%60stdChains.ChainName.rpcUrl%60.%20See%20the%20list%20of%20supported%20chains%20and%20expected%20config%20file%20aliases%20%5Bhere%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fff4bf7db008d096ea5a657f2c20516182252a3ed%2Fsrc%2FStdCheats.sol%23L255-L271).%0A%20%20%20-%20Always%20pin%20to%20a%20block%20so%20tests%20are%20deterministic%20and%20RPC%20responses%20are%20cached.%0A%20%20%20-%20More%20info%20on%20this%20fork%20test%20approach%20can%20be%20found%20%5Bhere%5D(https%3A%2F%2Ftwitter.com%2Fmsolomon44%2Fstatus%2F1564742781129502722)%20(this%20predates%20%60StdChains%60%20so%20that%20aspect%20is%20a%20bit%20out%20of%20date).%0A%0A%23%23%23%20Test%20Harnesses%0A%0A%23%23%23%23%20Internal%20Functions%0A%0ATo%20test%20%60internal%60%20functions%2C%20write%20a%20harness%20contract%20that%20inherits%20from%20the%20contract%20under%20test%20(CuT).%20Harness%20contracts%20that%20inherit%20from%20the%20CuT%20expose%20the%20%60internal%60%20functions%20as%20%60external%60%20ones.%0A%0AEach%20%60internal%60%20function%20that%20is%20tested%20should%20be%20exposed%20via%20an%20external%20one%20with%20a%20name%20that%20follows%20the%20pattern%20%60exposed_%3Cfunction_name%3E%60.%20For%20example%3A%0A%0A%60%60%60solidity%0A%2F%2F%20file%3A%20src%2FMyContract.sol%0Acontract%20MyContract%20%7B%0A%20%20function%20myInternalMethod()%20internal%20returns%20(uint)%20%7B%0A%20%20%20%20return%2042%3B%0A%20%20%7D%0A%7D%0A%0A%2F%2F%20file%3A%20test%2FMyContract.t.sol%0Aimport%20%7BMyContract%7D%20from%20%22src%2FMyContract.sol%22%3B%0A%0Acontract%20MyContractHarness%20is%20MyContract%20%7B%0A%20%20%2F%2F%20Deploy%20this%20contract%20then%20call%20this%20method%20to%20test%20%60myInternalMethod%60.%0A%20%20function%20exposed_myInternalMethod()%20external%20returns%20(uint)%20%7B%0A%20%20%20%20return%20myInternalMethod()%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20Private%20Functions%0A%0AUnfortunately%20there%20is%20currently%20no%20good%20way%20to%20unit%20test%20%60private%60%20methods%20since%20they%20cannot%20be%20accessed%20by%20any%20other%20contracts.%20Options%20include%3A%0A%0A-%20Converting%20%60private%60%20functions%20to%20%60internal%60.%0A-%20Copy%2Fpasting%20the%20logic%20into%20your%20test%20contract%20and%20writing%20a%20script%20that%20runs%20in%20CI%20check%20to%20ensure%20both%20functions%20are%20identical.%0A%0A%23%23%23%23%20Workaround%20Functions%0A%0AHarnesses%20can%20also%20be%20used%20to%20expose%20functionality%20or%20information%20otherwise%20unavailable%20in%20the%20original%20smart%20contract.%20The%20most%20straightforward%20example%20is%20when%20we%20want%20to%20test%20the%20length%20of%20a%20public%20array.%20The%20functions%20should%20follow%20the%20pattern%3A%20%60workaround_%3Cfunction_name%3E%60%2C%20such%20as%20%60workaround_queueLength()%60.%0A%0AAnother%20use%20case%20for%20this%20is%20tracking%20data%20that%20you%20would%20not%20track%20in%20production%20to%20help%20test%20invariants.%20For%20example%2C%20you%20might%20store%20a%20list%20of%20all%20token%20holders%20to%20simplify%20validation%20of%20the%20invariant%20%22sum%20of%20all%20balances%20must%20equal%20total%20supply%22.%20These%20are%20often%20known%20as%20%22ghost%20variables%22.%20You%20can%20learn%20more%20about%20this%20in%20%5BRikard%20Hjort%5D(https%3A%2F%2Ftwitter.com%2Frikardhjort)'s%20%5BFormal%20Methods%20for%20the%20Working%20DeFi%20Dev%5D(https%3A%2F%2Fyoutu.be%2FETlNhV9jYJw)%20talk.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./clone-a-verified-contract-3NXx_a9T.js"),__vite__mapDeps([233,1])),path:"/guides/project-setup/clone-a-verified-contract",type:"mdx",filePath:"guides/project-setup/clone-a-verified-contract.mdx",content:"---%0Adescription%3A%20Clone%20verified%20on-chain%20contracts%20as%20Foundry%20projects%20with%20source%20code%20and%20metadata%20using%20forge%20clone.%0A---%0A%0A%23%23%20Clone%20a%20Verified%20Contract%0A%0ATo%20clone%20an%20on-chain%20verified%20contract%20as%20a%20Forge%20project%2C%20use%20%5B%60forge%20clone%60%5D(%2Fforge%2Freference%2Fforge-clone)%2C%20say%20%5BWETH9%5D(https%3A%2F%2Fetherscan.io%2Faddress%2F0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2)%20on%20Ethereum%20mainnet%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fclone_contract%2Fforge-clone%3Acommand%5D%0A%60%60%60%0A%0AThis%20creates%20a%20new%20directory%20%60WETH9%60%2C%20configures%20it%20as%20a%20foundry%20project%20and%20clones%20all%20the%20source%20code%20of%20the%20contract%20into%20it.%20This%20also%20initializes%20a%20new%20%60git%60%20repository.%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fclone_contract%2Fforge-clone%3Aoutput%5D%0A%60%60%60%0A%0AThe%20cloned%20Forge%20project%20comes%20with%20an%20additional%20%60.clone.meta%60%20metadata%20file%20besides%20those%20ordinary%20files%20that%20a%20normal%20Forge%20project%20has.%0A%0ALet's%20see%20what%20the%20%60.clone.meta%60%20file%20looks%20like%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fclone_contract%2Fclone-meta%3Aoutput%5D%0A%60%60%60%0A%0A%60clone.meta%60%20is%20a%20compact%20JSON%20data%20file%20that%20contains%20the%20information%20of%20the%20on-chain%20contract%20instance%2C%20e.g.%2C%20contract%20address%2C%20constructor%20arguments%2C%20etc.%20More%20details%20of%20the%20metadata%20can%20be%20found%20in%20the%20%5Breference%5D(%2Fforge%2Freference%2Fforge-clone).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./clone-a-verified-contract-3NXx_a9T.js"),__vite__mapDeps([233,1])),path:"/guides/project-setup/clone-a-verified-contract.html",type:"mdx",filePath:"guides/project-setup/clone-a-verified-contract.mdx",content:"---%0Adescription%3A%20Clone%20verified%20on-chain%20contracts%20as%20Foundry%20projects%20with%20source%20code%20and%20metadata%20using%20forge%20clone.%0A---%0A%0A%23%23%20Clone%20a%20Verified%20Contract%0A%0ATo%20clone%20an%20on-chain%20verified%20contract%20as%20a%20Forge%20project%2C%20use%20%5B%60forge%20clone%60%5D(%2Fforge%2Freference%2Fforge-clone)%2C%20say%20%5BWETH9%5D(https%3A%2F%2Fetherscan.io%2Faddress%2F0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2)%20on%20Ethereum%20mainnet%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fclone_contract%2Fforge-clone%3Acommand%5D%0A%60%60%60%0A%0AThis%20creates%20a%20new%20directory%20%60WETH9%60%2C%20configures%20it%20as%20a%20foundry%20project%20and%20clones%20all%20the%20source%20code%20of%20the%20contract%20into%20it.%20This%20also%20initializes%20a%20new%20%60git%60%20repository.%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fclone_contract%2Fforge-clone%3Aoutput%5D%0A%60%60%60%0A%0AThe%20cloned%20Forge%20project%20comes%20with%20an%20additional%20%60.clone.meta%60%20metadata%20file%20besides%20those%20ordinary%20files%20that%20a%20normal%20Forge%20project%20has.%0A%0ALet's%20see%20what%20the%20%60.clone.meta%60%20file%20looks%20like%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fclone_contract%2Fclone-meta%3Aoutput%5D%0A%60%60%60%0A%0A%60clone.meta%60%20is%20a%20compact%20JSON%20data%20file%20that%20contains%20the%20information%20of%20the%20on-chain%20contract%20instance%2C%20e.g.%2C%20contract%20address%2C%20constructor%20arguments%2C%20etc.%20More%20details%20of%20the%20metadata%20can%20be%20found%20in%20the%20%5Breference%5D(%2Fforge%2Freference%2Fforge-clone).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./creating-a-new-project-De-ExfW_.js"),__vite__mapDeps([234,1])),path:"/guides/project-setup/creating-a-new-project",type:"mdx",filePath:"guides/project-setup/creating-a-new-project.md",content:"---%0Adescription%3A%20Initialize%20a%20new%20Foundry%20project%20using%20forge%20init%20with%20default%20templates%20and%20project%20structure.%0A---%0A%0A%23%23%20Creating%20a%20New%20Project%0A%0ATo%20start%20a%20new%20project%20with%20Foundry%2C%20use%20%5B%60forge%20init%60%5D(%2Fforge%2Freference%2Fforge-init)%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-init%3Acommand%5D%0A%60%60%60%0A%0AThis%20creates%20a%20new%20directory%20%60hello_foundry%60%20from%20the%20default%20template.%20This%20also%20initializes%20a%20new%20%60git%60%20repository.%0A%0AIf%20you%20want%20to%20create%20a%20new%20project%20using%20a%20different%20template%2C%20you%20would%20pass%20the%20%60--template%60%20flag%2C%20like%20so%3A%0A%0A%60%60%60sh%0Aforge%20init%20--template%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-template%20hello_template%0A%60%60%60%0A%0AFor%20now%2C%20let's%20check%20what%20the%20default%20template%20looks%20like%3A%0A%0A%60%60%60sh%0Acd%20hello_foundry%0A%60%60%60%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree%3Aall%5D%0A%60%60%60%0A%0AThe%20default%20template%20comes%20with%20one%20dependency%20installed%3A%20Forge%20Standard%20Library.%20This%20is%20the%20preferred%20testing%20library%20used%20for%20Foundry%20projects.%20Additionally%2C%20the%20template%20also%20comes%20with%20an%20empty%20starter%20contract%20and%20a%20simple%20test.%0A%0ALet's%20build%20the%20project%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-build%3Aall%5D%0A%60%60%60%0A%0AAnd%20run%20the%20tests%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-test%3Aall%5D%0A%60%60%60%0A%0AYou'll%20notice%20that%20two%20new%20directories%20have%20popped%20up%3A%20%60out%60%20and%20%60cache%60.%0A%0AThe%20%60out%60%20directory%20contains%20your%20contract%20artifact%2C%20such%20as%20the%20ABI%2C%20while%20the%20%60cache%60%20is%20used%20by%20%60forge%60%20to%20only%20recompile%20what%20is%20necessary.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./creating-a-new-project-De-ExfW_.js"),__vite__mapDeps([234,1])),path:"/guides/project-setup/creating-a-new-project.html",type:"mdx",filePath:"guides/project-setup/creating-a-new-project.md",content:"---%0Adescription%3A%20Initialize%20a%20new%20Foundry%20project%20using%20forge%20init%20with%20default%20templates%20and%20project%20structure.%0A---%0A%0A%23%23%20Creating%20a%20New%20Project%0A%0ATo%20start%20a%20new%20project%20with%20Foundry%2C%20use%20%5B%60forge%20init%60%5D(%2Fforge%2Freference%2Fforge-init)%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-init%3Acommand%5D%0A%60%60%60%0A%0AThis%20creates%20a%20new%20directory%20%60hello_foundry%60%20from%20the%20default%20template.%20This%20also%20initializes%20a%20new%20%60git%60%20repository.%0A%0AIf%20you%20want%20to%20create%20a%20new%20project%20using%20a%20different%20template%2C%20you%20would%20pass%20the%20%60--template%60%20flag%2C%20like%20so%3A%0A%0A%60%60%60sh%0Aforge%20init%20--template%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-template%20hello_template%0A%60%60%60%0A%0AFor%20now%2C%20let's%20check%20what%20the%20default%20template%20looks%20like%3A%0A%0A%60%60%60sh%0Acd%20hello_foundry%0A%60%60%60%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree%3Aall%5D%0A%60%60%60%0A%0AThe%20default%20template%20comes%20with%20one%20dependency%20installed%3A%20Forge%20Standard%20Library.%20This%20is%20the%20preferred%20testing%20library%20used%20for%20Foundry%20projects.%20Additionally%2C%20the%20template%20also%20comes%20with%20an%20empty%20starter%20contract%20and%20a%20simple%20test.%0A%0ALet's%20build%20the%20project%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-build%3Aall%5D%0A%60%60%60%0A%0AAnd%20run%20the%20tests%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-test%3Aall%5D%0A%60%60%60%0A%0AYou'll%20notice%20that%20two%20new%20directories%20have%20popped%20up%3A%20%60out%60%20and%20%60cache%60.%0A%0AThe%20%60out%60%20directory%20contains%20your%20contract%20artifact%2C%20such%20as%20the%20ABI%2C%20while%20the%20%60cache%60%20is%20used%20by%20%60forge%60%20to%20only%20recompile%20what%20is%20necessary.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./dependencies-C80kxeXl.js"),__vite__mapDeps([235,1])),path:"/guides/project-setup/dependencies",type:"mdx",filePath:"guides/project-setup/dependencies.md",content:"---%0Adescription%3A%20Manage%20smart%20contract%20dependencies%20with%20git%20submodules%2C%20remappings%2C%20and%20package%20installation%20in%20Foundry%20projects.%0A---%0A%0A%23%23%20Dependencies%0A%0AForge%20manages%20dependencies%20using%20%5Bgit%20submodules%5D(https%3A%2F%2Fgit-scm.com%2Fbook%2Fen%2Fv2%2FGit-Tools-Submodules)%20by%20default%2C%20which%20means%20that%20it%20works%20with%20any%20GitHub%20repository%20that%20contains%20smart%20contracts.%0A%0A%23%23%23%20Adding%20a%20dependency%0A%0ATo%20add%20a%20dependency%2C%20run%20%5B%60forge%20install%60%5D(%2Fforge%2Freference%2Fforge-update)%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-install%3Aall%5D%0A%60%60%60%0A%0AThis%20pulls%20the%20%60solady%60%20library%2C%20stages%20the%20%60.gitmodules%60%20file%20in%20git%20and%20makes%20a%20commit%20with%20the%20message%20%60Installed%20solady%60.%0A%0AIf%20we%20now%20check%20the%20%60lib%60%20folder%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree%3Aall%5D%0A%60%60%60%0A%0AWe%20can%20see%20that%20Forge%20installed%20%60solady%60!%0A%0ABy%20default%2C%20%60forge%20install%60%20installs%20the%20latest%20master%20branch%20version.%20If%20you%20want%20to%20install%20a%20specific%20tag%20or%20commit%2C%20you%20can%20do%20it%20like%20so%3A%0A%0A%60%60%60sh%0Aforge%20install%20vectorized%2Fsolady%40v0.1.3%0A%60%60%60%0A%0A%23%23%23%20Remapping%20dependencies%0A%0AForge%20can%20remap%20dependencies%20to%20make%20them%20easier%20to%20import.%20Forge%20will%20automatically%20try%20to%20deduce%20some%20remappings%20for%20you%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-remappings%3Aall%5D%0A%60%60%60%0A%0AThese%20remappings%20mean%3A%0A%0A-%20To%20import%20from%20%60forge-std%60%20we%20would%20write%3A%20%60import%20%22forge-std%2FContract.sol%22%3B%60%0A-%20To%20import%20from%20%60solady%60%20we%20would%20write%3A%20%60import%20%22solady%2FContract.sol%22%3B%60%0A%0AYou%20can%20customize%20these%20remappings%20by%20creating%20a%20%60remappings.txt%60%20file%20in%20the%20root%20of%20your%20project.%0A%0ALet's%20create%20a%20remapping%20called%20%60solady-utils%60%20that%20points%20to%20the%20%60utils%60%20folder%20in%20the%20%60solady%60%20repository!%0A%0A%60%60%60sh%0A%40solady-utils%2F%3Dlib%2Fsolady%2Fsrc%2Futils%2F%0A%60%60%60%0A%0AYou%20can%20also%20set%20remappings%20in%20%60foundry.toml%60.%0A%0A%60%60%60toml%0Aremappings%20%3D%20%5B%0A%20%20%20%20%22%40solady-utils%2F%3Dlib%2Fsolady%2Fsrc%2Futils%2F%22%2C%0A%5D%0A%60%60%60%0A%0ANow%20we%20can%20import%20any%20of%20the%20contracts%20in%20%60src%2Futils%60%20of%20the%20%60solady%60%20repository%20like%20so%3A%0A%0A%60%60%60solidity%0Aimport%20%7BLibString%7D%20from%20%22%40solady-utils%2FLibString.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%20Remapping%20conflicts%0A%0AIn%20some%20cases%2C%20you%20may%20encounter%20dependency%20conflicts%20when%20two%20or%20more%20git%20submodules%20include%20different%20dependencies%20with%20the%20same%20namespace.%20For%20example%2C%20suppose%20you%20have%20installed%20both%20%60org%2Flib_1%60%20and%20%60org%2Flib_2%60%2C%20and%20they%20each%20reference%20their%20own%20versions%20of%20%60%40openzeppelin%60.%20In%20such%20scenarios%2C%20%60forge%20remappings%60%20generates%20a%20single%20remapping%20entry%20for%20the%20namespace%2C%20which%20will%20point%20to%20only%20one%20of%20the%20two%20%60%40openzeppelin%60%20libraries.%0A%0A%60%60%60sh%0Aforge%20remappings%0A%40openzeppelin%2F%3Dlib%2Flib_1%2Fnode_modules%2F%40openzeppelin%2F%0A%60%60%60%0A%0AThis%20situation%20can%20lead%20to%20import%20issues%2C%20causing%20%60forge%20build%60%20to%20fail%20or%20introduce%20unexpected%20behavior%20into%20your%20contracts.%20To%20resolve%20this%2C%20you%20can%20add%20remapping%20contexts%20to%20your%20%60remappings.txt%60%20file.%20This%20instructs%20the%20compiler%20to%20use%20different%20remappings%20in%20distinct%20compilation%20contexts%2C%20resolving%20the%20conflict.%20For%20example%2C%20to%20address%20the%20conflict%20between%20%60lib_1%60%20and%20%60lib_2%60%2C%20you%20would%20update%20your%20remappings.txt%20as%20follows%3A%0A%0A%60%60%60sh%0Alib%2Flib_1%2F%3A%40openzeppelin%2F%3Dlib%2Flib_1%2Fnode_modules%2F%40openzeppelin%2F%0Alib%2Flib_2%2F%3A%40openzeppelin%2F%3Dlib%2Flib_2%2Fnode_modules%2F%40openzeppelin%2F%0A%60%60%60%0A%0AThis%20approach%20ensures%20that%20each%20dependency%20is%20mapped%20to%20the%20appropriate%20library%20version%2C%20avoiding%20potential%20issues.%20For%20more%20information%20about%20remapping%2C%20please%20see%20the%20%5BSolidity%20Lang%20Docs%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html%23import-remapping).%0A%0A%23%23%23%20Updating%20dependencies%0A%0AYou%20can%20update%20a%20specific%20dependency%20to%20the%20latest%20commit%20on%20the%20version%20you%20have%20specified%20using%20%5B%60forge%20update%20%3Cdep%3E%60%5D(%2Fforge%2Freference%2Fforge-update).%20For%20example%2C%20if%20we%20wanted%20to%20pull%20the%20latest%20commit%20from%20our%20previously%20installed%20master-version%20of%20%60solady%60%2C%20we%20would%20run%3A%0A%0A%60%60%60sh%0Aforge%20update%20lib%2Fsolady%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20do%20this%20for%20all%20dependencies%20at%20once%20by%20just%20running%20%60forge%20update%60.%0A%0A%23%23%23%20Removing%20dependencies%0A%0AYou%20can%20remove%20dependencies%20using%20%5B%60forge%20remove%20%3Cdeps%3E...%60%5D(%2Fforge%2Freference%2Fforge-remove)%2C%20where%20%60%3Cdeps%3E%60%20is%20either%20the%20full%20path%20to%20the%20dependency%20or%20just%20the%20name.%20For%20example%2C%20to%20remove%20%60solady%60%20both%20of%20these%20commands%20are%20equivalent%3A%0A%0A%60%60%60sh%0Aforge%20remove%20solady%0A%23%20...%20is%20equivalent%20to%20...%0Aforge%20remove%20lib%2Fsolady%0A%60%60%60%0A%0A%23%23%23%20Hardhat%20compatibility%0A%0AForge%20also%20supports%20Hardhat-style%20projects%20where%20dependencies%20are%20npm%20packages%20(stored%20in%20%60node_modules%60)%20and%20contracts%20are%20stored%20in%20%60contracts%60%20as%20opposed%20to%20%60src%60.%0A%0ATo%20enable%20Hardhat%20compatibility%20mode%20pass%20the%20%60--hh%60%20flag.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./dependencies-C80kxeXl.js"),__vite__mapDeps([235,1])),path:"/guides/project-setup/dependencies.html",type:"mdx",filePath:"guides/project-setup/dependencies.md",content:"---%0Adescription%3A%20Manage%20smart%20contract%20dependencies%20with%20git%20submodules%2C%20remappings%2C%20and%20package%20installation%20in%20Foundry%20projects.%0A---%0A%0A%23%23%20Dependencies%0A%0AForge%20manages%20dependencies%20using%20%5Bgit%20submodules%5D(https%3A%2F%2Fgit-scm.com%2Fbook%2Fen%2Fv2%2FGit-Tools-Submodules)%20by%20default%2C%20which%20means%20that%20it%20works%20with%20any%20GitHub%20repository%20that%20contains%20smart%20contracts.%0A%0A%23%23%23%20Adding%20a%20dependency%0A%0ATo%20add%20a%20dependency%2C%20run%20%5B%60forge%20install%60%5D(%2Fforge%2Freference%2Fforge-update)%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-install%3Aall%5D%0A%60%60%60%0A%0AThis%20pulls%20the%20%60solady%60%20library%2C%20stages%20the%20%60.gitmodules%60%20file%20in%20git%20and%20makes%20a%20commit%20with%20the%20message%20%60Installed%20solady%60.%0A%0AIf%20we%20now%20check%20the%20%60lib%60%20folder%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree%3Aall%5D%0A%60%60%60%0A%0AWe%20can%20see%20that%20Forge%20installed%20%60solady%60!%0A%0ABy%20default%2C%20%60forge%20install%60%20installs%20the%20latest%20master%20branch%20version.%20If%20you%20want%20to%20install%20a%20specific%20tag%20or%20commit%2C%20you%20can%20do%20it%20like%20so%3A%0A%0A%60%60%60sh%0Aforge%20install%20vectorized%2Fsolady%40v0.1.3%0A%60%60%60%0A%0A%23%23%23%20Remapping%20dependencies%0A%0AForge%20can%20remap%20dependencies%20to%20make%20them%20easier%20to%20import.%20Forge%20will%20automatically%20try%20to%20deduce%20some%20remappings%20for%20you%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Fforge-remappings%3Aall%5D%0A%60%60%60%0A%0AThese%20remappings%20mean%3A%0A%0A-%20To%20import%20from%20%60forge-std%60%20we%20would%20write%3A%20%60import%20%22forge-std%2FContract.sol%22%3B%60%0A-%20To%20import%20from%20%60solady%60%20we%20would%20write%3A%20%60import%20%22solady%2FContract.sol%22%3B%60%0A%0AYou%20can%20customize%20these%20remappings%20by%20creating%20a%20%60remappings.txt%60%20file%20in%20the%20root%20of%20your%20project.%0A%0ALet's%20create%20a%20remapping%20called%20%60solady-utils%60%20that%20points%20to%20the%20%60utils%60%20folder%20in%20the%20%60solady%60%20repository!%0A%0A%60%60%60sh%0A%40solady-utils%2F%3Dlib%2Fsolady%2Fsrc%2Futils%2F%0A%60%60%60%0A%0AYou%20can%20also%20set%20remappings%20in%20%60foundry.toml%60.%0A%0A%60%60%60toml%0Aremappings%20%3D%20%5B%0A%20%20%20%20%22%40solady-utils%2F%3Dlib%2Fsolady%2Fsrc%2Futils%2F%22%2C%0A%5D%0A%60%60%60%0A%0ANow%20we%20can%20import%20any%20of%20the%20contracts%20in%20%60src%2Futils%60%20of%20the%20%60solady%60%20repository%20like%20so%3A%0A%0A%60%60%60solidity%0Aimport%20%7BLibString%7D%20from%20%22%40solady-utils%2FLibString.sol%22%3B%0A%60%60%60%0A%0A%23%23%23%20Remapping%20conflicts%0A%0AIn%20some%20cases%2C%20you%20may%20encounter%20dependency%20conflicts%20when%20two%20or%20more%20git%20submodules%20include%20different%20dependencies%20with%20the%20same%20namespace.%20For%20example%2C%20suppose%20you%20have%20installed%20both%20%60org%2Flib_1%60%20and%20%60org%2Flib_2%60%2C%20and%20they%20each%20reference%20their%20own%20versions%20of%20%60%40openzeppelin%60.%20In%20such%20scenarios%2C%20%60forge%20remappings%60%20generates%20a%20single%20remapping%20entry%20for%20the%20namespace%2C%20which%20will%20point%20to%20only%20one%20of%20the%20two%20%60%40openzeppelin%60%20libraries.%0A%0A%60%60%60sh%0Aforge%20remappings%0A%40openzeppelin%2F%3Dlib%2Flib_1%2Fnode_modules%2F%40openzeppelin%2F%0A%60%60%60%0A%0AThis%20situation%20can%20lead%20to%20import%20issues%2C%20causing%20%60forge%20build%60%20to%20fail%20or%20introduce%20unexpected%20behavior%20into%20your%20contracts.%20To%20resolve%20this%2C%20you%20can%20add%20remapping%20contexts%20to%20your%20%60remappings.txt%60%20file.%20This%20instructs%20the%20compiler%20to%20use%20different%20remappings%20in%20distinct%20compilation%20contexts%2C%20resolving%20the%20conflict.%20For%20example%2C%20to%20address%20the%20conflict%20between%20%60lib_1%60%20and%20%60lib_2%60%2C%20you%20would%20update%20your%20remappings.txt%20as%20follows%3A%0A%0A%60%60%60sh%0Alib%2Flib_1%2F%3A%40openzeppelin%2F%3Dlib%2Flib_1%2Fnode_modules%2F%40openzeppelin%2F%0Alib%2Flib_2%2F%3A%40openzeppelin%2F%3Dlib%2Flib_2%2Fnode_modules%2F%40openzeppelin%2F%0A%60%60%60%0A%0AThis%20approach%20ensures%20that%20each%20dependency%20is%20mapped%20to%20the%20appropriate%20library%20version%2C%20avoiding%20potential%20issues.%20For%20more%20information%20about%20remapping%2C%20please%20see%20the%20%5BSolidity%20Lang%20Docs%5D(https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Flatest%2Fpath-resolution.html%23import-remapping).%0A%0A%23%23%23%20Updating%20dependencies%0A%0AYou%20can%20update%20a%20specific%20dependency%20to%20the%20latest%20commit%20on%20the%20version%20you%20have%20specified%20using%20%5B%60forge%20update%20%3Cdep%3E%60%5D(%2Fforge%2Freference%2Fforge-update).%20For%20example%2C%20if%20we%20wanted%20to%20pull%20the%20latest%20commit%20from%20our%20previously%20installed%20master-version%20of%20%60solady%60%2C%20we%20would%20run%3A%0A%0A%60%60%60sh%0Aforge%20update%20lib%2Fsolady%0A%60%60%60%0A%0AAlternatively%2C%20you%20can%20do%20this%20for%20all%20dependencies%20at%20once%20by%20just%20running%20%60forge%20update%60.%0A%0A%23%23%23%20Removing%20dependencies%0A%0AYou%20can%20remove%20dependencies%20using%20%5B%60forge%20remove%20%3Cdeps%3E...%60%5D(%2Fforge%2Freference%2Fforge-remove)%2C%20where%20%60%3Cdeps%3E%60%20is%20either%20the%20full%20path%20to%20the%20dependency%20or%20just%20the%20name.%20For%20example%2C%20to%20remove%20%60solady%60%20both%20of%20these%20commands%20are%20equivalent%3A%0A%0A%60%60%60sh%0Aforge%20remove%20solady%0A%23%20...%20is%20equivalent%20to%20...%0Aforge%20remove%20lib%2Fsolady%0A%60%60%60%0A%0A%23%23%23%20Hardhat%20compatibility%0A%0AForge%20also%20supports%20Hardhat-style%20projects%20where%20dependencies%20are%20npm%20packages%20(stored%20in%20%60node_modules%60)%20and%20contracts%20are%20stored%20in%20%60contracts%60%20as%20opposed%20to%20%60src%60.%0A%0ATo%20enable%20Hardhat%20compatibility%20mode%20pass%20the%20%60--hh%60%20flag.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-layout-CupgnoaV.js"),__vite__mapDeps([236,1])),path:"/guides/project-setup/project-layout",type:"mdx",filePath:"guides/project-setup/project-layout.md",content:"---%0Adescription%3A%20Configure%20Foundry%20project%20structure%20with%20directories%20for%20contracts%2C%20tests%2C%20dependencies%2C%20and%20configuration%20files.%0A---%0A%0A%23%23%20Project%20Layout%0A%0AForge%20is%20flexible%20on%20how%20you%20structure%20your%20project.%20By%20default%2C%20the%20structure%20is%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree-with-files%3Aoutput%5D%0A%60%60%60%0A%0A-%20You%20can%20configure%20Foundry's%20behavior%20using%20%60foundry.toml%60.%0A-%20Remappings%20are%20specified%20in%20%60remappings.txt%60.%0A-%20The%20default%20directory%20for%20contracts%20is%20%60src%2F%60.%0A-%20The%20default%20directory%20for%20tests%20is%20%60test%2F%60%2C%20where%20any%20contract%20with%20a%20function%20that%20starts%20with%20%60test%60%20is%20considered%20to%20be%20a%20test.%0A-%20Dependencies%20are%20stored%20as%20git%20submodules%20in%20%60lib%2F%60.%0A%0AYou%20can%20configure%20where%20Forge%20looks%20for%20both%20dependencies%20and%20contracts%20using%20the%20%60--lib-paths%60%20and%20%60--contracts%60%20flags%20respectively.%20Alternatively%20you%20can%20configure%20it%20in%20%60foundry.toml%60.%0A%0ACombined%20with%20remappings%2C%20this%20gives%20you%20the%20flexibility%20needed%20to%20support%20the%20project%20structure%20of%20other%20toolchains%20such%20as%20Hardhat%20and%20Truffle.%0A%0AFor%20automatic%20Hardhat%20support%20you%20can%20also%20pass%20the%20%60--hh%60%20flag%2C%20which%20sets%20the%20following%20flags%3A%20%60--lib-paths%20node_modules%20--contracts%20contracts%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-layout-CupgnoaV.js"),__vite__mapDeps([236,1])),path:"/guides/project-setup/project-layout.html",type:"mdx",filePath:"guides/project-setup/project-layout.md",content:"---%0Adescription%3A%20Configure%20Foundry%20project%20structure%20with%20directories%20for%20contracts%2C%20tests%2C%20dependencies%2C%20and%20configuration%20files.%0A---%0A%0A%23%23%20Project%20Layout%0A%0AForge%20is%20flexible%20on%20how%20you%20structure%20your%20project.%20By%20default%2C%20the%20structure%20is%3A%0A%0A%60%60%60sh%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fhello_foundry%2Ftree-with-files%3Aoutput%5D%0A%60%60%60%0A%0A-%20You%20can%20configure%20Foundry's%20behavior%20using%20%60foundry.toml%60.%0A-%20Remappings%20are%20specified%20in%20%60remappings.txt%60.%0A-%20The%20default%20directory%20for%20contracts%20is%20%60src%2F%60.%0A-%20The%20default%20directory%20for%20tests%20is%20%60test%2F%60%2C%20where%20any%20contract%20with%20a%20function%20that%20starts%20with%20%60test%60%20is%20considered%20to%20be%20a%20test.%0A-%20Dependencies%20are%20stored%20as%20git%20submodules%20in%20%60lib%2F%60.%0A%0AYou%20can%20configure%20where%20Forge%20looks%20for%20both%20dependencies%20and%20contracts%20using%20the%20%60--lib-paths%60%20and%20%60--contracts%60%20flags%20respectively.%20Alternatively%20you%20can%20configure%20it%20in%20%60foundry.toml%60.%0A%0ACombined%20with%20remappings%2C%20this%20gives%20you%20the%20flexibility%20needed%20to%20support%20the%20project%20structure%20of%20other%20toolchains%20such%20as%20Hardhat%20and%20Truffle.%0A%0AFor%20automatic%20Hardhat%20support%20you%20can%20also%20pass%20the%20%60--hh%60%20flag%2C%20which%20sets%20the%20following%20flags%3A%20%60--lib-paths%20node_modules%20--contracts%20contracts%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./soldeer-Bm_Rt05U.js"),__vite__mapDeps([237,1])),path:"/guides/project-setup/soldeer",type:"mdx",filePath:"guides/project-setup/soldeer.md",content:"---%0Adescription%3A%20Use%20Soldeer%20as%20a%20native%20Solidity%20package%20manager%20for%20managing%20dependencies%20with%20central%20repository%20and%20git%20support.%0A---%0A%0A%23%23%20Soldeer%20as%20a%20Package%20Manager%0A%0AAs%20explained%20%5Bhere%5D(.%2Fdependencies)%2C%20Foundry%20has%20been%20using%20git%20submodules%20to%20handle%20dependencies%20up%20until%20now.%0A%0AThe%20need%20for%20a%20native%20package%20manager%20started%20to%20emerge%20as%20projects%20became%20more%20complex.%0A%0AA%20new%20approach%20has%20been%20in%20the%20making%2C%20%5Bsoldeer.xyz%5D(https%3A%2F%2Fsoldeer.xyz)%2C%20which%20is%20a%20Solidity%20native%20dependency%20manager%20built%20in%20Rust%20and%20open%20sourced%20(check%20the%20repository%20%5Bhttps%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer)).%0A%0A%23%23%23%23%20If%20you%20want%20to%20see%20the%20full%20commands%20and%20usage%20of%20Soldeer%2C%20you%20can%20visit%20the%20%5BUSAGE.md%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer%2Fblob%2Fmain%2FUSAGE.md).%0A%0A%23%23%23%20Initialize%20a%20new%20project%0A%0AIf%20you're%20using%20Soldeer%20for%20the%20first%20time%20in%20a%20new%20Foundry%20project%2C%20you%20can%20use%20the%20%60init%60%20command%20to%20install%20a%20fresh%20instance%20of%20Soldeer%2C%20complete%20with%20the%20necessary%20configurations%20and%20the%20latest%20version%20of%20%60forge-std%60.%0A%0A%60%60%60bash%0Aforge%20soldeer%20init%0A%60%60%60%0A%0A%23%23%23%20Adding%20a%20Dependency%0A%0A%23%23%23%23%20Add%20a%20Dependency%20Stored%20in%20the%20Central%20Repository%0A%0ATo%20add%20a%20dependency%2C%20you%20can%20visit%20%5Bsoldeer.xyz%5D(https%3A%2F%2Fsoldeer.xyz)%20and%20search%20for%20the%20dependency%20you%20want%20to%20add%20(e.g.%2C%20openzeppelin%205.0.2).%0A%0A!%5Bimage%5D(https%3A%2F%2Fi.postimg.cc%2FHm6R8MTs%2FUnknown-413.png)%0A%0AThen%20just%20run%20the%20forge%20command%3A%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20%40openzeppelin-contracts~5.0.2%0A%60%60%60%0A%0AThis%20will%20download%20the%20dependency%20from%20the%20central%20repository%20and%20install%20it%20into%20a%20%60dependencies%60%20directory.%0A%0ASoldeer%20can%20manage%20two%20types%20of%20dependency%20configuration%3A%20using%20%60soldeer.toml%60%20or%20embedded%20in%20the%20%60foundry.toml%60.%20In%20order%20to%20work%20with%20Foundry%2C%20you%20have%20to%20define%20the%20%60%5Bdependencies%5D%60%20config%20in%20the%20%60foundry.toml%60.%20This%20will%20tell%20the%20%60soldeer%20CLI%60%20to%20define%20the%20installed%20dependencies%20there.%0AE.g.%0A%0A%60%60%60toml%0A%23%20Full%20reference%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Ftree%2Fmaster%2Fcrates%2Fconfig%0A%0A%5Bprofile.default%5D%0Aauto_detect_solc%20%3D%20false%0Abytecode_hash%20%3D%20%22none%22%0Afuzz%20%3D%20%7B%20runs%20%3D%201_000%20%7D%0Alibs%20%3D%20%5B%22dependencies%22%5D%20%23%20%3C%3D%20This%20is%20important%20to%20be%20added%0Agas_reports%20%3D%20%5B%22*%22%5D%0A%0A%5Bdependencies%5D%20%23%20%3C%3D%20Dependencies%20will%20be%20added%20under%20this%20config%0A%22%40openzeppelin-contracts%22%20%3D%20%7B%20version%20%3D%20%225.0.2%22%20%7D%0A%22%40uniswap-universal-router%22%20%3D%20%7B%20version%20%3D%20%221.6.0%22%20%7D%0A%22%40prb-math%22%20%3D%20%7B%20version%20%3D%20%224.0.2%22%20%7D%0Aforge-std%20%3D%20%7B%20version%20%3D%20%221.8.1%22%20%7D%0A%60%60%60%0A%0A%23%23%23%23%20Add%20a%20Dependency%20Stored%20at%20a%20Specific%20Link%0A%0AIf%20the%20central%20repository%20does%20not%20have%20a%20certain%20dependency%2C%20you%20can%20install%20it%20by%20providing%20a%20zip%20archive%20link.%0A%0AE.g.%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20%40custom-dependency~1.0.0%20--url%20https%3A%2F%2Fmy-website.com%2Fcustom-dependency-1-0-0.zip%0A%60%60%60%0A%0AThe%20above%20command%20will%20try%20to%20download%20the%20dependency%20from%20the%20provided%20link%20and%20install%20it%20as%20a%20normal%20dependency.%20For%20this%2C%20you%20will%20see%20in%20the%20config%20an%20additional%20field%20called%20%60path%60.%0A%0AE.g.%0A%0A%60%60%60toml%0A%5Bdependencies%5D%0A%22%40custom-dependency%22%20%3D%20%7B%20version%20%3D%20%221.0.0%22%2C%20path%20%3D%20%22https%3A%2F%2Fmy-website.com%2Fcustom-dependency-1-0-0.zip%22%20%7D%0A%60%60%60%0A%0A%23%23%23%23%20Add%20a%20Dependency%20Stored%20in%20GIT%0A%0AIf%20you%20choose%20to%20use%20Git%20as%20a%20source%20for%20your%20dependencies%20%E2%80%94%20though%20we%20generally%20discourage%20this%2C%20since%20Git%20isn't%20designed%20to%20be%20a%20dependency%20manager%20%E2%80%94%20you%20can%20provide%20the%20Git%20repository%20link%20as%20an%20additional%20argument.%20Soldeer%20will%20then%20automatically%20handle%20the%20installation%20using%20a%20Git%20subprocess.%0AFor%20example%3A%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20forge-std~1.9.2%20--git%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std.git%0A%60%60%60%0A%0AIf%20you%20want%20to%20use%20a%20specific%20revision%2C%20branch%2C%20or%20tag%2C%20you%20can%20do%20so%20by%20appending%20the%20following%20arguments%20to%20the%20command%3A%20%60--rev%2F--tag%2F--branch%60%0A%0Ae.g.%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20forge-std~1.9.2%20--git%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std.git%20--rev%204695fac44b2934aaa6d7150e2eaf0256fdc566a7%0A%60%60%60%0A%0ASome%20git%20examples%3A%0A%0ASome%20examples%3A%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40gitlab.com%3Atest%2Ftest.git%0A%60%60%60%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20test-project~v1%20--git%20https%3A%2F%2Fgithub.com%2Ftest%2Ftest.git%0Aforge%20soldeer%20install%20test-project~v1%20--git%20https%3A%2F%2Fgitlab.com%2Ftest%2Ftest.git%0A%60%60%60%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%20--rev%20345e611cd84bfb4e62c583fa1886c1928bc1a464%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%20--branch%20dev%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%20--tag%20v1%0A%60%60%60%0A%0A%23%23%23%20Updating%20Dependencies%0A%0ABecause%20Soldeer%20specifies%20the%20dependencies%20in%20a%20config%20file%20(foundry%20or%20soldeer%20toml)%2C%20sharing%20a%20dependency%20configuration%20within%20the%20team%20is%20much%20easier.%0A%0AFor%20example%2C%20having%20this%20Foundry%20config%20file%20in%20a%20git%20repository%2C%20one%20can%20pull%20the%20repository%20and%20then%20run%20%60forge%20soldeer%20update%60.%20This%20command%20will%20automatically%20install%20all%20the%20dependencies%20specified%20under%20the%20%60%5Bdependencies%5D%60%20tag.%0A%0A%60%60%60toml%0A%23%20Full%20reference%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Ftree%2Fmaster%2Fcrates%2Fconfig%0A%0A%5Bprofile.default%5D%0Aauto_detect_solc%20%3D%20false%0Abytecode_hash%20%3D%20%22none%22%0Afuzz%20%3D%20%7B%20runs%20%3D%201_000%20%7D%0Alibs%20%3D%20%5B%22dependencies%22%5D%20%23%20%3C%3D%20This%20is%20important%20to%20be%20added%0Agas_reports%20%3D%20%5B%22*%22%5D%0A%0A%5Bdependencies%5D%20%23%20%3C%3D%20Dependencies%20will%20be%20added%20under%20this%20config%0A%22%40openzeppelin-contracts%22%20%3D%20%7B%20version%20%3D%20%225.0.2%22%20%7D%0A%22%40uniswap-universal-router%22%20%3D%20%7B%20version%20%3D%20%221.6.0%22%20%7D%0A%22%40prb-math%22%20%3D%20%7B%20version%20%3D%20%224.0.2%22%20%7D%0Aforge-std%20%3D%20%7B%20version%20%3D%20%221.8.1%22%20%7D%0A%60%60%60%0A%0A%23%23%23%20Removing%20Dependencies%0A%0AYou%20can%20use%20%60forge%20soldeer%20uninstall%20DEPENDENCY%60.%0A%0AExample%3A%20%60forge%20soldeer%20uninstall%20%40openzeppelin-contracts%60.%20This%20will%20action%20will%20remove%3A%0A%0A-%20the%20config%20entry%0A-%20the%20%60dependencies%60%20artifacts%0A-%20the%20%60soldeer.lock%60%20entry%0A-%20the%20%60remappings%60%20entry%20(txt%20or%20config%20remapping)%0A%0AAdditionally%20you%20can%20manually%20remove%20a%20dependency%20by%20just%20removing%20the%20artifacts%3A%20dependency%20files%2C%20config%20entry%2C%20remappings%20entry.%0A%0A%23%23%23%20Remappings%0A%0AThe%20remappings%20are%20now%20fully%20configurable%2C%20the%20config%20TOML%20file%20(foundry.toml)%20accepts%20a%0A%60%5Bsoldeer%5D%60%20field%20with%20the%20following%20options%0A%0A%60%60%60toml%0A%5Bsoldeer%5D%0A%23%20whether%20soldeer%20manages%20remappings%0Aremappings_generate%20%3D%20true%0A%0A%23%20whether%20soldeer%20re-generates%20all%20remappings%20when%20installing%2C%20updating%20or%20uninstalling%20deps%0Aremappings_regenerate%20%3D%20false%0A%0A%23%20whether%20to%20suffix%20the%20remapping%20with%20the%20version%3A%20%60name-a.b.c%60%0Aremappings_version%20%3D%20true%0A%0A%23%20a%20prefix%20to%20add%20to%20the%20remappings%20(%22%40%22%20would%20give%20%60%40name%60)%0Aremappings_prefix%20%3D%20%22%22%0A%0A%23%20where%20to%20store%20the%20remappings%20(%22txt%22%20for%20%60remappings.txt%60%20or%20%22config%22%20for%20%60foundry.toml%60)%0A%23%20ignored%20when%20%60soldeer.toml%60%20is%20used%20as%20config%20(uses%20%60remappings.txt%60)%0Aremappings_location%20%3D%20%22txt%22%0A%60%60%60%0A%0A%23%23%23%20Installing%20dependencies%20of%20dependencies%20aka%20sub-dependencies%0A%0AWhenever%20you%20install%20a%20dependency%2C%20that%20dependency%20might%20have%20other%20dependencies%20that%20need%20to%20be%20installed%20as%20well.%20Currently%2C%20you%20can%20handle%20this%20by%20either%20specifying%20the%20%60recursive_deps%60%20field%20as%20a%20configuration%20entry%20in%20the%20config%20file%20or%20by%20passing%20the%20%60--recursive-deps%60%20argument%20when%20running%20the%20install%20or%20update%20command.%20This%20will%20ensure%20that%20all%20necessary%20sub-dependencies%20are%20automatically%20pulled%20in.%0Ae.g.%0A%0A%60%60%60toml%0A%5Bsoldeer%5D%0Arecursive_deps%20%3D%20true%0A%60%60%60%0A%0A%23%23%23%20Pushing%20a%20New%20Version%20to%20the%20Central%20Repository%0A%0ASoldeer%20acts%20like%20npmjs%2Fcrates.io%2C%20encouraging%20all%20developers%20to%20publish%20their%20projects%20to%20the%20central%20repository.%0A%0ATo%20do%20that%2C%20you%20have%20to%20go%20to%20%5Bsoldeer.xyz%5D(https%3A%2F%2Fsoldeer.xyz)%2C%20create%20an%20account%2C%20verify%20it%2C%20then%0A%0A!%5Bimage%5D(https%3A%2F%2Fi.postimg.cc%2FG3VDpN2S%2Fs1.png)%0A%0AJust%20add%20a%20new%20project%0A%0A!%5Bimage%5D(https%3A%2F%2Fi.postimg.cc%2FrsBRYd3L%2Fs2.png)%0A%0AAfter%20the%20project%20is%20created%2C%20you%20can%20go%20into%20your%20project%20source%20and%3A%0A%0A-%20Create%20a%20%60.soldeerignore%60%20file%20that%20acts%20as%20a%20%60.gitignore%60%20to%20exclude%20files%20that%20aren't%20needed.%20The%20%60.gitignore%60%20file%20is%20also%20respected.%0A-%20Run%20%60forge%20soldeer%20login%60%20to%20log%20into%20your%20account.%0A-%20Run%20%60forge%20soldeer%20push%20my-project~1.0.0%60%20in%20your%20terminal%20in%20the%20directory%20that%20you%20want%20to%20push%20to%20the%20central%20repository%20associated%20with%20the%20project%20%60my-project%60%20at%20version%20%601.0.0%60.%0A%0AIf%20you%20want%20to%20push%20a%20specific%20directory%20and%20not%20the%20current%20directory%20your%20terminal%20is%20in%2C%20you%20can%20use%20%60forge%20soldeer%20push%20my-project~1.0.0%20%2Fpath%2Fto%2Fdirectory%60.%0A%0A**Warning**%20%E2%9A%A0%EF%B8%8F%0A%0AYou%20are%20at%20risk%20to%20push%20sensitive%20files%20to%20the%20central%20repository%20that%20then%20can%20be%20seen%20by%20everyone.%20Make%20sure%20to%20exclude%20sensitive%20files%20in%20the%20%60.soldeerignore%60%20file.%0AFurthermore%2C%20we've%20implemented%20a%20warning%20that%20it%20will%20be%20triggered%20if%20you%20try%20to%20push%20a%20project%20that%20contains%20any%20%60.dot%60%20files%2Fdirectories.%0AIf%20you%20want%20to%20skip%20this%20warning%2C%20you%20can%20just%20use%0A%0A%60%60%60bash%0Aforge%20soldeer%20push%20my-project~1.0.0%20--skip-warnings%0A%60%60%60%0A%0A%23%23%23%23%20Dry-run%0A%0AIn%20case%20you%20want%20to%20simulate%20what%20would%20happen%20if%20you%20push%20a%20version%2C%20you%20can%20use%20the%20%60--dry-run%60%20flag.%20This%20will%20create%20a%20zip%20file%20that%20you%20can%20inspect%20before%20pushing%20it%20to%20the%20central%20repository.%0A%0A%60%60%60bash%0Aforge%20soldeer%20push%20my-project~1.0.0%20--dry-run%0A%60%60%60%0A%0A%23%23%23%23%20Login%20Data%0A%0ABy%20default%2C%20Soldeer%20saves%20the%20login%20token%20in%20the%20%60~%2F.soldeer%2F.soldeer_login%60%20file%2C%20which%20is%20used%20to%20push%20files%20to%20the%20central%20repository.%20If%20you%20prefer%20to%20save%20the%20token%20in%20a%20different%20location%2C%20you%20can%20set%20the%20environment%20variable%20%60SOLDEER_LOGIN_FILE%60.%0A%0A%3E%20**Warning**%20%E2%9A%A0%EF%B8%8F%0A%3E%0A%3E%20-%20Once%20a%20project%20is%20created%2C%20it%20cannot%20be%20deleted.%0A%3E%20-%20Once%20a%20version%20is%20pushed%2C%20it%20cannot%20be%20deleted.%0A%3E%20-%20You%20cannot%20push%20the%20same%20version%20twice.%0A%3E%20-%20The%20project%20name%20in%20the%20command%20that%20you%20run%20in%20the%20terminal%20must%20match%20the%20project%20name%20that%20you%20created%20on%20the%20Soldeer%20website.%0A%3E%20-%20We%20encourage%20everyone%20to%20use%20version%20pinning%20when%20importing%20them%20into%20the%20contracts%2C%20this%20will%20help%20with%20securing%20your%20code%20by%20knowing%20exactly%20what%20version%20of%20a%20dependency%20you%20are%20using.%20Furthermore%2C%20it%20will%20help%20security%20researchers%20in%20their%20work.%0A%3E%20-%20Make%20sure%20you%20delete%20this%20zip%20file%20before%20pushing%20the%20version%20if%20you%20run%20dry-run.%0A%3E%20%20%20e.g.%20instead%20of%20using%0A%3E%20%20%20%60import%20'%40openzeppelin-contracts%2Ftoken%2FERC20.sol'%60%20you%20should%20do%0A%3E%20%20%20%60import%20'%40openzeppelin-contracts-5.0.2%2Ftoken%2FERC20.sol'%60%0A%0A%23%23%23%20What%20happens%20if%20a%20certain%20package%20is%20not%20present%20in%20the%20central%20repository%3F%0A%0A-%20If%20a%20certain%20package%20is%20not%20present%20in%20the%20central%20repository%2C%20you%20can%20open%20an%20issue%20in%20the%20%5BSoldeer%20Repository%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer%2Fissues)%20and%20the%20team%20will%20look%20into%20adding%20it.%0A-%20If%20you%20have%20a%20package%20that%20you%20want%20to%20use%20and%20it%20is%20not%20present%20in%20the%20central%20repository%2C%20you%20can%20push%20it%20to%20the%20central%20repository%20by%20following%20the%20steps%20above.%0A%0A%23%23%20Remappings%20Caveats%0A%0AIf%20you%20use%20other%20dependency%20managers%2C%20such%20as%20git%20submodules%20or%20npm%2C%20ensure%20you%20don't%20duplicate%20dependencies%20between%0Asoldeer%20and%20the%20other%20manager.%0A%0ARemappings%20targeting%20dependencies%20installed%20without%20Soldeer%20are%20not%20modified%20or%20removed%20when%20using%20Soldeer%20commands%2C%0Aunless%20the%20%60--regenerate-remappings%60%20flag%20is%20specified%20or%20the%20%60remappings_regenerate%20%3D%20true%60%20option%20is%20set.%0A%0A%23%23%20Dependencies%20Maintenance%0A%0AThe%20vision%20for%20Soldeer%20is%20that%20major%20projects%20such%20as%20OpenZeppelin%2C%20Solady%2C%20Uniswap%20would%20start%20publishing%20their%20own%0Apackages%20to%20the%20Soldeer%20registry%20so%20that%20the%20community%20can%20easily%20include%20them%20and%20get%20timely%20updates.%0A%0AUntil%20this%20happens%2C%20the%20Soldeer%20maintenance%20team%20(currently%20m4rio.eth)%20will%20push%20the%20most%20popular%20dependencies%20to%20the%0Arepository%20by%20relying%20on%20their%20npmjs%20or%20GitHub%20versions.%20We%20are%20using%0A%5Ban%20open-source%20crawler%20tool%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer-crawler)%20to%20crawl%20and%20push%20the%20dependencies%20under%20the%0A%60soldeer%60%20organization.%0A%0AFor%20those%20who%20want%20an%20extra%20layer%20of%20security%2C%20the%20%60soldeer.lock%60%20file%20saves%20a%20%60SHA-256%60%20hash%20for%20each%20downloaded%0AZIP%20file%20and%20the%20corresponding%20unzipped%20folder%20(see%20%60soldeer_core%3A%3Autils%3A%3Ahash_folder%60%20to%20see%20how%20it%20gets%20generated).%0AThese%20can%20be%20compared%20with%20the%20official%20releases%20to%20ensure%20the%20files%20were%20not%20manipulated.%0A%0A**For%20Project%20Maintainers**%0AIf%20you%20want%20to%20move%20your%20project%20from%20the%20Soldeer%20organization%20and%20take%20care%20of%20pushing%20the%20versions%20to%20Soldeer%0Ayourself%2C%20please%20open%20an%20issue%20on%20GitHub%20or%20contact%20m4rio.eth%20on%20%5BX%20(formerly%20Twitter)%5D(https%3A%2F%2Ftwitter.com%2Fm4rio_eth).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./soldeer-Bm_Rt05U.js"),__vite__mapDeps([237,1])),path:"/guides/project-setup/soldeer.html",type:"mdx",filePath:"guides/project-setup/soldeer.md",content:"---%0Adescription%3A%20Use%20Soldeer%20as%20a%20native%20Solidity%20package%20manager%20for%20managing%20dependencies%20with%20central%20repository%20and%20git%20support.%0A---%0A%0A%23%23%20Soldeer%20as%20a%20Package%20Manager%0A%0AAs%20explained%20%5Bhere%5D(.%2Fdependencies)%2C%20Foundry%20has%20been%20using%20git%20submodules%20to%20handle%20dependencies%20up%20until%20now.%0A%0AThe%20need%20for%20a%20native%20package%20manager%20started%20to%20emerge%20as%20projects%20became%20more%20complex.%0A%0AA%20new%20approach%20has%20been%20in%20the%20making%2C%20%5Bsoldeer.xyz%5D(https%3A%2F%2Fsoldeer.xyz)%2C%20which%20is%20a%20Solidity%20native%20dependency%20manager%20built%20in%20Rust%20and%20open%20sourced%20(check%20the%20repository%20%5Bhttps%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer)).%0A%0A%23%23%23%23%20If%20you%20want%20to%20see%20the%20full%20commands%20and%20usage%20of%20Soldeer%2C%20you%20can%20visit%20the%20%5BUSAGE.md%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer%2Fblob%2Fmain%2FUSAGE.md).%0A%0A%23%23%23%20Initialize%20a%20new%20project%0A%0AIf%20you're%20using%20Soldeer%20for%20the%20first%20time%20in%20a%20new%20Foundry%20project%2C%20you%20can%20use%20the%20%60init%60%20command%20to%20install%20a%20fresh%20instance%20of%20Soldeer%2C%20complete%20with%20the%20necessary%20configurations%20and%20the%20latest%20version%20of%20%60forge-std%60.%0A%0A%60%60%60bash%0Aforge%20soldeer%20init%0A%60%60%60%0A%0A%23%23%23%20Adding%20a%20Dependency%0A%0A%23%23%23%23%20Add%20a%20Dependency%20Stored%20in%20the%20Central%20Repository%0A%0ATo%20add%20a%20dependency%2C%20you%20can%20visit%20%5Bsoldeer.xyz%5D(https%3A%2F%2Fsoldeer.xyz)%20and%20search%20for%20the%20dependency%20you%20want%20to%20add%20(e.g.%2C%20openzeppelin%205.0.2).%0A%0A!%5Bimage%5D(https%3A%2F%2Fi.postimg.cc%2FHm6R8MTs%2FUnknown-413.png)%0A%0AThen%20just%20run%20the%20forge%20command%3A%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20%40openzeppelin-contracts~5.0.2%0A%60%60%60%0A%0AThis%20will%20download%20the%20dependency%20from%20the%20central%20repository%20and%20install%20it%20into%20a%20%60dependencies%60%20directory.%0A%0ASoldeer%20can%20manage%20two%20types%20of%20dependency%20configuration%3A%20using%20%60soldeer.toml%60%20or%20embedded%20in%20the%20%60foundry.toml%60.%20In%20order%20to%20work%20with%20Foundry%2C%20you%20have%20to%20define%20the%20%60%5Bdependencies%5D%60%20config%20in%20the%20%60foundry.toml%60.%20This%20will%20tell%20the%20%60soldeer%20CLI%60%20to%20define%20the%20installed%20dependencies%20there.%0AE.g.%0A%0A%60%60%60toml%0A%23%20Full%20reference%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Ftree%2Fmaster%2Fcrates%2Fconfig%0A%0A%5Bprofile.default%5D%0Aauto_detect_solc%20%3D%20false%0Abytecode_hash%20%3D%20%22none%22%0Afuzz%20%3D%20%7B%20runs%20%3D%201_000%20%7D%0Alibs%20%3D%20%5B%22dependencies%22%5D%20%23%20%3C%3D%20This%20is%20important%20to%20be%20added%0Agas_reports%20%3D%20%5B%22*%22%5D%0A%0A%5Bdependencies%5D%20%23%20%3C%3D%20Dependencies%20will%20be%20added%20under%20this%20config%0A%22%40openzeppelin-contracts%22%20%3D%20%7B%20version%20%3D%20%225.0.2%22%20%7D%0A%22%40uniswap-universal-router%22%20%3D%20%7B%20version%20%3D%20%221.6.0%22%20%7D%0A%22%40prb-math%22%20%3D%20%7B%20version%20%3D%20%224.0.2%22%20%7D%0Aforge-std%20%3D%20%7B%20version%20%3D%20%221.8.1%22%20%7D%0A%60%60%60%0A%0A%23%23%23%23%20Add%20a%20Dependency%20Stored%20at%20a%20Specific%20Link%0A%0AIf%20the%20central%20repository%20does%20not%20have%20a%20certain%20dependency%2C%20you%20can%20install%20it%20by%20providing%20a%20zip%20archive%20link.%0A%0AE.g.%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20%40custom-dependency~1.0.0%20--url%20https%3A%2F%2Fmy-website.com%2Fcustom-dependency-1-0-0.zip%0A%60%60%60%0A%0AThe%20above%20command%20will%20try%20to%20download%20the%20dependency%20from%20the%20provided%20link%20and%20install%20it%20as%20a%20normal%20dependency.%20For%20this%2C%20you%20will%20see%20in%20the%20config%20an%20additional%20field%20called%20%60path%60.%0A%0AE.g.%0A%0A%60%60%60toml%0A%5Bdependencies%5D%0A%22%40custom-dependency%22%20%3D%20%7B%20version%20%3D%20%221.0.0%22%2C%20path%20%3D%20%22https%3A%2F%2Fmy-website.com%2Fcustom-dependency-1-0-0.zip%22%20%7D%0A%60%60%60%0A%0A%23%23%23%23%20Add%20a%20Dependency%20Stored%20in%20GIT%0A%0AIf%20you%20choose%20to%20use%20Git%20as%20a%20source%20for%20your%20dependencies%20%E2%80%94%20though%20we%20generally%20discourage%20this%2C%20since%20Git%20isn't%20designed%20to%20be%20a%20dependency%20manager%20%E2%80%94%20you%20can%20provide%20the%20Git%20repository%20link%20as%20an%20additional%20argument.%20Soldeer%20will%20then%20automatically%20handle%20the%20installation%20using%20a%20Git%20subprocess.%0AFor%20example%3A%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20forge-std~1.9.2%20--git%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std.git%0A%60%60%60%0A%0AIf%20you%20want%20to%20use%20a%20specific%20revision%2C%20branch%2C%20or%20tag%2C%20you%20can%20do%20so%20by%20appending%20the%20following%20arguments%20to%20the%20command%3A%20%60--rev%2F--tag%2F--branch%60%0A%0Ae.g.%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20forge-std~1.9.2%20--git%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std.git%20--rev%204695fac44b2934aaa6d7150e2eaf0256fdc566a7%0A%60%60%60%0A%0ASome%20git%20examples%3A%0A%0ASome%20examples%3A%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40gitlab.com%3Atest%2Ftest.git%0A%60%60%60%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20test-project~v1%20--git%20https%3A%2F%2Fgithub.com%2Ftest%2Ftest.git%0Aforge%20soldeer%20install%20test-project~v1%20--git%20https%3A%2F%2Fgitlab.com%2Ftest%2Ftest.git%0A%60%60%60%0A%0A%60%60%60bash%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%20--rev%20345e611cd84bfb4e62c583fa1886c1928bc1a464%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%20--branch%20dev%0Aforge%20soldeer%20install%20test-project~v1%20--git%20git%40github.com%3Atest%2Ftest.git%20--tag%20v1%0A%60%60%60%0A%0A%23%23%23%20Updating%20Dependencies%0A%0ABecause%20Soldeer%20specifies%20the%20dependencies%20in%20a%20config%20file%20(foundry%20or%20soldeer%20toml)%2C%20sharing%20a%20dependency%20configuration%20within%20the%20team%20is%20much%20easier.%0A%0AFor%20example%2C%20having%20this%20Foundry%20config%20file%20in%20a%20git%20repository%2C%20one%20can%20pull%20the%20repository%20and%20then%20run%20%60forge%20soldeer%20update%60.%20This%20command%20will%20automatically%20install%20all%20the%20dependencies%20specified%20under%20the%20%60%5Bdependencies%5D%60%20tag.%0A%0A%60%60%60toml%0A%23%20Full%20reference%20https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Ftree%2Fmaster%2Fcrates%2Fconfig%0A%0A%5Bprofile.default%5D%0Aauto_detect_solc%20%3D%20false%0Abytecode_hash%20%3D%20%22none%22%0Afuzz%20%3D%20%7B%20runs%20%3D%201_000%20%7D%0Alibs%20%3D%20%5B%22dependencies%22%5D%20%23%20%3C%3D%20This%20is%20important%20to%20be%20added%0Agas_reports%20%3D%20%5B%22*%22%5D%0A%0A%5Bdependencies%5D%20%23%20%3C%3D%20Dependencies%20will%20be%20added%20under%20this%20config%0A%22%40openzeppelin-contracts%22%20%3D%20%7B%20version%20%3D%20%225.0.2%22%20%7D%0A%22%40uniswap-universal-router%22%20%3D%20%7B%20version%20%3D%20%221.6.0%22%20%7D%0A%22%40prb-math%22%20%3D%20%7B%20version%20%3D%20%224.0.2%22%20%7D%0Aforge-std%20%3D%20%7B%20version%20%3D%20%221.8.1%22%20%7D%0A%60%60%60%0A%0A%23%23%23%20Removing%20Dependencies%0A%0AYou%20can%20use%20%60forge%20soldeer%20uninstall%20DEPENDENCY%60.%0A%0AExample%3A%20%60forge%20soldeer%20uninstall%20%40openzeppelin-contracts%60.%20This%20will%20action%20will%20remove%3A%0A%0A-%20the%20config%20entry%0A-%20the%20%60dependencies%60%20artifacts%0A-%20the%20%60soldeer.lock%60%20entry%0A-%20the%20%60remappings%60%20entry%20(txt%20or%20config%20remapping)%0A%0AAdditionally%20you%20can%20manually%20remove%20a%20dependency%20by%20just%20removing%20the%20artifacts%3A%20dependency%20files%2C%20config%20entry%2C%20remappings%20entry.%0A%0A%23%23%23%20Remappings%0A%0AThe%20remappings%20are%20now%20fully%20configurable%2C%20the%20config%20TOML%20file%20(foundry.toml)%20accepts%20a%0A%60%5Bsoldeer%5D%60%20field%20with%20the%20following%20options%0A%0A%60%60%60toml%0A%5Bsoldeer%5D%0A%23%20whether%20soldeer%20manages%20remappings%0Aremappings_generate%20%3D%20true%0A%0A%23%20whether%20soldeer%20re-generates%20all%20remappings%20when%20installing%2C%20updating%20or%20uninstalling%20deps%0Aremappings_regenerate%20%3D%20false%0A%0A%23%20whether%20to%20suffix%20the%20remapping%20with%20the%20version%3A%20%60name-a.b.c%60%0Aremappings_version%20%3D%20true%0A%0A%23%20a%20prefix%20to%20add%20to%20the%20remappings%20(%22%40%22%20would%20give%20%60%40name%60)%0Aremappings_prefix%20%3D%20%22%22%0A%0A%23%20where%20to%20store%20the%20remappings%20(%22txt%22%20for%20%60remappings.txt%60%20or%20%22config%22%20for%20%60foundry.toml%60)%0A%23%20ignored%20when%20%60soldeer.toml%60%20is%20used%20as%20config%20(uses%20%60remappings.txt%60)%0Aremappings_location%20%3D%20%22txt%22%0A%60%60%60%0A%0A%23%23%23%20Installing%20dependencies%20of%20dependencies%20aka%20sub-dependencies%0A%0AWhenever%20you%20install%20a%20dependency%2C%20that%20dependency%20might%20have%20other%20dependencies%20that%20need%20to%20be%20installed%20as%20well.%20Currently%2C%20you%20can%20handle%20this%20by%20either%20specifying%20the%20%60recursive_deps%60%20field%20as%20a%20configuration%20entry%20in%20the%20config%20file%20or%20by%20passing%20the%20%60--recursive-deps%60%20argument%20when%20running%20the%20install%20or%20update%20command.%20This%20will%20ensure%20that%20all%20necessary%20sub-dependencies%20are%20automatically%20pulled%20in.%0Ae.g.%0A%0A%60%60%60toml%0A%5Bsoldeer%5D%0Arecursive_deps%20%3D%20true%0A%60%60%60%0A%0A%23%23%23%20Pushing%20a%20New%20Version%20to%20the%20Central%20Repository%0A%0ASoldeer%20acts%20like%20npmjs%2Fcrates.io%2C%20encouraging%20all%20developers%20to%20publish%20their%20projects%20to%20the%20central%20repository.%0A%0ATo%20do%20that%2C%20you%20have%20to%20go%20to%20%5Bsoldeer.xyz%5D(https%3A%2F%2Fsoldeer.xyz)%2C%20create%20an%20account%2C%20verify%20it%2C%20then%0A%0A!%5Bimage%5D(https%3A%2F%2Fi.postimg.cc%2FG3VDpN2S%2Fs1.png)%0A%0AJust%20add%20a%20new%20project%0A%0A!%5Bimage%5D(https%3A%2F%2Fi.postimg.cc%2FrsBRYd3L%2Fs2.png)%0A%0AAfter%20the%20project%20is%20created%2C%20you%20can%20go%20into%20your%20project%20source%20and%3A%0A%0A-%20Create%20a%20%60.soldeerignore%60%20file%20that%20acts%20as%20a%20%60.gitignore%60%20to%20exclude%20files%20that%20aren't%20needed.%20The%20%60.gitignore%60%20file%20is%20also%20respected.%0A-%20Run%20%60forge%20soldeer%20login%60%20to%20log%20into%20your%20account.%0A-%20Run%20%60forge%20soldeer%20push%20my-project~1.0.0%60%20in%20your%20terminal%20in%20the%20directory%20that%20you%20want%20to%20push%20to%20the%20central%20repository%20associated%20with%20the%20project%20%60my-project%60%20at%20version%20%601.0.0%60.%0A%0AIf%20you%20want%20to%20push%20a%20specific%20directory%20and%20not%20the%20current%20directory%20your%20terminal%20is%20in%2C%20you%20can%20use%20%60forge%20soldeer%20push%20my-project~1.0.0%20%2Fpath%2Fto%2Fdirectory%60.%0A%0A**Warning**%20%E2%9A%A0%EF%B8%8F%0A%0AYou%20are%20at%20risk%20to%20push%20sensitive%20files%20to%20the%20central%20repository%20that%20then%20can%20be%20seen%20by%20everyone.%20Make%20sure%20to%20exclude%20sensitive%20files%20in%20the%20%60.soldeerignore%60%20file.%0AFurthermore%2C%20we've%20implemented%20a%20warning%20that%20it%20will%20be%20triggered%20if%20you%20try%20to%20push%20a%20project%20that%20contains%20any%20%60.dot%60%20files%2Fdirectories.%0AIf%20you%20want%20to%20skip%20this%20warning%2C%20you%20can%20just%20use%0A%0A%60%60%60bash%0Aforge%20soldeer%20push%20my-project~1.0.0%20--skip-warnings%0A%60%60%60%0A%0A%23%23%23%23%20Dry-run%0A%0AIn%20case%20you%20want%20to%20simulate%20what%20would%20happen%20if%20you%20push%20a%20version%2C%20you%20can%20use%20the%20%60--dry-run%60%20flag.%20This%20will%20create%20a%20zip%20file%20that%20you%20can%20inspect%20before%20pushing%20it%20to%20the%20central%20repository.%0A%0A%60%60%60bash%0Aforge%20soldeer%20push%20my-project~1.0.0%20--dry-run%0A%60%60%60%0A%0A%23%23%23%23%20Login%20Data%0A%0ABy%20default%2C%20Soldeer%20saves%20the%20login%20token%20in%20the%20%60~%2F.soldeer%2F.soldeer_login%60%20file%2C%20which%20is%20used%20to%20push%20files%20to%20the%20central%20repository.%20If%20you%20prefer%20to%20save%20the%20token%20in%20a%20different%20location%2C%20you%20can%20set%20the%20environment%20variable%20%60SOLDEER_LOGIN_FILE%60.%0A%0A%3E%20**Warning**%20%E2%9A%A0%EF%B8%8F%0A%3E%0A%3E%20-%20Once%20a%20project%20is%20created%2C%20it%20cannot%20be%20deleted.%0A%3E%20-%20Once%20a%20version%20is%20pushed%2C%20it%20cannot%20be%20deleted.%0A%3E%20-%20You%20cannot%20push%20the%20same%20version%20twice.%0A%3E%20-%20The%20project%20name%20in%20the%20command%20that%20you%20run%20in%20the%20terminal%20must%20match%20the%20project%20name%20that%20you%20created%20on%20the%20Soldeer%20website.%0A%3E%20-%20We%20encourage%20everyone%20to%20use%20version%20pinning%20when%20importing%20them%20into%20the%20contracts%2C%20this%20will%20help%20with%20securing%20your%20code%20by%20knowing%20exactly%20what%20version%20of%20a%20dependency%20you%20are%20using.%20Furthermore%2C%20it%20will%20help%20security%20researchers%20in%20their%20work.%0A%3E%20-%20Make%20sure%20you%20delete%20this%20zip%20file%20before%20pushing%20the%20version%20if%20you%20run%20dry-run.%0A%3E%20%20%20e.g.%20instead%20of%20using%0A%3E%20%20%20%60import%20'%40openzeppelin-contracts%2Ftoken%2FERC20.sol'%60%20you%20should%20do%0A%3E%20%20%20%60import%20'%40openzeppelin-contracts-5.0.2%2Ftoken%2FERC20.sol'%60%0A%0A%23%23%23%20What%20happens%20if%20a%20certain%20package%20is%20not%20present%20in%20the%20central%20repository%3F%0A%0A-%20If%20a%20certain%20package%20is%20not%20present%20in%20the%20central%20repository%2C%20you%20can%20open%20an%20issue%20in%20the%20%5BSoldeer%20Repository%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer%2Fissues)%20and%20the%20team%20will%20look%20into%20adding%20it.%0A-%20If%20you%20have%20a%20package%20that%20you%20want%20to%20use%20and%20it%20is%20not%20present%20in%20the%20central%20repository%2C%20you%20can%20push%20it%20to%20the%20central%20repository%20by%20following%20the%20steps%20above.%0A%0A%23%23%20Remappings%20Caveats%0A%0AIf%20you%20use%20other%20dependency%20managers%2C%20such%20as%20git%20submodules%20or%20npm%2C%20ensure%20you%20don't%20duplicate%20dependencies%20between%0Asoldeer%20and%20the%20other%20manager.%0A%0ARemappings%20targeting%20dependencies%20installed%20without%20Soldeer%20are%20not%20modified%20or%20removed%20when%20using%20Soldeer%20commands%2C%0Aunless%20the%20%60--regenerate-remappings%60%20flag%20is%20specified%20or%20the%20%60remappings_regenerate%20%3D%20true%60%20option%20is%20set.%0A%0A%23%23%20Dependencies%20Maintenance%0A%0AThe%20vision%20for%20Soldeer%20is%20that%20major%20projects%20such%20as%20OpenZeppelin%2C%20Solady%2C%20Uniswap%20would%20start%20publishing%20their%20own%0Apackages%20to%20the%20Soldeer%20registry%20so%20that%20the%20community%20can%20easily%20include%20them%20and%20get%20timely%20updates.%0A%0AUntil%20this%20happens%2C%20the%20Soldeer%20maintenance%20team%20(currently%20m4rio.eth)%20will%20push%20the%20most%20popular%20dependencies%20to%20the%0Arepository%20by%20relying%20on%20their%20npmjs%20or%20GitHub%20versions.%20We%20are%20using%0A%5Ban%20open-source%20crawler%20tool%5D(https%3A%2F%2Fgithub.com%2Fmario-eth%2Fsoldeer-crawler)%20to%20crawl%20and%20push%20the%20dependencies%20under%20the%0A%60soldeer%60%20organization.%0A%0AFor%20those%20who%20want%20an%20extra%20layer%20of%20security%2C%20the%20%60soldeer.lock%60%20file%20saves%20a%20%60SHA-256%60%20hash%20for%20each%20downloaded%0AZIP%20file%20and%20the%20corresponding%20unzipped%20folder%20(see%20%60soldeer_core%3A%3Autils%3A%3Ahash_folder%60%20to%20see%20how%20it%20gets%20generated).%0AThese%20can%20be%20compared%20with%20the%20official%20releases%20to%20ensure%20the%20files%20were%20not%20manipulated.%0A%0A**For%20Project%20Maintainers**%0AIf%20you%20want%20to%20move%20your%20project%20from%20the%20Soldeer%20organization%20and%20take%20care%20of%20pushing%20the%20versions%20to%20Soldeer%0Ayourself%2C%20please%20open%20an%20issue%20on%20GitHub%20or%20contact%20m4rio.eth%20on%20%5BX%20(formerly%20Twitter)%5D(https%3A%2F%2Ftwitter.com%2Fm4rio_eth).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./base-options-COy46lTc.js"),__vite__mapDeps([108,1])),path:"/reference/common/base-options",type:"mdx",filePath:"reference/common/base-options.mdx",content:"%23%23%23%23%20Base%20Options%0A%0A%60--base-in%60%20*base*%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20base%20of%20the%20input%20number.%20Available%20options%3A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B10%2C%20d%2C%20dec%2C%20decimal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B16%2C%20h%2C%20hex%2C%20hexadecimal%0A%0A%60--base-out%60%20*base*%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20desired%20base%20of%20the%20output.%20Available%20options%3A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B2%2C%20b%2C%20bin%2C%20binary%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B8%2C%20o%2C%20oct%2C%20octal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B10%2C%20d%2C%20dec%2C%20decimal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B16%2C%20h%2C%20hex%2C%20hexadecimal%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./base-options-COy46lTc.js"),__vite__mapDeps([108,1])),path:"/reference/common/base-options.html",type:"mdx",filePath:"reference/common/base-options.mdx",content:"%23%23%23%23%20Base%20Options%0A%0A%60--base-in%60%20*base*%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20base%20of%20the%20input%20number.%20Available%20options%3A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B10%2C%20d%2C%20dec%2C%20decimal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B16%2C%20h%2C%20hex%2C%20hexadecimal%0A%0A%60--base-out%60%20*base*%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20desired%20base%20of%20the%20output.%20Available%20options%3A%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B2%2C%20b%2C%20bin%2C%20binary%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B8%2C%20o%2C%20oct%2C%20octal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B10%2C%20d%2C%20dec%2C%20decimal%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B16%2C%20h%2C%20hex%2C%20hexadecimal%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./display-options-CoE2BSKN.js"),__vite__mapDeps([58,1])),path:"/reference/common/display-options",type:"mdx",filePath:"reference/common/display-options.mdx",content:"%23%23%23%23%20Display%20Options%0A%0A%60-j%60%20%20%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Print%20the%20deployment%20information%20as%20JSON.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./display-options-CoE2BSKN.js"),__vite__mapDeps([58,1])),path:"/reference/common/display-options.html",type:"mdx",filePath:"reference/common/display-options.mdx",content:"%23%23%23%23%20Display%20Options%0A%0A%60-j%60%20%20%0A%60--json%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Print%20the%20deployment%20information%20as%20JSON.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etherscan-options-CLooEQsH.js"),__vite__mapDeps([51,1])),path:"/reference/common/etherscan-options",type:"mdx",filePath:"reference/common/etherscan-options.mdx",content:"%23%23%23%23%20Etherscan%20Options%0A%0A%60--chain%60%20_chain_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20Etherscan%20chain.%0A%0A%60--etherscan-api-key%60%20_key_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEtherscan%20API%20key%2C%20or%20the%20key%20of%20an%20%5BEtherscan%20configuration%20table%5D(%2Fconfig%2Freference%2Fetherscan%23etherscan).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETHERSCAN_API_KEY%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etherscan-options-CLooEQsH.js"),__vite__mapDeps([51,1])),path:"/reference/common/etherscan-options.html",type:"mdx",filePath:"reference/common/etherscan-options.mdx",content:"%23%23%23%23%20Etherscan%20Options%0A%0A%60--chain%60%20_chain_name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20Etherscan%20chain.%0A%0A%60--etherscan-api-key%60%20_key_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEtherscan%20API%20key%2C%20or%20the%20key%20of%20an%20%5BEtherscan%20configuration%20table%5D(%2Fconfig%2Freference%2Fetherscan%23etherscan).%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETHERSCAN_API_KEY%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-hardware-CHv4J4zC.js"),__vite__mapDeps([205,1])),path:"/reference/common/multi-wallet-options-hardware",type:"mdx",filePath:"reference/common/multi-wallet-options-hardware.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Hardware%20Wallet%0A%0A%60-t%60%20%20%0A%60--trezor%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Trezor%20hardware%20wallet.%0A%0A%60-l%60%20%20%0A%60--ledger%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Ledger%20hardware%20wallet.%0A%0A%60--hd-paths%60%20*paths*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20derivation%20paths%20to%20use%20with%20hardware%20wallets.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-hardware-CHv4J4zC.js"),__vite__mapDeps([205,1])),path:"/reference/common/multi-wallet-options-hardware.html",type:"mdx",filePath:"reference/common/multi-wallet-options-hardware.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Hardware%20Wallet%0A%0A%60-t%60%20%20%0A%60--trezor%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Trezor%20hardware%20wallet.%0A%0A%60-l%60%20%20%0A%60--ledger%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Ledger%20hardware%20wallet.%0A%0A%60--hd-paths%60%20*paths*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20derivation%20paths%20to%20use%20with%20hardware%20wallets.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-keystore-Bt51C-Z_.js"),__vite__mapDeps([204,1])),path:"/reference/common/multi-wallet-options-keystore",type:"mdx",filePath:"reference/common/multi-wallet-options-keystore.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Keystore%0A%0A%60--keystores%60%20*paths*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20keystores%20in%20the%20given%20folders%20or%20files.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE%60%0A%0A%60--account%60%20_account-name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20keystore%20from%20the%20default%20keystores%20folder%20(~%2F.foundry%2Fkeystores)%20by%20its%20filename.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE_ACCOUNT%60%0A%0A%60--password%60%20*passwords*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20keystore%20passwords.%20Used%20with%20%60--keystore%60.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-keystore-Bt51C-Z_.js"),__vite__mapDeps([204,1])),path:"/reference/common/multi-wallet-options-keystore.html",type:"mdx",filePath:"reference/common/multi-wallet-options-keystore.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Keystore%0A%0A%60--keystores%60%20*paths*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20keystores%20in%20the%20given%20folders%20or%20files.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE%60%0A%0A%60--account%60%20_account-name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20keystore%20from%20the%20default%20keystores%20folder%20(~%2F.foundry%2Fkeystores)%20by%20its%20filename.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE_ACCOUNT%60%0A%0A%60--password%60%20*passwords*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20keystore%20passwords.%20Used%20with%20%60--keystore%60.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-raw-Dgk7jeJz.js"),__vite__mapDeps([203,1])),path:"/reference/common/multi-wallet-options-raw",type:"mdx",filePath:"reference/common/multi-wallet-options-raw.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Raw%0A%0A%60-i%60%0A%60--interactives%60%20*num*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpen%20an%20interactive%20prompt%20to%20enter%20your%20private%20key.%20Takes%20a%20value%20for%20the%20number%20of%20keys%20to%20enter.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%200%0A%0A%60--mnemonic-indexes%60%20*indexes*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20private%20key%20from%20the%20given%20mnemonic%20index.%20Used%20with%20--mnemonic-path.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%200%0A%0A%60--mnemonic-paths%60%20*paths*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20mnemonic%20file%20at%20the%20specified%20path(s).%0A%0A%60--private-key%60%20*raw_private_key*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20provided%20private%20key.%0A%0A%60--private-keys%60%20*raw_private_keys*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20provided%20private%20keys.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-raw-Dgk7jeJz.js"),__vite__mapDeps([203,1])),path:"/reference/common/multi-wallet-options-raw.html",type:"mdx",filePath:"reference/common/multi-wallet-options-raw.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Raw%0A%0A%60-i%60%0A%60--interactives%60%20*num*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOpen%20an%20interactive%20prompt%20to%20enter%20your%20private%20key.%20Takes%20a%20value%20for%20the%20number%20of%20keys%20to%20enter.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%200%0A%0A%60--mnemonic-indexes%60%20*indexes*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20private%20key%20from%20the%20given%20mnemonic%20index.%20Used%20with%20--mnemonic-path.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BDefault%3A%200%0A%0A%60--mnemonic-paths%60%20*paths*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20mnemonic%20file%20at%20the%20specified%20path(s).%0A%0A%60--private-key%60%20*raw_private_key*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20provided%20private%20key.%0A%0A%60--private-keys%60%20*raw_private_keys*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20provided%20private%20keys.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-remote-BmXbdRkz.js"),__vite__mapDeps([206,1])),path:"/reference/common/multi-wallet-options-remote",type:"mdx",filePath:"reference/common/multi-wallet-options-remote.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Remote%0A%0A%60-a%60%20*addresses*%0A%60--froms%60%20*addresses*%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20the%20transaction%20with%20the%20specified%20accounts%20on%20the%20RPC.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_FROM%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-remote-BmXbdRkz.js"),__vite__mapDeps([206,1])),path:"/reference/common/multi-wallet-options-remote.html",type:"mdx",filePath:"reference/common/multi-wallet-options-remote.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Remote%0A%0A%60-a%60%20*addresses*%0A%60--froms%60%20*addresses*%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20the%20transaction%20with%20the%20specified%20accounts%20on%20the%20RPC.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_FROM%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-BqzPGYEC.js"),__vite__mapDeps([202,203,1,204,205,206])),path:"/reference/common/multi-wallet-options",type:"mdx",filePath:"reference/common/multi-wallet-options.mdx",content:"import%20MultiWalletOptionsRaw%20from%20%22.%2Fmulti-wallet-options-raw.mdx%22%3B%0Aimport%20MultiWalletOptionsKeystore%20from%20%22.%2Fmulti-wallet-options-keystore.mdx%22%3B%0Aimport%20MultiWalletOptionsHardware%20from%20%22.%2Fmulti-wallet-options-hardware.mdx%22%3B%0Aimport%20MultiWalletOptionsRemote%20from%20%22.%2Fmulti-wallet-options-remote.mdx%22%3B%0A%0A%3CMultiWalletOptionsRaw%20%2F%3E%0A%3CMultiWalletOptionsKeystore%20%2F%3E%0A%3CMultiWalletOptionsHardware%20%2F%3E%0A%3CMultiWalletOptionsRemote%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./multi-wallet-options-BqzPGYEC.js"),__vite__mapDeps([202,203,1,204,205,206])),path:"/reference/common/multi-wallet-options.html",type:"mdx",filePath:"reference/common/multi-wallet-options.mdx",content:"import%20MultiWalletOptionsRaw%20from%20%22.%2Fmulti-wallet-options-raw.mdx%22%3B%0Aimport%20MultiWalletOptionsKeystore%20from%20%22.%2Fmulti-wallet-options-keystore.mdx%22%3B%0Aimport%20MultiWalletOptionsHardware%20from%20%22.%2Fmulti-wallet-options-hardware.mdx%22%3B%0Aimport%20MultiWalletOptionsRemote%20from%20%22.%2Fmulti-wallet-options-remote.mdx%22%3B%0A%0A%3CMultiWalletOptionsRaw%20%2F%3E%0A%3CMultiWalletOptionsKeystore%20%2F%3E%0A%3CMultiWalletOptionsHardware%20%2F%3E%0A%3CMultiWalletOptionsRemote%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./retry-options-C3vuy_IN.js"),__vite__mapDeps([201,1])),path:"/reference/common/retry-options",type:"mdx",filePath:"reference/common/retry-options.mdx",content:"%60--delay%60%20*delay*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOptional%20timeout%20to%20apply%20in%20between%20attempts%20in%20seconds.%20Defaults%20to%203.%0A%0A%60--retries%60%20*retries*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNumber%20of%20attempts%20for%20retrying.%20Defaults%20to%2015.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./retry-options-C3vuy_IN.js"),__vite__mapDeps([201,1])),path:"/reference/common/retry-options.html",type:"mdx",filePath:"reference/common/retry-options.mdx",content:"%60--delay%60%20*delay*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BOptional%20timeout%20to%20apply%20in%20between%20attempts%20in%20seconds.%20Defaults%20to%203.%0A%0A%60--retries%60%20*retries*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNumber%20of%20attempts%20for%20retrying.%20Defaults%20to%2015.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rpc-options-D0SEoQy0.js"),__vite__mapDeps([49,50,1])),path:"/reference/common/rpc-options",type:"mdx",filePath:"reference/common/rpc-options.mdx",content:"import%20RpcUrlOption%20from%20%22.%2Frpc-url-option.mdx%22%3B%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%60--flashbots%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20Flashbots%20RPC%20URL%3A%20https%3A%2F%2Frpc.flashbots.net.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rpc-options-D0SEoQy0.js"),__vite__mapDeps([49,50,1])),path:"/reference/common/rpc-options.html",type:"mdx",filePath:"reference/common/rpc-options.mdx",content:"import%20RpcUrlOption%20from%20%22.%2Frpc-url-option.mdx%22%3B%0A%0A%23%23%23%23%20RPC%20Options%0A%0A%3CRpcUrlOption%20%2F%3E%0A%0A%60--flashbots%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20Flashbots%20RPC%20URL%3A%20https%3A%2F%2Frpc.flashbots.net.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rpc-url-option-Bdlv6sNx.js"),__vite__mapDeps([50,1])),path:"/reference/common/rpc-url-option",type:"mdx",filePath:"reference/common/rpc-url-option.mdx",content:"%60--rpc-url%60%20*url*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20RPC%20endpoint.%20Accepts%20a%20URL%20or%20an%20existing%20alias%20in%20the%20%5Brpc_endpoints%5D%20table%2C%20like%20%60mainnet%60.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_RPC_URL%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rpc-url-option-Bdlv6sNx.js"),__vite__mapDeps([50,1])),path:"/reference/common/rpc-url-option.html",type:"mdx",filePath:"reference/common/rpc-url-option.mdx",content:"%60--rpc-url%60%20*url*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20RPC%20endpoint.%20Accepts%20a%20URL%20or%20an%20existing%20alias%20in%20the%20%5Brpc_endpoints%5D%20table%2C%20like%20%60mainnet%60.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_RPC_URL%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./transaction-options-DcX8sy4C.js"),__vite__mapDeps([93,73,1])),path:"/reference/common/transaction-options",type:"mdx",filePath:"reference/common/transaction-options.mdx",content:"import%20TxValueOption%20from%20%22.%2Ftx-value-option.mdx%22%3B%0A%0A%23%23%23%23%20Transaction%20Options%0A%0A%60--gas-limit%60%20_gas_limit_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGas%20limit%20for%20the%20transaction.%0A%0A%60--gas-price%60%20_price_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGas%20price%20for%20the%20transaction%2C%20or%20max%20fee%20per%20gas%20for%20EIP1559%20transactions.%0A%0A%60--priority-gas-price%60%20_price_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BMax%20priority%20fee%20per%20gas%20for%20EIP1559%20transactions.%0A%0A%3CTxValueOption%20%2F%3E%0A%0A%60--nonce%60%20_nonce_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNonce%20for%20the%20transaction.%0A%0A%60--legacy%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20a%20legacy%20transaction%20instead%20of%20an%20%5BEIP1559%5D%5Beip1559%5D%20transaction.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20is%20automatically%20enabled%20for%20common%20networks%20without%20EIP1559.%0A%0A%5Beip1559%5D%3A%20https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-1559.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./transaction-options-DcX8sy4C.js"),__vite__mapDeps([93,73,1])),path:"/reference/common/transaction-options.html",type:"mdx",filePath:"reference/common/transaction-options.mdx",content:"import%20TxValueOption%20from%20%22.%2Ftx-value-option.mdx%22%3B%0A%0A%23%23%23%23%20Transaction%20Options%0A%0A%60--gas-limit%60%20_gas_limit_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGas%20limit%20for%20the%20transaction.%0A%0A%60--gas-price%60%20_price_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BGas%20price%20for%20the%20transaction%2C%20or%20max%20fee%20per%20gas%20for%20EIP1559%20transactions.%0A%0A%60--priority-gas-price%60%20_price_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BMax%20priority%20fee%20per%20gas%20for%20EIP1559%20transactions.%0A%0A%3CTxValueOption%20%2F%3E%0A%0A%60--nonce%60%20_nonce_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BNonce%20for%20the%20transaction.%0A%0A%60--legacy%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSend%20a%20legacy%20transaction%20instead%20of%20an%20%5BEIP1559%5D%5Beip1559%5D%20transaction.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThis%20is%20automatically%20enabled%20for%20common%20networks%20without%20EIP1559.%0A%0A%5Beip1559%5D%3A%20https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-1559.md%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./tx-value-option-CLXgq6c9.js"),__vite__mapDeps([73,1])),path:"/reference/common/tx-value-option",type:"mdx",filePath:"reference/common/tx-value-option.mdx",content:"%60--value%60%20*value*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEther%20to%20send%20in%20the%20transaction.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEither%20specified%20as%20an%20integer%20(wei)%2C%20or%20as%20a%20string%20with%20a%20unit%2C%20for%20example%3A%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%20%601ether%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%20%6010gwei%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%20%600.01ether%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./tx-value-option-CLXgq6c9.js"),__vite__mapDeps([73,1])),path:"/reference/common/tx-value-option.html",type:"mdx",filePath:"reference/common/tx-value-option.mdx",content:"%60--value%60%20*value*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEther%20to%20send%20in%20the%20transaction.%0A%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEither%20specified%20as%20an%20integer%20(wei)%2C%20or%20as%20a%20string%20with%20a%20unit%2C%20for%20example%3A%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%20%601ether%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%20%6010gwei%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B-%20%600.01ether%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./verifier-options-CpvTEhIE.js"),__vite__mapDeps([189,1])),path:"/reference/common/verifier-options",type:"mdx",filePath:"reference/common/verifier-options.mdx",content:"%60--verifier%60%20*name*%20%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20verification%20provider.%20Available%20options%3A%20%60etherscan%60%2C%20%60sourcify%60%20%26%20%60blockscout%60.%20Default%3A%20%60etherscan%60.%20Note%3A%20make%20sure%20you%20add%20%22%2Fapi%5C%3F%22%20to%20the%20end%20of%20the%20Blockscout%20homepage%20explorer%20URL.%0A%0A%60--verifier-url%60%20*url*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20optional%20verifier%20url%20for%20submitting%20the%20verification%20request.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60VERIFIER_URL%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./verifier-options-CpvTEhIE.js"),__vite__mapDeps([189,1])),path:"/reference/common/verifier-options.html",type:"mdx",filePath:"reference/common/verifier-options.mdx",content:"%60--verifier%60%20*name*%20%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20verification%20provider.%20Available%20options%3A%20%60etherscan%60%2C%20%60sourcify%60%20%26%20%60blockscout%60.%20Default%3A%20%60etherscan%60.%20Note%3A%20make%20sure%20you%20add%20%22%2Fapi%5C%3F%22%20to%20the%20end%20of%20the%20Blockscout%20homepage%20explorer%20URL.%0A%0A%60--verifier-url%60%20*url*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20optional%20verifier%20url%20for%20submitting%20the%20verification%20request.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60VERIFIER_URL%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-hardware-CzqFrXbI.js"),__vite__mapDeps([47,1])),path:"/reference/common/wallet-options-hardware",type:"mdx",filePath:"reference/common/wallet-options-hardware.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Hardware%20Wallet%0A%0A%60-t%60%20%20%0A%60--trezor%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Trezor%20hardware%20wallet.%0A%0A%60-l%60%20%20%0A%60--ledger%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Ledger%20hardware%20wallet.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-hardware-CzqFrXbI.js"),__vite__mapDeps([47,1])),path:"/reference/common/wallet-options-hardware.html",type:"mdx",filePath:"reference/common/wallet-options-hardware.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Hardware%20Wallet%0A%0A%60-t%60%20%20%0A%60--trezor%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Trezor%20hardware%20wallet.%0A%0A%60-l%60%20%20%0A%60--ledger%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20Ledger%20hardware%20wallet.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-keystore-DuC5PFVS.js"),__vite__mapDeps([46,1])),path:"/reference/common/wallet-options-keystore",type:"mdx",filePath:"reference/common/wallet-options-keystore.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Keystore%0A%0A%60--keystore%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20keystore%20in%20the%20given%20folder%20or%20file.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE%60%0A%0A%60--account%60%20_account-name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20keystore%20from%20the%20default%20keystores%20folder%20(~%2F.foundry%2Fkeystores)%20by%20its%20filename.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE_ACCOUNT%60%0A%0A%60--interactive%60%0A%0A%60--password%60%20_password_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20keystore%20password.%20Used%20with%20%60--keystore%60.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_PASSWORD%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-keystore-DuC5PFVS.js"),__vite__mapDeps([46,1])),path:"/reference/common/wallet-options-keystore.html",type:"mdx",filePath:"reference/common/wallet-options-keystore.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Keystore%0A%0A%60--keystore%60%20_path_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20the%20keystore%20in%20the%20given%20folder%20or%20file.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE%60%0A%0A%60--account%60%20_account-name_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BUse%20a%20keystore%20from%20the%20default%20keystores%20folder%20(~%2F.foundry%2Fkeystores)%20by%20its%20filename.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_KEYSTORE_ACCOUNT%60%0A%0A%60--interactive%60%0A%0A%60--password%60%20_password_%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BThe%20keystore%20password.%20Used%20with%20%60--keystore%60.%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_PASSWORD%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-raw-DUA3oCjg.js"),__vite__mapDeps([45,1])),path:"/reference/common/wallet-options-raw",type:"mdx",filePath:"reference/common/wallet-options-raw.mdx",content:"%23%23%23%23%20WALLET%20OPTIONS%20-%20RAW%3A%0A%60-i%60%20%20%0A%60--interactive%20%3CNUM%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Open%20an%20interactive%20prompt%20to%20enter%20your%20private%20key.%20Takes%20a%20value%20for%20the%20number%20of%20keys%20to%20enter.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Defaults%20to%20%600%60.%20%20%0A%0A%60--mnemonic-derivation-path%20%3CPATHS%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20wallet%20derivation%20path.%20Works%20with%20both%20%60--mnemonic-path%60%20and%20hardware%20wallets.%20%20%0A%0A%60--mnemonic-indexes%20%3CINDEXES%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20private%20key%20from%20the%20given%20mnemonic%20index.%20Used%20with%20--mnemonic-paths.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Defaults%20to%20%600%60.%0A%0A%60--mnemonic-passphrase%20%3CPASSPHRASE%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20a%20BIP39%20passphrases%20for%20the%20mnemonic.%20%20%0A%0A%60--mnemonic%20%3CPATHS%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20mnemonic%20phrases%20or%20mnemonic%20files%20at%20the%20specified%20paths.%20%20%0A%0A%60--private-key%20%3CRAW_PRIVATE_KEY%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20provided%20private%20key.%0A%0A%60--private-keys%20%3CRAW_PRIVATE_KEYS%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20provided%20private%20keys.%20%20%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-raw-DUA3oCjg.js"),__vite__mapDeps([45,1])),path:"/reference/common/wallet-options-raw.html",type:"mdx",filePath:"reference/common/wallet-options-raw.mdx",content:"%23%23%23%23%20WALLET%20OPTIONS%20-%20RAW%3A%0A%60-i%60%20%20%0A%60--interactive%20%3CNUM%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Open%20an%20interactive%20prompt%20to%20enter%20your%20private%20key.%20Takes%20a%20value%20for%20the%20number%20of%20keys%20to%20enter.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Defaults%20to%20%600%60.%20%20%0A%0A%60--mnemonic-derivation-path%20%3CPATHS%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20The%20wallet%20derivation%20path.%20Works%20with%20both%20%60--mnemonic-path%60%20and%20hardware%20wallets.%20%20%0A%0A%60--mnemonic-indexes%20%3CINDEXES%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20private%20key%20from%20the%20given%20mnemonic%20index.%20Used%20with%20--mnemonic-paths.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Defaults%20to%20%600%60.%0A%0A%60--mnemonic-passphrase%20%3CPASSPHRASE%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20a%20BIP39%20passphrases%20for%20the%20mnemonic.%20%20%0A%0A%60--mnemonic%20%3CPATHS%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20mnemonic%20phrases%20or%20mnemonic%20files%20at%20the%20specified%20paths.%20%20%0A%0A%60--private-key%20%3CRAW_PRIVATE_KEY%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20provided%20private%20key.%0A%0A%60--private-keys%20%3CRAW_PRIVATE_KEYS%3E%60%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20Use%20the%20provided%20private%20keys.%20%20%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-remote-D7IykmrK.js"),__vite__mapDeps([48,1])),path:"/reference/common/wallet-options-remote",type:"mdx",filePath:"reference/common/wallet-options-remote.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Remote%0A%0A%60-f%60%20*address*%20%20%0A%60--from%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20the%20transaction%20with%20the%20specified%20account%20on%20the%20RPC.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_FROM%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-remote-D7IykmrK.js"),__vite__mapDeps([48,1])),path:"/reference/common/wallet-options-remote.html",type:"mdx",filePath:"reference/common/wallet-options-remote.mdx",content:"%23%23%23%23%20Wallet%20Options%20-%20Remote%0A%0A%60-f%60%20*address*%20%20%0A%60--from%60%20*address*%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BSign%20the%20transaction%20with%20the%20specified%20account%20on%20the%20RPC.%20%20%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3BEnvironment%3A%20%60ETH_FROM%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-Il0ZuM8R.js"),__vite__mapDeps([44,45,1,46,47,48])),path:"/reference/common/wallet-options",type:"mdx",filePath:"reference/common/wallet-options.mdx",content:"import%20WalletOptionsRaw%20from%20%22.%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22.%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22.%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20WalletOptionsRemote%20from%20%22.%2Fwallet-options-remote.mdx%22%3B%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%3CWalletOptionsRemote%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./wallet-options-Il0ZuM8R.js"),__vite__mapDeps([44,45,1,46,47,48])),path:"/reference/common/wallet-options.html",type:"mdx",filePath:"reference/common/wallet-options.mdx",content:"import%20WalletOptionsRaw%20from%20%22.%2Fwallet-options-raw.mdx%22%3B%0Aimport%20WalletOptionsKeystore%20from%20%22.%2Fwallet-options-keystore.mdx%22%3B%0Aimport%20WalletOptionsHardware%20from%20%22.%2Fwallet-options-hardware.mdx%22%3B%0Aimport%20WalletOptionsRemote%20from%20%22.%2Fwallet-options-remote.mdx%22%3B%0A%0A%3CWalletOptionsRaw%20%2F%3E%0A%3CWalletOptionsKeystore%20%2F%3E%0A%3CWalletOptionsHardware%20%2F%3E%0A%3CWalletOptionsRemote%20%2F%3E%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./accesses-Cmgyil3H.js"),__vite__mapDeps([238,1])),path:"/reference/cheatcodes/accesses",type:"mdx",filePath:"reference/cheatcodes/accesses.mdx",content:"%23%23%20%60accesses%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20accesses(%0A%20%20address%0A)%0Aexternal%0Areturns%20(%0A%20%20bytes32%5B%5D%20memory%20reads%2C%0A%20%20bytes32%5B%5D%20memory%20writes%0A)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20all%20storage%20slots%20that%20have%20been%20read%20(%60reads%60)%20or%20written%20to%20(%60writes%60)%20on%20an%20address.%0A%0ANote%20that%20%5B%60record%60%5D(%2Freference%2Fcheatcodes%2Frecord.mdx)%20must%20be%20called%20first.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Every%20write%20also%20counts%20as%20an%20additional%20read.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20NumsContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num1%20%3D%20100%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num2%20%3D%20200%3B%20%2F%2F%20slot%201%0A%2F%2F%2F%20%7D%0A%0Avm.record()%3B%0AnumsContract.num2()%3B%0A(bytes32%5B%5D%20memory%20reads%2C%20bytes32%5B%5D%20memory%20writes)%20%3D%20vm.accesses(%0A%20%20address(numsContract)%0A)%3B%0Aemit%20log_uint(uint256(reads%5B0%5D))%3B%20%2F%2F%201%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./accesses-Cmgyil3H.js"),__vite__mapDeps([238,1])),path:"/reference/cheatcodes/accesses.html",type:"mdx",filePath:"reference/cheatcodes/accesses.mdx",content:"%23%23%20%60accesses%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20accesses(%0A%20%20address%0A)%0Aexternal%0Areturns%20(%0A%20%20bytes32%5B%5D%20memory%20reads%2C%0A%20%20bytes32%5B%5D%20memory%20writes%0A)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20all%20storage%20slots%20that%20have%20been%20read%20(%60reads%60)%20or%20written%20to%20(%60writes%60)%20on%20an%20address.%0A%0ANote%20that%20%5B%60record%60%5D(%2Freference%2Fcheatcodes%2Frecord.mdx)%20must%20be%20called%20first.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Every%20write%20also%20counts%20as%20an%20additional%20read.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20NumsContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num1%20%3D%20100%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num2%20%3D%20200%3B%20%2F%2F%20slot%201%0A%2F%2F%2F%20%7D%0A%0Avm.record()%3B%0AnumsContract.num2()%3B%0A(bytes32%5B%5D%20memory%20reads%2C%20bytes32%5B%5D%20memory%20writes)%20%3D%20vm.accesses(%0A%20%20address(numsContract)%0A)%3B%0Aemit%20log_uint(uint256(reads%5B0%5D))%3B%20%2F%2F%201%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./active-fork-CvMywvet.js"),__vite__mapDeps([239,1])),path:"/reference/cheatcodes/active-fork",type:"mdx",filePath:"reference/cheatcodes/active-fork.mdx",content:"%23%23%20%60activeFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20activeFork()%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20identifier%20for%20the%20currently%20active%20fork.%20Reverts%20if%20no%20fork%20is%20currently%20active.%0A%0A%23%23%23%20Examples%0A%0AGet%20the%20currently%20active%20fork%20id%3A%0A%0A%60%60%60solidity%0Auint256%20mainnetForkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0Auint256%20optimismForkId%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%0Aassert(mainnetForkId%20!%3D%20optimismForkId)%3B%0A%0Avm.selectFork(mainnetForkId)%3B%0AassertEq(vm.activeFork()%2C%20mainnetForkId)%3B%0A%0Avm.selectFork(optimismForkId)%3B%0AassertEq(vm.activeFork()%2C%20optimismForkId)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./active-fork-CvMywvet.js"),__vite__mapDeps([239,1])),path:"/reference/cheatcodes/active-fork.html",type:"mdx",filePath:"reference/cheatcodes/active-fork.mdx",content:"%23%23%20%60activeFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20activeFork()%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20identifier%20for%20the%20currently%20active%20fork.%20Reverts%20if%20no%20fork%20is%20currently%20active.%0A%0A%23%23%23%20Examples%0A%0AGet%20the%20currently%20active%20fork%20id%3A%0A%0A%60%60%60solidity%0Auint256%20mainnetForkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0Auint256%20optimismForkId%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%0Aassert(mainnetForkId%20!%3D%20optimismForkId)%3B%0A%0Avm.selectFork(mainnetForkId)%3B%0AassertEq(vm.activeFork()%2C%20mainnetForkId)%3B%0A%0Avm.selectFork(optimismForkId)%3B%0AassertEq(vm.activeFork()%2C%20optimismForkId)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./addr-DcWk6olJ.js"),__vite__mapDeps([240,1])),path:"/reference/cheatcodes/addr",type:"mdx",filePath:"reference/cheatcodes/addr.mdx",content:"%23%23%20%60addr%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20addr(uint256%20privateKey)%20external%20returns%20(address)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AComputes%20the%20address%20for%20a%20given%20private%20key.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20vm.addr(1)%3B%0Aemit%20log_address(alice)%3B%20%2F%2F%200x7e5f4552091a69125d5dfcb7b8c2659029395bdf%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./addr-DcWk6olJ.js"),__vite__mapDeps([240,1])),path:"/reference/cheatcodes/addr.html",type:"mdx",filePath:"reference/cheatcodes/addr.mdx",content:"%23%23%20%60addr%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20addr(uint256%20privateKey)%20external%20returns%20(address)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AComputes%20the%20address%20for%20a%20given%20private%20key.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20vm.addr(1)%3B%0Aemit%20log_address(alice)%3B%20%2F%2F%200x7e5f4552091a69125d5dfcb7b8c2659029395bdf%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./allow-cheatcodes-CnvQW6Fj.js"),__vite__mapDeps([241,1])),path:"/reference/cheatcodes/allow-cheatcodes",type:"mdx",filePath:"reference/cheatcodes/allow-cheatcodes.mdx",content:"%23%23%20%60allowCheatcodes%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20allowCheatcodes(address)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIn%20forking%20mode%2C%20explicitly%20grant%20the%20given%20address%20cheatcode%20access.%0A%0ABy%20default%2C%20the%20test%20contract%2C%20and%20its%20deployer%20are%20allowed%20to%20access%20cheatcodes.%20In%20addition%20to%20that%2C%20cheat%20code%0Aaccess%20is%20granted%20if%20the%20contract%20was%20deployed%20by%20an%20address%20that%20already%20has%20cheatcode%20access.%0AThis%20will%20prevent%20cheatcode%20access%20from%20accounts%20already%20deployed%20on%20the%20forked%20network.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20is%20only%20useful%20for%20more%20complex%20test%20setups%20in%20forking%20mode.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./allow-cheatcodes-CnvQW6Fj.js"),__vite__mapDeps([241,1])),path:"/reference/cheatcodes/allow-cheatcodes.html",type:"mdx",filePath:"reference/cheatcodes/allow-cheatcodes.mdx",content:"%23%23%20%60allowCheatcodes%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20allowCheatcodes(address)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIn%20forking%20mode%2C%20explicitly%20grant%20the%20given%20address%20cheatcode%20access.%0A%0ABy%20default%2C%20the%20test%20contract%2C%20and%20its%20deployer%20are%20allowed%20to%20access%20cheatcodes.%20In%20addition%20to%20that%2C%20cheat%20code%0Aaccess%20is%20granted%20if%20the%20contract%20was%20deployed%20by%20an%20address%20that%20already%20has%20cheatcode%20access.%0AThis%20will%20prevent%20cheatcode%20access%20from%20accounts%20already%20deployed%20on%20the%20forked%20network.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20is%20only%20useful%20for%20more%20complex%20test%20setups%20in%20forking%20mode.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertions-Dtij6WZp.js"),__vite__mapDeps([242,1])),path:"/reference/cheatcodes/assertions",type:"mdx",filePath:"reference/cheatcodes/assertions.mdx",content:"%23%23%20Assertions%0A%0A-%20%5B%60expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert.mdx)%0A-%20%5B%60expectEmit%60%5D(%2Freference%2Fcheatcodes%2Fexpect-emit.mdx)%0A-%20%5B%60expectCall%60%5D(%2Freference%2Fcheatcodes%2Fexpect-call.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertions-Dtij6WZp.js"),__vite__mapDeps([242,1])),path:"/reference/cheatcodes/assertions.html",type:"mdx",filePath:"reference/cheatcodes/assertions.mdx",content:"%23%23%20Assertions%0A%0A-%20%5B%60expectRevert%60%5D(%2Freference%2Fcheatcodes%2Fexpect-revert.mdx)%0A-%20%5B%60expectEmit%60%5D(%2Freference%2Fcheatcodes%2Fexpect-emit.mdx)%0A-%20%5B%60expectCall%60%5D(%2Freference%2Fcheatcodes%2Fexpect-call.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-no-revert-B-OOO6-P.js"),__vite__mapDeps([243,1])),path:"/reference/cheatcodes/assume-no-revert",type:"mdx",filePath:"reference/cheatcodes/assume-no-revert.mdx",content:"%23%23%20%60assumeNoRevert%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assumeNoRevert()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20fuzzer%20will%20discard%20the%20current%20fuzz%20inputs%20and%20start%20a%20new%20fuzz%20run%20if%20next%20call%20reverted.%0A%0AThe%20test%20may%20fail%20if%20you%20hit%20the%20max%20number%20of%20rejects.%0A%0AYou%20can%20configure%20the%20rejection%20thresholds%20by%20setting%20%5B%60fuzz.max_test_rejects%60%5D%5Bmax-test-rejects%5D%20in%20your%20%60foundry.toml%60%20file.%0A%0A%23%23%23%20Examples%0A%0AFor%20a%20function%20that%20requires%20an%20amount%20in%20certain%20range%3A%0A%60%60%60solidity%0Afunction%20doSomething(uint256%20amount)%20public%20%7B%0A%20%20%20%20require(amount%20%3E%20100%20ether%20%26%26%20amount%20%3C%201_000%20ether)%3B%0A%7D%0A%60%60%60%0Areverts%20are%20discarded%2C%20resulting%20in%20test%20pass%20(or%20fail%20if%20max%20number%20of%20rejects%20hit)%3A%0A%60%60%60solidity%0Afunction%20testSomething(uint256%20amount)%20public%20%7B%0A%20%20%20%20vm.assumeNoRevert()%3B%0A%20%20%20%20target.doSomething(amount)%3B%0A%20%20%20%20%2F%2F%20%5BPASS%5D%0A%7D%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-no-revert-B-OOO6-P.js"),__vite__mapDeps([243,1])),path:"/reference/cheatcodes/assume-no-revert.html",type:"mdx",filePath:"reference/cheatcodes/assume-no-revert.mdx",content:"%23%23%20%60assumeNoRevert%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assumeNoRevert()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20fuzzer%20will%20discard%20the%20current%20fuzz%20inputs%20and%20start%20a%20new%20fuzz%20run%20if%20next%20call%20reverted.%0A%0AThe%20test%20may%20fail%20if%20you%20hit%20the%20max%20number%20of%20rejects.%0A%0AYou%20can%20configure%20the%20rejection%20thresholds%20by%20setting%20%5B%60fuzz.max_test_rejects%60%5D%5Bmax-test-rejects%5D%20in%20your%20%60foundry.toml%60%20file.%0A%0A%23%23%23%20Examples%0A%0AFor%20a%20function%20that%20requires%20an%20amount%20in%20certain%20range%3A%0A%60%60%60solidity%0Afunction%20doSomething(uint256%20amount)%20public%20%7B%0A%20%20%20%20require(amount%20%3E%20100%20ether%20%26%26%20amount%20%3C%201_000%20ether)%3B%0A%7D%0A%60%60%60%0Areverts%20are%20discarded%2C%20resulting%20in%20test%20pass%20(or%20fail%20if%20max%20number%20of%20rejects%20hit)%3A%0A%60%60%60solidity%0Afunction%20testSomething(uint256%20amount)%20public%20%7B%0A%20%20%20%20vm.assumeNoRevert()%3B%0A%20%20%20%20target.doSomething(amount)%3B%0A%20%20%20%20%2F%2F%20%5BPASS%5D%0A%7D%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-BvwQG90v.js"),__vite__mapDeps([244,1])),path:"/reference/cheatcodes/assume",type:"mdx",filePath:"reference/cheatcodes/assume.mdx",content:"%23%23%20%60assume%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assume(bool)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIf%20the%20boolean%20expression%20evaluates%20to%20false%2C%20the%20fuzzer%20will%20discard%20the%20current%20fuzz%20inputs%20and%20start%20a%20new%20fuzz%20run.%0A%0AThe%20%60assume%60%20cheatcode%20should%20mainly%20be%20used%20for%20very%20narrow%20checks.%0ABroad%20checks%20will%20slow%20down%20tests%20as%20it%20will%20take%20a%20while%20to%20find%20valid%20values%2C%20and%20the%20test%20may%20fail%20if%20you%20hit%20the%20max%20number%20of%20rejects.%0A%0AYou%20can%20configure%20the%20rejection%20thresholds%20by%20setting%20%5B%60fuzz.max_test_rejects%60%5D%5Bmax-test-rejects%5D%20in%20your%20%60foundry.toml%60%20file.%0A%0AFor%20broad%20checks%2C%20such%20as%20ensuring%20a%20%60uint256%60%20falls%20within%20a%20certain%20range%2C%20you%20can%20bound%20your%20input%20with%20the%20modulo%20operator%20or%20Forge%20Standard's%20%5B%60bound%60%5D%5Bforge-std-bound%5D%20method.%0A%0AMore%20information%20on%20filtering%20via%20%60assume%60%20can%20be%20found%20%5Bhere%5D%5Bfiltering-guide%5D.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%20Good%20example%20of%20using%20assume%0Afunction%20testSomething(uint256%20a)%20public%20%7B%0A%20%20%20%20vm.assume(a%20!%3D%201)%3B%0A%20%20%20%20require(a%20!%3D%201)%3B%0A%20%20%20%20%2F%2F%20%5BPASS%5D%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20In%20this%20case%20assume%20is%20not%20a%20great%20fit%2C%20so%20you%20should%20bound%20inputs%20manually%0Afunction%20testSomethingElse(uint256%20a)%20public%20%7B%0A%20%20%20%20a%20%3D%20bound(a%2C%20100%2C%201e36)%3B%0A%20%20%20%20require(a%20%3E%3D%20100%20%26%26%20a%20%3C%3D%201e36)%3B%0A%20%20%20%20%2F%2F%20%5BPASS%5D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60bound%60%5D(%2Freference%2Fforge-std%2Fbound.mdx)%0A%0A%5Bmax-test-rejects%5D%3A%20..%2Fconfig%2Freference%2Ftesting.md%23max_test_rejects%0A%5Bforge-std-bound%5D%3A%20..%2Freference%2Fforge-std%2Fbound.md%0A%5Bfiltering-guide%5D%3A%20https%3A%2F%2Faltsysrq.github.io%2Fproptest-book%2Fproptest%2Ftutorial%2Ffiltering.html%23filtering%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-BvwQG90v.js"),__vite__mapDeps([244,1])),path:"/reference/cheatcodes/assume.html",type:"mdx",filePath:"reference/cheatcodes/assume.mdx",content:"%23%23%20%60assume%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assume(bool)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIf%20the%20boolean%20expression%20evaluates%20to%20false%2C%20the%20fuzzer%20will%20discard%20the%20current%20fuzz%20inputs%20and%20start%20a%20new%20fuzz%20run.%0A%0AThe%20%60assume%60%20cheatcode%20should%20mainly%20be%20used%20for%20very%20narrow%20checks.%0ABroad%20checks%20will%20slow%20down%20tests%20as%20it%20will%20take%20a%20while%20to%20find%20valid%20values%2C%20and%20the%20test%20may%20fail%20if%20you%20hit%20the%20max%20number%20of%20rejects.%0A%0AYou%20can%20configure%20the%20rejection%20thresholds%20by%20setting%20%5B%60fuzz.max_test_rejects%60%5D%5Bmax-test-rejects%5D%20in%20your%20%60foundry.toml%60%20file.%0A%0AFor%20broad%20checks%2C%20such%20as%20ensuring%20a%20%60uint256%60%20falls%20within%20a%20certain%20range%2C%20you%20can%20bound%20your%20input%20with%20the%20modulo%20operator%20or%20Forge%20Standard's%20%5B%60bound%60%5D%5Bforge-std-bound%5D%20method.%0A%0AMore%20information%20on%20filtering%20via%20%60assume%60%20can%20be%20found%20%5Bhere%5D%5Bfiltering-guide%5D.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%20Good%20example%20of%20using%20assume%0Afunction%20testSomething(uint256%20a)%20public%20%7B%0A%20%20%20%20vm.assume(a%20!%3D%201)%3B%0A%20%20%20%20require(a%20!%3D%201)%3B%0A%20%20%20%20%2F%2F%20%5BPASS%5D%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20In%20this%20case%20assume%20is%20not%20a%20great%20fit%2C%20so%20you%20should%20bound%20inputs%20manually%0Afunction%20testSomethingElse(uint256%20a)%20public%20%7B%0A%20%20%20%20a%20%3D%20bound(a%2C%20100%2C%201e36)%3B%0A%20%20%20%20require(a%20%3E%3D%20100%20%26%26%20a%20%3C%3D%201e36)%3B%0A%20%20%20%20%2F%2F%20%5BPASS%5D%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60bound%60%5D(%2Freference%2Fforge-std%2Fbound.mdx)%0A%0A%5Bmax-test-rejects%5D%3A%20..%2Fconfig%2Freference%2Ftesting.md%23max_test_rejects%0A%5Bforge-std-bound%5D%3A%20..%2Freference%2Fforge-std%2Fbound.md%0A%5Bfiltering-guide%5D%3A%20https%3A%2F%2Faltsysrq.github.io%2Fproptest-book%2Fproptest%2Ftutorial%2Ffiltering.html%23filtering%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./breakpoint-BvV2MB2C.js"),__vite__mapDeps([245,1])),path:"/reference/cheatcodes/breakpoint",type:"mdx",filePath:"reference/cheatcodes/breakpoint.mdx",content:"%23%23%20%60breakpoint%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20breakpoint(string)%20external%3B%0Afunction%20breakpoint(string%2C%20bool)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APlaces%20a%20breakpoint%20to%20jump%20to%20in%20the%20debugger%20view.%0A%0ACalling%20%60vm.breakpoint('%3Cchar%3E%2C%20true)%60%20is%20equivalent%20to%20%60vm.breakpoint('%3Cchar%3E)%60%2C%20but%20calling%20%60vm.breakpoint('%3Cchar%3E%2C%20false)%60%20will%20erase%20the%20breakpoint%20at%20%60'%3Cchar%3E%60.%0A%0AIf%20the%20char%20is%20overwritten%2C%20only%20the%20last%20one%20that%20was%20visited%20in%20the%20execution%20steps%20is%20considered.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20testBreakpoint()%20public%20%7B%0A%20%20%20%20vm.breakpoint(%22a%22)%3B%0A%7D%0A%60%60%60%0A%0AOpening%20up%20the%20debugger%20in%20a%20test%20environment%20and%20pressing%20%60'a%60%20will%20then%20place%20the%20debugger%20step%20at%20the%20place%20where%20the%20breakpoint%20cheatcode%20was%20called.%0A%0A!%5Bbreakpoint%20a%5D(%2Fbreakpoint.png)%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bdebugger%5D(%2Fforge%2Fdebugger)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./breakpoint-BvV2MB2C.js"),__vite__mapDeps([245,1])),path:"/reference/cheatcodes/breakpoint.html",type:"mdx",filePath:"reference/cheatcodes/breakpoint.mdx",content:"%23%23%20%60breakpoint%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20breakpoint(string)%20external%3B%0Afunction%20breakpoint(string%2C%20bool)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APlaces%20a%20breakpoint%20to%20jump%20to%20in%20the%20debugger%20view.%0A%0ACalling%20%60vm.breakpoint('%3Cchar%3E%2C%20true)%60%20is%20equivalent%20to%20%60vm.breakpoint('%3Cchar%3E)%60%2C%20but%20calling%20%60vm.breakpoint('%3Cchar%3E%2C%20false)%60%20will%20erase%20the%20breakpoint%20at%20%60'%3Cchar%3E%60.%0A%0AIf%20the%20char%20is%20overwritten%2C%20only%20the%20last%20one%20that%20was%20visited%20in%20the%20execution%20steps%20is%20considered.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20testBreakpoint()%20public%20%7B%0A%20%20%20%20vm.breakpoint(%22a%22)%3B%0A%7D%0A%60%60%60%0A%0AOpening%20up%20the%20debugger%20in%20a%20test%20environment%20and%20pressing%20%60'a%60%20will%20then%20place%20the%20debugger%20step%20at%20the%20place%20where%20the%20breakpoint%20cheatcode%20was%20called.%0A%0A!%5Bbreakpoint%20a%5D(%2Fbreakpoint.png)%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5Bdebugger%5D(%2Fforge%2Fdebugger)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./broadcast-DjYz-6zJ.js"),__vite__mapDeps([246,1])),path:"/reference/cheatcodes/broadcast",type:"mdx",filePath:"reference/cheatcodes/broadcast.mdx",content:"%23%23%20%60broadcast%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20broadcast()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20broadcast(address%20who)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20broadcast(uint256%20privateKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUsing%20the%20address%20that%20calls%20the%20test%20contract%20or%20the%20address%20%2F%20private%20key%20provided%0Aas%20the%20sender%2C%20has%20the%20next%20call%20(at%20this%20call%20depth%20only%20and%20excluding%20cheatcode%20calls)%20create%20a%0Atransaction%20that%20can%20later%20be%20signed%20and%20sent%20onchain.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20deploy()%20public%20%7B%0A%20%20%20%20vm.broadcast(ACCOUNT_A)%3B%0A%20%20%20%20Test%20test%20%3D%20new%20Test()%3B%0A%0A%20%20%20%20%2F%2F%20this%20won't%20generate%20tx%20to%20sign%0A%20%20%20%20uint256%20b%20%3D%20test.t(4)%3B%0A%0A%20%20%20%20%2F%2F%20this%20will%0A%20%20%20%20vm.broadcast(ACCOUNT_B)%3B%0A%20%20%20%20test.t(2)%3B%0A%0A%20%20%20%20%2F%2F%20this%20also%20will%2C%20using%20a%20private%20key%20from%20your%20environment%20variables%0A%20%20%20%20vm.broadcast(vm.envUint(%22PRIVATE_KEY%22))%3B%0A%20%20%20%20test.t(3)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BstartBroadcast%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx)%0A-%20%5BstopBroadcast%5D(%2Freference%2Fcheatcodes%2Fstop-broadcast.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./broadcast-DjYz-6zJ.js"),__vite__mapDeps([246,1])),path:"/reference/cheatcodes/broadcast.html",type:"mdx",filePath:"reference/cheatcodes/broadcast.mdx",content:"%23%23%20%60broadcast%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20broadcast()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20broadcast(address%20who)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20broadcast(uint256%20privateKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUsing%20the%20address%20that%20calls%20the%20test%20contract%20or%20the%20address%20%2F%20private%20key%20provided%0Aas%20the%20sender%2C%20has%20the%20next%20call%20(at%20this%20call%20depth%20only%20and%20excluding%20cheatcode%20calls)%20create%20a%0Atransaction%20that%20can%20later%20be%20signed%20and%20sent%20onchain.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20deploy()%20public%20%7B%0A%20%20%20%20vm.broadcast(ACCOUNT_A)%3B%0A%20%20%20%20Test%20test%20%3D%20new%20Test()%3B%0A%0A%20%20%20%20%2F%2F%20this%20won't%20generate%20tx%20to%20sign%0A%20%20%20%20uint256%20b%20%3D%20test.t(4)%3B%0A%0A%20%20%20%20%2F%2F%20this%20will%0A%20%20%20%20vm.broadcast(ACCOUNT_B)%3B%0A%20%20%20%20test.t(2)%3B%0A%0A%20%20%20%20%2F%2F%20this%20also%20will%2C%20using%20a%20private%20key%20from%20your%20environment%20variables%0A%20%20%20%20vm.broadcast(vm.envUint(%22PRIVATE_KEY%22))%3B%0A%20%20%20%20test.t(3)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BstartBroadcast%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx)%0A-%20%5BstopBroadcast%5D(%2Freference%2Fcheatcodes%2Fstop-broadcast.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./chain-id-CNopaoKd.js"),__vite__mapDeps([247,1])),path:"/reference/cheatcodes/chain-id",type:"mdx",filePath:"reference/cheatcodes/chain-id.mdx",content:"%23%23%20%60chainId%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20chainId(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.chainid%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.chainId(31337)%3B%0Aemit%20log_uint(block.chainid)%3B%20%2F%2F%2031337%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./chain-id-CNopaoKd.js"),__vite__mapDeps([247,1])),path:"/reference/cheatcodes/chain-id.html",type:"mdx",filePath:"reference/cheatcodes/chain-id.mdx",content:"%23%23%20%60chainId%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20chainId(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.chainid%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.chainId(31337)%3B%0Aemit%20log_uint(block.chainid)%3B%20%2F%2F%2031337%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./clear-mocked-calls-BOc4Mi5P.js"),__vite__mapDeps([248,1])),path:"/reference/cheatcodes/clear-mocked-calls",type:"mdx",filePath:"reference/cheatcodes/clear-mocked-calls.mdx",content:"%23%23%20%60clearMockedCalls%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20clearMockedCalls()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AClears%20all%20%5Bmocked%20calls%5D(%2Freference%2Fcheatcodes%2Fmock-call.mdx).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./clear-mocked-calls-BOc4Mi5P.js"),__vite__mapDeps([248,1])),path:"/reference/cheatcodes/clear-mocked-calls.html",type:"mdx",filePath:"reference/cheatcodes/clear-mocked-calls.mdx",content:"%23%23%20%60clearMockedCalls%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20clearMockedCalls()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AClears%20all%20%5Bmocked%20calls%5D(%2Freference%2Fcheatcodes%2Fmock-call.mdx).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./coinbase-9pt1o6YU.js"),__vite__mapDeps([249,1])),path:"/reference/cheatcodes/coinbase",type:"mdx",filePath:"reference/cheatcodes/coinbase.mdx",content:"%23%23%20%60coinbase%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20coinbase(address)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.coinbase%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aemit%20log_address(block.coinbase)%3B%20%2F%2F%200x0000000000000000000000000000000000000000%0Avm.coinbase(0xEA674fdDe714fd979de3EdF0F56AA9716B898ec8)%3B%0Aemit%20log_address(block.coinbase)%3B%20%2F%2F%200xea674fdde714fd979de3edf0f56aa9716b898ec8%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./coinbase-9pt1o6YU.js"),__vite__mapDeps([249,1])),path:"/reference/cheatcodes/coinbase.html",type:"mdx",filePath:"reference/cheatcodes/coinbase.mdx",content:"%23%23%20%60coinbase%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20coinbase(address)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.coinbase%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aemit%20log_address(block.coinbase)%3B%20%2F%2F%200x0000000000000000000000000000000000000000%0Avm.coinbase(0xEA674fdDe714fd979de3EdF0F56AA9716B898ec8)%3B%0Aemit%20log_address(block.coinbase)%3B%20%2F%2F%200xea674fdde714fd979de3edf0f56aa9716b898ec8%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./copy-storage-7Y-LGsQp.js"),__vite__mapDeps([250,1])),path:"/reference/cheatcodes/copy-storage",type:"mdx",filePath:"reference/cheatcodes/copy-storage.mdx",content:"%23%23%20%60copyStorage%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20copyStorage(address%20from%2C%20address%20to)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUtility%20cheatcode%20to%20copy%20storage%20of%20%60from%60%20contract%20to%20another%20%60to%60%20contract.%0ACheatcode%20is%20not%20allowed%20if%20the%20target%20address%20has%20arbitrary%20storage%20set.%0A%0A%23%23%23%20Examples%0A%0AGiven%20a%20contract%0A%60%60%60solidity%0Acontract%20Counter%20%7B%0A%20%20%20%20uint256%20public%20count%3B%0A%0A%20%20%20%20function%20setCount(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20count%20%3D%20x%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0Ausing%20%60copyStorage%60%20cheatcode%20copies%20the%20storage%20set%20on%20an%20instance%20to%20another%20address%3A%0A%60%60%60solidity%0Afunction%20testCopyStorage()%20public%20%7B%0A%20%20%20%20Counter%20original%20%3D%20new%20Counter()%3B%0A%20%20%20%20original.setCount(1000)%3B%0A%20%20%20%20Counter%20copy%20%3D%20new%20Counter()%3B%0A%20%20%20%20copy.setCount(1)%3B%0A%20%20%20%20%2F%2F%20Check%20initial%20count%20on%20copy.%0A%20%20%20%20assertEq(copy.count()%2C%201)%3B%0A%0A%20%20%20%20vm.copyStorage(address(original)%2C%20address(copy))%3B%0A%20%20%20%20%2F%2F%20Value%20is%20copied%20from%20first%20contract%20to%20copy.%0A%20%20%20%20assertEq(copy.count()%2C%201000)%3B%0A%7D%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./copy-storage-7Y-LGsQp.js"),__vite__mapDeps([250,1])),path:"/reference/cheatcodes/copy-storage.html",type:"mdx",filePath:"reference/cheatcodes/copy-storage.mdx",content:"%23%23%20%60copyStorage%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20copyStorage(address%20from%2C%20address%20to)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUtility%20cheatcode%20to%20copy%20storage%20of%20%60from%60%20contract%20to%20another%20%60to%60%20contract.%0ACheatcode%20is%20not%20allowed%20if%20the%20target%20address%20has%20arbitrary%20storage%20set.%0A%0A%23%23%23%20Examples%0A%0AGiven%20a%20contract%0A%60%60%60solidity%0Acontract%20Counter%20%7B%0A%20%20%20%20uint256%20public%20count%3B%0A%0A%20%20%20%20function%20setCount(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20count%20%3D%20x%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0Ausing%20%60copyStorage%60%20cheatcode%20copies%20the%20storage%20set%20on%20an%20instance%20to%20another%20address%3A%0A%60%60%60solidity%0Afunction%20testCopyStorage()%20public%20%7B%0A%20%20%20%20Counter%20original%20%3D%20new%20Counter()%3B%0A%20%20%20%20original.setCount(1000)%3B%0A%20%20%20%20Counter%20copy%20%3D%20new%20Counter()%3B%0A%20%20%20%20copy.setCount(1)%3B%0A%20%20%20%20%2F%2F%20Check%20initial%20count%20on%20copy.%0A%20%20%20%20assertEq(copy.count()%2C%201)%3B%0A%0A%20%20%20%20vm.copyStorage(address(original)%2C%20address(copy))%3B%0A%20%20%20%20%2F%2F%20Value%20is%20copied%20from%20first%20contract%20to%20copy.%0A%20%20%20%20assertEq(copy.count()%2C%201000)%3B%0A%7D%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./create-fork-C0y22euq.js"),__vite__mapDeps([251,1])),path:"/reference/cheatcodes/create-fork",type:"mdx",filePath:"reference/cheatcodes/create-fork.mdx",content:"%23%23%20%60createFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Creates%20a%20new%20fork%20with%20the%20given%20endpoint%20and%20the%20_latest_%20block%20and%20returns%20the%20identifier%20of%20the%20fork%0Afunction%20createFork(string%20calldata%20urlOrAlias)%20external%20returns%20(uint256)%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Creates%20a%20new%20fork%20with%20the%20given%20endpoint%20and%20block%20and%20returns%20the%20identifier%20of%20the%20fork%0Afunction%20createFork(string%20calldata%20urlOrAlias%2C%20uint256%20block)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Creates%20a%20new%20fork%20with%20the%20given%20endpoint%20and%20at%20the%20block%20the%20given%20transaction%20was%20mined%20in%2C%20and%20replays%20all%20transaction%20mined%20in%20the%20block%20before%20the%20transaction%0Afunction%20createFork(string%20calldata%20urlOrAlias%2C%20bytes32%20transaction)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20a%20new%20fork%20from%20the%20given%20endpoint%20and%20returns%20the%20identifier%20of%20the%20fork.%20If%20a%20block%20number%20is%20passed%20as%20an%20argument%2C%20the%20fork%20will%20begin%20on%20that%20block%2C%20otherwise%20it%20will%20begin%20on%20the%20_latest_%20block.%0A%0AIf%20a%20transaction%20hash%20is%20provided%2C%20it%20will%20roll%20the%20fork%20to%20the%20block%20the%20transaction%20was%20mined%20in%20and%20replays%20all%20previously%20executed%20transactions.%0A%0A%23%23%23%20Examples%0A%0ACreate%20a%20new%20mainnet%20fork%20with%20the%20latest%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0Avm.selectFork(forkId)%3B%0A%0AassertEq(block.number%2C%2015_171_037)%3B%20%2F%2F%20as%20of%20time%20of%20writing%2C%202022-07-19%2004%3A55%3A27%20UTC%0A%60%60%60%0A%0ACreate%20a%20new%20mainnet%20fork%20with%20a%20given%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL%2C%201_337_000)%3B%0Avm.selectFork(forkId)%3B%0A%0AassertEq(block.number%2C%201_337_000)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5BcreateSelectFork%5D(%2Freference%2Fcheatcodes%2Fcreate-select-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./create-fork-C0y22euq.js"),__vite__mapDeps([251,1])),path:"/reference/cheatcodes/create-fork.html",type:"mdx",filePath:"reference/cheatcodes/create-fork.mdx",content:"%23%23%20%60createFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Creates%20a%20new%20fork%20with%20the%20given%20endpoint%20and%20the%20_latest_%20block%20and%20returns%20the%20identifier%20of%20the%20fork%0Afunction%20createFork(string%20calldata%20urlOrAlias)%20external%20returns%20(uint256)%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Creates%20a%20new%20fork%20with%20the%20given%20endpoint%20and%20block%20and%20returns%20the%20identifier%20of%20the%20fork%0Afunction%20createFork(string%20calldata%20urlOrAlias%2C%20uint256%20block)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Creates%20a%20new%20fork%20with%20the%20given%20endpoint%20and%20at%20the%20block%20the%20given%20transaction%20was%20mined%20in%2C%20and%20replays%20all%20transaction%20mined%20in%20the%20block%20before%20the%20transaction%0Afunction%20createFork(string%20calldata%20urlOrAlias%2C%20bytes32%20transaction)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20a%20new%20fork%20from%20the%20given%20endpoint%20and%20returns%20the%20identifier%20of%20the%20fork.%20If%20a%20block%20number%20is%20passed%20as%20an%20argument%2C%20the%20fork%20will%20begin%20on%20that%20block%2C%20otherwise%20it%20will%20begin%20on%20the%20_latest_%20block.%0A%0AIf%20a%20transaction%20hash%20is%20provided%2C%20it%20will%20roll%20the%20fork%20to%20the%20block%20the%20transaction%20was%20mined%20in%20and%20replays%20all%20previously%20executed%20transactions.%0A%0A%23%23%23%20Examples%0A%0ACreate%20a%20new%20mainnet%20fork%20with%20the%20latest%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0Avm.selectFork(forkId)%3B%0A%0AassertEq(block.number%2C%2015_171_037)%3B%20%2F%2F%20as%20of%20time%20of%20writing%2C%202022-07-19%2004%3A55%3A27%20UTC%0A%60%60%60%0A%0ACreate%20a%20new%20mainnet%20fork%20with%20a%20given%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL%2C%201_337_000)%3B%0Avm.selectFork(forkId)%3B%0A%0AassertEq(block.number%2C%201_337_000)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5BcreateSelectFork%5D(%2Freference%2Fcheatcodes%2Fcreate-select-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./create-select-fork-D4LyLbuZ.js"),__vite__mapDeps([252,1])),path:"/reference/cheatcodes/create-select-fork",type:"mdx",filePath:"reference/cheatcodes/create-select-fork.mdx",content:"%23%23%20%60createSelectFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20createSelectFork(string%20calldata%20urlOrAlias)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20createSelectFork(string%20calldata%20urlOrAlias%2C%20uint256%20block)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20createSelectFork(string%20calldata%20urlOrAlias%2C%20bytes32%20transaction)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20_and_%20selects%20a%20new%20fork%20from%20the%20given%20endpoint%20and%20returns%20the%20identifier%20of%20the%20fork.%20If%20a%20block%20number%20is%20passed%20as%20an%20argument%2C%20the%20fork%20will%20begin%20on%20that%20block%2C%20otherwise%20it%20will%20begin%20on%20the%20_latest_%20block.%0A%0AIf%20a%20transaction%20hash%20is%20provided%2C%20it%20will%20roll%20the%20fork%20to%20the%20block%20the%20transaction%20was%20mined%20in%20and%20replays%20all%20previously%20executed%20transactions.%0A%0A%23%23%23%20Examples%0A%0ACreate%20and%20select%20a%20new%20mainnet%20fork%20with%20the%20latest%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createSelectFork(MAINNET_RPC_URL)%3B%0A%0AassertEq(block.number%2C%2015_171_037)%3B%20%2F%2F%20as%20of%20time%20of%20writing%2C%202022-07-19%2004%3A55%3A27%20UTC%0A%60%60%60%0A%0ACreate%20and%20select%20a%20new%20mainnet%20fork%20with%20a%20given%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createSelectFork(MAINNET_RPC_URL%2C%201_337_000)%3B%0A%0AassertEq(block.number%2C%201_337_000)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./create-select-fork-D4LyLbuZ.js"),__vite__mapDeps([252,1])),path:"/reference/cheatcodes/create-select-fork.html",type:"mdx",filePath:"reference/cheatcodes/create-select-fork.mdx",content:"%23%23%20%60createSelectFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20createSelectFork(string%20calldata%20urlOrAlias)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20createSelectFork(string%20calldata%20urlOrAlias%2C%20uint256%20block)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20createSelectFork(string%20calldata%20urlOrAlias%2C%20bytes32%20transaction)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20_and_%20selects%20a%20new%20fork%20from%20the%20given%20endpoint%20and%20returns%20the%20identifier%20of%20the%20fork.%20If%20a%20block%20number%20is%20passed%20as%20an%20argument%2C%20the%20fork%20will%20begin%20on%20that%20block%2C%20otherwise%20it%20will%20begin%20on%20the%20_latest_%20block.%0A%0AIf%20a%20transaction%20hash%20is%20provided%2C%20it%20will%20roll%20the%20fork%20to%20the%20block%20the%20transaction%20was%20mined%20in%20and%20replays%20all%20previously%20executed%20transactions.%0A%0A%23%23%23%20Examples%0A%0ACreate%20and%20select%20a%20new%20mainnet%20fork%20with%20the%20latest%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createSelectFork(MAINNET_RPC_URL)%3B%0A%0AassertEq(block.number%2C%2015_171_037)%3B%20%2F%2F%20as%20of%20time%20of%20writing%2C%202022-07-19%2004%3A55%3A27%20UTC%0A%60%60%60%0A%0ACreate%20and%20select%20a%20new%20mainnet%20fork%20with%20a%20given%20block%20number%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createSelectFork(MAINNET_RPC_URL%2C%201_337_000)%3B%0A%0AassertEq(block.number%2C%201_337_000)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./create-wallet-CUi6fQWn.js"),__vite__mapDeps([253,1])),path:"/reference/cheatcodes/create-wallet",type:"mdx",filePath:"reference/cheatcodes/create-wallet.mdx",content:"%23%23%20%60createWallet%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%20%20struct%20Wallet%20%7B%0A%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20uint256%20publicKeyX%3B%0A%20%20%20%20%20%20uint256%20publicKeyY%3B%0A%20%20%20%20%20%20uint256%20privateKey%3B%0A%20%20%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%20%20function%20createWallet(string%20calldata)%20external%20returns%20(Wallet%20memory)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%20%20function%20createWallet(uint256)%20external%20returns%20(Wallet%20memory)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%20%20function%20createWallet(uint256%2C%20string%20calldata)%20external%20returns%20(Wallet%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20a%20new%20Wallet%20struct%20when%20given%20a%20parameter%20to%20derive%20the%20private%20key%20from.%0A%0A%23%23%23%20Tips%0A%0A%5B%60sign()%60%5D(%2Freference%2Fcheatcodes%2Fsign.mdx)%20and%20%5B%60getNonce()%60%5D(%2Freference%2Fcheatcodes%2Fget-nonce.mdx)%20both%20have%20supported%20function%20overloads%20for%20the%20Wallet%20struct%20as%20well.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20%60uint256%60%0A%0A%60%60%60solidity%0AVm.Wallet%20memory%20wallet%20%3D%20vm.createWallet(uint256(keccak256(bytes(%221%22))))%3B%0A%0Aemit%20log_uint(wallet.privateKey)%3B%20%2F%2F%20uint256(keccak256(bytes(%221%22)))%0A%0Aemit%20log_address(wallet.addr)%3B%20%2F%2F%20vm.addr(wallet.privateKey)%0A%0Aemit%20log_address(%0A%20%20%20%20address(%0A%20%20%20%20%20%20%20%20uint160(%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encode(wallet.publicKeyX%2C%20wallet.publicKeyY))%0A%20%20%20%20%20%20%20%20%20%20%20%20)%0A%20%20%20%20%20%20%20%20)%0A%20%20%20%20)%0A)%3B%20%2F%2F%20wallet.addr%0A%0Aemit%20log_string(vm.getLabel(wallet.addr))%3B%20%2F%2F%20%22%22%0A%60%60%60%0A%0A%23%23%23%23%20%60string%60%0A%0A%60%60%60solidity%0AVm.Wallet%20memory%20wallet%20%3D%20vm.createWallet(%22bob's%20wallet%22)%3B%0A%0Aemit%20log_uint(wallet.privateKey)%3B%20%2F%2F%20uint256(keccak256(bytes(%22bob's%20wallet%22)))%0A%0Aemit%20log_address(wallet.addr)%3B%20%2F%2F%20vm.addr(wallet.privateKey)%0A%0Aemit%20log_address(%0A%20%20%20%20address(%0A%20%20%20%20%20%20%20%20uint160(%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encode(wallet.publicKeyX%2C%20wallet.publicKeyY))%0A%20%20%20%20%20%20%20%20%20%20%20%20)%0A%20%20%20%20%20%20%20%20)%0A%20%20%20%20)%0A)%3B%20%2F%2F%20wallet.addr%0A%0Aemit%20log_string(vm.getLabel(wallet.addr))%3B%20%2F%2F%20%22bob's%20wallet%22%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%60%20and%20%60string%60%0A%0A%60%60%60solidity%0AVm.Wallet%20memory%20wallet%20%3D%20vm.createWallet(uint256(keccak256(bytes(%221%22)))%2C%20%22bob's%20wallet%22)%3B%0A%0Aemit%20log_uint(wallet.privateKey)%3B%20%2F%2F%20uint256(keccak256(bytes(%221%22)))%0A%0Aemit%20log_address(wallet.addr)%3B%20%2F%2F%20vm.addr(wallet.privateKey)%0A%0Aemit%20log_address(%0A%20%20%20%20address(%0A%20%20%20%20%20%20%20%20uint160(%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encode(wallet.publicKeyX%2C%20wallet.publicKeyY))%0A%20%20%20%20%20%20%20%20%20%20%20%20)%0A%20%20%20%20%20%20%20%20)%0A%20%20%20%20)%0A)%3B%20%2F%2F%20wallet.addr%0A%0Aemit%20log_string(vm.getLabel(wallet.addr))%3B%20%2F%2F%20%22bob's%20wallet%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./create-wallet-CUi6fQWn.js"),__vite__mapDeps([253,1])),path:"/reference/cheatcodes/create-wallet.html",type:"mdx",filePath:"reference/cheatcodes/create-wallet.mdx",content:"%23%23%20%60createWallet%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%20%20struct%20Wallet%20%7B%0A%20%20%20%20%20%20address%20addr%3B%0A%20%20%20%20%20%20uint256%20publicKeyX%3B%0A%20%20%20%20%20%20uint256%20publicKeyY%3B%0A%20%20%20%20%20%20uint256%20privateKey%3B%0A%20%20%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%20%20function%20createWallet(string%20calldata)%20external%20returns%20(Wallet%20memory)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%20%20function%20createWallet(uint256)%20external%20returns%20(Wallet%20memory)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%20%20function%20createWallet(uint256%2C%20string%20calldata)%20external%20returns%20(Wallet%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20a%20new%20Wallet%20struct%20when%20given%20a%20parameter%20to%20derive%20the%20private%20key%20from.%0A%0A%23%23%23%20Tips%0A%0A%5B%60sign()%60%5D(%2Freference%2Fcheatcodes%2Fsign.mdx)%20and%20%5B%60getNonce()%60%5D(%2Freference%2Fcheatcodes%2Fget-nonce.mdx)%20both%20have%20supported%20function%20overloads%20for%20the%20Wallet%20struct%20as%20well.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20%60uint256%60%0A%0A%60%60%60solidity%0AVm.Wallet%20memory%20wallet%20%3D%20vm.createWallet(uint256(keccak256(bytes(%221%22))))%3B%0A%0Aemit%20log_uint(wallet.privateKey)%3B%20%2F%2F%20uint256(keccak256(bytes(%221%22)))%0A%0Aemit%20log_address(wallet.addr)%3B%20%2F%2F%20vm.addr(wallet.privateKey)%0A%0Aemit%20log_address(%0A%20%20%20%20address(%0A%20%20%20%20%20%20%20%20uint160(%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encode(wallet.publicKeyX%2C%20wallet.publicKeyY))%0A%20%20%20%20%20%20%20%20%20%20%20%20)%0A%20%20%20%20%20%20%20%20)%0A%20%20%20%20)%0A)%3B%20%2F%2F%20wallet.addr%0A%0Aemit%20log_string(vm.getLabel(wallet.addr))%3B%20%2F%2F%20%22%22%0A%60%60%60%0A%0A%23%23%23%23%20%60string%60%0A%0A%60%60%60solidity%0AVm.Wallet%20memory%20wallet%20%3D%20vm.createWallet(%22bob's%20wallet%22)%3B%0A%0Aemit%20log_uint(wallet.privateKey)%3B%20%2F%2F%20uint256(keccak256(bytes(%22bob's%20wallet%22)))%0A%0Aemit%20log_address(wallet.addr)%3B%20%2F%2F%20vm.addr(wallet.privateKey)%0A%0Aemit%20log_address(%0A%20%20%20%20address(%0A%20%20%20%20%20%20%20%20uint160(%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encode(wallet.publicKeyX%2C%20wallet.publicKeyY))%0A%20%20%20%20%20%20%20%20%20%20%20%20)%0A%20%20%20%20%20%20%20%20)%0A%20%20%20%20)%0A)%3B%20%2F%2F%20wallet.addr%0A%0Aemit%20log_string(vm.getLabel(wallet.addr))%3B%20%2F%2F%20%22bob's%20wallet%22%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%60%20and%20%60string%60%0A%0A%60%60%60solidity%0AVm.Wallet%20memory%20wallet%20%3D%20vm.createWallet(uint256(keccak256(bytes(%221%22)))%2C%20%22bob's%20wallet%22)%3B%0A%0Aemit%20log_uint(wallet.privateKey)%3B%20%2F%2F%20uint256(keccak256(bytes(%221%22)))%0A%0Aemit%20log_address(wallet.addr)%3B%20%2F%2F%20vm.addr(wallet.privateKey)%0A%0Aemit%20log_address(%0A%20%20%20%20address(%0A%20%20%20%20%20%20%20%20uint160(%0A%20%20%20%20%20%20%20%20%20%20%20%20uint256(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encode(wallet.publicKeyX%2C%20wallet.publicKeyY))%0A%20%20%20%20%20%20%20%20%20%20%20%20)%0A%20%20%20%20%20%20%20%20)%0A%20%20%20%20)%0A)%3B%20%2F%2F%20wallet.addr%0A%0Aemit%20log_string(vm.getLabel(wallet.addr))%3B%20%2F%2F%20%22bob's%20wallet%22%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deal-DQjz96e1.js"),__vite__mapDeps([254,1])),path:"/reference/cheatcodes/deal",type:"mdx",filePath:"reference/cheatcodes/deal.mdx",content:"%23%23%20%60deal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deal(address%20who%2C%20uint256%20newBalance)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20balance%20of%20an%20address%20%60who%60%20to%20%60newBalance%60.%0A%0AIf%20the%20alternative%20signature%20of%20%60deal%60%20is%20used%20(defined%20in%20%60StdCheats.sol%60)%2C%20then%20we%20can%20additionally%20specify%20ERC20%20token%20address%2C%20as%20well%20as%20an%20option%20to%20update%20%60totalSupply%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.deal(alice%2C%201%20ether)%3B%0Alog_uint256(alice.balance)%3B%20%2F%2F%201000000000000000000%0A%60%60%60%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Adeal(address(DAI)%2C%20alice%2C%201%20ether)%3B%20%2F%2F%20import%20StdUtils.sol%20first%0Alog_uint256(address(DAI).balanceOf(alice))%3B%20%2F%2F%201000000000000000000%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60deal%60%5D(%2Freference%2Fforge-std%2Fdeal.mdx)%2C%20%5B%60hoax%60%5D(%2Freference%2Fforge-std%2Fhoax.mdx)%2C%20%5B%60startHoax%60%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deal-DQjz96e1.js"),__vite__mapDeps([254,1])),path:"/reference/cheatcodes/deal.html",type:"mdx",filePath:"reference/cheatcodes/deal.mdx",content:"%23%23%20%60deal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deal(address%20who%2C%20uint256%20newBalance)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20balance%20of%20an%20address%20%60who%60%20to%20%60newBalance%60.%0A%0AIf%20the%20alternative%20signature%20of%20%60deal%60%20is%20used%20(defined%20in%20%60StdCheats.sol%60)%2C%20then%20we%20can%20additionally%20specify%20ERC20%20token%20address%2C%20as%20well%20as%20an%20option%20to%20update%20%60totalSupply%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.deal(alice%2C%201%20ether)%3B%0Alog_uint256(alice.balance)%3B%20%2F%2F%201000000000000000000%0A%60%60%60%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Adeal(address(DAI)%2C%20alice%2C%201%20ether)%3B%20%2F%2F%20import%20StdUtils.sol%20first%0Alog_uint256(address(DAI).balanceOf(alice))%3B%20%2F%2F%201000000000000000000%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60deal%60%5D(%2Freference%2Fforge-std%2Fdeal.mdx)%2C%20%5B%60hoax%60%5D(%2Freference%2Fforge-std%2Fhoax.mdx)%2C%20%5B%60startHoax%60%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./derive-key-C8FA7nvJ.js"),__vite__mapDeps([255,1])),path:"/reference/cheatcodes/derive-key",type:"mdx",filePath:"reference/cheatcodes/derive-key.mdx",content:"%23%23%20%60deriveKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deriveKey(%0A%20%20string%20calldata%20mnemonic%2C%0A%20%20uint32%20index%0A)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deriveKey(%0A%20%20string%20calldata%20mnemonic%2C%0A%20%20string%20calldata%20path%2C%0A%20%20uint32%20index%0A)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADerive%20a%20private%20key%20from%20a%20given%20mnemonic%20or%20mnemonic%20file%20path.%0A%0AThe%20first%20signature%20derives%20at%20the%20derivation%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F%7Bindex%7D%60.%0AThe%20second%20signature%20allows%20you%20to%20specify%20the%20derivation%20path%20as%20the%20second%20parameter.%0A%0A%23%23%23%20Examples%0A%0ADerive%20the%20private%20key%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0Auint256%20privateKey%20%3D%20vm.deriveKey(mnemonic%2C%200)%3B%0A%60%60%60%0A%0ADerive%20the%20private%20key%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F1%2F0%60%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0Auint256%20privateKey%20%3D%20vm.deriveKey(mnemonic%2C%20%22m%2F44'%2F60'%2F0'%2F1%2F%22%2C%200)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BrememberKey%5D(%2Freference%2Fcheatcodes%2Fremember-key.mdx)%0A%0AForge%20Standard%20Library%3A%0A%0A-%20%5BderiveRememberKey%5D(%2Freference%2Fforge-std%2Fderive-remember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./derive-key-C8FA7nvJ.js"),__vite__mapDeps([255,1])),path:"/reference/cheatcodes/derive-key.html",type:"mdx",filePath:"reference/cheatcodes/derive-key.mdx",content:"%23%23%20%60deriveKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deriveKey(%0A%20%20string%20calldata%20mnemonic%2C%0A%20%20uint32%20index%0A)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deriveKey(%0A%20%20string%20calldata%20mnemonic%2C%0A%20%20string%20calldata%20path%2C%0A%20%20uint32%20index%0A)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADerive%20a%20private%20key%20from%20a%20given%20mnemonic%20or%20mnemonic%20file%20path.%0A%0AThe%20first%20signature%20derives%20at%20the%20derivation%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F%7Bindex%7D%60.%0AThe%20second%20signature%20allows%20you%20to%20specify%20the%20derivation%20path%20as%20the%20second%20parameter.%0A%0A%23%23%23%20Examples%0A%0ADerive%20the%20private%20key%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0Auint256%20privateKey%20%3D%20vm.deriveKey(mnemonic%2C%200)%3B%0A%60%60%60%0A%0ADerive%20the%20private%20key%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F1%2F0%60%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0Auint256%20privateKey%20%3D%20vm.deriveKey(mnemonic%2C%20%22m%2F44'%2F60'%2F0'%2F1%2F%22%2C%200)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BrememberKey%5D(%2Freference%2Fcheatcodes%2Fremember-key.mdx)%0A%0AForge%20Standard%20Library%3A%0A%0A-%20%5BderiveRememberKey%5D(%2Freference%2Fforge-std%2Fderive-remember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./difficulty-CNHBsKgA.js"),__vite__mapDeps([256,1])),path:"/reference/cheatcodes/difficulty",type:"mdx",filePath:"reference/cheatcodes/difficulty.mdx",content:"%23%23%20%60difficulty%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20difficulty(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.difficulty%60.%0A%0AIf%20used%20with%20a%20post-merge%20EVM%20version%20(Paris%20and%20onwards)%2C%20it%20will%20revert.%20In%20that%20case%2C%20use%20%5B%60vm.prevrandao%60%5D%5Bprevrandao%5D%20instead.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.difficulty(25)%3B%0Aemit%20log_uint(block.difficulty)%3B%20%2F%2F%2025%0A%60%60%60%0A%0A%0A%5Bprevrandao%5D%3A%20.%2Fprevrandao.md",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./difficulty-CNHBsKgA.js"),__vite__mapDeps([256,1])),path:"/reference/cheatcodes/difficulty.html",type:"mdx",filePath:"reference/cheatcodes/difficulty.mdx",content:"%23%23%20%60difficulty%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20difficulty(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.difficulty%60.%0A%0AIf%20used%20with%20a%20post-merge%20EVM%20version%20(Paris%20and%20onwards)%2C%20it%20will%20revert.%20In%20that%20case%2C%20use%20%5B%60vm.prevrandao%60%5D%5Bprevrandao%5D%20instead.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.difficulty(25)%3B%0Aemit%20log_uint(block.difficulty)%3B%20%2F%2F%2025%0A%60%60%60%0A%0A%0A%5Bprevrandao%5D%3A%20.%2Fprevrandao.md",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-address-DG5Hf_KJ.js"),__vite__mapDeps([257,1])),path:"/reference/cheatcodes/env-address",type:"mdx",filePath:"reference/cheatcodes/env-address.mdx",content:"%23%23%20%60envAddress%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envAddress(string%20calldata%20key)%20external%20returns%20(address%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envAddress(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(address%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60address%60%20or%20%60address%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60ADDRESS_VALUE%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22ADDRESS_VALUE%22%3B%0Aaddress%20expected%20%3D%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D%3B%0Aaddress%20output%20%3D%20vm.envAddress(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60ADDRESS_VALUES%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C0x0000000000000000000000000000000000000000%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22ADDRESS_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Aaddress%5B2%5D%20memory%20expected%20%3D%20%5B%0A%20%20%20%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C%0A%20%20%20%200x0000000000000000000000000000000000000000%0A%5D%3B%0Aaddress%5B%5D%20memory%20output%20%3D%20vm.envAddress(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-address-DG5Hf_KJ.js"),__vite__mapDeps([257,1])),path:"/reference/cheatcodes/env-address.html",type:"mdx",filePath:"reference/cheatcodes/env-address.mdx",content:"%23%23%20%60envAddress%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envAddress(string%20calldata%20key)%20external%20returns%20(address%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envAddress(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(address%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60address%60%20or%20%60address%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60ADDRESS_VALUE%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22ADDRESS_VALUE%22%3B%0Aaddress%20expected%20%3D%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D%3B%0Aaddress%20output%20%3D%20vm.envAddress(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60ADDRESS_VALUES%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C0x0000000000000000000000000000000000000000%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22ADDRESS_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Aaddress%5B2%5D%20memory%20expected%20%3D%20%5B%0A%20%20%20%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C%0A%20%20%20%200x0000000000000000000000000000000000000000%0A%5D%3B%0Aaddress%5B%5D%20memory%20output%20%3D%20vm.envAddress(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-bool-BgZ8zg0s.js"),__vite__mapDeps([258,1])),path:"/reference/cheatcodes/env-bool",type:"mdx",filePath:"reference/cheatcodes/env-bool.mdx",content:"%23%23%20%60envBool%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envBool(string%20calldata%20key)%20external%20returns%20(bool%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envBool(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(bool%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60bool%60%20or%20%60bool%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20%60true%60%2C%20use%20either%20%22true%22%20or%20%22True%22%20for%20the%20environment%20variable%20value.%0A-%20For%20%60false%60%2C%20use%20either%20%22false%22%20or%20%22False%22%20for%20the%20environment%20variable%20value.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60BOOL_VALUE%3Dtrue%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BOOL_VALUE%22%3B%0Abool%20expected%20%3D%20true%3B%0Abool%20output%20%3D%20cheats.envBool(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60BOOL_VALUES%3Dtrue%2Cfalse%2CTrue%2CFalse%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BOOL_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Abool%5B4%5D%20memory%20expected%20%3D%20%5Btrue%2C%20false%2C%20true%2C%20false%5D%3B%0Abool%5B%5D%20memory%20output%20%3D%20cheats.envBool(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-bool-BgZ8zg0s.js"),__vite__mapDeps([258,1])),path:"/reference/cheatcodes/env-bool.html",type:"mdx",filePath:"reference/cheatcodes/env-bool.mdx",content:"%23%23%20%60envBool%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envBool(string%20calldata%20key)%20external%20returns%20(bool%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envBool(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(bool%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60bool%60%20or%20%60bool%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20%60true%60%2C%20use%20either%20%22true%22%20or%20%22True%22%20for%20the%20environment%20variable%20value.%0A-%20For%20%60false%60%2C%20use%20either%20%22false%22%20or%20%22False%22%20for%20the%20environment%20variable%20value.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60BOOL_VALUE%3Dtrue%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BOOL_VALUE%22%3B%0Abool%20expected%20%3D%20true%3B%0Abool%20output%20%3D%20cheats.envBool(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60BOOL_VALUES%3Dtrue%2Cfalse%2CTrue%2CFalse%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BOOL_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Abool%5B4%5D%20memory%20expected%20%3D%20%5Btrue%2C%20false%2C%20true%2C%20false%5D%3B%0Abool%5B%5D%20memory%20output%20%3D%20cheats.envBool(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-bytes-Bfi3Jkzr.js"),__vite__mapDeps([259,1])),path:"/reference/cheatcodes/env-bytes",type:"mdx",filePath:"reference/cheatcodes/env-bytes.mdx",content:"%23%23%20%60envBytes%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envBytes(bytes%20calldata%20key)%20external%20returns%20(bytes%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envBytes(bytes%20calldata%20key%2C%20bytes%20calldata%20delimiter)%20external%20returns%20(bytes%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60bytes%60%20or%20%60bytes%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60BYTES_VALUE%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%3B%0A%60%60%60solidity%0Abytes%20memory%20key%20%3D%20%22BYTES_VALUE%22%3B%0Abytes%20expected%20%3D%20hex%227109709ECfa91a80626fF3989D68f67F5b1DD12D%22%3B%0Abytes%20output%20%3D%20cheats.envBytes(key)%3B%0AassertEq(output%2C%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60BYTES_VALUE%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C0x00%60%3B%0A%60%60%60solidity%0Abytes%20memory%20key%20%3D%20%22BYTES_VALUES%22%3B%0Abytes%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Abytes%5B%5D%20memory%20expected%20%3D%20new%20bytes%5B%5D(2)%3B%0Aexpected%5B0%5D%20%3D%20hex%227109709ECfa91a80626fF3989D68f67F5b1DD12D%22%3B%0Aexpected%5B1%5D%20%3D%20hex%2200%22%3B%0Abytes%5B%5D%20memory%20output%20%3D%20cheats.envBytes(key%2C%20delimiter)%3B%0Afor%20(uint%20i%20%3D%200%3B%20i%20%3C%20expected.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20assert(keccak256(abi.encodePacked((output%5Bi%5D)))%20%3D%3D%20keccak256(abi.encodePacked((expected%5Bi%5D))))%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-bytes-Bfi3Jkzr.js"),__vite__mapDeps([259,1])),path:"/reference/cheatcodes/env-bytes.html",type:"mdx",filePath:"reference/cheatcodes/env-bytes.mdx",content:"%23%23%20%60envBytes%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envBytes(bytes%20calldata%20key)%20external%20returns%20(bytes%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envBytes(bytes%20calldata%20key%2C%20bytes%20calldata%20delimiter)%20external%20returns%20(bytes%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60bytes%60%20or%20%60bytes%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60BYTES_VALUE%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%3B%0A%60%60%60solidity%0Abytes%20memory%20key%20%3D%20%22BYTES_VALUE%22%3B%0Abytes%20expected%20%3D%20hex%227109709ECfa91a80626fF3989D68f67F5b1DD12D%22%3B%0Abytes%20output%20%3D%20cheats.envBytes(key)%3B%0AassertEq(output%2C%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60BYTES_VALUE%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C0x00%60%3B%0A%60%60%60solidity%0Abytes%20memory%20key%20%3D%20%22BYTES_VALUES%22%3B%0Abytes%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Abytes%5B%5D%20memory%20expected%20%3D%20new%20bytes%5B%5D(2)%3B%0Aexpected%5B0%5D%20%3D%20hex%227109709ECfa91a80626fF3989D68f67F5b1DD12D%22%3B%0Aexpected%5B1%5D%20%3D%20hex%2200%22%3B%0Abytes%5B%5D%20memory%20output%20%3D%20cheats.envBytes(key%2C%20delimiter)%3B%0Afor%20(uint%20i%20%3D%200%3B%20i%20%3C%20expected.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20assert(keccak256(abi.encodePacked((output%5Bi%5D)))%20%3D%3D%20keccak256(abi.encodePacked((expected%5Bi%5D))))%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-bytes32-5hDNjjbz.js"),__vite__mapDeps([260,1])),path:"/reference/cheatcodes/env-bytes32",type:"mdx",filePath:"reference/cheatcodes/env-bytes32.mdx",content:"%23%23%20%60envBytes32%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envBytes32(string%20calldata%20key)%20external%20returns%20(bytes32%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envBytes32(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(bytes32%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60bytes32%60%20or%20%60address%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60BYTES32_VALUE%3D0x00%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BYTES32_VALUE%22%3B%0Abytes32%20expected%20%3D%20bytes32(0x0000000000000000000000000000000000000000000000000000000000000000)%3B%0Abytes32%20output%20%3D%20vm.envBytes32(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60BYTES32_VALUES%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C0x00%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BYTES32_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Abytes32%5B2%5D%20memory%20expected%20%3D%20%5B%0A%20%20%20%20bytes32(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D000000000000000000000000)%2C%0A%20%20%20%20bytes32(0x0000000000000000000000000000000000000000000000000000000000000000)%0A%5D%3B%0Abytes32%5B%5D%20memory%20output%20%3D%20vm.envBytes32(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-bytes32-5hDNjjbz.js"),__vite__mapDeps([260,1])),path:"/reference/cheatcodes/env-bytes32.html",type:"mdx",filePath:"reference/cheatcodes/env-bytes32.mdx",content:"%23%23%20%60envBytes32%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envBytes32(string%20calldata%20key)%20external%20returns%20(bytes32%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envBytes32(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(bytes32%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60bytes32%60%20or%20%60address%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60BYTES32_VALUE%3D0x00%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BYTES32_VALUE%22%3B%0Abytes32%20expected%20%3D%20bytes32(0x0000000000000000000000000000000000000000000000000000000000000000)%3B%0Abytes32%20output%20%3D%20vm.envBytes32(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60BYTES32_VALUES%3D0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%2C0x00%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22BYTES32_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Abytes32%5B2%5D%20memory%20expected%20%3D%20%5B%0A%20%20%20%20bytes32(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D000000000000000000000000)%2C%0A%20%20%20%20bytes32(0x0000000000000000000000000000000000000000000000000000000000000000)%0A%5D%3B%0Abytes32%5B%5D%20memory%20output%20%3D%20vm.envBytes32(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-int-dtcLIkfy.js"),__vite__mapDeps([261,1])),path:"/reference/cheatcodes/env-int",type:"mdx",filePath:"reference/cheatcodes/env-int.mdx",content:"%23%23%20%60envInt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envInt(string%20calldata%20key)%20external%20returns%20(int256%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envInt(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(int256%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60int256%60%20or%20%60int256%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20If%20the%20value%20starts%20with%20%600x%60%2C%20%60-0x%60%20or%20%60%2B0x%60%2C%20it%20will%20be%20interpreted%20as%20a%20hex%20value%2C%20otherwise%2C%0Ait%20will%20be%20treated%20as%20a%20decimal%20number.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60INT_VALUE%3D-57896044618658097711785492504343953926634992332820282019728792003956564819968%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22INT_VALUE%22%3B%0Aint256%20expected%20%3D%20type(int256).min%3B%0Aint256%20output%20%3D%20cheats.envInt(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60INT_VALUES%3D-0x8000000000000000000000000000000000000000000000000000000000000000%2C%2B0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22INT_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Aint256%5B2%5D%20memory%20expected%20%3D%20%5Btype(int256).min%2C%20type(int256).max%5D%3B%0Aint256%5B%5D%20memory%20output%20%3D%20cheats.envInt(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-int-dtcLIkfy.js"),__vite__mapDeps([261,1])),path:"/reference/cheatcodes/env-int.html",type:"mdx",filePath:"reference/cheatcodes/env-int.mdx",content:"%23%23%20%60envInt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envInt(string%20calldata%20key)%20external%20returns%20(int256%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envInt(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(int256%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60int256%60%20or%20%60int256%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20If%20the%20value%20starts%20with%20%600x%60%2C%20%60-0x%60%20or%20%60%2B0x%60%2C%20it%20will%20be%20interpreted%20as%20a%20hex%20value%2C%20otherwise%2C%0Ait%20will%20be%20treated%20as%20a%20decimal%20number.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60INT_VALUE%3D-57896044618658097711785492504343953926634992332820282019728792003956564819968%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22INT_VALUE%22%3B%0Aint256%20expected%20%3D%20type(int256).min%3B%0Aint256%20output%20%3D%20cheats.envInt(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60INT_VALUES%3D-0x8000000000000000000000000000000000000000000000000000000000000000%2C%2B0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22INT_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Aint256%5B2%5D%20memory%20expected%20%3D%20%5Btype(int256).min%2C%20type(int256).max%5D%3B%0Aint256%5B%5D%20memory%20output%20%3D%20cheats.envInt(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-or-5xtT1u9z.js"),__vite__mapDeps([262,1])),path:"/reference/cheatcodes/env-or",type:"mdx",filePath:"reference/cheatcodes/env-or.mdx",content:"%23%23%20%60envOr%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envOr(string%20calldata%20key%2C%20bool%20defaultValue)%20external%20returns%20(bool%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20uint256%20defaultValue)%20external%20returns%20(uint256%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20int256%20defaultValue)%20external%20returns%20(int256%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20address%20defaultValue)%20external%20returns%20(address%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20bytes32%20defaultValue)%20external%20returns%20(bytes32%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20defaultValue)%20external%20returns%20(string%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20bytes%20calldata%20defaultValue)%20external%20returns%20(bytes%20memory%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20bool%5B%5D%20calldata%20defaultValue)%20external%20returns%20(bool%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20uint256%5B%5D%20calldata%20defaultValue)%20external%20returns%20(uint256%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20int256%5B%5D%20calldata%20defaultValue)%20external%20returns%20(int256%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20address%5B%5D%20calldata%20defaultValue)%20external%20returns%20(address%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20bytes32%5B%5D%20calldata%20defaultValue)%20external%20returns%20(bytes32%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20string%5B%5D%20calldata%20defaultValue)%20external%20returns%20(string%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20bytes%5B%5D%20calldata%20defaultValue)%20external%20returns%20(bytes%5B%5D%20memory%20value)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20non-failing%20way%20to%20read%20an%20environment%20variable%20of%20any%20type%3A%20if%20the%20requested%20environment%20key%20does%20not%20exist%2C%20%60envOr()%60%20will%20return%20a%20default%20value%20instead%20of%20reverting%20(works%20with%20arrays%20too).%0A%0AThe%20returned%20type%20is%20determined%20by%20the%20type%20of%20%60defaultValue%60%20parameter%20passed.%0A%0A%23%23%23%20Tips%0A%0A-%20Use%20%60envOr(key%2C%20defaultValue)%60%20to%20read%20a%20single%20value%0A-%20Use%20%60envOr(key%2C%20delimiter%2C%20defaultValue%5B%5D)%60%20to%20read%20an%20array%20with%20delimiter%0A-%20The%20parsing%20of%20the%20environment%20variable%20will%20be%20done%20according%20to%20the%20type%20of%20%60defaultValue%60%20(e.g.%20if%20the%20default%20value%20type%20is%20%60uint%60%20-%20the%20environment%20variable%20will%20be%20also%20parsed%20as%20%60uint%60)%0A-%20Use%20explicit%20casting%20for%20literals%20to%20specify%20type%20of%20default%20variable%3A%20%60uint(69)%60%20will%20return%20an%20%60uint%60%20but%20%60int(69)%60%20will%20return%20an%20%60int%60%0A-%20Same%20with%3A%20%60string(%22%22)%60%20and%20%60bytes(%22%22)%60%20-%20these%20will%20return%20%60string%60%20and%20%60bytes%60%20accordingly%0A-%20Use%20dynamic%20arrays%20(%60bool%5B%5D%60)%20instead%20of%20fixed-size%20arrays%20(%60bool%5B4%5D%60)%20when%20providing%20default%20values%20(only%20dynamic%20arrays%20are%20supported)%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AIf%20the%20environment%20variable%20%60FORK%60%20is%20not%20set%2C%20you%20can%20specify%20it%20to%20be%20%60false%60%20by%20default%3A%0A%60%60%60solidity%0Abool%20fork%20%3D%20vm.envOr(%22FORK%22%2C%20false)%3B%0A%60%60%60%0Aor%0A%60%60%60solidity%0Aaddress%20owner%3B%0A%0Afunction%20setUp()%20%7B%0A%20%20owner%20%3D%20vm.envOr(%22OWNER%22%2C%20address(this))%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AIf%20the%20environment%20variable%20%60BAD_TOKENS%60%20is%20not%20set%2C%20you%20can%20specify%20the%20default%20to%20be%20an%20empty%20array%3A%0A%60%60%60solidity%0Aaddress%5B%5D%20badTokens%3B%0A%0Afunction%20envBadTokens()%20public%20%7B%0A%20%20badTokens%20%3D%20vm.envOr(%22BAD_TOKENS%22%2C%20%22%2C%22%2C%20badTokens)%3B%0A%7D%0A%60%60%60%0Aor%0A%60%60%60solidity%0Afunction%20envBadTokens()%20public%20%7B%0A%20%20address%5B%5D%20memory%20defaultBadTokens%20%3D%20new%20address%5B%5D(0)%3B%0A%20%20address%5B%5D%20memory%20badTokens%20%3D%20vm.envOr(%22BAD_TOKENS%22%2C%20%22%2C%22%2C%20defaultBadTokens)%3B%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-or-5xtT1u9z.js"),__vite__mapDeps([262,1])),path:"/reference/cheatcodes/env-or.html",type:"mdx",filePath:"reference/cheatcodes/env-or.mdx",content:"%23%23%20%60envOr%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envOr(string%20calldata%20key%2C%20bool%20defaultValue)%20external%20returns%20(bool%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20uint256%20defaultValue)%20external%20returns%20(uint256%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20int256%20defaultValue)%20external%20returns%20(int256%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20address%20defaultValue)%20external%20returns%20(address%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20bytes32%20defaultValue)%20external%20returns%20(bytes32%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20defaultValue)%20external%20returns%20(string%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20bytes%20calldata%20defaultValue)%20external%20returns%20(bytes%20memory%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20bool%5B%5D%20calldata%20defaultValue)%20external%20returns%20(bool%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20uint256%5B%5D%20calldata%20defaultValue)%20external%20returns%20(uint256%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20int256%5B%5D%20calldata%20defaultValue)%20external%20returns%20(int256%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20address%5B%5D%20calldata%20defaultValue)%20external%20returns%20(address%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20bytes32%5B%5D%20calldata%20defaultValue)%20external%20returns%20(bytes32%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20string%5B%5D%20calldata%20defaultValue)%20external%20returns%20(string%5B%5D%20memory%20value)%3B%0Afunction%20envOr(string%20calldata%20key%2C%20string%20calldata%20delimiter%2C%20bytes%5B%5D%20calldata%20defaultValue)%20external%20returns%20(bytes%5B%5D%20memory%20value)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20non-failing%20way%20to%20read%20an%20environment%20variable%20of%20any%20type%3A%20if%20the%20requested%20environment%20key%20does%20not%20exist%2C%20%60envOr()%60%20will%20return%20a%20default%20value%20instead%20of%20reverting%20(works%20with%20arrays%20too).%0A%0AThe%20returned%20type%20is%20determined%20by%20the%20type%20of%20%60defaultValue%60%20parameter%20passed.%0A%0A%23%23%23%20Tips%0A%0A-%20Use%20%60envOr(key%2C%20defaultValue)%60%20to%20read%20a%20single%20value%0A-%20Use%20%60envOr(key%2C%20delimiter%2C%20defaultValue%5B%5D)%60%20to%20read%20an%20array%20with%20delimiter%0A-%20The%20parsing%20of%20the%20environment%20variable%20will%20be%20done%20according%20to%20the%20type%20of%20%60defaultValue%60%20(e.g.%20if%20the%20default%20value%20type%20is%20%60uint%60%20-%20the%20environment%20variable%20will%20be%20also%20parsed%20as%20%60uint%60)%0A-%20Use%20explicit%20casting%20for%20literals%20to%20specify%20type%20of%20default%20variable%3A%20%60uint(69)%60%20will%20return%20an%20%60uint%60%20but%20%60int(69)%60%20will%20return%20an%20%60int%60%0A-%20Same%20with%3A%20%60string(%22%22)%60%20and%20%60bytes(%22%22)%60%20-%20these%20will%20return%20%60string%60%20and%20%60bytes%60%20accordingly%0A-%20Use%20dynamic%20arrays%20(%60bool%5B%5D%60)%20instead%20of%20fixed-size%20arrays%20(%60bool%5B4%5D%60)%20when%20providing%20default%20values%20(only%20dynamic%20arrays%20are%20supported)%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AIf%20the%20environment%20variable%20%60FORK%60%20is%20not%20set%2C%20you%20can%20specify%20it%20to%20be%20%60false%60%20by%20default%3A%0A%60%60%60solidity%0Abool%20fork%20%3D%20vm.envOr(%22FORK%22%2C%20false)%3B%0A%60%60%60%0Aor%0A%60%60%60solidity%0Aaddress%20owner%3B%0A%0Afunction%20setUp()%20%7B%0A%20%20owner%20%3D%20vm.envOr(%22OWNER%22%2C%20address(this))%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AIf%20the%20environment%20variable%20%60BAD_TOKENS%60%20is%20not%20set%2C%20you%20can%20specify%20the%20default%20to%20be%20an%20empty%20array%3A%0A%60%60%60solidity%0Aaddress%5B%5D%20badTokens%3B%0A%0Afunction%20envBadTokens()%20public%20%7B%0A%20%20badTokens%20%3D%20vm.envOr(%22BAD_TOKENS%22%2C%20%22%2C%22%2C%20badTokens)%3B%0A%7D%0A%60%60%60%0Aor%0A%60%60%60solidity%0Afunction%20envBadTokens()%20public%20%7B%0A%20%20address%5B%5D%20memory%20defaultBadTokens%20%3D%20new%20address%5B%5D(0)%3B%0A%20%20address%5B%5D%20memory%20badTokens%20%3D%20vm.envOr(%22BAD_TOKENS%22%2C%20%22%2C%22%2C%20defaultBadTokens)%3B%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-string-hnAV-LUu.js"),__vite__mapDeps([263,1])),path:"/reference/cheatcodes/env-string",type:"mdx",filePath:"reference/cheatcodes/env-string.mdx",content:"%23%23%20%60envString%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envString(string%20calldata%20key)%20external%20returns%20(string%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envString(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(string%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60string%60%20or%20%60string%5B%5D%60.%20In%20case%20the%20environment%20variable%20is%20not%20defined%2C%20Forge%20will%20fail%0Awith%20the%20following%20error%20message%3A%0A%0A%3E%20%5BFAIL.%20Reason%3A%20Failed%20to%20get%20environment%20variable%20%60FOO%60%20as%20type%20%60string%60%3A%20environment%20variable%20not%20found%5D%0A%0A%23%23%23%20Tips%0A%0A-%20You%20can%20put%20your%20environment%20variables%20in%20a%20%60.env%60%20file.%20Forge%20will%20automatically%20load%20them%20when%20running%20%60forge%20test%60.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A-%20Choose%20a%20delimiter%20that%20doesn't%20appear%20in%20the%20string%20values%2C%20so%20that%20they%20can%20be%20correctly%20separated.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60STRING_VALUE%3Dhello%2C%20world!%60%2C%0A%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22STRING_VALUE%22%3B%0Astring%20memory%20expected%20%3D%20%22hello%2C%20world!%22%3B%0Astring%20memory%20output%20%3D%20vm.envString(key)%3B%0AassertEq(output%2C%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60STRING_VALUES%3Dhello%2C%20world!%7C0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%3B%0A%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22STRING_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%7C%22%3B%0Astring%5B2%5D%20memory%20expected%20%3D%20%5B%0A%20%20%20%20%22hello%2C%20world!%22%2C%0A%20%20%20%20%220x7109709ECfa91a80626fF3989D68f67F5b1DD12D%22%0A%5D%3B%0Astring%5B%5D%20memory%20output%20%3D%20vm.envString(key%2C%20delimiter)%3B%0Afor%20(uint%20i%20%3D%200%3B%20i%20%3C%20expected.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20assert(keccak256(abi.encodePacked((output%5Bi%5D)))%20%3D%3D%20keccak256(abi.encodePacked((expected%5Bi%5D))))%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-string-hnAV-LUu.js"),__vite__mapDeps([263,1])),path:"/reference/cheatcodes/env-string.html",type:"mdx",filePath:"reference/cheatcodes/env-string.mdx",content:"%23%23%20%60envString%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envString(string%20calldata%20key)%20external%20returns%20(string%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envString(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(string%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60string%60%20or%20%60string%5B%5D%60.%20In%20case%20the%20environment%20variable%20is%20not%20defined%2C%20Forge%20will%20fail%0Awith%20the%20following%20error%20message%3A%0A%0A%3E%20%5BFAIL.%20Reason%3A%20Failed%20to%20get%20environment%20variable%20%60FOO%60%20as%20type%20%60string%60%3A%20environment%20variable%20not%20found%5D%0A%0A%23%23%23%20Tips%0A%0A-%20You%20can%20put%20your%20environment%20variables%20in%20a%20%60.env%60%20file.%20Forge%20will%20automatically%20load%20them%20when%20running%20%60forge%20test%60.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A-%20Choose%20a%20delimiter%20that%20doesn't%20appear%20in%20the%20string%20values%2C%20so%20that%20they%20can%20be%20correctly%20separated.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60STRING_VALUE%3Dhello%2C%20world!%60%2C%0A%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22STRING_VALUE%22%3B%0Astring%20memory%20expected%20%3D%20%22hello%2C%20world!%22%3B%0Astring%20memory%20output%20%3D%20vm.envString(key)%3B%0AassertEq(output%2C%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60STRING_VALUES%3Dhello%2C%20world!%7C0x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%3B%0A%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22STRING_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%7C%22%3B%0Astring%5B2%5D%20memory%20expected%20%3D%20%5B%0A%20%20%20%20%22hello%2C%20world!%22%2C%0A%20%20%20%20%220x7109709ECfa91a80626fF3989D68f67F5b1DD12D%22%0A%5D%3B%0Astring%5B%5D%20memory%20output%20%3D%20vm.envString(key%2C%20delimiter)%3B%0Afor%20(uint%20i%20%3D%200%3B%20i%20%3C%20expected.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20assert(keccak256(abi.encodePacked((output%5Bi%5D)))%20%3D%3D%20keccak256(abi.encodePacked((expected%5Bi%5D))))%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-uint-BWc0ArgH.js"),__vite__mapDeps([264,1])),path:"/reference/cheatcodes/env-uint",type:"mdx",filePath:"reference/cheatcodes/env-uint.mdx",content:"%23%23%20%60envUint%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envUint(string%20calldata%20key)%20external%20returns%20(uint256%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envUint(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(uint256%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60uint256%60%20or%20%60uint256%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20If%20the%20value%20starts%20with%20%600x%60%2C%20it%20will%20be%20interpreted%20as%20a%20hex%20value%2C%20otherwise%2C%20it%20will%20be%0Atreated%20as%20a%20decimal%20number.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60UINT_VALUE%3D115792089237316195423570985008687907853269984665640564039457584007913129639935%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22UINT_VALUE%22%3B%0Auint256%20expected%20%3D%20type(uint256).max%3B%0Auint256%20output%20%3D%20cheats.envUint(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60UINT_VALUES%3D0%2C0x0000000000000000000000000000000000000000000000000000000000000000%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22UINT_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Auint256%5B2%5D%20memory%20expected%20%3D%20%5Btype(uint256).min%2C%20type(uint256).min%5D%3B%0Auint256%5B%5D%20memory%20output%20%3D%20cheats.envUint(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./env-uint-BWc0ArgH.js"),__vite__mapDeps([264,1])),path:"/reference/cheatcodes/env-uint.html",type:"mdx",filePath:"reference/cheatcodes/env-uint.mdx",content:"%23%23%20%60envUint%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20envUint(string%20calldata%20key)%20external%20returns%20(uint256%20value)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20envUint(string%20calldata%20key%2C%20string%20calldata%20delimiter)%20external%20returns%20(uint256%5B%5D%20memory%20values)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARead%20an%20environment%20variable%20as%20%60uint256%60%20or%20%60uint256%5B%5D%60.%0A%0A%23%23%23%20Tips%0A%0A-%20If%20the%20value%20starts%20with%20%600x%60%2C%20it%20will%20be%20interpreted%20as%20a%20hex%20value%2C%20otherwise%2C%20it%20will%20be%0Atreated%20as%20a%20decimal%20number.%0A-%20For%20arrays%2C%20you%20can%20specify%20the%20delimiter%20used%20to%20separate%20the%20values%20with%20the%20%60delimiter%60%20parameter.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Single%20Value%0AWith%20environment%20variable%20%60UINT_VALUE%3D115792089237316195423570985008687907853269984665640564039457584007913129639935%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22UINT_VALUE%22%3B%0Auint256%20expected%20%3D%20type(uint256).max%3B%0Auint256%20output%20%3D%20cheats.envUint(key)%3B%0Aassert(output%20%3D%3D%20expected)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Array%0AWith%20environment%20variable%20%60UINT_VALUES%3D0%2C0x0000000000000000000000000000000000000000000000000000000000000000%60%2C%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22UINT_VALUES%22%3B%0Astring%20memory%20delimiter%20%3D%20%22%2C%22%3B%0Auint256%5B2%5D%20memory%20expected%20%3D%20%5Btype(uint256).min%2C%20type(uint256).min%5D%3B%0Auint256%5B%5D%20memory%20output%20%3D%20cheats.envUint(key%2C%20delimiter)%3B%0Aassert(keccak256(abi.encodePacked((output)))%20%3D%3D%20keccak256(abi.encodePacked((expected))))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./environment-BJSikMF7.js"),__vite__mapDeps([265,1])),path:"/reference/cheatcodes/environment",type:"mdx",filePath:"reference/cheatcodes/environment.mdx",content:"%23%23%20Environment%0A%0A-%20%5B%60warp%60%5D(%2Freference%2Fcheatcodes%2Fwarp.mdx)%0A-%20%5B%60roll%60%5D(%2Freference%2Fcheatcodes%2Froll.mdx)%0A-%20%5B%60fee%60%5D(%2Freference%2Fcheatcodes%2Ffee.mdx)%0A-%20%5B%60difficulty%60%5D(%2Freference%2Fcheatcodes%2Fdifficulty.mdx)%0A-%20%5B%60prevrandao%60%5D(%2Freference%2Fcheatcodes%2Fprevrandao.mdx)%0A-%20%5B%60chainId%60%5D(%2Freference%2Fcheatcodes%2Fchain-id.mdx)%0A-%20%5B%60store%60%5D(%2Freference%2Fcheatcodes%2Fstore.mdx)%0A-%20%5B%60load%60%5D(%2Freference%2Fcheatcodes%2Fload.mdx)%0A-%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A-%20%5B%60deal%60%5D(%2Freference%2Fcheatcodes%2Fdeal.mdx)%0A-%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%0A-%20%5B%60startPrank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%0A-%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%0A-%20%5B%60readCallers%60%5D(%2Freference%2Fcheatcodes%2Fread-callers.mdx)%0A-%20%5B%60record%60%5D(%2Freference%2Fcheatcodes%2Frecord.mdx)%0A-%20%5B%60accesses%60%5D(%2Freference%2Fcheatcodes%2Faccesses.mdx)%0A-%20%5B%60recordLogs%60%5D(%2Freference%2Fcheatcodes%2Frecord-logs.mdx)%0A-%20%5B%60getRecordedLogs%60%5D(%2Freference%2Fcheatcodes%2Fget-recorded-logs.mdx)%0A-%20%5B%60setNonce%60%5D(%2Freference%2Fcheatcodes%2Fset-nonce.mdx)%0A-%20%5B%60getNonce%60%5D(%2Freference%2Fcheatcodes%2Fget-nonce.mdx)%0A-%20%5B%60mockCall%60%5D(%2Freference%2Fcheatcodes%2Fmock-call.mdx)%0A-%20%5B%60mockCalls%60%5D(%2Freference%2Fcheatcodes%2Fmock-calls.mdx)%0A-%20%5B%60mockCallRevert%60%5D(%2Freference%2Fcheatcodes%2Fmock-call-revert.mdx)%0A-%20%5B%60mockFunction%60%5D(%2Freference%2Fcheatcodes%2Fmock-function.mdx)%0A-%20%5B%60clearMockedCalls%60%5D(%2Freference%2Fcheatcodes%2Fclear-mocked-calls.mdx)%0A-%20%5B%60coinbase%60%5D(%2Freference%2Fcheatcodes%2Fcoinbase.mdx)%0A-%20%5B%60broadcast%60%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx)%0A-%20%5B%60startBroadcast%60%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx)%0A-%20%5B%60stopBroadcast%60%5D(%2Freference%2Fcheatcodes%2Fstop-broadcast.mdx)%0A-%20%5B%60pauseGasMetering%60%5D(%2Freference%2Fcheatcodes%2Fpause-gas-metering.mdx)%0A-%20%5B%60resetGasMetering%60%5D(%2Freference%2Fcheatcodes%2Freset-gas-metering.mdx)%0A-%20%5B%60resumeGasMetering%60%5D(%2Freference%2Fcheatcodes%2Fresume-gas-metering.mdx)%0A-%20%5B%60txGasPrice%60%5D(%2Freference%2Fcheatcodes%2Ftx-gas-price.mdx)%0A-%20%5B%60startStateDiffRecording%60%5D(%2Freference%2Fcheatcodes%2Fstart-state-diff-recording.mdx)%0A-%20%5B%60stopAndReturnStateDiff%60%5D(%2Freference%2Fcheatcodes%2Fstop-and-return-state-diff.mdx)%0A-%20%5B%60isContext%60%5D(%2Freference%2Fcheatcodes%2Fis-context.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./environment-BJSikMF7.js"),__vite__mapDeps([265,1])),path:"/reference/cheatcodes/environment.html",type:"mdx",filePath:"reference/cheatcodes/environment.mdx",content:"%23%23%20Environment%0A%0A-%20%5B%60warp%60%5D(%2Freference%2Fcheatcodes%2Fwarp.mdx)%0A-%20%5B%60roll%60%5D(%2Freference%2Fcheatcodes%2Froll.mdx)%0A-%20%5B%60fee%60%5D(%2Freference%2Fcheatcodes%2Ffee.mdx)%0A-%20%5B%60difficulty%60%5D(%2Freference%2Fcheatcodes%2Fdifficulty.mdx)%0A-%20%5B%60prevrandao%60%5D(%2Freference%2Fcheatcodes%2Fprevrandao.mdx)%0A-%20%5B%60chainId%60%5D(%2Freference%2Fcheatcodes%2Fchain-id.mdx)%0A-%20%5B%60store%60%5D(%2Freference%2Fcheatcodes%2Fstore.mdx)%0A-%20%5B%60load%60%5D(%2Freference%2Fcheatcodes%2Fload.mdx)%0A-%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A-%20%5B%60deal%60%5D(%2Freference%2Fcheatcodes%2Fdeal.mdx)%0A-%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%0A-%20%5B%60startPrank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%0A-%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%0A-%20%5B%60readCallers%60%5D(%2Freference%2Fcheatcodes%2Fread-callers.mdx)%0A-%20%5B%60record%60%5D(%2Freference%2Fcheatcodes%2Frecord.mdx)%0A-%20%5B%60accesses%60%5D(%2Freference%2Fcheatcodes%2Faccesses.mdx)%0A-%20%5B%60recordLogs%60%5D(%2Freference%2Fcheatcodes%2Frecord-logs.mdx)%0A-%20%5B%60getRecordedLogs%60%5D(%2Freference%2Fcheatcodes%2Fget-recorded-logs.mdx)%0A-%20%5B%60setNonce%60%5D(%2Freference%2Fcheatcodes%2Fset-nonce.mdx)%0A-%20%5B%60getNonce%60%5D(%2Freference%2Fcheatcodes%2Fget-nonce.mdx)%0A-%20%5B%60mockCall%60%5D(%2Freference%2Fcheatcodes%2Fmock-call.mdx)%0A-%20%5B%60mockCalls%60%5D(%2Freference%2Fcheatcodes%2Fmock-calls.mdx)%0A-%20%5B%60mockCallRevert%60%5D(%2Freference%2Fcheatcodes%2Fmock-call-revert.mdx)%0A-%20%5B%60mockFunction%60%5D(%2Freference%2Fcheatcodes%2Fmock-function.mdx)%0A-%20%5B%60clearMockedCalls%60%5D(%2Freference%2Fcheatcodes%2Fclear-mocked-calls.mdx)%0A-%20%5B%60coinbase%60%5D(%2Freference%2Fcheatcodes%2Fcoinbase.mdx)%0A-%20%5B%60broadcast%60%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx)%0A-%20%5B%60startBroadcast%60%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx)%0A-%20%5B%60stopBroadcast%60%5D(%2Freference%2Fcheatcodes%2Fstop-broadcast.mdx)%0A-%20%5B%60pauseGasMetering%60%5D(%2Freference%2Fcheatcodes%2Fpause-gas-metering.mdx)%0A-%20%5B%60resetGasMetering%60%5D(%2Freference%2Fcheatcodes%2Freset-gas-metering.mdx)%0A-%20%5B%60resumeGasMetering%60%5D(%2Freference%2Fcheatcodes%2Fresume-gas-metering.mdx)%0A-%20%5B%60txGasPrice%60%5D(%2Freference%2Fcheatcodes%2Ftx-gas-price.mdx)%0A-%20%5B%60startStateDiffRecording%60%5D(%2Freference%2Fcheatcodes%2Fstart-state-diff-recording.mdx)%0A-%20%5B%60stopAndReturnStateDiff%60%5D(%2Freference%2Fcheatcodes%2Fstop-and-return-state-diff.mdx)%0A-%20%5B%60isContext%60%5D(%2Freference%2Fcheatcodes%2Fis-context.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etch-Ds3F2gjX.js"),__vite__mapDeps([266,1])),path:"/reference/cheatcodes/etch",type:"mdx",filePath:"reference/cheatcodes/etch.mdx",content:"%23%23%20%60etch%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20etch(address%20who%2C%20bytes%20calldata%20code)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20bytecode%20of%20an%20address%20%60who%60%20to%20%60code%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Abytes%20memory%20code%20%3D%20address(awesomeContract).code%3B%0Aaddress%20targetAddr%20%3D%20makeAddr(%22target%22)%3B%0Avm.etch(targetAddr%2C%20code)%3B%0Alog_bytes(address(targetAddr).code)%3B%20%2F%2F%200x6080604052348015610010...%0A%60%60%60%0A%0A%23%23%23%23%20Using%20%60vm.etch%60%20for%20enabling%20custom%20precompiles%0A%0ASome%20chains%2C%20like%20Blast%20or%20Arbitrum%2C%20run%20with%20custom%20precompiles.%20Foundry%20is%20operating%20on%20vanilla%20EVM%20and%20is%20not%20aware%20of%20those.%20If%20you%20are%20encountering%20reverts%20due%20to%20not%20available%20precompile%2C%20you%20can%20use%20%60vm.etch%60%20cheatcode%20to%20inject%20mock%20of%20the%20missing%20precompile%20to%20the%20address%20it%20is%20expected%20to%20appear%20at.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FBlastMock.t.sol%3A%3Aall%5D%0A%60%60%60%0A%0A%3Cdiv%20class%3D%22warning%22%3E%0A%0AInjecting%20mocks%20of%20precompiles%20might%20be%20tricky%20as%20such%20mocks%20will%20not%20fully%20emulate%20the%20actual%20precompile%20behavior%20on-chain.%0A%0AMock%20in%20the%20case%20above%20will%20not%20cause%20the%20actual%20yield%20to%20be%20accrued%20if%20any%20yield%20mode%20is%20configured.%0A%0A%3C%2Fdiv%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A-%20%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A-%20%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./etch-Ds3F2gjX.js"),__vite__mapDeps([266,1])),path:"/reference/cheatcodes/etch.html",type:"mdx",filePath:"reference/cheatcodes/etch.mdx",content:"%23%23%20%60etch%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20etch(address%20who%2C%20bytes%20calldata%20code)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20bytecode%20of%20an%20address%20%60who%60%20to%20%60code%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Abytes%20memory%20code%20%3D%20address(awesomeContract).code%3B%0Aaddress%20targetAddr%20%3D%20makeAddr(%22target%22)%3B%0Avm.etch(targetAddr%2C%20code)%3B%0Alog_bytes(address(targetAddr).code)%3B%20%2F%2F%200x6080604052348015610010...%0A%60%60%60%0A%0A%23%23%23%23%20Using%20%60vm.etch%60%20for%20enabling%20custom%20precompiles%0A%0ASome%20chains%2C%20like%20Blast%20or%20Arbitrum%2C%20run%20with%20custom%20precompiles.%20Foundry%20is%20operating%20on%20vanilla%20EVM%20and%20is%20not%20aware%20of%20those.%20If%20you%20are%20encountering%20reverts%20due%20to%20not%20available%20precompile%2C%20you%20can%20use%20%60vm.etch%60%20cheatcode%20to%20inject%20mock%20of%20the%20missing%20precompile%20to%20the%20address%20it%20is%20expected%20to%20appear%20at.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Fprojects%2Fcheatcodes%2Ftest%2FBlastMock.t.sol%3A%3Aall%5D%0A%60%60%60%0A%0A%3Cdiv%20class%3D%22warning%22%3E%0A%0AInjecting%20mocks%20of%20precompiles%20might%20be%20tricky%20as%20such%20mocks%20will%20not%20fully%20emulate%20the%20actual%20precompile%20behavior%20on-chain.%0A%0AMock%20in%20the%20case%20above%20will%20not%20cause%20the%20actual%20yield%20to%20be%20accrued%20if%20any%20yield%20mode%20is%20configured.%0A%0A%3C%2Fdiv%3E%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A-%20%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A-%20%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./expect-call-B35QNRCR.js"),__vite__mapDeps([267,1])),path:"/reference/cheatcodes/expect-call",type:"mdx",filePath:"reference/cheatcodes/expect-call.mdx",content:"%23%23%20%60expectCall%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(address%20callee%2C%20bytes%20calldata%20data)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(address%20callee%2C%20bytes%20calldata%20data%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(%0A%20%20%20%20address%20callee%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%0A)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(%0A%20%20%20%20address%20callee%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20uint64%20count%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AExpects%20a%20call%20to%20a%20specified%20address%20%60callee%60%2C%20where%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60.%20The%20cheatcode%20can%20be%20called%20in%20two%20ways%3A%0A%0A-%20If%20no%20%60count%60%20parameter%20is%20specified%2C%20the%20call%20will%20be%20expected%20to%20be%20made%20at%20least%20the%20amount%20of%20times%20the%20cheatcode%20was%20called.%20For%20the%20same%20calldata%2C%20you%20cannot%20call%20the%20cheatcode%20with%20no%20%60count%60%20and%20then%20pass%20in%20a%20%60count%60%20parameter.%0A-%20If%20%60count%60%20is%20specified%2C%20the%20call%20will%20be%20expected%20to%20be%20made%20strictly%20%60count%60%20times.%20For%20the%20same%20calldata%2C%20the%20%60count%60%20value%20cannot%20be%20overwritten%20with%20another%20cheatcode%20call%2C%20nor%20it%20can%20be%20increment%20by%20calling%20the%20cheatcode%20without%20a%20%60count%60%20parameter.%0A%0A%60count%60%20can%20also%20be%20set%20to%200%20to%20assert%20that%20a%20call%20is%20not%20made.%0A%0AWhen%20a%20call%20is%20made%20to%20%60callee%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%20If%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%2C%20with%20the%20match%20starting%20at%20the%20first%20byte%20of%20the%20call%20data.%0A%0A**Using%20the%20second%20signature**%20we%20can%20also%20check%20if%20the%20call%20was%20made%20with%20the%20expected%20%60msg.value%60.%0A%0AIf%20the%20test%20terminates%20without%20the%20call%20being%20made%2C%20the%20test%20fails.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Internal%20calls**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20on%20internal%20calls.%20See%20issue%20%5B%23432%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F432).%0A%0A%23%23%23%20Examples%0A%0AExpect%20that%20%60transfer%60%20is%20called%20on%20a%20token%20%60MyToken%60%20one%20time%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%0A)%3B%0Atoken.transfer(alice%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60transfer%60%20is%20called%20on%20a%20token%20%60MyToken%60%20*at%20least*%20two%20times%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%0A)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%0A)%3B%0Atoken.transfer(alice%2C%2010)%3B%0Atoken.transfer(alice%2C%2010)%3B%0Atoken.transfer(alice%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60transfer%60%20is%20not%20called%20on%20a%20token%20%60MyToken%60%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%2C%200%0A)%3B%0Atoken.transferFrom(alice%2C%20address(0)%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60transfer%60%20with%20any%20calldata%20is%20called%20on%20a%20token%20%60MyToken%60%202%20times%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeWithSelector(token.transfer.selector)%2C%202%0A)%3B%0Atoken.transfer(alice%2C%2010)%3B%0Atoken.transfer(alice%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60pay%60%20is%20called%20on%20a%20%60Contract%60%20with%20a%20specific%20%60msg.value%60%20and%20%60calldata%60%3A%0A%0A%60%60%60solidity%0AContract%20target%20%3D%20new%20Contract()%3B%0Avm.expectCall(%0A%20%20%20%20%20%20%20%20%20%20%20%20address(target)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encodeWithSelector(target.pay.selector%2C%202)%0A%20%20%20%20%20%20%20%20)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60pay%60%20is%20called%20on%20a%20%60Contract%60%20with%20a%20specific%20%60msg.value%60%20and%20%60calldata%60%203%20times%3A%0A%0A%60%60%60solidity%0AContract%20target%20%3D%20new%20Contract()%3B%0Avm.expectCall(%0A%20%20%20%20%20%20%20%20%20%20%20%20address(target)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encodeWithSelector(target.pay.selector%2C%202)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%203%0A%20%20%20%20%20%20%20%20)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./expect-call-B35QNRCR.js"),__vite__mapDeps([267,1])),path:"/reference/cheatcodes/expect-call.html",type:"mdx",filePath:"reference/cheatcodes/expect-call.mdx",content:"%23%23%20%60expectCall%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(address%20callee%2C%20bytes%20calldata%20data)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(address%20callee%2C%20bytes%20calldata%20data%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(%0A%20%20%20%20address%20callee%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%0A)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectCall(%0A%20%20%20%20address%20callee%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20uint64%20count%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AExpects%20a%20call%20to%20a%20specified%20address%20%60callee%60%2C%20where%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60.%20The%20cheatcode%20can%20be%20called%20in%20two%20ways%3A%0A%0A-%20If%20no%20%60count%60%20parameter%20is%20specified%2C%20the%20call%20will%20be%20expected%20to%20be%20made%20at%20least%20the%20amount%20of%20times%20the%20cheatcode%20was%20called.%20For%20the%20same%20calldata%2C%20you%20cannot%20call%20the%20cheatcode%20with%20no%20%60count%60%20and%20then%20pass%20in%20a%20%60count%60%20parameter.%0A-%20If%20%60count%60%20is%20specified%2C%20the%20call%20will%20be%20expected%20to%20be%20made%20strictly%20%60count%60%20times.%20For%20the%20same%20calldata%2C%20the%20%60count%60%20value%20cannot%20be%20overwritten%20with%20another%20cheatcode%20call%2C%20nor%20it%20can%20be%20increment%20by%20calling%20the%20cheatcode%20without%20a%20%60count%60%20parameter.%0A%0A%60count%60%20can%20also%20be%20set%20to%200%20to%20assert%20that%20a%20call%20is%20not%20made.%0A%0AWhen%20a%20call%20is%20made%20to%20%60callee%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%20If%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%2C%20with%20the%20match%20starting%20at%20the%20first%20byte%20of%20the%20call%20data.%0A%0A**Using%20the%20second%20signature**%20we%20can%20also%20check%20if%20the%20call%20was%20made%20with%20the%20expected%20%60msg.value%60.%0A%0AIf%20the%20test%20terminates%20without%20the%20call%20being%20made%2C%20the%20test%20fails.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Internal%20calls**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20on%20internal%20calls.%20See%20issue%20%5B%23432%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F432).%0A%0A%23%23%23%20Examples%0A%0AExpect%20that%20%60transfer%60%20is%20called%20on%20a%20token%20%60MyToken%60%20one%20time%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%0A)%3B%0Atoken.transfer(alice%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60transfer%60%20is%20called%20on%20a%20token%20%60MyToken%60%20*at%20least*%20two%20times%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%0A)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%0A)%3B%0Atoken.transfer(alice%2C%2010)%3B%0Atoken.transfer(alice%2C%2010)%3B%0Atoken.transfer(alice%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60transfer%60%20is%20not%20called%20on%20a%20token%20%60MyToken%60%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeCall(token.transfer%2C%20(alice%2C%2010))%2C%200%0A)%3B%0Atoken.transferFrom(alice%2C%20address(0)%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60transfer%60%20with%20any%20calldata%20is%20called%20on%20a%20token%20%60MyToken%60%202%20times%3A%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Avm.expectCall(%0A%20%20address(token)%2C%20abi.encodeWithSelector(token.transfer.selector)%2C%202%0A)%3B%0Atoken.transfer(alice%2C%2010)%3B%0Atoken.transfer(alice%2C%2010)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60pay%60%20is%20called%20on%20a%20%60Contract%60%20with%20a%20specific%20%60msg.value%60%20and%20%60calldata%60%3A%0A%0A%60%60%60solidity%0AContract%20target%20%3D%20new%20Contract()%3B%0Avm.expectCall(%0A%20%20%20%20%20%20%20%20%20%20%20%20address(target)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encodeWithSelector(target.pay.selector%2C%202)%0A%20%20%20%20%20%20%20%20)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AExpect%20that%20%60pay%60%20is%20called%20on%20a%20%60Contract%60%20with%20a%20specific%20%60msg.value%60%20and%20%60calldata%60%203%20times%3A%0A%0A%60%60%60solidity%0AContract%20target%20%3D%20new%20Contract()%3B%0Avm.expectCall(%0A%20%20%20%20%20%20%20%20%20%20%20%20address(target)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encodeWithSelector(target.pay.selector%2C%202)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%203%0A%20%20%20%20%20%20%20%20)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0Atarget.pay%7Bvalue%3A%201%7D(2)%3B%0A%2F%2F%20%5BPASS%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./expect-emit-BvBHqzgx.js"),__vite__mapDeps([268,1])),path:"/reference/cheatcodes/expect-emit",type:"mdx",filePath:"reference/cheatcodes/expect-emit.mdx",content:"%23%23%20%60expectEmit%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20expectEmit()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectEmit(%0A%20%20%20%20bool%20checkTopic1%2C%0A%20%20%20%20bool%20checkTopic2%2C%0A%20%20%20%20bool%20checkTopic3%2C%0A%20%20%20%20bool%20checkData%0A)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectEmit(address%20emitter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectEmit(%0A%20%20%20%20bool%20checkTopic1%2C%0A%20%20%20%20bool%20checkTopic2%2C%0A%20%20%20%20bool%20checkTopic3%2C%0A%20%20%20%20bool%20checkData%2C%0A%20%20%20%20address%20emitter%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20that%20a%20specific%20log%20is%20emitted%20during%20the%20next%20call.%0A%0A1.%20Call%20the%20cheat%20code%2C%20specifying%20whether%20we%20should%20check%20the%20first%2C%20second%20or%20third%20topic%2C%20and%20the%20log%20data%20(%60expectEmit()%60%20checks%20them%20all).%20Topic%200%20is%20always%20checked.%0A2.%20Emit%20the%20event%20we%20are%20supposed%20to%20see%20during%20the%20next%20call.%0A3.%20Perform%20the%20call.%0A%0AYou%20can%20perform%20steps%201%20and%202%20multiple%20times%20to%20match%20a%20_sequence_%20of%20events%20in%20the%20next%20call.%0A%0AIf%20the%20event%20is%20not%20available%20in%20the%20current%20scope%20(e.g.%20if%20we%20are%20using%20an%20interface%2C%20or%20an%20external%20smart%20contract)%2C%20we%20can%20define%20the%20event%20ourselves%20with%20an%20identical%20event%20signature.%0A%0AThere%20are%202%20varieties%20of%20%60expectEmit%60%3A%0A%0A-%20**Without%20checking%20the%20emitter%20address**%3A%20Asserts%20the%20topics%20match%20**without**%20checking%20the%20emitting%20address.%0A-%20**With%20%60address%60**%3A%20Asserts%20the%20topics%20match%20and%20that%20the%20emitting%20address%20matches.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Matching%20sequences**%0A%3E%0A%3E%20In%20functions%20that%20emit%20a%20lot%20of%20events%2C%20it's%20possible%20to%20%22skip%22%20events%20and%20only%20match%20a%20specific%20sequence%2C%0A%3E%20but%20this%20sequence%20must%20always%20be%20in%20order.%20As%20an%20example%2C%20let's%20say%20a%20%0A%3E%20function%20emits%20events%3A%20%60A%2C%20B%2C%20C%2C%20D%2C%20E%2C%20F%2C%20F%2C%20G%60.%0A%3E%0A%3E%20%60expectEmit%60%20will%20be%20able%20to%20match%20ranges%20with%20and%20without%20skipping%20events%20in%20between%3A%0A%3E%20-%20%60%5BA%2C%20B%2C%20C%5D%60%20is%20valid.%0A%3E%20-%20%60%5BB%2C%20D%2C%20F%5D%60%20is%20valid.%0A%3E%20-%20%60%5BG%5D%60%20or%20any%20other%20single%20event%20combination%20is%20valid.%0A%3E%20-%20%60%5BB%2C%20A%5D%60%20or%20similar%20out-of-order%20combinations%20are%20**invalid**%20(events%20must%20be%20in%20order).%0A%3E%20-%20%60%5BC%2C%20F%2C%20F%5D%60%20is%20valid.%0A%3E%20-%20%60%5BF%2C%20F%2C%20C%5D%60%20is%20**invalid**%20(out%20of%20order).%0A%0A%23%23%23%20Examples%0A%0AThis%20does%20not%20check%20the%20emitting%20address.%0A%0A%60%60%60solidity%0Aevent%20Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%3B%0A%0Afunction%20testERC20EmitsTransfer()%20public%20%7B%0A%20%20%20%20vm.expectEmit()%3B%0A%0A%20%20%20%20%2F%2F%20We%20emit%20the%20event%20we%20expect%20to%20see.%0A%20%20%20%20emit%20MyToken.Transfer(address(this)%2C%20address(1)%2C%2010)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call.%0A%20%20%20%20myToken.transfer(address(1)%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AThis%20does%20check%20the%20emitting%20address.%0A%0A%60%60%60solidity%0Aevent%20Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%3B%0A%0Afunction%20testERC20EmitsTransfer()%20public%20%7B%0A%20%20%20%20%2F%2F%20We%20check%20that%20the%20token%20is%20the%20event%20emitter%20by%20passing%20the%20address.%0A%20%20%20%20vm.expectEmit(address(myToken))%3B%0A%20%20%20%20emit%20MyToken.Transfer(address(this)%2C%20address(1)%2C%2010)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call.%0A%20%20%20%20myToken.transfer(address(1)%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AWe%20can%20also%20assert%20that%20multiple%20events%20are%20emitted%20in%20a%20single%20call.%0A%0A%60%60%60solidity%0Afunction%20testERC20EmitsBatchTransfer()%20public%20%7B%0A%20%20%20%20%2F%2F%20We%20declare%20multiple%20expected%20transfer%20events%0A%20%20%20%20for%20(uint256%20i%20%3D%200%3B%20i%20%3C%20users.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Here%20we%20use%20the%20longer%20signature%20for%20demonstration%20purposes.%20This%20call%20checks%0A%20%20%20%20%20%20%20%20%2F%2F%20topic0%20(always%20checked)%2C%20topic1%20(true)%2C%20topic2%20(true)%2C%20NOT%20topic3%20(false)%2C%20and%20data%20(true).%0A%20%20%20%20%20%20%20%20vm.expectEmit(true%2C%20true%2C%20false%2C%20true)%3B%0A%20%20%20%20%20%20%20%20emit%20Transfer(address(this)%2C%20users%5Bi%5D%2C%2010)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20We%20also%20expect%20a%20custom%20%60BatchTransfer(uint256%20numberOfTransfers)%60%20event.%0A%20%20%20%20vm.expectEmit(false%2C%20false%2C%20false%2C%20true)%3B%0A%20%20%20%20emit%20BatchTransfer(users.length)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call.%0A%20%20%20%20myToken.batchTransfer(users%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AThis%20example%20fails%2C%20as%20the%20expected%20event%20is%20not%20emitted%20on%20the%20next%20call.%0A%60%60%60solidity%0Aevent%20Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%3B%0A%0Afunction%20testERC20EmitsTransfer()%20public%20%7B%0A%20%20%20%20%2F%2F%20We%20check%20that%20the%20token%20is%20the%20event%20emitter%20by%20passing%20the%20address%20as%20the%20fifth%20argument.%0A%20%20%20%20vm.expectEmit(true%2C%20true%2C%20false%2C%20true%2C%20address(myToken))%3B%0A%20%20%20%20emit%20MyToken.Transfer(address(this)%2C%20address(1)%2C%2010)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20an%20unrelated%20call%20that%20won't%20emit%20the%20intended%20event%2C%0A%20%20%20%20%2F%2F%20making%20the%20cheatcode%20fail.%0A%20%20%20%20myToken.approve(address(this)%2C%201e18)%3B%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call%2C%20but%20it%20will%20have%20no%20effect%20as%20the%20cheatcode%20has%20already%20failed.%0A%20%20%20%20myToken.transfer(address(1)%2C%2010)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./expect-emit-BvBHqzgx.js"),__vite__mapDeps([268,1])),path:"/reference/cheatcodes/expect-emit.html",type:"mdx",filePath:"reference/cheatcodes/expect-emit.mdx",content:"%23%23%20%60expectEmit%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20expectEmit()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectEmit(%0A%20%20%20%20bool%20checkTopic1%2C%0A%20%20%20%20bool%20checkTopic2%2C%0A%20%20%20%20bool%20checkTopic3%2C%0A%20%20%20%20bool%20checkData%0A)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectEmit(address%20emitter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectEmit(%0A%20%20%20%20bool%20checkTopic1%2C%0A%20%20%20%20bool%20checkTopic2%2C%0A%20%20%20%20bool%20checkTopic3%2C%0A%20%20%20%20bool%20checkData%2C%0A%20%20%20%20address%20emitter%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20that%20a%20specific%20log%20is%20emitted%20during%20the%20next%20call.%0A%0A1.%20Call%20the%20cheat%20code%2C%20specifying%20whether%20we%20should%20check%20the%20first%2C%20second%20or%20third%20topic%2C%20and%20the%20log%20data%20(%60expectEmit()%60%20checks%20them%20all).%20Topic%200%20is%20always%20checked.%0A2.%20Emit%20the%20event%20we%20are%20supposed%20to%20see%20during%20the%20next%20call.%0A3.%20Perform%20the%20call.%0A%0AYou%20can%20perform%20steps%201%20and%202%20multiple%20times%20to%20match%20a%20_sequence_%20of%20events%20in%20the%20next%20call.%0A%0AIf%20the%20event%20is%20not%20available%20in%20the%20current%20scope%20(e.g.%20if%20we%20are%20using%20an%20interface%2C%20or%20an%20external%20smart%20contract)%2C%20we%20can%20define%20the%20event%20ourselves%20with%20an%20identical%20event%20signature.%0A%0AThere%20are%202%20varieties%20of%20%60expectEmit%60%3A%0A%0A-%20**Without%20checking%20the%20emitter%20address**%3A%20Asserts%20the%20topics%20match%20**without**%20checking%20the%20emitting%20address.%0A-%20**With%20%60address%60**%3A%20Asserts%20the%20topics%20match%20and%20that%20the%20emitting%20address%20matches.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Matching%20sequences**%0A%3E%0A%3E%20In%20functions%20that%20emit%20a%20lot%20of%20events%2C%20it's%20possible%20to%20%22skip%22%20events%20and%20only%20match%20a%20specific%20sequence%2C%0A%3E%20but%20this%20sequence%20must%20always%20be%20in%20order.%20As%20an%20example%2C%20let's%20say%20a%20%0A%3E%20function%20emits%20events%3A%20%60A%2C%20B%2C%20C%2C%20D%2C%20E%2C%20F%2C%20F%2C%20G%60.%0A%3E%0A%3E%20%60expectEmit%60%20will%20be%20able%20to%20match%20ranges%20with%20and%20without%20skipping%20events%20in%20between%3A%0A%3E%20-%20%60%5BA%2C%20B%2C%20C%5D%60%20is%20valid.%0A%3E%20-%20%60%5BB%2C%20D%2C%20F%5D%60%20is%20valid.%0A%3E%20-%20%60%5BG%5D%60%20or%20any%20other%20single%20event%20combination%20is%20valid.%0A%3E%20-%20%60%5BB%2C%20A%5D%60%20or%20similar%20out-of-order%20combinations%20are%20**invalid**%20(events%20must%20be%20in%20order).%0A%3E%20-%20%60%5BC%2C%20F%2C%20F%5D%60%20is%20valid.%0A%3E%20-%20%60%5BF%2C%20F%2C%20C%5D%60%20is%20**invalid**%20(out%20of%20order).%0A%0A%23%23%23%20Examples%0A%0AThis%20does%20not%20check%20the%20emitting%20address.%0A%0A%60%60%60solidity%0Aevent%20Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%3B%0A%0Afunction%20testERC20EmitsTransfer()%20public%20%7B%0A%20%20%20%20vm.expectEmit()%3B%0A%0A%20%20%20%20%2F%2F%20We%20emit%20the%20event%20we%20expect%20to%20see.%0A%20%20%20%20emit%20MyToken.Transfer(address(this)%2C%20address(1)%2C%2010)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call.%0A%20%20%20%20myToken.transfer(address(1)%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AThis%20does%20check%20the%20emitting%20address.%0A%0A%60%60%60solidity%0Aevent%20Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%3B%0A%0Afunction%20testERC20EmitsTransfer()%20public%20%7B%0A%20%20%20%20%2F%2F%20We%20check%20that%20the%20token%20is%20the%20event%20emitter%20by%20passing%20the%20address.%0A%20%20%20%20vm.expectEmit(address(myToken))%3B%0A%20%20%20%20emit%20MyToken.Transfer(address(this)%2C%20address(1)%2C%2010)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call.%0A%20%20%20%20myToken.transfer(address(1)%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AWe%20can%20also%20assert%20that%20multiple%20events%20are%20emitted%20in%20a%20single%20call.%0A%0A%60%60%60solidity%0Afunction%20testERC20EmitsBatchTransfer()%20public%20%7B%0A%20%20%20%20%2F%2F%20We%20declare%20multiple%20expected%20transfer%20events%0A%20%20%20%20for%20(uint256%20i%20%3D%200%3B%20i%20%3C%20users.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Here%20we%20use%20the%20longer%20signature%20for%20demonstration%20purposes.%20This%20call%20checks%0A%20%20%20%20%20%20%20%20%2F%2F%20topic0%20(always%20checked)%2C%20topic1%20(true)%2C%20topic2%20(true)%2C%20NOT%20topic3%20(false)%2C%20and%20data%20(true).%0A%20%20%20%20%20%20%20%20vm.expectEmit(true%2C%20true%2C%20false%2C%20true)%3B%0A%20%20%20%20%20%20%20%20emit%20Transfer(address(this)%2C%20users%5Bi%5D%2C%2010)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20We%20also%20expect%20a%20custom%20%60BatchTransfer(uint256%20numberOfTransfers)%60%20event.%0A%20%20%20%20vm.expectEmit(false%2C%20false%2C%20false%2C%20true)%3B%0A%20%20%20%20emit%20BatchTransfer(users.length)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call.%0A%20%20%20%20myToken.batchTransfer(users%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AThis%20example%20fails%2C%20as%20the%20expected%20event%20is%20not%20emitted%20on%20the%20next%20call.%0A%60%60%60solidity%0Aevent%20Transfer(address%20indexed%20from%2C%20address%20indexed%20to%2C%20uint256%20amount)%3B%0A%0Afunction%20testERC20EmitsTransfer()%20public%20%7B%0A%20%20%20%20%2F%2F%20We%20check%20that%20the%20token%20is%20the%20event%20emitter%20by%20passing%20the%20address%20as%20the%20fifth%20argument.%0A%20%20%20%20vm.expectEmit(true%2C%20true%2C%20false%2C%20true%2C%20address(myToken))%3B%0A%20%20%20%20emit%20MyToken.Transfer(address(this)%2C%20address(1)%2C%2010)%3B%0A%0A%20%20%20%20%2F%2F%20We%20perform%20an%20unrelated%20call%20that%20won't%20emit%20the%20intended%20event%2C%0A%20%20%20%20%2F%2F%20making%20the%20cheatcode%20fail.%0A%20%20%20%20myToken.approve(address(this)%2C%201e18)%3B%0A%20%20%20%20%2F%2F%20We%20perform%20the%20call%2C%20but%20it%20will%20have%20no%20effect%20as%20the%20cheatcode%20has%20already%20failed.%0A%20%20%20%20myToken.transfer(address(1)%2C%2010)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./expect-revert-CHmrgZ6X.js"),__vite__mapDeps([269,1])),path:"/reference/cheatcodes/expect-revert",type:"mdx",filePath:"reference/cheatcodes/expect-revert.mdx",content:"%23%23%20%60expectRevert%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20expectRevert()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData%2C%20address%20reverter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData%2C%20address%20reverter%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData%2C%20address%20reverter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData%2C%20address%20reverter%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(address%20reverter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(address%20reverter%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectPartialRevert(bytes4%20revertData)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectPartialRevert(bytes4%20revertData%2C%20address%20reverter)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Error%0A%0A%3E%20%E2%9D%8C%20**Error**%0A%3E%0A%3E%20If%20you%20see%20the%20following%20error%3A%0A%3E%0A%3E%20%60%5BFAIL%3A%20call%20didn't%20revert%20at%20a%20lower%20depth%20than%20cheatcode%20call%20depth%5D%60%0A%3E%0A%3E%20Carefully%20read%20the%20next%20sections!%0A%0ATo%20understand%20why%20you%20are%20getting%20this%20error%20you%20first%20have%20to%20understand%20what%20%60call%20depth%60%20means.%0A%0AYou%20can%20think%20of%20call%20depth%20in%20a%20similar%20way%20to%20function%20scoping.%20When%20you%20are%20entering%20an%20**external**%20call%20the%20call%20depth%20is%20increased%20by%20%601%60.%0AWhen%20you%20exit%20the%20external%20call%20the%20call%20depth%20is%20decreased%20by%20%601%60.%20If%20you%20have%20nested%20calls%20it%20looks%20as%20follows%3A%0A%0A%60%60%60%0A0%20%E2%86%92%20Contract%20A%20(calls%20B)%20%E2%86%92%201%20%E2%86%92%20Contract%20B%20(calls%20C)%20%E2%86%92%202%20%E2%86%92%20Contract%20C%20(returns)%20%E2%86%92%201%20%E2%86%92%20Contract%20B%20(returns)%20%E2%86%92%200%0A%60%60%60%0A%0A**Internal**%20functions%20on%20the%20other%20hand%20do%20**NOT**%20increase%20the%20call%20depth.%20It%20is%20not%20actually%20making%20_calls_%20but%20rather%20_jumping_%20to%20the%20target%20location.%0A%0AWhen%20testing%20**internal**%20functions%20with%20%60vm.expectRevert%60%20at%20the%20same%20call%20depth%20**ONLY**%20the%20**FIRST**%20%60vm.expectRevert%60%20is%20executed.%0A%0AThe%20following%20example%20shows%20where%20the%20footgun%20occurs.%20There%20are%20two%20%60vm.expectRevert%60's%20that%20exist%20at%20the%20same%20call%20depth%20hence%20only%20the%20**FIRST**%20one%20is%20executed%20and%20the%20test%20returns%20a%20**SUCCESS**.%20This%20is%20likely%20different%20behavior%20from%20what%20you%20may%20assume.%0A%0A%60%60%60solidity%0A%2F%2F%20DO%20NOT%20IMPLEMENT%20AS%20FOLLOWS!%20THIS%20IS%20AN%20INCORRECT%20USE.%0Afunction%20testMultipleReverts()%20public%20%7B%0A%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20revert()%3B%0A%0A%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20console2.log(%22Does%20not%20revert%22)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIf%20the%20**next%20call**%20does%20not%20revert%20with%20the%20expected%20data%20%60message%60%2C%20then%20%60expectRevert%60%20will.%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Usage**%0A%3E%0A%3E%20By%20default%2C%20%60expectRevert*%60%20cheatcodes%20work%20only%20for%20calls%20with%20greater%20depth%20than%20test%20depth%20(see%20%5B%233437%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F3437)%20foundry%20issue).%0A%3E%20Expecting%20reverts%20at%20the%20same%20depth%20as%20test%20depth%20can%20be%20enabled%20by%20setting%20%60allow_internal_expect_revert%60%20to%20%60true%60%20as%20follows%3A%0A%3E%0A%3E%20Selectively%20by%20using%20an%20inline%20configuration%20entry%20where%20it%20is%20**DEEMED%20SAFE**%3A%0A%3E%0A%3E%20Add%20%60%2F%2F%2F%20forge-config%3A%20default.allow_internal_expect_revert%20%3D%20true%60%20above%20the%20test%20function.%0A%3E%0A%3E%20Or%20globally%2C%20this%20is%20discouraged%3A%0A%3E%0A%3E%20Add%20%60allow_internal_expect_revert%20%3D%20true%60%20to%20%60foundry.toml%60.%0A%0AAs%20long%20as%20you%20are%20not%20using%20%60vm.expectRevert%60%20on%20multiple%20internal%20functions%20in%20a%20single%20test%20function%20body%20it%20is%20generally%20considered%20safe.%0A%0AYou%20are%20recommended%20to%20apply%20this%20rule%20in%20a%20similar%20manner%20one%20would%20when%20tagging%20assembly%20blocks%20as%20%60memory-safe%60.%0A%0A%3E%20**Note**%0A%3E%0A%3E%20For%20a%20call%20like%20%60stable.donate(sUSD.balanceOf(user))%60%2C%20the%20next%20call%20expected%20to%20revert%20is%20%60sUSD.balanceOf(user)%60%20and%20not%20%60stable.donate()%60.%0A%0AAfter%20calling%20%60expectRevert%60%2C%20calls%20to%20other%20cheatcodes%20before%20the%20reverting%20call%20are%20ignored.%0A%0AThis%20means%2C%20for%20example%2C%20we%20can%20call%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%20immediately%20before%20the%20reverting%20call.%0A%0AThere%20are%20several%20signatures%20for%20%60expectRevert%60%3A%0A%0A-%20**Without%20parameters**%3A%20Asserts%20that%20the%20next%20call%20reverts%2C%20regardless%20of%20the%20message.%0A-%20**With%20%60bytes4%60%20message**%3A%20Asserts%20that%20the%20next%20call%20reverts%20with%20the%20specified%204%20bytes%20and%20exact%20match%20of%20revert%20data.%0A-%20**With%20%60bytes%60%20message**%3A%20Asserts%20that%20the%20next%20call%20reverts%20with%20the%20specified%20bytes.%0A-%20**With%20%60address%60%20reverter**%3A%20Asserts%20that%20the%20next%20call%20is%20reverted%20by%20the%20specified%20address.%0A-%20**With%20%60uint64%60%20count**%3A%20Expects%20an%20exact%20number%20of%20reverts%20from%20the%20upcoming%20calls.%20If%20set%20to%200%2C%20it%20can%20be%20used%20to%20assert%20that%20a%20revert%20is%20not%20made.%0A%0Aand%20two%20signatures%20for%20%60expectPartialRevert%60%3A%0A%0A-%20**%60bytes4%60%20message**%3A%20Asserts%20that%20the%20next%20call%20reverts%20and%20the%20specified%204%20bytes%20match%20the%20first%204%20bytes%20of%20revert%20data.%0A-%20**%60bytes4%60%20message%20and%20reverter%20%60address%60**%3A%20Asserts%20that%20the%20next%20call%20is%20reverted%20by%20specified%20address%20and%20the%20specified%204%20bytes%20match%20the%20first%204%20bytes%20of%20revert%20data.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note%3A**%0A%3E%0A%3E%20Custom%20errors%20can%20have%20arguments%20that%20sometimes%20are%20difficult%20to%20calculate%20in%20a%20testing%20environment%20or%20they%20may%20be%20unrelated%20to%20the%20test%20at%20hand%20(e.g.%20a%20value%20computed%20in%20the%20internal%20function%20of%20a%20third-party%20contract).%20In%20such%20cases%2C%20%60expectPartialRevert%60%20can%20be%20used%20to%20ignore%20arguments%20and%20match%20only%20on%20the%20selector%20of%20custom%20error.%20For%20example%2C%20testing%20a%20function%20that%20reverts%20with%20%60WrongNumber(uint256%20number)%60%20custom%20error%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20function%20count()%20public%20%7B%0A%3E%20%20%20%20%20revert%20WrongNumber(0)%3B%0A%3E%20%7D%0A%3E%20%60%60%60%0A%3E%0A%3E%20should%20pass%20when%20using%20%60expectPartialRevert%60%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20vm.expectPartialRevert(Counter.WrongNumber.selector)%3B%0A%3E%20counter.count()%3B%0A%3E%20%60%60%60%0A%3E%0A%3E%20but%20fails%20if%20exact%20match%20expected%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20vm.expectRevert(Counter.WrongNumber.selector)%3B%0A%3E%20counter.count()%3B%0A%3E%20%60%60%60%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Gotcha%3A%20Usage%20with%20low-level%20calls**%0A%3E%0A%3E%20Normally%2C%20a%20call%20that%20succeeds%20returns%20a%20status%20of%20%60true%60%20(along%20with%20any%20return%20data)%20and%20a%20call%20that%20reverts%20returns%20%60false%60.%0A%3E%0A%3E%20The%20Solidity%20compiler%20will%20insert%20checks%20that%20ensures%20that%20the%20call%20succeeded%2C%20and%20revert%20if%20it%20did%20not.%0A%3E%0A%3E%20On%20low%20level%20calls%2C%20the%20%60expectRevert%60%20cheatcode%20works%20by%20making%20the%20%60status%60%20boolean%20returned%20by%20the%20low%20level%20call%20correspond%20to%20whether%20the%20%60expectRevert%60%20succeeded%20or%20not%2C%20NOT%20whether%20or%20not%20the%20low-level%20call%20succeeds.%20Therefore%2C%20%60status%60%20being%20false%20corresponds%20to%20the%20cheatcode%20failing.%0A%3E%0A%3E%20Apart%20from%20this%2C%20%60expectRevert%60%20also%20mangles%20return%20data%20on%20low%20level%20calls%2C%20and%20is%20not%20usable.%0A%3E%0A%3E%20See%20the%20following%20example.%20For%20clarity%2C%20%60status%60%20has%20been%20renamed%20to%20%60revertsAsExpected%60%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20function%20testLowLevelCallRevert()%20public%20%7B%0A%3E%20%20%20%20%20vm.expectRevert(bytes(%22error%20message%22))%3B%0A%3E%20%20%20%20%20(bool%20revertsAsExpected%2C%20)%20%3D%20address(myContract).call(myCalldata)%3B%0A%3E%20%20%20%20%20assertTrue(revertsAsExpected%2C%20%22expectRevert%3A%20call%20did%20not%20revert%22)%3B%0A%3E%20%7D%0A%3E%20%60%60%60%0A%0A%23%23%23%20Examples%0A%0ATo%20use%20%60expectRevert%60%20with%20a%20%60string%60%2C%20pass%20it%20as%20a%20string%20literal.%0A%0A%60%60%60solidity%0Avm.expectRevert(%22error%20message%22)%3B%0A%60%60%60%0A%0ATo%20use%20%60expectRevert%60%20with%20a%20custom%20%5Berror%20type%5D%5Berror-type%5D%20without%20parameters%2C%20use%20its%20selector.%0A%0A%60%60%60solidity%0Avm.expectRevert(CustomError.selector)%3B%0A%60%60%60%0A%0ATo%20use%20%60expectRevert%60%20with%20a%20custom%20%5Berror%20type%5D%5Berror-type%5D%20with%20parameters%2C%20ABI%20encode%20the%20error%20type.%0A%0A%60%60%60solidity%0Avm.expectRevert(%0A%20%20%20%20abi.encodeWithSelector(CustomError.selector%2C%201%2C%202)%0A)%3B%0A%60%60%60%0A%0AIf%20you%20need%20to%20assert%20that%20a%20function%20reverts%20_without_%20a%20message%2C%20you%20can%20do%20so%20with%20%60expectRevert(bytes(%22%22))%60.%0A%0A%60%60%60solidity%0Afunction%20testExpectRevertNoReason()%20public%20%7B%0A%20%20%20%20Reverter%20reverter%20%3D%20new%20Reverter()%3B%0A%20%20%20%20vm.expectRevert(bytes(%22%22))%3B%0A%20%20%20%20reverter.revertWithoutReason()%3B%0A%7D%0A%60%60%60%0A%0AMessage-less%20reverts%20happen%20when%20there%20is%20an%20EVM%20error%2C%20such%20as%20when%20the%20transaction%20consumes%20more%20than%20the%20block's%20gas%20limit.%0A%0AIf%20you%20need%20to%20assert%20that%20a%20function%20reverts%20a%20four%20character%20message%2C%20e.g.%20%60AAAA%60%2C%20you%20can%20do%20so%20with%3A%0A%0A%60%60%60solidity%0Afunction%20testFourLetterMessage()%20public%20%7B%0A%20%20%20%20vm.expectRevert(bytes(%22AAAA%22))%3B%0A%7D%0A%60%60%60%0A%0AIf%20used%20%60expectRevert(%22AAAA%22)%60%2C%20the%20compiler%20would%20throw%20an%20error%20because%20it%20wouldn't%20know%20which%20overload%20to%20use.%0A%0AFinally%2C%20you%20can%20also%20have%20multiple%20%60expectRevert()%60%20checks%20in%20a%20single%20test.%0A%0A%60%60%60solidity%0Afunction%20testMultipleExpectReverts()%20public%20%7B%0A%20%20%20%20vm.expectRevert(%22INVALID_AMOUNT%22)%3B%0A%20%20%20%20vault.send(user%2C%200)%3B%0A%0A%20%20%20%20vm.expectRevert(%22INVALID_ADDRESS%22)%3B%0A%20%20%20%20vault.send(address(0)%2C%20200)%3B%0A%7D%0A%60%60%60%0A%0ATo%20use%20%60expectPartialRevert%60%20with%20a%20custom%20%5Berror%20type%5D%5Berror-type%5D%2C%20use%20its%20selector.%0A%0A%60%60%60solidity%0Avm.expectPartialRevert(CustomError.selector)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Errors%5D(%2Freference%2Fforge-std%2Fstd-errors.mdx)%0A%0A%5Berror-type%5D%3A%20https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.11%2Fcontracts.html%23errors%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./expect-revert-CHmrgZ6X.js"),__vite__mapDeps([269,1])),path:"/reference/cheatcodes/expect-revert.html",type:"mdx",filePath:"reference/cheatcodes/expect-revert.mdx",content:"%23%23%20%60expectRevert%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20expectRevert()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData%2C%20address%20reverter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes4%20revertData%2C%20address%20reverter%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData%2C%20address%20reverter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(bytes%20calldata%20revertData%2C%20address%20reverter%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(address%20reverter)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectRevert(address%20reverter%2C%20uint64%20count)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectPartialRevert(bytes4%20revertData)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20expectPartialRevert(bytes4%20revertData%2C%20address%20reverter)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Error%0A%0A%3E%20%E2%9D%8C%20**Error**%0A%3E%0A%3E%20If%20you%20see%20the%20following%20error%3A%0A%3E%0A%3E%20%60%5BFAIL%3A%20call%20didn't%20revert%20at%20a%20lower%20depth%20than%20cheatcode%20call%20depth%5D%60%0A%3E%0A%3E%20Carefully%20read%20the%20next%20sections!%0A%0ATo%20understand%20why%20you%20are%20getting%20this%20error%20you%20first%20have%20to%20understand%20what%20%60call%20depth%60%20means.%0A%0AYou%20can%20think%20of%20call%20depth%20in%20a%20similar%20way%20to%20function%20scoping.%20When%20you%20are%20entering%20an%20**external**%20call%20the%20call%20depth%20is%20increased%20by%20%601%60.%0AWhen%20you%20exit%20the%20external%20call%20the%20call%20depth%20is%20decreased%20by%20%601%60.%20If%20you%20have%20nested%20calls%20it%20looks%20as%20follows%3A%0A%0A%60%60%60%0A0%20%E2%86%92%20Contract%20A%20(calls%20B)%20%E2%86%92%201%20%E2%86%92%20Contract%20B%20(calls%20C)%20%E2%86%92%202%20%E2%86%92%20Contract%20C%20(returns)%20%E2%86%92%201%20%E2%86%92%20Contract%20B%20(returns)%20%E2%86%92%200%0A%60%60%60%0A%0A**Internal**%20functions%20on%20the%20other%20hand%20do%20**NOT**%20increase%20the%20call%20depth.%20It%20is%20not%20actually%20making%20_calls_%20but%20rather%20_jumping_%20to%20the%20target%20location.%0A%0AWhen%20testing%20**internal**%20functions%20with%20%60vm.expectRevert%60%20at%20the%20same%20call%20depth%20**ONLY**%20the%20**FIRST**%20%60vm.expectRevert%60%20is%20executed.%0A%0AThe%20following%20example%20shows%20where%20the%20footgun%20occurs.%20There%20are%20two%20%60vm.expectRevert%60's%20that%20exist%20at%20the%20same%20call%20depth%20hence%20only%20the%20**FIRST**%20one%20is%20executed%20and%20the%20test%20returns%20a%20**SUCCESS**.%20This%20is%20likely%20different%20behavior%20from%20what%20you%20may%20assume.%0A%0A%60%60%60solidity%0A%2F%2F%20DO%20NOT%20IMPLEMENT%20AS%20FOLLOWS!%20THIS%20IS%20AN%20INCORRECT%20USE.%0Afunction%20testMultipleReverts()%20public%20%7B%0A%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20revert()%3B%0A%0A%20%20%20%20vm.expectRevert()%3B%0A%20%20%20%20console2.log(%22Does%20not%20revert%22)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIf%20the%20**next%20call**%20does%20not%20revert%20with%20the%20expected%20data%20%60message%60%2C%20then%20%60expectRevert%60%20will.%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Usage**%0A%3E%0A%3E%20By%20default%2C%20%60expectRevert*%60%20cheatcodes%20work%20only%20for%20calls%20with%20greater%20depth%20than%20test%20depth%20(see%20%5B%233437%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F3437)%20foundry%20issue).%0A%3E%20Expecting%20reverts%20at%20the%20same%20depth%20as%20test%20depth%20can%20be%20enabled%20by%20setting%20%60allow_internal_expect_revert%60%20to%20%60true%60%20as%20follows%3A%0A%3E%0A%3E%20Selectively%20by%20using%20an%20inline%20configuration%20entry%20where%20it%20is%20**DEEMED%20SAFE**%3A%0A%3E%0A%3E%20Add%20%60%2F%2F%2F%20forge-config%3A%20default.allow_internal_expect_revert%20%3D%20true%60%20above%20the%20test%20function.%0A%3E%0A%3E%20Or%20globally%2C%20this%20is%20discouraged%3A%0A%3E%0A%3E%20Add%20%60allow_internal_expect_revert%20%3D%20true%60%20to%20%60foundry.toml%60.%0A%0AAs%20long%20as%20you%20are%20not%20using%20%60vm.expectRevert%60%20on%20multiple%20internal%20functions%20in%20a%20single%20test%20function%20body%20it%20is%20generally%20considered%20safe.%0A%0AYou%20are%20recommended%20to%20apply%20this%20rule%20in%20a%20similar%20manner%20one%20would%20when%20tagging%20assembly%20blocks%20as%20%60memory-safe%60.%0A%0A%3E%20**Note**%0A%3E%0A%3E%20For%20a%20call%20like%20%60stable.donate(sUSD.balanceOf(user))%60%2C%20the%20next%20call%20expected%20to%20revert%20is%20%60sUSD.balanceOf(user)%60%20and%20not%20%60stable.donate()%60.%0A%0AAfter%20calling%20%60expectRevert%60%2C%20calls%20to%20other%20cheatcodes%20before%20the%20reverting%20call%20are%20ignored.%0A%0AThis%20means%2C%20for%20example%2C%20we%20can%20call%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%20immediately%20before%20the%20reverting%20call.%0A%0AThere%20are%20several%20signatures%20for%20%60expectRevert%60%3A%0A%0A-%20**Without%20parameters**%3A%20Asserts%20that%20the%20next%20call%20reverts%2C%20regardless%20of%20the%20message.%0A-%20**With%20%60bytes4%60%20message**%3A%20Asserts%20that%20the%20next%20call%20reverts%20with%20the%20specified%204%20bytes%20and%20exact%20match%20of%20revert%20data.%0A-%20**With%20%60bytes%60%20message**%3A%20Asserts%20that%20the%20next%20call%20reverts%20with%20the%20specified%20bytes.%0A-%20**With%20%60address%60%20reverter**%3A%20Asserts%20that%20the%20next%20call%20is%20reverted%20by%20the%20specified%20address.%0A-%20**With%20%60uint64%60%20count**%3A%20Expects%20an%20exact%20number%20of%20reverts%20from%20the%20upcoming%20calls.%20If%20set%20to%200%2C%20it%20can%20be%20used%20to%20assert%20that%20a%20revert%20is%20not%20made.%0A%0Aand%20two%20signatures%20for%20%60expectPartialRevert%60%3A%0A%0A-%20**%60bytes4%60%20message**%3A%20Asserts%20that%20the%20next%20call%20reverts%20and%20the%20specified%204%20bytes%20match%20the%20first%204%20bytes%20of%20revert%20data.%0A-%20**%60bytes4%60%20message%20and%20reverter%20%60address%60**%3A%20Asserts%20that%20the%20next%20call%20is%20reverted%20by%20specified%20address%20and%20the%20specified%204%20bytes%20match%20the%20first%204%20bytes%20of%20revert%20data.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note%3A**%0A%3E%0A%3E%20Custom%20errors%20can%20have%20arguments%20that%20sometimes%20are%20difficult%20to%20calculate%20in%20a%20testing%20environment%20or%20they%20may%20be%20unrelated%20to%20the%20test%20at%20hand%20(e.g.%20a%20value%20computed%20in%20the%20internal%20function%20of%20a%20third-party%20contract).%20In%20such%20cases%2C%20%60expectPartialRevert%60%20can%20be%20used%20to%20ignore%20arguments%20and%20match%20only%20on%20the%20selector%20of%20custom%20error.%20For%20example%2C%20testing%20a%20function%20that%20reverts%20with%20%60WrongNumber(uint256%20number)%60%20custom%20error%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20function%20count()%20public%20%7B%0A%3E%20%20%20%20%20revert%20WrongNumber(0)%3B%0A%3E%20%7D%0A%3E%20%60%60%60%0A%3E%0A%3E%20should%20pass%20when%20using%20%60expectPartialRevert%60%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20vm.expectPartialRevert(Counter.WrongNumber.selector)%3B%0A%3E%20counter.count()%3B%0A%3E%20%60%60%60%0A%3E%0A%3E%20but%20fails%20if%20exact%20match%20expected%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20vm.expectRevert(Counter.WrongNumber.selector)%3B%0A%3E%20counter.count()%3B%0A%3E%20%60%60%60%0A%0A%3E%20%E2%9A%A0%EF%B8%8F%20**Gotcha%3A%20Usage%20with%20low-level%20calls**%0A%3E%0A%3E%20Normally%2C%20a%20call%20that%20succeeds%20returns%20a%20status%20of%20%60true%60%20(along%20with%20any%20return%20data)%20and%20a%20call%20that%20reverts%20returns%20%60false%60.%0A%3E%0A%3E%20The%20Solidity%20compiler%20will%20insert%20checks%20that%20ensures%20that%20the%20call%20succeeded%2C%20and%20revert%20if%20it%20did%20not.%0A%3E%0A%3E%20On%20low%20level%20calls%2C%20the%20%60expectRevert%60%20cheatcode%20works%20by%20making%20the%20%60status%60%20boolean%20returned%20by%20the%20low%20level%20call%20correspond%20to%20whether%20the%20%60expectRevert%60%20succeeded%20or%20not%2C%20NOT%20whether%20or%20not%20the%20low-level%20call%20succeeds.%20Therefore%2C%20%60status%60%20being%20false%20corresponds%20to%20the%20cheatcode%20failing.%0A%3E%0A%3E%20Apart%20from%20this%2C%20%60expectRevert%60%20also%20mangles%20return%20data%20on%20low%20level%20calls%2C%20and%20is%20not%20usable.%0A%3E%0A%3E%20See%20the%20following%20example.%20For%20clarity%2C%20%60status%60%20has%20been%20renamed%20to%20%60revertsAsExpected%60%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20function%20testLowLevelCallRevert()%20public%20%7B%0A%3E%20%20%20%20%20vm.expectRevert(bytes(%22error%20message%22))%3B%0A%3E%20%20%20%20%20(bool%20revertsAsExpected%2C%20)%20%3D%20address(myContract).call(myCalldata)%3B%0A%3E%20%20%20%20%20assertTrue(revertsAsExpected%2C%20%22expectRevert%3A%20call%20did%20not%20revert%22)%3B%0A%3E%20%7D%0A%3E%20%60%60%60%0A%0A%23%23%23%20Examples%0A%0ATo%20use%20%60expectRevert%60%20with%20a%20%60string%60%2C%20pass%20it%20as%20a%20string%20literal.%0A%0A%60%60%60solidity%0Avm.expectRevert(%22error%20message%22)%3B%0A%60%60%60%0A%0ATo%20use%20%60expectRevert%60%20with%20a%20custom%20%5Berror%20type%5D%5Berror-type%5D%20without%20parameters%2C%20use%20its%20selector.%0A%0A%60%60%60solidity%0Avm.expectRevert(CustomError.selector)%3B%0A%60%60%60%0A%0ATo%20use%20%60expectRevert%60%20with%20a%20custom%20%5Berror%20type%5D%5Berror-type%5D%20with%20parameters%2C%20ABI%20encode%20the%20error%20type.%0A%0A%60%60%60solidity%0Avm.expectRevert(%0A%20%20%20%20abi.encodeWithSelector(CustomError.selector%2C%201%2C%202)%0A)%3B%0A%60%60%60%0A%0AIf%20you%20need%20to%20assert%20that%20a%20function%20reverts%20_without_%20a%20message%2C%20you%20can%20do%20so%20with%20%60expectRevert(bytes(%22%22))%60.%0A%0A%60%60%60solidity%0Afunction%20testExpectRevertNoReason()%20public%20%7B%0A%20%20%20%20Reverter%20reverter%20%3D%20new%20Reverter()%3B%0A%20%20%20%20vm.expectRevert(bytes(%22%22))%3B%0A%20%20%20%20reverter.revertWithoutReason()%3B%0A%7D%0A%60%60%60%0A%0AMessage-less%20reverts%20happen%20when%20there%20is%20an%20EVM%20error%2C%20such%20as%20when%20the%20transaction%20consumes%20more%20than%20the%20block's%20gas%20limit.%0A%0AIf%20you%20need%20to%20assert%20that%20a%20function%20reverts%20a%20four%20character%20message%2C%20e.g.%20%60AAAA%60%2C%20you%20can%20do%20so%20with%3A%0A%0A%60%60%60solidity%0Afunction%20testFourLetterMessage()%20public%20%7B%0A%20%20%20%20vm.expectRevert(bytes(%22AAAA%22))%3B%0A%7D%0A%60%60%60%0A%0AIf%20used%20%60expectRevert(%22AAAA%22)%60%2C%20the%20compiler%20would%20throw%20an%20error%20because%20it%20wouldn't%20know%20which%20overload%20to%20use.%0A%0AFinally%2C%20you%20can%20also%20have%20multiple%20%60expectRevert()%60%20checks%20in%20a%20single%20test.%0A%0A%60%60%60solidity%0Afunction%20testMultipleExpectReverts()%20public%20%7B%0A%20%20%20%20vm.expectRevert(%22INVALID_AMOUNT%22)%3B%0A%20%20%20%20vault.send(user%2C%200)%3B%0A%0A%20%20%20%20vm.expectRevert(%22INVALID_ADDRESS%22)%3B%0A%20%20%20%20vault.send(address(0)%2C%20200)%3B%0A%7D%0A%60%60%60%0A%0ATo%20use%20%60expectPartialRevert%60%20with%20a%20custom%20%5Berror%20type%5D%5Berror-type%5D%2C%20use%20its%20selector.%0A%0A%60%60%60solidity%0Avm.expectPartialRevert(CustomError.selector)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Errors%5D(%2Freference%2Fforge-std%2Fstd-errors.mdx)%0A%0A%5Berror-type%5D%3A%20https%3A%2F%2Fdocs.soliditylang.org%2Fen%2Fv0.8.11%2Fcontracts.html%23errors%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./external-DfNC5ei6.js"),__vite__mapDeps([270,1])),path:"/reference/cheatcodes/external",type:"mdx",filePath:"reference/cheatcodes/external.mdx",content:"%23%23%20External%0A%0A-%20%5B%60ffi%60%5D(%2Freference%2Fcheatcodes%2Fffi.mdx)%0A-%20%5B%60prompt%60%5D(%2Freference%2Fcheatcodes%2Fprompt.mdx)%0A-%20%5B%60projectRoot%60%5D(%2Freference%2Fcheatcodes%2Fproject-root.mdx)%0A-%20%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code.mdx)%0A-%20%5B%60getDeployedCode%60%5D(%2Freference%2Fcheatcodes%2Fget-deployed-code.mdx)%0A-%20%5B%60sleep%60%5D(%2Freference%2Fcheatcodes%2Fsleep.mdx)%0A-%20%5B%60unixTime%60%5D(%2Freference%2Fcheatcodes%2Funix-time.mdx)%0A-%20%5B%60setEnv%60%5D(%2Freference%2Fcheatcodes%2Fset-env.mdx)%0A-%20%5B%60envOr%60%5D(%2Freference%2Fcheatcodes%2Fenv-or.mdx)%0A-%20%5B%60envBool%60%5D(%2Freference%2Fcheatcodes%2Fenv-bool.mdx)%0A-%20%5B%60envUint%60%5D(%2Freference%2Fcheatcodes%2Fenv-uint.mdx)%0A-%20%5B%60envInt%60%5D(%2Freference%2Fcheatcodes%2Fenv-int.mdx)%0A-%20%5B%60envAddress%60%5D(%2Freference%2Fcheatcodes%2Fenv-address.mdx)%0A-%20%5B%60envBytes32%60%5D(%2Freference%2Fcheatcodes%2Fenv-bytes32.mdx)%0A-%20%5B%60envString%60%5D(%2Freference%2Fcheatcodes%2Fenv-string.mdx)%0A-%20%5B%60envBytes%60%5D(%2Freference%2Fcheatcodes%2Fenv-bytes.mdx)%0A-%20%5B%60parseJson%60%5D(%2Freference%2Fcheatcodes%2Fparse-json.mdx)%0A-%20%5B%60fs%60%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./external-DfNC5ei6.js"),__vite__mapDeps([270,1])),path:"/reference/cheatcodes/external.html",type:"mdx",filePath:"reference/cheatcodes/external.mdx",content:"%23%23%20External%0A%0A-%20%5B%60ffi%60%5D(%2Freference%2Fcheatcodes%2Fffi.mdx)%0A-%20%5B%60prompt%60%5D(%2Freference%2Fcheatcodes%2Fprompt.mdx)%0A-%20%5B%60projectRoot%60%5D(%2Freference%2Fcheatcodes%2Fproject-root.mdx)%0A-%20%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code.mdx)%0A-%20%5B%60getDeployedCode%60%5D(%2Freference%2Fcheatcodes%2Fget-deployed-code.mdx)%0A-%20%5B%60sleep%60%5D(%2Freference%2Fcheatcodes%2Fsleep.mdx)%0A-%20%5B%60unixTime%60%5D(%2Freference%2Fcheatcodes%2Funix-time.mdx)%0A-%20%5B%60setEnv%60%5D(%2Freference%2Fcheatcodes%2Fset-env.mdx)%0A-%20%5B%60envOr%60%5D(%2Freference%2Fcheatcodes%2Fenv-or.mdx)%0A-%20%5B%60envBool%60%5D(%2Freference%2Fcheatcodes%2Fenv-bool.mdx)%0A-%20%5B%60envUint%60%5D(%2Freference%2Fcheatcodes%2Fenv-uint.mdx)%0A-%20%5B%60envInt%60%5D(%2Freference%2Fcheatcodes%2Fenv-int.mdx)%0A-%20%5B%60envAddress%60%5D(%2Freference%2Fcheatcodes%2Fenv-address.mdx)%0A-%20%5B%60envBytes32%60%5D(%2Freference%2Fcheatcodes%2Fenv-bytes32.mdx)%0A-%20%5B%60envString%60%5D(%2Freference%2Fcheatcodes%2Fenv-string.mdx)%0A-%20%5B%60envBytes%60%5D(%2Freference%2Fcheatcodes%2Fenv-bytes.mdx)%0A-%20%5B%60parseJson%60%5D(%2Freference%2Fcheatcodes%2Fparse-json.mdx)%0A-%20%5B%60fs%60%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fee-D9B0-lRU.js"),__vite__mapDeps([271,1])),path:"/reference/cheatcodes/fee",type:"mdx",filePath:"reference/cheatcodes/fee.mdx",content:"%23%23%20%60fee%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20fee(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.basefee%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.fee(25%20gwei)%3B%0Aemit%20log_uint(block.basefee)%3B%20%2F%2F%2025000000000%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fee-D9B0-lRU.js"),__vite__mapDeps([271,1])),path:"/reference/cheatcodes/fee.html",type:"mdx",filePath:"reference/cheatcodes/fee.mdx",content:"%23%23%20%60fee%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20fee(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.basefee%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.fee(25%20gwei)%3B%0Aemit%20log_uint(block.basefee)%3B%20%2F%2F%2025000000000%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./ffi-CwhGnLIO.js"),__vite__mapDeps([272,1])),path:"/reference/cheatcodes/ffi",type:"mdx",filePath:"reference/cheatcodes/ffi.mdx",content:"%23%23%20%60ffi%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20ffi(string%5B%5D%20calldata)%20external%20returns%20(bytes%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACalls%20an%20arbitrary%20command%20if%20%5B%60ffi%60%5D(%2Fconfig%2Freference%2Ftesting%23ffi)%20is%20enabled.%0A%0AIt%20is%20generally%20advised%20to%20use%20this%20cheat%20code%20as%20a%20last%20resort%2C%20and%20to%20not%20enable%20it%20by%20default%2C%20as%20anyone%20who%20can%20change%20the%20tests%20of%20a%20project%20will%20be%20able%20to%20execute%20arbitrary%20commands%20on%20devices%20that%20run%20the%20tests.%0A%0A%23%23%23%20Tips%0A%0A-%20By%20default%20the%20%60ffi%60%20cheatcode%20assumes%20the%20output%20of%20the%20command%20is%20a%20hex%20encoded%20value%20(e.g.%20a%20hex%20string%20of%20an%20ABI%20encoded%20value).%20If%20hex%20decoding%20fails%2C%20it%20will%20return%20the%20output%20as%20UTF8%20bytes%20that%20you%20can%20cast%20to%20a%20string.%0A-%20Make%20sure%20that%20the%20output%20does%20not%20include%20a%20%60%5Cn%60%20newline%20character.%20(e.g%20in%20Rust%20use%20%60print!%60%20vs%20%60println!%60)%0A-%20Remember%20that%20the%20script%20will%20be%20executed%20from%20the%20top-level%20directory%20of%20your%20project%2C%20not%20inside%20%60test%60%0A-%20Make%20sure%20that%20the%20inputs%20array%20does%20not%20have%20empty%20elements.%20They%20will%20be%20handled%20as%20inputs%20by%20the%20script%2C%20instead%20of%20space%0A-%20Use%20the%20cheatcode%20%60toString%60%20to%20easily%20convert%20arbitrary%20data%20to%20strings%2C%20so%20that%20you%20can%20pass%20them%20as%20command-line%20arguments%0A-%20On%20Windows%20some%20commands%20like%20%60npm%60%20or%20%60npx%60%20fail%20to%20execute%20with%20%60program%20not%20found%60%20error%20message.%20To%20avoid%20such%20make%20sure%20the%20command%20contains%20file%20extension%20as%20well%2C%20like%20%60npm.cmd%60%20or%20%60npx.cmd%60.%20These%20commands%20can%20be%20configured%20and%20read%20as%20environment%20variables%2C%20so%20tests%20doesn't%20need%20to%20be%20changed%20when%20running%20on%20different%20operating%20systems.%0A%0A%23%23%23%20Examples%0A%0AABI%20encoded%20output%0A%0A%60%60%60solidity%0Astring%5B%5D%20memory%20inputs%20%3D%20new%20string%5B%5D(3)%3B%0Ainputs%5B0%5D%20%3D%20%22echo%22%3B%0Ainputs%5B1%5D%20%3D%20%22-n%22%3B%0A%2F%2F%20ABI%20encoded%20%22gm%22%2C%20as%20a%20hex%20string%0Ainputs%5B2%5D%20%3D%20%220x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002676d000000000000000000000000000000000000000000000000000000000000%22%3B%0A%0Abytes%20memory%20res%20%3D%20vm.ffi(inputs)%3B%0Astring%20memory%20output%20%3D%20abi.decode(res%2C%20(string))%3B%0AassertEq(output%2C%20%22gm%22)%3B%0A%60%60%60%0A%0AUTF8%20string%20output%0A%0A%60%60%60solidity%0Astring%5B%5D%20memory%20inputs%20%3D%20new%20string%5B%5D(3)%3B%0Ainputs%5B0%5D%20%3D%20%22echo%22%3B%0Ainputs%5B1%5D%20%3D%20%22-n%22%3B%0Ainputs%5B2%5D%20%3D%20%22gm%22%3B%0A%0Abytes%20memory%20res%20%3D%20vm.ffi(inputs)%3B%0AassertEq(string(res)%2C%20%22gm%22)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./ffi-CwhGnLIO.js"),__vite__mapDeps([272,1])),path:"/reference/cheatcodes/ffi.html",type:"mdx",filePath:"reference/cheatcodes/ffi.mdx",content:"%23%23%20%60ffi%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20ffi(string%5B%5D%20calldata)%20external%20returns%20(bytes%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACalls%20an%20arbitrary%20command%20if%20%5B%60ffi%60%5D(%2Fconfig%2Freference%2Ftesting%23ffi)%20is%20enabled.%0A%0AIt%20is%20generally%20advised%20to%20use%20this%20cheat%20code%20as%20a%20last%20resort%2C%20and%20to%20not%20enable%20it%20by%20default%2C%20as%20anyone%20who%20can%20change%20the%20tests%20of%20a%20project%20will%20be%20able%20to%20execute%20arbitrary%20commands%20on%20devices%20that%20run%20the%20tests.%0A%0A%23%23%23%20Tips%0A%0A-%20By%20default%20the%20%60ffi%60%20cheatcode%20assumes%20the%20output%20of%20the%20command%20is%20a%20hex%20encoded%20value%20(e.g.%20a%20hex%20string%20of%20an%20ABI%20encoded%20value).%20If%20hex%20decoding%20fails%2C%20it%20will%20return%20the%20output%20as%20UTF8%20bytes%20that%20you%20can%20cast%20to%20a%20string.%0A-%20Make%20sure%20that%20the%20output%20does%20not%20include%20a%20%60%5Cn%60%20newline%20character.%20(e.g%20in%20Rust%20use%20%60print!%60%20vs%20%60println!%60)%0A-%20Remember%20that%20the%20script%20will%20be%20executed%20from%20the%20top-level%20directory%20of%20your%20project%2C%20not%20inside%20%60test%60%0A-%20Make%20sure%20that%20the%20inputs%20array%20does%20not%20have%20empty%20elements.%20They%20will%20be%20handled%20as%20inputs%20by%20the%20script%2C%20instead%20of%20space%0A-%20Use%20the%20cheatcode%20%60toString%60%20to%20easily%20convert%20arbitrary%20data%20to%20strings%2C%20so%20that%20you%20can%20pass%20them%20as%20command-line%20arguments%0A-%20On%20Windows%20some%20commands%20like%20%60npm%60%20or%20%60npx%60%20fail%20to%20execute%20with%20%60program%20not%20found%60%20error%20message.%20To%20avoid%20such%20make%20sure%20the%20command%20contains%20file%20extension%20as%20well%2C%20like%20%60npm.cmd%60%20or%20%60npx.cmd%60.%20These%20commands%20can%20be%20configured%20and%20read%20as%20environment%20variables%2C%20so%20tests%20doesn't%20need%20to%20be%20changed%20when%20running%20on%20different%20operating%20systems.%0A%0A%23%23%23%20Examples%0A%0AABI%20encoded%20output%0A%0A%60%60%60solidity%0Astring%5B%5D%20memory%20inputs%20%3D%20new%20string%5B%5D(3)%3B%0Ainputs%5B0%5D%20%3D%20%22echo%22%3B%0Ainputs%5B1%5D%20%3D%20%22-n%22%3B%0A%2F%2F%20ABI%20encoded%20%22gm%22%2C%20as%20a%20hex%20string%0Ainputs%5B2%5D%20%3D%20%220x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002676d000000000000000000000000000000000000000000000000000000000000%22%3B%0A%0Abytes%20memory%20res%20%3D%20vm.ffi(inputs)%3B%0Astring%20memory%20output%20%3D%20abi.decode(res%2C%20(string))%3B%0AassertEq(output%2C%20%22gm%22)%3B%0A%60%60%60%0A%0AUTF8%20string%20output%0A%0A%60%60%60solidity%0Astring%5B%5D%20memory%20inputs%20%3D%20new%20string%5B%5D(3)%3B%0Ainputs%5B0%5D%20%3D%20%22echo%22%3B%0Ainputs%5B1%5D%20%3D%20%22-n%22%3B%0Ainputs%5B2%5D%20%3D%20%22gm%22%3B%0A%0Abytes%20memory%20res%20%3D%20vm.ffi(inputs)%3B%0AassertEq(string(res)%2C%20%22gm%22)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forking-Clou0BmQ.js"),__vite__mapDeps([273,1])),path:"/reference/cheatcodes/forking",type:"mdx",filePath:"reference/cheatcodes/forking.mdx",content:"%23%23%20Forking%0A%0A-%20%5B%60createFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5B%60selectFork%60%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5B%60createSelectFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-select-fork.mdx)%0A-%20%5B%60activeFork%60%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A-%20%5B%60rollFork%60%5D(%2Freference%2Fcheatcodes%2Froll-fork.mdx)%0A-%20%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)%0A-%20%5B%60revokePersistent%60%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A-%20%5B%60isPersistent%60%5D(%2Freference%2Fcheatcodes%2Fis-persistent.mdx)%0A-%20%5B%60allowCheatcodes%60%5D(%2Freference%2Fcheatcodes%2Fallow-cheatcodes.mdx)%0A-%20%5B%60transact%60%5D(%2Freference%2Fcheatcodes%2Ftransact.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./forking-Clou0BmQ.js"),__vite__mapDeps([273,1])),path:"/reference/cheatcodes/forking.html",type:"mdx",filePath:"reference/cheatcodes/forking.mdx",content:"%23%23%20Forking%0A%0A-%20%5B%60createFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5B%60selectFork%60%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5B%60createSelectFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-select-fork.mdx)%0A-%20%5B%60activeFork%60%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A-%20%5B%60rollFork%60%5D(%2Freference%2Fcheatcodes%2Froll-fork.mdx)%0A-%20%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)%0A-%20%5B%60revokePersistent%60%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A-%20%5B%60isPersistent%60%5D(%2Freference%2Fcheatcodes%2Fis-persistent.mdx)%0A-%20%5B%60allowCheatcodes%60%5D(%2Freference%2Fcheatcodes%2Fallow-cheatcodes.mdx)%0A-%20%5B%60transact%60%5D(%2Freference%2Fcheatcodes%2Ftransact.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fs-CVXAH0MF.js"),__vite__mapDeps([274,1])),path:"/reference/cheatcodes/fs",type:"mdx",filePath:"reference/cheatcodes/fs.mdx",content:"%23%23%20File%20cheat%20codes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Reads%20the%20entire%20content%20of%20file%20to%20string%2C%20(path)%20%3D%3E%20(data)%0Afunction%20readFile(string%20calldata)%20external%20returns%20(string%20memory)%3B%0A%2F%2F%2F%20Reads%20the%20entire%20content%20of%20file%20as%20binary.%20%60path%60%20is%20relative%20to%20the%20project%20root.%0Afunction%20readFileBinary(string%20calldata%20path)%20external%20view%20returns%20(bytes%20memory%20data)%3B%0A%2F%2F%2F%20Reads%20the%20directory%20at%20the%20given%20path%20recursively%2C%20up%20to%20%60maxDepth%60.%0A%2F%2F%2F%20%60maxDepth%60%20defaults%20to%201%2C%20meaning%20only%20the%20direct%20children%20of%20the%20given%20directory%20will%20be%20returned.%0A%2F%2F%2F%20Follows%20symbolic%20links%20if%20%60followLinks%60%20is%20true.%0Afunction%20readDir(string%20calldata%20path)%20external%20view%20returns%20(DirEntry%5B%5D%20memory%20entries)%3B%0A%2F%2F%20Reads%20next%20line%20of%20file%20to%20string%2C%20(path)%20%3D%3E%20(line)%0Afunction%20readLine(string%20calldata)%20external%20returns%20(string%20memory)%3B%0A%2F%2F%2F%20Reads%20a%20symbolic%20link%2C%20returning%20the%20path%20that%20the%20link%20points%20to.%0A%2F%2F%2F%20This%20cheatcode%20will%20revert%20in%20the%20following%20situations%2C%20but%20is%20not%20limited%20to%20just%20these%20cases%3A%0A%2F%2F%2F%20-%20%60path%60%20is%20not%20a%20symbolic%20link.%0A%2F%2F%2F%20-%20%60path%60%20does%20not%20exist.%0Afunction%20readLink(string%20calldata%20linkPath)%20external%20view%20returns%20(string%20memory%20targetPath)%3B%0A%2F%2F%20Writes%20data%20to%20file%2C%20creating%20a%20file%20if%20it%20does%20not%20exist%2C%20and%20entirely%20replacing%20its%20contents%20if%20it%20does.%0A%2F%2F%20(path%2C%20data)%20%3D%3E%20()%0Afunction%20writeFile(string%20calldata%2C%20string%20calldata)%20external%3B%0A%2F%2F%20Writes%20line%20to%20file%2C%20creating%20a%20file%20if%20it%20does%20not%20exist.%0A%2F%2F%20(path%2C%20data)%20%3D%3E%20()%0Afunction%20writeLine(string%20calldata%2C%20string%20calldata)%20external%3B%0A%2F%2F%20Closes%20file%20for%20reading%2C%20resetting%20the%20offset%20and%20allowing%20to%20read%20it%20from%20beginning%20with%20readLine.%0A%2F%2F%20(path)%20%3D%3E%20()%0Afunction%20closeFile(string%20calldata)%20external%3B%0A%2F%2F%20Removes%20file.%20This%20cheatcode%20will%20revert%20in%20the%20following%20situations%2C%20but%20is%20not%20limited%20to%20just%20these%20cases%3A%0A%2F%2F%20-%20Path%20points%20to%20a%20directory.%0A%2F%2F%20-%20The%20file%20doesn't%20exist.%0A%2F%2F%20-%20The%20user%20lacks%20permissions%20to%20remove%20the%20file.%0A%2F%2F%20(path)%20%3D%3E%20()%0Afunction%20removeFile(string%20calldata)%20external%3B%0A%2F%2F%20Returns%20true%20if%20the%20given%20path%20points%20to%20an%20existing%20entity%2C%20else%20returns%20false%0A%2F%2F%20(path)%20%3D%3E%20(bool)%0Afunction%20exists(string%20calldata)%20external%20returns%20(bool)%3B%0A%2F%2F%20Returns%20true%20if%20the%20path%20exists%20on%20disk%20and%20is%20pointing%20at%20a%20regular%20file%2C%20else%20returns%20false%0A%2F%2F%20(path)%20%3D%3E%20(bool)%0Afunction%20isFile(string%20calldata)%20external%20returns%20(bool)%3B%0A%2F%2F%20Returns%20true%20if%20the%20path%20exists%20on%20disk%20and%20is%20pointing%20at%20a%20directory%2C%20else%20returns%20false%0A%2F%2F%20(path)%20%3D%3E%20(bool)%0Afunction%20isDir(string%20calldata)%20external%20returns%20(bool)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThese%20cheatcodes%20provided%20by%20%5Bforge-std%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std)%20can%20be%20used%20for%20filesystem%20manipulation%20operations.%0A%0ABy%20default%2C%20filesystem%20access%20is%20disallowed%20and%20requires%20the%20%60fs_permissions%60%20setting%20in%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0A%23%20Configures%20permissions%20for%20cheatcodes%20that%20touch%20the%20filesystem%20like%20%60vm.writeFile%60%0A%23%20%60access%60%20restricts%20how%20the%20%60path%60%20can%20be%20accessed%20via%20cheatcodes%0A%23%20%20%20%20%60read-write%60%20%7C%20%60true%60%20%20%20%3D%3E%20%60read%60%20%2B%20%60write%60%20access%20allowed%20(%60vm.readFile%60%20%2B%20%60vm.writeFile%60)%0A%23%20%20%20%20%60none%60%7C%20%60false%60%20%3D%3E%20no%20access%0A%23%20%20%20%20%60read%60%20%3D%3E%20only%20read%20access%20(%60vm.readFile%60)%0A%23%20%20%20%20%60write%60%20%3D%3E%20only%20write%20access%20(%60vm.writeFile%60)%0A%23%20The%20%60allowed_paths%60%20further%20lists%20the%20paths%20that%20are%20considered%2C%20e.g.%20%60.%2F%60%20represents%20the%20project%20root%20directory%0A%23%20By%20default%20_no_%20fs%20access%20permission%20is%20granted%2C%20and%20_no_%20paths%20are%20allowed%0A%23%20following%20example%20enables%20read%20access%20for%20the%20project%20dir%20_only_%3A%0A%23%20%20%20%20%20%20%20%60fs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%60%0Afs_permissions%20%3D%20%5B%5D%20%23%20default%3A%20all%20file%20cheat%20codes%20are%20disabled%0A%60%60%60%0A%0A%23%23%23%20Examples%0A%0AAppend%20a%20line%20to%20a%20file%2C%20this%20will%20create%20the%20file%20if%20it%20does%20not%20exist%20yet%0A%0AThis%20requires%20read%20access%20to%20the%20file%20%2F%20project%20root%0A%0A%60%60%60toml%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22output.txt%22%3B%0A%0Astring%20memory%20line1%20%3D%20%22first%20line%22%3B%0Avm.writeLine(path%2C%20line1)%3B%0A%0Astring%20memory%20line2%20%3D%20%22second%20line%22%3B%0Avm.writeLine(path%2C%20line2)%3B%0A%60%60%60%0A%0AWrite%20to%20and%20read%20from%20a%20file%0A%0AThis%20requires%20read-write%20access%20to%20file%20%2F%20project%20root%3A%0A%0A%60%60%60toml%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read-write%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22file.txt%22%3B%0Astring%20memory%20data%20%3D%20%22hello%20world%22%3B%0Avm.writeFile(path%2C%20data)%3B%0A%0AassertEq(vm.readFile(path)%2C%20data)%3B%0A%60%60%60%0A%0ARemove%20a%20file%0A%0AThis%20requires%20write%20access%20to%20file%20%2F%20project%20root%3A%0A%0A%60%60%60toml%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22write%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22file.txt%22%3B%0Avm.removeFile(path)%3B%0A%0AassertFalse(vm.exists(validPath))%3B%0A%60%60%60%0A%0AVerify%20that%20a%20filesystem%20path%20is%20valid%0A%0A%60%60%60solidity%0A%2F%2F%20Verify%20that%20path%20'foo%2Ffiles%2Fbar.txt'%20exists%0Astring%20memory%20validPath%20%3D%20%22foo%2Ffiles%2Fbar.txt%22%3B%0AassertTrue(vm.exists(validPath))%3B%0A%60%60%60%0A%0AVerify%20that%20a%20filesystem%20path%20points%20to%20a%20file%20or%20directory%0A%0A%60%60%60solidity%0A%2F%2F%20Verify%20that%20path%20'foo%2Ffile%2Fbar.txt'%20points%20to%20a%20file%0Astring%20memory%20validFilePath%20%3D%20%22foo%2Ffiles%2Fbar.txt%22%3B%0AassertTrue(vm.isFile(validFilePath))%3B%0A%0A%2F%2F%20Verify%20that%20'foo%2Ffile'%20points%20to%20a%20directory%0Astring%20memory%20validDirPath%20%3D%20%22foo%2Ffiles%22%3B%0AassertTrue(vm.isDir(validDirPath))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fs-CVXAH0MF.js"),__vite__mapDeps([274,1])),path:"/reference/cheatcodes/fs.html",type:"mdx",filePath:"reference/cheatcodes/fs.mdx",content:"%23%23%20File%20cheat%20codes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Reads%20the%20entire%20content%20of%20file%20to%20string%2C%20(path)%20%3D%3E%20(data)%0Afunction%20readFile(string%20calldata)%20external%20returns%20(string%20memory)%3B%0A%2F%2F%2F%20Reads%20the%20entire%20content%20of%20file%20as%20binary.%20%60path%60%20is%20relative%20to%20the%20project%20root.%0Afunction%20readFileBinary(string%20calldata%20path)%20external%20view%20returns%20(bytes%20memory%20data)%3B%0A%2F%2F%2F%20Reads%20the%20directory%20at%20the%20given%20path%20recursively%2C%20up%20to%20%60maxDepth%60.%0A%2F%2F%2F%20%60maxDepth%60%20defaults%20to%201%2C%20meaning%20only%20the%20direct%20children%20of%20the%20given%20directory%20will%20be%20returned.%0A%2F%2F%2F%20Follows%20symbolic%20links%20if%20%60followLinks%60%20is%20true.%0Afunction%20readDir(string%20calldata%20path)%20external%20view%20returns%20(DirEntry%5B%5D%20memory%20entries)%3B%0A%2F%2F%20Reads%20next%20line%20of%20file%20to%20string%2C%20(path)%20%3D%3E%20(line)%0Afunction%20readLine(string%20calldata)%20external%20returns%20(string%20memory)%3B%0A%2F%2F%2F%20Reads%20a%20symbolic%20link%2C%20returning%20the%20path%20that%20the%20link%20points%20to.%0A%2F%2F%2F%20This%20cheatcode%20will%20revert%20in%20the%20following%20situations%2C%20but%20is%20not%20limited%20to%20just%20these%20cases%3A%0A%2F%2F%2F%20-%20%60path%60%20is%20not%20a%20symbolic%20link.%0A%2F%2F%2F%20-%20%60path%60%20does%20not%20exist.%0Afunction%20readLink(string%20calldata%20linkPath)%20external%20view%20returns%20(string%20memory%20targetPath)%3B%0A%2F%2F%20Writes%20data%20to%20file%2C%20creating%20a%20file%20if%20it%20does%20not%20exist%2C%20and%20entirely%20replacing%20its%20contents%20if%20it%20does.%0A%2F%2F%20(path%2C%20data)%20%3D%3E%20()%0Afunction%20writeFile(string%20calldata%2C%20string%20calldata)%20external%3B%0A%2F%2F%20Writes%20line%20to%20file%2C%20creating%20a%20file%20if%20it%20does%20not%20exist.%0A%2F%2F%20(path%2C%20data)%20%3D%3E%20()%0Afunction%20writeLine(string%20calldata%2C%20string%20calldata)%20external%3B%0A%2F%2F%20Closes%20file%20for%20reading%2C%20resetting%20the%20offset%20and%20allowing%20to%20read%20it%20from%20beginning%20with%20readLine.%0A%2F%2F%20(path)%20%3D%3E%20()%0Afunction%20closeFile(string%20calldata)%20external%3B%0A%2F%2F%20Removes%20file.%20This%20cheatcode%20will%20revert%20in%20the%20following%20situations%2C%20but%20is%20not%20limited%20to%20just%20these%20cases%3A%0A%2F%2F%20-%20Path%20points%20to%20a%20directory.%0A%2F%2F%20-%20The%20file%20doesn't%20exist.%0A%2F%2F%20-%20The%20user%20lacks%20permissions%20to%20remove%20the%20file.%0A%2F%2F%20(path)%20%3D%3E%20()%0Afunction%20removeFile(string%20calldata)%20external%3B%0A%2F%2F%20Returns%20true%20if%20the%20given%20path%20points%20to%20an%20existing%20entity%2C%20else%20returns%20false%0A%2F%2F%20(path)%20%3D%3E%20(bool)%0Afunction%20exists(string%20calldata)%20external%20returns%20(bool)%3B%0A%2F%2F%20Returns%20true%20if%20the%20path%20exists%20on%20disk%20and%20is%20pointing%20at%20a%20regular%20file%2C%20else%20returns%20false%0A%2F%2F%20(path)%20%3D%3E%20(bool)%0Afunction%20isFile(string%20calldata)%20external%20returns%20(bool)%3B%0A%2F%2F%20Returns%20true%20if%20the%20path%20exists%20on%20disk%20and%20is%20pointing%20at%20a%20directory%2C%20else%20returns%20false%0A%2F%2F%20(path)%20%3D%3E%20(bool)%0Afunction%20isDir(string%20calldata)%20external%20returns%20(bool)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThese%20cheatcodes%20provided%20by%20%5Bforge-std%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std)%20can%20be%20used%20for%20filesystem%20manipulation%20operations.%0A%0ABy%20default%2C%20filesystem%20access%20is%20disallowed%20and%20requires%20the%20%60fs_permissions%60%20setting%20in%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0A%23%20Configures%20permissions%20for%20cheatcodes%20that%20touch%20the%20filesystem%20like%20%60vm.writeFile%60%0A%23%20%60access%60%20restricts%20how%20the%20%60path%60%20can%20be%20accessed%20via%20cheatcodes%0A%23%20%20%20%20%60read-write%60%20%7C%20%60true%60%20%20%20%3D%3E%20%60read%60%20%2B%20%60write%60%20access%20allowed%20(%60vm.readFile%60%20%2B%20%60vm.writeFile%60)%0A%23%20%20%20%20%60none%60%7C%20%60false%60%20%3D%3E%20no%20access%0A%23%20%20%20%20%60read%60%20%3D%3E%20only%20read%20access%20(%60vm.readFile%60)%0A%23%20%20%20%20%60write%60%20%3D%3E%20only%20write%20access%20(%60vm.writeFile%60)%0A%23%20The%20%60allowed_paths%60%20further%20lists%20the%20paths%20that%20are%20considered%2C%20e.g.%20%60.%2F%60%20represents%20the%20project%20root%20directory%0A%23%20By%20default%20_no_%20fs%20access%20permission%20is%20granted%2C%20and%20_no_%20paths%20are%20allowed%0A%23%20following%20example%20enables%20read%20access%20for%20the%20project%20dir%20_only_%3A%0A%23%20%20%20%20%20%20%20%60fs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%60%0Afs_permissions%20%3D%20%5B%5D%20%23%20default%3A%20all%20file%20cheat%20codes%20are%20disabled%0A%60%60%60%0A%0A%23%23%23%20Examples%0A%0AAppend%20a%20line%20to%20a%20file%2C%20this%20will%20create%20the%20file%20if%20it%20does%20not%20exist%20yet%0A%0AThis%20requires%20read%20access%20to%20the%20file%20%2F%20project%20root%0A%0A%60%60%60toml%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22output.txt%22%3B%0A%0Astring%20memory%20line1%20%3D%20%22first%20line%22%3B%0Avm.writeLine(path%2C%20line1)%3B%0A%0Astring%20memory%20line2%20%3D%20%22second%20line%22%3B%0Avm.writeLine(path%2C%20line2)%3B%0A%60%60%60%0A%0AWrite%20to%20and%20read%20from%20a%20file%0A%0AThis%20requires%20read-write%20access%20to%20file%20%2F%20project%20root%3A%0A%0A%60%60%60toml%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read-write%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22file.txt%22%3B%0Astring%20memory%20data%20%3D%20%22hello%20world%22%3B%0Avm.writeFile(path%2C%20data)%3B%0A%0AassertEq(vm.readFile(path)%2C%20data)%3B%0A%60%60%60%0A%0ARemove%20a%20file%0A%0AThis%20requires%20write%20access%20to%20file%20%2F%20project%20root%3A%0A%0A%60%60%60toml%0Afs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22write%22%2C%20path%20%3D%20%22.%2F%22%7D%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22file.txt%22%3B%0Avm.removeFile(path)%3B%0A%0AassertFalse(vm.exists(validPath))%3B%0A%60%60%60%0A%0AVerify%20that%20a%20filesystem%20path%20is%20valid%0A%0A%60%60%60solidity%0A%2F%2F%20Verify%20that%20path%20'foo%2Ffiles%2Fbar.txt'%20exists%0Astring%20memory%20validPath%20%3D%20%22foo%2Ffiles%2Fbar.txt%22%3B%0AassertTrue(vm.exists(validPath))%3B%0A%60%60%60%0A%0AVerify%20that%20a%20filesystem%20path%20points%20to%20a%20file%20or%20directory%0A%0A%60%60%60solidity%0A%2F%2F%20Verify%20that%20path%20'foo%2Ffile%2Fbar.txt'%20points%20to%20a%20file%0Astring%20memory%20validFilePath%20%3D%20%22foo%2Ffiles%2Fbar.txt%22%3B%0AassertTrue(vm.isFile(validFilePath))%3B%0A%0A%2F%2F%20Verify%20that%20'foo%2Ffile'%20points%20to%20a%20directory%0Astring%20memory%20validDirPath%20%3D%20%22foo%2Ffiles%22%3B%0AassertTrue(vm.isDir(validDirPath))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fuzzer-C35dGGY8.js"),__vite__mapDeps([275,1])),path:"/reference/cheatcodes/fuzzer",type:"mdx",filePath:"reference/cheatcodes/fuzzer.mdx",content:"%23%23%20Fuzzer%0A%0A-%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume.mdx)%0A-%20%5B%60assumeNoRevert%60%5D(%2Freference%2Fcheatcodes%2Fassume-no-revert.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fuzzer-C35dGGY8.js"),__vite__mapDeps([275,1])),path:"/reference/cheatcodes/fuzzer.html",type:"mdx",filePath:"reference/cheatcodes/fuzzer.mdx",content:"%23%23%20Fuzzer%0A%0A-%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume.mdx)%0A-%20%5B%60assumeNoRevert%60%5D(%2Freference%2Fcheatcodes%2Fassume-no-revert.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-snapshots-Dbbj5z80.js"),__vite__mapDeps([166,1])),path:"/reference/cheatcodes/gas-snapshots",type:"mdx",filePath:"reference/cheatcodes/gas-snapshots.mdx",content:"%23%23%20%60snapshotGas%60%20cheatcodes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Start%20a%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name.%0A%2F%2F%2F%20The%20group%20name%20is%20derived%20from%20the%20contract%20name.%0Afunction%20startSnapshotGas(string%20calldata%20name)%20external%3B%0A%0A%2F%2F%2F%20Start%20a%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name%20in%20a%20group.%0Afunction%20startSnapshotGas(string%20calldata%20group%2C%20string%20calldata%20name)%20external%3B%0A%0A%2F%2F%2F%20Stop%20the%20snapshot%20capture%20of%20the%20current%20gas%20by%20latest%20snapshot%20name%2C%20capturing%20the%20gas%20used%20since%20the%20start.%0Afunction%20stopSnapshotGas()%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Stop%20the%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name%2C%20capturing%20the%20gas%20used%20since%20the%20start.%0A%2F%2F%2F%20The%20group%20name%20is%20derived%20from%20the%20contract%20name.%0Afunction%20stopSnapshotGas(string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Stop%20the%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name%20in%20a%20group%2C%20capturing%20the%20gas%20used%20since%20the%20start.%0Afunction%20stopSnapshotGas(string%20calldata%20group%2C%20string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20an%20arbitrary%20numerical%20value%20by%20name.%0A%2F%2F%2F%20The%20group%20name%20is%20derived%20from%20the%20contract%20name.%0Afunction%20snapshotValue(string%20calldata%20name%2C%20uint256%20value)%20external%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20an%20arbitrary%20numerical%20value%20by%20name%20in%20a%20group.%0Afunction%20snapshotValue(string%20calldata%20group%2C%20string%20calldata%20name%2C%20uint256%20value)%20external%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20the%20gas%20usage%20of%20the%20last%20call%20by%20name%20from%20the%20callee%20perspective.%0Afunction%20snapshotGasLastCall(string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20the%20gas%20usage%20of%20the%20last%20call%20by%20name%20in%20a%20group%20from%20the%20callee%20perspective.%0Afunction%20snapshotGasLastCall(string%20calldata%20group%2C%20string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A%60snapshotGas*%60%20cheatcodes%20allow%20you%20to%20capture%20gas%20usage%20in%20your%20tests.%20This%20can%20be%20useful%20to%20track%20how%20much%20gas%20your%20logic%20is%20consuming.%20You%20can%20capture%20the%20gas%20usage%20of%20the%20last%20call%20by%20name%2C%20capture%20an%20arbitrary%20numerical%20value%20by%20name%2C%20or%20start%20and%20stop%20a%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name.%0A%0AIn%20order%20to%20strictly%20compare%20gas%20usage%20across%20test%20runs%20you%20can%20set%20one%20of%20the%20following%3A%0A%0A-%20Set%20the%20%60FORGE_SNAPSHOT_CHECK%3Dtrue%60%20environment%20variable%0A-%20Set%20%60gas_snapshot_check%20%3D%20true%60%20in%20%60foundry.toml%60%0A-%20Pass%20%60--gas-snapshot-check%3Dtrue%60%0A%0ABy%20default%20this%20is%20**not%20enabled**%20and%20passing%20%60--gas-snapshot-check%3Dfalse%60%20will%20override%20all%20others.%0A%0AThis%20will%20compare%20the%20gas%20usage%20of%20your%20tests%20against%20the%20last%20snapshot%20and%20fail%20if%20the%20gas%20usage%20has%20changed.%0A%0AIt%20is%20intended%20that%20the%20%60snapshots%60%20directory%20created%20when%20using%20the%20%60snapshotGas*%60%20cheatcodes%20is%20checked%20into%20version%20control.%20This%20allows%20you%20to%20track%20changes%20in%20gas%20usage%20over%20time%20and%20compare%20gas%20usage%20during%20code%20reviews.%0A%0ATo%20disable%20the%20emitting%20of%20gas%20snapshots%20you%20can%20set%20one%20of%20the%20following%3A%0A%0A-%20Set%20the%20%60FORGE_SNAPSHOT_EMIT%3Dfalse%60%20environment%20variable.%0A-%20Set%20%60gas_snapshot_emit%20%3D%20false%60%20in%20%60foundry.toml%60.%0A-%20Pass%20%60--gas-snapshot-emit%3Dfalse%60%0A%0ABy%20default%20this%20is%20**enabled**%20and%20gas%20snapshots%20are%20written%20to%20disk.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Isolated%20tests**%0A%3E%0A%3E%20These%20cheatcodes%20are%20not%20accurate%20if%20not%20using%20isolated%20test%20mode.%0A%3E%0A%3E%20You%20can%20enable%20isolation%20mode%20by%20passing%20the%20%60--isolate%60%20flag%20or%0A%3E%20tag%20the%20test%20function%20with%20the%20following%20inline%20configuration%3A%0A%3E%0A%3E%20%60%2F%2F%2F%20forge-config%3A%20default.isolate%20%3D%20true%60%0A%0A%23%23%23%20Examples%0A%0ACapturing%20the%20gas%20usage%20of%20a%20section%20of%20code%20that%20calls%20an%20external%20contract%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20Flare%20public%20flare%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare%20%3D%20new%20Flare()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22externalA%22)%3B%0A%20%20%20%20%20%20%20%20flare.run(256)%3B%0A%20%20%20%20%20%20%20%20uint256%20gasUsed%20%3D%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20the%20gas%20usage%20of%20multiple%20sections%20of%20code%20that%20modify%20the%20internal%20state%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60internalA%60%2C%20%60internalB%60%2C%20and%20%60internalC%60.%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22internalA%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%201%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22internalB%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%202%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22internalC%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%200%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20the%20gas%20usage%20of%20a%20section%20of%20code%20that%20modifies%20both%20the%20internal%20state%20and%20calls%20an%20external%20contract%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%20%20%20%20Flare%20public%20flare%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare%20%3D%20new%20Flare()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60combinedA%60.%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22combinedA%22)%3B%0A%20%20%20%20%20%20%20%20flare.run(256)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%201%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20an%20arbitrary%20numerical%20value%20(such%20as%20the%20bytecode%20size%20of%20a%20contract)%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60valueA%60%2C%20%60valueB%60%2C%20and%20%60valueC%60.%0A%20%20%20%20function%20testSnapshotValue()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20a%20%3D%20123%3B%0A%20%20%20%20%20%20%20%20uint256%20b%20%3D%20456%3B%0A%20%20%20%20%20%20%20%20uint256%20c%20%3D%20789%3B%0A%0A%20%20%20%20%20%20%20%20vm.snapshotValue(%22valueA%22%2C%20a)%3B%0A%20%20%20%20%20%20%20%20vm.snapshotValue(%22valueB%22%2C%20b)%3B%0A%20%20%20%20%20%20%20%20vm.snapshotValue(%22valueC%22%2C%20c)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20the%20gas%20usage%20of%20the%20last%20call%20from%20the%20callee%20perspective%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20Flare%20public%20flare%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare%20%3D%20new%20Flare()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60lastCallA%60.%0A%20%20%20%20function%20testSnapshotGasLastCall()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare.run(1)%3B%0A%20%20%20%20%20%20%20%20vm.snapshotGasLastCall(%22lastCallA%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AFor%20each%20of%20the%20above%20examples%20you%20can%20also%20use%20the%20%60group%60%20variant%20of%20the%20cheatcodes%20to%20group%20the%20snapshots%20together%20in%20a%20custom%20group.%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FCustomGroup.json%60%20group%20with%20name%20%60internalA%60%2C%20%60internalB%60%2C%20and%20%60internalC%60.%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22CustomGroup%22%2C%20%22internalA%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%201%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22CustomGroup%22%2C%20%22internalB%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%202%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22CustomGroup%22%2C%20%22internalC%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%200%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./gas-snapshots-Dbbj5z80.js"),__vite__mapDeps([166,1])),path:"/reference/cheatcodes/gas-snapshots.html",type:"mdx",filePath:"reference/cheatcodes/gas-snapshots.mdx",content:"%23%23%20%60snapshotGas%60%20cheatcodes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Start%20a%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name.%0A%2F%2F%2F%20The%20group%20name%20is%20derived%20from%20the%20contract%20name.%0Afunction%20startSnapshotGas(string%20calldata%20name)%20external%3B%0A%0A%2F%2F%2F%20Start%20a%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name%20in%20a%20group.%0Afunction%20startSnapshotGas(string%20calldata%20group%2C%20string%20calldata%20name)%20external%3B%0A%0A%2F%2F%2F%20Stop%20the%20snapshot%20capture%20of%20the%20current%20gas%20by%20latest%20snapshot%20name%2C%20capturing%20the%20gas%20used%20since%20the%20start.%0Afunction%20stopSnapshotGas()%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Stop%20the%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name%2C%20capturing%20the%20gas%20used%20since%20the%20start.%0A%2F%2F%2F%20The%20group%20name%20is%20derived%20from%20the%20contract%20name.%0Afunction%20stopSnapshotGas(string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Stop%20the%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name%20in%20a%20group%2C%20capturing%20the%20gas%20used%20since%20the%20start.%0Afunction%20stopSnapshotGas(string%20calldata%20group%2C%20string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20an%20arbitrary%20numerical%20value%20by%20name.%0A%2F%2F%2F%20The%20group%20name%20is%20derived%20from%20the%20contract%20name.%0Afunction%20snapshotValue(string%20calldata%20name%2C%20uint256%20value)%20external%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20an%20arbitrary%20numerical%20value%20by%20name%20in%20a%20group.%0Afunction%20snapshotValue(string%20calldata%20group%2C%20string%20calldata%20name%2C%20uint256%20value)%20external%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20the%20gas%20usage%20of%20the%20last%20call%20by%20name%20from%20the%20callee%20perspective.%0Afunction%20snapshotGasLastCall(string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%0A%2F%2F%2F%20Snapshot%20capture%20the%20gas%20usage%20of%20the%20last%20call%20by%20name%20in%20a%20group%20from%20the%20callee%20perspective.%0Afunction%20snapshotGasLastCall(string%20calldata%20group%2C%20string%20calldata%20name)%20external%20returns%20(uint256%20gasUsed)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A%60snapshotGas*%60%20cheatcodes%20allow%20you%20to%20capture%20gas%20usage%20in%20your%20tests.%20This%20can%20be%20useful%20to%20track%20how%20much%20gas%20your%20logic%20is%20consuming.%20You%20can%20capture%20the%20gas%20usage%20of%20the%20last%20call%20by%20name%2C%20capture%20an%20arbitrary%20numerical%20value%20by%20name%2C%20or%20start%20and%20stop%20a%20snapshot%20capture%20of%20the%20current%20gas%20usage%20by%20name.%0A%0AIn%20order%20to%20strictly%20compare%20gas%20usage%20across%20test%20runs%20you%20can%20set%20one%20of%20the%20following%3A%0A%0A-%20Set%20the%20%60FORGE_SNAPSHOT_CHECK%3Dtrue%60%20environment%20variable%0A-%20Set%20%60gas_snapshot_check%20%3D%20true%60%20in%20%60foundry.toml%60%0A-%20Pass%20%60--gas-snapshot-check%3Dtrue%60%0A%0ABy%20default%20this%20is%20**not%20enabled**%20and%20passing%20%60--gas-snapshot-check%3Dfalse%60%20will%20override%20all%20others.%0A%0AThis%20will%20compare%20the%20gas%20usage%20of%20your%20tests%20against%20the%20last%20snapshot%20and%20fail%20if%20the%20gas%20usage%20has%20changed.%0A%0AIt%20is%20intended%20that%20the%20%60snapshots%60%20directory%20created%20when%20using%20the%20%60snapshotGas*%60%20cheatcodes%20is%20checked%20into%20version%20control.%20This%20allows%20you%20to%20track%20changes%20in%20gas%20usage%20over%20time%20and%20compare%20gas%20usage%20during%20code%20reviews.%0A%0ATo%20disable%20the%20emitting%20of%20gas%20snapshots%20you%20can%20set%20one%20of%20the%20following%3A%0A%0A-%20Set%20the%20%60FORGE_SNAPSHOT_EMIT%3Dfalse%60%20environment%20variable.%0A-%20Set%20%60gas_snapshot_emit%20%3D%20false%60%20in%20%60foundry.toml%60.%0A-%20Pass%20%60--gas-snapshot-emit%3Dfalse%60%0A%0ABy%20default%20this%20is%20**enabled**%20and%20gas%20snapshots%20are%20written%20to%20disk.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Isolated%20tests**%0A%3E%0A%3E%20These%20cheatcodes%20are%20not%20accurate%20if%20not%20using%20isolated%20test%20mode.%0A%3E%0A%3E%20You%20can%20enable%20isolation%20mode%20by%20passing%20the%20%60--isolate%60%20flag%20or%0A%3E%20tag%20the%20test%20function%20with%20the%20following%20inline%20configuration%3A%0A%3E%0A%3E%20%60%2F%2F%2F%20forge-config%3A%20default.isolate%20%3D%20true%60%0A%0A%23%23%23%20Examples%0A%0ACapturing%20the%20gas%20usage%20of%20a%20section%20of%20code%20that%20calls%20an%20external%20contract%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20Flare%20public%20flare%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare%20%3D%20new%20Flare()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22externalA%22)%3B%0A%20%20%20%20%20%20%20%20flare.run(256)%3B%0A%20%20%20%20%20%20%20%20uint256%20gasUsed%20%3D%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20the%20gas%20usage%20of%20multiple%20sections%20of%20code%20that%20modify%20the%20internal%20state%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60internalA%60%2C%20%60internalB%60%2C%20and%20%60internalC%60.%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22internalA%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%201%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22internalB%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%202%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22internalC%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%200%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20the%20gas%20usage%20of%20a%20section%20of%20code%20that%20modifies%20both%20the%20internal%20state%20and%20calls%20an%20external%20contract%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%20%20%20%20Flare%20public%20flare%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare%20%3D%20new%20Flare()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60combinedA%60.%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22combinedA%22)%3B%0A%20%20%20%20%20%20%20%20flare.run(256)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%201%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20an%20arbitrary%20numerical%20value%20(such%20as%20the%20bytecode%20size%20of%20a%20contract)%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60valueA%60%2C%20%60valueB%60%2C%20and%20%60valueC%60.%0A%20%20%20%20function%20testSnapshotValue()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20a%20%3D%20123%3B%0A%20%20%20%20%20%20%20%20uint256%20b%20%3D%20456%3B%0A%20%20%20%20%20%20%20%20uint256%20c%20%3D%20789%3B%0A%0A%20%20%20%20%20%20%20%20vm.snapshotValue(%22valueA%22%2C%20a)%3B%0A%20%20%20%20%20%20%20%20vm.snapshotValue(%22valueB%22%2C%20b)%3B%0A%20%20%20%20%20%20%20%20vm.snapshotValue(%22valueC%22%2C%20c)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ACapturing%20the%20gas%20usage%20of%20the%20last%20call%20from%20the%20callee%20perspective%3A%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20Flare%20public%20flare%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare%20%3D%20new%20Flare()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FSnapshotGasTest.json%60%20group%20with%20name%20%60lastCallA%60.%0A%20%20%20%20function%20testSnapshotGasLastCall()%20public%20%7B%0A%20%20%20%20%20%20%20%20flare.run(1)%3B%0A%20%20%20%20%20%20%20%20vm.snapshotGasLastCall(%22lastCallA%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AFor%20each%20of%20the%20above%20examples%20you%20can%20also%20use%20the%20%60group%60%20variant%20of%20the%20cheatcodes%20to%20group%20the%20snapshots%20together%20in%20a%20custom%20group.%0A%0A%60%60%60solidity%0Acontract%20SnapshotGasTest%20is%20Test%20%7B%0A%20%20%20%20uint256%20public%20slot0%3B%0A%0A%20%20%20%20%2F%2F%2F%20Writes%20to%20%60snapshots%2FCustomGroup.json%60%20group%20with%20name%20%60internalA%60%2C%20%60internalB%60%2C%20and%20%60internalC%60.%0A%20%20%20%20function%20testSnapshotGas()%20public%20%7B%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22CustomGroup%22%2C%20%22internalA%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%201%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22CustomGroup%22%2C%20%22internalB%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%202%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startSnapshotGas(%22CustomGroup%22%2C%20%22internalC%22)%3B%0A%20%20%20%20%20%20%20%20slot0%20%3D%200%3B%0A%20%20%20%20%20%20%20%20vm.stopSnapshotGas()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-block-number-BXA0m1DE.js"),__vite__mapDeps([276,1])),path:"/reference/cheatcodes/get-block-number",type:"mdx",filePath:"reference/cheatcodes/get-block-number.mdx",content:"%23%23%20%60getBlockNumber%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getBlockNumber()%20external%20view%20returns%20(uint256%20height)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20current%20%60block.number%60.%20This%20is%20useful%20in%20cases%20where%20%60vm.roll%60%20along%20with%20%60--via-ir%60%20compilation%20is%20used%2C%20as%20%60block.number%60%20is%20assumed%20to%20be%20a%20constant%20during%20a%20transaction.%20This%20means%20that%20on%20every%20forge%20test%2C%20multiple%20calls%20to%20%60block.number%60%20would%20get%20optimized%20to%20just%20returning%20a%20constant%20value%2C%20instead%20of%20actually%20accessing%20the%20current%20%60block.number%60.%20%60vm.getBlockNumber()%60%20avoids%20this%20optimization%20and%20returns%20the%20current%20%60block.number%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20height%20%3D%20vm.getBlockNumber()%3B%0AassertEq(height%2C%20uint256(block.number))%3B%0Avm.roll(10)%3B%0AassertEq(vm.getBlockNumber()%2C%2010)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-block-number-BXA0m1DE.js"),__vite__mapDeps([276,1])),path:"/reference/cheatcodes/get-block-number.html",type:"mdx",filePath:"reference/cheatcodes/get-block-number.mdx",content:"%23%23%20%60getBlockNumber%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getBlockNumber()%20external%20view%20returns%20(uint256%20height)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20current%20%60block.number%60.%20This%20is%20useful%20in%20cases%20where%20%60vm.roll%60%20along%20with%20%60--via-ir%60%20compilation%20is%20used%2C%20as%20%60block.number%60%20is%20assumed%20to%20be%20a%20constant%20during%20a%20transaction.%20This%20means%20that%20on%20every%20forge%20test%2C%20multiple%20calls%20to%20%60block.number%60%20would%20get%20optimized%20to%20just%20returning%20a%20constant%20value%2C%20instead%20of%20actually%20accessing%20the%20current%20%60block.number%60.%20%60vm.getBlockNumber()%60%20avoids%20this%20optimization%20and%20returns%20the%20current%20%60block.number%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20height%20%3D%20vm.getBlockNumber()%3B%0AassertEq(height%2C%20uint256(block.number))%3B%0Avm.roll(10)%3B%0AassertEq(vm.getBlockNumber()%2C%2010)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-block-timestamp-Bun8Zuwd.js"),__vite__mapDeps([277,1])),path:"/reference/cheatcodes/get-block-timestamp",type:"mdx",filePath:"reference/cheatcodes/get-block-timestamp.mdx",content:"%23%23%20%60getBlockTimestamp%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getBlockTimestamp()%20external%20view%20returns%20(uint256%20timestamp)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20current%20%60block.timestamp%60.%20This%20is%20useful%20in%20cases%20where%20%60vm.warp%60%20along%20with%20%60--via-ir%60%20compilation%20is%20used%2C%20as%20%60block.timestamp%60%20is%20assumed%20to%20be%20a%20constant%20during%20a%20transaction.%20This%20means%20that%20in%20every%20forge%20test%2C%20multiple%20calls%20to%20%60block.timestamp%60%20would%20get%20optimized%20to%20just%20returning%20a%20constant%20value%2C%20instead%20of%20actually%20accessing%20the%20current%20%60block.timestamp%60.%20%60vm.getBlockTimestamp()%60%20avoids%20this%20optimization%20and%20returns%20the%20current%20%60block.timestamp%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AassertEq(vm.getBlockTimestamp()%2C%201%2C%20%22timestamp%20should%20be%201%22)%3B%0Avm.warp(10)%3B%0AassertEq(vm.getBlockTimestamp()%2C%2010%2C%20%22warp%20failed%22)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-block-timestamp-Bun8Zuwd.js"),__vite__mapDeps([277,1])),path:"/reference/cheatcodes/get-block-timestamp.html",type:"mdx",filePath:"reference/cheatcodes/get-block-timestamp.mdx",content:"%23%23%20%60getBlockTimestamp%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getBlockTimestamp()%20external%20view%20returns%20(uint256%20timestamp)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20current%20%60block.timestamp%60.%20This%20is%20useful%20in%20cases%20where%20%60vm.warp%60%20along%20with%20%60--via-ir%60%20compilation%20is%20used%2C%20as%20%60block.timestamp%60%20is%20assumed%20to%20be%20a%20constant%20during%20a%20transaction.%20This%20means%20that%20in%20every%20forge%20test%2C%20multiple%20calls%20to%20%60block.timestamp%60%20would%20get%20optimized%20to%20just%20returning%20a%20constant%20value%2C%20instead%20of%20actually%20accessing%20the%20current%20%60block.timestamp%60.%20%60vm.getBlockTimestamp()%60%20avoids%20this%20optimization%20and%20returns%20the%20current%20%60block.timestamp%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AassertEq(vm.getBlockTimestamp()%2C%201%2C%20%22timestamp%20should%20be%201%22)%3B%0Avm.warp(10)%3B%0AassertEq(vm.getBlockTimestamp()%2C%2010%2C%20%22warp%20failed%22)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-code-iO2GTv_G.js"),__vite__mapDeps([278,1])),path:"/reference/cheatcodes/get-code",type:"mdx",filePath:"reference/cheatcodes/get-code.mdx",content:"%23%23%20%60getCode%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getCode(string%20calldata)%20external%20returns%20(bytes%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20**creation**%20bytecode%20for%20a%20contract%20in%20the%20project%20given%20the%20path%20to%20the%20contract.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20%60getCode%60%20requires%20read%20permission%20for%20the%20output%20directory%2C%20see%20%5Bfile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%3E%0A%3E%20To%20grant%20read%20access%20set%20%60fs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2Fout%22%7D%5D%60%20in%20your%20%60foundry.toml%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AMyContract%20myContract%20%3D%20new%20MyContract(arg1%2C%20arg2)%3B%0A%0A%2F%2F%20Let's%20do%20the%20same%20thing%20with%20%60getCode%60%0Abytes%20memory%20args%20%3D%20abi.encode(arg1%2C%20arg2)%3B%0Abytes%20memory%20bytecode%20%3D%20abi.encodePacked(vm.getCode(%22MyContract.sol%3AMyContract%22)%2C%20args)%3B%0Aaddress%20anotherAddress%3B%0Aassembly%20%7B%0A%20%20%20%20anotherAddress%20%3A%3D%20create(0%2C%20add(bytecode%2C%200x20)%2C%20mload(bytecode))%0A%7D%0A%0AassertEq0(address(myContract).code%2C%20anotherAddress.code)%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0ADeploy%20a%20contract%20to%20an%20arbitrary%20address%20by%20combining%20%60getCode%60%20and%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A%0A%60%60%60solidity%0A%2F%2F%20Deploy%0Abytes%20memory%20args%20%3D%20abi.encode(arg1%2C%20arg2)%3B%0Abytes%20memory%20bytecode%20%3D%20abi.encodePacked(vm.getCode(%22MyContract.sol%3AMyContract%22)%2C%20args)%3B%0Aaddress%20deployed%3B%0Aassembly%20%7B%0A%20%20%20%20deployed%20%3A%3D%20create(0%2C%20add(bytecode%2C%200x20)%2C%20mload(bytecode))%0A%7D%0A%0A%2F%2F%20Set%20the%20bytecode%20of%20an%20arbitrary%20address%0Avm.etch(targetAddr%2C%20deployed.code)%3B%0A%60%60%60%0A%0A%23%23%23%20Supported%20formats%0A%0AYou%20can%20fetch%20artifacts%20by%20either%20contract%20path%20or%20contract%20name.%20Fetching%20artifacts%20for%20a%20specific%20version%20is%20also%20supported.%20If%20not%20provided%2C%20cheatcode%20will%20default%20to%20the%20version%20of%20a%20test%20being%20executed%20or%20the%20only%20version%20artifact%20was%20compiled%20with.%0A%0A%60%60%60solidity%0Avm.getCode(%22MyContract.sol%3AMyContract%22)%3B%0Avm.getCode(%22MyContract%22)%3B%0Avm.getCode(%22MyContract.sol%3A0.8.18%22)%3B%0Avm.getCode(%22MyContract%3A0.8.18%22)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5B%60getDeployedCode%60%5D(%2Freference%2Fcheatcodes%2Fget-deployed-code.mdx)%0A%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A%0AForge%20Standard%20Library%0A%0A%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A%0A%5Bforge-std%5D%3A%20..%2Freference%2Fforge-std%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-code-iO2GTv_G.js"),__vite__mapDeps([278,1])),path:"/reference/cheatcodes/get-code.html",type:"mdx",filePath:"reference/cheatcodes/get-code.mdx",content:"%23%23%20%60getCode%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getCode(string%20calldata)%20external%20returns%20(bytes%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20**creation**%20bytecode%20for%20a%20contract%20in%20the%20project%20given%20the%20path%20to%20the%20contract.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20%60getCode%60%20requires%20read%20permission%20for%20the%20output%20directory%2C%20see%20%5Bfile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%3E%0A%3E%20To%20grant%20read%20access%20set%20%60fs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2Fout%22%7D%5D%60%20in%20your%20%60foundry.toml%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AMyContract%20myContract%20%3D%20new%20MyContract(arg1%2C%20arg2)%3B%0A%0A%2F%2F%20Let's%20do%20the%20same%20thing%20with%20%60getCode%60%0Abytes%20memory%20args%20%3D%20abi.encode(arg1%2C%20arg2)%3B%0Abytes%20memory%20bytecode%20%3D%20abi.encodePacked(vm.getCode(%22MyContract.sol%3AMyContract%22)%2C%20args)%3B%0Aaddress%20anotherAddress%3B%0Aassembly%20%7B%0A%20%20%20%20anotherAddress%20%3A%3D%20create(0%2C%20add(bytecode%2C%200x20)%2C%20mload(bytecode))%0A%7D%0A%0AassertEq0(address(myContract).code%2C%20anotherAddress.code)%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0ADeploy%20a%20contract%20to%20an%20arbitrary%20address%20by%20combining%20%60getCode%60%20and%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A%0A%60%60%60solidity%0A%2F%2F%20Deploy%0Abytes%20memory%20args%20%3D%20abi.encode(arg1%2C%20arg2)%3B%0Abytes%20memory%20bytecode%20%3D%20abi.encodePacked(vm.getCode(%22MyContract.sol%3AMyContract%22)%2C%20args)%3B%0Aaddress%20deployed%3B%0Aassembly%20%7B%0A%20%20%20%20deployed%20%3A%3D%20create(0%2C%20add(bytecode%2C%200x20)%2C%20mload(bytecode))%0A%7D%0A%0A%2F%2F%20Set%20the%20bytecode%20of%20an%20arbitrary%20address%0Avm.etch(targetAddr%2C%20deployed.code)%3B%0A%60%60%60%0A%0A%23%23%23%20Supported%20formats%0A%0AYou%20can%20fetch%20artifacts%20by%20either%20contract%20path%20or%20contract%20name.%20Fetching%20artifacts%20for%20a%20specific%20version%20is%20also%20supported.%20If%20not%20provided%2C%20cheatcode%20will%20default%20to%20the%20version%20of%20a%20test%20being%20executed%20or%20the%20only%20version%20artifact%20was%20compiled%20with.%0A%0A%60%60%60solidity%0Avm.getCode(%22MyContract.sol%3AMyContract%22)%3B%0Avm.getCode(%22MyContract%22)%3B%0Avm.getCode(%22MyContract.sol%3A0.8.18%22)%3B%0Avm.getCode(%22MyContract%3A0.8.18%22)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A%5B%60getDeployedCode%60%5D(%2Freference%2Fcheatcodes%2Fget-deployed-code.mdx)%0A%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A%0AForge%20Standard%20Library%0A%0A%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A%0A%5Bforge-std%5D%3A%20..%2Freference%2Fforge-std%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-deployed-code-9H-CFuBe.js"),__vite__mapDeps([279,1])),path:"/reference/cheatcodes/get-deployed-code",type:"mdx",filePath:"reference/cheatcodes/get-deployed-code.mdx",content:"%23%23%20%60getDeployedCode%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getDeployedCode(string%20calldata)%20external%20returns%20(bytes%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThis%20cheatcode%20works%20similar%20to%20%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code.mdx)%20but%20only%20returns%20the%20**deployed**%20bytecode%20(aka%20runtime%0Abytecode)%20for%20a%20contract%20in%20the%20project%20given%20the%20path%20to%20the%20contract.%0A%0AThe%20main%20use%20case%20for%20this%20cheat%20code%20is%20as%20a%20shortcut%20to%20deploy%20stateless%20contracts%20to%20arbitrary%20addresses.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%0A%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20%60getDeployedCode%60%20requires%20read%20permission%20for%20the%20output%20directory%2C%20see%20%5Bfile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%3E%0A%3E%20To%20grant%20read%20access%20set%20%60fs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2Fout%22%7D%5D%60%20in%20your%20%60foundry.toml%60.%0A%0A%23%23%23%20Examples%0A%0ADeploy%20a%20stateless%20contract%20at%20an%20arbitrary%20address%20using%20%60getDeployedCode%60%20and%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx).%0A%0A%60%60%60solidity%0A%2F%2F%20A%20stateless%20contract%20that%20we%20want%20deployed%20at%20a%20specific%20address%0Acontract%20Override%20%7B%0A%20%20%20%20event%20Payload(address%20sender%2C%20address%20target%2C%20bytes%20data)%3B%0A%0A%20%20%20%20function%20emitPayload(%0A%20%20%20%20%20%20%20%20address%20target%2C%20bytes%20calldata%20message%0A%20%20%20%20)%20external%20payable%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20emit%20Payload(msg.sender%2C%20target%2C%20message)%3B%0A%20%20%20%20%20%20%20%20return%200%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20get%20the%20**deployedBytecode**%0Abytes%20memory%20code%20%3D%20vm.getDeployedCode(%22Override.sol%3AOverride%22)%3B%0A%0A%2F%2F%20set%20the%20code%20of%20an%20arbitrary%20address%0Aaddress%20overrideAddress%20%3D%20address(64)%3B%0Avm.etch(overrideAddress%2C%20code)%3B%0AassertEq(overrideAddress.code%2C%20code)%3B%0A%60%60%60%0A%0A%23%23%23%20Supported%20formats%0A%0AYou%20can%20fetch%20artifacts%20by%20either%20contract%20path%20or%20contract%20name.%20Fetching%20artifacts%20for%20a%20specific%20version%20is%20also%20supported.%20If%20not%20provided%2C%20cheatcode%20will%20default%20to%20the%20version%20of%20a%20test%20being%20executed%20or%20the%20only%20version%20artifact%20was%20compiled%20with.%0A%0A%60%60%60solidity%0Avm.getDeployedCode(%22MyContract.sol%3AMyContract%22)%3B%0Avm.getDeployedCode(%22MyContract%22)%3B%0Avm.getDeployedCode(%22MyContract.sol%3A0.8.18%22)%3B%0Avm.getDeployedCode(%22MyContract%3A0.8.18%22)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code.mdx)%0A%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A%0A%5Bforge-std%5D%3A%20..%2Freference%2Fforge-std%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-deployed-code-9H-CFuBe.js"),__vite__mapDeps([279,1])),path:"/reference/cheatcodes/get-deployed-code.html",type:"mdx",filePath:"reference/cheatcodes/get-deployed-code.mdx",content:"%23%23%20%60getDeployedCode%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getDeployedCode(string%20calldata)%20external%20returns%20(bytes%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThis%20cheatcode%20works%20similar%20to%20%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code.mdx)%20but%20only%20returns%20the%20**deployed**%20bytecode%20(aka%20runtime%0Abytecode)%20for%20a%20contract%20in%20the%20project%20given%20the%20path%20to%20the%20contract.%0A%0AThe%20main%20use%20case%20for%20this%20cheat%20code%20is%20as%20a%20shortcut%20to%20deploy%20stateless%20contracts%20to%20arbitrary%20addresses.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%0A%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20%60getDeployedCode%60%20requires%20read%20permission%20for%20the%20output%20directory%2C%20see%20%5Bfile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%3E%0A%3E%20To%20grant%20read%20access%20set%20%60fs_permissions%20%3D%20%5B%7B%20access%20%3D%20%22read%22%2C%20path%20%3D%20%22.%2Fout%22%7D%5D%60%20in%20your%20%60foundry.toml%60.%0A%0A%23%23%23%20Examples%0A%0ADeploy%20a%20stateless%20contract%20at%20an%20arbitrary%20address%20using%20%60getDeployedCode%60%20and%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx).%0A%0A%60%60%60solidity%0A%2F%2F%20A%20stateless%20contract%20that%20we%20want%20deployed%20at%20a%20specific%20address%0Acontract%20Override%20%7B%0A%20%20%20%20event%20Payload(address%20sender%2C%20address%20target%2C%20bytes%20data)%3B%0A%0A%20%20%20%20function%20emitPayload(%0A%20%20%20%20%20%20%20%20address%20target%2C%20bytes%20calldata%20message%0A%20%20%20%20)%20external%20payable%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20emit%20Payload(msg.sender%2C%20target%2C%20message)%3B%0A%20%20%20%20%20%20%20%20return%200%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%2F%2F%20get%20the%20**deployedBytecode**%0Abytes%20memory%20code%20%3D%20vm.getDeployedCode(%22Override.sol%3AOverride%22)%3B%0A%0A%2F%2F%20set%20the%20code%20of%20an%20arbitrary%20address%0Aaddress%20overrideAddress%20%3D%20address(64)%3B%0Avm.etch(overrideAddress%2C%20code)%3B%0AassertEq(overrideAddress.code%2C%20code)%3B%0A%60%60%60%0A%0A%23%23%23%20Supported%20formats%0A%0AYou%20can%20fetch%20artifacts%20by%20either%20contract%20path%20or%20contract%20name.%20Fetching%20artifacts%20for%20a%20specific%20version%20is%20also%20supported.%20If%20not%20provided%2C%20cheatcode%20will%20default%20to%20the%20version%20of%20a%20test%20being%20executed%20or%20the%20only%20version%20artifact%20was%20compiled%20with.%0A%0A%60%60%60solidity%0Avm.getDeployedCode(%22MyContract.sol%3AMyContract%22)%3B%0Avm.getDeployedCode(%22MyContract%22)%3B%0Avm.getDeployedCode(%22MyContract.sol%3A0.8.18%22)%3B%0Avm.getDeployedCode(%22MyContract%3A0.8.18%22)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60getCode%60%5D(%2Freference%2Fcheatcodes%2Fget-code.mdx)%0A%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%0A%0A%5Bforge-std%5D%3A%20..%2Freference%2Fforge-std%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-label-CXMC0PXV.js"),__vite__mapDeps([280,1])),path:"/reference/cheatcodes/get-label",type:"mdx",filePath:"reference/cheatcodes/get-label.mdx",content:"%23%23%20%60getLabel%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getLabel(address)%20external%20returns%20(string%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARetrieves%20the%20label%20for%20an%20address%20if%20it%20was%20previously%20labeled.%20If%20not%2C%20it%20returns%20the%20address%20prefixed%20with%20%60unlabeled%3A%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-label-CXMC0PXV.js"),__vite__mapDeps([280,1])),path:"/reference/cheatcodes/get-label.html",type:"mdx",filePath:"reference/cheatcodes/get-label.mdx",content:"%23%23%20%60getLabel%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getLabel(address)%20external%20returns%20(string%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARetrieves%20the%20label%20for%20an%20address%20if%20it%20was%20previously%20labeled.%20If%20not%2C%20it%20returns%20the%20address%20prefixed%20with%20%60unlabeled%3A%60.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-nonce-BWAoJ26g.js"),__vite__mapDeps([281,1])),path:"/reference/cheatcodes/get-nonce",type:"mdx",filePath:"reference/cheatcodes/get-nonce.mdx",content:"%23%23%20%60getNonce%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getNonce(address%20account)%20external%20returns%20(uint64)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20getNonce(Wallet%20memory%20wallet)%20external%20returns%20(uint64)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20nonce%20of%20the%20given%20account%20or%20%5BWallet%5D(%2Freference%2Fcheatcodes%2Fcreate-wallet.mdx).%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20%60address%60%0A%0A%60%60%60solidity%0Auint256%20nonce%20%3D%20vm.getNonce(address(100))%3B%0Aemit%20log_uint(nonce)%3B%20%2F%2F%200%0A%60%60%60%0A%0A%23%23%23%23%20%60Wallet%60%0A%0A%60%60%60solidity%0AWallet%20memory%20alice%20%3D%20vm.createWallet(%22alice%22)%3B%0Auint256%20nonce%20%3D%20vm.getNonce(alice)%3B%0Aemit%20log_uint(nonce)%3B%20%2F%2F%200%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-nonce-BWAoJ26g.js"),__vite__mapDeps([281,1])),path:"/reference/cheatcodes/get-nonce.html",type:"mdx",filePath:"reference/cheatcodes/get-nonce.mdx",content:"%23%23%20%60getNonce%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20getNonce(address%20account)%20external%20returns%20(uint64)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20getNonce(Wallet%20memory%20wallet)%20external%20returns%20(uint64)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20nonce%20of%20the%20given%20account%20or%20%5BWallet%5D(%2Freference%2Fcheatcodes%2Fcreate-wallet.mdx).%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20%60address%60%0A%0A%60%60%60solidity%0Auint256%20nonce%20%3D%20vm.getNonce(address(100))%3B%0Aemit%20log_uint(nonce)%3B%20%2F%2F%200%0A%60%60%60%0A%0A%23%23%23%23%20%60Wallet%60%0A%0A%60%60%60solidity%0AWallet%20memory%20alice%20%3D%20vm.createWallet(%22alice%22)%3B%0Auint256%20nonce%20%3D%20vm.getNonce(alice)%3B%0Aemit%20log_uint(nonce)%3B%20%2F%2F%200%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-recorded-logs-BA1nIY_s.js"),__vite__mapDeps([282,1])),path:"/reference/cheatcodes/get-recorded-logs",type:"mdx",filePath:"reference/cheatcodes/get-recorded-logs.mdx",content:"%23%23%20%60getRecordedLogs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Astruct%20Log%20%7B%0A%20%20bytes32%5B%5D%20topics%3B%0A%20%20bytes%20data%3B%0A%20%20address%20emitter%3B%0A%7D%0A%0Afunction%20getRecordedLogs()%0Aexternal%0Areturns%20(%0A%20%20Log%5B%5D%20memory%0A)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20emitted%20events%20recorded%20by%20%5B%60recordLogs%60%5D(%2Freference%2Fcheatcodes%2Frecord-logs.mdx).%0A%0AThis%20function%20will%20consume%20the%20recorded%20logs%20when%20called.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20event%20LogTopic1(%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic1%2C%0A%2F%2F%2F%20%20%20bytes%20data%0A%2F%2F%2F%20)%3B%0A%0A%2F%2F%2F%20event%20LogTopic12(%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic1%2C%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic2%2C%0A%2F%2F%2F%20%20%20bytes%20data%0A%2F%2F%2F%20)%3B%0A%0A%2F%2F%2F%20bytes%20memory%20testData0%20%3D%20%22Some%20data%22%3B%0A%2F%2F%2F%20bytes%20memory%20testData1%20%3D%20%22Other%20data%22%3B%0A%0A%0A%2F%2F%20Start%20the%20recorder%0Avm.recordLogs()%3B%0A%0Aemit%20LogTopic1(10%2C%20testData0)%3B%0Aemit%20LogTopic12(20%2C%2030%2C%20testData1)%3B%0A%0A%2F%2F%20Notice%20that%20your%20entries%20are%20%3CInterface%3E.Log%5B%5D%0A%2F%2F%20as%20opposed%20to%20%3Cinstance%3E.Log%5B%5D%0AVm.Log%5B%5D%20memory%20entries%20%3D%20vm.getRecordedLogs()%3B%0A%0AassertEq(entries.length%2C%202)%3B%0A%0A%2F%2F%20Recall%20that%20topics%5B0%5D%20is%20the%20event%20signature%0AassertEq(entries%5B0%5D.topics.length%2C%202)%3B%0AassertEq(entries%5B0%5D.topics%5B0%5D%2C%20keccak256(%22LogTopic1(uint256%2Cbytes)%22))%3B%0AassertEq(entries%5B0%5D.topics%5B1%5D%2C%20bytes32(uint256(10)))%3B%0A%2F%2F%20assertEq%20won't%20compare%20bytes%20variables.%20Try%20with%20strings%20instead.%0AassertEq(abi.decode(entries%5B0%5D.data%2C%20(string))%2C%20string(testData0))%3B%0A%0AassertEq(entries%5B1%5D.topics.length%2C%203)%3B%0AassertEq(entries%5B1%5D.topics%5B0%5D%2C%20keccak256(%22LogTopic12(uint256%2Cuint256%2Cbytes)%22))%3B%0AassertEq(entries%5B1%5D.topics%5B1%5D%2C%20bytes32(uint256(20)))%3B%0AassertEq(entries%5B1%5D.topics%5B2%5D%2C%20bytes32(uint256(30)))%3B%0AassertEq(abi.decode(entries%5B1%5D.data%2C%20(string))%2C%20string(testData1))%3B%0A%0A%2F%2F%20Emit%20another%20event%0Aemit%20LogTopic1(40%2C%20testData0)%3B%0A%0A%2F%2F%20Your%20last%20read%20consumed%20the%20recorded%20logs%2C%0A%2F%2F%20you%20will%20only%20get%20the%20latest%20emitted%20even%20after%20that%20call%0Aentries%20%3D%20vm.getRecordedLogs()%3B%0A%0AassertEq(entries.length%2C%201)%3B%0A%0AassertEq(entries%5B0%5D.topics.length%2C%202)%3B%0AassertEq(entries%5B0%5D.topics%5B0%5D%2C%20keccak256(%22LogTopic1(uint256%2Cbytes)%22))%3B%0AassertEq(entries%5B0%5D.topics%5B1%5D%2C%20bytes32(uint256(40)))%3B%0AassertEq(abi.decode(entries%5B0%5D.data%2C%20(string))%2C%20string(testData0))%3B%0A%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./get-recorded-logs-BA1nIY_s.js"),__vite__mapDeps([282,1])),path:"/reference/cheatcodes/get-recorded-logs.html",type:"mdx",filePath:"reference/cheatcodes/get-recorded-logs.mdx",content:"%23%23%20%60getRecordedLogs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Astruct%20Log%20%7B%0A%20%20bytes32%5B%5D%20topics%3B%0A%20%20bytes%20data%3B%0A%20%20address%20emitter%3B%0A%7D%0A%0Afunction%20getRecordedLogs()%0Aexternal%0Areturns%20(%0A%20%20Log%5B%5D%20memory%0A)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20the%20emitted%20events%20recorded%20by%20%5B%60recordLogs%60%5D(%2Freference%2Fcheatcodes%2Frecord-logs.mdx).%0A%0AThis%20function%20will%20consume%20the%20recorded%20logs%20when%20called.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20event%20LogTopic1(%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic1%2C%0A%2F%2F%2F%20%20%20bytes%20data%0A%2F%2F%2F%20)%3B%0A%0A%2F%2F%2F%20event%20LogTopic12(%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic1%2C%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic2%2C%0A%2F%2F%2F%20%20%20bytes%20data%0A%2F%2F%2F%20)%3B%0A%0A%2F%2F%2F%20bytes%20memory%20testData0%20%3D%20%22Some%20data%22%3B%0A%2F%2F%2F%20bytes%20memory%20testData1%20%3D%20%22Other%20data%22%3B%0A%0A%0A%2F%2F%20Start%20the%20recorder%0Avm.recordLogs()%3B%0A%0Aemit%20LogTopic1(10%2C%20testData0)%3B%0Aemit%20LogTopic12(20%2C%2030%2C%20testData1)%3B%0A%0A%2F%2F%20Notice%20that%20your%20entries%20are%20%3CInterface%3E.Log%5B%5D%0A%2F%2F%20as%20opposed%20to%20%3Cinstance%3E.Log%5B%5D%0AVm.Log%5B%5D%20memory%20entries%20%3D%20vm.getRecordedLogs()%3B%0A%0AassertEq(entries.length%2C%202)%3B%0A%0A%2F%2F%20Recall%20that%20topics%5B0%5D%20is%20the%20event%20signature%0AassertEq(entries%5B0%5D.topics.length%2C%202)%3B%0AassertEq(entries%5B0%5D.topics%5B0%5D%2C%20keccak256(%22LogTopic1(uint256%2Cbytes)%22))%3B%0AassertEq(entries%5B0%5D.topics%5B1%5D%2C%20bytes32(uint256(10)))%3B%0A%2F%2F%20assertEq%20won't%20compare%20bytes%20variables.%20Try%20with%20strings%20instead.%0AassertEq(abi.decode(entries%5B0%5D.data%2C%20(string))%2C%20string(testData0))%3B%0A%0AassertEq(entries%5B1%5D.topics.length%2C%203)%3B%0AassertEq(entries%5B1%5D.topics%5B0%5D%2C%20keccak256(%22LogTopic12(uint256%2Cuint256%2Cbytes)%22))%3B%0AassertEq(entries%5B1%5D.topics%5B1%5D%2C%20bytes32(uint256(20)))%3B%0AassertEq(entries%5B1%5D.topics%5B2%5D%2C%20bytes32(uint256(30)))%3B%0AassertEq(abi.decode(entries%5B1%5D.data%2C%20(string))%2C%20string(testData1))%3B%0A%0A%2F%2F%20Emit%20another%20event%0Aemit%20LogTopic1(40%2C%20testData0)%3B%0A%0A%2F%2F%20Your%20last%20read%20consumed%20the%20recorded%20logs%2C%0A%2F%2F%20you%20will%20only%20get%20the%20latest%20emitted%20even%20after%20that%20call%0Aentries%20%3D%20vm.getRecordedLogs()%3B%0A%0AassertEq(entries.length%2C%201)%3B%0A%0AassertEq(entries%5B0%5D.topics.length%2C%202)%3B%0AassertEq(entries%5B0%5D.topics%5B0%5D%2C%20keccak256(%22LogTopic1(uint256%2Cbytes)%22))%3B%0AassertEq(entries%5B0%5D.topics%5B1%5D%2C%20bytes32(uint256(40)))%3B%0AassertEq(abi.decode(entries%5B0%5D.data%2C%20(string))%2C%20string(testData0))%3B%0A%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./is-context-DvduE3uK.js"),__vite__mapDeps([283,1])),path:"/reference/cheatcodes/is-context",type:"mdx",filePath:"reference/cheatcodes/is-context.mdx",content:"%23%23%20%60isContext%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Aenum%20ForgeContext%20%7B%0A%20%20%20%20%2F%2F%20Test%20group%20execution%20context%20(test%2C%20coverage%20or%20snapshot).%0A%20%20%20%20TestGroup%2C%0A%20%20%20%20%2F%2F%20%60forge%20test%60%20execution%20context.%0A%20%20%20%20Test%2C%0A%20%20%20%20%2F%2F%20%60forge%20coverage%60%20execution%20context.%0A%20%20%20%20Coverage%2C%0A%20%20%20%20%2F%2F%20%60forge%20snapshot%60%20execution%20context.%0A%20%20%20%20Snapshot%2C%0A%20%20%20%20%2F%2F%20Script%20group%20execution%20context%20(dry%20run%2C%20broadcast%20or%20resume).%0A%20%20%20%20ScriptGroup%2C%0A%20%20%20%20%2F%2F%20%60forge%20script%60%20execution%20context.%0A%20%20%20%20ScriptDryRun%2C%0A%20%20%20%20%2F%2F%20%60forge%20script%20--broadcast%60%20execution%20context.%0A%20%20%20%20ScriptBroadcast%2C%0A%20%20%20%20%2F%2F%20%60forge%20script%20--resume%60%20execution%20context.%0A%20%20%20%20ScriptResume%2C%0A%20%20%20%20%2F%2F%20Unknown%20%60forge%60%20execution%20context.%0A%20%20%20%20Unknown%0A%7D%0A%0Afunction%20isContext(ForgeContext%20context)%20external%20view%20returns%20(bool%20result)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20the%20current%20%60forge%60%20execution%20context.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aimport%20%7BVmSafe%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%0Aif%20(vm.isContext(VmSafe.ForgeContext.ScriptDryRun))%20%7B%0A%20%20%20%20%2F%2F%20execute%20specific%20script%20dry%20run%20logic%0A%7D%0A%0Aif%20(vm.isContext(VmSafe.ForgeContext.ScriptBroadcast))%20%7B%0A%20%20%20%20%2F%2F%20execute%20specific%20script%20broadcast%20logic%0A%7D%0A%0Aif%20(vm.isContext(VmSafe.ForgeContext.ScriptResume))%20%7B%0A%20%20%20%20%2F%2F%20execute%20specific%20script%20resume%20logic%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./is-context-DvduE3uK.js"),__vite__mapDeps([283,1])),path:"/reference/cheatcodes/is-context.html",type:"mdx",filePath:"reference/cheatcodes/is-context.mdx",content:"%23%23%20%60isContext%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Aenum%20ForgeContext%20%7B%0A%20%20%20%20%2F%2F%20Test%20group%20execution%20context%20(test%2C%20coverage%20or%20snapshot).%0A%20%20%20%20TestGroup%2C%0A%20%20%20%20%2F%2F%20%60forge%20test%60%20execution%20context.%0A%20%20%20%20Test%2C%0A%20%20%20%20%2F%2F%20%60forge%20coverage%60%20execution%20context.%0A%20%20%20%20Coverage%2C%0A%20%20%20%20%2F%2F%20%60forge%20snapshot%60%20execution%20context.%0A%20%20%20%20Snapshot%2C%0A%20%20%20%20%2F%2F%20Script%20group%20execution%20context%20(dry%20run%2C%20broadcast%20or%20resume).%0A%20%20%20%20ScriptGroup%2C%0A%20%20%20%20%2F%2F%20%60forge%20script%60%20execution%20context.%0A%20%20%20%20ScriptDryRun%2C%0A%20%20%20%20%2F%2F%20%60forge%20script%20--broadcast%60%20execution%20context.%0A%20%20%20%20ScriptBroadcast%2C%0A%20%20%20%20%2F%2F%20%60forge%20script%20--resume%60%20execution%20context.%0A%20%20%20%20ScriptResume%2C%0A%20%20%20%20%2F%2F%20Unknown%20%60forge%60%20execution%20context.%0A%20%20%20%20Unknown%0A%7D%0A%0Afunction%20isContext(ForgeContext%20context)%20external%20view%20returns%20(bool%20result)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20the%20current%20%60forge%60%20execution%20context.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aimport%20%7BVmSafe%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%0Aif%20(vm.isContext(VmSafe.ForgeContext.ScriptDryRun))%20%7B%0A%20%20%20%20%2F%2F%20execute%20specific%20script%20dry%20run%20logic%0A%7D%0A%0Aif%20(vm.isContext(VmSafe.ForgeContext.ScriptBroadcast))%20%7B%0A%20%20%20%20%2F%2F%20execute%20specific%20script%20broadcast%20logic%0A%7D%0A%0Aif%20(vm.isContext(VmSafe.ForgeContext.ScriptResume))%20%7B%0A%20%20%20%20%2F%2F%20execute%20specific%20script%20resume%20logic%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./is-persistent-DxTW8-y9.js"),__vite__mapDeps([284,1])),path:"/reference/cheatcodes/is-persistent",type:"mdx",filePath:"reference/cheatcodes/is-persistent.mdx",content:"%23%23%20%60isPersistent%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20isPersistent(address)%20external%20returns%20(bool)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20whether%20an%20account%20is%20marked%20as%20persistent%20(%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)).%0A%0A%23%23%23%20Examples%0A%0ACheck%20default%20status%20of%20%60msg.sender%60%20and%20the%20current%20test%20account%0A%0A%60%60%60solidity%0A%2F%2F%20By%20default%20the%20%60sender%60%20and%20the%20test%20contract%20itself%20are%20persistent%0Aassert(cheats.isPersistent(msg.sender))%3B%0Aassert(cheats.isPersistent(address(this)))%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BmakePersistent%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)%0A-%20%5BrevokePersistent%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./is-persistent-DxTW8-y9.js"),__vite__mapDeps([284,1])),path:"/reference/cheatcodes/is-persistent.html",type:"mdx",filePath:"reference/cheatcodes/is-persistent.mdx",content:"%23%23%20%60isPersistent%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20isPersistent(address)%20external%20returns%20(bool)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20whether%20an%20account%20is%20marked%20as%20persistent%20(%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)).%0A%0A%23%23%23%20Examples%0A%0ACheck%20default%20status%20of%20%60msg.sender%60%20and%20the%20current%20test%20account%0A%0A%60%60%60solidity%0A%2F%2F%20By%20default%20the%20%60sender%60%20and%20the%20test%20contract%20itself%20are%20persistent%0Aassert(cheats.isPersistent(msg.sender))%3B%0Aassert(cheats.isPersistent(address(this)))%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BmakePersistent%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)%0A-%20%5BrevokePersistent%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-exists-json-B6FG_ODZ.js"),__vite__mapDeps([285,1])),path:"/reference/cheatcodes/key-exists-json",type:"mdx",filePath:"reference/cheatcodes/key-exists-json.mdx",content:"%23%23%20%60keyExistsJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Check%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0Avm.keyExistsJson(string%20memory%20json%2C%20string%20memory%20key)%20returns%20(bool)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22.%2Fpath%2Fto%2Fjsonfile.json%22%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abool%20exists%20%3D%20vm.keyExistsJson(json%2C%20%22.key%22)%3B%0AassertTrue(exists)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-exists-json-B6FG_ODZ.js"),__vite__mapDeps([285,1])),path:"/reference/cheatcodes/key-exists-json.html",type:"mdx",filePath:"reference/cheatcodes/key-exists-json.mdx",content:"%23%23%20%60keyExistsJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Check%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0Avm.keyExistsJson(string%20memory%20json%2C%20string%20memory%20key)%20returns%20(bool)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22.%2Fpath%2Fto%2Fjsonfile.json%22%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abool%20exists%20%3D%20vm.keyExistsJson(json%2C%20%22.key%22)%3B%0AassertTrue(exists)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-exists-toml-DgBBK2kz.js"),__vite__mapDeps([286,1])),path:"/reference/cheatcodes/key-exists-toml",type:"mdx",filePath:"reference/cheatcodes/key-exists-toml.mdx",content:"%23%23%20%60keyExistsToml%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Check%20if%20a%20key%20exists%20in%20a%20TOML%20table.%0Avm.keyExistsToml(string%20memory%20toml%2C%20string%20memory%20key)%20returns%20(bool)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20if%20a%20key%20exists%20in%20a%20TOML%20table.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22.%2Fpath%2Fto%2Ftomlfile.toml%22%3B%0Astring%20memory%20toml%20%3D%20vm.readFile(path)%3B%0Abool%20exists%20%3D%20vm.keyExistsToml(toml%2C%20%22.key%22)%3B%0AassertTrue(exists)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-exists-toml-DgBBK2kz.js"),__vite__mapDeps([286,1])),path:"/reference/cheatcodes/key-exists-toml.html",type:"mdx",filePath:"reference/cheatcodes/key-exists-toml.mdx",content:"%23%23%20%60keyExistsToml%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Check%20if%20a%20key%20exists%20in%20a%20TOML%20table.%0Avm.keyExistsToml(string%20memory%20toml%2C%20string%20memory%20key)%20returns%20(bool)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20if%20a%20key%20exists%20in%20a%20TOML%20table.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22.%2Fpath%2Fto%2Ftomlfile.toml%22%3B%0Astring%20memory%20toml%20%3D%20vm.readFile(path)%3B%0Abool%20exists%20%3D%20vm.keyExistsToml(toml%2C%20%22.key%22)%3B%0AassertTrue(exists)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-exists-CNsZBZv8.js"),__vite__mapDeps([287,1])),path:"/reference/cheatcodes/key-exists",type:"mdx",filePath:"reference/cheatcodes/key-exists.mdx",content:"%23%23%20%60keyExists%60%0A%0A%23%23%23%20Status%0A%0A%60keyExists%60%20is%20being%20deprecated%20in%20favor%20of%20%60keyExistsJson%60.%20It%20will%20be%20removed%20in%20future%20versions.%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Check%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0Avm.keyExists(string%20memory%20json%2C%20string%20memory%20key)%20returns%20(bool)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22.%2Fpath%2Fto%2Fjsonfile.json%22%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abool%20exists%20%3D%20vm.keyExists(json%2C%20%22.key%22)%3B%0AassertTrue(exists)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./key-exists-CNsZBZv8.js"),__vite__mapDeps([287,1])),path:"/reference/cheatcodes/key-exists.html",type:"mdx",filePath:"reference/cheatcodes/key-exists.mdx",content:"%23%23%20%60keyExists%60%0A%0A%23%23%23%20Status%0A%0A%60keyExists%60%20is%20being%20deprecated%20in%20favor%20of%20%60keyExistsJson%60.%20It%20will%20be%20removed%20in%20future%20versions.%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Check%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0Avm.keyExists(string%20memory%20json%2C%20string%20memory%20key)%20returns%20(bool)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AChecks%20if%20a%20key%20exists%20in%20a%20JSON%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20path%20%3D%20%22.%2Fpath%2Fto%2Fjsonfile.json%22%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abool%20exists%20%3D%20vm.keyExists(json%2C%20%22.key%22)%3B%0AassertTrue(exists)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./label-C9b9y2Cr.js"),__vite__mapDeps([288,1])),path:"/reference/cheatcodes/label",type:"mdx",filePath:"reference/cheatcodes/label.mdx",content:"%23%23%20%60label%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20label(address%20addr%2C%20string%20calldata%20label)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20a%20label%20%60label%60%20for%20%60addr%60%20in%20test%20traces.%0A%0AIf%20an%20address%20is%20labelled%2C%20the%20label%20will%20show%20up%20in%20test%20traces%20instead%20of%20the%20address.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./label-C9b9y2Cr.js"),__vite__mapDeps([288,1])),path:"/reference/cheatcodes/label.html",type:"mdx",filePath:"reference/cheatcodes/label.mdx",content:"%23%23%20%60label%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20label(address%20addr%2C%20string%20calldata%20label)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20a%20label%20%60label%60%20for%20%60addr%60%20in%20test%20traces.%0A%0AIf%20an%20address%20is%20labelled%2C%20the%20label%20will%20show%20up%20in%20test%20traces%20instead%20of%20the%20address.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./load-RBh_TRgP.js"),__vite__mapDeps([289,1])),path:"/reference/cheatcodes/load",type:"mdx",filePath:"reference/cheatcodes/load.mdx",content:"%23%23%20%60load%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20load(address%20account%2C%20bytes32%20slot)%20external%20returns%20(bytes32)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ALoads%20the%20value%20from%20storage%20slot%20%60slot%60%20on%20account%20%60account%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20LeetContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20private%20leet%20%3D%201337%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%7D%0A%0Abytes32%20leet%20%3D%20vm.load(address(leetContract)%2C%20bytes32(uint256(0)))%3B%0Aemit%20log_uint(uint256(leet))%3B%20%2F%2F%201337%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Storage%5D(%2Freference%2Fforge-std%2Fstd-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./load-RBh_TRgP.js"),__vite__mapDeps([289,1])),path:"/reference/cheatcodes/load.html",type:"mdx",filePath:"reference/cheatcodes/load.mdx",content:"%23%23%20%60load%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20load(address%20account%2C%20bytes32%20slot)%20external%20returns%20(bytes32)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ALoads%20the%20value%20from%20storage%20slot%20%60slot%60%20on%20account%20%60account%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20LeetContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20private%20leet%20%3D%201337%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%7D%0A%0Abytes32%20leet%20%3D%20vm.load(address(leetContract)%2C%20bytes32(uint256(0)))%3B%0Aemit%20log_uint(uint256(leet))%3B%20%2F%2F%201337%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Storage%5D(%2Freference%2Fforge-std%2Fstd-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./make-persistent-l4oa3KgW.js"),__vite__mapDeps([290,1])),path:"/reference/cheatcodes/make-persistent",type:"mdx",filePath:"reference/cheatcodes/make-persistent.mdx",content:"%23%23%20%60makePersistent%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20makePersistent(address%20account)%20external%3B%0Afunction%20makePersistent(address%20account0%2C%20address%20account1)%20external%3B%0Afunction%20makePersistent(address%20account0%2C%20address%20account1%2C%20address%20account2)%20external%3B%0Afunction%20makePersistent(address%5B%5D%20calldata%20accounts)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AEach%20fork%20(%5B%60createFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx))%20has%20its%20own%20independent%20storage%2C%20which%20is%20also%20replaced%20when%20another%20fork%20is%20selected%20(%5B%60selectFork%60%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)).%0ABy%20default%2C%20only%20the%20test%20contract%20account%20and%20the%20caller%20are%20persistent%20across%20forks%2C%20which%20means%20that%20changes%20to%20the%20state%20of%20the%20test%20contract%20(variables)%20are%20preserved%20when%20different%20forks%20are%20selected.%20This%20way%20data%20can%20be%20shared%20by%20storing%20it%20in%20the%20contract's%20variables.%0A%0AHowever%2C%20with%20this%20cheatcode%2C%20it%20is%20possible%20to%20mark%20the%20specified%20accounts%20as%20persistent%2C%20which%20means%20that%20their%20state%20is%20available%20regardless%20of%20which%20fork%20is%20currently%20active.%0A%0A%23%23%23%20Examples%0A%0AMark%20a%20new%20contract%20as%20persistent%0A%0A%60%60%60solidity%0Acontract%20SimpleStorageContract%20%7B%0A%20%20%20%20string%20public%20value%3B%0A%0A%20%20%20%20function%20set(uint256%20_value)%20public%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20_value%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afunction%20testMarkPersistent()%20public%20%7B%0A%20%20%20%20%2F%2F%20by%20default%20the%20%60sender%60%20and%20the%20contract%20itself%20are%20persistent%0A%20%20%20%20assert(cheats.isPersistent(msg.sender))%3B%0A%20%20%20%20assert(cheats.isPersistent(address(this)))%3B%0A%0A%20%20%20%20%2F%2F%20select%20a%20specific%20fork%0A%20%20%20%20cheats.selectFork(mainnetFork)%3B%0A%0A%20%20%20%20%2F%2F%20create%20a%20new%20contract%20that's%20stored%20in%20the%20%60mainnetFork%60%20storage%0A%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%0A%20%20%20%20%2F%2F%20%60simple%60%20is%20not%20marked%20as%20persistent%0A%20%20%20%20assert(!cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20contract%20can%20be%20used%0A%20%20%20%20uint256%20expectedValue%20%3D%2099%3B%0A%20%20%20%20simple.set(expectedValue)%3B%0A%20%20%20%20assertEq(simple.value()%2C%20expectedValue)%3B%0A%0A%20%20%20%20%2F%2F%20mark%20as%20persistent%0A%20%20%20%20cheats.makePersistent(address(simple))%3B%0A%0A%20%20%20%20%2F%2F%20select%20a%20different%20fork%0A%20%20%20%20cheats.selectFork(optimismFork)%3B%0A%0A%20%20%20%20%2F%2F%20ensure%20contract%20is%20still%20persistent%0A%20%20%20%20assert(cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20value%20is%20set%20as%20expected%0A%20%20%20%20assertEq(simple.value()%2C%20expectedValue)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BisPersistent%5D(%2Freference%2Fcheatcodes%2Fis-persistent.mdx)%0A-%20%5BrevokePersistent%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./make-persistent-l4oa3KgW.js"),__vite__mapDeps([290,1])),path:"/reference/cheatcodes/make-persistent.html",type:"mdx",filePath:"reference/cheatcodes/make-persistent.mdx",content:"%23%23%20%60makePersistent%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20makePersistent(address%20account)%20external%3B%0Afunction%20makePersistent(address%20account0%2C%20address%20account1)%20external%3B%0Afunction%20makePersistent(address%20account0%2C%20address%20account1%2C%20address%20account2)%20external%3B%0Afunction%20makePersistent(address%5B%5D%20calldata%20accounts)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AEach%20fork%20(%5B%60createFork%60%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx))%20has%20its%20own%20independent%20storage%2C%20which%20is%20also%20replaced%20when%20another%20fork%20is%20selected%20(%5B%60selectFork%60%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)).%0ABy%20default%2C%20only%20the%20test%20contract%20account%20and%20the%20caller%20are%20persistent%20across%20forks%2C%20which%20means%20that%20changes%20to%20the%20state%20of%20the%20test%20contract%20(variables)%20are%20preserved%20when%20different%20forks%20are%20selected.%20This%20way%20data%20can%20be%20shared%20by%20storing%20it%20in%20the%20contract's%20variables.%0A%0AHowever%2C%20with%20this%20cheatcode%2C%20it%20is%20possible%20to%20mark%20the%20specified%20accounts%20as%20persistent%2C%20which%20means%20that%20their%20state%20is%20available%20regardless%20of%20which%20fork%20is%20currently%20active.%0A%0A%23%23%23%20Examples%0A%0AMark%20a%20new%20contract%20as%20persistent%0A%0A%60%60%60solidity%0Acontract%20SimpleStorageContract%20%7B%0A%20%20%20%20string%20public%20value%3B%0A%0A%20%20%20%20function%20set(uint256%20_value)%20public%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20_value%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afunction%20testMarkPersistent()%20public%20%7B%0A%20%20%20%20%2F%2F%20by%20default%20the%20%60sender%60%20and%20the%20contract%20itself%20are%20persistent%0A%20%20%20%20assert(cheats.isPersistent(msg.sender))%3B%0A%20%20%20%20assert(cheats.isPersistent(address(this)))%3B%0A%0A%20%20%20%20%2F%2F%20select%20a%20specific%20fork%0A%20%20%20%20cheats.selectFork(mainnetFork)%3B%0A%0A%20%20%20%20%2F%2F%20create%20a%20new%20contract%20that's%20stored%20in%20the%20%60mainnetFork%60%20storage%0A%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%0A%20%20%20%20%2F%2F%20%60simple%60%20is%20not%20marked%20as%20persistent%0A%20%20%20%20assert(!cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20contract%20can%20be%20used%0A%20%20%20%20uint256%20expectedValue%20%3D%2099%3B%0A%20%20%20%20simple.set(expectedValue)%3B%0A%20%20%20%20assertEq(simple.value()%2C%20expectedValue)%3B%0A%0A%20%20%20%20%2F%2F%20mark%20as%20persistent%0A%20%20%20%20cheats.makePersistent(address(simple))%3B%0A%0A%20%20%20%20%2F%2F%20select%20a%20different%20fork%0A%20%20%20%20cheats.selectFork(optimismFork)%3B%0A%0A%20%20%20%20%2F%2F%20ensure%20contract%20is%20still%20persistent%0A%20%20%20%20assert(cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20value%20is%20set%20as%20expected%0A%20%20%20%20assertEq(simple.value()%2C%20expectedValue)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BisPersistent%5D(%2Freference%2Fcheatcodes%2Fis-persistent.mdx)%0A-%20%5BrevokePersistent%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-call-revert-FO51qUWo.js"),__vite__mapDeps([291,1])),path:"/reference/cheatcodes/mock-call-revert",type:"mdx",filePath:"reference/cheatcodes/mock-call-revert.mdx",content:"%23%23%20%60mockCallRevert%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockCallRevert(address%20where%2C%20bytes%20calldata%20data%2C%20bytes%20calldata%20retdata)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20mockCallRevert(%0A%20%20%20%20address%20where%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20bytes%20calldata%20retdata%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReverts%20all%20calls%20to%20an%20address%20%60where%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60%20and%20returns%20%60retdata%60.%0A%0A%60retdata%60%20can%20be%20a%20raw%20return%20message%20or%20a%20custom%20error.%0A%0AWhen%20a%20call%20is%20made%20to%20%60where%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%0AIf%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%2C%20with%20the%20match%20starting%20at%20the%20first%20byte%20of%20the%20call%20data.%0A%0AIf%20a%20match%20is%20found%2C%20then%20the%20call%20is%20reverted%20and%20%60retdata%60%20is%20returned.%0A%0A**Using%20the%20second%20signature**%20we%20can%20mock%20the%20calls%20with%20a%20specific%20%60msg.value%60.%20%60Calldata%60%20match%20takes%20precedence%20over%20%60msg.value%60%20in%20case%20of%20ambiguity.%0A%0AReverted%20mock%20calls%20are%20in%20effect%20until%20%5B%60clearMockedCalls%60%5D(%2Freference%2Fcheatcodes%2Fclear-mocked-calls.mdx)%20is%20called.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Internal%20calls**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20on%20internal%20calls.%20See%20issue%20%5B%23432%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F432).%0A%0A%23%23%23%20Examples%0A%0AReverting%20an%20exact%20call%20with%20a%20raw%20error%20message%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallRevert()%20public%20%7B%0A%20%20%20%20vm.mockCallRevert(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20%22REVERT_MESSAGE%22%0A%20%20%20%20)%3B%0A%20%20%20%20vm.expectRevert(%22REVERT_MESSAGE%22)%3B%0A%20%20%20%20IERC20(address(0)).balanceOf(address(1))%3B%0A%7D%0A%60%60%60%0A%0AReverting%20a%20call%20with%20a%20custom%20error%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallRevertWithCustomError()%20public%20%7B%0A%20%20%20%20bytes%20memory%20customError%20%3D%20abi.encodeWithSelector(TestError.selector%2C%20%22ERROR_MESSAGE%22)%3B%0A%20%20%20%20vm.mockCallRevert(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20customError%0A%20%20%20%20)%3B%0A%20%20%20%20vm.expectRevert(customError)%3B%0A%20%20%20%20IERC20(address(0)).balanceOf(address(1))%3B%0A%7D%0A%60%60%60%0A%0AMocking%20a%20call%20with%20a%20given%20%60msg.value%60%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallRevertWithValue()%20public%20%7B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%201)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%20%20%20%20vm.mockCallRevert(%0A%20%20%20%20%20%20%20%20address(example)%2C%0A%20%20%20%20%20%20%20%2010%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(example.pay.selector)%2C%0A%20%20%20%20%20%20%20%20%22ERROR_MESSAGE%22%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%20%20%20%20vm.expectRevert(%22ERROR_MESSAGE%22)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%2099)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-call-revert-FO51qUWo.js"),__vite__mapDeps([291,1])),path:"/reference/cheatcodes/mock-call-revert.html",type:"mdx",filePath:"reference/cheatcodes/mock-call-revert.mdx",content:"%23%23%20%60mockCallRevert%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockCallRevert(address%20where%2C%20bytes%20calldata%20data%2C%20bytes%20calldata%20retdata)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20mockCallRevert(%0A%20%20%20%20address%20where%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20bytes%20calldata%20retdata%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReverts%20all%20calls%20to%20an%20address%20%60where%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60%20and%20returns%20%60retdata%60.%0A%0A%60retdata%60%20can%20be%20a%20raw%20return%20message%20or%20a%20custom%20error.%0A%0AWhen%20a%20call%20is%20made%20to%20%60where%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%0AIf%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%2C%20with%20the%20match%20starting%20at%20the%20first%20byte%20of%20the%20call%20data.%0A%0AIf%20a%20match%20is%20found%2C%20then%20the%20call%20is%20reverted%20and%20%60retdata%60%20is%20returned.%0A%0A**Using%20the%20second%20signature**%20we%20can%20mock%20the%20calls%20with%20a%20specific%20%60msg.value%60.%20%60Calldata%60%20match%20takes%20precedence%20over%20%60msg.value%60%20in%20case%20of%20ambiguity.%0A%0AReverted%20mock%20calls%20are%20in%20effect%20until%20%5B%60clearMockedCalls%60%5D(%2Freference%2Fcheatcodes%2Fclear-mocked-calls.mdx)%20is%20called.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Internal%20calls**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20on%20internal%20calls.%20See%20issue%20%5B%23432%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F432).%0A%0A%23%23%23%20Examples%0A%0AReverting%20an%20exact%20call%20with%20a%20raw%20error%20message%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallRevert()%20public%20%7B%0A%20%20%20%20vm.mockCallRevert(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20%22REVERT_MESSAGE%22%0A%20%20%20%20)%3B%0A%20%20%20%20vm.expectRevert(%22REVERT_MESSAGE%22)%3B%0A%20%20%20%20IERC20(address(0)).balanceOf(address(1))%3B%0A%7D%0A%60%60%60%0A%0AReverting%20a%20call%20with%20a%20custom%20error%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallRevertWithCustomError()%20public%20%7B%0A%20%20%20%20bytes%20memory%20customError%20%3D%20abi.encodeWithSelector(TestError.selector%2C%20%22ERROR_MESSAGE%22)%3B%0A%20%20%20%20vm.mockCallRevert(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20customError%0A%20%20%20%20)%3B%0A%20%20%20%20vm.expectRevert(customError)%3B%0A%20%20%20%20IERC20(address(0)).balanceOf(address(1))%3B%0A%7D%0A%60%60%60%0A%0AMocking%20a%20call%20with%20a%20given%20%60msg.value%60%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallRevertWithValue()%20public%20%7B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%201)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%20%20%20%20vm.mockCallRevert(%0A%20%20%20%20%20%20%20%20address(example)%2C%0A%20%20%20%20%20%20%20%2010%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(example.pay.selector)%2C%0A%20%20%20%20%20%20%20%20%22ERROR_MESSAGE%22%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%20%20%20%20vm.expectRevert(%22ERROR_MESSAGE%22)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%2099)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-call-B743-VGo.js"),__vite__mapDeps([292,1])),path:"/reference/cheatcodes/mock-call",type:"mdx",filePath:"reference/cheatcodes/mock-call.mdx",content:"%23%23%20%60mockCall%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockCall(address%20where%2C%20bytes%20calldata%20data%2C%20bytes%20calldata%20retdata)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20mockCall(%0A%20%20%20%20address%20where%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20bytes%20calldata%20retdata%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AMocks%20all%20calls%20to%20an%20address%20%60where%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60%20and%20returns%20%60retdata%60.%0A%0AWhen%20a%20call%20is%20made%20to%20%60where%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%0AIf%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%2C%20with%20the%20match%20starting%20at%20the%20first%20byte%20of%20the%20call%20data.%0A%0AIf%20a%20match%20is%20found%2C%20then%20%60retdata%60%20is%20returned%20from%20the%20call.%0A%0A**Using%20the%20second%20signature**%20we%20can%20mock%20the%20calls%20with%20a%20specific%20%60msg.value%60.%20%60Calldata%60%20match%20takes%20precedence%20over%20%60msg.value%60%20in%20case%20of%20ambiguity.%0A%0AMocked%20calls%20are%20in%20effect%20until%20%5B%60clearMockedCalls%60%5D(%2Freference%2Fcheatcodes%2Fclear-mocked-calls.mdx)%20is%20called.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Calls%20to%20mocked%20addresses%20may%20revert%20if%20there%20is%20no%20code%20on%20the%20address.%0A%3E%20This%20is%20because%20Solidity%20inserts%20an%20%60extcodesize%60%20check%20before%20some%20contract%20calls.%0A%3E%0A%3E%20To%20circumvent%20this%2C%20use%20the%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%20cheatcode%20if%20the%20mocked%20address%20has%20no%20code.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Internal%20calls**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20on%20internal%20calls.%20See%20issue%20%5B%23432%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F432).%0A%0A%23%23%23%20Examples%0A%0AMocking%20an%20exact%20call%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20abi.encode(10)%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20an%20entire%20function%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector)%2C%0A%20%20%20%20%20%20%20%20abi.encode(10)%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%2010)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(2))%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20a%20call%20with%20a%20given%20%60msg.value%60%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%201)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20address(example)%2C%0A%20%20%20%20%20%20%20%2010%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(example.pay.selector)%2C%0A%20%20%20%20%20%20%20%20abi.encode(99)%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%2099)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20a%20public%20variable%3A%0A%0A%60%60%60solidity%0Acontract%20Example%20%7B%0A%20%20%20%20uint256%20public%20number%20%3D%2010%3B%0A%7D%0A%0Acontract%20ExampleTest%20is%20Test%20%7B%0A%20%20%20%20Example%20public%20example%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20example%20%3D%20new%20Example()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testMockPublicVariable()%20public%20%7B%0A%20%20%20%20%20%20%20%20assertEq(example.number()%2C%2010)%3B%0A%20%20%20%20%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20%20%20%20%20address(example)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encodeWithSelector(bytes4(keccak256(%22number()%22)))%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encode(5)%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20assertEq(example.number()%2C%205)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-call-B743-VGo.js"),__vite__mapDeps([292,1])),path:"/reference/cheatcodes/mock-call.html",type:"mdx",filePath:"reference/cheatcodes/mock-call.mdx",content:"%23%23%20%60mockCall%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockCall(address%20where%2C%20bytes%20calldata%20data%2C%20bytes%20calldata%20retdata)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20mockCall(%0A%20%20%20%20address%20where%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20bytes%20calldata%20retdata%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AMocks%20all%20calls%20to%20an%20address%20%60where%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60%20and%20returns%20%60retdata%60.%0A%0AWhen%20a%20call%20is%20made%20to%20%60where%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%0AIf%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%2C%20with%20the%20match%20starting%20at%20the%20first%20byte%20of%20the%20call%20data.%0A%0AIf%20a%20match%20is%20found%2C%20then%20%60retdata%60%20is%20returned%20from%20the%20call.%0A%0A**Using%20the%20second%20signature**%20we%20can%20mock%20the%20calls%20with%20a%20specific%20%60msg.value%60.%20%60Calldata%60%20match%20takes%20precedence%20over%20%60msg.value%60%20in%20case%20of%20ambiguity.%0A%0AMocked%20calls%20are%20in%20effect%20until%20%5B%60clearMockedCalls%60%5D(%2Freference%2Fcheatcodes%2Fclear-mocked-calls.mdx)%20is%20called.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Calls%20to%20mocked%20addresses%20may%20revert%20if%20there%20is%20no%20code%20on%20the%20address.%0A%3E%20This%20is%20because%20Solidity%20inserts%20an%20%60extcodesize%60%20check%20before%20some%20contract%20calls.%0A%3E%0A%3E%20To%20circumvent%20this%2C%20use%20the%20%5B%60etch%60%5D(%2Freference%2Fcheatcodes%2Fetch.mdx)%20cheatcode%20if%20the%20mocked%20address%20has%20no%20code.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Internal%20calls**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20on%20internal%20calls.%20See%20issue%20%5B%23432%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry%2Fissues%2F432).%0A%0A%23%23%23%20Examples%0A%0AMocking%20an%20exact%20call%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20abi.encode(10)%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20an%20entire%20function%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(MyToken.balanceOf.selector)%2C%0A%20%20%20%20%20%20%20%20abi.encode(10)%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%2010)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(2))%2C%2010)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20a%20call%20with%20a%20given%20%60msg.value%60%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%201)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20address(example)%2C%0A%20%20%20%20%20%20%20%2010%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(example.pay.selector)%2C%0A%20%20%20%20%20%20%20%20abi.encode(99)%0A%20%20%20%20)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%2010%7D(1)%2C%2099)%3B%0A%20%20%20%20assertEq(example.pay%7Bvalue%3A%201%7D(2)%2C%202)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20a%20public%20variable%3A%0A%0A%60%60%60solidity%0Acontract%20Example%20%7B%0A%20%20%20%20uint256%20public%20number%20%3D%2010%3B%0A%7D%0A%0Acontract%20ExampleTest%20is%20Test%20%7B%0A%20%20%20%20Example%20public%20example%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20example%20%3D%20new%20Example()%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testMockPublicVariable()%20public%20%7B%0A%20%20%20%20%20%20%20%20assertEq(example.number()%2C%2010)%3B%0A%20%20%20%20%20%20%20%20vm.mockCall(%0A%20%20%20%20%20%20%20%20%20%20%20%20address(example)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encodeWithSelector(bytes4(keccak256(%22number()%22)))%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20abi.encode(5)%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20assertEq(example.number()%2C%205)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-calls-HJWTciz6.js"),__vite__mapDeps([293,1])),path:"/reference/cheatcodes/mock-calls",type:"mdx",filePath:"reference/cheatcodes/mock-calls.mdx",content:"%23%23%20%60mockCalls%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockCalls(address%20where%2C%20bytes%20calldata%20data%2C%20bytes%5B%5D%20calldata%20retdata)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20mockCalls(%0A%20%20%20%20address%20where%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20bytes%5B%5D%20calldata%20retdata%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AMocks%20all%20calls%20to%20an%20address%20%60where%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%0Amatches%20%60data%60%20and%20returns%20different%20data%20for%20each%20call%20based%20on%20the%20%60retdata%60%0Aarray%20values.%0A%0ASee%20%5B%60mockCall%60%5D(%2Freference%2Fcheatcodes%2Fmock-call.mdx)%20for%20more%20information%20on%20mocking%20calls%20and%0Amatching%20precedence.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Any%20invocation%20of%20the%20mocked%20call%20beyond%20the%20number%20of%20elements%20in%20%60retdata%60%0A%3E%20will%20receive%20the%20last%20%60retdata%60%20element%20in%20response.%20%60clearMockedCalls%60%20can%20be%0A%3E%20called%20to%20clear%20the%20mock%0A%0A%23%23%23%20Examples%0A%0AMocking%20multiple%20%60balanceOf(address)%60%20calls%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20bytes%5B%5D%20memory%20mocks%20%3D%20new%20bytes%5B%5D(2)%3B%0A%20%20%20%20mocks%5B0%5D%20%3D%20abi.encode(2%20ether)%3B%0A%20%20%20%20mocks%5B1%5D%20%3D%20abi.encode(1%20ether)%3B%0A%0A%20%20%20%20vm.mockCalls(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(IERC20.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20mocks%0A%20%20%20%20)%3B%0A%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%202%20ether)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%201%20ether)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20multiple%20calls%20with%20%60msg.value%60%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallsWithMsgValue()%20public%20%7B%0A%20%20%20%20bytes%5B%5D%20memory%20mocks%20%3D%20new%20bytes%5B%5D(2)%3B%0A%20%20%20%20mocks%5B0%5D%20%3D%20abi.encode(2%20ether)%3B%0A%20%20%20%20mocks%5B1%5D%20%3D%20abi.encode(1%20ether)%3B%0A%0A%20%20%20%20vm.mockCalls(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%201%20ether%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(DexPool.swapETHForToken.selector)%2C%0A%20%20%20%20%20%20%20%20mocks%0A%20%20%20%20)%3B%0A%0A%20%20%20%20uint%20tokenAmount1%20%3D%20DexPool(address(0)).swapETHForToken%7Bvalue%3A%201%20ether%7D()%3B%0A%20%20%20%20uint%20tokenAmount2%20%3D%20DexPool(address(0)).swapETHForToken%7Bvalue%3A%201%20ether%7D()%3B%0A%0A%20%20%20%20assertEq(tokenAmount1%2C%202%20ether)%3B%0A%20%20%20%20assertEq(tokenAmount2%2C%201%20ether)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-calls-HJWTciz6.js"),__vite__mapDeps([293,1])),path:"/reference/cheatcodes/mock-calls.html",type:"mdx",filePath:"reference/cheatcodes/mock-calls.mdx",content:"%23%23%20%60mockCalls%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockCalls(address%20where%2C%20bytes%20calldata%20data%2C%20bytes%5B%5D%20calldata%20retdata)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20mockCalls(%0A%20%20%20%20address%20where%2C%0A%20%20%20%20uint256%20value%2C%0A%20%20%20%20bytes%20calldata%20data%2C%0A%20%20%20%20bytes%5B%5D%20calldata%20retdata%0A)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AMocks%20all%20calls%20to%20an%20address%20%60where%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%0Amatches%20%60data%60%20and%20returns%20different%20data%20for%20each%20call%20based%20on%20the%20%60retdata%60%0Aarray%20values.%0A%0ASee%20%5B%60mockCall%60%5D(%2Freference%2Fcheatcodes%2Fmock-call.mdx)%20for%20more%20information%20on%20mocking%20calls%20and%0Amatching%20precedence.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Any%20invocation%20of%20the%20mocked%20call%20beyond%20the%20number%20of%20elements%20in%20%60retdata%60%0A%3E%20will%20receive%20the%20last%20%60retdata%60%20element%20in%20response.%20%60clearMockedCalls%60%20can%20be%0A%3E%20called%20to%20clear%20the%20mock%0A%0A%23%23%23%20Examples%0A%0AMocking%20multiple%20%60balanceOf(address)%60%20calls%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20bytes%5B%5D%20memory%20mocks%20%3D%20new%20bytes%5B%5D(2)%3B%0A%20%20%20%20mocks%5B0%5D%20%3D%20abi.encode(2%20ether)%3B%0A%20%20%20%20mocks%5B1%5D%20%3D%20abi.encode(1%20ether)%3B%0A%0A%20%20%20%20vm.mockCalls(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(IERC20.balanceOf.selector%2C%20address(1))%2C%0A%20%20%20%20%20%20%20%20mocks%0A%20%20%20%20)%3B%0A%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%202%20ether)%3B%0A%20%20%20%20assertEq(IERC20(address(0)).balanceOf(address(1))%2C%201%20ether)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20multiple%20calls%20with%20%60msg.value%60%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCallsWithMsgValue()%20public%20%7B%0A%20%20%20%20bytes%5B%5D%20memory%20mocks%20%3D%20new%20bytes%5B%5D(2)%3B%0A%20%20%20%20mocks%5B0%5D%20%3D%20abi.encode(2%20ether)%3B%0A%20%20%20%20mocks%5B1%5D%20%3D%20abi.encode(1%20ether)%3B%0A%0A%20%20%20%20vm.mockCalls(%0A%20%20%20%20%20%20%20%20address(0)%2C%0A%20%20%20%20%20%20%20%201%20ether%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(DexPool.swapETHForToken.selector)%2C%0A%20%20%20%20%20%20%20%20mocks%0A%20%20%20%20)%3B%0A%0A%20%20%20%20uint%20tokenAmount1%20%3D%20DexPool(address(0)).swapETHForToken%7Bvalue%3A%201%20ether%7D()%3B%0A%20%20%20%20uint%20tokenAmount2%20%3D%20DexPool(address(0)).swapETHForToken%7Bvalue%3A%201%20ether%7D()%3B%0A%0A%20%20%20%20assertEq(tokenAmount1%2C%202%20ether)%3B%0A%20%20%20%20assertEq(tokenAmount2%2C%201%20ether)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-function-BIzE4Pl1.js"),__vite__mapDeps([294,1])),path:"/reference/cheatcodes/mock-function",type:"mdx",filePath:"reference/cheatcodes/mock-function.mdx",content:"%23%23%20%60mockFunction%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockFunction(address%20callee%2C%20address%20target%2C%20bytes%20calldata%20data)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AExecutes%20calls%20to%20an%20address%20%60callee%60%20with%20bytecode%20of%20address%20%60target%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60.%0A%0AWhen%20a%20call%20is%20made%20to%20%60callee%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%0AIf%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%20on%20function%20selector.%0A%0AIf%20a%20match%20is%20found%2C%20then%20call%20is%20executed%20using%20the%20bytecode%20of%20%60target%60%20address.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Isolated%20tests**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20if%20using%20isolated%20test%20mode.%0A%0A%23%23%23%20Examples%0A%0AFor%20two%20contracts%20(with%20same%20storage%20layout)%3A%0A%60%60%60solidity%0Acontract%20Counter%20%7B%0A%20%20%20%20uint256%20public%20a%3B%0A%0A%20%20%20%20function%20count(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20a%20%3D%20321%20%2B%20x%3B%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20ModelCounter%20%7B%0A%20%20%20%20uint256%20public%20a%3B%0A%0A%20%20%20%20function%20count(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20a%20%3D%20123%20%2B%20x%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0AMocking%20an%20exact%20call%20to%20%60count%60%20function%3A%0A%0A%60%60%60solidity%0Afunction%20testMockFunction()%20public%20%7B%0A%20%20%20%20vm.mockFunction(%0A%20%20%20%20%20%20%20%20address(counter)%2C%0A%20%20%20%20%20%20%20%20address(model)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(Counter.count.selector%2C%20456)%0A%20%20%20%20)%3B%0A%20%20%20%20counter.count(456)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20123%20%2B%20456)%3B%0A%20%20%20%20counter.count(567)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20321%20%2B%20567)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20all%20calls%20to%20%60count%60%20function%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20vm.mockFunction(%0A%20%20%20%20%20%20%20%20address(counter)%2C%0A%20%20%20%20%20%20%20%20address(model)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(Counter.count.selector)%0A%20%20%20%20)%3B%0A%20%20%20%20counter.count(678)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20123%20%2B%20678)%3B%0A%20%20%20%20counter.count(789)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20123%20%2B%20789)%3B%0A%7D%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./mock-function-BIzE4Pl1.js"),__vite__mapDeps([294,1])),path:"/reference/cheatcodes/mock-function.html",type:"mdx",filePath:"reference/cheatcodes/mock-function.mdx",content:"%23%23%20%60mockFunction%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20mockFunction(address%20callee%2C%20address%20target%2C%20bytes%20calldata%20data)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AExecutes%20calls%20to%20an%20address%20%60callee%60%20with%20bytecode%20of%20address%20%60target%60%20if%20the%20call%20data%20either%20strictly%20or%20loosely%20matches%20%60data%60.%0A%0AWhen%20a%20call%20is%20made%20to%20%60callee%60%20the%20call%20data%20is%20first%20checked%20to%20see%20if%20it%20matches%20in%20its%20entirety%20with%20%60data%60.%0AIf%20not%2C%20the%20call%20data%20is%20checked%20to%20see%20if%20there%20is%20a%20partial%20match%20on%20function%20selector.%0A%0AIf%20a%20match%20is%20found%2C%20then%20call%20is%20executed%20using%20the%20bytecode%20of%20%60target%60%20address.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Isolated%20tests**%0A%3E%0A%3E%20This%20cheatcode%20does%20not%20currently%20work%20if%20using%20isolated%20test%20mode.%0A%0A%23%23%23%20Examples%0A%0AFor%20two%20contracts%20(with%20same%20storage%20layout)%3A%0A%60%60%60solidity%0Acontract%20Counter%20%7B%0A%20%20%20%20uint256%20public%20a%3B%0A%0A%20%20%20%20function%20count(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20a%20%3D%20321%20%2B%20x%3B%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20ModelCounter%20%7B%0A%20%20%20%20uint256%20public%20a%3B%0A%0A%20%20%20%20function%20count(uint256%20x)%20public%20%7B%0A%20%20%20%20%20%20%20%20a%20%3D%20123%20%2B%20x%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0AMocking%20an%20exact%20call%20to%20%60count%60%20function%3A%0A%0A%60%60%60solidity%0Afunction%20testMockFunction()%20public%20%7B%0A%20%20%20%20vm.mockFunction(%0A%20%20%20%20%20%20%20%20address(counter)%2C%0A%20%20%20%20%20%20%20%20address(model)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(Counter.count.selector%2C%20456)%0A%20%20%20%20)%3B%0A%20%20%20%20counter.count(456)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20123%20%2B%20456)%3B%0A%20%20%20%20counter.count(567)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20321%20%2B%20567)%3B%0A%7D%0A%60%60%60%0A%0AMocking%20all%20calls%20to%20%60count%60%20function%3A%0A%0A%60%60%60solidity%0Afunction%20testMockCall()%20public%20%7B%0A%20%20%20%20vm.mockFunction(%0A%20%20%20%20%20%20%20%20address(counter)%2C%0A%20%20%20%20%20%20%20%20address(model)%2C%0A%20%20%20%20%20%20%20%20abi.encodeWithSelector(Counter.count.selector)%0A%20%20%20%20)%3B%0A%20%20%20%20counter.count(678)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20123%20%2B%20678)%3B%0A%20%20%20%20counter.count(789)%3B%0A%20%20%20%20assertEq(counter.a()%2C%20123%20%2B%20789)%3B%0A%7D%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BGwfDfGi.js"),__vite__mapDeps([295,1])),path:"/reference/cheatcodes/overview",type:"mdx",filePath:"reference/cheatcodes/overview.mdx",content:"%23%23%20Cheatcodes%20Reference%0A%0ACheatcodes%20give%20you%20powerful%20assertions%2C%20the%20ability%20to%20alter%20the%20state%20of%20the%20EVM%2C%20mock%20data%2C%20and%20more.%0A%0ACheatcodes%20are%20made%20available%20through%20use%20of%20the%20cheatcode%20address%20(%600x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60).%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20If%20you%20encounter%20errors%20for%20this%20address%20when%20using%20fuzzed%20addresses%20in%20your%20tests%2C%20you%20may%20wish%20to%0A%3E%20exclude%20it%20from%20your%20fuzz%20tests%20by%20using%20the%20following%20line%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20vm.assume(address_%20!%3D%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D)%3B%0A%3E%20%60%60%60%0A%0AYou%20can%20also%20access%20cheatcodes%20easily%20via%20%60vm%60%20available%20in%20Forge%20Standard%20Library's%20%5B%60Test%60%5D(%2Freference%2Fforge-std%2Foverview)%20contract.%0A%0A%23%23%23%20Forge%20Standard%20Library%20Cheatcodes%0A%0AForge%20Std%20implements%20wrappers%20around%20cheatcodes%2C%20which%20combine%20multiple%20standard%20cheatcodes%20to%20improve%20development%20experience.%20These%20are%20not%20technically%20cheatcodes%2C%20but%20rather%20compositions%20of%20Forge's%20cheatcodes.%0A%0AYou%20can%20view%20the%20list%20of%20Forge%20Standard%20Library's%20cheatcode%20wrappers%20%5Bin%20the%20references%20section%5D(%2Freference%2Fforge-std%2Fstd-cheats.mdx).%20You%20can%20reference%20the%20%5BForge%20Std%20source%20code%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FTest.sol)%20to%20learn%20more%20about%20how%20the%20wrappers%20work%20under%20the%20hood.%0A%0A%23%23%23%20Cheatcode%20Types%0A%0ABelow%20are%20some%20subsections%20for%20the%20different%20Forge%20cheatcodes.%0A%0A-%20%5BEnvironment%5D(%2Freference%2Fcheatcodes%2Fenvironment.mdx)%3A%20Cheatcodes%20that%20alter%20the%20state%20of%20the%20EVM.%0A-%20%5BAssertions%5D(%2Freference%2Fcheatcodes%2Fassertions.mdx)%3A%20Cheatcodes%20that%20are%20powerful%20assertions%0A-%20%5BFuzzer%5D(%2Freference%2Fcheatcodes%2Ffuzzer.mdx)%3A%20Cheatcodes%20that%20configure%20the%20fuzzer%0A-%20%5BExternal%5D(%2Freference%2Fcheatcodes%2Fexternal.mdx)%3A%20Cheatcodes%20that%20interact%20with%20external%20state%20(files%2C%20commands%2C%20...)%0A-%20%5BSigning%5D(%2Freference%2Fcheatcodes%2Fsigning.mdx)%3A%20Cheatcodes%20for%20signing%0A-%20%5BUtilities%5D(%2Freference%2Fcheatcodes%2Futilities.mdx)%3A%20Smaller%20utility%20cheatcodes%0A-%20%5BForking%5D(%2Freference%2Fcheatcodes%2Fforking.mdx)%3A%20Forking%20mode%20cheatcodes%0A-%20%5BState%20snapshots%5D(%2Freference%2Fcheatcodes%2Fstate-snapshots.mdx)%3A%20State%20snapshot%20cheatcodes%0A-%20%5BRPC%5D(%2Freference%2Fcheatcodes%2Frpc.mdx)%3A%20RPC%20related%20cheatcodes%0A-%20%5BFile%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%3A%20Cheatcodes%20for%20working%20with%20files%0A%0A%23%23%23%20Add%20a%20new%20cheatcode%0A%0AIf%20you%20need%20a%20new%20feature%2C%20consider%20%5Bcontributing%20to%20the%20Foundry's%20codebase%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry)%20to%20add%20the%20cheatcode.%0A%0A%23%23%23%20Cheatcodes%20Interface%0A%0AThis%20is%20a%20Solidity%20interface%20for%20all%20of%20the%20cheatcodes%20present%20in%20Forge.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fvm%2FVm.sol%3A3%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-BGwfDfGi.js"),__vite__mapDeps([295,1])),path:"/reference/cheatcodes/overview.html",type:"mdx",filePath:"reference/cheatcodes/overview.mdx",content:"%23%23%20Cheatcodes%20Reference%0A%0ACheatcodes%20give%20you%20powerful%20assertions%2C%20the%20ability%20to%20alter%20the%20state%20of%20the%20EVM%2C%20mock%20data%2C%20and%20more.%0A%0ACheatcodes%20are%20made%20available%20through%20use%20of%20the%20cheatcode%20address%20(%600x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60).%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20If%20you%20encounter%20errors%20for%20this%20address%20when%20using%20fuzzed%20addresses%20in%20your%20tests%2C%20you%20may%20wish%20to%0A%3E%20exclude%20it%20from%20your%20fuzz%20tests%20by%20using%20the%20following%20line%3A%0A%3E%0A%3E%20%60%60%60solidity%0A%3E%20vm.assume(address_%20!%3D%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D)%3B%0A%3E%20%60%60%60%0A%0AYou%20can%20also%20access%20cheatcodes%20easily%20via%20%60vm%60%20available%20in%20Forge%20Standard%20Library's%20%5B%60Test%60%5D(%2Freference%2Fforge-std%2Foverview)%20contract.%0A%0A%23%23%23%20Forge%20Standard%20Library%20Cheatcodes%0A%0AForge%20Std%20implements%20wrappers%20around%20cheatcodes%2C%20which%20combine%20multiple%20standard%20cheatcodes%20to%20improve%20development%20experience.%20These%20are%20not%20technically%20cheatcodes%2C%20but%20rather%20compositions%20of%20Forge's%20cheatcodes.%0A%0AYou%20can%20view%20the%20list%20of%20Forge%20Standard%20Library's%20cheatcode%20wrappers%20%5Bin%20the%20references%20section%5D(%2Freference%2Fforge-std%2Fstd-cheats.mdx).%20You%20can%20reference%20the%20%5BForge%20Std%20source%20code%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FTest.sol)%20to%20learn%20more%20about%20how%20the%20wrappers%20work%20under%20the%20hood.%0A%0A%23%23%23%20Cheatcode%20Types%0A%0ABelow%20are%20some%20subsections%20for%20the%20different%20Forge%20cheatcodes.%0A%0A-%20%5BEnvironment%5D(%2Freference%2Fcheatcodes%2Fenvironment.mdx)%3A%20Cheatcodes%20that%20alter%20the%20state%20of%20the%20EVM.%0A-%20%5BAssertions%5D(%2Freference%2Fcheatcodes%2Fassertions.mdx)%3A%20Cheatcodes%20that%20are%20powerful%20assertions%0A-%20%5BFuzzer%5D(%2Freference%2Fcheatcodes%2Ffuzzer.mdx)%3A%20Cheatcodes%20that%20configure%20the%20fuzzer%0A-%20%5BExternal%5D(%2Freference%2Fcheatcodes%2Fexternal.mdx)%3A%20Cheatcodes%20that%20interact%20with%20external%20state%20(files%2C%20commands%2C%20...)%0A-%20%5BSigning%5D(%2Freference%2Fcheatcodes%2Fsigning.mdx)%3A%20Cheatcodes%20for%20signing%0A-%20%5BUtilities%5D(%2Freference%2Fcheatcodes%2Futilities.mdx)%3A%20Smaller%20utility%20cheatcodes%0A-%20%5BForking%5D(%2Freference%2Fcheatcodes%2Fforking.mdx)%3A%20Forking%20mode%20cheatcodes%0A-%20%5BState%20snapshots%5D(%2Freference%2Fcheatcodes%2Fstate-snapshots.mdx)%3A%20State%20snapshot%20cheatcodes%0A-%20%5BRPC%5D(%2Freference%2Fcheatcodes%2Frpc.mdx)%3A%20RPC%20related%20cheatcodes%0A-%20%5BFile%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%3A%20Cheatcodes%20for%20working%20with%20files%0A%0A%23%23%23%20Add%20a%20new%20cheatcode%0A%0AIf%20you%20need%20a%20new%20feature%2C%20consider%20%5Bcontributing%20to%20the%20Foundry's%20codebase%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Ffoundry)%20to%20add%20the%20cheatcode.%0A%0A%23%23%23%20Cheatcodes%20Interface%0A%0AThis%20is%20a%20Solidity%20interface%20for%20all%20of%20the%20cheatcodes%20present%20in%20Forge.%0A%0A%60%60%60solidity%0A%2F%2F%20%5B!include%20~%2Fsnippets%2Foutput%2Fvm%2FVm.sol%3A3%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-address-5XAteDDN.js"),__vite__mapDeps([296,1])),path:"/reference/cheatcodes/parse-address",type:"mdx",filePath:"reference/cheatcodes/parse-address.mdx",content:"%23%23%20%60parseAddress%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseAddress(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(address%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60address%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20addressAsString%20%3D%20%220x0000000000000000000000000000000000000000%22%3B%0Aaddress%20stringToAddress%20%3D%20vm.parseAddress(addressAsString)%3B%20%2F%2F%200x0000000000000000000000000000000000000000%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-address-5XAteDDN.js"),__vite__mapDeps([296,1])),path:"/reference/cheatcodes/parse-address.html",type:"mdx",filePath:"reference/cheatcodes/parse-address.mdx",content:"%23%23%20%60parseAddress%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseAddress(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(address%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60address%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20addressAsString%20%3D%20%220x0000000000000000000000000000000000000000%22%3B%0Aaddress%20stringToAddress%20%3D%20vm.parseAddress(addressAsString)%3B%20%2F%2F%200x0000000000000000000000000000000000000000%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-bool-_Xb16ADf.js"),__vite__mapDeps([297,1])),path:"/reference/cheatcodes/parse-bool",type:"mdx",filePath:"reference/cheatcodes/parse-bool.mdx",content:"%23%23%20%60parseBool%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseBool(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(bool%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60bool%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20boolAsString%20%3D%20%22false%22%3B%0Abool%20stringToBool%20%3D%20vm.parseBool(boolAsString)%3B%20%2F%2F%20false%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-bool-_Xb16ADf.js"),__vite__mapDeps([297,1])),path:"/reference/cheatcodes/parse-bool.html",type:"mdx",filePath:"reference/cheatcodes/parse-bool.mdx",content:"%23%23%20%60parseBool%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseBool(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(bool%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60bool%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20boolAsString%20%3D%20%22false%22%3B%0Abool%20stringToBool%20%3D%20vm.parseBool(boolAsString)%3B%20%2F%2F%20false%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-bytes-DPlb_5Jw.js"),__vite__mapDeps([298,1])),path:"/reference/cheatcodes/parse-bytes",type:"mdx",filePath:"reference/cheatcodes/parse-bytes.mdx",content:"%23%23%20%60parseBytes%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseBytes(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(bytes%20memory%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60bytes%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20bytesAsString%20%3D%20%220x00000000000000000000000000000000%22%3B%0Abytes%20memory%20stringToBytes%20%3D%20vm.parseBytes(bytesAsString)%3B%20%2F%2F%200x00000000000000000000000000000000%0A%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-bytes-DPlb_5Jw.js"),__vite__mapDeps([298,1])),path:"/reference/cheatcodes/parse-bytes.html",type:"mdx",filePath:"reference/cheatcodes/parse-bytes.mdx",content:"%23%23%20%60parseBytes%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseBytes(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(bytes%20memory%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60bytes%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20bytesAsString%20%3D%20%220x00000000000000000000000000000000%22%3B%0Abytes%20memory%20stringToBytes%20%3D%20vm.parseBytes(bytesAsString)%3B%20%2F%2F%200x00000000000000000000000000000000%0A%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-bytes32-BpiWh1Vz.js"),__vite__mapDeps([299,1])),path:"/reference/cheatcodes/parse-bytes32",type:"mdx",filePath:"reference/cheatcodes/parse-bytes32.mdx",content:"%23%23%20%60parseBytes32%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseBytes32(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(bytes32%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60bytes32%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20bytes32AsString%20%3D%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%3B%0Abytes32%20stringToBytes32%20%3D%20vm.parseBytes32(bytes32AsString)%3B%20%2F%2F%200x0000000000000000000000000000000000000000000000000000000000000000%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-bytes32-BpiWh1Vz.js"),__vite__mapDeps([299,1])),path:"/reference/cheatcodes/parse-bytes32.html",type:"mdx",filePath:"reference/cheatcodes/parse-bytes32.mdx",content:"%23%23%20%60parseBytes32%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseBytes32(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(bytes32%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60bytes32%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20bytes32AsString%20%3D%20%220x0000000000000000000000000000000000000000000000000000000000000000%22%3B%0Abytes32%20stringToBytes32%20%3D%20vm.parseBytes32(bytes32AsString)%3B%20%2F%2F%200x0000000000000000000000000000000000000000000000000000000000000000%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-int-C5Rm4BiF.js"),__vite__mapDeps([300,1])),path:"/reference/cheatcodes/parse-int",type:"mdx",filePath:"reference/cheatcodes/parse-int.mdx",content:"%23%23%20%60parseInt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseInt(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(int256%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60int256%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20intAsString%20%3D%20%22-12345%22%3B%0Aint256%20stringToInt%20%3D%20vm.parseInt(intAsString)%3B%20%2F%2F%20-12345%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-int-C5Rm4BiF.js"),__vite__mapDeps([300,1])),path:"/reference/cheatcodes/parse-int.html",type:"mdx",filePath:"reference/cheatcodes/parse-int.mdx",content:"%23%23%20%60parseInt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseInt(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(int256%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60int256%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20intAsString%20%3D%20%22-12345%22%3B%0Aint256%20stringToInt%20%3D%20vm.parseInt(intAsString)%3B%20%2F%2F%20-12345%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-json-keys-6s7sh6k_.js"),__vite__mapDeps([301,1])),path:"/reference/cheatcodes/parse-json-keys",type:"mdx",filePath:"reference/cheatcodes/parse-json-keys.mdx",content:"%23%23%20%60parseJsonKeys%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Get%20list%20of%20keys%20present%20in%20a%20JSON%20string%0Afunction%20parseJsonKeys(string%20calldata%20json%2C%20string%20calldata%20key)%20external%20pure%20returns%20(string%5B%5D%20memory%20keys)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20list%20of%20keys%20present%20in%20a%20JSON%20string%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20json%20%3D%20'%7B%22key%22%3A%20%7B%22a%22%3A%201%2C%20%22b%22%3A%202%7D%7D'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseJsonKeys(json%2C%20%22.key%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20json%20%3D%20'%7B%22key%22%3A%20%22something%22%7D'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseJsonKeys(json%2C%20%22%24%22)%3B%20%2F%2F%20%5B%22key%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20json%20%3D%20'%7B%22root_key%22%3A%20%5B%7B%22a%22%3A%201%2C%20%22b%22%3A%202%7D%5D%7D'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseJsonKeys(json%2C%20%22.root_key%5B0%5D%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-json-keys-6s7sh6k_.js"),__vite__mapDeps([301,1])),path:"/reference/cheatcodes/parse-json-keys.html",type:"mdx",filePath:"reference/cheatcodes/parse-json-keys.mdx",content:"%23%23%20%60parseJsonKeys%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Get%20list%20of%20keys%20present%20in%20a%20JSON%20string%0Afunction%20parseJsonKeys(string%20calldata%20json%2C%20string%20calldata%20key)%20external%20pure%20returns%20(string%5B%5D%20memory%20keys)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20list%20of%20keys%20present%20in%20a%20JSON%20string%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20json%20%3D%20'%7B%22key%22%3A%20%7B%22a%22%3A%201%2C%20%22b%22%3A%202%7D%7D'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseJsonKeys(json%2C%20%22.key%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20json%20%3D%20'%7B%22key%22%3A%20%22something%22%7D'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseJsonKeys(json%2C%20%22%24%22)%3B%20%2F%2F%20%5B%22key%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20json%20%3D%20'%7B%22root_key%22%3A%20%5B%7B%22a%22%3A%201%2C%20%22b%22%3A%202%7D%5D%7D'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseJsonKeys(json%2C%20%22.root_key%5B0%5D%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-json-B3O0Y5ED.js"),__vite__mapDeps([302,1])),path:"/reference/cheatcodes/parse-json",type:"mdx",filePath:"reference/cheatcodes/parse-json.mdx",content:"%23%23%20%60parseJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Return%20the%20value(s)%20that%20correspond%20to%20'key'%0Avm.parseJson(string%20memory%20json%2C%20string%20memory%20key)%0A%2F%2F%20Return%20the%20entire%20JSON%20file%0Avm.parseJson(string%20memory%20json)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThese%20cheatcodes%20are%20used%20to%20parse%20JSON%20files%20in%20the%20form%20of%20strings.%20Usually%2C%20it's%20coupled%20with%20%60vm.readFile()%60%20which%20returns%20an%20entire%20file%20in%20the%20form%20of%20a%20string.%0A%0AYou%20can%20use%20%60stdJson%60%20from%20%60forge-std%60%2C%20as%20a%20helper%20library%20for%20better%20UX.%0A%0AThe%20cheatcode%20accepts%20either%20a%20%60key%60%20to%20search%20for%20a%20specific%20value%20in%20the%20JSON%2C%20or%20no%20key%20to%20return%20the%20entire%20JSON.%20It%20returns%20the%20value%20as%20an%20abi-encoded%20%60bytes%60%20array.%20That%20means%20that%20you%20will%20have%20to%20%60abi.decode()%60%20to%20the%20appropriate%20type%20for%20it%20to%20function%20properly%2C%20else%20it%20will%20%60revert%60.%0A%0A%23%23%23%20JSONpath%20Key%0A%0A%60parseJson%60%20uses%20a%20syntax%20called%20JSONpath%20to%20form%20arbitrary%20keys%20for%20arbitrary%20JSON%20files.%20The%20same%20syntax%20(or%20rather%20a%20dialect)%20is%20used%20by%20the%20tool%20%5B%60jq%60%5D(https%3A%2F%2Fstedolan.github.io%2Fjq%2F).%0A%0ATo%20read%20more%20about%20the%20syntax%2C%20you%20can%20visit%20the%20%5BREADME%5D(https%3A%2F%2Fcrates.io%2Fcrates%2Fjsonpath-rust)%20of%20the%20rust%20library%20that%20we%20use%20under%20the%20hood%20to%20implement%20the%20feature.%20That%20way%20you%20can%20be%20certain%20that%20you%20are%20using%20the%20correct%20dialect%20of%20jsonPath.%0A%0A%23%23%23%20JSON%20Encoding%20Rules%0A%0AWe%20use%20the%20terms%20%60number%60%2C%20%60string%60%2C%20%60object%60%2C%20%60array%60%2C%20%60boolean%60%2C%20%60null%60%20as%20they%20are%20defined%20in%20the%20%5BJSON%20spec%5D(https%3A%2F%2Fwww.w3schools.com%2Fjs%2Fjs_json_datatypes.asp).%0A%0A**Encoding%20Rules**%0A%0A-%20%60null%60%20is%20encoded%20as%20%60bytes32(0)%60%0A-%20Numbers%20%3E%3D%200%20are%20encoded%20as%20%60uint256%60%0A-%20Negative%20numbers%20are%20encoded%20as%20%60int256%60%0A-%20Floating%20point%20numbers%20with%20decimal%20digitals%20are%20not%20allowed.%0A-%20Floating%20point%20numbers%20using%20the%20scientific%20notation%20can%20be%20%60uint256%60%20or%20%60int256%60%20depending%20on%20the%20value.%0A-%20A%20string%20that%20can%20be%20decoded%20into%20a%20type%20of%20%60H160%60%20and%20starts%20with%20%600x%60%20is%20encoded%20as%20an%20%60address%60.%20In%20other%20words%2C%20if%20it%20can%20be%20decoded%20into%20an%20address%2C%20it's%20probably%20an%20address%0A-%20A%20string%20that%20starts%20with%20%600x%60%20is%20encoded%20as%20%60bytes32%60%20if%20it%20has%20a%20length%20of%20%6066%60%20or%20else%20to%20%60bytes%60%0A-%20A%20string%20that%20is%20neither%20an%20%60address%60%2C%20a%20%60bytes32%60%20or%20%60bytes%60%2C%20is%20encoded%20as%20a%20%60string%60%0A-%20An%20array%20is%20encoded%20as%20a%20dynamic%20array%20of%20the%20type%20of%20its%20first%20element%0A-%20An%20object%20(%60%7B%7D%60)%20is%20encoded%20as%20a%20%60tuple%60%0A%0A%23%23%23%20Type%20Coercion%0A%0AAs%20described%20above%2C%20%60parseJson%60%20needs%20to%20deduce%20the%20type%20of%20JSON%20value%20and%20that%20has%20some%20inherent%20limitations.%20For%20that%20reason%2C%20there%20is%20a%20sub-family%20of%20%60parseJson*%60%20cheatcodes%20that%20coerce%20the%20type%20of%20the%20returned%20value.%0A%0AFor%20example%20%60vm.parseJsonUint(json%2C%20key)%60%20will%20coerce%20the%20value%20to%20a%20%60uint256%60.%20That%20means%20that%20it%20can%20parse%20all%20the%20following%20values%20and%20return%20them%20as%20a%20%60uint256%60.%20That%20includes%20a%20number%20as%20type%20%60number%60%2C%20a%20stringified%20number%20as%20a%20%60string%60%20and%20of%20course%20it's%20hex%20representation.%0A%0A%60%60%60json%0A%7B%0A%20%20%22hexUint%22%3A%20%220x12C980%22%2C%0A%20%20%22stringUint%22%3A%20%22115792089237316195423570985008687907853269984665640564039457584007913129639935%22%2C%0A%20%20%22numberUint%22%3A%20115792089237316195423570985008687907853269984665640564039457584007913129639935%0A%7D%0A%60%60%60%0A%0ASimilarly%2C%20there%20are%20cheatcodes%20for%20all%20types%20(including%20%60bytes%60%20and%20%60bytes32%60)%20and%20their%20arrays%20(%60vm.parseJsonUintArray%60).%0A%0A%23%23%23%20Decoding%20JSON%20objects%20into%20Solidity%20structs%0A%0AJSON%20objects%20are%20encoded%20as%20tuples%2C%20and%20can%20be%20decoded%20via%20tuples%20or%20structs.%20That%20means%20that%20you%20can%20define%20a%20%60struct%60%20in%20Solidity%20and%20it%20will%20decode%20the%20entire%20JSON%20object%20into%20that%20%60struct%60.%0A%0AFor%20example%3A%0A%0AThe%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22a%22%3A%2043%2C%0A%20%20%22b%22%3A%20%22sigma%22%0A%7D%0A%60%60%60%0A%0Awill%20be%20decoded%20into%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20string%20b%3B%0A%7D%0A%60%60%60%0A%0AAs%20the%20values%20are%20returned%20as%20an%20abi-encoded%20tuple%2C%20the%20exact%20name%20of%20the%20attributes%20of%20the%20struct%20don't%20need%20to%20match%20the%20names%20of%20the%20keys%20in%20the%20JSON.%20The%20above%20json%20file%20could%20also%20be%20decoded%20as%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20apple%3B%0A%20%20%20%20string%20pineapple%3B%0A%7D%0A%60%60%60%0A%0AWhat%20matters%20is%20the%20alphabetical%20order.%20As%20the%20JSON%20object%20is%20an%20unordered%20data%20structure%20but%20the%20tuple%20is%20an%20ordered%20one%2C%20we%20had%20to%20somehow%20give%20order%20to%20the%20JSON.%20The%20easiest%20way%20was%20to%20order%20the%20keys%20by%20alphabetical%20order.%20That%20means%20that%20in%20order%20to%20decode%20the%20JSON%20object%20correctly%2C%20you%20will%20need%20to%20define%20attributes%20of%20the%20struct%20with%20**types**%20that%20correspond%20to%20the%20values%20of%20the%20alphabetical%20order%20of%20the%20keys%20of%20the%20JSON.%0A%0A-%20The%20struct%20is%20interpreted%20serially.%20That%20means%20that%20the%20tuple's%20first%20item%20will%20be%20decoded%20based%20on%20the%20first%20item%20of%20the%20struct%20definition%20(no%20alphabetical%20order).%0A-%20The%20JSON%20will%20parsed%20alphabetically%2C%20not%20serially.%0A-%20Note%20that%20this%20parsing%20uses%20Rust's%20BTreeMap%20crate%20under%20the%20hood%2C%20meaning%20that%20uppercase%20and%20lowercase%20strings%20are%20treated%20differently.%20Uppercase%20characters%20_precede_%20lowercase%20in%20this%20lexicographical%20ordering%2C%20ie%20%22Zebra%22%20would%20precede%20%22apple%22.%0A%0AThus%2C%20the%20first%20(in%20alphabetical%20order)%20value%20of%20the%20JSON%2C%20will%20be%20abi-encoded%20and%20then%20tried%20to%20be%20abi-decoded%2C%20based%20on%20the%20type%20of%20the%20first%20attribute%20of%20the%20%60struct%60.%0A%0AThe%20above%20JSON%20would%20not%20be%20able%20to%20be%20decoded%20with%20the%20struct%20below%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20uint256%20a%3B%0A%7D%0A%60%60%60%0A%0AThe%20reason%20is%20that%20it%20would%20try%20to%20decode%20the%20string%20%60%22sigma%22%60%20as%20a%20uint.%20To%20be%20exact%2C%20it%20would%20be%20decoded%2C%20but%20it%20would%20result%20to%20a%20wrong%20number%2C%20since%20it%20would%20interpret%20the%20bytes%20incorrectly.%0A%0AAnother%20example%2C%20given%20the%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22apples%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%207%2C%0A%20%20%20%20%20%20%22sourness%22%3A%203%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Red%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%205%2C%0A%20%20%20%20%20%20%22sourness%22%3A%205%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Green%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%209%2C%0A%20%20%20%20%20%20%22sourness%22%3A%201%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Yellow%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22Fresh%20Fruit%22%0A%7D%0A%60%60%60%0A%0AAnd%20Solidity%20structs%20defined%20as%20follows%3A%0A%0A%60%60%60solidity%0Astruct%20Apple%20%7B%0A%20%20%20%20string%20color%3B%0A%20%20%20%20uint8%20sourness%3B%0A%20%20%20%20uint8%20sweetness%3B%0A%7D%0A%0Astruct%20FruitStall%20%7B%0A%20%20%20%20Apple%5B%5D%20apples%3B%0A%20%20%20%20string%20name%3B%0A%7D%0A%60%60%60%0A%0AOne%20would%20decode%20the%20JSON%20as%20follows%3A%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Ffruitstall.json%22)%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20data%20%3D%20vm.parseJson(json)%3B%0AFruitStall%20memory%20fruitstall%20%3D%20abi.decode(data%2C%20(FruitStall))%3B%0A%0A%2F%2F%20Logs%3A%20Welcome%20to%20Fresh%20Fruit%0Aconsole2.log(%22Welcome%20to%22%2C%20fruitstall.name)%3B%0A%0Afor%20(uint256%20i%20%3D%200%3B%20i%20%3C%20fruitstall.apples.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20Apple%20memory%20apple%20%3D%20fruitstall.apples%5Bi%5D%3B%0A%0A%20%20%20%20%2F%2F%20Logs%3A%0A%20%20%20%20%2F%2F%20Color%3A%20Red%2C%20Sourness%3A%203%2C%20Sweetness%3A%207%0A%20%20%20%20%2F%2F%20Color%3A%20Green%2C%20Sourness%3A%205%2C%20Sweetness%3A%205%0A%20%20%20%20%2F%2F%20Color%3A%20Yellow%2C%20Sourness%3A%201%2C%20Sweetness%3A%209%0A%20%20%20%20console2.log(%0A%20%20%20%20%20%20%20%20%22Color%3A%20%25s%2C%20Sourness%3A%20%25d%2C%20Sweetness%3A%20%25d%22%2C%0A%20%20%20%20%20%20%20%20apple.color%2C%0A%20%20%20%20%20%20%20%20apple.sourness%2C%0A%20%20%20%20%20%20%20%20apple.sweetness%0A%20%20%20%20)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Decoding%20JSON%20Objects%2C%20a%20tip%0A%0AIf%20your%20JSON%20object%20has%20%60hex%20numbers%60%2C%20they%20will%20be%20encoded%20as%20bytes.%20The%20way%20to%20decode%20them%20as%20%60uint%60%20for%20better%20UX%2C%20is%20to%20define%20two%20%60struct%60%2C%20one%20intermediary%20with%20the%20definition%20of%20these%20values%20as%20%60bytes%60%20and%20then%20a%20final%20%60struct%60%20that%20will%20be%20consumed%20by%20the%20user.%0A%0A1.%20Decode%20the%20JSON%20into%20the%20intermediary%20%60struct%60%0A2.%20Convert%20the%20intermediary%20struct%20to%20the%20final%20one%2C%20by%20converting%20the%20%60bytes%60%20to%20%60uint%60.%20We%20have%20a%20helper%20function%20in%20%60forge-std%60%20to%20do%20this%0A3.%20Give%20the%20final%20%60struct%60%20to%20the%20user%20for%20consumption%0A%0A%23%23%23%20How%20to%20use%20StdJson%0A%0A1.%20Import%20the%20library%20%60import%20%7BstdJson%7D%20from%20%22forge-std%2FStdJson.sol%22%3B%60%0A2.%20Define%20its%20usage%20with%20%60string%60%3A%20%60using%20stdJson%20for%20string%3B%60%0A3.%20If%20you%20want%20to%20parse%20simple%20values%20(numbers%2C%20address%2C%20etc.)%20use%20the%20helper%20functions%0A4.%20If%20you%20want%20to%20parse%20entire%20JSON%20objects%3A%0A%20%20%201.%20Define%20the%20%60struct%60%20in%20Solidity.%20Make%20sure%20to%20follow%20the%20alphabetical%20order%20--%20it's%20hard%20to%20debug%0A%20%20%202.%20Use%20the%20%60parseRaw()%60%20helper%20function%20to%20return%20abi-encoded%20%60bytes%60%20and%20then%20decode%20them%20to%20your%20struct%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Fbroadcast.log.json%22)%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20transactionDetails%20%3D%20json.parseRaw(%22.transactions%5B0%5D.tx%22)%3B%0ARawTx1559Detail%20memory%20rawTxDetail%20%3D%20abi.decode(transactionDetails%2C%20(RawTx1559Detail))%3B%0A%60%60%60%0A%0A%23%23%23%20Forge%20script%20artifacts%0A%0AWe%20have%20gone%20ahead%20and%20created%20a%20handful%20of%20helper%20struct%20and%20functions%20to%20read%20the%20artifacts%20from%20broadcasting%20a%20forge%20script.%0A%0ACurrently%2C%20we%20only%20support%20artifacts%20produced%20by%20EIP1559-compatible%20chains%20and%20we%20**don't**%20support%20yet%20the%20parsing%20of%20the%20entire%20%60broadcast.json%60%20artifact.%20You%20will%20need%20to%20parse%20for%20individual%20values%20such%20as%20the%20%60transactions%60%2C%20the%20%60receipts%60%2C%20etc.%0A%0ATo%20read%20the%20transactions%2C%20it's%20as%20easy%20as%20doing%3A%0A%0A%60%60%60solidity%0Afunction%20testReadEIP1559Transactions()%20public%20%7B%0A%20%20%20%20string%20memory%20root%20%3D%20vm.projectRoot()%3B%0A%20%20%20%20string%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Fbroadcast.log.json%22)%3B%0A%20%20%20%20Tx1559%5B%5D%20memory%20transactions%20%3D%20readTx1559s(path)%3B%0A%7D%0A%60%60%60%0A%0Aand%20then%20you%20can%20access%20their%20various%20fields%20in%20these%20structs%3A%0A%0A%60%60%60solidity%0Astruct%20Tx1559%20%7B%0A%20%20%20%20string%5B%5D%20arguments%3B%0A%20%20%20%20address%20contractAddress%3B%0A%20%20%20%20string%20contractName%3B%0A%20%20%20%20string%20functionSig%3B%0A%20%20%20%20bytes32%20hash%3B%0A%20%20%20%20Tx1559Detail%20txDetail%3B%0A%20%20%20%20string%20opcode%3B%0A%7D%0A%0Astruct%20Tx1559Detail%20%7B%0A%20%20%20%20AccessList%5B%5D%20accessList%3B%0A%20%20%20%20bytes%20data%3B%0A%20%20%20%20address%20from%3B%0A%20%20%20%20uint256%20gas%3B%0A%20%20%20%20uint256%20nonce%3B%0A%20%20%20%20address%20to%3B%0A%20%20%20%20uint256%20txType%3B%0A%20%20%20%20uint256%20value%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Troubleshooting%0A%0A%23%23%23%23%20Cannot%20read%20file%0A%0A%3E%20FAIL.%20Reason%3A%20The%20path%20%60%3Cfile-path%3E%60%20is%20not%20allowed%20to%20be%20accessed%20for%20read%20operations%0A%0AIf%20you%20receive%20this%20error%2C%20make%20sure%20that%20you%20enable%20read%20permissions%20in%20%60foundry.toml%60%20using%20the%20%5B%60fs_permissions%60%20key%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%0A%0A%23%23%23%20References%0A%0A-%20Helper%20Library%3A%20%5BstdJson.sol%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FStdJson.sol)%0A-%20Usage%20examples%3A%20%5BstdCheats.t.sol%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fca8d6e00ea9cb035f6856ff732203c9a3c48b966%2Fsrc%2Ftest%2FStdCheats.t.sol%23L206)%0A-%20%5BFile%20Cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%3A%20cheatcodes%20for%20working%20with%20files%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-json-B3O0Y5ED.js"),__vite__mapDeps([302,1])),path:"/reference/cheatcodes/parse-json.html",type:"mdx",filePath:"reference/cheatcodes/parse-json.mdx",content:"%23%23%20%60parseJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Return%20the%20value(s)%20that%20correspond%20to%20'key'%0Avm.parseJson(string%20memory%20json%2C%20string%20memory%20key)%0A%2F%2F%20Return%20the%20entire%20JSON%20file%0Avm.parseJson(string%20memory%20json)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThese%20cheatcodes%20are%20used%20to%20parse%20JSON%20files%20in%20the%20form%20of%20strings.%20Usually%2C%20it's%20coupled%20with%20%60vm.readFile()%60%20which%20returns%20an%20entire%20file%20in%20the%20form%20of%20a%20string.%0A%0AYou%20can%20use%20%60stdJson%60%20from%20%60forge-std%60%2C%20as%20a%20helper%20library%20for%20better%20UX.%0A%0AThe%20cheatcode%20accepts%20either%20a%20%60key%60%20to%20search%20for%20a%20specific%20value%20in%20the%20JSON%2C%20or%20no%20key%20to%20return%20the%20entire%20JSON.%20It%20returns%20the%20value%20as%20an%20abi-encoded%20%60bytes%60%20array.%20That%20means%20that%20you%20will%20have%20to%20%60abi.decode()%60%20to%20the%20appropriate%20type%20for%20it%20to%20function%20properly%2C%20else%20it%20will%20%60revert%60.%0A%0A%23%23%23%20JSONpath%20Key%0A%0A%60parseJson%60%20uses%20a%20syntax%20called%20JSONpath%20to%20form%20arbitrary%20keys%20for%20arbitrary%20JSON%20files.%20The%20same%20syntax%20(or%20rather%20a%20dialect)%20is%20used%20by%20the%20tool%20%5B%60jq%60%5D(https%3A%2F%2Fstedolan.github.io%2Fjq%2F).%0A%0ATo%20read%20more%20about%20the%20syntax%2C%20you%20can%20visit%20the%20%5BREADME%5D(https%3A%2F%2Fcrates.io%2Fcrates%2Fjsonpath-rust)%20of%20the%20rust%20library%20that%20we%20use%20under%20the%20hood%20to%20implement%20the%20feature.%20That%20way%20you%20can%20be%20certain%20that%20you%20are%20using%20the%20correct%20dialect%20of%20jsonPath.%0A%0A%23%23%23%20JSON%20Encoding%20Rules%0A%0AWe%20use%20the%20terms%20%60number%60%2C%20%60string%60%2C%20%60object%60%2C%20%60array%60%2C%20%60boolean%60%2C%20%60null%60%20as%20they%20are%20defined%20in%20the%20%5BJSON%20spec%5D(https%3A%2F%2Fwww.w3schools.com%2Fjs%2Fjs_json_datatypes.asp).%0A%0A**Encoding%20Rules**%0A%0A-%20%60null%60%20is%20encoded%20as%20%60bytes32(0)%60%0A-%20Numbers%20%3E%3D%200%20are%20encoded%20as%20%60uint256%60%0A-%20Negative%20numbers%20are%20encoded%20as%20%60int256%60%0A-%20Floating%20point%20numbers%20with%20decimal%20digitals%20are%20not%20allowed.%0A-%20Floating%20point%20numbers%20using%20the%20scientific%20notation%20can%20be%20%60uint256%60%20or%20%60int256%60%20depending%20on%20the%20value.%0A-%20A%20string%20that%20can%20be%20decoded%20into%20a%20type%20of%20%60H160%60%20and%20starts%20with%20%600x%60%20is%20encoded%20as%20an%20%60address%60.%20In%20other%20words%2C%20if%20it%20can%20be%20decoded%20into%20an%20address%2C%20it's%20probably%20an%20address%0A-%20A%20string%20that%20starts%20with%20%600x%60%20is%20encoded%20as%20%60bytes32%60%20if%20it%20has%20a%20length%20of%20%6066%60%20or%20else%20to%20%60bytes%60%0A-%20A%20string%20that%20is%20neither%20an%20%60address%60%2C%20a%20%60bytes32%60%20or%20%60bytes%60%2C%20is%20encoded%20as%20a%20%60string%60%0A-%20An%20array%20is%20encoded%20as%20a%20dynamic%20array%20of%20the%20type%20of%20its%20first%20element%0A-%20An%20object%20(%60%7B%7D%60)%20is%20encoded%20as%20a%20%60tuple%60%0A%0A%23%23%23%20Type%20Coercion%0A%0AAs%20described%20above%2C%20%60parseJson%60%20needs%20to%20deduce%20the%20type%20of%20JSON%20value%20and%20that%20has%20some%20inherent%20limitations.%20For%20that%20reason%2C%20there%20is%20a%20sub-family%20of%20%60parseJson*%60%20cheatcodes%20that%20coerce%20the%20type%20of%20the%20returned%20value.%0A%0AFor%20example%20%60vm.parseJsonUint(json%2C%20key)%60%20will%20coerce%20the%20value%20to%20a%20%60uint256%60.%20That%20means%20that%20it%20can%20parse%20all%20the%20following%20values%20and%20return%20them%20as%20a%20%60uint256%60.%20That%20includes%20a%20number%20as%20type%20%60number%60%2C%20a%20stringified%20number%20as%20a%20%60string%60%20and%20of%20course%20it's%20hex%20representation.%0A%0A%60%60%60json%0A%7B%0A%20%20%22hexUint%22%3A%20%220x12C980%22%2C%0A%20%20%22stringUint%22%3A%20%22115792089237316195423570985008687907853269984665640564039457584007913129639935%22%2C%0A%20%20%22numberUint%22%3A%20115792089237316195423570985008687907853269984665640564039457584007913129639935%0A%7D%0A%60%60%60%0A%0ASimilarly%2C%20there%20are%20cheatcodes%20for%20all%20types%20(including%20%60bytes%60%20and%20%60bytes32%60)%20and%20their%20arrays%20(%60vm.parseJsonUintArray%60).%0A%0A%23%23%23%20Decoding%20JSON%20objects%20into%20Solidity%20structs%0A%0AJSON%20objects%20are%20encoded%20as%20tuples%2C%20and%20can%20be%20decoded%20via%20tuples%20or%20structs.%20That%20means%20that%20you%20can%20define%20a%20%60struct%60%20in%20Solidity%20and%20it%20will%20decode%20the%20entire%20JSON%20object%20into%20that%20%60struct%60.%0A%0AFor%20example%3A%0A%0AThe%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22a%22%3A%2043%2C%0A%20%20%22b%22%3A%20%22sigma%22%0A%7D%0A%60%60%60%0A%0Awill%20be%20decoded%20into%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20string%20b%3B%0A%7D%0A%60%60%60%0A%0AAs%20the%20values%20are%20returned%20as%20an%20abi-encoded%20tuple%2C%20the%20exact%20name%20of%20the%20attributes%20of%20the%20struct%20don't%20need%20to%20match%20the%20names%20of%20the%20keys%20in%20the%20JSON.%20The%20above%20json%20file%20could%20also%20be%20decoded%20as%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20apple%3B%0A%20%20%20%20string%20pineapple%3B%0A%7D%0A%60%60%60%0A%0AWhat%20matters%20is%20the%20alphabetical%20order.%20As%20the%20JSON%20object%20is%20an%20unordered%20data%20structure%20but%20the%20tuple%20is%20an%20ordered%20one%2C%20we%20had%20to%20somehow%20give%20order%20to%20the%20JSON.%20The%20easiest%20way%20was%20to%20order%20the%20keys%20by%20alphabetical%20order.%20That%20means%20that%20in%20order%20to%20decode%20the%20JSON%20object%20correctly%2C%20you%20will%20need%20to%20define%20attributes%20of%20the%20struct%20with%20**types**%20that%20correspond%20to%20the%20values%20of%20the%20alphabetical%20order%20of%20the%20keys%20of%20the%20JSON.%0A%0A-%20The%20struct%20is%20interpreted%20serially.%20That%20means%20that%20the%20tuple's%20first%20item%20will%20be%20decoded%20based%20on%20the%20first%20item%20of%20the%20struct%20definition%20(no%20alphabetical%20order).%0A-%20The%20JSON%20will%20parsed%20alphabetically%2C%20not%20serially.%0A-%20Note%20that%20this%20parsing%20uses%20Rust's%20BTreeMap%20crate%20under%20the%20hood%2C%20meaning%20that%20uppercase%20and%20lowercase%20strings%20are%20treated%20differently.%20Uppercase%20characters%20_precede_%20lowercase%20in%20this%20lexicographical%20ordering%2C%20ie%20%22Zebra%22%20would%20precede%20%22apple%22.%0A%0AThus%2C%20the%20first%20(in%20alphabetical%20order)%20value%20of%20the%20JSON%2C%20will%20be%20abi-encoded%20and%20then%20tried%20to%20be%20abi-decoded%2C%20based%20on%20the%20type%20of%20the%20first%20attribute%20of%20the%20%60struct%60.%0A%0AThe%20above%20JSON%20would%20not%20be%20able%20to%20be%20decoded%20with%20the%20struct%20below%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20uint256%20a%3B%0A%7D%0A%60%60%60%0A%0AThe%20reason%20is%20that%20it%20would%20try%20to%20decode%20the%20string%20%60%22sigma%22%60%20as%20a%20uint.%20To%20be%20exact%2C%20it%20would%20be%20decoded%2C%20but%20it%20would%20result%20to%20a%20wrong%20number%2C%20since%20it%20would%20interpret%20the%20bytes%20incorrectly.%0A%0AAnother%20example%2C%20given%20the%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22apples%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%207%2C%0A%20%20%20%20%20%20%22sourness%22%3A%203%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Red%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%205%2C%0A%20%20%20%20%20%20%22sourness%22%3A%205%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Green%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%209%2C%0A%20%20%20%20%20%20%22sourness%22%3A%201%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Yellow%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22Fresh%20Fruit%22%0A%7D%0A%60%60%60%0A%0AAnd%20Solidity%20structs%20defined%20as%20follows%3A%0A%0A%60%60%60solidity%0Astruct%20Apple%20%7B%0A%20%20%20%20string%20color%3B%0A%20%20%20%20uint8%20sourness%3B%0A%20%20%20%20uint8%20sweetness%3B%0A%7D%0A%0Astruct%20FruitStall%20%7B%0A%20%20%20%20Apple%5B%5D%20apples%3B%0A%20%20%20%20string%20name%3B%0A%7D%0A%60%60%60%0A%0AOne%20would%20decode%20the%20JSON%20as%20follows%3A%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Ffruitstall.json%22)%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20data%20%3D%20vm.parseJson(json)%3B%0AFruitStall%20memory%20fruitstall%20%3D%20abi.decode(data%2C%20(FruitStall))%3B%0A%0A%2F%2F%20Logs%3A%20Welcome%20to%20Fresh%20Fruit%0Aconsole2.log(%22Welcome%20to%22%2C%20fruitstall.name)%3B%0A%0Afor%20(uint256%20i%20%3D%200%3B%20i%20%3C%20fruitstall.apples.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20Apple%20memory%20apple%20%3D%20fruitstall.apples%5Bi%5D%3B%0A%0A%20%20%20%20%2F%2F%20Logs%3A%0A%20%20%20%20%2F%2F%20Color%3A%20Red%2C%20Sourness%3A%203%2C%20Sweetness%3A%207%0A%20%20%20%20%2F%2F%20Color%3A%20Green%2C%20Sourness%3A%205%2C%20Sweetness%3A%205%0A%20%20%20%20%2F%2F%20Color%3A%20Yellow%2C%20Sourness%3A%201%2C%20Sweetness%3A%209%0A%20%20%20%20console2.log(%0A%20%20%20%20%20%20%20%20%22Color%3A%20%25s%2C%20Sourness%3A%20%25d%2C%20Sweetness%3A%20%25d%22%2C%0A%20%20%20%20%20%20%20%20apple.color%2C%0A%20%20%20%20%20%20%20%20apple.sourness%2C%0A%20%20%20%20%20%20%20%20apple.sweetness%0A%20%20%20%20)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Decoding%20JSON%20Objects%2C%20a%20tip%0A%0AIf%20your%20JSON%20object%20has%20%60hex%20numbers%60%2C%20they%20will%20be%20encoded%20as%20bytes.%20The%20way%20to%20decode%20them%20as%20%60uint%60%20for%20better%20UX%2C%20is%20to%20define%20two%20%60struct%60%2C%20one%20intermediary%20with%20the%20definition%20of%20these%20values%20as%20%60bytes%60%20and%20then%20a%20final%20%60struct%60%20that%20will%20be%20consumed%20by%20the%20user.%0A%0A1.%20Decode%20the%20JSON%20into%20the%20intermediary%20%60struct%60%0A2.%20Convert%20the%20intermediary%20struct%20to%20the%20final%20one%2C%20by%20converting%20the%20%60bytes%60%20to%20%60uint%60.%20We%20have%20a%20helper%20function%20in%20%60forge-std%60%20to%20do%20this%0A3.%20Give%20the%20final%20%60struct%60%20to%20the%20user%20for%20consumption%0A%0A%23%23%23%20How%20to%20use%20StdJson%0A%0A1.%20Import%20the%20library%20%60import%20%7BstdJson%7D%20from%20%22forge-std%2FStdJson.sol%22%3B%60%0A2.%20Define%20its%20usage%20with%20%60string%60%3A%20%60using%20stdJson%20for%20string%3B%60%0A3.%20If%20you%20want%20to%20parse%20simple%20values%20(numbers%2C%20address%2C%20etc.)%20use%20the%20helper%20functions%0A4.%20If%20you%20want%20to%20parse%20entire%20JSON%20objects%3A%0A%20%20%201.%20Define%20the%20%60struct%60%20in%20Solidity.%20Make%20sure%20to%20follow%20the%20alphabetical%20order%20--%20it's%20hard%20to%20debug%0A%20%20%202.%20Use%20the%20%60parseRaw()%60%20helper%20function%20to%20return%20abi-encoded%20%60bytes%60%20and%20then%20decode%20them%20to%20your%20struct%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Fbroadcast.log.json%22)%3B%0Astring%20memory%20json%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20transactionDetails%20%3D%20json.parseRaw(%22.transactions%5B0%5D.tx%22)%3B%0ARawTx1559Detail%20memory%20rawTxDetail%20%3D%20abi.decode(transactionDetails%2C%20(RawTx1559Detail))%3B%0A%60%60%60%0A%0A%23%23%23%20Forge%20script%20artifacts%0A%0AWe%20have%20gone%20ahead%20and%20created%20a%20handful%20of%20helper%20struct%20and%20functions%20to%20read%20the%20artifacts%20from%20broadcasting%20a%20forge%20script.%0A%0ACurrently%2C%20we%20only%20support%20artifacts%20produced%20by%20EIP1559-compatible%20chains%20and%20we%20**don't**%20support%20yet%20the%20parsing%20of%20the%20entire%20%60broadcast.json%60%20artifact.%20You%20will%20need%20to%20parse%20for%20individual%20values%20such%20as%20the%20%60transactions%60%2C%20the%20%60receipts%60%2C%20etc.%0A%0ATo%20read%20the%20transactions%2C%20it's%20as%20easy%20as%20doing%3A%0A%0A%60%60%60solidity%0Afunction%20testReadEIP1559Transactions()%20public%20%7B%0A%20%20%20%20string%20memory%20root%20%3D%20vm.projectRoot()%3B%0A%20%20%20%20string%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Fbroadcast.log.json%22)%3B%0A%20%20%20%20Tx1559%5B%5D%20memory%20transactions%20%3D%20readTx1559s(path)%3B%0A%7D%0A%60%60%60%0A%0Aand%20then%20you%20can%20access%20their%20various%20fields%20in%20these%20structs%3A%0A%0A%60%60%60solidity%0Astruct%20Tx1559%20%7B%0A%20%20%20%20string%5B%5D%20arguments%3B%0A%20%20%20%20address%20contractAddress%3B%0A%20%20%20%20string%20contractName%3B%0A%20%20%20%20string%20functionSig%3B%0A%20%20%20%20bytes32%20hash%3B%0A%20%20%20%20Tx1559Detail%20txDetail%3B%0A%20%20%20%20string%20opcode%3B%0A%7D%0A%0Astruct%20Tx1559Detail%20%7B%0A%20%20%20%20AccessList%5B%5D%20accessList%3B%0A%20%20%20%20bytes%20data%3B%0A%20%20%20%20address%20from%3B%0A%20%20%20%20uint256%20gas%3B%0A%20%20%20%20uint256%20nonce%3B%0A%20%20%20%20address%20to%3B%0A%20%20%20%20uint256%20txType%3B%0A%20%20%20%20uint256%20value%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Troubleshooting%0A%0A%23%23%23%23%20Cannot%20read%20file%0A%0A%3E%20FAIL.%20Reason%3A%20The%20path%20%60%3Cfile-path%3E%60%20is%20not%20allowed%20to%20be%20accessed%20for%20read%20operations%0A%0AIf%20you%20receive%20this%20error%2C%20make%20sure%20that%20you%20enable%20read%20permissions%20in%20%60foundry.toml%60%20using%20the%20%5B%60fs_permissions%60%20key%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%0A%0A%23%23%23%20References%0A%0A-%20Helper%20Library%3A%20%5BstdJson.sol%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FStdJson.sol)%0A-%20Usage%20examples%3A%20%5BstdCheats.t.sol%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fca8d6e00ea9cb035f6856ff732203c9a3c48b966%2Fsrc%2Ftest%2FStdCheats.t.sol%23L206)%0A-%20%5BFile%20Cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%3A%20cheatcodes%20for%20working%20with%20files%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-toml-keys-DkE6Xfc3.js"),__vite__mapDeps([303,1])),path:"/reference/cheatcodes/parse-toml-keys",type:"mdx",filePath:"reference/cheatcodes/parse-toml-keys.mdx",content:"%23%23%20%60parseTomlKeys%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Get%20list%20of%20keys%20present%20in%20a%20TOML%20string%0Afunction%20parseTomlKeys(string%20calldata%20toml%2C%20string%20calldata%20key)%20external%20pure%20returns%20(string%5B%5D%20memory%20keys)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20list%20of%20keys%20present%20in%20a%20TOML%20string%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%20%5Bkey%5D%0A%2F%2F%20a%20%3D%201%0A%2F%2F%20b%20%3D%202%0A%0Astring%20memory%20toml%20%3D%20'%5Bkey%5D%5Cn%20a%20%3D%201%5Cn%20b%20%3D%202'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseTomlKeys(toml%2C%20%22.key%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20key%20%3D%20%22something%22%0A%0Astring%20memory%20toml%20%3D%20'key%20%3D%20%5C%22something%5C%22'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseTomlKeys(toml%2C%20%22%24%22)%3B%20%2F%2F%20%5B%22key%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20%5B%5Broot_key%5D%5D%0A%2F%2F%20a%20%3D%201%0A%2F%2F%20b%20%3D%202%0A%0Astring%20memory%20toml%20%3D%20'%5B%5Broot_key%5D%5D%5Cn%20a%20%3D%201%5Cn%20b%20%3D%202'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseTomlKeys(toml%2C%20%22.root_key.0%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-toml-keys-DkE6Xfc3.js"),__vite__mapDeps([303,1])),path:"/reference/cheatcodes/parse-toml-keys.html",type:"mdx",filePath:"reference/cheatcodes/parse-toml-keys.mdx",content:"%23%23%20%60parseTomlKeys%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Get%20list%20of%20keys%20present%20in%20a%20TOML%20string%0Afunction%20parseTomlKeys(string%20calldata%20toml%2C%20string%20calldata%20key)%20external%20pure%20returns%20(string%5B%5D%20memory%20keys)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AGets%20list%20of%20keys%20present%20in%20a%20TOML%20string%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%20%5Bkey%5D%0A%2F%2F%20a%20%3D%201%0A%2F%2F%20b%20%3D%202%0A%0Astring%20memory%20toml%20%3D%20'%5Bkey%5D%5Cn%20a%20%3D%201%5Cn%20b%20%3D%202'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseTomlKeys(toml%2C%20%22.key%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20key%20%3D%20%22something%22%0A%0Astring%20memory%20toml%20%3D%20'key%20%3D%20%5C%22something%5C%22'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseTomlKeys(toml%2C%20%22%24%22)%3B%20%2F%2F%20%5B%22key%22%5D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20%5B%5Broot_key%5D%5D%0A%2F%2F%20a%20%3D%201%0A%2F%2F%20b%20%3D%202%0A%0Astring%20memory%20toml%20%3D%20'%5B%5Broot_key%5D%5D%5Cn%20a%20%3D%201%5Cn%20b%20%3D%202'%3B%0Astring%5B%5D%20memory%20keys%20%3D%20vm.parseTomlKeys(toml%2C%20%22.root_key.0%22)%3B%20%2F%2F%20%5B%22a%22%2C%20%22b%22%5D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-toml-DOu-M9VL.js"),__vite__mapDeps([304,1])),path:"/reference/cheatcodes/parse-toml",type:"mdx",filePath:"reference/cheatcodes/parse-toml.mdx",content:"%23%23%20%60parseToml%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Return%20the%20value(s)%20that%20correspond%20to%20'key'%0Avm.parseToml(string%20memory%20toml%2C%20string%20memory%20key)%0A%2F%2F%20Return%20the%20entire%20TOML%20file%0Avm.parseToml(string%20memory%20toml)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThese%20cheatcodes%20are%20used%20to%20parse%20TOML%20files%20in%20the%20form%20of%20strings%20after%20converting%20to%20JSON.%20Usually%2C%20it's%20coupled%20with%20%60vm.readFile()%60%20which%20returns%20an%20entire%20file%20in%20the%20form%20of%20a%20string.%0A%0AYou%20can%20use%20%60stdToml%60%20from%20%60forge-std%60%2C%20as%20a%20helper%20library%20for%20better%20UX.%0A%0AThe%20cheatcode%20accepts%20either%20a%20%60key%60%20to%20search%20for%20a%20specific%20value%20in%20the%20TOML%2C%20or%20no%20key%20to%20return%20the%20entire%20TOML.%20It%20returns%20the%20value%20as%20an%20abi-encoded%20%60bytes%60%20array.%20That%20means%20that%20you%20will%20have%20to%20%60abi.decode()%60%20to%20the%20appropriate%20type%20for%20it%20to%20function%20properly%2C%20else%20it%20will%20%60revert%60.%0A%0A%23%23%23%20JSONpath%20Key%0A%0A%60parseToml%60%20uses%20a%20syntax%20called%20JSONpath%20to%20form%20arbitrary%20keys%20for%20arbitrary%20JSON%20files.%20The%20same%20syntax%20(or%20rather%20a%20dialect)%20is%20used%20by%20the%20tool%20%5B%60jq%60%5D(https%3A%2F%2Fstedolan.github.io%2Fjq%2F).%0A%0ATo%20read%20more%20about%20the%20syntax%2C%20you%20can%20visit%20the%20%5BREADME%5D(https%3A%2F%2Fcrates.io%2Fcrates%2Fjsonpath-rust)%20of%20the%20rust%20library%20that%20we%20use%20under%20the%20hood%20to%20implement%20the%20feature.%20That%20way%20you%20can%20be%20certain%20that%20you%20are%20using%20the%20correct%20dialect%20of%20jsonPath.%0A%0A%23%23%23%20Encoding%20Rules%0A%0AWe%20use%20the%20terms%20%60string%60%2C%20%60integer%60%2C%20%60float%60%2C%20%60boolean%60%2C%20%60array%60%2C%20%60datetime%60%2C%20%60inline-table%60%20as%20they%20are%20defined%20in%20the%20%5BTOML%20spec%5D(https%3A%2F%2Fwww.w3schools.io%2Ffile%2Ftoml-datatypes%2F).%0A%0AWe%20use%20the%20terms%20%60number%60%2C%20%60string%60%2C%20%60object%60%2C%20%60array%60%2C%20%60boolean%60%2C%20%60null%60%20as%20they%20are%20defined%20in%20the%20%5BJSON%20spec%5D(https%3A%2F%2Fwww.w3schools.com%2Fjs%2Fjs_json_datatypes.asp).%0A%0A**TOML%20Encoding%20Rules**%0A%0A-%20%60float%60%20is%20limited%20to%2032%20bits%20(i.e.%20%60%2B1.5%60).%20It%20is%20recommended%20to%20use%20strings%20to%20prevent%20precision%20loss%0A-%20%60integer%60%20is%20limited%20to%2064%20bits%20(i.e.%20%609223372036854775807%60).%20It%20is%20recommended%20to%20use%20strings%20to%20encode%20large%20values%0A-%20Array%20values%20cannot%20have%20mixed%20types%20(i.e.%20%60%5B256%2C%20%22b%22%5D%60%2C%20only%20%60%5B256%2C%20512%5D%60%20or%20%60%5B%22a%22%2C%20%22b%22%5D%60)%0A-%20%60datetime%60%20is%20encoded%20as%20a%20%60string%60%20upon%20conversion%0A-%20%60float%60%20is%20encoded%20as%20a%20%60number%60%20upon%20conversion%0A-%20%60integer%60%20is%20encoded%20as%20a%20%60number%60%20upon%20conversion%0A-%20%60inline-table%60%20(or%20%60table%60)%20is%20encoded%20as%20%60object%60%20upon%20conversion%0A-%20%60null%60%20is%20encoded%20as%20a%20%60%22null%22%60%20string%0A%0A**JSON%20Encoding%20Rules**%0A%0A-%20%60null%60%20is%20encoded%20as%20%60bytes32(0)%60%20or%20%60%22%22%60%0A-%20Numbers%20%3E%3D%200%20are%20encoded%20as%20%60uint256%60%0A-%20Negative%20numbers%20are%20encoded%20as%20%60int256%60%0A-%20Floating%20point%20numbers%20with%20decimal%20digits%20are%20not%20allowed%0A-%20Floating%20point%20numbers%20using%20the%20scientific%20notation%20can%20be%20%60uint256%60%20or%20%60int256%60%20depending%20on%20the%20value%0A-%20A%20string%20that%20can%20be%20decoded%20into%20a%20type%20of%20%60H160%60%20and%20starts%20with%20%600x%60%20is%20encoded%20as%20an%20%60address%60.%20In%20other%20words%2C%20if%20it%20can%20be%20decoded%20into%20an%20address%2C%20it's%20probably%20an%20address%0A-%20A%20string%20that%20starts%20with%20%600x%60%20is%20encoded%20as%20%60bytes32%60%20if%20it%20has%20a%20length%20of%20%6066%60%20or%20else%20to%20%60bytes%60%0A-%20A%20string%20that%20is%20neither%20an%20%60address%60%2C%20a%20%60bytes32%60%20or%20%60bytes%60%2C%20is%20encoded%20as%20a%20%60string%60%0A-%20An%20array%20is%20encoded%20as%20a%20dynamic%20array%20of%20the%20type%20of%20its%20first%20element%0A-%20An%20object%20(%60%7B%7D%60)%20is%20encoded%20as%20a%20%60tuple%60%0A%0A%23%23%23%20Type%20Coercion%0A%0AAs%20described%20above%2C%20%60parseToml%60%20needs%20to%20deduce%20the%20type%20of%20TOML%20value%20and%20that%20has%20some%20inherent%20limitations.%20For%20that%20reason%2C%20there%20is%20a%20sub-family%20of%20%60parseToml*%60%20cheatcodes%20that%20coerce%20the%20type%20of%20the%20returned%20value.%0A%0AFor%20example%20%60vm.parseTomlUint(toml%2C%20key)%60%20will%20coerce%20the%20value%20to%20a%20%60uint256%60.%20That%20means%20that%20it%20can%20parse%20all%20the%20following%20values%20and%20return%20them%20as%20a%20%60uint256%60.%20That%20includes%20a%20number%20as%20type%20%60number%60%2C%20a%20stringified%20number%20as%20a%20%60string%60%20and%20of%20course%20it's%20hex%20representation.%0A%0A%60%60%60toml%0AhexUint%20%3D%20%220x12C980%22%0AstringUint%20%3D%20%22115792089237316195423570985008687907853269984665640564039457584007913129639935%22%0AnumberUint%20%3D%209223372036854775807%20%23%20TOML%20is%20limited%20to%2064-bit%20integers%0A%60%60%60%0A%0ASimilarly%2C%20there%20are%20cheatcodes%20for%20all%20types%20(including%20%60bytes%60%20and%20%60bytes32%60)%20and%20their%20arrays%20(%60vm.parseTomlUintArray%60).%0A%0A%23%23%23%20Decoding%20TOML%20tables%20into%20Solidity%20structs%0A%0ATOML%20tables%20are%20converted%20to%20JSON%20objects.%20JSON%20objects%20are%20encoded%20as%20tuples%2C%20and%20can%20be%20decoded%20via%20tuples%20or%20structs.%20That%20means%20that%20you%20can%20define%20a%20%60struct%60%20in%20Solidity%20and%20it%20will%20decode%20the%20entire%20JSON%20object%20into%20that%20%60struct%60.%0A%0AFor%20example%3A%0A%0AThe%20following%20TOML%3A%0A%0A%60%60%60toml%0Aa%20%3D%2043%0Ab%20%3D%20%22sigma%22%0A%60%60%60%0A%0Awill%20be%20converted%20into%20the%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22a%22%3A%2043%2C%0A%20%20%22b%22%3A%20%22sigma%22%0A%7D%0A%60%60%60%0A%0Awill%20be%20decoded%20into%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20string%20b%3B%0A%7D%0A%60%60%60%0A%0AAs%20the%20values%20are%20returned%20as%20an%20abi-encoded%20tuple%2C%20the%20exact%20name%20of%20the%20attributes%20of%20the%20struct%20don't%20need%20to%20match%20the%20names%20of%20the%20keys%20in%20the%20JSON.%20The%20above%20json%20file%20could%20also%20be%20decoded%20as%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20apple%3B%0A%20%20%20%20string%20pineapple%3B%0A%7D%0A%60%60%60%0A%0AWhat%20matters%20is%20the%20alphabetical%20order.%20As%20the%20JSON%20object%20is%20an%20unordered%20data%20structure%20but%20the%20tuple%20is%20an%20ordered%20one%2C%20we%20had%20to%20somehow%20give%20order%20to%20the%20JSON.%20The%20easiest%20way%20was%20to%20order%20the%20keys%20by%20alphabetical%20order.%20That%20means%20that%20in%20order%20to%20decode%20the%20JSON%20object%20correctly%2C%20you%20will%20need%20to%20define%20attributes%20of%20the%20struct%20with%20**types**%20that%20correspond%20to%20the%20values%20of%20the%20alphabetical%20order%20of%20the%20keys%20of%20the%20JSON.%0A%0A-%20The%20struct%20is%20interpreted%20serially.%20That%20means%20that%20the%20tuple's%20first%20item%20will%20be%20decoded%20based%20on%20the%20first%20item%20of%20the%20struct%20definition%20(no%20alphabetical%20order).%0A-%20The%20JSON%20will%20parsed%20alphabetically%2C%20not%20serially.%0A-%20Note%20that%20this%20parsing%20uses%20Rust's%20BTreeMap%20crate%20under%20the%20hood%2C%20meaning%20that%20uppercase%20and%20lowercase%20strings%20are%20treated%20differently.%20Uppercase%20characters%20_precede_%20lowercase%20in%20this%20lexicographical%20ordering%2C%20ie%20%22Zebra%22%20would%20precede%20%22apple%22.%0A%0AThus%2C%20the%20first%20(in%20alphabetical%20order)%20value%20of%20the%20JSON%2C%20will%20be%20abi-encoded%20and%20then%20tried%20to%20be%20abi-decoded%2C%20based%20on%20the%20type%20of%20the%20first%20attribute%20of%20the%20%60struct%60.%0A%0AThe%20above%20TOML%20would%20not%20be%20able%20to%20be%20decoded%20with%20the%20struct%20below%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20uint256%20a%3B%0A%7D%0A%60%60%60%0A%0AThe%20reason%20is%20that%20it%20would%20try%20to%20decode%20the%20string%20%60%22sigma%22%60%20as%20a%20uint.%20To%20be%20exact%2C%20it%20would%20be%20decoded%2C%20but%20it%20would%20result%20to%20a%20wrong%20number%2C%20since%20it%20would%20interpret%20the%20bytes%20incorrectly.%0A%0AAnother%20example%2C%20given%20the%20following%20TOML%3A%0A%0A%60%60%60toml%0Aname%20%3D%20%22Fresh%20Fruit%22%0A%0A%5B%5Bapples%5D%5D%0Asweetness%20%3D%207%0Asourness%20%3D%203%0Acolor%20%3D%20%22Red%22%0A%0A%5B%5Bapples%5D%5D%0Asweetness%20%3D%205%0Asourness%20%3D%205%0Acolor%20%3D%20%22Green%22%0A%0A%5B%5Bapples%5D%5D%0Asweetness%20%3D%209%0Asourness%20%3D%201%0Acolor%20%3D%20%22Yellow%22%0A%60%60%60%0A%0Awill%20be%20converted%20into%20the%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22apples%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%207%2C%0A%20%20%20%20%20%20%22sourness%22%3A%203%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Red%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%205%2C%0A%20%20%20%20%20%20%22sourness%22%3A%205%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Green%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%209%2C%0A%20%20%20%20%20%20%22sourness%22%3A%201%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Yellow%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22Fresh%20Fruit%22%0A%7D%0A%60%60%60%0A%0AAnd%20Solidity%20structs%20defined%20as%20follows%3A%0A%0A%60%60%60solidity%0Astruct%20Apple%20%7B%0A%20%20%20%20string%20color%3B%0A%20%20%20%20uint8%20sourness%3B%0A%20%20%20%20uint8%20sweetness%3B%0A%7D%0A%0Astruct%20FruitStall%20%7B%0A%20%20%20%20Apple%5B%5D%20apples%3B%0A%20%20%20%20string%20name%3B%0A%7D%0A%60%60%60%0A%0AOne%20would%20decode%20the%20TOML%20as%20follows%3A%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Ffruitstall.toml%22)%3B%0Astring%20memory%20toml%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20data%20%3D%20vm.parseToml(toml)%3B%0AFruitStall%20memory%20fruitstall%20%3D%20abi.decode(data%2C%20(FruitStall))%3B%0A%0A%2F%2F%20Logs%3A%20Welcome%20to%20Fresh%20Fruit%0Aconsole2.log(%22Welcome%20to%22%2C%20fruitstall.name)%3B%0A%0Afor%20(uint256%20i%20%3D%200%3B%20i%20%3C%20fruitstall.apples.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20Apple%20memory%20apple%20%3D%20fruitstall.apples%5Bi%5D%3B%0A%0A%20%20%20%20%2F%2F%20Logs%3A%0A%20%20%20%20%2F%2F%20Color%3A%20Red%2C%20Sourness%3A%203%2C%20Sweetness%3A%207%0A%20%20%20%20%2F%2F%20Color%3A%20Green%2C%20Sourness%3A%205%2C%20Sweetness%3A%205%0A%20%20%20%20%2F%2F%20Color%3A%20Yellow%2C%20Sourness%3A%201%2C%20Sweetness%3A%209%0A%20%20%20%20console2.log(%0A%20%20%20%20%20%20%20%20%22Color%3A%20%25s%2C%20Sourness%3A%20%25d%2C%20Sweetness%3A%20%25d%22%2C%0A%20%20%20%20%20%20%20%20apple.color%2C%0A%20%20%20%20%20%20%20%20apple.sourness%2C%0A%20%20%20%20%20%20%20%20apple.sweetness%0A%20%20%20%20)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20How%20to%20use%20StdToml%0A%0A1.%20Import%20the%20library%20%60import%20%7BstdToml%7D%20from%20%22forge-std%2FStdToml.sol%22%3B%60%0A2.%20Define%20its%20usage%20with%20%60string%60%3A%20%60using%20stdToml%20for%20string%3B%60%0A3.%20If%20you%20want%20to%20parse%20simple%20values%20(numbers%2C%20address%2C%20etc.)%20use%20the%20helper%20functions%0A4.%20If%20you%20want%20to%20parse%20entire%20TOML%20tables%3A%0A%20%20%201.%20Define%20the%20%60struct%60%20in%20Solidity.%20Make%20sure%20to%20follow%20the%20alphabetical%20order%20--%20it's%20hard%20to%20debug%0A%20%20%202.%20Use%20the%20%60parseRaw()%60%20helper%20function%20to%20return%20abi-encoded%20%60bytes%60%20and%20then%20decode%20them%20to%20your%20struct%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Fconfig.toml%22)%3B%0Astring%20memory%20toml%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20data%20%3D%20toml.parseRaw(%22.%22)%3B%0AConfig%20memory%20config%20%3D%20abi.decode(data%2C%20(Config))%0A%60%60%60%0A%0A%23%23%23%20Troubleshooting%0A%0A%23%23%23%23%20Cannot%20read%20file%0A%0A%3E%20FAIL.%20Reason%3A%20The%20path%20%60%3Cfile-path%3E%60%20is%20not%20allowed%20to%20be%20accessed%20for%20read%20operations%0A%0AIf%20you%20receive%20this%20error%2C%20make%20sure%20that%20you%20enable%20read%20permissions%20in%20%60foundry.toml%60%20using%20the%20%5B%60fs_permissions%60%20key%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%0A%0A%23%23%23%20References%0A%0A-%20Helper%20Library%3A%20%5BstdToml.sol%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FStdToml.sol)%0A-%20%5BFile%20Cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%3A%20cheatcodes%20for%20working%20with%20files%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-toml-DOu-M9VL.js"),__vite__mapDeps([304,1])),path:"/reference/cheatcodes/parse-toml.html",type:"mdx",filePath:"reference/cheatcodes/parse-toml.mdx",content:"%23%23%20%60parseToml%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Return%20the%20value(s)%20that%20correspond%20to%20'key'%0Avm.parseToml(string%20memory%20toml%2C%20string%20memory%20key)%0A%2F%2F%20Return%20the%20entire%20TOML%20file%0Avm.parseToml(string%20memory%20toml)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThese%20cheatcodes%20are%20used%20to%20parse%20TOML%20files%20in%20the%20form%20of%20strings%20after%20converting%20to%20JSON.%20Usually%2C%20it's%20coupled%20with%20%60vm.readFile()%60%20which%20returns%20an%20entire%20file%20in%20the%20form%20of%20a%20string.%0A%0AYou%20can%20use%20%60stdToml%60%20from%20%60forge-std%60%2C%20as%20a%20helper%20library%20for%20better%20UX.%0A%0AThe%20cheatcode%20accepts%20either%20a%20%60key%60%20to%20search%20for%20a%20specific%20value%20in%20the%20TOML%2C%20or%20no%20key%20to%20return%20the%20entire%20TOML.%20It%20returns%20the%20value%20as%20an%20abi-encoded%20%60bytes%60%20array.%20That%20means%20that%20you%20will%20have%20to%20%60abi.decode()%60%20to%20the%20appropriate%20type%20for%20it%20to%20function%20properly%2C%20else%20it%20will%20%60revert%60.%0A%0A%23%23%23%20JSONpath%20Key%0A%0A%60parseToml%60%20uses%20a%20syntax%20called%20JSONpath%20to%20form%20arbitrary%20keys%20for%20arbitrary%20JSON%20files.%20The%20same%20syntax%20(or%20rather%20a%20dialect)%20is%20used%20by%20the%20tool%20%5B%60jq%60%5D(https%3A%2F%2Fstedolan.github.io%2Fjq%2F).%0A%0ATo%20read%20more%20about%20the%20syntax%2C%20you%20can%20visit%20the%20%5BREADME%5D(https%3A%2F%2Fcrates.io%2Fcrates%2Fjsonpath-rust)%20of%20the%20rust%20library%20that%20we%20use%20under%20the%20hood%20to%20implement%20the%20feature.%20That%20way%20you%20can%20be%20certain%20that%20you%20are%20using%20the%20correct%20dialect%20of%20jsonPath.%0A%0A%23%23%23%20Encoding%20Rules%0A%0AWe%20use%20the%20terms%20%60string%60%2C%20%60integer%60%2C%20%60float%60%2C%20%60boolean%60%2C%20%60array%60%2C%20%60datetime%60%2C%20%60inline-table%60%20as%20they%20are%20defined%20in%20the%20%5BTOML%20spec%5D(https%3A%2F%2Fwww.w3schools.io%2Ffile%2Ftoml-datatypes%2F).%0A%0AWe%20use%20the%20terms%20%60number%60%2C%20%60string%60%2C%20%60object%60%2C%20%60array%60%2C%20%60boolean%60%2C%20%60null%60%20as%20they%20are%20defined%20in%20the%20%5BJSON%20spec%5D(https%3A%2F%2Fwww.w3schools.com%2Fjs%2Fjs_json_datatypes.asp).%0A%0A**TOML%20Encoding%20Rules**%0A%0A-%20%60float%60%20is%20limited%20to%2032%20bits%20(i.e.%20%60%2B1.5%60).%20It%20is%20recommended%20to%20use%20strings%20to%20prevent%20precision%20loss%0A-%20%60integer%60%20is%20limited%20to%2064%20bits%20(i.e.%20%609223372036854775807%60).%20It%20is%20recommended%20to%20use%20strings%20to%20encode%20large%20values%0A-%20Array%20values%20cannot%20have%20mixed%20types%20(i.e.%20%60%5B256%2C%20%22b%22%5D%60%2C%20only%20%60%5B256%2C%20512%5D%60%20or%20%60%5B%22a%22%2C%20%22b%22%5D%60)%0A-%20%60datetime%60%20is%20encoded%20as%20a%20%60string%60%20upon%20conversion%0A-%20%60float%60%20is%20encoded%20as%20a%20%60number%60%20upon%20conversion%0A-%20%60integer%60%20is%20encoded%20as%20a%20%60number%60%20upon%20conversion%0A-%20%60inline-table%60%20(or%20%60table%60)%20is%20encoded%20as%20%60object%60%20upon%20conversion%0A-%20%60null%60%20is%20encoded%20as%20a%20%60%22null%22%60%20string%0A%0A**JSON%20Encoding%20Rules**%0A%0A-%20%60null%60%20is%20encoded%20as%20%60bytes32(0)%60%20or%20%60%22%22%60%0A-%20Numbers%20%3E%3D%200%20are%20encoded%20as%20%60uint256%60%0A-%20Negative%20numbers%20are%20encoded%20as%20%60int256%60%0A-%20Floating%20point%20numbers%20with%20decimal%20digits%20are%20not%20allowed%0A-%20Floating%20point%20numbers%20using%20the%20scientific%20notation%20can%20be%20%60uint256%60%20or%20%60int256%60%20depending%20on%20the%20value%0A-%20A%20string%20that%20can%20be%20decoded%20into%20a%20type%20of%20%60H160%60%20and%20starts%20with%20%600x%60%20is%20encoded%20as%20an%20%60address%60.%20In%20other%20words%2C%20if%20it%20can%20be%20decoded%20into%20an%20address%2C%20it's%20probably%20an%20address%0A-%20A%20string%20that%20starts%20with%20%600x%60%20is%20encoded%20as%20%60bytes32%60%20if%20it%20has%20a%20length%20of%20%6066%60%20or%20else%20to%20%60bytes%60%0A-%20A%20string%20that%20is%20neither%20an%20%60address%60%2C%20a%20%60bytes32%60%20or%20%60bytes%60%2C%20is%20encoded%20as%20a%20%60string%60%0A-%20An%20array%20is%20encoded%20as%20a%20dynamic%20array%20of%20the%20type%20of%20its%20first%20element%0A-%20An%20object%20(%60%7B%7D%60)%20is%20encoded%20as%20a%20%60tuple%60%0A%0A%23%23%23%20Type%20Coercion%0A%0AAs%20described%20above%2C%20%60parseToml%60%20needs%20to%20deduce%20the%20type%20of%20TOML%20value%20and%20that%20has%20some%20inherent%20limitations.%20For%20that%20reason%2C%20there%20is%20a%20sub-family%20of%20%60parseToml*%60%20cheatcodes%20that%20coerce%20the%20type%20of%20the%20returned%20value.%0A%0AFor%20example%20%60vm.parseTomlUint(toml%2C%20key)%60%20will%20coerce%20the%20value%20to%20a%20%60uint256%60.%20That%20means%20that%20it%20can%20parse%20all%20the%20following%20values%20and%20return%20them%20as%20a%20%60uint256%60.%20That%20includes%20a%20number%20as%20type%20%60number%60%2C%20a%20stringified%20number%20as%20a%20%60string%60%20and%20of%20course%20it's%20hex%20representation.%0A%0A%60%60%60toml%0AhexUint%20%3D%20%220x12C980%22%0AstringUint%20%3D%20%22115792089237316195423570985008687907853269984665640564039457584007913129639935%22%0AnumberUint%20%3D%209223372036854775807%20%23%20TOML%20is%20limited%20to%2064-bit%20integers%0A%60%60%60%0A%0ASimilarly%2C%20there%20are%20cheatcodes%20for%20all%20types%20(including%20%60bytes%60%20and%20%60bytes32%60)%20and%20their%20arrays%20(%60vm.parseTomlUintArray%60).%0A%0A%23%23%23%20Decoding%20TOML%20tables%20into%20Solidity%20structs%0A%0ATOML%20tables%20are%20converted%20to%20JSON%20objects.%20JSON%20objects%20are%20encoded%20as%20tuples%2C%20and%20can%20be%20decoded%20via%20tuples%20or%20structs.%20That%20means%20that%20you%20can%20define%20a%20%60struct%60%20in%20Solidity%20and%20it%20will%20decode%20the%20entire%20JSON%20object%20into%20that%20%60struct%60.%0A%0AFor%20example%3A%0A%0AThe%20following%20TOML%3A%0A%0A%60%60%60toml%0Aa%20%3D%2043%0Ab%20%3D%20%22sigma%22%0A%60%60%60%0A%0Awill%20be%20converted%20into%20the%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22a%22%3A%2043%2C%0A%20%20%22b%22%3A%20%22sigma%22%0A%7D%0A%60%60%60%0A%0Awill%20be%20decoded%20into%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20a%3B%0A%20%20%20%20string%20b%3B%0A%7D%0A%60%60%60%0A%0AAs%20the%20values%20are%20returned%20as%20an%20abi-encoded%20tuple%2C%20the%20exact%20name%20of%20the%20attributes%20of%20the%20struct%20don't%20need%20to%20match%20the%20names%20of%20the%20keys%20in%20the%20JSON.%20The%20above%20json%20file%20could%20also%20be%20decoded%20as%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20apple%3B%0A%20%20%20%20string%20pineapple%3B%0A%7D%0A%60%60%60%0A%0AWhat%20matters%20is%20the%20alphabetical%20order.%20As%20the%20JSON%20object%20is%20an%20unordered%20data%20structure%20but%20the%20tuple%20is%20an%20ordered%20one%2C%20we%20had%20to%20somehow%20give%20order%20to%20the%20JSON.%20The%20easiest%20way%20was%20to%20order%20the%20keys%20by%20alphabetical%20order.%20That%20means%20that%20in%20order%20to%20decode%20the%20JSON%20object%20correctly%2C%20you%20will%20need%20to%20define%20attributes%20of%20the%20struct%20with%20**types**%20that%20correspond%20to%20the%20values%20of%20the%20alphabetical%20order%20of%20the%20keys%20of%20the%20JSON.%0A%0A-%20The%20struct%20is%20interpreted%20serially.%20That%20means%20that%20the%20tuple's%20first%20item%20will%20be%20decoded%20based%20on%20the%20first%20item%20of%20the%20struct%20definition%20(no%20alphabetical%20order).%0A-%20The%20JSON%20will%20parsed%20alphabetically%2C%20not%20serially.%0A-%20Note%20that%20this%20parsing%20uses%20Rust's%20BTreeMap%20crate%20under%20the%20hood%2C%20meaning%20that%20uppercase%20and%20lowercase%20strings%20are%20treated%20differently.%20Uppercase%20characters%20_precede_%20lowercase%20in%20this%20lexicographical%20ordering%2C%20ie%20%22Zebra%22%20would%20precede%20%22apple%22.%0A%0AThus%2C%20the%20first%20(in%20alphabetical%20order)%20value%20of%20the%20JSON%2C%20will%20be%20abi-encoded%20and%20then%20tried%20to%20be%20abi-decoded%2C%20based%20on%20the%20type%20of%20the%20first%20attribute%20of%20the%20%60struct%60.%0A%0AThe%20above%20TOML%20would%20not%20be%20able%20to%20be%20decoded%20with%20the%20struct%20below%3A%0A%0A%60%60%60solidity%0Astruct%20Json%20%7B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20uint256%20a%3B%0A%7D%0A%60%60%60%0A%0AThe%20reason%20is%20that%20it%20would%20try%20to%20decode%20the%20string%20%60%22sigma%22%60%20as%20a%20uint.%20To%20be%20exact%2C%20it%20would%20be%20decoded%2C%20but%20it%20would%20result%20to%20a%20wrong%20number%2C%20since%20it%20would%20interpret%20the%20bytes%20incorrectly.%0A%0AAnother%20example%2C%20given%20the%20following%20TOML%3A%0A%0A%60%60%60toml%0Aname%20%3D%20%22Fresh%20Fruit%22%0A%0A%5B%5Bapples%5D%5D%0Asweetness%20%3D%207%0Asourness%20%3D%203%0Acolor%20%3D%20%22Red%22%0A%0A%5B%5Bapples%5D%5D%0Asweetness%20%3D%205%0Asourness%20%3D%205%0Acolor%20%3D%20%22Green%22%0A%0A%5B%5Bapples%5D%5D%0Asweetness%20%3D%209%0Asourness%20%3D%201%0Acolor%20%3D%20%22Yellow%22%0A%60%60%60%0A%0Awill%20be%20converted%20into%20the%20following%20JSON%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22apples%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%207%2C%0A%20%20%20%20%20%20%22sourness%22%3A%203%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Red%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%205%2C%0A%20%20%20%20%20%20%22sourness%22%3A%205%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Green%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22sweetness%22%3A%209%2C%0A%20%20%20%20%20%20%22sourness%22%3A%201%2C%0A%20%20%20%20%20%20%22color%22%3A%20%22Yellow%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22name%22%3A%20%22Fresh%20Fruit%22%0A%7D%0A%60%60%60%0A%0AAnd%20Solidity%20structs%20defined%20as%20follows%3A%0A%0A%60%60%60solidity%0Astruct%20Apple%20%7B%0A%20%20%20%20string%20color%3B%0A%20%20%20%20uint8%20sourness%3B%0A%20%20%20%20uint8%20sweetness%3B%0A%7D%0A%0Astruct%20FruitStall%20%7B%0A%20%20%20%20Apple%5B%5D%20apples%3B%0A%20%20%20%20string%20name%3B%0A%7D%0A%60%60%60%0A%0AOne%20would%20decode%20the%20TOML%20as%20follows%3A%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Ffruitstall.toml%22)%3B%0Astring%20memory%20toml%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20data%20%3D%20vm.parseToml(toml)%3B%0AFruitStall%20memory%20fruitstall%20%3D%20abi.decode(data%2C%20(FruitStall))%3B%0A%0A%2F%2F%20Logs%3A%20Welcome%20to%20Fresh%20Fruit%0Aconsole2.log(%22Welcome%20to%22%2C%20fruitstall.name)%3B%0A%0Afor%20(uint256%20i%20%3D%200%3B%20i%20%3C%20fruitstall.apples.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20Apple%20memory%20apple%20%3D%20fruitstall.apples%5Bi%5D%3B%0A%0A%20%20%20%20%2F%2F%20Logs%3A%0A%20%20%20%20%2F%2F%20Color%3A%20Red%2C%20Sourness%3A%203%2C%20Sweetness%3A%207%0A%20%20%20%20%2F%2F%20Color%3A%20Green%2C%20Sourness%3A%205%2C%20Sweetness%3A%205%0A%20%20%20%20%2F%2F%20Color%3A%20Yellow%2C%20Sourness%3A%201%2C%20Sweetness%3A%209%0A%20%20%20%20console2.log(%0A%20%20%20%20%20%20%20%20%22Color%3A%20%25s%2C%20Sourness%3A%20%25d%2C%20Sweetness%3A%20%25d%22%2C%0A%20%20%20%20%20%20%20%20apple.color%2C%0A%20%20%20%20%20%20%20%20apple.sourness%2C%0A%20%20%20%20%20%20%20%20apple.sweetness%0A%20%20%20%20)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20How%20to%20use%20StdToml%0A%0A1.%20Import%20the%20library%20%60import%20%7BstdToml%7D%20from%20%22forge-std%2FStdToml.sol%22%3B%60%0A2.%20Define%20its%20usage%20with%20%60string%60%3A%20%60using%20stdToml%20for%20string%3B%60%0A3.%20If%20you%20want%20to%20parse%20simple%20values%20(numbers%2C%20address%2C%20etc.)%20use%20the%20helper%20functions%0A4.%20If%20you%20want%20to%20parse%20entire%20TOML%20tables%3A%0A%20%20%201.%20Define%20the%20%60struct%60%20in%20Solidity.%20Make%20sure%20to%20follow%20the%20alphabetical%20order%20--%20it's%20hard%20to%20debug%0A%20%20%202.%20Use%20the%20%60parseRaw()%60%20helper%20function%20to%20return%20abi-encoded%20%60bytes%60%20and%20then%20decode%20them%20to%20your%20struct%0A%0A%60%60%60solidity%0Astring%20memory%20root%20%3D%20vm.projectRoot()%3B%0Astring%20memory%20path%20%3D%20string.concat(root%2C%20%22%2Fsrc%2Ftest%2Ffixtures%2Fconfig.toml%22)%3B%0Astring%20memory%20toml%20%3D%20vm.readFile(path)%3B%0Abytes%20memory%20data%20%3D%20toml.parseRaw(%22.%22)%3B%0AConfig%20memory%20config%20%3D%20abi.decode(data%2C%20(Config))%0A%60%60%60%0A%0A%23%23%23%20Troubleshooting%0A%0A%23%23%23%23%20Cannot%20read%20file%0A%0A%3E%20FAIL.%20Reason%3A%20The%20path%20%60%3Cfile-path%3E%60%20is%20not%20allowed%20to%20be%20accessed%20for%20read%20operations%0A%0AIf%20you%20receive%20this%20error%2C%20make%20sure%20that%20you%20enable%20read%20permissions%20in%20%60foundry.toml%60%20using%20the%20%5B%60fs_permissions%60%20key%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%0A%0A%23%23%23%20References%0A%0A-%20Helper%20Library%3A%20%5BstdToml.sol%5D(https%3A%2F%2Fgithub.com%2Ffoundry-rs%2Fforge-std%2Fblob%2Fmaster%2Fsrc%2FStdToml.sol)%0A-%20%5BFile%20Cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx)%3A%20cheatcodes%20for%20working%20with%20files%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-uint-Dwg8-ZSo.js"),__vite__mapDeps([305,1])),path:"/reference/cheatcodes/parse-uint",type:"mdx",filePath:"reference/cheatcodes/parse-uint.mdx",content:"%23%23%20%60parseUint%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseUint(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(uint256%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60uint256%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20uintAsString%20%3D%20%2212345%22%3B%0Auint256%20stringToUint%20%3D%20vm.parseUint(uintAsString)%3B%20%2F%2F%2012345%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./parse-uint-Dwg8-ZSo.js"),__vite__mapDeps([305,1])),path:"/reference/cheatcodes/parse-uint.html",type:"mdx",filePath:"reference/cheatcodes/parse-uint.mdx",content:"%23%23%20%60parseUint%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20parseUint(string%20calldata%20stringifiedValue)%20external%20pure%20returns%20(uint256%20parsedValue)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AParses%20the%20value%20of%20%60string%60%20into%20%60uint256%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20uintAsString%20%3D%20%2212345%22%3B%0Auint256%20stringToUint%20%3D%20vm.parseUint(uintAsString)%3B%20%2F%2F%2012345%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./pause-gas-metering-YYBVqfa1.js"),__vite__mapDeps([306,1])),path:"/reference/cheatcodes/pause-gas-metering",type:"mdx",filePath:"reference/cheatcodes/pause-gas-metering.mdx",content:"%23%23%20%60pauseGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20pauseGasMetering()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APauses%20gas%20metering%20(i.e.%20%60gasleft()%60%20does%20not%20decrease%20as%20operations%20are%20executed).%0A%0AThis%20can%20be%20useful%20for%20getting%20a%20better%20sense%20of%20gas%20costs%2C%20by%20turning%20off%20gas%20metering%20for%20unnecessary%20code%2C%20as%20well%20as%20long-running%20scripts%20that%20would%20otherwise%20run%20out%20of%20gas.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20%60pauseGasMetering%60%20*turns%20off%20DoS%20protections*%20that%20come%20from%20metering%20gas%20usage.%0A%3E%0A%3E%20Exposing%20a%20service%20that%20assumes%20a%20particular%20instance%20of%20the%20EVM%20will%20complete%20due%20to%20gas%20usage%20no%20longer%20is%20true%2C%20and%20a%20timeout%20should%20be%20enabled%20in%20that%20case.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./pause-gas-metering-YYBVqfa1.js"),__vite__mapDeps([306,1])),path:"/reference/cheatcodes/pause-gas-metering.html",type:"mdx",filePath:"reference/cheatcodes/pause-gas-metering.mdx",content:"%23%23%20%60pauseGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20pauseGasMetering()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APauses%20gas%20metering%20(i.e.%20%60gasleft()%60%20does%20not%20decrease%20as%20operations%20are%20executed).%0A%0AThis%20can%20be%20useful%20for%20getting%20a%20better%20sense%20of%20gas%20costs%2C%20by%20turning%20off%20gas%20metering%20for%20unnecessary%20code%2C%20as%20well%20as%20long-running%20scripts%20that%20would%20otherwise%20run%20out%20of%20gas.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20%60pauseGasMetering%60%20*turns%20off%20DoS%20protections*%20that%20come%20from%20metering%20gas%20usage.%0A%3E%0A%3E%20Exposing%20a%20service%20that%20assumes%20a%20particular%20instance%20of%20the%20EVM%20will%20complete%20due%20to%20gas%20usage%20no%20longer%20is%20true%2C%20and%20a%20timeout%20should%20be%20enabled%20in%20that%20case.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prank-C6JNGe2o.js"),__vite__mapDeps([307,1])),path:"/reference/cheatcodes/prank",type:"mdx",filePath:"reference/cheatcodes/prank.mdx",content:"%23%23%20%60prank%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender%2C%20address%20txOrigin)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A-%20%60prank(address%20msgSender)%60%3A%20sets%20%60msg.sender%60%20to%20the%20specified%20address%20**for%20the%20next%20call**.%20%22The%20next%20call%22%20includes%20static%20calls%20as%20well%2C%20but%20not%20delegate%20calls%20or%20calls%20to%20the%20cheat%20code%20address.%0A-%20%60prank(address%20msgSender%2C%20address%20txOrigin)%60%3A%20sets%20%60msg.sender%60%20and%20the%20%60tx.origin%60%20addresses%20**for%20the%20next%20call**.%0A-%20%60prank(address%20msgSender%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20to%20the%20specified%20address%20**for%20the%20next%20delegate%20call**.%0A-%20%60prank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20and%20the%20%60tx.origin%60%20addresses%20**for%20the%20next%20delegate%20call**.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20The%20delegate%20calls%20cannot%20be%20pranked%20from%20an%20EOA.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20function%20withdraw()%20public%20%7B%0A%2F%2F%2F%20%20%20%20%20require(msg.sender%20%3D%3D%20owner)%3B%0A%0Avm.prank(owner)%3B%0AmyContract.withdraw()%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60hoax%60%5D(%2Freference%2Fforge-std%2Fhoax.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prank-C6JNGe2o.js"),__vite__mapDeps([307,1])),path:"/reference/cheatcodes/prank.html",type:"mdx",filePath:"reference/cheatcodes/prank.mdx",content:"%23%23%20%60prank%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender%2C%20address%20txOrigin)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20prank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A-%20%60prank(address%20msgSender)%60%3A%20sets%20%60msg.sender%60%20to%20the%20specified%20address%20**for%20the%20next%20call**.%20%22The%20next%20call%22%20includes%20static%20calls%20as%20well%2C%20but%20not%20delegate%20calls%20or%20calls%20to%20the%20cheat%20code%20address.%0A-%20%60prank(address%20msgSender%2C%20address%20txOrigin)%60%3A%20sets%20%60msg.sender%60%20and%20the%20%60tx.origin%60%20addresses%20**for%20the%20next%20call**.%0A-%20%60prank(address%20msgSender%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20to%20the%20specified%20address%20**for%20the%20next%20delegate%20call**.%0A-%20%60prank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20and%20the%20%60tx.origin%60%20addresses%20**for%20the%20next%20delegate%20call**.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20The%20delegate%20calls%20cannot%20be%20pranked%20from%20an%20EOA.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20function%20withdraw()%20public%20%7B%0A%2F%2F%2F%20%20%20%20%20require(msg.sender%20%3D%3D%20owner)%3B%0A%0Avm.prank(owner)%3B%0AmyContract.withdraw()%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60hoax%60%5D(%2Freference%2Fforge-std%2Fhoax.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prevrandao-MD9Vx1_-.js"),__vite__mapDeps([308,1])),path:"/reference/cheatcodes/prevrandao",type:"mdx",filePath:"reference/cheatcodes/prevrandao.mdx",content:"%23%23%20%60prevrandao%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20prevrandao(bytes32)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.prevrandao%60.%0A%0AIf%20used%20with%20an%20EVM%20version%20previous%20to%20the%20Paris%20hard%20fork%2C%20it%20will%20revert.%20In%20that%20case%2C%20use%20%5B%60vm.difficulty%60%5D%5Bprevrandao%5D%20instead.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.prevrandao(bytes32(uint256(42)))%3B%0Aemit%20log_uint(block.prevrandao)%3B%20%2F%2F%2042%0A%60%60%60%0A%0A%0A%5Bprevrandao%5D%3A%20.%2Fdifficulty.md",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prevrandao-MD9Vx1_-.js"),__vite__mapDeps([308,1])),path:"/reference/cheatcodes/prevrandao.html",type:"mdx",filePath:"reference/cheatcodes/prevrandao.mdx",content:"%23%23%20%60prevrandao%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20prevrandao(bytes32)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.prevrandao%60.%0A%0AIf%20used%20with%20an%20EVM%20version%20previous%20to%20the%20Paris%20hard%20fork%2C%20it%20will%20revert.%20In%20that%20case%2C%20use%20%5B%60vm.difficulty%60%5D%5Bprevrandao%5D%20instead.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.prevrandao(bytes32(uint256(42)))%3B%0Aemit%20log_uint(block.prevrandao)%3B%20%2F%2F%2042%0A%60%60%60%0A%0A%0A%5Bprevrandao%5D%3A%20.%2Fdifficulty.md",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-root-dU4veg-d.js"),__vite__mapDeps([309,1])),path:"/reference/cheatcodes/project-root",type:"mdx",filePath:"reference/cheatcodes/project-root.mdx",content:"%23%23%20%60projectRoot%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20projectRoot()%20external%20returns%20(string%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20root%20directory%20of%20the%20current%20Foundry%20project.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./project-root-dU4veg-d.js"),__vite__mapDeps([309,1])),path:"/reference/cheatcodes/project-root.html",type:"mdx",filePath:"reference/cheatcodes/project-root.mdx",content:"%23%23%20%60projectRoot%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20projectRoot()%20external%20returns%20(string%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20root%20directory%20of%20the%20current%20Foundry%20project.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prompt-D-BAPZfE.js"),__vite__mapDeps([310,1])),path:"/reference/cheatcodes/prompt",type:"mdx",filePath:"reference/cheatcodes/prompt.mdx",content:"%23%23%20%60prompt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20prompt(string%20calldata%20promptText)%20external%20returns%20(string%20memory%20input)%3B%0Afunction%20promptSecret(string%20calldata%20promptText)%20external%20returns%20(string%20memory%20input)%3B%0Afunction%20promptSecretUint(string%20calldata%20promptText)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADisplay%20an%20interactive%20prompt%20to%20the%20user%20for%20inserting%20arbitrary%20data.%0A%0A%60vm.prompt%60%20displays%20an%20interactive%20input%2C%20while%20%60vm.promptSecret%60%20%26%20%60vm.promptSecretUint%60%20display%20a%0Ahidden%20input%2C%20used%20for%20passwords%20and%20other%20secret%20information%20that%20should%20not%0Aleak%20to%20the%20terminal.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20cheatcode%20is%20meant%20to%20be%20used%20in%20scripts%20%E2%80%95%20not%20tests.%20It%20is%20also%20advised%20to%0A%3E%20follow%20the%20best%20practices%20below%20for%20testing%20scripts%20that%20use%20%60vm.prompt%60%20and%0A%3E%20handling%20timeouts%2C%20since%20scripts%20might%20otherwise%20hang%20or%20revert.%20This%20cheatcode%0A%3E%20reverts%20when%20running%20in%20a%20non-interactive%20shell.%0A%0A%23%23%23%20Configuration%0A%0AIn%20order%20to%20prevent%20unwanted%20hangups%2C%20%60vm.prompt%60%20has%20a%20timeout%20configuration.%0A%0AIn%20your%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0Aprompt_timeout%20%3D%20120%0A%60%60%60%0A%0ADefault%20value%20is%20%60120%60%20and%20values%20are%20in%20seconds.%0A%0A%23%23%23%20Best%20practices%0A%0A%23%23%23%23%20Testing%20scripts%20that%20use%20%60vm.prompt%60%0A%0AWhen%20testing%20scripts%20containing%20%60vm.prompt%60%20it%20is%20recommended%20to%20use%20the%0Afollowing%20pattern%3A%0A%0A%60%60%60solidity%0Acontract%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20myUint%20%3D%20vm.parseUint(vm.prompt(%22enter%20uint%22))%3B%0A%20%20%20%20%20%20%20%20run(myUint)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20run(uint256%20myUint)%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20actual%20logic%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AThat%20way%2C%20we%20are%20keeping%20the%20UX%20gain%20(don't%20have%20to%20provide%20%60--sig%60%20argument%0Awhen%20running%20the%20script)%2C%20but%20tests%20can%20set%20any%20value%20to%20%60myUint%60%20and%20not%20just%0Aa%20hardcoded%20default.%0A%0A%23%23%23%23%20Handling%20timeouts%0A%0AWhen%20a%20user%20fails%20to%20provide%20an%20input%20before%20the%20timeout%20expires%2C%20the%0A%60vm.prompt%60%20cheatcode%20reverts.%20If%20you'd%20like%2C%20timeouts%20can%20be%20handled%20by%20using%0A%60try%2Fcatch%60%3A%0A%0A%60%60%60solidity%0Astring%20memory%20input%3B%0A%0Atry%20vm.prompt(%22Username%22)%20returns%20(string%20memory%20res)%20%7B%0A%20%20%20%20input%20%3D%20res%3B%0A%7D%0Acatch%20(bytes%20memory)%20%7B%0A%20%20%20%20input%20%3D%20%22Anonymous%22%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Choose%20RPC%20endpoint%0A%0AProvide%20an%20option%20to%20choose%20the%20RPC%2Fchain%20to%20run%20on.%0A%0AIn%20your%20%60foundry.toml%60%20file%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Amainnet%20%3D%20%22https%3A%2F%2Feth.llamarpc.com%22%0Apolygon%20%3D%20%22https%3A%2F%2Fpolygon.llamarpc.com%22%0A%60%60%60%0A%0AIn%20your%20script%3A%0A%0A%60%60%60solidity%0Astring%20memory%20rpcEndpoint%20%3D%20vm.prompt(%22RPC%20endpoint%22)%3B%0Avm.createSelectFork(rpcEndpoint)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Parse%20user%20input%20into%20native%20types%0A%0AWe%20can%20use%20the%20string%20parsing%20cheatcodes%20to%20parse%20the%20responses%20from%20users%3A%0A%0A%60%60%60solidity%0Auint%20privateKey%20%3D%20vm.promptSecretUint(%22Private%20key%22)%3B%0Aaddress%20to%20%3D%20vm.parseAddress(vm.prompt(%22Send%20to%22))%3B%0Auint%20amount%20%3D%20vm.parseUint(vm.prompt(%22Amount%20(wei)%22))%3B%0Avm.broadcast(privateKey)%3B%0Apayable(to).transfer(amount)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./prompt-D-BAPZfE.js"),__vite__mapDeps([310,1])),path:"/reference/cheatcodes/prompt.html",type:"mdx",filePath:"reference/cheatcodes/prompt.mdx",content:"%23%23%20%60prompt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20prompt(string%20calldata%20promptText)%20external%20returns%20(string%20memory%20input)%3B%0Afunction%20promptSecret(string%20calldata%20promptText)%20external%20returns%20(string%20memory%20input)%3B%0Afunction%20promptSecretUint(string%20calldata%20promptText)%20external%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADisplay%20an%20interactive%20prompt%20to%20the%20user%20for%20inserting%20arbitrary%20data.%0A%0A%60vm.prompt%60%20displays%20an%20interactive%20input%2C%20while%20%60vm.promptSecret%60%20%26%20%60vm.promptSecretUint%60%20display%20a%0Ahidden%20input%2C%20used%20for%20passwords%20and%20other%20secret%20information%20that%20should%20not%0Aleak%20to%20the%20terminal.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20This%20cheatcode%20is%20meant%20to%20be%20used%20in%20scripts%20%E2%80%95%20not%20tests.%20It%20is%20also%20advised%20to%0A%3E%20follow%20the%20best%20practices%20below%20for%20testing%20scripts%20that%20use%20%60vm.prompt%60%20and%0A%3E%20handling%20timeouts%2C%20since%20scripts%20might%20otherwise%20hang%20or%20revert.%20This%20cheatcode%0A%3E%20reverts%20when%20running%20in%20a%20non-interactive%20shell.%0A%0A%23%23%23%20Configuration%0A%0AIn%20order%20to%20prevent%20unwanted%20hangups%2C%20%60vm.prompt%60%20has%20a%20timeout%20configuration.%0A%0AIn%20your%20%60foundry.toml%60%3A%0A%0A%60%60%60toml%0Aprompt_timeout%20%3D%20120%0A%60%60%60%0A%0ADefault%20value%20is%20%60120%60%20and%20values%20are%20in%20seconds.%0A%0A%23%23%23%20Best%20practices%0A%0A%23%23%23%23%20Testing%20scripts%20that%20use%20%60vm.prompt%60%0A%0AWhen%20testing%20scripts%20containing%20%60vm.prompt%60%20it%20is%20recommended%20to%20use%20the%0Afollowing%20pattern%3A%0A%0A%60%60%60solidity%0Acontract%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20myUint%20%3D%20vm.parseUint(vm.prompt(%22enter%20uint%22))%3B%0A%20%20%20%20%20%20%20%20run(myUint)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20run(uint256%20myUint)%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20actual%20logic%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AThat%20way%2C%20we%20are%20keeping%20the%20UX%20gain%20(don't%20have%20to%20provide%20%60--sig%60%20argument%0Awhen%20running%20the%20script)%2C%20but%20tests%20can%20set%20any%20value%20to%20%60myUint%60%20and%20not%20just%0Aa%20hardcoded%20default.%0A%0A%23%23%23%23%20Handling%20timeouts%0A%0AWhen%20a%20user%20fails%20to%20provide%20an%20input%20before%20the%20timeout%20expires%2C%20the%0A%60vm.prompt%60%20cheatcode%20reverts.%20If%20you'd%20like%2C%20timeouts%20can%20be%20handled%20by%20using%0A%60try%2Fcatch%60%3A%0A%0A%60%60%60solidity%0Astring%20memory%20input%3B%0A%0Atry%20vm.prompt(%22Username%22)%20returns%20(string%20memory%20res)%20%7B%0A%20%20%20%20input%20%3D%20res%3B%0A%7D%0Acatch%20(bytes%20memory)%20%7B%0A%20%20%20%20input%20%3D%20%22Anonymous%22%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20Choose%20RPC%20endpoint%0A%0AProvide%20an%20option%20to%20choose%20the%20RPC%2Fchain%20to%20run%20on.%0A%0AIn%20your%20%60foundry.toml%60%20file%3A%0A%0A%60%60%60toml%0A%5Brpc_endpoints%5D%0Amainnet%20%3D%20%22https%3A%2F%2Feth.llamarpc.com%22%0Apolygon%20%3D%20%22https%3A%2F%2Fpolygon.llamarpc.com%22%0A%60%60%60%0A%0AIn%20your%20script%3A%0A%0A%60%60%60solidity%0Astring%20memory%20rpcEndpoint%20%3D%20vm.prompt(%22RPC%20endpoint%22)%3B%0Avm.createSelectFork(rpcEndpoint)%3B%0A%60%60%60%0A%0A%23%23%23%23%20Parse%20user%20input%20into%20native%20types%0A%0AWe%20can%20use%20the%20string%20parsing%20cheatcodes%20to%20parse%20the%20responses%20from%20users%3A%0A%0A%60%60%60solidity%0Auint%20privateKey%20%3D%20vm.promptSecretUint(%22Private%20key%22)%3B%0Aaddress%20to%20%3D%20vm.parseAddress(vm.prompt(%22Send%20to%22))%3B%0Auint%20amount%20%3D%20vm.parseUint(vm.prompt(%22Amount%20(wei)%22))%3B%0Avm.broadcast(privateKey)%3B%0Apayable(to).transfer(amount)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./read-callers-C3elB6s7.js"),__vite__mapDeps([311,1])),path:"/reference/cheatcodes/read-callers",type:"mdx",filePath:"reference/cheatcodes/read-callers.mdx",content:"%23%23%20%60readCallers%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Aenum%20CallerMode%20%7B%0A%20%20%20%20None%2C%0A%20%20%20%20Broadcast%2C%0A%20%20%20%20RecurrentBroadcast%2C%0A%20%20%20%20Prank%2C%0A%20%20%20%20RecurrentPrank%0A%7D%0A%0Afunction%20readCallers()%0Aexternal%0Areturns%20(CallerMode%20callerMode%2C%20address%20msgSender%2C%20address%20txOrigin)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReads%20the%20current%20%60CallerMode%60%2C%20%60msg.sender%60%2C%20and%20%60tx.origin%60.%0A%0AThe%20%60CallerMode%60%20enum%20indicates%20if%20there%20is%20an%20active%20caller%20modification%20and%20the%20type.%0A%0A-%20If%20there%20is%20an%20active%20prank%3A%0A%0A%20%20-%20%60callerMode%60%20will%20be%20equal%20to%3A%0A%20%20%20%20-%20%60CallerMode.Prank%60%20if%20the%20prank%20has%20been%20set%20with%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx).%0A%20%20%20%20-%20%60CallerMode.RecurrentPrank%60%20if%20the%20prank%20has%20been%20set%20with%20%5B%60startPrank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx).%0A%0A-%20If%20there%20is%20an%20active%20broadcast%3A%0A%0A%20%20-%20%60callerMode%60%20will%20be%20equal%20to%3A%0A%20%20%20%20-%20%60CallerMode.Broadcast%60%20if%20the%20broadcast%20has%20been%20set%20with%20%5B%60broadcast%60%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx).%0A%20%20%20%20-%20%60CallerMode.RecurrentBroadcast%60%20if%20the%20broadcast%20has%20been%20set%20with%20%5B%60startBroadcast%60%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx).%0A%0A-%20If%20no%20caller%20modification%20is%20active%3A%0A%20%20-%20%60callerMode%60%20will%20be%20equal%20to%20%60CallerMode.None%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0ACallerMode%20callerMode%3B%0Aaddress%20msgSender%3B%0Aaddress%20txOrigin%3B%0A%0A%2F%2F%20Example%201%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.None)%3B%0AassertEq(msgSender%2C%20defaultSenderAddress)%3B%0AassertEq(txOrigin%2C%20defaultOriginAddress)%3B%0A%0A%2F%2F%20Example%202%0Avm.prank(senderPrankAddress)%3B%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.Prank)%3B%0AassertEq(msgSender%2C%20senderPrankAddress)%3B%0AassertEq(txOrigin%2C%20defaultOriginAddress)%3B%0A%0A%2F%2F%20Example%203%0Avm.prank(senderPrankAddress%2C%20originPrankAddress)%3B%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.Prank)%3B%0AassertEq(msgSender%2C%20senderPrankAddress)%3B%0AassertEq(txOrigin%2C%20originPrankAddress)%3B%0A%0A%2F%2F%20Example%204%0Avm.broadcast(broadcastAddress)%3B%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.Broadcast)%3B%0AassertEq(msgSender%2C%20broadcastAddress)%3B%0AassertEq(txOrigin%2C%20broadcastAddress)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Bprank%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%0A-%20%5BstartPrank%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%0A-%20%5Bbroadcast%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx)%0A-%20%5BstartBroadcast%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./read-callers-C3elB6s7.js"),__vite__mapDeps([311,1])),path:"/reference/cheatcodes/read-callers.html",type:"mdx",filePath:"reference/cheatcodes/read-callers.mdx",content:"%23%23%20%60readCallers%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Aenum%20CallerMode%20%7B%0A%20%20%20%20None%2C%0A%20%20%20%20Broadcast%2C%0A%20%20%20%20RecurrentBroadcast%2C%0A%20%20%20%20Prank%2C%0A%20%20%20%20RecurrentPrank%0A%7D%0A%0Afunction%20readCallers()%0Aexternal%0Areturns%20(CallerMode%20callerMode%2C%20address%20msgSender%2C%20address%20txOrigin)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReads%20the%20current%20%60CallerMode%60%2C%20%60msg.sender%60%2C%20and%20%60tx.origin%60.%0A%0AThe%20%60CallerMode%60%20enum%20indicates%20if%20there%20is%20an%20active%20caller%20modification%20and%20the%20type.%0A%0A-%20If%20there%20is%20an%20active%20prank%3A%0A%0A%20%20-%20%60callerMode%60%20will%20be%20equal%20to%3A%0A%20%20%20%20-%20%60CallerMode.Prank%60%20if%20the%20prank%20has%20been%20set%20with%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx).%0A%20%20%20%20-%20%60CallerMode.RecurrentPrank%60%20if%20the%20prank%20has%20been%20set%20with%20%5B%60startPrank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx).%0A%0A-%20If%20there%20is%20an%20active%20broadcast%3A%0A%0A%20%20-%20%60callerMode%60%20will%20be%20equal%20to%3A%0A%20%20%20%20-%20%60CallerMode.Broadcast%60%20if%20the%20broadcast%20has%20been%20set%20with%20%5B%60broadcast%60%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx).%0A%20%20%20%20-%20%60CallerMode.RecurrentBroadcast%60%20if%20the%20broadcast%20has%20been%20set%20with%20%5B%60startBroadcast%60%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx).%0A%0A-%20If%20no%20caller%20modification%20is%20active%3A%0A%20%20-%20%60callerMode%60%20will%20be%20equal%20to%20%60CallerMode.None%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0ACallerMode%20callerMode%3B%0Aaddress%20msgSender%3B%0Aaddress%20txOrigin%3B%0A%0A%2F%2F%20Example%201%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.None)%3B%0AassertEq(msgSender%2C%20defaultSenderAddress)%3B%0AassertEq(txOrigin%2C%20defaultOriginAddress)%3B%0A%0A%2F%2F%20Example%202%0Avm.prank(senderPrankAddress)%3B%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.Prank)%3B%0AassertEq(msgSender%2C%20senderPrankAddress)%3B%0AassertEq(txOrigin%2C%20defaultOriginAddress)%3B%0A%0A%2F%2F%20Example%203%0Avm.prank(senderPrankAddress%2C%20originPrankAddress)%3B%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.Prank)%3B%0AassertEq(msgSender%2C%20senderPrankAddress)%3B%0AassertEq(txOrigin%2C%20originPrankAddress)%3B%0A%0A%2F%2F%20Example%204%0Avm.broadcast(broadcastAddress)%3B%0A(callerMode%2C%20msgSender%2C%20txOrigin)%20%3D%20vm.readCallers()%3B%0AassertEq(callerMode%2C%20CallerMode.Broadcast)%3B%0AassertEq(msgSender%2C%20broadcastAddress)%3B%0AassertEq(txOrigin%2C%20broadcastAddress)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Bprank%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%0A-%20%5BstartPrank%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%0A-%20%5Bbroadcast%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx)%0A-%20%5BstartBroadcast%5D(%2Freference%2Fcheatcodes%2Fstart-broadcast.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./record-logs-CNFNvobn.js"),__vite__mapDeps([312,1])),path:"/reference/cheatcodes/record-logs",type:"mdx",filePath:"reference/cheatcodes/record-logs.mdx",content:"%23%23%20%60recordLogs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20recordLogs()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ATells%20the%20VM%20to%20start%20recording%20all%20the%20emitted%20events.%20To%20access%20them%2C%20use%20%5B%60getRecordedLogs%60%5D(%2Freference%2Fcheatcodes%2Fget-recorded-logs.mdx).%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20event%20LogCompleted(%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic1%2C%0A%2F%2F%2F%20%20%20bytes%20data%0A%2F%2F%2F%20)%3B%0A%0Avm.recordLogs()%3B%0A%0Aemit%20LogCompleted(10%2C%20%22operation%20completed%22)%3B%0A%0AVm.Log%5B%5D%20memory%20entries%20%3D%20vm.getRecordedLogs()%3B%0A%0AassertEq(entries.length%2C%201)%3B%0AassertEq(entries%5B0%5D.topics%5B0%5D%2C%20keccak256(%22LogCompleted(uint256%2Cbytes)%22))%3B%0AassertEq(entries%5B0%5D.topics%5B1%5D%2C%20bytes32(uint256(10)))%3B%0AassertEq(abi.decode(entries%5B0%5D.data%2C%20(string))%2C%20%22operation%20completed%22)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./record-logs-CNFNvobn.js"),__vite__mapDeps([312,1])),path:"/reference/cheatcodes/record-logs.html",type:"mdx",filePath:"reference/cheatcodes/record-logs.mdx",content:"%23%23%20%60recordLogs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20recordLogs()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ATells%20the%20VM%20to%20start%20recording%20all%20the%20emitted%20events.%20To%20access%20them%2C%20use%20%5B%60getRecordedLogs%60%5D(%2Freference%2Fcheatcodes%2Fget-recorded-logs.mdx).%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20event%20LogCompleted(%0A%2F%2F%2F%20%20%20uint256%20indexed%20topic1%2C%0A%2F%2F%2F%20%20%20bytes%20data%0A%2F%2F%2F%20)%3B%0A%0Avm.recordLogs()%3B%0A%0Aemit%20LogCompleted(10%2C%20%22operation%20completed%22)%3B%0A%0AVm.Log%5B%5D%20memory%20entries%20%3D%20vm.getRecordedLogs()%3B%0A%0AassertEq(entries.length%2C%201)%3B%0AassertEq(entries%5B0%5D.topics%5B0%5D%2C%20keccak256(%22LogCompleted(uint256%2Cbytes)%22))%3B%0AassertEq(entries%5B0%5D.topics%5B1%5D%2C%20bytes32(uint256(10)))%3B%0AassertEq(abi.decode(entries%5B0%5D.data%2C%20(string))%2C%20%22operation%20completed%22)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./record-B7WR-VNX.js"),__vite__mapDeps([313,1])),path:"/reference/cheatcodes/record",type:"mdx",filePath:"reference/cheatcodes/record.mdx",content:"%23%23%20%60record%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20record()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ATell%20the%20VM%20to%20start%20recording%20all%20storage%20reads%20and%20writes.%20To%20access%20the%20reads%20and%20writes%2C%20use%20%5B%60accesses%60%5D(%2Freference%2Fcheatcodes%2Faccesses.mdx).%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Every%20write%20also%20counts%20as%20an%20additional%20read.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20NumsContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num1%20%3D%20100%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num2%20%3D%20200%3B%20%2F%2F%20slot%201%0A%2F%2F%2F%20%7D%0A%0Avm.record()%3B%0AnumsContract.num2()%3B%0A(bytes32%5B%5D%20memory%20reads%2C%20bytes32%5B%5D%20memory%20writes)%20%3D%20vm.accesses(%0A%20%20address(numsContract)%0A)%3B%0Aemit%20log_uint(uint256(reads%5B0%5D))%3B%20%2F%2F%201%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Storage%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./record-B7WR-VNX.js"),__vite__mapDeps([313,1])),path:"/reference/cheatcodes/record.html",type:"mdx",filePath:"reference/cheatcodes/record.mdx",content:"%23%23%20%60record%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20record()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ATell%20the%20VM%20to%20start%20recording%20all%20storage%20reads%20and%20writes.%20To%20access%20the%20reads%20and%20writes%2C%20use%20%5B%60accesses%60%5D(%2Freference%2Fcheatcodes%2Faccesses.mdx).%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Every%20write%20also%20counts%20as%20an%20additional%20read.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20NumsContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num1%20%3D%20100%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%20%20%20%20uint256%20public%20num2%20%3D%20200%3B%20%2F%2F%20slot%201%0A%2F%2F%2F%20%7D%0A%0Avm.record()%3B%0AnumsContract.num2()%3B%0A(bytes32%5B%5D%20memory%20reads%2C%20bytes32%5B%5D%20memory%20writes)%20%3D%20vm.accesses(%0A%20%20address(numsContract)%0A)%3B%0Aemit%20log_uint(uint256(reads%5B0%5D))%3B%20%2F%2F%201%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Storage%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./remember-key-BKUG4urT.js"),__vite__mapDeps([314,1])),path:"/reference/cheatcodes/remember-key",type:"mdx",filePath:"reference/cheatcodes/remember-key.mdx",content:"%23%23%20%60rememberKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20rememberKey(uint256%20privateKey)%20external%20returns%20(address)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStores%20a%20private%20key%20in%20forge's%20local%20wallet%20and%20returns%20the%20corresponding%20address%20which%20can%20later%20be%20used%20for%20%5Bbroadcasting%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx).%0A%0A%23%23%23%20Examples%0A%0ADerive%20the%20private%20key%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60%2C%20remember%20it%20in%20forge's%20wallet%20and%20use%20it%20to%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0Auint256%20privateKey%20%3D%20vm.deriveKey(mnemonic%2C%200)%3B%0Aaddress%20deployer%20%3D%20vm.rememberKey(privateKey)%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0ALoad%20a%20private%20key%20from%20the%20%60PRIVATE_KEY%60%20environment%20variable%20and%20use%20it%20to%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Aaddress%20deployer%20%3D%20vm.rememberKey(vm.envUint(%22PRIVATE_KEY%22))%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BderiveKey%5D(%2Freference%2Fcheatcodes%2Fderive-key.mdx)%0A%0AForge%20Standard%20Library%3A%0A%0A-%20%5BderiveRememberKey%5D(%2Freference%2Fforge-std%2Fderive-remember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./remember-key-BKUG4urT.js"),__vite__mapDeps([314,1])),path:"/reference/cheatcodes/remember-key.html",type:"mdx",filePath:"reference/cheatcodes/remember-key.mdx",content:"%23%23%20%60rememberKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20rememberKey(uint256%20privateKey)%20external%20returns%20(address)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStores%20a%20private%20key%20in%20forge's%20local%20wallet%20and%20returns%20the%20corresponding%20address%20which%20can%20later%20be%20used%20for%20%5Bbroadcasting%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx).%0A%0A%23%23%23%20Examples%0A%0ADerive%20the%20private%20key%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60%2C%20remember%20it%20in%20forge's%20wallet%20and%20use%20it%20to%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0Auint256%20privateKey%20%3D%20vm.deriveKey(mnemonic%2C%200)%3B%0Aaddress%20deployer%20%3D%20vm.rememberKey(privateKey)%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0ALoad%20a%20private%20key%20from%20the%20%60PRIVATE_KEY%60%20environment%20variable%20and%20use%20it%20to%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Aaddress%20deployer%20%3D%20vm.rememberKey(vm.envUint(%22PRIVATE_KEY%22))%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BderiveKey%5D(%2Freference%2Fcheatcodes%2Fderive-key.mdx)%0A%0AForge%20Standard%20Library%3A%0A%0A-%20%5BderiveRememberKey%5D(%2Freference%2Fforge-std%2Fderive-remember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./reset-gas-metering-BbD02xhp.js"),__vite__mapDeps([315,1])),path:"/reference/cheatcodes/reset-gas-metering",type:"mdx",filePath:"reference/cheatcodes/reset-gas-metering.mdx",content:"%23%23%20%60resetGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20resetGasMetering()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AResets%20gas%20metering%20to%20the%20gas%20limit%20of%20current%20execution%20frame%20(i.e.%20%60gasleft()%60%20will%20be%20restored%20to%20initial%20value).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./reset-gas-metering-BbD02xhp.js"),__vite__mapDeps([315,1])),path:"/reference/cheatcodes/reset-gas-metering.html",type:"mdx",filePath:"reference/cheatcodes/reset-gas-metering.mdx",content:"%23%23%20%60resetGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20resetGasMetering()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AResets%20gas%20metering%20to%20the%20gas%20limit%20of%20current%20execution%20frame%20(i.e.%20%60gasleft()%60%20will%20be%20restored%20to%20initial%20value).%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./resume-gas-metering-iaW4NxOR.js"),__vite__mapDeps([316,1])),path:"/reference/cheatcodes/resume-gas-metering",type:"mdx",filePath:"reference/cheatcodes/resume-gas-metering.mdx",content:"%23%23%20%60resumeGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20resumeGasMetering()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AResumes%20gas%20metering%20(i.e.%20%60gasleft()%60%20will%20decrease%20as%20operations%20are%20executed).%20Gas%20usage%20will%20resume%20at%20the%20same%20amount%20at%20which%20it%20was%20paused.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./resume-gas-metering-iaW4NxOR.js"),__vite__mapDeps([316,1])),path:"/reference/cheatcodes/resume-gas-metering.html",type:"mdx",filePath:"reference/cheatcodes/resume-gas-metering.mdx",content:"%23%23%20%60resumeGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20resumeGasMetering()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AResumes%20gas%20metering%20(i.e.%20%60gasleft()%60%20will%20decrease%20as%20operations%20are%20executed).%20Gas%20usage%20will%20resume%20at%20the%20same%20amount%20at%20which%20it%20was%20paused.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./revoke-persistent-QQT-uiP3.js"),__vite__mapDeps([317,1])),path:"/reference/cheatcodes/revoke-persistent",type:"mdx",filePath:"reference/cheatcodes/revoke-persistent.mdx",content:"%23%23%20%60revokePersistent%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20revokePersistent(address)%20external%3B%0Afunction%20revokePersistent(address%5B%5D%20calldata)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20counterpart%20of%20%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)%2C%20that%20makes%20the%20given%20contract%20not%20persistent%20across%20fork%20swaps%0A%0A%23%23%23%20Examples%0A%0ARevoke%20a%20persistent%20status%20of%20a%20contract%0A%0A%60%60%60solidity%0Acontract%20SimpleStorageContract%20%7B%0A%20%20%20%20string%20public%20value%3B%0A%0A%20%20%20%20function%20set(uint256%20_value)%20public%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20_value%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afunction%20testRevokePersistent()%20public%20%7B%0A%20%20%20%20%2F%2F%20select%20a%20specific%20fork%0A%20%20%20%20cheats.selectFork(mainnetFork)%3B%0A%0A%20%20%20%20%2F%2F%20create%20a%20new%20contract%20that's%20stored%20in%20the%20%60mainnetFork%60%20storage%0A%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%0A%20%20%20%20%2F%2F%20%60simple%60%20is%20not%20marked%20as%20persistent%0A%20%20%20%20assert(!cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20make%20it%20persistent%0A%20%20%20%20cheats.makePersistent(address(simple))%3B%0A%0A%20%20%20%20%2F%2F%20ensure%20it%20is%20persistent%0A%20%20%20%20assert(cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20revoke%20it%0A%20%20%20%20cheats.revokePersistent(address(simple))%3B%0A%0A%20%20%20%20%2F%2F%20contract%20no%20longer%20persistent%0A%20%20%20%20assert(!cheats.isPersistent(address(simple)))%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BisPersistent%5D(%2Freference%2Fcheatcodes%2Fis-persistent.mdx)%0A-%20%5BrevokePersistent%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./revoke-persistent-QQT-uiP3.js"),__vite__mapDeps([317,1])),path:"/reference/cheatcodes/revoke-persistent.html",type:"mdx",filePath:"reference/cheatcodes/revoke-persistent.mdx",content:"%23%23%20%60revokePersistent%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20revokePersistent(address)%20external%3B%0Afunction%20revokePersistent(address%5B%5D%20calldata)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20counterpart%20of%20%5B%60makePersistent%60%5D(%2Freference%2Fcheatcodes%2Fmake-persistent.mdx)%2C%20that%20makes%20the%20given%20contract%20not%20persistent%20across%20fork%20swaps%0A%0A%23%23%23%20Examples%0A%0ARevoke%20a%20persistent%20status%20of%20a%20contract%0A%0A%60%60%60solidity%0Acontract%20SimpleStorageContract%20%7B%0A%20%20%20%20string%20public%20value%3B%0A%0A%20%20%20%20function%20set(uint256%20_value)%20public%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20_value%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afunction%20testRevokePersistent()%20public%20%7B%0A%20%20%20%20%2F%2F%20select%20a%20specific%20fork%0A%20%20%20%20cheats.selectFork(mainnetFork)%3B%0A%0A%20%20%20%20%2F%2F%20create%20a%20new%20contract%20that's%20stored%20in%20the%20%60mainnetFork%60%20storage%0A%20%20%20%20SimpleStorageContract%20simple%20%3D%20new%20SimpleStorageContract()%3B%0A%0A%20%20%20%20%2F%2F%20%60simple%60%20is%20not%20marked%20as%20persistent%0A%20%20%20%20assert(!cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20make%20it%20persistent%0A%20%20%20%20cheats.makePersistent(address(simple))%3B%0A%0A%20%20%20%20%2F%2F%20ensure%20it%20is%20persistent%0A%20%20%20%20assert(cheats.isPersistent(address(simple)))%3B%0A%0A%20%20%20%20%2F%2F%20revoke%20it%0A%20%20%20%20cheats.revokePersistent(address(simple))%3B%0A%0A%20%20%20%20%2F%2F%20contract%20no%20longer%20persistent%0A%20%20%20%20assert(!cheats.isPersistent(address(simple)))%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BisPersistent%5D(%2Freference%2Fcheatcodes%2Fis-persistent.mdx)%0A-%20%5BrevokePersistent%5D(%2Freference%2Fcheatcodes%2Frevoke-persistent.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./roll-fork-BaxJRgFv.js"),__vite__mapDeps([318,1])),path:"/reference/cheatcodes/roll-fork",type:"mdx",filePath:"reference/cheatcodes/roll-fork.mdx",content:"%23%23%20%60rollFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20roll%20the%20_active_%20fork%20to%20the%20given%20block%0Afunction%20rollFork(uint256%20blockNumber)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20roll%20the%20_active_%20fork%20to%20the%20block%20in%20which%20the%20transaction%20was%20mined%20it%20and%20replays%20all%20previously%20executed%20transactions%0Afunction%20rollFork(bytes32%20transaction)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Same%20as%20%60rollFork(uint256%20blockNumber)%60%20but%20uses%20the%20fork%20corresponding%20to%20the%20%60forkId%60%0Afunction%20rollFork(uint256%20forkId%2C%20uint256%20blockNumber)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Same%20as%20%60rollFork(bytes32%20transaction)%60%20but%20uses%20the%20fork%20corresponding%20to%20the%20%60forkId%60%0Afunction%20rollFork(uint256%20forkId%2C%20bytes32%20transaction)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.number%60.%20If%20a%20fork%20identifier%20is%20passed%20as%20an%20argument%2C%20it%20will%20update%20that%20fork%2C%20otherwise%20it%20will%20update%20the%20currently%20active%20fork.%0A%0AIf%20a%20transaction%20hash%20is%20provided%2C%20it%20will%20roll%20the%20fork%20to%20the%20block%20the%20transaction%20was%20mined%20in%20and%20replays%20all%20previously%20executed%20transactions.%0A%0A%23%23%23%20Examples%0A%0ASet%20%60block.number%60%20for%20the%20currently%20active%20fork%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0Avm.selectFork(forkId)%3B%0A%0AassertEq(block.number%2C%2015_171_037)%3B%20%2F%2F%20as%20of%20time%20of%20writing%2C%202022-07-19%2004%3A55%3A27%20UTC%0A%0Avm.rollFork(15_171_057)%3B%0A%0AassertEq(block.number%2C%2015_171_057)%3B%0A%60%60%60%0A%0ASet%20%60block.number%60%20for%20the%20fork%20identified%20by%20the%20passed%20%60forkId%60%20argument%3A%0A%0A%60%60%60solidity%0Auint256%20optimismForkId%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%0Avm.rollFork(optimismForkId%2C%201_337_000)%3B%0A%0Avm.selectFork(optimismForkId)%3B%0A%0AassertEq(block.number%2C%201_337_000)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Broll%5D(%2Freference%2Fcheatcodes%2Froll.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./roll-fork-BaxJRgFv.js"),__vite__mapDeps([318,1])),path:"/reference/cheatcodes/roll-fork.html",type:"mdx",filePath:"reference/cheatcodes/roll-fork.mdx",content:"%23%23%20%60rollFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20roll%20the%20_active_%20fork%20to%20the%20given%20block%0Afunction%20rollFork(uint256%20blockNumber)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20roll%20the%20_active_%20fork%20to%20the%20block%20in%20which%20the%20transaction%20was%20mined%20it%20and%20replays%20all%20previously%20executed%20transactions%0Afunction%20rollFork(bytes32%20transaction)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Same%20as%20%60rollFork(uint256%20blockNumber)%60%20but%20uses%20the%20fork%20corresponding%20to%20the%20%60forkId%60%0Afunction%20rollFork(uint256%20forkId%2C%20uint256%20blockNumber)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%20Same%20as%20%60rollFork(bytes32%20transaction)%60%20but%20uses%20the%20fork%20corresponding%20to%20the%20%60forkId%60%0Afunction%20rollFork(uint256%20forkId%2C%20bytes32%20transaction)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.number%60.%20If%20a%20fork%20identifier%20is%20passed%20as%20an%20argument%2C%20it%20will%20update%20that%20fork%2C%20otherwise%20it%20will%20update%20the%20currently%20active%20fork.%0A%0AIf%20a%20transaction%20hash%20is%20provided%2C%20it%20will%20roll%20the%20fork%20to%20the%20block%20the%20transaction%20was%20mined%20in%20and%20replays%20all%20previously%20executed%20transactions.%0A%0A%23%23%23%20Examples%0A%0ASet%20%60block.number%60%20for%20the%20currently%20active%20fork%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0Avm.selectFork(forkId)%3B%0A%0AassertEq(block.number%2C%2015_171_037)%3B%20%2F%2F%20as%20of%20time%20of%20writing%2C%202022-07-19%2004%3A55%3A27%20UTC%0A%0Avm.rollFork(15_171_057)%3B%0A%0AassertEq(block.number%2C%2015_171_057)%3B%0A%60%60%60%0A%0ASet%20%60block.number%60%20for%20the%20fork%20identified%20by%20the%20passed%20%60forkId%60%20argument%3A%0A%0A%60%60%60solidity%0Auint256%20optimismForkId%20%3D%20vm.createFork(OPTIMISM_RPC_URL)%3B%0A%0Avm.rollFork(optimismForkId%2C%201_337_000)%3B%0A%0Avm.selectFork(optimismForkId)%3B%0A%0AassertEq(block.number%2C%201_337_000)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Broll%5D(%2Freference%2Fcheatcodes%2Froll.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./roll-Doymi_69.js"),__vite__mapDeps([319,1])),path:"/reference/cheatcodes/roll",type:"mdx",filePath:"reference/cheatcodes/roll.mdx",content:"%23%23%20%60roll%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20roll(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.number%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.roll(100)%3B%0Aemit%20log_uint(block.number)%3B%20%2F%2F%20100%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BrollFork%5D(%2Freference%2Fcheatcodes%2Froll-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./roll-Doymi_69.js"),__vite__mapDeps([319,1])),path:"/reference/cheatcodes/roll.html",type:"mdx",filePath:"reference/cheatcodes/roll.mdx",content:"%23%23%20%60roll%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20roll(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.number%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.roll(100)%3B%0Aemit%20log_uint(block.number)%3B%20%2F%2F%20100%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BrollFork%5D(%2Freference%2Fcheatcodes%2Froll-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rpc-ILl4MRg7.js"),__vite__mapDeps([320,1])),path:"/reference/cheatcodes/rpc",type:"mdx",filePath:"reference/cheatcodes/rpc.mdx",content:"%23%23%20RPC%20related%20cheatcodes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Returns%20the%20URL%20for%20a%20configured%20alias%0Afunction%20rpcUrl(string%20calldata%20alias)%20external%20returns%20(string%20memory)%3B%0A%2F%2F%20Returns%20all%20configured%20(alias%2C%20URL)%20pairs%0Afunction%20rpcUrls()%20external%20returns(string%5B2%5D%5B%5D%20memory)%3B%0A%2F%2F%2F%20Performs%20an%20Ethereum%20JSON-RPC%20request%20to%20the%20current%20fork%20URL.%0Afunction%20rpc(string%20calldata%20method%2C%20string%20calldata%20params)%20external%20returns%20(bytes%20memory%20data)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AProvides%20cheatcodes%20to%20access%20all%20RPC%20endpoints%20configured%20in%20the%20%60rpc_endpoints%60%20object%20of%20the%20%60foundry.toml%60%2C%20and%20the%20ability%20to%20make%20%60rpc%60%20calls%20using%20the%20configured%20fork%20URL.%0A%0A%23%23%23%20Examples%0A%0AThe%20following%20%60rpc_endpoints%60%20in%20%60foundry.toml%60%20registers%20two%20RPC%20aliases%3A%0A%0A-%20%60optimism%60%20references%20the%20URL%20directly%0A-%20%60mainnet%60%20references%20the%20%60RPC_MAINNET%60%20environment%20value%20that%20is%20expected%20to%20contain%20the%20actual%20URL%0A%0A_Env%20variables%20need%20to%20be%20wrapped%20in%20%60%24%7B%7D%60_%0A%0A%60%60%60toml%0A%23%20--snip--%0A%5Brpc_endpoints%5D%0Aoptimism%20%3D%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22%0Amainnet%20%3D%20%22%24%7BRPC_MAINNET%7D%22%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20url%20%3D%20vm.rpcUrl(%22optimism%22)%3B%0AassertEq(url%2C%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22)%3B%0A%60%60%60%0A%0AIf%20a%20ENV%20var%20is%20missing%2C%20%60rpcUrl()%60%20will%20revert%3A%0A%0A%60%60%60solidity%0Avm.expectRevert(%22Failed%20to%20resolve%20env%20var%20%60%24%7BRPC_MAINNET%7D%60%20in%20%60RPC_MAINNET%60%3A%20environment%20variable%20not%20found%22)%3B%0Astring%20memory%20url%20%3D%20vm.rpcUrl(%22mainnet%22)%3B%0A%60%60%60%0A%0ARetrieve%20all%20available%20alias%20-%3E%20URL%20pairs%0A%0A%60%60%60solidity%0Astring%5B2%5D%5B%5D%20memory%20allUrls%20%3D%20vm.rpcUrls()%3B%0AassertEq(allUrls.length%2C%202)%3B%0A%0Astring%5B2%5D%20memory%20val%20%3D%20allUrls%5B0%5D%3B%0AassertEq(val%5B0%5D%2C%20%22optimism%22)%3B%0A%0Astring%5B2%5D%20memory%20env%20%3D%20allUrls%5B1%5D%3B%0AassertEq(env%5B0%5D%2C%20%22mainnet%22)%3B%0A%60%60%60%0A%0AMake%20an%20RPC%20call%20to%20%60eth_getBalance%60%0A%0A%60%60%60solidity%0A%2F%2F%20balance%20at%20block%20%3Chttps%3A%2F%2Fetherscan.io%2Fblock%2F18332681%3E%0Abytes%20memory%20result%20%3D%20vm.rpc(%22eth_getBalance%22%2C%20%22%5B%5C%220x8D97689C9818892B700e27F316cc3E41e17fBeb9%5C%22%2C%20%5C%220x117BC09%5C%22%5D%22)%0AassertEq(hex%2210b7c11bcb51e6%22%2C%20result)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Config%0A%0A%5BConfig%20Reference%5D(%2Fconfig%2Freference%2Ftesting%23rpc_endpoints)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rpc-ILl4MRg7.js"),__vite__mapDeps([320,1])),path:"/reference/cheatcodes/rpc.html",type:"mdx",filePath:"reference/cheatcodes/rpc.mdx",content:"%23%23%20RPC%20related%20cheatcodes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Returns%20the%20URL%20for%20a%20configured%20alias%0Afunction%20rpcUrl(string%20calldata%20alias)%20external%20returns%20(string%20memory)%3B%0A%2F%2F%20Returns%20all%20configured%20(alias%2C%20URL)%20pairs%0Afunction%20rpcUrls()%20external%20returns(string%5B2%5D%5B%5D%20memory)%3B%0A%2F%2F%2F%20Performs%20an%20Ethereum%20JSON-RPC%20request%20to%20the%20current%20fork%20URL.%0Afunction%20rpc(string%20calldata%20method%2C%20string%20calldata%20params)%20external%20returns%20(bytes%20memory%20data)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AProvides%20cheatcodes%20to%20access%20all%20RPC%20endpoints%20configured%20in%20the%20%60rpc_endpoints%60%20object%20of%20the%20%60foundry.toml%60%2C%20and%20the%20ability%20to%20make%20%60rpc%60%20calls%20using%20the%20configured%20fork%20URL.%0A%0A%23%23%23%20Examples%0A%0AThe%20following%20%60rpc_endpoints%60%20in%20%60foundry.toml%60%20registers%20two%20RPC%20aliases%3A%0A%0A-%20%60optimism%60%20references%20the%20URL%20directly%0A-%20%60mainnet%60%20references%20the%20%60RPC_MAINNET%60%20environment%20value%20that%20is%20expected%20to%20contain%20the%20actual%20URL%0A%0A_Env%20variables%20need%20to%20be%20wrapped%20in%20%60%24%7B%7D%60_%0A%0A%60%60%60toml%0A%23%20--snip--%0A%5Brpc_endpoints%5D%0Aoptimism%20%3D%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22%0Amainnet%20%3D%20%22%24%7BRPC_MAINNET%7D%22%0A%60%60%60%0A%0A%60%60%60solidity%0Astring%20memory%20url%20%3D%20vm.rpcUrl(%22optimism%22)%3B%0AassertEq(url%2C%20%22https%3A%2F%2Foptimism.alchemyapi.io%2Fv2%2F...%22)%3B%0A%60%60%60%0A%0AIf%20a%20ENV%20var%20is%20missing%2C%20%60rpcUrl()%60%20will%20revert%3A%0A%0A%60%60%60solidity%0Avm.expectRevert(%22Failed%20to%20resolve%20env%20var%20%60%24%7BRPC_MAINNET%7D%60%20in%20%60RPC_MAINNET%60%3A%20environment%20variable%20not%20found%22)%3B%0Astring%20memory%20url%20%3D%20vm.rpcUrl(%22mainnet%22)%3B%0A%60%60%60%0A%0ARetrieve%20all%20available%20alias%20-%3E%20URL%20pairs%0A%0A%60%60%60solidity%0Astring%5B2%5D%5B%5D%20memory%20allUrls%20%3D%20vm.rpcUrls()%3B%0AassertEq(allUrls.length%2C%202)%3B%0A%0Astring%5B2%5D%20memory%20val%20%3D%20allUrls%5B0%5D%3B%0AassertEq(val%5B0%5D%2C%20%22optimism%22)%3B%0A%0Astring%5B2%5D%20memory%20env%20%3D%20allUrls%5B1%5D%3B%0AassertEq(env%5B0%5D%2C%20%22mainnet%22)%3B%0A%60%60%60%0A%0AMake%20an%20RPC%20call%20to%20%60eth_getBalance%60%0A%0A%60%60%60solidity%0A%2F%2F%20balance%20at%20block%20%3Chttps%3A%2F%2Fetherscan.io%2Fblock%2F18332681%3E%0Abytes%20memory%20result%20%3D%20vm.rpc(%22eth_getBalance%22%2C%20%22%5B%5C%220x8D97689C9818892B700e27F316cc3E41e17fBeb9%5C%22%2C%20%5C%220x117BC09%5C%22%5D%22)%0AassertEq(hex%2210b7c11bcb51e6%22%2C%20result)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Config%0A%0A%5BConfig%20Reference%5D(%2Fconfig%2Freference%2Ftesting%23rpc_endpoints)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./select-fork-BkNnw_2F.js"),__vite__mapDeps([321,1])),path:"/reference/cheatcodes/select-fork",type:"mdx",filePath:"reference/cheatcodes/select-fork.mdx",content:"%23%23%20%60selectFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20selectFork(uint256%20forkId)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ATakes%20a%20fork%20identifier%20created%20by%20%60createFork%60%20and%20sets%20the%20corresponding%20forked%20state%20as%20active.%0A%0A%23%23%23%20Examples%0A%0ASelect%20a%20previously%20created%20fork%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0A%0Avm.selectFork(forkId)%3B%0A%0AassertEq(vm.activeFork()%2C%20forkId)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./select-fork-BkNnw_2F.js"),__vite__mapDeps([321,1])),path:"/reference/cheatcodes/select-fork.html",type:"mdx",filePath:"reference/cheatcodes/select-fork.mdx",content:"%23%23%20%60selectFork%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20selectFork(uint256%20forkId)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ATakes%20a%20fork%20identifier%20created%20by%20%60createFork%60%20and%20sets%20the%20corresponding%20forked%20state%20as%20active.%0A%0A%23%23%23%20Examples%0A%0ASelect%20a%20previously%20created%20fork%3A%0A%0A%60%60%60solidity%0Auint256%20forkId%20%3D%20vm.createFork(MAINNET_RPC_URL)%3B%0A%0Avm.selectFork(forkId)%3B%0A%0AassertEq(vm.activeFork()%2C%20forkId)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./serialize-json-Ci73l_4A.js"),__vite__mapDeps([322,1])),path:"/reference/cheatcodes/serialize-json",type:"mdx",filePath:"reference/cheatcodes/serialize-json.mdx",content:"%23%23%20%60serializeJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20serializeJson(string%20calldata%20objectKey%2C%20string%20calldata%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBool(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bool%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeUint(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20uint256%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeInt(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20int256%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeAddress(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20address%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes32(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes32%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeString(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20string%20calldata%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes%20calldata%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBool(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bool%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeUint(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20uint256%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeInt(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20int256%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeAddress(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20address%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes32(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes32%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeString(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20string%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASerializes%20values%20as%20a%20stringified%20JSON%20object.%0A%0A%23%23%23%20How%20it%20works%0A%0AThe%20idea%20is%20that%20the%20user%20serializes%20the%20values%20of%20the%20JSON%20file%20and%20finally%20writes%20that%20object%20to%20a%20file.%20The%20user%20needs%20to%20pass%3A%0A%0A-%20A%20key%20for%20the%20_object_%20to%20which%20the%20value%20should%20be%20serialized%20to.%20This%20enables%20the%20user%20to%20serialize%20multiple%20objects%20in%20parallel%0A-%20A%20key%20for%20the%20_value_%20which%20will%20be%20its%20key%20in%20the%20JSON%20file%0A-%20The%20value%20to%20be%20serialized%0A%0AAn%20exception%20to%20this%20is%20the%20%60serializeJson%60%20function%2C%20which%20only%20receives%20an%20%60objectKey%60%20and%20a%20json%20string%20%60value%60.%20This%20allows%20the%20user%20to%20serialize%20an%20existing%20json%20object%20and%20directly%20assign%20it%20to%20the%20provided%20%60objectKey%60.%20If%20the%20%60objectKey%60%20is%20already%20in%20use%2C%20the%20whole%20serialized%20json%20is%20overwritten.%0A%0AThe%20keys%20do%20not%20need%20to%20be%20of%20some%20specific%20form.%20They%20are%20of%20type%20%60string%60%20to%20enable%20for%20intuitive%20human%20interpretation.%20Semantically%2C%20they%20are%20not%20important%20other%20than%20to%20be%20used%20as%20keys.%0A%0AThe%20cheatcodes%20return%20the%20JSON%20object%20that%20is%20being%20serialized%20**up%20to%20that%20point**.%20That%20way%20the%20user%20can%20serialize%20inner%20JSON%20objects%20and%20then%20serialize%20them%20in%20bigger%20JSON%20objects%2C%20enabling%20the%20user%20to%20create%20arbitrary%20JSON%20objects.%0A%0AFinally%2C%20the%20user%20writes%20the%20JSON%20object%20to%20a%20JSON%20file%20by%20using%20%5BwriteJson%5D(%2Freference%2Fcheatcodes%2Fwrite-json.mdx).%0AAlternatively%2C%20the%20user%20can%20write%20the%20JSON%20object%20to%20TOML%20file%20by%20using%20%5BwriteToml%5D(%2Freference%2Fcheatcodes%2Fwrite-toml.mdx).%0A%0A**Remember%3A**%20The%20file%20path%20needs%20to%20be%20in%20the%20allowed%20paths.%20Read%20more%20in%20%5BFile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%0A%23%23%23%20Example%0A%0ALet's%20assume%20we%20want%20to%20write%20the%20following%20JSON%20to%20a%20file%3A%0A%0A%60%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22object%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D%60%0A%0A%60%60%60solidity%0Astring%20memory%20obj1%20%3D%20%22some%20key%22%3B%0Avm.serializeBool(obj1%2C%20%22boolean%22%2C%20true)%3B%0Avm.serializeUint(obj1%2C%20%22number%22%2C%20uint256(342))%3B%0A%0Astring%20memory%20obj2%20%3D%20%22some%20other%20key%22%3B%0Astring%20memory%20output%20%3D%20vm.serializeString(obj2%2C%20%22title%22%2C%20%22finally%20json%20serialization%22)%3B%0A%0A%2F%2F%20IMPORTANT%3A%20This%20works%20because%20%60serializeString%60%20first%20tries%20to%20interpret%20%60output%60%20as%0A%2F%2F%20%20%20a%20stringified%20JSON%20object.%20If%20the%20parsing%20fails%2C%20then%20it%20treats%20it%20as%20a%20normal%0A%2F%2F%20%20%20string%20instead.%0A%2F%2F%20%20%20For%20instance%2C%20an%20%60output%60%20equal%20to%20'%7B%20%22ok%22%3A%20%22asd%22%20%7D'%20will%20produce%20an%20object%2C%20but%0A%2F%2F%20%20%20an%20output%20equal%20to%20'%22ok%22%3A%20%22asd%22%20%7D'%20will%20just%20produce%20a%20normal%20string.%0Astring%20memory%20finalJson%20%3D%20vm.serializeString(obj1%2C%20%22object%22%2C%20output)%3B%0A%0Avm.writeJson(finalJson%2C%20%22.%2Foutput%2Fexample.json%22)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BwriteJson%5D(%2Freference%2Fcheatcodes%2Fwrite-json.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./serialize-json-Ci73l_4A.js"),__vite__mapDeps([322,1])),path:"/reference/cheatcodes/serialize-json.html",type:"mdx",filePath:"reference/cheatcodes/serialize-json.mdx",content:"%23%23%20%60serializeJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20serializeJson(string%20calldata%20objectKey%2C%20string%20calldata%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBool(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bool%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeUint(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20uint256%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeInt(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20int256%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeAddress(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20address%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes32(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes32%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeString(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20string%20calldata%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes%20calldata%20value)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBool(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bool%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeUint(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20uint256%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeInt(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20int256%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeAddress(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20address%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes32(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes32%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeString(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20string%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%0Afunction%20serializeBytes(string%20calldata%20objectKey%2C%20string%20calldata%20valueKey%2C%20bytes%5B%5D%20calldata%20values)%0A%20%20%20%20external%0A%20%20%20%20returns%20(string%20memory%20json)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASerializes%20values%20as%20a%20stringified%20JSON%20object.%0A%0A%23%23%23%20How%20it%20works%0A%0AThe%20idea%20is%20that%20the%20user%20serializes%20the%20values%20of%20the%20JSON%20file%20and%20finally%20writes%20that%20object%20to%20a%20file.%20The%20user%20needs%20to%20pass%3A%0A%0A-%20A%20key%20for%20the%20_object_%20to%20which%20the%20value%20should%20be%20serialized%20to.%20This%20enables%20the%20user%20to%20serialize%20multiple%20objects%20in%20parallel%0A-%20A%20key%20for%20the%20_value_%20which%20will%20be%20its%20key%20in%20the%20JSON%20file%0A-%20The%20value%20to%20be%20serialized%0A%0AAn%20exception%20to%20this%20is%20the%20%60serializeJson%60%20function%2C%20which%20only%20receives%20an%20%60objectKey%60%20and%20a%20json%20string%20%60value%60.%20This%20allows%20the%20user%20to%20serialize%20an%20existing%20json%20object%20and%20directly%20assign%20it%20to%20the%20provided%20%60objectKey%60.%20If%20the%20%60objectKey%60%20is%20already%20in%20use%2C%20the%20whole%20serialized%20json%20is%20overwritten.%0A%0AThe%20keys%20do%20not%20need%20to%20be%20of%20some%20specific%20form.%20They%20are%20of%20type%20%60string%60%20to%20enable%20for%20intuitive%20human%20interpretation.%20Semantically%2C%20they%20are%20not%20important%20other%20than%20to%20be%20used%20as%20keys.%0A%0AThe%20cheatcodes%20return%20the%20JSON%20object%20that%20is%20being%20serialized%20**up%20to%20that%20point**.%20That%20way%20the%20user%20can%20serialize%20inner%20JSON%20objects%20and%20then%20serialize%20them%20in%20bigger%20JSON%20objects%2C%20enabling%20the%20user%20to%20create%20arbitrary%20JSON%20objects.%0A%0AFinally%2C%20the%20user%20writes%20the%20JSON%20object%20to%20a%20JSON%20file%20by%20using%20%5BwriteJson%5D(%2Freference%2Fcheatcodes%2Fwrite-json.mdx).%0AAlternatively%2C%20the%20user%20can%20write%20the%20JSON%20object%20to%20TOML%20file%20by%20using%20%5BwriteToml%5D(%2Freference%2Fcheatcodes%2Fwrite-toml.mdx).%0A%0A**Remember%3A**%20The%20file%20path%20needs%20to%20be%20in%20the%20allowed%20paths.%20Read%20more%20in%20%5BFile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%0A%23%23%23%20Example%0A%0ALet's%20assume%20we%20want%20to%20write%20the%20following%20JSON%20to%20a%20file%3A%0A%0A%60%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22object%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D%60%0A%0A%60%60%60solidity%0Astring%20memory%20obj1%20%3D%20%22some%20key%22%3B%0Avm.serializeBool(obj1%2C%20%22boolean%22%2C%20true)%3B%0Avm.serializeUint(obj1%2C%20%22number%22%2C%20uint256(342))%3B%0A%0Astring%20memory%20obj2%20%3D%20%22some%20other%20key%22%3B%0Astring%20memory%20output%20%3D%20vm.serializeString(obj2%2C%20%22title%22%2C%20%22finally%20json%20serialization%22)%3B%0A%0A%2F%2F%20IMPORTANT%3A%20This%20works%20because%20%60serializeString%60%20first%20tries%20to%20interpret%20%60output%60%20as%0A%2F%2F%20%20%20a%20stringified%20JSON%20object.%20If%20the%20parsing%20fails%2C%20then%20it%20treats%20it%20as%20a%20normal%0A%2F%2F%20%20%20string%20instead.%0A%2F%2F%20%20%20For%20instance%2C%20an%20%60output%60%20equal%20to%20'%7B%20%22ok%22%3A%20%22asd%22%20%7D'%20will%20produce%20an%20object%2C%20but%0A%2F%2F%20%20%20an%20output%20equal%20to%20'%22ok%22%3A%20%22asd%22%20%7D'%20will%20just%20produce%20a%20normal%20string.%0Astring%20memory%20finalJson%20%3D%20vm.serializeString(obj1%2C%20%22object%22%2C%20output)%3B%0A%0Avm.writeJson(finalJson%2C%20%22.%2Foutput%2Fexample.json%22)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BwriteJson%5D(%2Freference%2Fcheatcodes%2Fwrite-json.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./set-arbitrary-storage-jGmqaQR8.js"),__vite__mapDeps([323,1])),path:"/reference/cheatcodes/set-arbitrary-storage",type:"mdx",filePath:"reference/cheatcodes/set-arbitrary-storage.mdx",content:"%23%23%20%60setArbitraryStorage%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20setArbitraryStorage(address%20target)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUtility%20cheatcode%20to%20make%20the%20storage%20of%20the%20given%20address%20fully%20symbolic.%0AAny%20subsequent%20%60SLOAD%60%20to%20target%20storage%20reads%20an%20arbitrary%20value%20which%20is%20memorized%20and%20returned%20if%20the%20same%20slot%20is%20loaded%20again.%0AIf%20the%20storage%20slot%20is%20explicitly%20written%20(before%20or%20after%20first%20load)%2C%20then%20the%20written%20value%20is%20returned.%0A%0A%23%23%23%20Examples%0A%0AFor%20a%20contract%20with%20following%20storage%20layout%3A%0A%60%60%60solidity%0Acontract%20Counter%20%7B%0A%20%20%20%20address%5B%5D%20public%20owners%3B%0A%0A%20%20%20%20function%20getOwner(uint256%20pos)%20public%20view%20returns%20(address)%20%7B%0A%20%20%20%20%20%20%20%20return%20owners%5Bpos%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20setOwner(uint256%20pos%2C%20address%20owner)%20public%20%7B%0A%20%20%20%20%20%20%20%20owners%5Bpos%5D%20%3D%20owner%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0Ausing%20%60setArbitraryStorage%60%20cheatcode%20ensures%20that%20arbitrary%20values%20are%20returned%3A%20%0A%60%60%60solidity%0Acontract%20ArbitraryStorageTest%20is%20Test%20%7B%0A%20%20%20%20function%20testArbitraryStorage()%20public%20%7B%0A%20%20%20%20%20%20%20%20Counter%20counter%20%3D%20new%20Counter()%3B%0A%20%20%20%20%20%20%20%20vm.setArbitraryStorage(address(counter))%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Next%20call%20would%20fail%20with%20array%20out%20of%20bounds%20without%20arbitrary%20storage%0A%20%20%20%20%20%20%20%20address%20owner%20%3D%20counter.getOwner(55)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Subsequent%20calls%20to%20same%20slot%20returns%20same%20value%0A%20%20%20%20%20%20%20%20assertEq(counter.getOwner(55)%2C%20owner)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20new%20value%20is%20returned%20if%20explicitly%20written%0A%20%20%20%20%20%20%20%20counter.setOwner(55%2C%20address(111))%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.getOwner(55)%2C%20address(111))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./set-arbitrary-storage-jGmqaQR8.js"),__vite__mapDeps([323,1])),path:"/reference/cheatcodes/set-arbitrary-storage.html",type:"mdx",filePath:"reference/cheatcodes/set-arbitrary-storage.mdx",content:"%23%23%20%60setArbitraryStorage%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20setArbitraryStorage(address%20target)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUtility%20cheatcode%20to%20make%20the%20storage%20of%20the%20given%20address%20fully%20symbolic.%0AAny%20subsequent%20%60SLOAD%60%20to%20target%20storage%20reads%20an%20arbitrary%20value%20which%20is%20memorized%20and%20returned%20if%20the%20same%20slot%20is%20loaded%20again.%0AIf%20the%20storage%20slot%20is%20explicitly%20written%20(before%20or%20after%20first%20load)%2C%20then%20the%20written%20value%20is%20returned.%0A%0A%23%23%23%20Examples%0A%0AFor%20a%20contract%20with%20following%20storage%20layout%3A%0A%60%60%60solidity%0Acontract%20Counter%20%7B%0A%20%20%20%20address%5B%5D%20public%20owners%3B%0A%0A%20%20%20%20function%20getOwner(uint256%20pos)%20public%20view%20returns%20(address)%20%7B%0A%20%20%20%20%20%20%20%20return%20owners%5Bpos%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20setOwner(uint256%20pos%2C%20address%20owner)%20public%20%7B%0A%20%20%20%20%20%20%20%20owners%5Bpos%5D%20%3D%20owner%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0Ausing%20%60setArbitraryStorage%60%20cheatcode%20ensures%20that%20arbitrary%20values%20are%20returned%3A%20%0A%60%60%60solidity%0Acontract%20ArbitraryStorageTest%20is%20Test%20%7B%0A%20%20%20%20function%20testArbitraryStorage()%20public%20%7B%0A%20%20%20%20%20%20%20%20Counter%20counter%20%3D%20new%20Counter()%3B%0A%20%20%20%20%20%20%20%20vm.setArbitraryStorage(address(counter))%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Next%20call%20would%20fail%20with%20array%20out%20of%20bounds%20without%20arbitrary%20storage%0A%20%20%20%20%20%20%20%20address%20owner%20%3D%20counter.getOwner(55)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Subsequent%20calls%20to%20same%20slot%20returns%20same%20value%0A%20%20%20%20%20%20%20%20assertEq(counter.getOwner(55)%2C%20owner)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20new%20value%20is%20returned%20if%20explicitly%20written%0A%20%20%20%20%20%20%20%20counter.setOwner(55%2C%20address(111))%3B%0A%20%20%20%20%20%20%20%20assertEq(counter.getOwner(55)%2C%20address(111))%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./set-env-DTkE37xF.js"),__vite__mapDeps([324,1])),path:"/reference/cheatcodes/set-env",type:"mdx",filePath:"reference/cheatcodes/set-env.mdx",content:"%23%23%20%60setEnv%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20setEnv(string%20calldata%20key%2C%20string%20calldata%20value)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASet%20an%20environment%20variable%20%60key%3Dvalue%60.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Environment%20variables%20set%20by%20a%20process%20are%20only%20accessible%20by%20itself%20and%20its%20child%0A%3E%20processes.%20Thus%2C%20calling%20%60setEnv%60%20will%20only%20modify%20environment%20variables%20of%20the%20currently%20running%0A%3E%20%60forge%60%20process%2C%20and%20won't%20affect%20the%20shell%20(%60forge%60's%20parent%20process)%2C%20i.e.%2C%20the%20they%20won't%20persist%0A%3E%20after%20the%20%60forge%60%20process%20exit.%0A%0A%23%23%23%20Tips%0A%0A-%20The%20environment%20variable%20key%20can't%20be%20empty.%0A-%20The%20environment%20variable%20key%20can't%20contain%20the%20equal%20sign%20%60%3D%60%20or%20the%20NUL%20character%20%60%5C0%60.%0A-%20The%20environment%20variable%20value%20can't%20contain%20the%20NUL%20character%20%60%5C0%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22hello%22%3B%0Astring%20memory%20val%20%3D%20%22world%22%3B%0Acheats.setEnv(key%2C%20val)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./set-env-DTkE37xF.js"),__vite__mapDeps([324,1])),path:"/reference/cheatcodes/set-env.html",type:"mdx",filePath:"reference/cheatcodes/set-env.mdx",content:"%23%23%20%60setEnv%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20setEnv(string%20calldata%20key%2C%20string%20calldata%20value)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASet%20an%20environment%20variable%20%60key%3Dvalue%60.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20Environment%20variables%20set%20by%20a%20process%20are%20only%20accessible%20by%20itself%20and%20its%20child%0A%3E%20processes.%20Thus%2C%20calling%20%60setEnv%60%20will%20only%20modify%20environment%20variables%20of%20the%20currently%20running%0A%3E%20%60forge%60%20process%2C%20and%20won't%20affect%20the%20shell%20(%60forge%60's%20parent%20process)%2C%20i.e.%2C%20the%20they%20won't%20persist%0A%3E%20after%20the%20%60forge%60%20process%20exit.%0A%0A%23%23%23%20Tips%0A%0A-%20The%20environment%20variable%20key%20can't%20be%20empty.%0A-%20The%20environment%20variable%20key%20can't%20contain%20the%20equal%20sign%20%60%3D%60%20or%20the%20NUL%20character%20%60%5C0%60.%0A-%20The%20environment%20variable%20value%20can't%20contain%20the%20NUL%20character%20%60%5C0%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astring%20memory%20key%20%3D%20%22hello%22%3B%0Astring%20memory%20val%20%3D%20%22world%22%3B%0Acheats.setEnv(key%2C%20val)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./set-nonce-DxV8RfWD.js"),__vite__mapDeps([325,1])),path:"/reference/cheatcodes/set-nonce",type:"mdx",filePath:"reference/cheatcodes/set-nonce.mdx",content:"%23%23%20%60setNonce%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20setNonce(address%20account%2C%20uint64%20nonce)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20nonce%20of%20the%20given%20account.%0A%0AThe%20new%20nonce%20must%20be%20higher%20than%20the%20current%20nonce%20of%20the%20account.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.setNonce(address(100)%2C%201234)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./set-nonce-DxV8RfWD.js"),__vite__mapDeps([325,1])),path:"/reference/cheatcodes/set-nonce.html",type:"mdx",filePath:"reference/cheatcodes/set-nonce.mdx",content:"%23%23%20%60setNonce%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20setNonce(address%20account%2C%20uint64%20nonce)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20nonce%20of%20the%20given%20account.%0A%0AThe%20new%20nonce%20must%20be%20higher%20than%20the%20current%20nonce%20of%20the%20account.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.setNonce(address(100)%2C%201234)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sign-delegation-CjqCxTVe.js"),__vite__mapDeps([326,1])),path:"/reference/cheatcodes/sign-delegation",type:"mdx",filePath:"reference/cheatcodes/sign-delegation.mdx",content:"%23%23%20%60signDelegation%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Holds%20a%20signed%20EIP-7702%20authorization%20for%20an%20authority%20account%20to%20delegate%20to%20an%20implementation.%0Astruct%20SignedDelegation%20%7B%0A%20%20%20%20%2F%2F%20The%20y-parity%20of%20the%20recovered%20secp256k1%20signature%20(0%20or%201).%0A%20%20%20%20uint8%20v%3B%0A%20%20%20%20%2F%2F%20First%2032%20bytes%20of%20the%20signature.%0A%20%20%20%20bytes32%20r%3B%0A%20%20%20%20%2F%2F%20Second%2032%20bytes%20of%20the%20signature.%0A%20%20%20%20bytes32%20s%3B%0A%20%20%20%20%2F%2F%20The%20current%20nonce%20of%20the%20authority%20account%20at%20signing%20time.%0A%20%20%20%20%2F%2F%20Used%20to%20ensure%20signature%20can't%20be%20replayed%20after%20account%20nonce%20changes.%0A%20%20%20%20uint64%20nonce%3B%0A%20%20%20%20%2F%2F%20Address%20of%20the%20contract%20implementation%20that%20will%20be%20delegated%20to.%0A%20%20%20%20%2F%2F%20Gets%20encoded%20into%20delegation%20code%3A%200xef0100%20%7C%7C%20implementation.%0A%20%20%20%20address%20implementation%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Sign%20an%20EIP-7702%20authorization%20for%20delegation.%0Afunction%20signDelegation(address%20implementation%2C%20uint256%20privateKey)%0A%20%20%20%20external%0A%20%20%20%20returns%20(SignedDelegation%20memory%20signedDelegation)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Designate%20the%20next%20call%20as%20an%20EIP-7702%20transaction.%0Afunction%20attachDelegation(SignedDelegation%20calldata%20signedDelegation)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Sign%20an%20EIP-7702%20authorization%20and%20designate%20the%20next%20call%20as%20an%20EIP-7702%20transaction.%0Afunction%20signAndAttachDelegation(address%20implementation%2C%20uint256%20privateKey)%0A%20%20%20%20external%0A%20%20%20%20returns%20(SignedDelegation%20memory%20signedDelegation)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASigns%20an%20%5BEIP-7702%5D(https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-7702.md)%20authorization%20for%20delegation.%0A%0ATo%20use%20the%20cheatcodes%20you%20need%20to%20set%20your%20%60evm_version%60%20to%20at%20least%20the%20%60prague%60%20hardfork%20in%20your%20%60foundry.toml%60.%0A%0A%60%60%60toml%0Aevm_version%20%3D%20%22prague%22%0A%60%60%60%0A%0AEIP-7702%20sets%20the%20account%20code%20of%20an%20Externally%20Owned%20Account%20(EOA)%20through%20a%20delegation%20transaction%2C%20enabling%20EOAs%20to%20behave%20like%20smart%20contracts.%0A%0AThe%20%60signDelegation%60%20cheatcode%20generates%20a%20signed%20authorization%20for%20an%20implementation%20contract%20to%20be%20delegated%20to%2C%20ensuring%20that%20only%20authorized%20implementations%20can%20execute%20transactions%20on%20behalf%20of%20the%20authority%20account.%20The%20signature%20includes%20the%20authority%20account's%20nonce%20to%20prevent%20replay%20attacks.%0A%0AThe%20%60attachDelegation%60%20cheatcode%20designates%20the%20next%20transaction%20as%20an%20EIP-7702%20delegation%20by%20attaching%20the%20signed%20authorization.%0A%0AThe%20%60signAndAttachDelegation%60%20function%20combines%20both%20signing%20and%20attaching%20into%20a%20single%20step%2C%20simplifying%20the%20delegation%20process.%0A%0A%23%23%23%20Examples%0A%0ALet's%20first%20define%20a%20%60SimpleDelegateContract%60%20and%20a%20dummy%20%60ERC20%60%20to%20be%20used%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Acontract%20SimpleDelegateContract%20%7B%0A%20%20%20%20event%20Executed(address%20indexed%20to%2C%20uint256%20value%2C%20bytes%20data)%3B%0A%0A%20%20%20%20struct%20Call%20%7B%0A%20%20%20%20%20%20%20%20bytes%20data%3B%0A%20%20%20%20%20%20%20%20address%20to%3B%0A%20%20%20%20%20%20%20%20uint256%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20execute(Call%5B%5D%20memory%20calls)%20external%20payable%20%7B%0A%20%20%20%20%20%20%20%20for%20(uint256%20i%20%3D%200%3B%20i%20%3C%20calls.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Call%20memory%20call%20%3D%20calls%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20(bool%20success%2C%20bytes%20memory%20result)%20%3D%20call.to.call%7Bvalue%3A%20call.value%7D(call.data)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20require(success%2C%20string(result))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20emit%20Executed(call.to%2C%20call.value%2C%20call.data)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20receive()%20external%20payable%20%7B%7D%0A%7D%0A%0Acontract%20ERC20%20%7B%0A%20%20%20%20address%20public%20minter%3B%0A%20%20%20%20mapping(address%20%3D%3E%20uint256)%20private%20_balances%3B%0A%0A%20%20%20%20constructor(address%20_minter)%20%7B%0A%20%20%20%20%20%20%20%20minter%20%3D%20_minter%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20mint(uint256%20amount%2C%20address%20to)%20public%20%7B%0A%20%20%20%20%20%20%20%20_mint(to%2C%20amount)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20balanceOf(address%20account)%20public%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20_balances%5Baccount%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20_mint(address%20account%2C%20uint256%20amount)%20internal%20%7B%0A%20%20%20%20%20%20%20%20require(msg.sender%20%3D%3D%20minter%2C%20%22ERC20%3A%20msg.sender%20is%20not%20minter%22)%3B%0A%20%20%20%20%20%20%20%20require(account%20!%3D%20address(0)%2C%20%22ERC20%3A%20mint%20to%20the%20zero%20address%22)%3B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20_balances%5Baccount%5D%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ANext%2C%20to%20use%20the%20cheatcodes%20with%20%60forge%20test%60%3A%0A%0A%60%60%60solidity%0Acontract%20SignDelegationTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20Alice's%20address%20and%20private%20key%20(EOA%20with%20no%20initial%20contract%20code).%0A%20%20%20%20address%20payable%20ALICE_ADDRESS%20%3D%20payable(0x70997970C51812dc3A010C7d01b50e0d17dc79C8)%3B%0A%20%20%20%20uint256%20constant%20ALICE_PK%20%3D%200x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d%3B%0A%0A%20%20%20%20%2F%2F%20Bob's%20address%20and%20private%20key%20(Bob%20will%20execute%20transactions%20on%20Alice's%20behalf).%0A%20%20%20%20address%20constant%20BOB_ADDRESS%20%3D%200x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC%3B%0A%20%20%20%20uint256%20constant%20BOB_PK%20%3D%200x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a%3B%0A%0A%20%20%20%20%2F%2F%20The%20contract%20that%20Alice%20will%20delegate%20execution%20to.%0A%20%20%20%20SimpleDelegateContract%20public%20implementation%3B%0A%0A%20%20%20%20%2F%2F%20ERC-20%20token%20contract%20for%20minting%20test%20tokens.%0A%20%20%20%20ERC20%20public%20token%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20the%20delegation%20contract%20(Alice%20will%20delegate%20calls%20to%20this%20contract).%0A%20%20%20%20%20%20%20%20implementation%20%3D%20new%20SimpleDelegateContract()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20an%20ERC-20%20token%20contract%20where%20Alice%20is%20the%20minter.%0A%20%20%20%20%20%20%20%20token%20%3D%20new%20ERC20(ALICE_ADDRESS)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSignDelegationAndThenAttachDelegation()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Construct%20a%20single%20transaction%20call%3A%20Mint%20100%20tokens%20to%20Bob.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract.Call%5B%5D%20memory%20calls%20%3D%20new%20SimpleDelegateContract.Call%5B%5D(1)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%20%3D%20abi.encodeCall(ERC20.mint%2C%20(100%2C%20BOB_ADDRESS))%3B%0A%20%20%20%20%20%20%20%20calls%5B0%5D%20%3D%20SimpleDelegateContract.Call(%7Bto%3A%20address(token)%2C%20data%3A%20data%2C%20value%3A%200%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Alice%20signs%20a%20delegation%20allowing%20%60implementation%60%20to%20execute%20transactions%20on%20her%20behalf.%0A%20%20%20%20%20%20%20%20Vm.SignedDelegation%20memory%20signedDelegation%20%3D%20vm.signDelegation(address(implementation)%2C%20ALICE_PK)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Bob%20attaches%20the%20signed%20delegation%20from%20Alice%20and%20broadcasts%20it.%0A%20%20%20%20%20%20%20%20vm.broadcast(BOB_PK)%3B%0A%20%20%20%20%20%20%20%20vm.attachDelegation(signedDelegation)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20that%20Alice's%20account%20now%20behaves%20as%20a%20smart%20contract.%0A%20%20%20%20%20%20%20%20bytes%20memory%20code%20%3D%20address(ALICE_ADDRESS).code%3B%0A%20%20%20%20%20%20%20%20require(code.length%20%3E%200%2C%20%22no%20code%20written%20to%20Alice%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20As%20Bob%2C%20execute%20the%20transaction%20via%20Alice's%20assigned%20contract.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract(ALICE_ADDRESS).execute(calls)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20Bob%20successfully%20received%20100%20tokens.%0A%20%20%20%20%20%20%20%20assertEq(token.balanceOf(BOB_ADDRESS)%2C%20100)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSignAndAttachDelegation()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Construct%20a%20single%20transaction%20call%3A%20Mint%20100%20tokens%20to%20Bob.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract.Call%5B%5D%20memory%20calls%20%3D%20new%20SimpleDelegateContract.Call%5B%5D(1)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%20%3D%20abi.encodeCall(ERC20.mint%2C%20(100%2C%20BOB_ADDRESS))%3B%0A%20%20%20%20%20%20%20%20calls%5B0%5D%20%3D%20SimpleDelegateContract.Call(%7Bto%3A%20address(token)%2C%20data%3A%20data%2C%20value%3A%200%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Alice%20signs%20and%20attaches%20the%20delegation%20in%20one%20step%20(eliminating%20the%20need%20for%20separate%20signing).%0A%20%20%20%20%20%20%20%20vm.signAndAttachDelegation(address(implementation)%2C%20ALICE_PK)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20that%20Alice's%20account%20now%20behaves%20as%20a%20smart%20contract.%0A%20%20%20%20%20%20%20%20bytes%20memory%20code%20%3D%20address(ALICE_ADDRESS).code%3B%0A%20%20%20%20%20%20%20%20require(code.length%20%3E%200%2C%20%22no%20code%20written%20to%20Alice%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20As%20Bob%2C%20execute%20the%20transaction%20via%20Alice's%20assigned%20contract.%0A%20%20%20%20%20%20%20%20vm.broadcast(BOB_PK)%3B%0A%20%20%20%20%20%20%20%20SimpleDelegateContract(ALICE_ADDRESS).execute(calls)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20Bob%20successfully%20received%20100%20tokens.%0A%20%20%20%20%20%20%20%20vm.assertEq(token.balanceOf(BOB_ADDRESS)%2C%20100)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AOr%20alternatively%2C%20let's%20use%20the%20cheatcodes%20in%20%60forge%20script%60%20against%20an%20%60EIP-7702%60%20compatible%20Anvil%20instance%3A%0A%0A%60%60%60sh%0Aanvil%20--hardfork%20prague%0A%60%60%60%0A%0ANext%2C%20to%20use%20the%20cheatcodes%20in%20%60forge%20script%60%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Acontract%20SignDelegationScript%20is%20Script%20%7B%0A%20%20%20%20%2F%2F%20Alice's%20address%20and%20private%20key%20(EOA%20with%20no%20initial%20contract%20code).%0A%20%20%20%20address%20payable%20ALICE_ADDRESS%20%3D%20payable(0x70997970C51812dc3A010C7d01b50e0d17dc79C8)%3B%0A%20%20%20%20uint256%20constant%20ALICE_PK%20%3D%200x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d%3B%0A%0A%20%20%20%20%2F%2F%20Bob's%20address%20and%20private%20key%20(Bob%20will%20execute%20transactions%20on%20Alice's%20behalf).%0A%20%20%20%20address%20constant%20BOB_ADDRESS%20%3D%200x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC%3B%0A%20%20%20%20uint256%20constant%20BOB_PK%20%3D%200x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a%3B%0A%0A%20%20%20%20%2F%2F%20Deployer's%20address%20and%20private%20key%20(used%20to%20deploy%20contracts).%0A%20%20%20%20address%20private%20constant%20DEPLOYER_ADDRESS%20%3D%200xa0Ee7A142d267C1f36714E4a8F75612F20a79720%3B%0A%20%20%20%20uint256%20private%20constant%20DEPLOYER_PK%20%3D%200x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6%3B%0A%0A%20%20%20%20%2F%2F%20The%20contract%20that%20Alice%20will%20delegate%20execution%20to.%0A%20%20%20%20SimpleDelegateContract%20public%20implementation%3B%0A%0A%20%20%20%20%2F%2F%20ERC-20%20token%20contract%20for%20minting%20test%20tokens.%0A%20%20%20%20ERC20%20public%20token%3B%0A%0A%20%20%20%20function%20run()%20external%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Step%201%3A%20Deploy%20delegation%20and%20ERC-20%20contracts%20using%20the%20Deployer's%20key.%0A%20%20%20%20%20%20%20%20vm.broadcast(DEPLOYER_PK)%3B%0A%20%20%20%20%20%20%20%20implementation%20%3D%20new%20SimpleDelegateContract()%3B%0A%20%20%20%20%20%20%20%20token%20%3D%20new%20ERC20(ALICE_ADDRESS)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Construct%20a%20single%20transaction%20call%3A%20Mint%20100%20tokens%20to%20Bob.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract.Call%5B%5D%20memory%20calls%20%3D%20new%20SimpleDelegateContract.Call%5B%5D(1)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%20%3D%20abi.encodeCall(ERC20.mint%2C%20(100%2C%20BOB_ADDRESS))%3B%0A%20%20%20%20%20%20%20%20calls%5B0%5D%20%3D%20SimpleDelegateContract.Call(%7Bto%3A%20address(token)%2C%20data%3A%20data%2C%20value%3A%200%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Alice%20signs%20a%20delegation%20allowing%20%60implementation%60%20to%20execute%20transactions%20on%20her%20behalf.%0A%20%20%20%20%20%20%20%20Vm.SignedDelegation%20memory%20signedDelegation%20%3D%20vm.signDelegation(address(implementation)%2C%20ALICE_PK)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Bob%20attaches%20the%20signed%20delegation%20from%20Alice%20and%20broadcasts%20it.%0A%20%20%20%20%20%20%20%20vm.broadcast(BOB_PK)%3B%0A%20%20%20%20%20%20%20%20vm.attachDelegation(signedDelegation)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20As%20Bob%2C%20execute%20the%20transaction%20via%20Alice's%20assigned%20contract.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract(ALICE_ADDRESS).execute(calls)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20balance%0A%20%20%20%20%20%20%20%20vm.assertEq(token.balanceOf(BOB_ADDRESS)%2C%20100)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20run%20the%20script%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FSignDelegation.s.sol%20--rpc-url%20http%3A%2F%2Flocalhost%3A8545%20--broadcast%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sign-delegation-CjqCxTVe.js"),__vite__mapDeps([326,1])),path:"/reference/cheatcodes/sign-delegation.html",type:"mdx",filePath:"reference/cheatcodes/sign-delegation.mdx",content:"%23%23%20%60signDelegation%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Holds%20a%20signed%20EIP-7702%20authorization%20for%20an%20authority%20account%20to%20delegate%20to%20an%20implementation.%0Astruct%20SignedDelegation%20%7B%0A%20%20%20%20%2F%2F%20The%20y-parity%20of%20the%20recovered%20secp256k1%20signature%20(0%20or%201).%0A%20%20%20%20uint8%20v%3B%0A%20%20%20%20%2F%2F%20First%2032%20bytes%20of%20the%20signature.%0A%20%20%20%20bytes32%20r%3B%0A%20%20%20%20%2F%2F%20Second%2032%20bytes%20of%20the%20signature.%0A%20%20%20%20bytes32%20s%3B%0A%20%20%20%20%2F%2F%20The%20current%20nonce%20of%20the%20authority%20account%20at%20signing%20time.%0A%20%20%20%20%2F%2F%20Used%20to%20ensure%20signature%20can't%20be%20replayed%20after%20account%20nonce%20changes.%0A%20%20%20%20uint64%20nonce%3B%0A%20%20%20%20%2F%2F%20Address%20of%20the%20contract%20implementation%20that%20will%20be%20delegated%20to.%0A%20%20%20%20%2F%2F%20Gets%20encoded%20into%20delegation%20code%3A%200xef0100%20%7C%7C%20implementation.%0A%20%20%20%20address%20implementation%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Sign%20an%20EIP-7702%20authorization%20for%20delegation.%0Afunction%20signDelegation(address%20implementation%2C%20uint256%20privateKey)%0A%20%20%20%20external%0A%20%20%20%20returns%20(SignedDelegation%20memory%20signedDelegation)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Designate%20the%20next%20call%20as%20an%20EIP-7702%20transaction.%0Afunction%20attachDelegation(SignedDelegation%20calldata%20signedDelegation)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Sign%20an%20EIP-7702%20authorization%20and%20designate%20the%20next%20call%20as%20an%20EIP-7702%20transaction.%0Afunction%20signAndAttachDelegation(address%20implementation%2C%20uint256%20privateKey)%0A%20%20%20%20external%0A%20%20%20%20returns%20(SignedDelegation%20memory%20signedDelegation)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASigns%20an%20%5BEIP-7702%5D(https%3A%2F%2Fgithub.com%2Fethereum%2FEIPs%2Fblob%2Fmaster%2FEIPS%2Feip-7702.md)%20authorization%20for%20delegation.%0A%0ATo%20use%20the%20cheatcodes%20you%20need%20to%20set%20your%20%60evm_version%60%20to%20at%20least%20the%20%60prague%60%20hardfork%20in%20your%20%60foundry.toml%60.%0A%0A%60%60%60toml%0Aevm_version%20%3D%20%22prague%22%0A%60%60%60%0A%0AEIP-7702%20sets%20the%20account%20code%20of%20an%20Externally%20Owned%20Account%20(EOA)%20through%20a%20delegation%20transaction%2C%20enabling%20EOAs%20to%20behave%20like%20smart%20contracts.%0A%0AThe%20%60signDelegation%60%20cheatcode%20generates%20a%20signed%20authorization%20for%20an%20implementation%20contract%20to%20be%20delegated%20to%2C%20ensuring%20that%20only%20authorized%20implementations%20can%20execute%20transactions%20on%20behalf%20of%20the%20authority%20account.%20The%20signature%20includes%20the%20authority%20account's%20nonce%20to%20prevent%20replay%20attacks.%0A%0AThe%20%60attachDelegation%60%20cheatcode%20designates%20the%20next%20transaction%20as%20an%20EIP-7702%20delegation%20by%20attaching%20the%20signed%20authorization.%0A%0AThe%20%60signAndAttachDelegation%60%20function%20combines%20both%20signing%20and%20attaching%20into%20a%20single%20step%2C%20simplifying%20the%20delegation%20process.%0A%0A%23%23%23%20Examples%0A%0ALet's%20first%20define%20a%20%60SimpleDelegateContract%60%20and%20a%20dummy%20%60ERC20%60%20to%20be%20used%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Acontract%20SimpleDelegateContract%20%7B%0A%20%20%20%20event%20Executed(address%20indexed%20to%2C%20uint256%20value%2C%20bytes%20data)%3B%0A%0A%20%20%20%20struct%20Call%20%7B%0A%20%20%20%20%20%20%20%20bytes%20data%3B%0A%20%20%20%20%20%20%20%20address%20to%3B%0A%20%20%20%20%20%20%20%20uint256%20value%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20execute(Call%5B%5D%20memory%20calls)%20external%20payable%20%7B%0A%20%20%20%20%20%20%20%20for%20(uint256%20i%20%3D%200%3B%20i%20%3C%20calls.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Call%20memory%20call%20%3D%20calls%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20(bool%20success%2C%20bytes%20memory%20result)%20%3D%20call.to.call%7Bvalue%3A%20call.value%7D(call.data)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20require(success%2C%20string(result))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20emit%20Executed(call.to%2C%20call.value%2C%20call.data)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20receive()%20external%20payable%20%7B%7D%0A%7D%0A%0Acontract%20ERC20%20%7B%0A%20%20%20%20address%20public%20minter%3B%0A%20%20%20%20mapping(address%20%3D%3E%20uint256)%20private%20_balances%3B%0A%0A%20%20%20%20constructor(address%20_minter)%20%7B%0A%20%20%20%20%20%20%20%20minter%20%3D%20_minter%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20mint(uint256%20amount%2C%20address%20to)%20public%20%7B%0A%20%20%20%20%20%20%20%20_mint(to%2C%20amount)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20balanceOf(address%20account)%20public%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20_balances%5Baccount%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20_mint(address%20account%2C%20uint256%20amount)%20internal%20%7B%0A%20%20%20%20%20%20%20%20require(msg.sender%20%3D%3D%20minter%2C%20%22ERC20%3A%20msg.sender%20is%20not%20minter%22)%3B%0A%20%20%20%20%20%20%20%20require(account%20!%3D%20address(0)%2C%20%22ERC20%3A%20mint%20to%20the%20zero%20address%22)%3B%0A%20%20%20%20%20%20%20%20unchecked%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20_balances%5Baccount%5D%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ANext%2C%20to%20use%20the%20cheatcodes%20with%20%60forge%20test%60%3A%0A%0A%60%60%60solidity%0Acontract%20SignDelegationTest%20is%20Test%20%7B%0A%20%20%20%20%2F%2F%20Alice's%20address%20and%20private%20key%20(EOA%20with%20no%20initial%20contract%20code).%0A%20%20%20%20address%20payable%20ALICE_ADDRESS%20%3D%20payable(0x70997970C51812dc3A010C7d01b50e0d17dc79C8)%3B%0A%20%20%20%20uint256%20constant%20ALICE_PK%20%3D%200x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d%3B%0A%0A%20%20%20%20%2F%2F%20Bob's%20address%20and%20private%20key%20(Bob%20will%20execute%20transactions%20on%20Alice's%20behalf).%0A%20%20%20%20address%20constant%20BOB_ADDRESS%20%3D%200x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC%3B%0A%20%20%20%20uint256%20constant%20BOB_PK%20%3D%200x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a%3B%0A%0A%20%20%20%20%2F%2F%20The%20contract%20that%20Alice%20will%20delegate%20execution%20to.%0A%20%20%20%20SimpleDelegateContract%20public%20implementation%3B%0A%0A%20%20%20%20%2F%2F%20ERC-20%20token%20contract%20for%20minting%20test%20tokens.%0A%20%20%20%20ERC20%20public%20token%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20the%20delegation%20contract%20(Alice%20will%20delegate%20calls%20to%20this%20contract).%0A%20%20%20%20%20%20%20%20implementation%20%3D%20new%20SimpleDelegateContract()%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Deploy%20an%20ERC-20%20token%20contract%20where%20Alice%20is%20the%20minter.%0A%20%20%20%20%20%20%20%20token%20%3D%20new%20ERC20(ALICE_ADDRESS)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSignDelegationAndThenAttachDelegation()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Construct%20a%20single%20transaction%20call%3A%20Mint%20100%20tokens%20to%20Bob.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract.Call%5B%5D%20memory%20calls%20%3D%20new%20SimpleDelegateContract.Call%5B%5D(1)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%20%3D%20abi.encodeCall(ERC20.mint%2C%20(100%2C%20BOB_ADDRESS))%3B%0A%20%20%20%20%20%20%20%20calls%5B0%5D%20%3D%20SimpleDelegateContract.Call(%7Bto%3A%20address(token)%2C%20data%3A%20data%2C%20value%3A%200%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Alice%20signs%20a%20delegation%20allowing%20%60implementation%60%20to%20execute%20transactions%20on%20her%20behalf.%0A%20%20%20%20%20%20%20%20Vm.SignedDelegation%20memory%20signedDelegation%20%3D%20vm.signDelegation(address(implementation)%2C%20ALICE_PK)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Bob%20attaches%20the%20signed%20delegation%20from%20Alice%20and%20broadcasts%20it.%0A%20%20%20%20%20%20%20%20vm.broadcast(BOB_PK)%3B%0A%20%20%20%20%20%20%20%20vm.attachDelegation(signedDelegation)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20that%20Alice's%20account%20now%20behaves%20as%20a%20smart%20contract.%0A%20%20%20%20%20%20%20%20bytes%20memory%20code%20%3D%20address(ALICE_ADDRESS).code%3B%0A%20%20%20%20%20%20%20%20require(code.length%20%3E%200%2C%20%22no%20code%20written%20to%20Alice%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20As%20Bob%2C%20execute%20the%20transaction%20via%20Alice's%20assigned%20contract.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract(ALICE_ADDRESS).execute(calls)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20Bob%20successfully%20received%20100%20tokens.%0A%20%20%20%20%20%20%20%20assertEq(token.balanceOf(BOB_ADDRESS)%2C%20100)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSignAndAttachDelegation()%20public%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Construct%20a%20single%20transaction%20call%3A%20Mint%20100%20tokens%20to%20Bob.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract.Call%5B%5D%20memory%20calls%20%3D%20new%20SimpleDelegateContract.Call%5B%5D(1)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%20%3D%20abi.encodeCall(ERC20.mint%2C%20(100%2C%20BOB_ADDRESS))%3B%0A%20%20%20%20%20%20%20%20calls%5B0%5D%20%3D%20SimpleDelegateContract.Call(%7Bto%3A%20address(token)%2C%20data%3A%20data%2C%20value%3A%200%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Alice%20signs%20and%20attaches%20the%20delegation%20in%20one%20step%20(eliminating%20the%20need%20for%20separate%20signing).%0A%20%20%20%20%20%20%20%20vm.signAndAttachDelegation(address(implementation)%2C%20ALICE_PK)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20that%20Alice's%20account%20now%20behaves%20as%20a%20smart%20contract.%0A%20%20%20%20%20%20%20%20bytes%20memory%20code%20%3D%20address(ALICE_ADDRESS).code%3B%0A%20%20%20%20%20%20%20%20require(code.length%20%3E%200%2C%20%22no%20code%20written%20to%20Alice%22)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20As%20Bob%2C%20execute%20the%20transaction%20via%20Alice's%20assigned%20contract.%0A%20%20%20%20%20%20%20%20vm.broadcast(BOB_PK)%3B%0A%20%20%20%20%20%20%20%20SimpleDelegateContract(ALICE_ADDRESS).execute(calls)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20Bob%20successfully%20received%20100%20tokens.%0A%20%20%20%20%20%20%20%20vm.assertEq(token.balanceOf(BOB_ADDRESS)%2C%20100)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AOr%20alternatively%2C%20let's%20use%20the%20cheatcodes%20in%20%60forge%20script%60%20against%20an%20%60EIP-7702%60%20compatible%20Anvil%20instance%3A%0A%0A%60%60%60sh%0Aanvil%20--hardfork%20prague%0A%60%60%60%0A%0ANext%2C%20to%20use%20the%20cheatcodes%20in%20%60forge%20script%60%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20MIT%0Apragma%20solidity%20%5E0.8.17%3B%0A%0Acontract%20SignDelegationScript%20is%20Script%20%7B%0A%20%20%20%20%2F%2F%20Alice's%20address%20and%20private%20key%20(EOA%20with%20no%20initial%20contract%20code).%0A%20%20%20%20address%20payable%20ALICE_ADDRESS%20%3D%20payable(0x70997970C51812dc3A010C7d01b50e0d17dc79C8)%3B%0A%20%20%20%20uint256%20constant%20ALICE_PK%20%3D%200x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d%3B%0A%0A%20%20%20%20%2F%2F%20Bob's%20address%20and%20private%20key%20(Bob%20will%20execute%20transactions%20on%20Alice's%20behalf).%0A%20%20%20%20address%20constant%20BOB_ADDRESS%20%3D%200x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC%3B%0A%20%20%20%20uint256%20constant%20BOB_PK%20%3D%200x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a%3B%0A%0A%20%20%20%20%2F%2F%20Deployer's%20address%20and%20private%20key%20(used%20to%20deploy%20contracts).%0A%20%20%20%20address%20private%20constant%20DEPLOYER_ADDRESS%20%3D%200xa0Ee7A142d267C1f36714E4a8F75612F20a79720%3B%0A%20%20%20%20uint256%20private%20constant%20DEPLOYER_PK%20%3D%200x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6%3B%0A%0A%20%20%20%20%2F%2F%20The%20contract%20that%20Alice%20will%20delegate%20execution%20to.%0A%20%20%20%20SimpleDelegateContract%20public%20implementation%3B%0A%0A%20%20%20%20%2F%2F%20ERC-20%20token%20contract%20for%20minting%20test%20tokens.%0A%20%20%20%20ERC20%20public%20token%3B%0A%0A%20%20%20%20function%20run()%20external%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Step%201%3A%20Deploy%20delegation%20and%20ERC-20%20contracts%20using%20the%20Deployer's%20key.%0A%20%20%20%20%20%20%20%20vm.broadcast(DEPLOYER_PK)%3B%0A%20%20%20%20%20%20%20%20implementation%20%3D%20new%20SimpleDelegateContract()%3B%0A%20%20%20%20%20%20%20%20token%20%3D%20new%20ERC20(ALICE_ADDRESS)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Construct%20a%20single%20transaction%20call%3A%20Mint%20100%20tokens%20to%20Bob.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract.Call%5B%5D%20memory%20calls%20%3D%20new%20SimpleDelegateContract.Call%5B%5D(1)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20data%20%3D%20abi.encodeCall(ERC20.mint%2C%20(100%2C%20BOB_ADDRESS))%3B%0A%20%20%20%20%20%20%20%20calls%5B0%5D%20%3D%20SimpleDelegateContract.Call(%7Bto%3A%20address(token)%2C%20data%3A%20data%2C%20value%3A%200%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Alice%20signs%20a%20delegation%20allowing%20%60implementation%60%20to%20execute%20transactions%20on%20her%20behalf.%0A%20%20%20%20%20%20%20%20Vm.SignedDelegation%20memory%20signedDelegation%20%3D%20vm.signDelegation(address(implementation)%2C%20ALICE_PK)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Bob%20attaches%20the%20signed%20delegation%20from%20Alice%20and%20broadcasts%20it.%0A%20%20%20%20%20%20%20%20vm.broadcast(BOB_PK)%3B%0A%20%20%20%20%20%20%20%20vm.attachDelegation(signedDelegation)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20As%20Bob%2C%20execute%20the%20transaction%20via%20Alice's%20assigned%20contract.%0A%20%20%20%20%20%20%20%20SimpleDelegateContract(ALICE_ADDRESS).execute(calls)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Verify%20balance%0A%20%20%20%20%20%20%20%20vm.assertEq(token.balanceOf(BOB_ADDRESS)%2C%20100)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0ATo%20run%20the%20script%3A%0A%0A%60%60%60sh%0Aforge%20script%20script%2FSignDelegation.s.sol%20--rpc-url%20http%3A%2F%2Flocalhost%3A8545%20--broadcast%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sign-CTHc1t8t.js"),__vite__mapDeps([327,1])),path:"/reference/cheatcodes/sign",type:"mdx",filePath:"reference/cheatcodes/sign.mdx",content:"%23%23%20%60sign%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20sign(uint256%20privateKey%2C%20bytes32%20digest)%20external%20returns%20(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20sign(Wallet%20memory%20wallet%2C%20bytes32%20digest)%20external%20returns%20(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASigns%20a%20digest%20%60digest%60%20with%20private%20key%20%60privateKey%60%20or%20%5B%60Wallet%60%5D(%2Freference%2Fcheatcodes%2Fcreate-wallet)%2C%20returning%20%60(v%2C%20r%2C%20s)%60.%0A%0AThis%20is%20useful%20for%20testing%20functions%20that%20take%20signed%20data%20and%20perform%20an%20%60ecrecover%60%20to%20verify%20the%20signer.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A(address%20alice%2C%20uint256%20alicePk)%20%3D%20makeAddrAndKey(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Abytes32%20hash%20%3D%20keccak256(%22Signed%20by%20Alice%22)%3B%0A(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(alicePk%2C%20hash)%3B%0Aaddress%20signer%20%3D%20ecrecover(hash%2C%20v%2C%20r%2C%20s)%3B%0AassertEq(alice%2C%20signer)%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AThis%20is%20useful%20for%20testing%20functions%20that%20require%20a%20signature%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%200.8.17%3B%0A%0Aimport%20%7B%20ECDSA%20%7D%20from%20%22%40openzeppelin%2Fcontracts%2Futils%2Fcryptography%2FECDSA.sol%22%3B%0A%0Acontract%20SigningExample%20is%20Ownable%20%7B%0A%20%20%20%20using%20ECDSA%20for%20bytes32%3B%0A%0A%20%20%20%20address%20public%20systemAddress%3B%0A%0A%20%20%20%20function%20setSystemAddress(address%20_address)%20external%20onlyOwner%20%7B%0A%20%20%20%20%20%20%20%20systemAddress%20%3D%20_address%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20purchase(uint256%20_amount%2C%20string%20calldata%20_nonce%2C%20bytes%20calldata%20_signature)%20external%20payable%20%7B%0A%20%20%20%20%20%20%20%20require(isValidSignature(%0A%20%20%20%20%20%20%20%20%20%20%20%20systemAddress%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(msg.sender%2C%20_amount%2C%20_nonce))%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20_signature%0A%20%20%20%20%20%20%20%20%20%20%20%20)%2C%20%22Invalid%20Signature%22%0A%20%20%20%20%20%20%20%20)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20mint%20tokens%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20isValidSignature(address%20_systemAddress%2C%20bytes32%20hash%2C%20bytes%20memory%20signature)%20internal%20view%20returns%20(bool)%20%7B%0A%20%20%20%20%20%20%20%20require(_systemAddress%20!%3D%20address(0)%2C%20%22Missing%20System%20Address%22)%3B%0A%0A%20%20%20%20%20%20%20%20bytes32%20signedHash%20%3D%20hash.toEthSignedMessageHash()%3B%0A%20%20%20%20%20%20%20%20return%20signedHash.recover(signature)%20%3D%3D%20_systemAddress%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%0Acontract%20SigningExampleTest%20is%20Test%20%7B%0A%20%20%20%20using%20ECDSA%20for%20bytes32%3B%0A%0A%20%20%20%20SigningExample%20public%20signingExample%3B%0A%0A%20%20%20%20uint256%20internal%20userPrivateKey%3B%0A%20%20%20%20uint256%20internal%20signerPrivateKey%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20signingExample%20%3D%20new%20SigningExample()%3B%0A%0A%20%20%20%20%20%20%20%20userPrivateKey%20%3D%200xa11ce%3B%0A%20%20%20%20%20%20%20%20signerPrivateKey%20%3D%200xabc123%3B%0A%0A%20%20%20%20%20%20%20%20address%20signer%20%3D%20vm.addr(signerPrivateKey)%3B%0A%20%20%20%20%20%20%20%20signingExample.setSystemAddress(signer)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testPurchase()%20public%20%7B%0A%20%20%20%20%20%20%20%20address%20user%20%3D%20vm.addr(userPrivateKey)%3B%0A%20%20%20%20%20%20%20%20address%20signer%20%3D%20vm.addr(signerPrivateKey)%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20amount%20%3D%202%3B%0A%20%20%20%20%20%20%20%20string%20memory%20nonce%20%3D%20'QSfd8gQE4WYzO29'%3B%0A%0A%20%20%20%20%20%20%20%20vm.startPrank(signer)%3B%0A%20%20%20%20%20%20%20%20bytes32%20digest%20%3D%20keccak256(abi.encodePacked(user%2C%20amount%2C%20nonce)).toEthSignedMessageHash()%3B%0A%20%20%20%20%20%20%20%20(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(signerPrivateKey%2C%20digest)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20signature%20%3D%20abi.encodePacked(r%2C%20s%2C%20v)%3B%20%2F%2F%20note%20the%20order%20here%20is%20different%20from%20line%20above.%0A%20%20%20%20%20%20%20%20vm.stopPrank()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startPrank(user)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Give%20the%20user%20some%20ETH%2C%20just%20for%20good%20measure%0A%20%20%20%20%20%20%20%20vm.deal(user%2C%201%20ether)%3B%0A%0A%20%20%20%20%20%20%20%20signingExample.purchase(%0A%20%20%20%20%20%20%20%20%20%20%20%20amount%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20nonce%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20signature%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20vm.stopPrank()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20%60Wallet%60%0A%0AThe%20Wallet%20overload%20is%20a%20simple%20wrapper%20that%20uses%20the%20wallet's%20private%20key%20to%20sign%20the%20digest%0A%0A%60%60%60solidity%0AWallet%20memory%20alice%20%3D%20vm.createWallet(%22alice%22)%3B%0Abytes32%20hash%20%3D%20keccak256(%22Signed%20by%20Alice%22)%3B%0A(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(alice%2C%20hash)%3B%0Aaddress%20signer%20%3D%20ecrecover(hash%2C%20v%2C%20r%2C%20s)%3B%0AassertEq(alice.addr%2C%20signer)%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sign-CTHc1t8t.js"),__vite__mapDeps([327,1])),path:"/reference/cheatcodes/sign.html",type:"mdx",filePath:"reference/cheatcodes/sign.mdx",content:"%23%23%20%60sign%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20sign(uint256%20privateKey%2C%20bytes32%20digest)%20external%20returns%20(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20sign(Wallet%20memory%20wallet%2C%20bytes32%20digest)%20external%20returns%20(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASigns%20a%20digest%20%60digest%60%20with%20private%20key%20%60privateKey%60%20or%20%5B%60Wallet%60%5D(%2Freference%2Fcheatcodes%2Fcreate-wallet)%2C%20returning%20%60(v%2C%20r%2C%20s)%60.%0A%0AThis%20is%20useful%20for%20testing%20functions%20that%20take%20signed%20data%20and%20perform%20an%20%60ecrecover%60%20to%20verify%20the%20signer.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A(address%20alice%2C%20uint256%20alicePk)%20%3D%20makeAddrAndKey(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%0Abytes32%20hash%20%3D%20keccak256(%22Signed%20by%20Alice%22)%3B%0A(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(alicePk%2C%20hash)%3B%0Aaddress%20signer%20%3D%20ecrecover(hash%2C%20v%2C%20r%2C%20s)%3B%0AassertEq(alice%2C%20signer)%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A%0AThis%20is%20useful%20for%20testing%20functions%20that%20require%20a%20signature%3A%0A%0A%60%60%60solidity%0A%2F%2F%20SPDX-License-Identifier%3A%20UNLICENSED%0Apragma%20solidity%200.8.17%3B%0A%0Aimport%20%7B%20ECDSA%20%7D%20from%20%22%40openzeppelin%2Fcontracts%2Futils%2Fcryptography%2FECDSA.sol%22%3B%0A%0Acontract%20SigningExample%20is%20Ownable%20%7B%0A%20%20%20%20using%20ECDSA%20for%20bytes32%3B%0A%0A%20%20%20%20address%20public%20systemAddress%3B%0A%0A%20%20%20%20function%20setSystemAddress(address%20_address)%20external%20onlyOwner%20%7B%0A%20%20%20%20%20%20%20%20systemAddress%20%3D%20_address%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20purchase(uint256%20_amount%2C%20string%20calldata%20_nonce%2C%20bytes%20calldata%20_signature)%20external%20payable%20%7B%0A%20%20%20%20%20%20%20%20require(isValidSignature(%0A%20%20%20%20%20%20%20%20%20%20%20%20systemAddress%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20keccak256(abi.encodePacked(msg.sender%2C%20_amount%2C%20_nonce))%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20_signature%0A%20%20%20%20%20%20%20%20%20%20%20%20)%2C%20%22Invalid%20Signature%22%0A%20%20%20%20%20%20%20%20)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20mint%20tokens%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20isValidSignature(address%20_systemAddress%2C%20bytes32%20hash%2C%20bytes%20memory%20signature)%20internal%20view%20returns%20(bool)%20%7B%0A%20%20%20%20%20%20%20%20require(_systemAddress%20!%3D%20address(0)%2C%20%22Missing%20System%20Address%22)%3B%0A%0A%20%20%20%20%20%20%20%20bytes32%20signedHash%20%3D%20hash.toEthSignedMessageHash()%3B%0A%20%20%20%20%20%20%20%20return%20signedHash.recover(signature)%20%3D%3D%20_systemAddress%3B%0A%20%20%20%20%7D%0A%0A%7D%0A%0Acontract%20SigningExampleTest%20is%20Test%20%7B%0A%20%20%20%20using%20ECDSA%20for%20bytes32%3B%0A%0A%20%20%20%20SigningExample%20public%20signingExample%3B%0A%0A%20%20%20%20uint256%20internal%20userPrivateKey%3B%0A%20%20%20%20uint256%20internal%20signerPrivateKey%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20signingExample%20%3D%20new%20SigningExample()%3B%0A%0A%20%20%20%20%20%20%20%20userPrivateKey%20%3D%200xa11ce%3B%0A%20%20%20%20%20%20%20%20signerPrivateKey%20%3D%200xabc123%3B%0A%0A%20%20%20%20%20%20%20%20address%20signer%20%3D%20vm.addr(signerPrivateKey)%3B%0A%20%20%20%20%20%20%20%20signingExample.setSystemAddress(signer)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testPurchase()%20public%20%7B%0A%20%20%20%20%20%20%20%20address%20user%20%3D%20vm.addr(userPrivateKey)%3B%0A%20%20%20%20%20%20%20%20address%20signer%20%3D%20vm.addr(signerPrivateKey)%3B%0A%0A%20%20%20%20%20%20%20%20uint256%20amount%20%3D%202%3B%0A%20%20%20%20%20%20%20%20string%20memory%20nonce%20%3D%20'QSfd8gQE4WYzO29'%3B%0A%0A%20%20%20%20%20%20%20%20vm.startPrank(signer)%3B%0A%20%20%20%20%20%20%20%20bytes32%20digest%20%3D%20keccak256(abi.encodePacked(user%2C%20amount%2C%20nonce)).toEthSignedMessageHash()%3B%0A%20%20%20%20%20%20%20%20(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(signerPrivateKey%2C%20digest)%3B%0A%20%20%20%20%20%20%20%20bytes%20memory%20signature%20%3D%20abi.encodePacked(r%2C%20s%2C%20v)%3B%20%2F%2F%20note%20the%20order%20here%20is%20different%20from%20line%20above.%0A%20%20%20%20%20%20%20%20vm.stopPrank()%3B%0A%0A%20%20%20%20%20%20%20%20vm.startPrank(user)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Give%20the%20user%20some%20ETH%2C%20just%20for%20good%20measure%0A%20%20%20%20%20%20%20%20vm.deal(user%2C%201%20ether)%3B%0A%0A%20%20%20%20%20%20%20%20signingExample.purchase(%0A%20%20%20%20%20%20%20%20%20%20%20%20amount%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20nonce%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20signature%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20vm.stopPrank()%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20%60Wallet%60%0A%0AThe%20Wallet%20overload%20is%20a%20simple%20wrapper%20that%20uses%20the%20wallet's%20private%20key%20to%20sign%20the%20digest%0A%0A%60%60%60solidity%0AWallet%20memory%20alice%20%3D%20vm.createWallet(%22alice%22)%3B%0Abytes32%20hash%20%3D%20keccak256(%22Signed%20by%20Alice%22)%3B%0A(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(alice%2C%20hash)%3B%0Aaddress%20signer%20%3D%20ecrecover(hash%2C%20v%2C%20r%2C%20s)%3B%0AassertEq(alice.addr%2C%20signer)%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./signing-7TVzniI1.js"),__vite__mapDeps([328,1])),path:"/reference/cheatcodes/signing",type:"mdx",filePath:"reference/cheatcodes/signing.mdx",content:"%23%23%20Signing%0A%0A-%20%5B%60sign%60%5D(%2Freference%2Fcheatcodes%2Fsign.mdx)%0A-%20%5B%60signDelegation%60%5D(%2Freference%2Fcheatcodes%2Fsign-delegation.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./signing-7TVzniI1.js"),__vite__mapDeps([328,1])),path:"/reference/cheatcodes/signing.html",type:"mdx",filePath:"reference/cheatcodes/signing.mdx",content:"%23%23%20Signing%0A%0A-%20%5B%60sign%60%5D(%2Freference%2Fcheatcodes%2Fsign.mdx)%0A-%20%5B%60signDelegation%60%5D(%2Freference%2Fcheatcodes%2Fsign-delegation.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./skip-BmbRI-oo.js"),__vite__mapDeps([329,1])),path:"/reference/cheatcodes/skip",type:"mdx",filePath:"reference/cheatcodes/skip.mdx",content:"%23%23%20%60skip%60%0A%0A%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20skip(bool%20skip)%20external%3B%0A%60%60%60%0A%0A%23%23%20Description%0A%0AMarks%20a%20test%20as%20skipped%2C%20conditionally.%20It%20must%20be%20called%20at%20the%20top%20of%20the%20test%20to%20ensure%20it%20is%20skipped%20without%20any%20execution.%0A%0AIf%20%60skip%60%20is%20called%20with%20a%20false%20boolean%2C%20it%20will%20not%20skip%20the%20test.%0A%0ATests%20marked%20as%20skipped%20will%20appear%20with%20a%20%60%5BSKIPPED%5D%60%20label%20on%20the%20test%20runner%20and%20on%20the%20summary%2C%20to%20easily%20identify%20skipped%20tests.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%0Afunction%20testSkip()%20public%20%7B%0A%20%20%20%20vm.skip(true)%3B%0A%20%20%20%20%2F%2F%2F%20This%20revert%20will%20not%20be%20reached%20as%20this%20test%20will%20be%20skipped.%0A%20%20%20%20revert(%22Should%20not%20reach%20this%20revert%22)%3B%0A%7D%0A%0Afunction%20testNotSkip()%20public%20%7B%0A%20%20%20%20vm.skip(false)%3B%0A%20%20%20%20%2F%2F%2F%20This%20revert%20will%20be%20reached%20as%20this%20test%20will%20not%20be%20skipped%2C%20and%20the%20test%20will%20fail.%0A%20%20%20%20revert(%22Should%20reach%20this%20revert%22)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./skip-BmbRI-oo.js"),__vite__mapDeps([329,1])),path:"/reference/cheatcodes/skip.html",type:"mdx",filePath:"reference/cheatcodes/skip.mdx",content:"%23%23%20%60skip%60%0A%0A%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20skip(bool%20skip)%20external%3B%0A%60%60%60%0A%0A%23%23%20Description%0A%0AMarks%20a%20test%20as%20skipped%2C%20conditionally.%20It%20must%20be%20called%20at%20the%20top%20of%20the%20test%20to%20ensure%20it%20is%20skipped%20without%20any%20execution.%0A%0AIf%20%60skip%60%20is%20called%20with%20a%20false%20boolean%2C%20it%20will%20not%20skip%20the%20test.%0A%0ATests%20marked%20as%20skipped%20will%20appear%20with%20a%20%60%5BSKIPPED%5D%60%20label%20on%20the%20test%20runner%20and%20on%20the%20summary%2C%20to%20easily%20identify%20skipped%20tests.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%0Afunction%20testSkip()%20public%20%7B%0A%20%20%20%20vm.skip(true)%3B%0A%20%20%20%20%2F%2F%2F%20This%20revert%20will%20not%20be%20reached%20as%20this%20test%20will%20be%20skipped.%0A%20%20%20%20revert(%22Should%20not%20reach%20this%20revert%22)%3B%0A%7D%0A%0Afunction%20testNotSkip()%20public%20%7B%0A%20%20%20%20vm.skip(false)%3B%0A%20%20%20%20%2F%2F%2F%20This%20revert%20will%20be%20reached%20as%20this%20test%20will%20not%20be%20skipped%2C%20and%20the%20test%20will%20fail.%0A%20%20%20%20revert(%22Should%20reach%20this%20revert%22)%3B%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sleep-BK_UORTh.js"),__vite__mapDeps([330,1])),path:"/reference/cheatcodes/sleep",type:"mdx",filePath:"reference/cheatcodes/sleep.mdx",content:"%23%23%20%60sleep%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20sleep(uint256%20milliseconds)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASleeps%20for%20a%20given%20amount%20of%20milliseconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.sleep(10_000)%3B%20%2F%2F%20Halts%20execution%20for%2010%20seconds%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sleep-BK_UORTh.js"),__vite__mapDeps([330,1])),path:"/reference/cheatcodes/sleep.html",type:"mdx",filePath:"reference/cheatcodes/sleep.mdx",content:"%23%23%20%60sleep%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20sleep(uint256%20milliseconds)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASleeps%20for%20a%20given%20amount%20of%20milliseconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.sleep(10_000)%3B%20%2F%2F%20Halts%20execution%20for%2010%20seconds%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./start-broadcast-D3XnQ7hC.js"),__vite__mapDeps([331,1])),path:"/reference/cheatcodes/start-broadcast",type:"mdx",filePath:"reference/cheatcodes/start-broadcast.mdx",content:"%23%23%20%60startBroadcast%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startBroadcast()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startBroadcast(address%20who)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startBroadcast(uint256%20privateKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUsing%20the%20address%20that%20calls%20the%20test%20contract%20or%20the%20address%20%2F%20private%20key%20provided%0Aas%20the%20sender%2C%20has%20all%20subsequent%20calls%20(at%20this%20call%20depth%20only%20and%20excluding%20cheatcode%20calls)%20create%0Atransactions%20that%20can%20later%20be%20signed%20and%20sent%20onchain.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20t(uint256%20a)%20public%20returns%20(uint256)%20%7B%0A%20%20%20%20uint256%20b%20%3D%200%3B%0A%20%20%20%20emit%20log_string(%22here%22)%3B%0A%20%20%20%20return%20b%3B%0A%7D%0A%0Afunction%20deployOther()%20public%20%7B%0A%20%20%20%20vm.startBroadcast(ACCOUNT_A)%3B%0A%20%20%20%20Test%20test%20%3D%20new%20Test()%3B%0A%0A%20%20%20%20%2F%2F%20will%20trigger%20a%20transaction%0A%20%20%20%20test.t(1)%3B%0A%0A%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%2F%2F%20broadcast%20again%2C%20this%20time%20using%20a%20private%20key%20from%20your%20environment%20variables%0A%20%20%20%20vm.startBroadcast(vm.envUint(%22PRIVATE_KEY%22))%3B%0A%20%20%20%20test.t(3)%3B%0A%20%20%20%20vm.stopBroadcast()%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Bbroadcast%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx)%0A-%20%5BstopBroadcast%5D(%2Freference%2Fcheatcodes%2Fstop-broadcast.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./start-broadcast-D3XnQ7hC.js"),__vite__mapDeps([331,1])),path:"/reference/cheatcodes/start-broadcast.html",type:"mdx",filePath:"reference/cheatcodes/start-broadcast.mdx",content:"%23%23%20%60startBroadcast%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startBroadcast()%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startBroadcast(address%20who)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startBroadcast(uint256%20privateKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUsing%20the%20address%20that%20calls%20the%20test%20contract%20or%20the%20address%20%2F%20private%20key%20provided%0Aas%20the%20sender%2C%20has%20all%20subsequent%20calls%20(at%20this%20call%20depth%20only%20and%20excluding%20cheatcode%20calls)%20create%0Atransactions%20that%20can%20later%20be%20signed%20and%20sent%20onchain.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20t(uint256%20a)%20public%20returns%20(uint256)%20%7B%0A%20%20%20%20uint256%20b%20%3D%200%3B%0A%20%20%20%20emit%20log_string(%22here%22)%3B%0A%20%20%20%20return%20b%3B%0A%7D%0A%0Afunction%20deployOther()%20public%20%7B%0A%20%20%20%20vm.startBroadcast(ACCOUNT_A)%3B%0A%20%20%20%20Test%20test%20%3D%20new%20Test()%3B%0A%0A%20%20%20%20%2F%2F%20will%20trigger%20a%20transaction%0A%20%20%20%20test.t(1)%3B%0A%0A%20%20%20%20vm.stopBroadcast()%3B%0A%0A%20%20%20%20%2F%2F%20broadcast%20again%2C%20this%20time%20using%20a%20private%20key%20from%20your%20environment%20variables%0A%20%20%20%20vm.startBroadcast(vm.envUint(%22PRIVATE_KEY%22))%3B%0A%20%20%20%20test.t(3)%3B%0A%20%20%20%20vm.stopBroadcast()%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Bbroadcast%5D(%2Freference%2Fcheatcodes%2Fbroadcast.mdx)%0A-%20%5BstopBroadcast%5D(%2Freference%2Fcheatcodes%2Fstop-broadcast.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./start-prank-nvJJnFbT.js"),__vite__mapDeps([332,1])),path:"/reference/cheatcodes/start-prank",type:"mdx",filePath:"reference/cheatcodes/start-prank.mdx",content:"%23%23%20%60startPrank%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender%2C%20address%20txOrigin)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A-%20%60startPrank(address%20msgSender)%60%3A%20sets%20%60msg.sender%60%20**for%20all%20subsequent%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A-%20%60startPrank(address%20msgSender%2C%20address%20txOrigin)%60%3A%20sets%20%60msg.sender%60%20and%20%60tx.origin%60%20**for%20all%20subsequent%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A-%20%60startPrank(address%20msgSender%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20**for%20all%20subsequent%20delegate%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A-%20%60startPrank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20and%20%60tx.origin%60%20**for%20all%20subsequent%20delegate%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20The%20delegate%20calls%20cannot%20be%20pranked%20from%20an%20EOA.%0A%0A%23%23%23%20Examples%0A%0A-%20prank%20delegate%20call%20and%20record%20state%20diffs%0A%0A%60%60%60solidity%0Acontract%20ImplementationTest%20%7B%0A%20%20%20%20uint%20public%20num%3B%0A%20%20%20%20address%20public%20sender%3B%0A%0A%20%20%20%20function%20setNum(uint%20_num)%20public%20%7B%0A%20%20%20%20%20%20%20%20num%20%3D%20_num%3B%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20ProxyTest%20%7B%0A%20%20%20%20uint%20public%20num%3B%0A%20%20%20%20address%20public%20sender%3B%0A%7D%0A%0Acontract%20FoundryIssue%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20ProxyTest%20proxy%20%3D%20new%20ProxyTest()%3B%0A%20%20%20%20%20%20%20%20ImplementationTest%20impl%20%3D%20new%20ImplementationTest()%3B%0A%0A%20%20%20%20%20%20%20%20vm.label(address(proxy)%2C%20'proxy')%3B%0A%20%20%20%20%20%20%20%20vm.label(address(impl)%2C%20'Impl')%3B%0A%0A%20%20%20%20%20%20%20%20uint%20num%20%3D%2042%3B%0A%20%20%20%20%20%20%20%20vm.startPrank(address(proxy)%2C%20true)%3B%0A%20%20%20%20%20%20%20%20vm.startStateDiffRecording()%3B%0A%20%20%20%20%20%20%20%20(bool%20successTwo%2C)%20%3D%20address(impl).delegatecall(abi.encodeWithSignature('setNum(uint256)'%2C%20num))%3B%0A%0A%20%20%20%20%20%20%20%20VmSafe.AccountAccess%5B%5D%20memory%20accountAccesses%20%3D%20vm.stopAndReturnStateDiff()%3B%0A%20%20%20%20%20%20%20%20console.log('accountAccesses.kind'%2C%20uint8(accountAccesses%5B0%5D.kind))%3B%0A%20%20%20%20%20%20%20%20console.log('accountAccesses.accessor'%2C%20vm.getLabel(accountAccesses%5B0%5D.accessor))%3B%0A%20%20%20%20%20%20%20%20console.log('accountAccesses.account'%2C%20vm.getLabel(accountAccesses%5B0%5D.account))%3B%0A%20%20%20%20%20%20%20%20console.logBytes(accountAccesses%5B0%5D.data)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%60%60%60bash%0A%3D%3D%20Logs%20%3D%3D%0A%20%20accountAccesses.kind%201%0A%20%20accountAccesses.accessor%20proxy%0A%20%20accountAccesses.account%20Impl%0A%20%200xcd16ecbf000000000000000000000000000000000000000000000000000000000000002a%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60startHoax%60%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%2C%20%5B%60changePrank%60%5D(%2Freference%2Fforge-std%2Fchange-prank.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./start-prank-nvJJnFbT.js"),__vite__mapDeps([332,1])),path:"/reference/cheatcodes/start-prank.html",type:"mdx",filePath:"reference/cheatcodes/start-prank.mdx",content:"%23%23%20%60startPrank%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender%2C%20address%20txOrigin)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startPrank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A-%20%60startPrank(address%20msgSender)%60%3A%20sets%20%60msg.sender%60%20**for%20all%20subsequent%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A-%20%60startPrank(address%20msgSender%2C%20address%20txOrigin)%60%3A%20sets%20%60msg.sender%60%20and%20%60tx.origin%60%20**for%20all%20subsequent%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A-%20%60startPrank(address%20msgSender%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20**for%20all%20subsequent%20delegate%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A-%20%60startPrank(address%20msgSender%2C%20address%20txOrigin%2C%20bool%20delegateCall)%60%3A%20if%20%60delegateCall%60%20value%20is%20%60true%60%20then%20sets%20%60msg.sender%60%20and%20%60tx.origin%60%20**for%20all%20subsequent%20delegate%20calls**%20until%20%5B%60stopPrank%60%5D(%2Freference%2Fcheatcodes%2Fstop-prank.mdx)%20is%20called.%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20The%20delegate%20calls%20cannot%20be%20pranked%20from%20an%20EOA.%0A%0A%23%23%23%20Examples%0A%0A-%20prank%20delegate%20call%20and%20record%20state%20diffs%0A%0A%60%60%60solidity%0Acontract%20ImplementationTest%20%7B%0A%20%20%20%20uint%20public%20num%3B%0A%20%20%20%20address%20public%20sender%3B%0A%0A%20%20%20%20function%20setNum(uint%20_num)%20public%20%7B%0A%20%20%20%20%20%20%20%20num%20%3D%20_num%3B%0A%20%20%20%20%7D%0A%7D%0A%0Acontract%20ProxyTest%20%7B%0A%20%20%20%20uint%20public%20num%3B%0A%20%20%20%20address%20public%20sender%3B%0A%7D%0A%0Acontract%20FoundryIssue%20is%20Script%20%7B%0A%20%20%20%20function%20run()%20public%20%7B%0A%20%20%20%20%20%20%20%20ProxyTest%20proxy%20%3D%20new%20ProxyTest()%3B%0A%20%20%20%20%20%20%20%20ImplementationTest%20impl%20%3D%20new%20ImplementationTest()%3B%0A%0A%20%20%20%20%20%20%20%20vm.label(address(proxy)%2C%20'proxy')%3B%0A%20%20%20%20%20%20%20%20vm.label(address(impl)%2C%20'Impl')%3B%0A%0A%20%20%20%20%20%20%20%20uint%20num%20%3D%2042%3B%0A%20%20%20%20%20%20%20%20vm.startPrank(address(proxy)%2C%20true)%3B%0A%20%20%20%20%20%20%20%20vm.startStateDiffRecording()%3B%0A%20%20%20%20%20%20%20%20(bool%20successTwo%2C)%20%3D%20address(impl).delegatecall(abi.encodeWithSignature('setNum(uint256)'%2C%20num))%3B%0A%0A%20%20%20%20%20%20%20%20VmSafe.AccountAccess%5B%5D%20memory%20accountAccesses%20%3D%20vm.stopAndReturnStateDiff()%3B%0A%20%20%20%20%20%20%20%20console.log('accountAccesses.kind'%2C%20uint8(accountAccesses%5B0%5D.kind))%3B%0A%20%20%20%20%20%20%20%20console.log('accountAccesses.accessor'%2C%20vm.getLabel(accountAccesses%5B0%5D.accessor))%3B%0A%20%20%20%20%20%20%20%20console.log('accountAccesses.account'%2C%20vm.getLabel(accountAccesses%5B0%5D.account))%3B%0A%20%20%20%20%20%20%20%20console.logBytes(accountAccesses%5B0%5D.data)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0A%60%60%60bash%0A%3D%3D%20Logs%20%3D%3D%0A%20%20accountAccesses.kind%201%0A%20%20accountAccesses.accessor%20proxy%0A%20%20accountAccesses.account%20Impl%0A%20%200xcd16ecbf000000000000000000000000000000000000000000000000000000000000002a%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60startHoax%60%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%2C%20%5B%60changePrank%60%5D(%2Freference%2Fforge-std%2Fchange-prank.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./start-state-diff-recording-BmlHyp_q.js"),__vite__mapDeps([333,1])),path:"/reference/cheatcodes/start-state-diff-recording",type:"mdx",filePath:"reference/cheatcodes/start-state-diff-recording.mdx",content:"%23%23%20%60startStateDiffRecording%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startStateDiffRecording()%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARecords%20all%20state%20changes%20as%20part%20of%20CREATE%2C%20CALL%20or%20SELFDESTRUCT%20opcodes%20in%20order%2C%0Aalong%20with%20the%20context%20of%20the%20calls.%0ARefer%20to%20%5B%60stopAndReturnStateDiff%60%5D(%2Freference%2Fcheatcodes%2Fstop-and-return-state-diff.mdx)%20for%20more%20details%20on%20how%20to%20access%20and%20interpret%20the%20recorded%20state%20changes.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./start-state-diff-recording-BmlHyp_q.js"),__vite__mapDeps([333,1])),path:"/reference/cheatcodes/start-state-diff-recording.html",type:"mdx",filePath:"reference/cheatcodes/start-state-diff-recording.mdx",content:"%23%23%20%60startStateDiffRecording%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startStateDiffRecording()%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARecords%20all%20state%20changes%20as%20part%20of%20CREATE%2C%20CALL%20or%20SELFDESTRUCT%20opcodes%20in%20order%2C%0Aalong%20with%20the%20context%20of%20the%20calls.%0ARefer%20to%20%5B%60stopAndReturnStateDiff%60%5D(%2Freference%2Fcheatcodes%2Fstop-and-return-state-diff.mdx)%20for%20more%20details%20on%20how%20to%20access%20and%20interpret%20the%20recorded%20state%20changes.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./state-snapshots-nD7JZ3SS.js"),__vite__mapDeps([334,1])),path:"/reference/cheatcodes/state-snapshots",type:"mdx",filePath:"reference/cheatcodes/state-snapshots.mdx",content:"%23%23%20%60snapshotState%60%20cheatcodes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Snapshot%20the%20current%20state%20of%20the%20evm.%0A%2F%2F%2F%20Returns%20the%20ID%20of%20the%20snapshot%20that%20was%20created.%0A%2F%2F%2F%20To%20revert%20a%20snapshot%20use%20%60revertToState%60.%0Afunction%20snapshotState()%20external%20returns%20(uint256%20snapshotId)%3B%0A%0A%2F%2F%2F%20Revert%20the%20state%20of%20the%20EVM%20to%20a%20previous%20snapshot%0A%2F%2F%2F%20Takes%20the%20snapshot%20ID%20to%20revert%20to.%0A%2F%2F%2F%20Returns%20%60true%60%20if%20the%20snapshot%20was%20successfully%20reverted.%0A%2F%2F%2F%20Returns%20%60false%60%20if%20the%20snapshot%20does%20not%20exist.%0A%2F%2F%2F%20**Note%3A**%20This%20does%20not%20automatically%20delete%20the%20snapshot.%20To%20delete%20the%20snapshot%20use%20%60deleteStateSnapshot%60.%0Afunction%20revertToState(uint256%20snapshotId)%20external%20returns%20(bool%20success)%3B%0A%0A%2F%2F%2F%20Revert%20the%20state%20of%20the%20EVM%20to%20a%20previous%20snapshot%20and%20automatically%20deletes%20the%20snapshots%0A%2F%2F%2F%20Takes%20the%20snapshot%20ID%20to%20revert%20to.%0A%2F%2F%2F%20Returns%20%60true%60%20if%20the%20snapshot%20was%20successfully%20reverted%20and%20deleted.%0A%2F%2F%2F%20Returns%20%60false%60%20if%20the%20snapshot%20does%20not%20exist.%0Afunction%20revertToStateAndDelete(uint256%20snapshotId)%20external%20returns%20(bool%20success)%3B%0A%0A%2F%2F%2F%20Removes%20the%20snapshot%20with%20the%20given%20ID%20created%20by%20%60snapshot%60.%0A%2F%2F%2F%20Takes%20the%20snapshot%20ID%20to%20delete.%0A%2F%2F%2F%20Returns%20%60true%60%20if%20the%20snapshot%20was%20successfully%20deleted.%0A%2F%2F%2F%20Returns%20%60false%60%20if%20the%20snapshot%20does%20not%20exist.%0Afunction%20deleteStateSnapshot(uint256%20snapshotId)%20external%20returns%20(bool%20success)%3B%0A%0A%2F%2F%2F%20Removes%20_all_%20snapshots%20previously%20created%20by%20%60snapshot%60.%0Afunction%20deleteStateSnapshots()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A%60snapshotState%60%20takes%20a%20snapshot%20of%20the%20state%20of%20the%20blockchain%20and%20returns%20the%20identifier%20of%20the%20created%20snapshot.%0A%0A%60revertToState%60%20reverts%20the%20state%20of%20the%20blockchain%20to%20the%20given%20state%20snapshot.%20This%20deletes%20the%20given%20snapshot%2C%20as%20well%20as%20any%20snapshots%20taken%20after%20(e.g.%3A%20reverting%20to%20id%202%20will%20delete%20snapshots%20with%20ids%202%2C%203%2C%204%2C%20etc.).%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astruct%20Storage%20%7B%0A%20%20%20%20uint%20slot0%3B%0A%20%20%20%20uint%20slot1%3B%0A%7D%0A%0Acontract%20SnapshotStateTest%20is%20Test%20%7B%0A%20%20%20%20Storage%20store%3B%0A%20%20%20%20uint256%20timestamp%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20store.slot0%20%3D%2010%3B%0A%20%20%20%20%20%20%20%20store.slot1%20%3D%2020%3B%0A%20%20%20%20%20%20%20%20vm.deal(address(this)%2C%205%20ether)%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20balance%20%3D%205%20ether%0A%20%20%20%20%20%20%20%20timestamp%20%3D%20block.timestamp%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSnapshotState()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20snapshot%20%3D%20vm.snapshotState()%3B%20%20%20%20%20%20%2F%2F%20saves%20the%20state%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20let's%20change%20the%20state%0A%20%20%20%20%20%20%20%20store.slot0%20%3D%20300%3B%0A%20%20%20%20%20%20%20%20store.slot1%20%3D%20400%3B%0A%20%20%20%20%20%20%20%20vm.deal(address(this)%2C%20500%20ether)%3B%0A%20%20%20%20%20%20%20%20vm.warp(12345)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20block.timestamp%20%3D%2012345%0A%0A%20%20%20%20%20%20%20%20assertEq(store.slot0%2C%20300)%3B%0A%20%20%20%20%20%20%20%20assertEq(store.slot1%2C%20400)%3B%0A%20%20%20%20%20%20%20%20assertEq(address(this).balance%2C%20500%20ether)%3B%0A%20%20%20%20%20%20%20%20assertEq(block.timestamp%2C%2012345)%3B%0A%0A%20%20%20%20%20%20%20%20vm.revertToState(snapshot)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20restores%20the%20state%0A%0A%20%20%20%20%20%20%20%20assertEq(store.slot0%2C%2010%2C%20%22snapshot%20revert%20for%20slot%200%20unsuccessful%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(store.slot1%2C%2020%2C%20%22snapshot%20revert%20for%20slot%201%20unsuccessful%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(address(this).balance%2C%205%20ether%2C%20%22snapshot%20revert%20for%20balance%20unsuccessful%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(block.timestamp%2C%20timestamp%2C%20%22snapshot%20revert%20for%20timestamp%20unsuccessful%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./state-snapshots-nD7JZ3SS.js"),__vite__mapDeps([334,1])),path:"/reference/cheatcodes/state-snapshots.html",type:"mdx",filePath:"reference/cheatcodes/state-snapshots.mdx",content:"%23%23%20%60snapshotState%60%20cheatcodes%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%2F%20Snapshot%20the%20current%20state%20of%20the%20evm.%0A%2F%2F%2F%20Returns%20the%20ID%20of%20the%20snapshot%20that%20was%20created.%0A%2F%2F%2F%20To%20revert%20a%20snapshot%20use%20%60revertToState%60.%0Afunction%20snapshotState()%20external%20returns%20(uint256%20snapshotId)%3B%0A%0A%2F%2F%2F%20Revert%20the%20state%20of%20the%20EVM%20to%20a%20previous%20snapshot%0A%2F%2F%2F%20Takes%20the%20snapshot%20ID%20to%20revert%20to.%0A%2F%2F%2F%20Returns%20%60true%60%20if%20the%20snapshot%20was%20successfully%20reverted.%0A%2F%2F%2F%20Returns%20%60false%60%20if%20the%20snapshot%20does%20not%20exist.%0A%2F%2F%2F%20**Note%3A**%20This%20does%20not%20automatically%20delete%20the%20snapshot.%20To%20delete%20the%20snapshot%20use%20%60deleteStateSnapshot%60.%0Afunction%20revertToState(uint256%20snapshotId)%20external%20returns%20(bool%20success)%3B%0A%0A%2F%2F%2F%20Revert%20the%20state%20of%20the%20EVM%20to%20a%20previous%20snapshot%20and%20automatically%20deletes%20the%20snapshots%0A%2F%2F%2F%20Takes%20the%20snapshot%20ID%20to%20revert%20to.%0A%2F%2F%2F%20Returns%20%60true%60%20if%20the%20snapshot%20was%20successfully%20reverted%20and%20deleted.%0A%2F%2F%2F%20Returns%20%60false%60%20if%20the%20snapshot%20does%20not%20exist.%0Afunction%20revertToStateAndDelete(uint256%20snapshotId)%20external%20returns%20(bool%20success)%3B%0A%0A%2F%2F%2F%20Removes%20the%20snapshot%20with%20the%20given%20ID%20created%20by%20%60snapshot%60.%0A%2F%2F%2F%20Takes%20the%20snapshot%20ID%20to%20delete.%0A%2F%2F%2F%20Returns%20%60true%60%20if%20the%20snapshot%20was%20successfully%20deleted.%0A%2F%2F%2F%20Returns%20%60false%60%20if%20the%20snapshot%20does%20not%20exist.%0Afunction%20deleteStateSnapshot(uint256%20snapshotId)%20external%20returns%20(bool%20success)%3B%0A%0A%2F%2F%2F%20Removes%20_all_%20snapshots%20previously%20created%20by%20%60snapshot%60.%0Afunction%20deleteStateSnapshots()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0A%60snapshotState%60%20takes%20a%20snapshot%20of%20the%20state%20of%20the%20blockchain%20and%20returns%20the%20identifier%20of%20the%20created%20snapshot.%0A%0A%60revertToState%60%20reverts%20the%20state%20of%20the%20blockchain%20to%20the%20given%20state%20snapshot.%20This%20deletes%20the%20given%20snapshot%2C%20as%20well%20as%20any%20snapshots%20taken%20after%20(e.g.%3A%20reverting%20to%20id%202%20will%20delete%20snapshots%20with%20ids%202%2C%203%2C%204%2C%20etc.).%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Astruct%20Storage%20%7B%0A%20%20%20%20uint%20slot0%3B%0A%20%20%20%20uint%20slot1%3B%0A%7D%0A%0Acontract%20SnapshotStateTest%20is%20Test%20%7B%0A%20%20%20%20Storage%20store%3B%0A%20%20%20%20uint256%20timestamp%3B%0A%0A%20%20%20%20function%20setUp()%20public%20%7B%0A%20%20%20%20%20%20%20%20store.slot0%20%3D%2010%3B%0A%20%20%20%20%20%20%20%20store.slot1%20%3D%2020%3B%0A%20%20%20%20%20%20%20%20vm.deal(address(this)%2C%205%20ether)%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20balance%20%3D%205%20ether%0A%20%20%20%20%20%20%20%20timestamp%20%3D%20block.timestamp%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20testSnapshotState()%20public%20%7B%0A%20%20%20%20%20%20%20%20uint256%20snapshot%20%3D%20vm.snapshotState()%3B%20%20%20%20%20%20%2F%2F%20saves%20the%20state%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20let's%20change%20the%20state%0A%20%20%20%20%20%20%20%20store.slot0%20%3D%20300%3B%0A%20%20%20%20%20%20%20%20store.slot1%20%3D%20400%3B%0A%20%20%20%20%20%20%20%20vm.deal(address(this)%2C%20500%20ether)%3B%0A%20%20%20%20%20%20%20%20vm.warp(12345)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20block.timestamp%20%3D%2012345%0A%0A%20%20%20%20%20%20%20%20assertEq(store.slot0%2C%20300)%3B%0A%20%20%20%20%20%20%20%20assertEq(store.slot1%2C%20400)%3B%0A%20%20%20%20%20%20%20%20assertEq(address(this).balance%2C%20500%20ether)%3B%0A%20%20%20%20%20%20%20%20assertEq(block.timestamp%2C%2012345)%3B%0A%0A%20%20%20%20%20%20%20%20vm.revertToState(snapshot)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20restores%20the%20state%0A%0A%20%20%20%20%20%20%20%20assertEq(store.slot0%2C%2010%2C%20%22snapshot%20revert%20for%20slot%200%20unsuccessful%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(store.slot1%2C%2020%2C%20%22snapshot%20revert%20for%20slot%201%20unsuccessful%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(address(this).balance%2C%205%20ether%2C%20%22snapshot%20revert%20for%20balance%20unsuccessful%22)%3B%0A%20%20%20%20%20%20%20%20assertEq(block.timestamp%2C%20timestamp%2C%20%22snapshot%20revert%20for%20timestamp%20unsuccessful%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./stop-and-return-state-diff-Cc2rTwce.js"),__vite__mapDeps([335,1])),path:"/reference/cheatcodes/stop-and-return-state-diff",type:"mdx",filePath:"reference/cheatcodes/stop-and-return-state-diff.mdx",content:"%23%23%20%60stopAndReturnStateDiff%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Aenum%20AccountAccessKind%20%7B%0A%20%20%20%20Call%2C%0A%20%20%20%20DelegateCall%2C%0A%20%20%20%20CallCode%2C%0A%20%20%20%20StaticCall%2C%0A%20%20%20%20Create%2C%0A%20%20%20%20SelfDestruct%2C%0A%20%20%20%20Resume%2C%0A%20%20%20%20Balance%2C%0A%20%20%20%20Extcodesize%2C%0A%20%20%20%20Extcodehash%2C%0A%20%20%20%20Extcodecopy%0A%7D%0A%0Astruct%20ChainInfo%20%7B%0A%20%20%20%20uint256%20forkId%3B%0A%20%20%20%20uint256%20chainId%3B%0A%7D%0A%0Astruct%20AccountAccess%20%7B%0A%20%20%20%20ChainInfo%20chainInfo%3B%0A%20%20%20%20AccountAccessKind%20kind%3B%0A%20%20%20%20address%20account%3B%0A%20%20%20%20address%20accessor%3B%0A%20%20%20%20bool%20initialized%3B%0A%20%20%20%20uint256%20oldBalance%3B%0A%20%20%20%20uint256%20newBalance%3B%0A%20%20%20%20bytes%20deployedCode%3B%0A%20%20%20%20uint256%20value%3B%0A%20%20%20%20bytes%20data%3B%0A%20%20%20%20bool%20reverted%3B%0A%20%20%20%20StorageAccess%5B%5D%20storageAccesses%3B%0A%20%20%20%20uint64%20depth%3B%0A%7D%0A%0Astruct%20StorageAccess%20%7B%0A%20%20%20%20address%20account%3B%0A%20%20%20%20bytes32%20slot%3B%0A%20%20%20%20bool%20isWrite%3B%0A%20%20%20%20bytes32%20previousValue%3B%0A%20%20%20%20bytes32%20newValue%3B%0A%20%20%20%20bool%20reverted%3B%0A%7D%0A%0Afunction%20stopAndReturnStateDiff()%20external%20returns%20(AccountAccess%5B%5D%20memory%20accesses)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARetrieves%20state%20changes%20recorded%20after%20a%20call%20to%20%5B%60startStateDiffRecording%60%5D(%2Freference%2Fcheatcodes%2Fstart-state-diff-recording.mdx).%20This%20function%20will%20consume%20the%20recorded%20state%20diffs%20when%20called%20and%20disable%20state%20diff%20recording.%20One%20may%20call%20%60startStateDiffRecording%60%20to%20resume%20recording.%0A%0AThere%20are%20two%20types%20of%20state%20change%20records%3B%20account%20accesses%20and%20storage%20accesses%20represented%20as%20%60AccountAccess%60%20and%20%60StorageAccess%60.%0A%0AAccount%20state%20changes%20(%60AccountAccess%60)%20are%20recorded%20at%20the%20start%20of%20a%20new%20EVM%20context%3B%20i.e.%20induced%20by%20the%20various%20CREATE%2C%20CALL%20and%20SELFDESTRUCT%20operations.%0AAn%20%60AccountAccess%60%20record%20contain%20storage%20accesses%2C%20represented%20as%20%60StorageAccess%60%2C%20that%20occurred%20before%20it%20was%20preempted%20via%20sub-calls%20or%20create%20operations.%0A%0AThe%20ordering%20of%20%60AccountAccess%60%20records%20reflect%20the%20EVM%20execution%20order%20of%20their%20associated%20operations.%20An%20%60AccountAccess%60%20is%20created%20whenever%20an%20EVM%20context%20is%20created%20or%20resumed.%0AIf%20a%20sub-context%20is%20created%2C%20a%20%60Resume%60%20%60AccountAccess%60%20is%20recorded%20to%20indicate%20that%20a%20previous%20%60AccountAccess%60%20that%20was%20pre-emptied%20has%20been%20resumed.%0A%0A%23%23%23%20%60AccountAccessKind%60%0A%0AThe%20kind%20of%20account%20access%20that%20determines%20the%20%60account%60%20that%20was%20accessed.%20This%20is%20typically%20designated%20by%20the%20EVM%20operation%20that%20initiated%20the%20account's%20execution%20context.%0AIf%20kind%20is%20%60Call%60%2C%20%60DelegateCall%60%2C%20%60StaticCall%60%20or%20%60CallCode%60%2C%20then%20the%20%60account%60%20is%20the%20callee.%0AIf%20kind%20is%20Create%2C%20then%20the%20account%20is%20the%20newly%20created%20account.%0AIf%20kind%20is%20SelfDestruct%2C%20then%20the%20account%20is%20the%20selfdestruct%20recipient.%0AIf%20kind%20is%20a%20Resume%2C%20then%20account%20represents%20an%20execution%20context%20that%20had%20resumed.%0A%0A-%20%60Call%60%20-%20The%20account%20was%20called%0A-%20%60DelegateCall%60%20-%20The%20account%20was%20called%20via%20delegate%20call%0A-%20%60CallCode%60%20-%20The%20account%20was%20called%20via%20callcode%0A-%20%60StaticCall%60%20-%20The%20account%20was%20called%20via%20staticcall%0A-%20%60Create%60%20-%20The%20account%20was%20created%0A-%20%60SelfDestruct%60%20-%20The%20account%20was%20selfdestructed%0A-%20%60Resume%60%20-%20Indicates%20that%20a%20previously%20pre-emptied%20account%20access%20was%20resumed%0A-%20%60Balance%60%20-%20The%20account's%20balance%20was%20read%0A-%20%60Extcodesize%60%20-%20The%20account's%20codesize%20was%20read%0A-%20%60Extcodehash%60%20-%20The%20account's%20codehash%20was%20read%0A-%20%60Extcodecopy%60%20-%20The%20account's%20code%20was%20copied%0A%0A%23%23%23%20%60AccountAccess%60%0A%0A-%20%60chainInfo%60%20-%20The%20chain%20and%20fork%20the%20accessed%20occurred.%0A-%20%60kind%60%20-%20The%20kind%20of%20account%20access.%20This%20determines%20how%20to%20interpret%20the%20%60AccountAccess%60%0A-%20%60account%60%20-%20The%20account%20that%20was%20accessed.%20It's%20the%20account%20created%20for%20%60AccountAccessKind.Create%60.%0A%20%20In%20the%20case%20of%20an%20%60AccountAccessKind.SelfDestruct%60%2C%20it's%20the%20selfdestruct%20recipient.%0A%20%20For%20all%20other%20types%20of%20%60AccountAccessKind%60%2C%20it's%20the%20account%20of%20the%20current%20EVM%20context.%0A-%20%60accessor%60%20-%20What%20accessed%20%60account%60.%20That%20is%20either%20the%20account%20creator%2C%20caller%20or%20the%20account%20being%20selfdestructed.%0A-%20%60initialized%60%20-%20If%20the%20account%20was%20initialized%20or%20empty%20prior%20to%20the%20access.%0A%20%20An%20account%20is%20considered%20initialized%20if%20it%20has%20code%2C%20a%0A%20%20non-zero%20nonce%2C%20or%20a%20non-zero%20balance.%0A-%20%60oldBalance%60%3A%20The%20previous%20balance%20of%20the%20accessed%20%60account%60.%0A-%20%60newBalance%60%20-%20The%20potential%20new%20balance%20of%20the%20accessed%20account.%0A%20%20That%20is%2C%20all%20balance%20changes%20are%20recorded%20here%2C%20even%20if%20reverts%20occurred.%0A-%20%60deployedCode%60%20-%20Code%20of%20the%20%60account%60%20deployed%20in%20the%20case%20of%20%60AccountAccessKind.Create%60.%20This%20field%20is%20empty%20For%20all%20other%20account%20access%20kinds.%0A-%20%60value%60%20-%20The%20value%20passed%20along%20with%20the%20account%20access.%0A-%20%60data%60%20-%20Input%20data%20provided%20(i.e.%20%60msg.data%60)%20in%20the%20case%20of%20a%20%60CREATE%60%20or%20%60CALL%60%20type%20access.%0A-%20%60reverted%60%20-%20If%20this%20access%20reverted%20in%20either%20the%20current%20or%20parent%20context.%0A-%20%60storageAccesses%60%20-%20An%20ordered%20list%20of%20storage%20accesses%20made%20while%20the%20account%20access%20is%20non-preemptive.%0A-%20%60depth%60%20-%20Call%20depth%20traversed%20during%20the%20recording%20of%20state%20differences.%0A%0A%23%23%23%20%60StorageAccess%60%0A%0AThe%20storage%20accesses%20made%20during%20an%20%60AccountAccess%60.%20%60StorageAccess%60%20cannot%20exist%20without%20an%20associated%20%60AccountAccess%60.%20This%20means%20that%20when%20state%20diffs%20begins%20on%20the%20given%20context%2C%20storage%20accesses%20made%20during%20that%20context%20are%20not%20recorded%20as%20the%20context%20(but%20not%20its%20sub-contexts)%20isn't%20recorded.%0A%0A%60StorageAccess%60%20contains%20the%20following%20fields%3A%0A%0A-%20%60account%60%20-%20A%20account%20whose%20storage%20was%20accessed%0A-%20%60slot%60%20-%20The%20slot%20that%20was%20accessed%0A-%20%60isWrite%60%20-%20If%20the%20access%20was%20a%20write%0A-%20%60previousValue%60%20-%20The%20value%20of%20the%20slot%20prior%20to%20this%20storage%20access%0A-%20%60newValue%60%20-%20The%20value%20of%20the%20slot%20after%20this%20storage%20access%0A-%20%60reverted%60%20-%20If%20this%20access%20was%20reverted%0A%0A%23%23%23%20Resumed%20%60AccountAccess%60%0A%0AThis%20type%20of%20AccountAccess%20is%20generated%20when%20a%20sub-context%20returns%20to%20its%20parent%20context.%20It%20retains%20the%20same%20values%20as%20the%20original%20context%2C%20including%20%60accessor%60%2C%20%60account%60%2C%20%60initialized%60%2C%20%60storageAccesses%60%2C%20and%20%60reverted%60.%0AThe%20following%20control%20flow%20table%20illustrate%20how%20Resume%20AccountAccesses%20are%20recorded.%0A%0A%7C%20Step%20in%20Contract%20A's%20%60alpha()%60%20%7C%20Step%20in%20Contract%20B's%20%60beta()%60%20%7C%20AccountAccess%20Records%20State%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20------------------------------%20%7C%20-----------------------------%20%7C%20---------------------------------------------------------------------------------------------------------------%20%7C%0A%7C%20Call%20A.alpha()%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Access%20state%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Call%20B.beta()%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20B.beta()%20begins%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%2C%20B.call%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20(Execution%20Paused)%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Access%20state%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%2C%20B.call%5BB.access%5D%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Return%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Resume%20execution%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20(Return%20to%20A.alpha())%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%2C%20B.call%5BB.access%5D%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Access%20state%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5B%3Cbr%3E%3C%2Fbr%3E%26emsp%3BA.call%5BA.access%5D%2C%20%3Cbr%3E%3C%2Fbr%3E%26emsp%3BB.call%5BB.access%5D%2C%20%3Cbr%3E%3C%2Fbr%3E%26emsp%3BA.resume%5BA.access'%5D%3Cbr%3E%3C%2Fbr%3E%5D%20%7C%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20A%20Resumed%20AccountAccess%20is%20created%20only%20if%20storage%20accesses%20occurred%20after%20a%20context%20was%20resumed.%0A%0A%23%23%23%20Example%3A%20Recording%20storage%20state%20changes%20during%20a%20CREATE%20operation%0A%0A%60%60%60solidity%0Acontract%20Contract%20%7B%0A%20%20%20%20uint256%20internal%20_reserved%3B%0A%20%20%20%20uint256%20public%20data%3B%0A%20%20%20%20constructor(uint%20_data)%20payable%20%7B%20data%20%3D%20_data%3B%20%7D%0A%7D%0A%0Avm.startStateDiffRecording()%3B%0AContract%20contract%20%3D%20new%20Contract%7Bvalue%3A%201%20ether%7D(100)%3B%0AVm.AccountAccess%5B%5D%20memory%20records%20%3D%20vm.stopAndReturnStateDiff()%3B%0A%0AassertEq(records.length%2C%201)%3B%0AassertEq(records%5B0%5D.kind%2C%20Vm.AccountAccessKind.Create)%3B%0AassertEq(records%5B0%5D.account%2C%20address(contract))%3B%0AassertEq(records%5B0%5D.accessor%2C%20address(this))%3B%0AassertEq(records%5B0%5D.initialized%2C%20true)%3B%0AassertEq(records%5B0%5D.oldBalance%2C%200)%3B%0AassertEq(records%5B0%5D.newBalance%2C%201%20ether)%3B%0AassertEq(records%5B0%5D.deployedCode%2C%20address(contract).code)%3B%0AassertEq(records%5B0%5D.value%2C%201%20ether)%3B%0AassertEq(records%5B0%5D.data%2C%20abi.encodePacked(type(Contract).creationCode%2C%20(uint(100))))%3B%0AassertEq(records%5B0%5D.reverted%2C%20false)%3B%0A%0AassertEq(records%5B0%5D.storageAccesses.length%2C%201)%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.account%2C%20address(contract))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.slot%2C%20bytes32(uint256(1)))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.isWrite%2C%20true)%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.previousValue%2C%20bytes32(uint(0)))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.newValue%2C%20bytes32(uint(100)))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.reverted%2C%20false)%3B%0A%60%60%60%0A%0ANote%20that%20there%20are%20no%20%60Resume%60%20account%20accesses%20in%20this%20example.%0A%0A%23%23%23%20Example%3A%20Resumed%20Account%20Access%0A%0A%60%60%60solidity%0Acontract%20Foo%20%7B%0A%20%20%20%20Bar%20b%3B%0A%20%20%20%20uint256%20public%20val%3B%0A%20%20%20%20constructor(Bar%20_b)%20%7B%20b%20%3D%20_b%3B%20%7D%0A%20%20%20%20function%20run()%20external%20%7B%0A%20%20%20%20%20%20%20%20val%20%3D%20val%20%2B%201%3B%0A%20%20%20%20%20%20%20%20b.run()%3B%0A%20%20%20%20%20%20%20%20val%20%3D%20val%20%2B%201%3B%0A%20%20%20%20%7D%0A%7D%0Acontract%20Bar%20%7B%0A%20%20%20%20function%20run()%20external%20%7B%7D%0A%7D%0A%0ABar%20bar%20%3D%20new%20Bar()%3B%0AFoo%20foo%20%3D%20new%20Foo(bar)%3B%0A%0Avm.startStateDiffRecording()%3B%0Afoo.run()%3B%0AVm.AccountAccess%5B%5D%20memory%20records%20%3D%20vm.stopAndReturnStateDiff()%3B%0A%0AassertEq(records.length%2C%203)%3B%0AVm.AccountAccess%20memory%20fooCall%20%3D%20records%5B0%5D%3B%0AassertEq(fooCall.kind%2C%20Vm.AccountAccessKind.Call)%3B%0AassertEq(fooCall.account%2C%20address(foo))%3B%0AassertEq(fooCall.accessor%2C%20address(this))%3B%0A%2F%2F%20foo.val%20increment%0AassertEq(fooCall.storageAccesses.length%2C%202)%3B%0AassertEq(fooCall.storageAccesses%5B0%5D.isWrite%2C%20false)%3B%0AassertEq(fooCall.storageAccesses%5B1%5D.isWrite%2C%20true)%3B%0AassertEq(fooCall.storageAccesses%5B1%5D.oldValue%2C%20bytes32(uint(0)))%3B%0AassertEq(fooCall.storageAccesses%5B1%5D.newValue%2C%20bytes32(uint(1)))%3B%0A%0A%2F%2F%20bar.run%20CALL%0AVm.AccountAccess%20memory%20barCall%20%3D%20records%5B1%5D%3B%0AassertEq(barCall.kind%2C%20Vm.AccountAccessKind.Call)%3B%0AassertEq(barCall.account%2C%20address(bar))%3B%0AassertEq(barCall.accessor%2C%20address(foo))%3B%0A%0A%2F%2F%20foo.run%20RESUME%0AVm.AccountAccess%20memory%20fooResume%20%3D%20records%5B2%5D%3B%0AassertEq(fooResume.kind%2C%20Vm.AccountAccessKind.Resume)%3B%0A%2F%2F%20foo.val%20increment%0AassertEq(fooResume.storageAccesses.length%2C%202)%3B%0AassertEq(fooResume.storageAccesses%5B0%5D.isWrite%2C%20false)%3B%0AassertEq(fooResume.storageAccesses%5B1%5D.isWrite%2C%20true)%3B%0AassertEq(fooResume.storageAccesses%5B1%5D.oldValue%2C%20bytes32(uint(1)))%3B%0AassertEq(fooResume.storageAccesses%5B1%5D.newValue%2C%20bytes32(uint(2)))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./stop-and-return-state-diff-Cc2rTwce.js"),__vite__mapDeps([335,1])),path:"/reference/cheatcodes/stop-and-return-state-diff.html",type:"mdx",filePath:"reference/cheatcodes/stop-and-return-state-diff.mdx",content:"%23%23%20%60stopAndReturnStateDiff%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Aenum%20AccountAccessKind%20%7B%0A%20%20%20%20Call%2C%0A%20%20%20%20DelegateCall%2C%0A%20%20%20%20CallCode%2C%0A%20%20%20%20StaticCall%2C%0A%20%20%20%20Create%2C%0A%20%20%20%20SelfDestruct%2C%0A%20%20%20%20Resume%2C%0A%20%20%20%20Balance%2C%0A%20%20%20%20Extcodesize%2C%0A%20%20%20%20Extcodehash%2C%0A%20%20%20%20Extcodecopy%0A%7D%0A%0Astruct%20ChainInfo%20%7B%0A%20%20%20%20uint256%20forkId%3B%0A%20%20%20%20uint256%20chainId%3B%0A%7D%0A%0Astruct%20AccountAccess%20%7B%0A%20%20%20%20ChainInfo%20chainInfo%3B%0A%20%20%20%20AccountAccessKind%20kind%3B%0A%20%20%20%20address%20account%3B%0A%20%20%20%20address%20accessor%3B%0A%20%20%20%20bool%20initialized%3B%0A%20%20%20%20uint256%20oldBalance%3B%0A%20%20%20%20uint256%20newBalance%3B%0A%20%20%20%20bytes%20deployedCode%3B%0A%20%20%20%20uint256%20value%3B%0A%20%20%20%20bytes%20data%3B%0A%20%20%20%20bool%20reverted%3B%0A%20%20%20%20StorageAccess%5B%5D%20storageAccesses%3B%0A%20%20%20%20uint64%20depth%3B%0A%7D%0A%0Astruct%20StorageAccess%20%7B%0A%20%20%20%20address%20account%3B%0A%20%20%20%20bytes32%20slot%3B%0A%20%20%20%20bool%20isWrite%3B%0A%20%20%20%20bytes32%20previousValue%3B%0A%20%20%20%20bytes32%20newValue%3B%0A%20%20%20%20bool%20reverted%3B%0A%7D%0A%0Afunction%20stopAndReturnStateDiff()%20external%20returns%20(AccountAccess%5B%5D%20memory%20accesses)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARetrieves%20state%20changes%20recorded%20after%20a%20call%20to%20%5B%60startStateDiffRecording%60%5D(%2Freference%2Fcheatcodes%2Fstart-state-diff-recording.mdx).%20This%20function%20will%20consume%20the%20recorded%20state%20diffs%20when%20called%20and%20disable%20state%20diff%20recording.%20One%20may%20call%20%60startStateDiffRecording%60%20to%20resume%20recording.%0A%0AThere%20are%20two%20types%20of%20state%20change%20records%3B%20account%20accesses%20and%20storage%20accesses%20represented%20as%20%60AccountAccess%60%20and%20%60StorageAccess%60.%0A%0AAccount%20state%20changes%20(%60AccountAccess%60)%20are%20recorded%20at%20the%20start%20of%20a%20new%20EVM%20context%3B%20i.e.%20induced%20by%20the%20various%20CREATE%2C%20CALL%20and%20SELFDESTRUCT%20operations.%0AAn%20%60AccountAccess%60%20record%20contain%20storage%20accesses%2C%20represented%20as%20%60StorageAccess%60%2C%20that%20occurred%20before%20it%20was%20preempted%20via%20sub-calls%20or%20create%20operations.%0A%0AThe%20ordering%20of%20%60AccountAccess%60%20records%20reflect%20the%20EVM%20execution%20order%20of%20their%20associated%20operations.%20An%20%60AccountAccess%60%20is%20created%20whenever%20an%20EVM%20context%20is%20created%20or%20resumed.%0AIf%20a%20sub-context%20is%20created%2C%20a%20%60Resume%60%20%60AccountAccess%60%20is%20recorded%20to%20indicate%20that%20a%20previous%20%60AccountAccess%60%20that%20was%20pre-emptied%20has%20been%20resumed.%0A%0A%23%23%23%20%60AccountAccessKind%60%0A%0AThe%20kind%20of%20account%20access%20that%20determines%20the%20%60account%60%20that%20was%20accessed.%20This%20is%20typically%20designated%20by%20the%20EVM%20operation%20that%20initiated%20the%20account's%20execution%20context.%0AIf%20kind%20is%20%60Call%60%2C%20%60DelegateCall%60%2C%20%60StaticCall%60%20or%20%60CallCode%60%2C%20then%20the%20%60account%60%20is%20the%20callee.%0AIf%20kind%20is%20Create%2C%20then%20the%20account%20is%20the%20newly%20created%20account.%0AIf%20kind%20is%20SelfDestruct%2C%20then%20the%20account%20is%20the%20selfdestruct%20recipient.%0AIf%20kind%20is%20a%20Resume%2C%20then%20account%20represents%20an%20execution%20context%20that%20had%20resumed.%0A%0A-%20%60Call%60%20-%20The%20account%20was%20called%0A-%20%60DelegateCall%60%20-%20The%20account%20was%20called%20via%20delegate%20call%0A-%20%60CallCode%60%20-%20The%20account%20was%20called%20via%20callcode%0A-%20%60StaticCall%60%20-%20The%20account%20was%20called%20via%20staticcall%0A-%20%60Create%60%20-%20The%20account%20was%20created%0A-%20%60SelfDestruct%60%20-%20The%20account%20was%20selfdestructed%0A-%20%60Resume%60%20-%20Indicates%20that%20a%20previously%20pre-emptied%20account%20access%20was%20resumed%0A-%20%60Balance%60%20-%20The%20account's%20balance%20was%20read%0A-%20%60Extcodesize%60%20-%20The%20account's%20codesize%20was%20read%0A-%20%60Extcodehash%60%20-%20The%20account's%20codehash%20was%20read%0A-%20%60Extcodecopy%60%20-%20The%20account's%20code%20was%20copied%0A%0A%23%23%23%20%60AccountAccess%60%0A%0A-%20%60chainInfo%60%20-%20The%20chain%20and%20fork%20the%20accessed%20occurred.%0A-%20%60kind%60%20-%20The%20kind%20of%20account%20access.%20This%20determines%20how%20to%20interpret%20the%20%60AccountAccess%60%0A-%20%60account%60%20-%20The%20account%20that%20was%20accessed.%20It's%20the%20account%20created%20for%20%60AccountAccessKind.Create%60.%0A%20%20In%20the%20case%20of%20an%20%60AccountAccessKind.SelfDestruct%60%2C%20it's%20the%20selfdestruct%20recipient.%0A%20%20For%20all%20other%20types%20of%20%60AccountAccessKind%60%2C%20it's%20the%20account%20of%20the%20current%20EVM%20context.%0A-%20%60accessor%60%20-%20What%20accessed%20%60account%60.%20That%20is%20either%20the%20account%20creator%2C%20caller%20or%20the%20account%20being%20selfdestructed.%0A-%20%60initialized%60%20-%20If%20the%20account%20was%20initialized%20or%20empty%20prior%20to%20the%20access.%0A%20%20An%20account%20is%20considered%20initialized%20if%20it%20has%20code%2C%20a%0A%20%20non-zero%20nonce%2C%20or%20a%20non-zero%20balance.%0A-%20%60oldBalance%60%3A%20The%20previous%20balance%20of%20the%20accessed%20%60account%60.%0A-%20%60newBalance%60%20-%20The%20potential%20new%20balance%20of%20the%20accessed%20account.%0A%20%20That%20is%2C%20all%20balance%20changes%20are%20recorded%20here%2C%20even%20if%20reverts%20occurred.%0A-%20%60deployedCode%60%20-%20Code%20of%20the%20%60account%60%20deployed%20in%20the%20case%20of%20%60AccountAccessKind.Create%60.%20This%20field%20is%20empty%20For%20all%20other%20account%20access%20kinds.%0A-%20%60value%60%20-%20The%20value%20passed%20along%20with%20the%20account%20access.%0A-%20%60data%60%20-%20Input%20data%20provided%20(i.e.%20%60msg.data%60)%20in%20the%20case%20of%20a%20%60CREATE%60%20or%20%60CALL%60%20type%20access.%0A-%20%60reverted%60%20-%20If%20this%20access%20reverted%20in%20either%20the%20current%20or%20parent%20context.%0A-%20%60storageAccesses%60%20-%20An%20ordered%20list%20of%20storage%20accesses%20made%20while%20the%20account%20access%20is%20non-preemptive.%0A-%20%60depth%60%20-%20Call%20depth%20traversed%20during%20the%20recording%20of%20state%20differences.%0A%0A%23%23%23%20%60StorageAccess%60%0A%0AThe%20storage%20accesses%20made%20during%20an%20%60AccountAccess%60.%20%60StorageAccess%60%20cannot%20exist%20without%20an%20associated%20%60AccountAccess%60.%20This%20means%20that%20when%20state%20diffs%20begins%20on%20the%20given%20context%2C%20storage%20accesses%20made%20during%20that%20context%20are%20not%20recorded%20as%20the%20context%20(but%20not%20its%20sub-contexts)%20isn't%20recorded.%0A%0A%60StorageAccess%60%20contains%20the%20following%20fields%3A%0A%0A-%20%60account%60%20-%20A%20account%20whose%20storage%20was%20accessed%0A-%20%60slot%60%20-%20The%20slot%20that%20was%20accessed%0A-%20%60isWrite%60%20-%20If%20the%20access%20was%20a%20write%0A-%20%60previousValue%60%20-%20The%20value%20of%20the%20slot%20prior%20to%20this%20storage%20access%0A-%20%60newValue%60%20-%20The%20value%20of%20the%20slot%20after%20this%20storage%20access%0A-%20%60reverted%60%20-%20If%20this%20access%20was%20reverted%0A%0A%23%23%23%20Resumed%20%60AccountAccess%60%0A%0AThis%20type%20of%20AccountAccess%20is%20generated%20when%20a%20sub-context%20returns%20to%20its%20parent%20context.%20It%20retains%20the%20same%20values%20as%20the%20original%20context%2C%20including%20%60accessor%60%2C%20%60account%60%2C%20%60initialized%60%2C%20%60storageAccesses%60%2C%20and%20%60reverted%60.%0AThe%20following%20control%20flow%20table%20illustrate%20how%20Resume%20AccountAccesses%20are%20recorded.%0A%0A%7C%20Step%20in%20Contract%20A's%20%60alpha()%60%20%7C%20Step%20in%20Contract%20B's%20%60beta()%60%20%7C%20AccountAccess%20Records%20State%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20------------------------------%20%7C%20-----------------------------%20%7C%20---------------------------------------------------------------------------------------------------------------%20%7C%0A%7C%20Call%20A.alpha()%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Access%20state%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Call%20B.beta()%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20B.beta()%20begins%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%2C%20B.call%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20(Execution%20Paused)%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Access%20state%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%2C%20B.call%5BB.access%5D%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Return%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Resume%20execution%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20(Return%20to%20A.alpha())%20%20%20%20%20%20%20%20%20%7C%20%5BA.call%5BA.access%5D%2C%20B.call%5BB.access%5D%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20Access%20state%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%5B%3Cbr%3E%3C%2Fbr%3E%26emsp%3BA.call%5BA.access%5D%2C%20%3Cbr%3E%3C%2Fbr%3E%26emsp%3BB.call%5BB.access%5D%2C%20%3Cbr%3E%3C%2Fbr%3E%26emsp%3BA.resume%5BA.access'%5D%3Cbr%3E%3C%2Fbr%3E%5D%20%7C%0A%0A%3E%20%E2%84%B9%EF%B8%8F%20**Note**%0A%3E%0A%3E%20A%20Resumed%20AccountAccess%20is%20created%20only%20if%20storage%20accesses%20occurred%20after%20a%20context%20was%20resumed.%0A%0A%23%23%23%20Example%3A%20Recording%20storage%20state%20changes%20during%20a%20CREATE%20operation%0A%0A%60%60%60solidity%0Acontract%20Contract%20%7B%0A%20%20%20%20uint256%20internal%20_reserved%3B%0A%20%20%20%20uint256%20public%20data%3B%0A%20%20%20%20constructor(uint%20_data)%20payable%20%7B%20data%20%3D%20_data%3B%20%7D%0A%7D%0A%0Avm.startStateDiffRecording()%3B%0AContract%20contract%20%3D%20new%20Contract%7Bvalue%3A%201%20ether%7D(100)%3B%0AVm.AccountAccess%5B%5D%20memory%20records%20%3D%20vm.stopAndReturnStateDiff()%3B%0A%0AassertEq(records.length%2C%201)%3B%0AassertEq(records%5B0%5D.kind%2C%20Vm.AccountAccessKind.Create)%3B%0AassertEq(records%5B0%5D.account%2C%20address(contract))%3B%0AassertEq(records%5B0%5D.accessor%2C%20address(this))%3B%0AassertEq(records%5B0%5D.initialized%2C%20true)%3B%0AassertEq(records%5B0%5D.oldBalance%2C%200)%3B%0AassertEq(records%5B0%5D.newBalance%2C%201%20ether)%3B%0AassertEq(records%5B0%5D.deployedCode%2C%20address(contract).code)%3B%0AassertEq(records%5B0%5D.value%2C%201%20ether)%3B%0AassertEq(records%5B0%5D.data%2C%20abi.encodePacked(type(Contract).creationCode%2C%20(uint(100))))%3B%0AassertEq(records%5B0%5D.reverted%2C%20false)%3B%0A%0AassertEq(records%5B0%5D.storageAccesses.length%2C%201)%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.account%2C%20address(contract))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.slot%2C%20bytes32(uint256(1)))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.isWrite%2C%20true)%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.previousValue%2C%20bytes32(uint(0)))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.newValue%2C%20bytes32(uint(100)))%3B%0AassertEq(records%5B0%5D.storageAccesses%5B0%5D.reverted%2C%20false)%3B%0A%60%60%60%0A%0ANote%20that%20there%20are%20no%20%60Resume%60%20account%20accesses%20in%20this%20example.%0A%0A%23%23%23%20Example%3A%20Resumed%20Account%20Access%0A%0A%60%60%60solidity%0Acontract%20Foo%20%7B%0A%20%20%20%20Bar%20b%3B%0A%20%20%20%20uint256%20public%20val%3B%0A%20%20%20%20constructor(Bar%20_b)%20%7B%20b%20%3D%20_b%3B%20%7D%0A%20%20%20%20function%20run()%20external%20%7B%0A%20%20%20%20%20%20%20%20val%20%3D%20val%20%2B%201%3B%0A%20%20%20%20%20%20%20%20b.run()%3B%0A%20%20%20%20%20%20%20%20val%20%3D%20val%20%2B%201%3B%0A%20%20%20%20%7D%0A%7D%0Acontract%20Bar%20%7B%0A%20%20%20%20function%20run()%20external%20%7B%7D%0A%7D%0A%0ABar%20bar%20%3D%20new%20Bar()%3B%0AFoo%20foo%20%3D%20new%20Foo(bar)%3B%0A%0Avm.startStateDiffRecording()%3B%0Afoo.run()%3B%0AVm.AccountAccess%5B%5D%20memory%20records%20%3D%20vm.stopAndReturnStateDiff()%3B%0A%0AassertEq(records.length%2C%203)%3B%0AVm.AccountAccess%20memory%20fooCall%20%3D%20records%5B0%5D%3B%0AassertEq(fooCall.kind%2C%20Vm.AccountAccessKind.Call)%3B%0AassertEq(fooCall.account%2C%20address(foo))%3B%0AassertEq(fooCall.accessor%2C%20address(this))%3B%0A%2F%2F%20foo.val%20increment%0AassertEq(fooCall.storageAccesses.length%2C%202)%3B%0AassertEq(fooCall.storageAccesses%5B0%5D.isWrite%2C%20false)%3B%0AassertEq(fooCall.storageAccesses%5B1%5D.isWrite%2C%20true)%3B%0AassertEq(fooCall.storageAccesses%5B1%5D.oldValue%2C%20bytes32(uint(0)))%3B%0AassertEq(fooCall.storageAccesses%5B1%5D.newValue%2C%20bytes32(uint(1)))%3B%0A%0A%2F%2F%20bar.run%20CALL%0AVm.AccountAccess%20memory%20barCall%20%3D%20records%5B1%5D%3B%0AassertEq(barCall.kind%2C%20Vm.AccountAccessKind.Call)%3B%0AassertEq(barCall.account%2C%20address(bar))%3B%0AassertEq(barCall.accessor%2C%20address(foo))%3B%0A%0A%2F%2F%20foo.run%20RESUME%0AVm.AccountAccess%20memory%20fooResume%20%3D%20records%5B2%5D%3B%0AassertEq(fooResume.kind%2C%20Vm.AccountAccessKind.Resume)%3B%0A%2F%2F%20foo.val%20increment%0AassertEq(fooResume.storageAccesses.length%2C%202)%3B%0AassertEq(fooResume.storageAccesses%5B0%5D.isWrite%2C%20false)%3B%0AassertEq(fooResume.storageAccesses%5B1%5D.isWrite%2C%20true)%3B%0AassertEq(fooResume.storageAccesses%5B1%5D.oldValue%2C%20bytes32(uint(1)))%3B%0AassertEq(fooResume.storageAccesses%5B1%5D.newValue%2C%20bytes32(uint(2)))%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./stop-broadcast-BxsDMLGI.js"),__vite__mapDeps([336,1])),path:"/reference/cheatcodes/stop-broadcast",type:"mdx",filePath:"reference/cheatcodes/stop-broadcast.mdx",content:"%23%23%20%60stopBroadcast%60%0A%0A%23%23%23%20Signature%0A%60%60%60solidity%0Afunction%20stopBroadcast()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStops%20collecting%20transactions%20for%20later%20on-chain%20broadcasting.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20deployNoArgs()%20public%20%7B%0A%20%20%20%20%2F%2F%20broadcast%20the%20next%20call%0A%20%20%20%20cheats.broadcast()%3B%0A%20%20%20%20Test%20test1%20%3D%20new%20Test()%3B%0A%0A%20%20%20%20%2F%2F%20broadcast%20all%20calls%20between%20this%20line%20and%20%60stopBroadcast%60%0A%20%20%20%20cheats.startBroadcast()%3B%0A%20%20%20%20Test%20test2%20%3D%20new%20Test()%3B%0A%20%20%20%20cheats.stopBroadcast()%3B%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./stop-broadcast-BxsDMLGI.js"),__vite__mapDeps([336,1])),path:"/reference/cheatcodes/stop-broadcast.html",type:"mdx",filePath:"reference/cheatcodes/stop-broadcast.mdx",content:"%23%23%20%60stopBroadcast%60%0A%0A%23%23%23%20Signature%0A%60%60%60solidity%0Afunction%20stopBroadcast()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStops%20collecting%20transactions%20for%20later%20on-chain%20broadcasting.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20deployNoArgs()%20public%20%7B%0A%20%20%20%20%2F%2F%20broadcast%20the%20next%20call%0A%20%20%20%20cheats.broadcast()%3B%0A%20%20%20%20Test%20test1%20%3D%20new%20Test()%3B%0A%0A%20%20%20%20%2F%2F%20broadcast%20all%20calls%20between%20this%20line%20and%20%60stopBroadcast%60%0A%20%20%20%20cheats.startBroadcast()%3B%0A%20%20%20%20Test%20test2%20%3D%20new%20Test()%3B%0A%20%20%20%20cheats.stopBroadcast()%3B%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./stop-prank-Bp13tWWT.js"),__vite__mapDeps([337,1])),path:"/reference/cheatcodes/stop-prank",type:"mdx",filePath:"reference/cheatcodes/stop-prank.mdx",content:"%23%23%20%60stopPrank%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20stopPrank()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStops%20an%20active%20prank%20started%20by%20%5B%60startPrank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%2C%20resetting%20%60msg.sender%60%20and%20%60tx.origin%60%20to%20the%20values%20before%20%60startPrank%60%20was%20called.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./stop-prank-Bp13tWWT.js"),__vite__mapDeps([337,1])),path:"/reference/cheatcodes/stop-prank.html",type:"mdx",filePath:"reference/cheatcodes/stop-prank.mdx",content:"%23%23%20%60stopPrank%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20stopPrank()%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStops%20an%20active%20prank%20started%20by%20%5B%60startPrank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%2C%20resetting%20%60msg.sender%60%20and%20%60tx.origin%60%20to%20the%20values%20before%20%60startPrank%60%20was%20called.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./store-c0oSNVBa.js"),__vite__mapDeps([338,1])),path:"/reference/cheatcodes/store",type:"mdx",filePath:"reference/cheatcodes/store.mdx",content:"%23%23%20%60store%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20store(address%20account%2C%20bytes32%20slot%2C%20bytes32%20value)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStores%20the%20value%20%60value%60%20in%20storage%20slot%20%60slot%60%20on%20account%20%60account%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20LeetContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20private%20leet%20%3D%201337%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%7D%0A%0Avm.store(address(leetContract)%2C%20bytes32(uint256(0))%2C%20bytes32(uint256(31337)))%3B%0Abytes32%20leet%20%3D%20vm.load(address(leetContract)%2C%20bytes32(uint256(0)))%3B%0Aemit%20log_uint(uint256(leet))%3B%20%2F%2F%2031337%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Storage%5D(%2Freference%2Fforge-std%2Fstd-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./store-c0oSNVBa.js"),__vite__mapDeps([338,1])),path:"/reference/cheatcodes/store.html",type:"mdx",filePath:"reference/cheatcodes/store.mdx",content:"%23%23%20%60store%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20store(address%20account%2C%20bytes32%20slot%2C%20bytes32%20value)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStores%20the%20value%20%60value%60%20in%20storage%20slot%20%60slot%60%20on%20account%20%60account%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%2F%20contract%20LeetContract%20%7B%0A%2F%2F%2F%20%20%20%20%20uint256%20private%20leet%20%3D%201337%3B%20%2F%2F%20slot%200%0A%2F%2F%2F%20%7D%0A%0Avm.store(address(leetContract)%2C%20bytes32(uint256(0))%2C%20bytes32(uint256(31337)))%3B%0Abytes32%20leet%20%3D%20vm.load(address(leetContract)%2C%20bytes32(uint256(0)))%3B%0Aemit%20log_uint(uint256(leet))%3B%20%2F%2F%2031337%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5BStd%20Storage%5D(%2Freference%2Fforge-std%2Fstd-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./to-string-I2U7a-m_.js"),__vite__mapDeps([339,1])),path:"/reference/cheatcodes/to-string",type:"mdx",filePath:"reference/cheatcodes/to-string.mdx",content:"%23%23%20%60toString%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20toString(address)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(bool)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(uint256)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(int256)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(bytes32)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(bytes)%20external%20returns%20(string%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AConvert%20any%20type%20to%20its%20string%20version.%20Very%20useful%20for%20operations%20that%20demand%20strings%2C%20such%20as%20the%20cheatcode%20%60ffi%60.%0A%0ABytes%20are%20converted%20to%20a%20string%20of%20their%20hex%20representation%20with%20%600x%60%20at%20the%20start%2C%20signifying%20that%20they%20are%20encoded%20in%20hex.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20number%20%3D%20420%3B%0Astring%20memory%20stringNumber%20%3D%20vm.toString(number)%3B%0Avm.assertEq(stringNumber%2C%20%22420%22)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Abytes%20memory%20testBytes%20%3D%20hex%227109709ECfa91a80626fF3989D68f67F5b1DD12D%22%3B%0Astring%20memory%20stringBytes%20%3D%20cheats.toString(testBytes)%3B%0AassertEq(%220x7109709ecfa91a80626ff3989d68f67f5b1dd12d%22%2C%20stringBytes)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Aaddress%20testAddress%20%3D%20%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D%3B%0Astring%20memory%20stringAddress%20%3D%20cheats.toString(testAddress)%3B%0AassertEq(%220x7109709ECfa91a80626fF3989D68f67F5b1DD12D%22%2C%20stringAddress)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./to-string-I2U7a-m_.js"),__vite__mapDeps([339,1])),path:"/reference/cheatcodes/to-string.html",type:"mdx",filePath:"reference/cheatcodes/to-string.mdx",content:"%23%23%20%60toString%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20toString(address)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(bool)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(uint256)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(int256)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(bytes32)%20external%20returns%20(string%20memory)%3B%0Afunction%20toString(bytes)%20external%20returns%20(string%20memory)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AConvert%20any%20type%20to%20its%20string%20version.%20Very%20useful%20for%20operations%20that%20demand%20strings%2C%20such%20as%20the%20cheatcode%20%60ffi%60.%0A%0ABytes%20are%20converted%20to%20a%20string%20of%20their%20hex%20representation%20with%20%600x%60%20at%20the%20start%2C%20signifying%20that%20they%20are%20encoded%20in%20hex.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20number%20%3D%20420%3B%0Astring%20memory%20stringNumber%20%3D%20vm.toString(number)%3B%0Avm.assertEq(stringNumber%2C%20%22420%22)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Abytes%20memory%20testBytes%20%3D%20hex%227109709ECfa91a80626fF3989D68f67F5b1DD12D%22%3B%0Astring%20memory%20stringBytes%20%3D%20cheats.toString(testBytes)%3B%0AassertEq(%220x7109709ecfa91a80626ff3989d68f67f5b1dd12d%22%2C%20stringBytes)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Aaddress%20testAddress%20%3D%20%200x7109709ECfa91a80626fF3989D68f67F5b1DD12D%3B%0Astring%20memory%20stringAddress%20%3D%20cheats.toString(testAddress)%3B%0AassertEq(%220x7109709ECfa91a80626fF3989D68f67F5b1DD12D%22%2C%20stringAddress)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./transact-CEyZd9Pp.js"),__vite__mapDeps([340,1])),path:"/reference/cheatcodes/transact",type:"mdx",filePath:"reference/cheatcodes/transact.mdx",content:"%23%23%20%60transact%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Fetches%20the%20given%20transaction%20from%20the%20active%20fork%20and%20executes%20it%20on%20the%20current%20state%0Afunction%20transact(bytes32%20txHash)%20external%3B%0A%2F%2F%20Fetches%20the%20given%20transaction%20from%20the%20given%20fork%20and%20executes%20it%20on%20the%20current%20state%0Afunction%20transact(uint256%20forkId%2C%20bytes32%20txHash)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIn%20forking%20mode%2C%20fetches%20the%20Transaction%20from%20the%20provider%20and%20executes%20it%20on%20the%20current%20state%0A%0A%23%23%23%20Examples%0A%0AEnter%20forking%20mode%20and%20execute%20a%20transaction%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Enter%20forking%20mode%20at%20block%3A%20https%3A%2F%2Fetherscan.io%2Fblock%2F15596646%0Auint256%20fork%20%3D%20vm.createFork(MAINNET_RPC_URL%2C%2015596646)%3B%0Avm.selectFork(fork)%3B%0A%0A%2F%2F%20a%20random%20transfer%20transaction%20in%20the%20block%3A%20https%3A%2F%2Fetherscan.io%2Ftx%2F0xaba74f25a17cf0d95d1c6d0085d6c83fb8c5e773ffd2573b99a953256f989c89%0Abytes32%20tx%20%3D%200xaba74f25a17cf0d95d1c6d0085d6c83fb8c5e773ffd2573b99a953256f989c89%3B%0A%0Aaddress%20sender%20%3D%20address(0xa98218cdc4f63aCe91ddDdd24F7A580FD383865b)%3B%0Aaddress%20recipient%20%3D%20address(0x0C124046Fa7202f98E4e251B50488e34416Fc306)%3B%0A%0AassertEq(sender.balance%2C%205764124000000000)%3B%0AassertEq(recipient.balance%2C%203936000000000000)%3B%0A%0A%2F%2F%20transfer%20amount%3A%200.003936%20Ether%0Auint256%20transferAmount%20%3D%203936000000000000%3B%0A%0A%2F%2F%20expected%20balance%20changes%20once%20the%20transaction%20is%20executed%0Auint256%20expectedRecipientBalance%20%3D%20recipient.balance%20%2B%20transferAmount%3B%0Auint256%20expectedSenderBalance%20%3D%20sender.balance%20-%20transferAmount%3B%0A%0A%2F%2F%20execute%20the%20transaction%0Avm.transact(tx)%3B%0A%0A%2F%2F%20recipient%20received%20transfer%0AassertEq(recipient.balance%2C%20expectedRecipientBalance)%3B%0A%0A%2F%2F%20sender's%20balance%20decreased%20by%20transferAmount%20and%20gas%0Aassert(sender.balance%20%3C%20expectedSenderBalance)%3B%0A%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Broll%5D(%2Freference%2Fcheatcodes%2Froll.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./transact-CEyZd9Pp.js"),__vite__mapDeps([340,1])),path:"/reference/cheatcodes/transact.html",type:"mdx",filePath:"reference/cheatcodes/transact.mdx",content:"%23%23%20%60transact%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0A%2F%2F%20Fetches%20the%20given%20transaction%20from%20the%20active%20fork%20and%20executes%20it%20on%20the%20current%20state%0Afunction%20transact(bytes32%20txHash)%20external%3B%0A%2F%2F%20Fetches%20the%20given%20transaction%20from%20the%20given%20fork%20and%20executes%20it%20on%20the%20current%20state%0Afunction%20transact(uint256%20forkId%2C%20bytes32%20txHash)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AIn%20forking%20mode%2C%20fetches%20the%20Transaction%20from%20the%20provider%20and%20executes%20it%20on%20the%20current%20state%0A%0A%23%23%23%20Examples%0A%0AEnter%20forking%20mode%20and%20execute%20a%20transaction%3A%0A%0A%60%60%60solidity%0A%2F%2F%20Enter%20forking%20mode%20at%20block%3A%20https%3A%2F%2Fetherscan.io%2Fblock%2F15596646%0Auint256%20fork%20%3D%20vm.createFork(MAINNET_RPC_URL%2C%2015596646)%3B%0Avm.selectFork(fork)%3B%0A%0A%2F%2F%20a%20random%20transfer%20transaction%20in%20the%20block%3A%20https%3A%2F%2Fetherscan.io%2Ftx%2F0xaba74f25a17cf0d95d1c6d0085d6c83fb8c5e773ffd2573b99a953256f989c89%0Abytes32%20tx%20%3D%200xaba74f25a17cf0d95d1c6d0085d6c83fb8c5e773ffd2573b99a953256f989c89%3B%0A%0Aaddress%20sender%20%3D%20address(0xa98218cdc4f63aCe91ddDdd24F7A580FD383865b)%3B%0Aaddress%20recipient%20%3D%20address(0x0C124046Fa7202f98E4e251B50488e34416Fc306)%3B%0A%0AassertEq(sender.balance%2C%205764124000000000)%3B%0AassertEq(recipient.balance%2C%203936000000000000)%3B%0A%0A%2F%2F%20transfer%20amount%3A%200.003936%20Ether%0Auint256%20transferAmount%20%3D%203936000000000000%3B%0A%0A%2F%2F%20expected%20balance%20changes%20once%20the%20transaction%20is%20executed%0Auint256%20expectedRecipientBalance%20%3D%20recipient.balance%20%2B%20transferAmount%3B%0Auint256%20expectedSenderBalance%20%3D%20sender.balance%20-%20transferAmount%3B%0A%0A%2F%2F%20execute%20the%20transaction%0Avm.transact(tx)%3B%0A%0A%2F%2F%20recipient%20received%20transfer%0AassertEq(recipient.balance%2C%20expectedRecipientBalance)%3B%0A%0A%2F%2F%20sender's%20balance%20decreased%20by%20transferAmount%20and%20gas%0Aassert(sender.balance%20%3C%20expectedSenderBalance)%3B%0A%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5Broll%5D(%2Freference%2Fcheatcodes%2Froll.mdx)%0A-%20%5BcreateFork%5D(%2Freference%2Fcheatcodes%2Fcreate-fork.mdx)%0A-%20%5BselectFork%5D(%2Freference%2Fcheatcodes%2Fselect-fork.mdx)%0A-%20%5BactiveFork%5D(%2Freference%2Fcheatcodes%2Factive-fork.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./tx-gas-price-BykAJJU2.js"),__vite__mapDeps([341,1])),path:"/reference/cheatcodes/tx-gas-price",type:"mdx",filePath:"reference/cheatcodes/tx-gas-price.mdx",content:"%23%23%20%60txGasPrice%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20txGasPrice(uint256)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20txGasPrice(uint256%20newGasPrice)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60tx.gasprice%60%20**for%20the%20rest%20of%20the%20transaction**.%20%0A%0A%23%23%23%20Examples%0A%0AWe%20can%20use%20this%20to%20get%20accurate%20gas%20usage%20for%20a%20transaction.%0A%0A%60%60%60solidity%0Afunction%20testCalculateGas()%20public%20%7B%0A%20%20%20%20vm.txGasPrice(2)%3B%0A%20%20%20%20uint256%20gasStart%20%3D%20gasleft()%3B%0A%20%20%20%20myContract.doStuff()%3B%0A%20%20%20%20uint256%20gasEnd%20%3D%20gasleft()%3B%0A%20%20%20%20uint256%20gasUsed%20%3D%20(gasStart%20-%20gasEnd)%20*%20tx.gasprice%3B%20%2F%2F%20tx.gasprice%20is%20now%202%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./tx-gas-price-BykAJJU2.js"),__vite__mapDeps([341,1])),path:"/reference/cheatcodes/tx-gas-price.html",type:"mdx",filePath:"reference/cheatcodes/tx-gas-price.mdx",content:"%23%23%20%60txGasPrice%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20txGasPrice(uint256)%20external%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20txGasPrice(uint256%20newGasPrice)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60tx.gasprice%60%20**for%20the%20rest%20of%20the%20transaction**.%20%0A%0A%23%23%23%20Examples%0A%0AWe%20can%20use%20this%20to%20get%20accurate%20gas%20usage%20for%20a%20transaction.%0A%0A%60%60%60solidity%0Afunction%20testCalculateGas()%20public%20%7B%0A%20%20%20%20vm.txGasPrice(2)%3B%0A%20%20%20%20uint256%20gasStart%20%3D%20gasleft()%3B%0A%20%20%20%20myContract.doStuff()%3B%0A%20%20%20%20uint256%20gasEnd%20%3D%20gasleft()%3B%0A%20%20%20%20uint256%20gasUsed%20%3D%20(gasStart%20-%20gasEnd)%20*%20tx.gasprice%3B%20%2F%2F%20tx.gasprice%20is%20now%202%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./unix-time-DgEkCYSq.js"),__vite__mapDeps([342,1])),path:"/reference/cheatcodes/unix-time",type:"mdx",filePath:"reference/cheatcodes/unix-time.mdx",content:"%23%23%20%60unixTime%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20unixTime()%20external%20returns%20(uint%20milliseconds)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20time%20since%20unix%20epoch%20in%20milliseconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint%20start%20%3D%20vm.unixTime()%3B%0Avm.sleep(10_000)%3B%20%2F%2F%20Halts%20execution%20for%2010%20seconds%0Auint%20end%20%3D%20vm.unixTime()%3B%0AassertEq(end%20-%20start%2C%2010_000)%3B%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./unix-time-DgEkCYSq.js"),__vite__mapDeps([342,1])),path:"/reference/cheatcodes/unix-time.html",type:"mdx",filePath:"reference/cheatcodes/unix-time.mdx",content:"%23%23%20%60unixTime%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20unixTime()%20external%20returns%20(uint%20milliseconds)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20time%20since%20unix%20epoch%20in%20milliseconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint%20start%20%3D%20vm.unixTime()%3B%0Avm.sleep(10_000)%3B%20%2F%2F%20Halts%20execution%20for%2010%20seconds%0Auint%20end%20%3D%20vm.unixTime()%3B%0AassertEq(end%20-%20start%2C%2010_000)%3B%0A%60%60%60%0A%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./utilities-Cxbufo1t.js"),__vite__mapDeps([343,1])),path:"/reference/cheatcodes/utilities",type:"mdx",filePath:"reference/cheatcodes/utilities.mdx",content:"%23%23%20Utilities%0A%0A-%20%5B%60addr%60%5D(%2Freference%2Fcheatcodes%2Faddr.mdx)%0A-%20%5B%60label%60%5D(%2Freference%2Fcheatcodes%2Flabel.mdx)%0A-%20%5B%60getLabel%60%5D(%2Freference%2Fcheatcodes%2Fget-label.mdx)%0A-%20%5B%60deriveKey%60%5D(%2Freference%2Fcheatcodes%2Fderive-key.mdx)%0A-%20%5B%60rememberKey%60%5D(%2Freference%2Fcheatcodes%2Fremember-key.mdx)%0A-%20%5B%60toString%60%5D(%2Freference%2Fcheatcodes%2Fto-string.mdx)%0A-%20%5B%60breakpoint%60%5D(%2Freference%2Fcheatcodes%2Fbreakpoint.mdx)%0A-%20%5B%60createWallet%60%5D(%2Freference%2Fcheatcodes%2Fcreate-wallet.mdx)%0A-%20%5B%60copyStorage%60%5D(%2Freference%2Fcheatcodes%2Fcopy-storage.mdx)%0A-%20%5B%60setArbitraryStorage%60%5D(%2Freference%2Fcheatcodes%2Fset-arbitrary-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./utilities-Cxbufo1t.js"),__vite__mapDeps([343,1])),path:"/reference/cheatcodes/utilities.html",type:"mdx",filePath:"reference/cheatcodes/utilities.mdx",content:"%23%23%20Utilities%0A%0A-%20%5B%60addr%60%5D(%2Freference%2Fcheatcodes%2Faddr.mdx)%0A-%20%5B%60label%60%5D(%2Freference%2Fcheatcodes%2Flabel.mdx)%0A-%20%5B%60getLabel%60%5D(%2Freference%2Fcheatcodes%2Fget-label.mdx)%0A-%20%5B%60deriveKey%60%5D(%2Freference%2Fcheatcodes%2Fderive-key.mdx)%0A-%20%5B%60rememberKey%60%5D(%2Freference%2Fcheatcodes%2Fremember-key.mdx)%0A-%20%5B%60toString%60%5D(%2Freference%2Fcheatcodes%2Fto-string.mdx)%0A-%20%5B%60breakpoint%60%5D(%2Freference%2Fcheatcodes%2Fbreakpoint.mdx)%0A-%20%5B%60createWallet%60%5D(%2Freference%2Fcheatcodes%2Fcreate-wallet.mdx)%0A-%20%5B%60copyStorage%60%5D(%2Freference%2Fcheatcodes%2Fcopy-storage.mdx)%0A-%20%5B%60setArbitraryStorage%60%5D(%2Freference%2Fcheatcodes%2Fset-arbitrary-storage.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./warp-BmajZMKE.js"),__vite__mapDeps([344,1])),path:"/reference/cheatcodes/warp",type:"mdx",filePath:"reference/cheatcodes/warp.mdx",content:"%23%23%20%60warp%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20warp(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.timestamp%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.warp(1641070800)%3B%0Aemit%20log_uint(block.timestamp)%3B%20%2F%2F%201641070800%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60skip%60%5D(%2Freference%2Fforge-std%2Fskip.mdx)%2C%20%5B%60rewind%60%5D(%2Freference%2Fforge-std%2Frewind.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./warp-BmajZMKE.js"),__vite__mapDeps([344,1])),path:"/reference/cheatcodes/warp.html",type:"mdx",filePath:"reference/cheatcodes/warp.mdx",content:"%23%23%20%60warp%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20warp(uint256)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20%60block.timestamp%60.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Avm.warp(1641070800)%3B%0Aemit%20log_uint(block.timestamp)%3B%20%2F%2F%201641070800%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A%5B%60skip%60%5D(%2Freference%2Fforge-std%2Fskip.mdx)%2C%20%5B%60rewind%60%5D(%2Freference%2Fforge-std%2Frewind.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./write-json-Bbkmt2zb.js"),__vite__mapDeps([345,1])),path:"/reference/cheatcodes/write-json",type:"mdx",filePath:"reference/cheatcodes/write-json.mdx",content:"%23%23%20%60writeJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20writeJson(string%20calldata%20json%2C%20string%20calldata%20path)%20external%3B%0A%0Afunction%20writeJson(string%20calldata%20json%2C%20string%20calldata%20path%2C%20string%20calldata%20valueKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AWrites%20a%20serialized%20JSON%20object%20to%20a%20file.%0A%0AThe%20argument%20%60json%60%20must%20be%20a%20JSON%20object%20in%20stringified%20form.%20For%20example%3A%0A%0A%60%60%60text%0A%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22object%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D%0A%60%60%60%0A%0AThis%20is%20usually%20built%20through%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx).%0A%0AThe%20argument%20%60path%60%20is%20the%20path%20of%20the%20JSON%20file%20to%20write%20to.%0A%0AIf%20no%20%60valueKey%60%20is%20provided%2C%20then%20the%20JSON%20object%20will%20be%20written%20to%20a%20new%20file.%20If%20the%20file%20already%20exists%2C%20it%20will%20be%20overwritten.%0A%0AIf%20a%20%60valueKey%60%20is%20provided%2C%20then%20the%20file%20must%20already%20exist%20and%20be%20a%20valid%20JSON%20file.%20The%20object%20in%20that%20file%20will%20be%20updated%20by%20replacing%20the%20value%20at%20the%20_JSON%20path_%20%60valueKey%60%20with%20the%20JSON%20object%20%60json%60.%0A%0AThis%20is%20useful%20to%20replace%20some%20values%20in%20a%20JSON%20file%20without%20having%20to%20first%20parse%20and%20then%20reserialize%20it.%20Note%20that%20the%20JSON%20path%20must%20indicate%20an%20existing%20key%2C%20so%20it's%20not%20possible%20to%20add%20new%20keys%20this%20way.%0A%0A**Remember%3A**%20The%20file%20path%20%60path%60%20needs%20to%20be%20in%20the%20allowed%20paths.%20Read%20more%20in%20%5BFile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%0A%23%23%23%23%20JSON%20Paths%0A%0ALet's%20consider%20the%20following%20JSON%20object%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22boolean%22%3A%20true%2C%0A%20%20%22number%22%3A%20342%2C%0A%20%20%22obj1%22%3A%20%7B%0A%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%22obj2%22%3A%20%7B%0A%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22veryDeep%22%3A%2013371337%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0AThe%20root%20object%20is%20always%20assumed%2C%20so%20we%20can%20refer%20to%20one%20of%20its%20children%20by%20starting%20the%20path%20with%20a%20dot%20(%60.%60).%20For%20instance%2C%20%60.boolean%60%2C%20%60.number%60%2C%20and%20%60.obj1%60.%0AWe%20can%20go%20as%20deep%20as%20we%20want%3A%20%60.obj1.aNumber%60%2C%20or%20%60.obj1.obj2.aNumber%60.%0AWe%20can%20even%20search%20for%20a%20key%20in%20a%20subtree%3A%20%60.obj1..veryDeep%60%2C%20or%20just%20%60..veryDeep%60%20since%20there's%20no%20ambiguity.%0A%0ASee%20the%20examples%20to%20see%20this%20in%20action.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20A%20simple%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22myObject%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D'%3B%0Avm.writeJson(jsonObj%2C%20%22.%2Foutput%2Fexample.json%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60myObject%60%20with%20a%20new%20object%0Astring%20memory%20newJsonObj%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22aString%22%3A%20%22asd%22%20%7D'%3B%0Avm.writeJson(newJsonObj%2C%20%22.%2Foutput%2Fexample.json%22%2C%20%22.myObject%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60aString%60%20in%20the%20new%20object%0Avm.writeJson(%22my%20new%20string%22%2C%20%22.%2Foutput%2Fexample.json%22%2C%20%22.myObject.aString%22)%3B%0A%0A%2F%2F%20Here's%20example.json%3A%0A%2F%2F%0A%2F%2F%20%7B%0A%2F%2F%20%20%20%22boolean%22%3A%20true%2C%0A%2F%2F%20%20%20%22number%22%3A%20342%2C%0A%2F%2F%20%20%20%22myObject%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%22aString%22%3A%20%22my%20new%20string%22%0A%2F%2F%20%20%20%7D%0A%2F%2F%20%7D%0A%60%60%60%0A%0A%23%23%23%23%20A%20more%20complex%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22obj1%22%3A%20%7B%20%22foo%22%3A%20%22bar%22%20%7D%20%7D'%3B%0Avm.writeJson(jsonObj%2C%20%22.%2Foutput%2Fexample2.json%22)%3B%0A%0Astring%20memory%20jsonObj2%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj2%22%3A%20%7B%7D%20%7D'%3B%0Avm.writeJson(jsonObj2%2C%20%22.%2Foutput%2Fexample2.json%22%2C%20%22.obj1%22)%3B%0A%0Astring%20memory%20jsonObj3%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj3%22%3A%20%7B%20%22veryDeep%22%3A%203%20%7D%20%7D'%3B%0Avm.writeJson(jsonObj3%2C%20%22.%2Foutput%2Fexample2.json%22%2C%20%22.obj1.obj2%22)%3B%0A%0A%2F%2F%20Here's%20example2.json%20so%20far%3A%0A%2F%2F%0A%2F%2F%20%7B%0A%2F%2F%20%20%20%22boolean%22%3A%20true%2C%0A%2F%2F%20%20%20%22number%22%3A%20342%2C%0A%2F%2F%20%20%20%22obj1%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%22obj2%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%22veryDeep%22%3A%203%0A%2F%2F%20%20%20%20%20%20%20%7D%0A%2F%2F%20%20%20%20%20%7D%0A%2F%2F%20%20%20%7D%0A%2F%2F%20%7D%0A%0A%2F%2F%20Note%20that%20the%20JSON%20object%20is%20just%20the%20value%2013371337%20in%20this%20case.%0Avm.writeJson(%2213371337%22%2C%20%22.%2Foutput%2Fexample2.json%22%2C%20%22..veryDeep%22)%3B%0A%0A%2F%2F%20Here's%20the%20final%20example2.json%3A%0A%2F%2F%0A%2F%2F%20%7B%0A%2F%2F%20%20%20%22boolean%22%3A%20true%2C%0A%2F%2F%20%20%20%22number%22%3A%20342%2C%0A%2F%2F%20%20%20%22obj1%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%22obj2%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%22veryDeep%22%3A%2013371337%0A%2F%2F%20%20%20%20%20%20%20%7D%0A%2F%2F%20%20%20%20%20%7D%0A%2F%2F%20%20%20%7D%0A%2F%2F%20%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./write-json-Bbkmt2zb.js"),__vite__mapDeps([345,1])),path:"/reference/cheatcodes/write-json.html",type:"mdx",filePath:"reference/cheatcodes/write-json.mdx",content:"%23%23%20%60writeJson%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20writeJson(string%20calldata%20json%2C%20string%20calldata%20path)%20external%3B%0A%0Afunction%20writeJson(string%20calldata%20json%2C%20string%20calldata%20path%2C%20string%20calldata%20valueKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AWrites%20a%20serialized%20JSON%20object%20to%20a%20file.%0A%0AThe%20argument%20%60json%60%20must%20be%20a%20JSON%20object%20in%20stringified%20form.%20For%20example%3A%0A%0A%60%60%60text%0A%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22object%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D%0A%60%60%60%0A%0AThis%20is%20usually%20built%20through%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx).%0A%0AThe%20argument%20%60path%60%20is%20the%20path%20of%20the%20JSON%20file%20to%20write%20to.%0A%0AIf%20no%20%60valueKey%60%20is%20provided%2C%20then%20the%20JSON%20object%20will%20be%20written%20to%20a%20new%20file.%20If%20the%20file%20already%20exists%2C%20it%20will%20be%20overwritten.%0A%0AIf%20a%20%60valueKey%60%20is%20provided%2C%20then%20the%20file%20must%20already%20exist%20and%20be%20a%20valid%20JSON%20file.%20The%20object%20in%20that%20file%20will%20be%20updated%20by%20replacing%20the%20value%20at%20the%20_JSON%20path_%20%60valueKey%60%20with%20the%20JSON%20object%20%60json%60.%0A%0AThis%20is%20useful%20to%20replace%20some%20values%20in%20a%20JSON%20file%20without%20having%20to%20first%20parse%20and%20then%20reserialize%20it.%20Note%20that%20the%20JSON%20path%20must%20indicate%20an%20existing%20key%2C%20so%20it's%20not%20possible%20to%20add%20new%20keys%20this%20way.%0A%0A**Remember%3A**%20The%20file%20path%20%60path%60%20needs%20to%20be%20in%20the%20allowed%20paths.%20Read%20more%20in%20%5BFile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%0A%23%23%23%23%20JSON%20Paths%0A%0ALet's%20consider%20the%20following%20JSON%20object%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22boolean%22%3A%20true%2C%0A%20%20%22number%22%3A%20342%2C%0A%20%20%22obj1%22%3A%20%7B%0A%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%22obj2%22%3A%20%7B%0A%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22veryDeep%22%3A%2013371337%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0AThe%20root%20object%20is%20always%20assumed%2C%20so%20we%20can%20refer%20to%20one%20of%20its%20children%20by%20starting%20the%20path%20with%20a%20dot%20(%60.%60).%20For%20instance%2C%20%60.boolean%60%2C%20%60.number%60%2C%20and%20%60.obj1%60.%0AWe%20can%20go%20as%20deep%20as%20we%20want%3A%20%60.obj1.aNumber%60%2C%20or%20%60.obj1.obj2.aNumber%60.%0AWe%20can%20even%20search%20for%20a%20key%20in%20a%20subtree%3A%20%60.obj1..veryDeep%60%2C%20or%20just%20%60..veryDeep%60%20since%20there's%20no%20ambiguity.%0A%0ASee%20the%20examples%20to%20see%20this%20in%20action.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20A%20simple%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22myObject%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D'%3B%0Avm.writeJson(jsonObj%2C%20%22.%2Foutput%2Fexample.json%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60myObject%60%20with%20a%20new%20object%0Astring%20memory%20newJsonObj%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22aString%22%3A%20%22asd%22%20%7D'%3B%0Avm.writeJson(newJsonObj%2C%20%22.%2Foutput%2Fexample.json%22%2C%20%22.myObject%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60aString%60%20in%20the%20new%20object%0Avm.writeJson(%22my%20new%20string%22%2C%20%22.%2Foutput%2Fexample.json%22%2C%20%22.myObject.aString%22)%3B%0A%0A%2F%2F%20Here's%20example.json%3A%0A%2F%2F%0A%2F%2F%20%7B%0A%2F%2F%20%20%20%22boolean%22%3A%20true%2C%0A%2F%2F%20%20%20%22number%22%3A%20342%2C%0A%2F%2F%20%20%20%22myObject%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%22aString%22%3A%20%22my%20new%20string%22%0A%2F%2F%20%20%20%7D%0A%2F%2F%20%7D%0A%60%60%60%0A%0A%23%23%23%23%20A%20more%20complex%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22obj1%22%3A%20%7B%20%22foo%22%3A%20%22bar%22%20%7D%20%7D'%3B%0Avm.writeJson(jsonObj%2C%20%22.%2Foutput%2Fexample2.json%22)%3B%0A%0Astring%20memory%20jsonObj2%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj2%22%3A%20%7B%7D%20%7D'%3B%0Avm.writeJson(jsonObj2%2C%20%22.%2Foutput%2Fexample2.json%22%2C%20%22.obj1%22)%3B%0A%0Astring%20memory%20jsonObj3%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj3%22%3A%20%7B%20%22veryDeep%22%3A%203%20%7D%20%7D'%3B%0Avm.writeJson(jsonObj3%2C%20%22.%2Foutput%2Fexample2.json%22%2C%20%22.obj1.obj2%22)%3B%0A%0A%2F%2F%20Here's%20example2.json%20so%20far%3A%0A%2F%2F%0A%2F%2F%20%7B%0A%2F%2F%20%20%20%22boolean%22%3A%20true%2C%0A%2F%2F%20%20%20%22number%22%3A%20342%2C%0A%2F%2F%20%20%20%22obj1%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%22obj2%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%22veryDeep%22%3A%203%0A%2F%2F%20%20%20%20%20%20%20%7D%0A%2F%2F%20%20%20%20%20%7D%0A%2F%2F%20%20%20%7D%0A%2F%2F%20%7D%0A%0A%2F%2F%20Note%20that%20the%20JSON%20object%20is%20just%20the%20value%2013371337%20in%20this%20case.%0Avm.writeJson(%2213371337%22%2C%20%22.%2Foutput%2Fexample2.json%22%2C%20%22..veryDeep%22)%3B%0A%0A%2F%2F%20Here's%20the%20final%20example2.json%3A%0A%2F%2F%0A%2F%2F%20%7B%0A%2F%2F%20%20%20%22boolean%22%3A%20true%2C%0A%2F%2F%20%20%20%22number%22%3A%20342%2C%0A%2F%2F%20%20%20%22obj1%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%22obj2%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%2F%2F%20%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%22veryDeep%22%3A%2013371337%0A%2F%2F%20%20%20%20%20%20%20%7D%0A%2F%2F%20%20%20%20%20%7D%0A%2F%2F%20%20%20%7D%0A%2F%2F%20%7D%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./write-toml-BtPY98t6.js"),__vite__mapDeps([346,1])),path:"/reference/cheatcodes/write-toml",type:"mdx",filePath:"reference/cheatcodes/write-toml.mdx",content:"%23%23%20%60writeToml%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20writeToml(string%20calldata%20json%2C%20string%20calldata%20path)%20external%3B%0A%0Afunction%20writeToml(string%20calldata%20json%2C%20string%20calldata%20path%2C%20string%20calldata%20valueKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AWrites%20a%20serialized%20JSON%20object%20to%20a%20TOML%20file%20after%20conversion.%0A%0AThe%20argument%20%60json%60%20must%20be%20a%20JSON%20object%20in%20stringified%20form.%20For%20example%3A%0A%0A%60%60%60text%0A%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22object%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D%0A%60%60%60%0A%0AThis%20is%20usually%20built%20through%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx).%0A%0AThe%20argument%20%60path%60%20is%20the%20path%20of%20the%20TOML%20file%20to%20write%20to.%0A%0AIf%20no%20%60valueKey%60%20is%20provided%2C%20then%20the%20TOML%20object%20will%20be%20written%20to%20a%20new%20file.%20If%20the%20file%20already%20exists%2C%20it%20will%20be%20overwritten.%0A%0AIf%20a%20%60valueKey%60%20is%20provided%2C%20then%20the%20file%20must%20already%20exist%20and%20be%20a%20valid%20TOML%20file.%20The%20object%20in%20that%20file%20will%20be%20updated%20by%20replacing%20the%20value%20at%20the%20_JSON%20path_%20%60valueKey%60%20with%20the%20JSON%20object%20%60json%60%20after%20TOML%20conversion.%0A%0AThis%20is%20useful%20to%20replace%20some%20values%20in%20a%20TOML%20file%20without%20having%20to%20first%20parse%20and%20then%20reserialize%20it.%20Note%20that%20the%20TOML%20path%20must%20indicate%20an%20existing%20key%2C%20so%20it's%20not%20possible%20to%20add%20new%20keys%20this%20way.%0A%0A**Remember%3A**%20The%20file%20path%20%60path%60%20needs%20to%20be%20in%20the%20allowed%20paths.%20Read%20more%20in%20%5BFile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%0A%23%23%23%23%20JSON%20Paths%0A%0ALet's%20consider%20the%20following%20JSON%20object%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22boolean%22%3A%20true%2C%0A%20%20%22number%22%3A%20342%2C%0A%20%20%22obj1%22%3A%20%7B%0A%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%22obj2%22%3A%20%7B%0A%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22veryDeep%22%3A%2013371337%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0AThe%20root%20object%20is%20always%20assumed%2C%20so%20we%20can%20refer%20to%20one%20of%20its%20children%20by%20starting%20the%20path%20with%20a%20dot%20(%60.%60).%20For%20instance%2C%20%60.boolean%60%2C%20%60.number%60%2C%20and%20%60.obj1%60.%0AWe%20can%20go%20as%20deep%20as%20we%20want%3A%20%60.obj1.aNumber%60%2C%20or%20%60.obj1.obj2.aNumber%60.%0AWe%20can%20even%20search%20for%20a%20key%20in%20a%20subtree%3A%20%60.obj1..veryDeep%60%2C%20or%20just%20%60..veryDeep%60%20since%20there's%20no%20ambiguity.%0A%0ASee%20the%20examples%20to%20see%20this%20in%20action.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20A%20simple%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22myObject%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D'%3B%0Avm.writeToml(jsonObj%2C%20%22.%2Foutput%2Fexample.toml%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60myObject%60%20with%20a%20new%20object%0Astring%20memory%20newJsonObj%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22aString%22%3A%20%22asd%22%20%7D'%3B%0Avm.writeToml(newJsonObj%2C%20%22.%2Foutput%2Fexample.toml%22%2C%20%22.myObject%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60aString%60%20in%20the%20new%20object%0Avm.writeToml(%22my%20new%20string%22%2C%20%22.%2Foutput%2Fexample.toml%22%2C%20%22.myObject.aString%22)%3B%0A%0A%2F%2F%20Here's%20example.toml%3A%0A%2F%2F%0A%2F%2F%20boolean%20%3D%20true%0A%2F%2F%20number%20%3D%20342%0A%0A%2F%2F%20%5BmyObject%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%20aString%20%3D%20%22my%20new%20string%22%0A%60%60%60%0A%0A%23%23%23%23%20A%20more%20complex%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22obj1%22%3A%20%7B%20%22foo%22%3A%20%22bar%22%20%7D%20%7D'%3B%0Avm.writeToml(jsonObj%2C%20%22.%2Foutput%2Fexample2.toml%22)%3B%0A%0Astring%20memory%20jsonObj2%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj2%22%3A%20%7B%7D%20%7D'%3B%0Avm.writeToml(jsonObj2%2C%20%22.%2Foutput%2Fexample2.toml%22%2C%20%22.obj1%22)%3B%0A%0Astring%20memory%20jsonObj3%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj3%22%3A%20%7B%20%22veryDeep%22%3A%203%20%7D%20%7D'%3B%0Avm.writeToml(jsonObj3%2C%20%22.%2Foutput%2Fexample2.toml%22%2C%20%22.obj1.obj2%22)%3B%0A%0A%2F%2F%20Here's%20example2.toml%20so%20far%3A%0A%2F%2F%0A%2F%2F%20boolean%20%3D%20true%0A%2F%2F%20number%20%3D%20342%0A%2F%2F%0A%2F%2F%20%5Bobj1%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2.obj3%5D%0A%2F%2F%20veryDeep%20%3D%203%0A%0A%2F%2F%20Note%20that%20the%20JSON%20object%20is%20just%20the%20value%2013371337%20in%20this%20case.%0Avm.writeToml(%2213371337%22%2C%20%22.%2Foutput%2Fexample2.toml%22%2C%20%22..veryDeep%22)%3B%0A%0A%2F%2F%20Here's%20the%20final%20example2.toml%3A%0A%2F%2F%0A%2F%2F%20boolean%20%3D%20true%0A%2F%2F%20number%20%3D%20342%0A%2F%2F%0A%2F%2F%20%5Bobj1%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2.obj3%5D%0A%2F%2F%20veryDeep%20%3D%2013371337%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./write-toml-BtPY98t6.js"),__vite__mapDeps([346,1])),path:"/reference/cheatcodes/write-toml.html",type:"mdx",filePath:"reference/cheatcodes/write-toml.mdx",content:"%23%23%20%60writeToml%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20writeToml(string%20calldata%20json%2C%20string%20calldata%20path)%20external%3B%0A%0Afunction%20writeToml(string%20calldata%20json%2C%20string%20calldata%20path%2C%20string%20calldata%20valueKey)%20external%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AWrites%20a%20serialized%20JSON%20object%20to%20a%20TOML%20file%20after%20conversion.%0A%0AThe%20argument%20%60json%60%20must%20be%20a%20JSON%20object%20in%20stringified%20form.%20For%20example%3A%0A%0A%60%60%60text%0A%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22object%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D%0A%60%60%60%0A%0AThis%20is%20usually%20built%20through%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx).%0A%0AThe%20argument%20%60path%60%20is%20the%20path%20of%20the%20TOML%20file%20to%20write%20to.%0A%0AIf%20no%20%60valueKey%60%20is%20provided%2C%20then%20the%20TOML%20object%20will%20be%20written%20to%20a%20new%20file.%20If%20the%20file%20already%20exists%2C%20it%20will%20be%20overwritten.%0A%0AIf%20a%20%60valueKey%60%20is%20provided%2C%20then%20the%20file%20must%20already%20exist%20and%20be%20a%20valid%20TOML%20file.%20The%20object%20in%20that%20file%20will%20be%20updated%20by%20replacing%20the%20value%20at%20the%20_JSON%20path_%20%60valueKey%60%20with%20the%20JSON%20object%20%60json%60%20after%20TOML%20conversion.%0A%0AThis%20is%20useful%20to%20replace%20some%20values%20in%20a%20TOML%20file%20without%20having%20to%20first%20parse%20and%20then%20reserialize%20it.%20Note%20that%20the%20TOML%20path%20must%20indicate%20an%20existing%20key%2C%20so%20it's%20not%20possible%20to%20add%20new%20keys%20this%20way.%0A%0A**Remember%3A**%20The%20file%20path%20%60path%60%20needs%20to%20be%20in%20the%20allowed%20paths.%20Read%20more%20in%20%5BFile%20cheatcodes%5D(%2Freference%2Fcheatcodes%2Ffs.mdx).%0A%0A%23%23%23%23%20JSON%20Paths%0A%0ALet's%20consider%20the%20following%20JSON%20object%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%22boolean%22%3A%20true%2C%0A%20%20%22number%22%3A%20342%2C%0A%20%20%22obj1%22%3A%20%7B%0A%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%22obj2%22%3A%20%7B%0A%20%20%20%20%20%20%22aNumber%22%3A%20123%2C%0A%20%20%20%20%20%20%22obj3%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22veryDeep%22%3A%2013371337%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0AThe%20root%20object%20is%20always%20assumed%2C%20so%20we%20can%20refer%20to%20one%20of%20its%20children%20by%20starting%20the%20path%20with%20a%20dot%20(%60.%60).%20For%20instance%2C%20%60.boolean%60%2C%20%60.number%60%2C%20and%20%60.obj1%60.%0AWe%20can%20go%20as%20deep%20as%20we%20want%3A%20%60.obj1.aNumber%60%2C%20or%20%60.obj1.obj2.aNumber%60.%0AWe%20can%20even%20search%20for%20a%20key%20in%20a%20subtree%3A%20%60.obj1..veryDeep%60%2C%20or%20just%20%60..veryDeep%60%20since%20there's%20no%20ambiguity.%0A%0ASee%20the%20examples%20to%20see%20this%20in%20action.%0A%0A%23%23%23%20Examples%0A%0A%23%23%23%23%20A%20simple%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22myObject%22%3A%20%7B%20%22title%22%3A%20%22finally%20json%20serialization%22%20%7D%20%7D'%3B%0Avm.writeToml(jsonObj%2C%20%22.%2Foutput%2Fexample.toml%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60myObject%60%20with%20a%20new%20object%0Astring%20memory%20newJsonObj%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22aString%22%3A%20%22asd%22%20%7D'%3B%0Avm.writeToml(newJsonObj%2C%20%22.%2Foutput%2Fexample.toml%22%2C%20%22.myObject%22)%3B%0A%0A%2F%2F%20replaces%20the%20value%20of%20%60aString%60%20in%20the%20new%20object%0Avm.writeToml(%22my%20new%20string%22%2C%20%22.%2Foutput%2Fexample.toml%22%2C%20%22.myObject.aString%22)%3B%0A%0A%2F%2F%20Here's%20example.toml%3A%0A%2F%2F%0A%2F%2F%20boolean%20%3D%20true%0A%2F%2F%20number%20%3D%20342%0A%0A%2F%2F%20%5BmyObject%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%20aString%20%3D%20%22my%20new%20string%22%0A%60%60%60%0A%0A%23%23%23%23%20A%20more%20complex%20example%0A%0A%60%60%60solidity%0Astring%20memory%20jsonObj%20%3D%20'%7B%20%22boolean%22%3A%20true%2C%20%22number%22%3A%20342%2C%20%22obj1%22%3A%20%7B%20%22foo%22%3A%20%22bar%22%20%7D%20%7D'%3B%0Avm.writeToml(jsonObj%2C%20%22.%2Foutput%2Fexample2.toml%22)%3B%0A%0Astring%20memory%20jsonObj2%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj2%22%3A%20%7B%7D%20%7D'%3B%0Avm.writeToml(jsonObj2%2C%20%22.%2Foutput%2Fexample2.toml%22%2C%20%22.obj1%22)%3B%0A%0Astring%20memory%20jsonObj3%20%3D%20'%7B%20%22aNumber%22%3A%20123%2C%20%22obj3%22%3A%20%7B%20%22veryDeep%22%3A%203%20%7D%20%7D'%3B%0Avm.writeToml(jsonObj3%2C%20%22.%2Foutput%2Fexample2.toml%22%2C%20%22.obj1.obj2%22)%3B%0A%0A%2F%2F%20Here's%20example2.toml%20so%20far%3A%0A%2F%2F%0A%2F%2F%20boolean%20%3D%20true%0A%2F%2F%20number%20%3D%20342%0A%2F%2F%0A%2F%2F%20%5Bobj1%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2.obj3%5D%0A%2F%2F%20veryDeep%20%3D%203%0A%0A%2F%2F%20Note%20that%20the%20JSON%20object%20is%20just%20the%20value%2013371337%20in%20this%20case.%0Avm.writeToml(%2213371337%22%2C%20%22.%2Foutput%2Fexample2.toml%22%2C%20%22..veryDeep%22)%3B%0A%0A%2F%2F%20Here's%20the%20final%20example2.toml%3A%0A%2F%2F%0A%2F%2F%20boolean%20%3D%20true%0A%2F%2F%20number%20%3D%20342%0A%2F%2F%0A%2F%2F%20%5Bobj1%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2%5D%0A%2F%2F%20aNumber%20%3D%20123%0A%2F%2F%0A%2F%2F%20%5Bobj1.obj2.obj3%5D%0A%2F%2F%20veryDeep%20%3D%2013371337%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5BserializeJson%5D(%2Freference%2Fcheatcodes%2Fserialize-json.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./abs-ZXJeoE4m.js"),__vite__mapDeps([347,1])),path:"/reference/forge-std/abs",type:"mdx",filePath:"reference/forge-std/abs.mdx",content:"%23%23%20%60abs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20abs(int256%20a)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20absolute%20value%20of%20a%20number.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20ten%20%3D%20stdMath.abs(-10)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./abs-ZXJeoE4m.js"),__vite__mapDeps([347,1])),path:"/reference/forge-std/abs.html",type:"mdx",filePath:"reference/forge-std/abs.mdx",content:"%23%23%20%60abs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20abs(int256%20a)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20absolute%20value%20of%20a%20number.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20ten%20%3D%20stdMath.abs(-10)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./arithmeticError-B1Ax9-1m.js"),__vite__mapDeps([348,1])),path:"/reference/forge-std/arithmeticError",type:"mdx",filePath:"reference/forge-std/arithmeticError.mdx",content:"%23%23%20%60arithmeticError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.arithmeticError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20an%20arithmetic%20operation%20fails%2C%20e.g.%20underflow%20and%20overflow.%0A%0A%23%23%23%20Example%0A%0AAssume%20we%20have%20a%20basic%20vault%20contract%20that%20can%20store%20some%20token%20(%60wmdToken%60)%3A%0A%0A%60%60%60solidity%0Acontract%20BasicVault%20%7B%0A%0A%20%20%20%20IERC20%20public%20immutable%20wmdToken%3B%20%20%20%0A%20%20%20%20mapping(address%20%3D%3E%20uint)%20public%20balances%3B%0A%0A%20%20%20%20event%20Deposited(address%20indexed%20from%2C%20uint%20amount)%3B%0A%20%20%20%20event%20Withdrawal(address%20indexed%20from%2C%20uint%20amount)%3B%0A%0A%20%20%20%20constructor(IERC20%20wmdToken_)%7B%0A%20%20%20%20%20%20%20%20wmdToken%20%3D%20wmdToken_%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20deposit(uint%20amount)%20external%20%7B%20%20%20%20%0A%20%20%20%20%20%20%20%20balances%5Bmsg.sender%5D%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20bool%20success%20%3D%20wmdToken.transferFrom(msg.sender%2C%20address(this)%2C%20amount)%3B%0A%20%20%20%20%20%20%20%20require(success%2C%20%22Deposit%20failed!%22)%3B%20%0A%20%20%20%20%20%20%20%20emit%20Deposited(msg.sender%2C%20amount)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20withdraw(uint%20amount)%20external%20%7B%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20balances%5Bmsg.sender%5D%20-%3D%20amount%3B%0A%20%20%20%20%20%20%20%20bool%20success%20%3D%20wmdToken.transfer(msg.sender%2C%20amount)%3B%0A%20%20%20%20%20%20%20%20require(success%2C%20%22Withdrawal%20failed!%22)%3B%0A%20%20%20%20%20%20%20%20emit%20Withdrawal(msg.sender%2C%20amount)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AWe%20have%20a%20test%20function%20to%20ensure%20that%20a%20user%20is%20unable%20to%20withdraw%20tokens%20in%20excess%20of%20his%20deposit%2C%20like%20so%3A%0A%0A%60%60%60solidity%0Afunction%20testUserCannotWithdrawExcessOfDeposit()%20public%20%7B%0A%20%20%20%20vm.prank(user)%3B%0A%20%20%20%20vm.expectRevert(stdError.arithmeticError)%3B%0A%20%20%20%20vault.withdraw(userTokens%20%2B%20100*10**18)%3B%0A%7D%0A%60%60%60%0A%0A1.%20User%20has%20tokens%20of%20amount%20%60userTokens%60%20deposited%20in%20a%20Vault%20contract.%0A2.%20User%20attempts%20to%20withdraw%20tokens%20of%20amount%20in%20excess%20of%20his%20deposits.%0A3.%20This%20leads%20to%20an%20underflow%20error%2C%20resulting%20from%3A%20%60balances%5Bmsg.sender%5D%20-%3D%20amount%3B%60%20as%20it%20would%20evaluate%20into%20a%20negative%20value.%0A%0ATo%20catch%20the%20error%20%22Arithmetic%20over%2Funderflow%22%2C%20we%20insert%20%60vm.expectRevert(stdError.arithmeticError)%60%20just%20before%20the%20function%20call%20that%20is%20expected%20to%20result%20in%20an%20underflow.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./arithmeticError-B1Ax9-1m.js"),__vite__mapDeps([348,1])),path:"/reference/forge-std/arithmeticError.html",type:"mdx",filePath:"reference/forge-std/arithmeticError.mdx",content:"%23%23%20%60arithmeticError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.arithmeticError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20an%20arithmetic%20operation%20fails%2C%20e.g.%20underflow%20and%20overflow.%0A%0A%23%23%23%20Example%0A%0AAssume%20we%20have%20a%20basic%20vault%20contract%20that%20can%20store%20some%20token%20(%60wmdToken%60)%3A%0A%0A%60%60%60solidity%0Acontract%20BasicVault%20%7B%0A%0A%20%20%20%20IERC20%20public%20immutable%20wmdToken%3B%20%20%20%0A%20%20%20%20mapping(address%20%3D%3E%20uint)%20public%20balances%3B%0A%0A%20%20%20%20event%20Deposited(address%20indexed%20from%2C%20uint%20amount)%3B%0A%20%20%20%20event%20Withdrawal(address%20indexed%20from%2C%20uint%20amount)%3B%0A%0A%20%20%20%20constructor(IERC20%20wmdToken_)%7B%0A%20%20%20%20%20%20%20%20wmdToken%20%3D%20wmdToken_%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20deposit(uint%20amount)%20external%20%7B%20%20%20%20%0A%20%20%20%20%20%20%20%20balances%5Bmsg.sender%5D%20%2B%3D%20amount%3B%0A%20%20%20%20%20%20%20%20bool%20success%20%3D%20wmdToken.transferFrom(msg.sender%2C%20address(this)%2C%20amount)%3B%0A%20%20%20%20%20%20%20%20require(success%2C%20%22Deposit%20failed!%22)%3B%20%0A%20%20%20%20%20%20%20%20emit%20Deposited(msg.sender%2C%20amount)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20withdraw(uint%20amount)%20external%20%7B%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20balances%5Bmsg.sender%5D%20-%3D%20amount%3B%0A%20%20%20%20%20%20%20%20bool%20success%20%3D%20wmdToken.transfer(msg.sender%2C%20amount)%3B%0A%20%20%20%20%20%20%20%20require(success%2C%20%22Withdrawal%20failed!%22)%3B%0A%20%20%20%20%20%20%20%20emit%20Withdrawal(msg.sender%2C%20amount)%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%0AWe%20have%20a%20test%20function%20to%20ensure%20that%20a%20user%20is%20unable%20to%20withdraw%20tokens%20in%20excess%20of%20his%20deposit%2C%20like%20so%3A%0A%0A%60%60%60solidity%0Afunction%20testUserCannotWithdrawExcessOfDeposit()%20public%20%7B%0A%20%20%20%20vm.prank(user)%3B%0A%20%20%20%20vm.expectRevert(stdError.arithmeticError)%3B%0A%20%20%20%20vault.withdraw(userTokens%20%2B%20100*10**18)%3B%0A%7D%0A%60%60%60%0A%0A1.%20User%20has%20tokens%20of%20amount%20%60userTokens%60%20deposited%20in%20a%20Vault%20contract.%0A2.%20User%20attempts%20to%20withdraw%20tokens%20of%20amount%20in%20excess%20of%20his%20deposits.%0A3.%20This%20leads%20to%20an%20underflow%20error%2C%20resulting%20from%3A%20%60balances%5Bmsg.sender%5D%20-%3D%20amount%3B%60%20as%20it%20would%20evaluate%20into%20a%20negative%20value.%0A%0ATo%20catch%20the%20error%20%22Arithmetic%20over%2Funderflow%22%2C%20we%20insert%20%60vm.expectRevert(stdError.arithmeticError)%60%20just%20before%20the%20function%20call%20that%20is%20expected%20to%20result%20in%20an%20underflow.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqAbs-CXoVUPnU.js"),__vite__mapDeps([349,1])),path:"/reference/forge-std/assertApproxEqAbs",type:"mdx",filePath:"reference/forge-std/assertApproxEqAbs.mdx",content:"%23%23%20%60assertApproxEqAbs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20absolute%20value.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20testRevert()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%0A%20%20%20%20assertApproxEqAbs(a%2C%20b%2C%2090)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60%0A%5BFAIL%3A%20assertion%20failed%3A%20100%20!~%3D%20200%20(max%20delta%3A%2090%2C%20real%20delta%3A%20100)%5D%20testRevert()%20(gas%3A%2023884)%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqAbsDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbsDecimal.mdx)%0A-%20%5B%60assertApproxEqRel%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRel.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqAbs-CXoVUPnU.js"),__vite__mapDeps([349,1])),path:"/reference/forge-std/assertApproxEqAbs.html",type:"mdx",filePath:"reference/forge-std/assertApproxEqAbs.mdx",content:"%23%23%20%60assertApproxEqAbs%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbs(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20absolute%20value.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20testRevert()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%0A%20%20%20%20assertApproxEqAbs(a%2C%20b%2C%2090)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60%0A%5BFAIL%3A%20assertion%20failed%3A%20100%20!~%3D%20200%20(max%20delta%3A%2090%2C%20real%20delta%3A%20100)%5D%20testRevert()%20(gas%3A%2023884)%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqAbsDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbsDecimal.mdx)%0A-%20%5B%60assertApproxEqRel%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRel.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqAbsDecimal-C9MjBdoD.js"),__vite__mapDeps([350,1])),path:"/reference/forge-std/assertApproxEqAbsDecimal",type:"mdx",filePath:"reference/forge-std/assertApproxEqAbsDecimal.mdx",content:"%23%23%20%60assertApproxEqAbsDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20absolute%20value.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqAbs%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqAbsDecimal-C9MjBdoD.js"),__vite__mapDeps([350,1])),path:"/reference/forge-std/assertApproxEqAbsDecimal.html",type:"mdx",filePath:"reference/forge-std/assertApproxEqAbsDecimal.mdx",content:"%23%23%20%60assertApproxEqAbsDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqAbsDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20absolute%20value.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqAbs%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqRel-DQKHas0i.js"),__vite__mapDeps([351,1])),path:"/reference/forge-std/assertApproxEqRel",type:"mdx",filePath:"reference/forge-std/assertApproxEqRel.mdx",content:"%23%23%20%60assertApproxEqRel%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20testRevert()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%20%20%20%20assertApproxEqRel(a%2C%20b%2C%200.4e18)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60%0A%5BFAIL%3A%20assertion%20failed%3A%20100%20!~%3D%20200%20(max%20delta%3A%2040.0000000000000000%25%2C%20real%20delta%3A%2050.0000000000000000%25)%5D%20testRevert()%20(gas%3A%2023884)%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqRelDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRelDecimal.mdx)%0A-%20%5B%60assertApproxEqAbs%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqRel-DQKHas0i.js"),__vite__mapDeps([351,1])),path:"/reference/forge-std/assertApproxEqRel.html",type:"mdx",filePath:"reference/forge-std/assertApproxEqRel.mdx",content:"%23%23%20%60assertApproxEqRel%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRel(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20testRevert()%20external%20%7B%0A%20%20%20%20uint256%20a%20%3D%20100%3B%0A%20%20%20%20uint256%20b%20%3D%20200%3B%0A%20%20%20%20assertApproxEqRel(a%2C%20b%2C%200.4e18)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60%0A%5BFAIL%3A%20assertion%20failed%3A%20100%20!~%3D%20200%20(max%20delta%3A%2040.0000000000000000%25%2C%20real%20delta%3A%2050.0000000000000000%25)%5D%20testRevert()%20(gas%3A%2023884)%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqRelDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRelDecimal.mdx)%0A-%20%5B%60assertApproxEqAbs%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbs.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqRelDecimal-B87KoNK-.js"),__vite__mapDeps([352,1])),path:"/reference/forge-std/assertApproxEqRelDecimal",type:"mdx",filePath:"reference/forge-std/assertApproxEqRelDecimal.mdx",content:"%23%23%20%60assertApproxEqRelDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqRel%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRel.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertApproxEqRelDecimal-B87KoNK-.js"),__vite__mapDeps([352,1])),path:"/reference/forge-std/assertApproxEqRelDecimal.html",type:"mdx",filePath:"reference/forge-std/assertApproxEqRelDecimal.mdx",content:"%23%23%20%60assertApproxEqRelDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertApproxEqRelDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20maxPercentDelta%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20approximately%20equal%20to%20%60right%60%20with%20delta%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertApproxEqRel%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRel.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertEq-CwVWdrAo.js"),__vite__mapDeps([353,1])),path:"/reference/forge-std/assertEq",type:"mdx",filePath:"reference/forge-std/assertEq.mdx",content:"%23%23%20%60assertEq%60%0A%0A%23%23%23%20Signature%0A%0A%23%23%23%23%20%60bool%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%20left%2C%20bool%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%20left%2C%20bool%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%20left%2C%20address%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%20left%2C%20address%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%20memory%20left%2C%20string%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%20memory%20left%2C%20string%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%20memory%20left%2C%20bytes%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%20memory%20left%2C%20bytes%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bool%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20Legacy%0A%0A%60%60%60solidity%0A%2F%2F%20legacy%20helper%20for%20asserting%20two%20uints%20shorter%20than%20256%20bits%3A%20%60assertEqUint(uint8(1)%2C%20uint128(1))%3B%60%0Afunction%20assertEqUint(uint256%20a%2C%20uint256%20b)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq32(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq32(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertEqDecimal.mdx)%0A-%20%5B%60assertNotEq%60%5D(%2Freference%2Fforge-std%2FassertNotEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertEq-CwVWdrAo.js"),__vite__mapDeps([353,1])),path:"/reference/forge-std/assertEq.html",type:"mdx",filePath:"reference/forge-std/assertEq.mdx",content:"%23%23%20%60assertEq%60%0A%0A%23%23%23%20Signature%0A%0A%23%23%23%23%20%60bool%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%20left%2C%20bool%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%20left%2C%20bool%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%20left%2C%20address%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%20left%2C%20address%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%20memory%20left%2C%20string%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%20memory%20left%2C%20string%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%20memory%20left%2C%20bytes%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%20memory%20left%2C%20bytes%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bool%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20Legacy%0A%0A%60%60%60solidity%0A%2F%2F%20legacy%20helper%20for%20asserting%20two%20uints%20shorter%20than%20256%20bits%3A%20%60assertEqUint(uint8(1)%2C%20uint128(1))%3B%60%0Afunction%20assertEqUint(uint256%20a%2C%20uint256%20b)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq32(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEq32(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertEqDecimal.mdx)%0A-%20%5B%60assertNotEq%60%5D(%2Freference%2Fforge-std%2FassertNotEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertEqDecimal-BRelRqbL.js"),__vite__mapDeps([354,1])),path:"/reference/forge-std/assertEqDecimal",type:"mdx",filePath:"reference/forge-std/assertEqDecimal.mdx",content:"%23%23%20%60assertEqDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertEq%60%5D(%2Freference%2Fforge-std%2FassertEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertEqDecimal-BRelRqbL.js"),__vite__mapDeps([354,1])),path:"/reference/forge-std/assertEqDecimal.html",type:"mdx",filePath:"reference/forge-std/assertEqDecimal.mdx",content:"%23%23%20%60assertEqDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertEq%60%5D(%2Freference%2Fforge-std%2FassertEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertFalse-BK5Q5o4c.js"),__vite__mapDeps([355,1])),path:"/reference/forge-std/assertFalse",type:"mdx",filePath:"reference/forge-std/assertFalse.mdx",content:"%23%23%20%60assertFalse%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertFalse(bool%20data)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertFalse(bool%20data%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60data%60%20is%20false.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Abool%20failure%20%3D%20contract.fun()%3B%0AassertFalse(failure)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertTrue%60%5D(%2Freference%2Fforge-std%2FassertTrue.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertFalse-BK5Q5o4c.js"),__vite__mapDeps([355,1])),path:"/reference/forge-std/assertFalse.html",type:"mdx",filePath:"reference/forge-std/assertFalse.mdx",content:"%23%23%20%60assertFalse%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertFalse(bool%20data)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertFalse(bool%20data%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60data%60%20is%20false.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Abool%20failure%20%3D%20contract.fun()%3B%0AassertFalse(failure)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertTrue%60%5D(%2Freference%2Fforge-std%2FassertTrue.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGe-Y8r2HPad.js"),__vite__mapDeps([356,1])),path:"/reference/forge-std/assertGe",type:"mdx",filePath:"reference/forge-std/assertGe.mdx",content:"%23%23%20%60assertGe%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGe(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20greater%20than%20or%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGeDecimal%60%5D(%2Freference%2Fforge-std%2FassertGeDecimal.mdx)%0A-%20%5B%60assertGt%60%5D(%2Freference%2Fforge-std%2FassertGt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGe-Y8r2HPad.js"),__vite__mapDeps([356,1])),path:"/reference/forge-std/assertGe.html",type:"mdx",filePath:"reference/forge-std/assertGe.mdx",content:"%23%23%20%60assertGe%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGe(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGe(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20greater%20than%20or%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGeDecimal%60%5D(%2Freference%2Fforge-std%2FassertGeDecimal.mdx)%0A-%20%5B%60assertGt%60%5D(%2Freference%2Fforge-std%2FassertGt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGeDecimal-Z8mRC9wi.js"),__vite__mapDeps([357,1])),path:"/reference/forge-std/assertGeDecimal",type:"mdx",filePath:"reference/forge-std/assertGeDecimal.mdx",content:"%23%23%20%60assertGeDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20greater%20than%20or%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGe%60%5D(%2Freference%2Fforge-std%2FassertGe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGeDecimal-Z8mRC9wi.js"),__vite__mapDeps([357,1])),path:"/reference/forge-std/assertGeDecimal.html",type:"mdx",filePath:"reference/forge-std/assertGeDecimal.mdx",content:"%23%23%20%60assertGeDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20greater%20than%20or%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGe%60%5D(%2Freference%2Fforge-std%2FassertGe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGt-BhxydPBo.js"),__vite__mapDeps([358,1])),path:"/reference/forge-std/assertGt",type:"mdx",filePath:"reference/forge-std/assertGt.mdx",content:"%23%23%20%60assertGt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGt(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20greater%20than%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGtDecimal%60%5D(%2Freference%2Fforge-std%2FassertGtDecimal.mdx)%0A-%20%5B%60assertGe%60%5D(%2Freference%2Fforge-std%2FassertGe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGt-BhxydPBo.js"),__vite__mapDeps([358,1])),path:"/reference/forge-std/assertGt.html",type:"mdx",filePath:"reference/forge-std/assertGt.mdx",content:"%23%23%20%60assertGt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGt(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGt(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20greater%20than%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGtDecimal%60%5D(%2Freference%2Fforge-std%2FassertGtDecimal.mdx)%0A-%20%5B%60assertGe%60%5D(%2Freference%2Fforge-std%2FassertGe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGtDecimal-BhRBBXju.js"),__vite__mapDeps([359,1])),path:"/reference/forge-std/assertGtDecimal",type:"mdx",filePath:"reference/forge-std/assertGtDecimal.mdx",content:"%23%23%20%60assertGtDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20greater%20than%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGt%60%5D(%2Freference%2Fforge-std%2FassertGt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertGtDecimal-BhRBBXju.js"),__vite__mapDeps([359,1])),path:"/reference/forge-std/assertGtDecimal.html",type:"mdx",filePath:"reference/forge-std/assertGtDecimal.mdx",content:"%23%23%20%60assertGtDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertGtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20greater%20than%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertGt%60%5D(%2Freference%2Fforge-std%2FassertGt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLe-CRYdfFWu.js"),__vite__mapDeps([360,1])),path:"/reference/forge-std/assertLe",type:"mdx",filePath:"reference/forge-std/assertLe.mdx",content:"%23%23%20%60assertLe%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLe(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20less%20than%20or%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLeDecimal%60%5D(%2Freference%2Fforge-std%2FassertLeDecimal.mdx)%0A-%20%5B%60assertLt%60%5D(%2Freference%2Fforge-std%2FassertLt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLe-CRYdfFWu.js"),__vite__mapDeps([360,1])),path:"/reference/forge-std/assertLe.html",type:"mdx",filePath:"reference/forge-std/assertLe.mdx",content:"%23%23%20%60assertLe%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLe(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLe(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20less%20than%20or%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLeDecimal%60%5D(%2Freference%2Fforge-std%2FassertLeDecimal.mdx)%0A-%20%5B%60assertLt%60%5D(%2Freference%2Fforge-std%2FassertLt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLeDecimal-B5Z6tV2f.js"),__vite__mapDeps([361,1])),path:"/reference/forge-std/assertLeDecimal",type:"mdx",filePath:"reference/forge-std/assertLeDecimal.mdx",content:"%23%23%20%60assertLeDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20less%20than%20or%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLe%60%5D(%2Freference%2Fforge-std%2FassertLe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLeDecimal-B5Z6tV2f.js"),__vite__mapDeps([361,1])),path:"/reference/forge-std/assertLeDecimal.html",type:"mdx",filePath:"reference/forge-std/assertLeDecimal.mdx",content:"%23%23%20%60assertLeDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLeDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20less%20than%20or%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLe%60%5D(%2Freference%2Fforge-std%2FassertLe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLt-CrLdfl5J.js"),__vite__mapDeps([362,1])),path:"/reference/forge-std/assertLt",type:"mdx",filePath:"reference/forge-std/assertLt.mdx",content:"%23%23%20%60assertLt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLt(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20less%20than%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLtDecimal%60%5D(%2Freference%2Fforge-std%2FassertLtDecimal.mdx)%0A-%20%5B%60assertLe%60%5D(%2Freference%2Fforge-std%2FassertLe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLt-CrLdfl5J.js"),__vite__mapDeps([362,1])),path:"/reference/forge-std/assertLt.html",type:"mdx",filePath:"reference/forge-std/assertLt.mdx",content:"%23%23%20%60assertLt%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLt(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLt(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20less%20than%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLtDecimal%60%5D(%2Freference%2Fforge-std%2FassertLtDecimal.mdx)%0A-%20%5B%60assertLe%60%5D(%2Freference%2Fforge-std%2FassertLe.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLtDecimal-DVuMiWNG.js"),__vite__mapDeps([363,1])),path:"/reference/forge-std/assertLtDecimal",type:"mdx",filePath:"reference/forge-std/assertLtDecimal.mdx",content:"%23%23%20%60assertLtDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20less%20than%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLt%60%5D(%2Freference%2Fforge-std%2FassertLt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertLtDecimal-DVuMiWNG.js"),__vite__mapDeps([363,1])),path:"/reference/forge-std/assertLtDecimal.html",type:"mdx",filePath:"reference/forge-std/assertLtDecimal.mdx",content:"%23%23%20%60assertLtDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertLtDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20strictly%20less%20than%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertLt%60%5D(%2Freference%2Fforge-std%2FassertLt.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertNotEq-BWWiKsqw.js"),__vite__mapDeps([364,1])),path:"/reference/forge-std/assertNotEq",type:"mdx",filePath:"reference/forge-std/assertNotEq.mdx",content:"%23%23%20%60assertNotEq%60%0A%0A%23%23%23%20Signature%0A%0A%23%23%23%23%20%60bool%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%20left%2C%20bool%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%20left%2C%20bool%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%20left%2C%20address%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%20left%2C%20address%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%20memory%20left%2C%20string%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%20memory%20left%2C%20string%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%20memory%20left%2C%20bytes%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%20memory%20left%2C%20bytes%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bool%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20Legacy%0A%0A%60%60%60solidity%0Afunction%20assertNotEq32(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq32(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20not%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertNotEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertNotEqDecimal.mdx)%0A-%20%5B%60assertEq%60%5D(%2Freference%2Fforge-std%2FassertEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertNotEq-BWWiKsqw.js"),__vite__mapDeps([364,1])),path:"/reference/forge-std/assertNotEq.html",type:"mdx",filePath:"reference/forge-std/assertNotEq.mdx",content:"%23%23%20%60assertNotEq%60%0A%0A%23%23%23%20Signature%0A%0A%23%23%23%23%20%60bool%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%20left%2C%20bool%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%20left%2C%20bool%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%20left%2C%20uint256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%20left%2C%20uint256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%20left%2C%20int256%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%20left%2C%20int256%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%20left%2C%20address%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%20left%2C%20address%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%20memory%20left%2C%20string%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%20memory%20left%2C%20string%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%20memory%20left%2C%20bytes%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%20memory%20left%2C%20bytes%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bool%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bool%5B%5D%20memory%20left%2C%20bool%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60uint256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(uint256%5B%5D%20memory%20left%2C%20uint256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60int256%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(int256%5B%5D%20memory%20left%2C%20int256%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60address%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(address%5B%5D%20memory%20left%2C%20address%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes32%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes32%5B%5D%20memory%20left%2C%20bytes32%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60string%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(string%5B%5D%20memory%20left%2C%20string%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20%60bytes%5B%5D%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq(bytes%5B%5D%20memory%20left%2C%20bytes%5B%5D%20memory%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%23%20Legacy%0A%0A%60%60%60solidity%0Afunction%20assertNotEq32(bytes32%20left%2C%20bytes32%20right)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEq32(bytes32%20left%2C%20bytes32%20right%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20not%20equal%20to%20%60right%60.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertNotEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertNotEqDecimal.mdx)%0A-%20%5B%60assertEq%60%5D(%2Freference%2Fforge-std%2FassertEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertNotEqDecimal-BPakzpnV.js"),__vite__mapDeps([365,1])),path:"/reference/forge-std/assertNotEqDecimal",type:"mdx",filePath:"reference/forge-std/assertNotEqDecimal.mdx",content:"%23%23%20%60assertNotEqDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20not%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertNotEq%60%5D(%2Freference%2Fforge-std%2FassertNotEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertNotEqDecimal-BPakzpnV.js"),__vite__mapDeps([365,1])),path:"/reference/forge-std/assertNotEqDecimal.html",type:"mdx",filePath:"reference/forge-std/assertNotEqDecimal.mdx",content:"%23%23%20%60assertNotEqDecimal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals)%20internal%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(uint256%20left%2C%20uint256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertNotEqDecimal(int256%20left%2C%20int256%20right%2C%20uint256%20decimals%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60left%60%20is%20not%20equal%20to%20%60right%60.%0A%0A%60left%60%20and%20%60right%60%20are%20formatted%20with%20decimals%20in%20the%20revert%20string.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertNotEq%60%5D(%2Freference%2Fforge-std%2FassertNotEq.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertTrue-CWxoRtGn.js"),__vite__mapDeps([366,1])),path:"/reference/forge-std/assertTrue",type:"mdx",filePath:"reference/forge-std/assertTrue.mdx",content:"%23%23%20%60assertTrue%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertTrue(bool%20data)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertTrue(bool%20data%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60data%60%20is%20true.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Abool%20success%20%3D%20contract.fun()%3B%0AassertTrue(success)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertFalse%60%5D(%2Freference%2Fforge-std%2FassertFalse.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertTrue-CWxoRtGn.js"),__vite__mapDeps([366,1])),path:"/reference/forge-std/assertTrue.html",type:"mdx",filePath:"reference/forge-std/assertTrue.mdx",content:"%23%23%20%60assertTrue%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assertTrue(bool%20data)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assertTrue(bool%20data%2C%20string%20memory%20err)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AAsserts%20%60data%60%20is%20true.%0A%0AOptionally%20includes%20an%20error%20message%20in%20the%20revert%20string.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Abool%20success%20%3D%20contract.fun()%3B%0AassertTrue(success)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0A-%20%5B%60assertFalse%60%5D(%2Freference%2Fforge-std%2FassertFalse.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertionError-BRPBDu_H.js"),__vite__mapDeps([367,1])),path:"/reference/forge-std/assertionError",type:"mdx",filePath:"reference/forge-std/assertionError.mdx",content:"%23%23%20%60assertionError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.assertionError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20an%20%60assert%60%20fails.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assertionError-BRPBDu_H.js"),__vite__mapDeps([367,1])),path:"/reference/forge-std/assertionError.html",type:"mdx",filePath:"reference/forge-std/assertionError.mdx",content:"%23%23%20%60assertionError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.assertionError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20an%20%60assert%60%20fails.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-no-precompiles-C9zTysY-.js"),__vite__mapDeps([368,1])),path:"/reference/forge-std/assume-no-precompiles",type:"mdx",filePath:"reference/forge-std/assume-no-precompiles.mdx",content:"%23%23%20%60assumeNotPrecompile%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assumeNotPrecompile(address%20addr)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assumeNotPrecompile(address%20addr%2C%20uint256%20chainid)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUses%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume.mdx)%20to%20filter%20precompile%20addresses%20from%20the%20fuzz%20tests.%0A%0AOptionally%2C%20a%20%60chainid%60%20may%20be%20specified%20to%20filter%20known%20precompiles%20on%20the%20respective%20chain.%0A%0A%23%23%23%20Registry%0A%0AThese%20are%20all%20the%20precompile%20addresses%20known%20to%20the%20%60assumeNotPrecompile%60%20functions.%0A%0A%7C%20Chain%20ID%20%20%20%20%20%20%7C%20Address%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Name%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20-------------%20%7C%20--------------------------------------------%20%7C%20--------------------------------%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x01%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECRecover%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x02%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20SHA-256%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x03%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20RIPEMD-160%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x04%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Identity%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x05%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ModExp%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x06%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECAdd%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x07%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECMul%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x08%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECPairing%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x09%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Blake2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x0a%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20PointEvaluation%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000016%60%20%7C%20L2ToL1MessagePasser%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000002%60%20%7C%20DeployerWhitelist%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000%60%20%7C%20LegacyERC20ETH%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000006%60%20%7C%20WETH9%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000007%60%20%7C%20L2CrossDomainMessenger%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000010%60%20%7C%20L2StandardBridge%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000011%60%20%7C%20SequencerFeeVault%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000012%60%20%7C%20OptimismMintableERC20Factory%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000013%60%20%7C%20L1BlockNumber%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x420000000000000000000000000000000000000F%60%20%7C%20GasPriceOracle%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000015%60%20%7C%20L1Block%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000042%60%20%7C%20GovernanceToken%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000000%60%20%7C%20LegacyMessagePasser%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000014%60%20%7C%20L2ERC721Bridge%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000017%60%20%7C%20OptimismMintableERC721Factory%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000018%60%20%7C%20ProxyAdmin%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000064%60%20%7C%20ArbSys%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006E%60%20%7C%20ArbRetryableTx%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006C%60%20%7C%20ArbGasInfo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000066%60%20%7C%20ArbAddressTable%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006F%60%20%7C%20ArbStatistics%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x00000000000000000000000000000000000000C8%60%20%7C%20NodeInterface%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000067%60%20%7C%20ArbBLS%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000065%60%20%7C%20ArbInfo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006D%60%20%7C%20ArbAggregator%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000068%60%20%7C%20ArbFunctionTable%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000000%60%20%7C%20ContractDeployerAllowListAddress%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000001%60%20%7C%20ContractNativeMinterAddress%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000002%60%20%7C%20TxAllowListAddress%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000003%60%20%7C%20FeeConfigManagerAddress%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x4e59b44847b379578588920cA78FbF26c0B4956C%60%20%7C%20(Foundry)%20Create2Deployer%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%20%7C%20(Foundry)%20VM%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x000000000000000000636F6e736F6c652e6c6f67%60%20%7C%20(Foundry)%20Console%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%0A%23%23%23%20Reserved%20Ranges%0A%0ASome%20chains%20also%20include%20reserved%20ranges%20for%20precompile%20contracts.%0A%0A%7C%20Chain%20ID%20%20%20%20%20%20%7C%20Start%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Stop%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20-------------%20%7C%20--------------------------------------------%20%7C%20--------------------------------------------%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x00%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%600xff%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0100000000000000000000000000000000000000%60%20%7C%20%600x01000000000000000000000000000000000000ff%60%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000000%60%20%7C%20%600x02000000000000000000000000000000000000ff%60%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0300000000000000000000000000000000000000%60%20%7C%20%600x03000000000000000000000000000000000000ff%60%20%7C%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-no-precompiles-C9zTysY-.js"),__vite__mapDeps([368,1])),path:"/reference/forge-std/assume-no-precompiles.html",type:"mdx",filePath:"reference/forge-std/assume-no-precompiles.mdx",content:"%23%23%20%60assumeNotPrecompile%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assumeNotPrecompile(address%20addr)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20assumeNotPrecompile(address%20addr%2C%20uint256%20chainid)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUses%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume.mdx)%20to%20filter%20precompile%20addresses%20from%20the%20fuzz%20tests.%0A%0AOptionally%2C%20a%20%60chainid%60%20may%20be%20specified%20to%20filter%20known%20precompiles%20on%20the%20respective%20chain.%0A%0A%23%23%23%20Registry%0A%0AThese%20are%20all%20the%20precompile%20addresses%20known%20to%20the%20%60assumeNotPrecompile%60%20functions.%0A%0A%7C%20Chain%20ID%20%20%20%20%20%20%7C%20Address%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Name%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20-------------%20%7C%20--------------------------------------------%20%7C%20--------------------------------%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x01%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECRecover%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x02%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20SHA-256%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x03%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20RIPEMD-160%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x04%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Identity%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x05%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ModExp%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x06%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECAdd%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x07%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECMul%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x08%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ECPairing%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x09%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Blake2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x0a%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20PointEvaluation%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000016%60%20%7C%20L2ToL1MessagePasser%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000002%60%20%7C%20DeployerWhitelist%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000%60%20%7C%20LegacyERC20ETH%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000006%60%20%7C%20WETH9%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000007%60%20%7C%20L2CrossDomainMessenger%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000010%60%20%7C%20L2StandardBridge%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000011%60%20%7C%20SequencerFeeVault%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000012%60%20%7C%20OptimismMintableERC20Factory%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000013%60%20%7C%20L1BlockNumber%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x420000000000000000000000000000000000000F%60%20%7C%20GasPriceOracle%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000015%60%20%7C%20L1Block%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000042%60%20%7C%20GovernanceToken%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000000%60%20%7C%20LegacyMessagePasser%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000014%60%20%7C%20L2ERC721Bridge%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000017%60%20%7C%20OptimismMintableERC721Factory%20%20%20%20%7C%0A%7C%2010%2C%20420%20%20%20%20%20%20%20%7C%20%600x4200000000000000000000000000000000000018%60%20%7C%20ProxyAdmin%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000064%60%20%7C%20ArbSys%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006E%60%20%7C%20ArbRetryableTx%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006C%60%20%7C%20ArbGasInfo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000066%60%20%7C%20ArbAddressTable%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006F%60%20%7C%20ArbStatistics%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x00000000000000000000000000000000000000C8%60%20%7C%20NodeInterface%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000067%60%20%7C%20ArbBLS%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000065%60%20%7C%20ArbInfo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x000000000000000000000000000000000000006D%60%20%7C%20ArbAggregator%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%2042161%2C%20421613%20%7C%20%600x0000000000000000000000000000000000000068%60%20%7C%20ArbFunctionTable%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000000%60%20%7C%20ContractDeployerAllowListAddress%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000001%60%20%7C%20ContractNativeMinterAddress%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000002%60%20%7C%20TxAllowListAddress%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000003%60%20%7C%20FeeConfigManagerAddress%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x4e59b44847b379578588920cA78FbF26c0B4956C%60%20%7C%20(Foundry)%20Create2Deployer%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x7109709ECfa91a80626fF3989D68f67F5b1DD12D%60%20%7C%20(Foundry)%20VM%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x000000000000000000636F6e736F6c652e6c6f67%60%20%7C%20(Foundry)%20Console%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%0A%23%23%23%20Reserved%20Ranges%0A%0ASome%20chains%20also%20include%20reserved%20ranges%20for%20precompile%20contracts.%0A%0A%7C%20Chain%20ID%20%20%20%20%20%20%7C%20Start%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Stop%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20-------------%20%7C%20--------------------------------------------%20%7C%20--------------------------------------------%20%7C%0A%7C%20ALL%20%20%20%20%20%20%20%20%20%20%20%7C%20%600x00%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%600xff%60%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0100000000000000000000000000000000000000%60%20%7C%20%600x01000000000000000000000000000000000000ff%60%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0200000000000000000000000000000000000000%60%20%7C%20%600x02000000000000000000000000000000000000ff%60%20%7C%0A%7C%20433114%2C%2043113%20%7C%20%600x0300000000000000000000000000000000000000%60%20%7C%20%600x03000000000000000000000000000000000000ff%60%20%7C%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-payable-CvIUHrKs.js"),__vite__mapDeps([369,1])),path:"/reference/forge-std/assume-payable",type:"mdx",filePath:"reference/forge-std/assume-payable.mdx",content:"%23%23%20%60assumePayable%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assumePayable(address%20addr)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUses%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume.mdx)%20to%20filter%20addresses%20that%20reject%20Ether%20transfers.%0A%0AThis%20makes%20an%20external%20call%20to%20the%20specified%20%60addr%60%20with%20a%20no%20calldata%20and%20checks%20%60assume%60%20against%20the%20success%20of%20the%20call.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./assume-payable-CvIUHrKs.js"),__vite__mapDeps([369,1])),path:"/reference/forge-std/assume-payable.html",type:"mdx",filePath:"reference/forge-std/assume-payable.mdx",content:"%23%23%20%60assumePayable%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20assumePayable(address%20addr)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AUses%20%5B%60assume%60%5D(%2Freference%2Fcheatcodes%2Fassume.mdx)%20to%20filter%20addresses%20that%20reject%20Ether%20transfers.%0A%0AThis%20makes%20an%20external%20call%20to%20the%20specified%20%60addr%60%20with%20a%20no%20calldata%20and%20checks%20%60assume%60%20against%20the%20success%20of%20the%20call.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./bound-vi6sLnY4.js"),__vite__mapDeps([370,1])),path:"/reference/forge-std/bound",type:"mdx",filePath:"reference/forge-std/bound.mdx",content:"%23%23%20%60bound%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20bound(uint256%20x%2C%20uint256%20min%2C%20uint256%20max)%20public%20returns%20(uint256%20result)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20mathematical%20function%20for%20wrapping%20inputs%20of%20fuzz%20tests%20into%20a%20certain%20range.%0A%0AYou%20can%20use%20it%20instead%20of%20the%20%60assume%60%20cheatcode%20to%20get%20better%20performance%20in%20some%20cases.%20Read%20more%20%5Bhere%5D(%2Freference%2Fcheatcodes%2Fassume.mdx).%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Ainput%20%3D%20bound(input%2C%2099%2C%20101)%3B%0A%60%60%60%0A%0AReturns%20%6099%60%20for%20input%20%600%60.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0AReturns%20%60100%60%20for%20input%20%601%60.%0A%3Cbr%3E%3C%2Fbr%3E%0AReturns%20%60101%60%20for%20input%20%602%60.%0A%3Cbr%3E%3C%2Fbr%3E%0AReturns%20%6099%60%20for%20input%20%603%60.%0A%3Cbr%3E%3C%2Fbr%3E%0AAnd%20so%20on.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./bound-vi6sLnY4.js"),__vite__mapDeps([370,1])),path:"/reference/forge-std/bound.html",type:"mdx",filePath:"reference/forge-std/bound.mdx",content:"%23%23%20%60bound%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20bound(uint256%20x%2C%20uint256%20min%2C%20uint256%20max)%20public%20returns%20(uint256%20result)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20mathematical%20function%20for%20wrapping%20inputs%20of%20fuzz%20tests%20into%20a%20certain%20range.%0A%0AYou%20can%20use%20it%20instead%20of%20the%20%60assume%60%20cheatcode%20to%20get%20better%20performance%20in%20some%20cases.%20Read%20more%20%5Bhere%5D(%2Freference%2Fcheatcodes%2Fassume.mdx).%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Ainput%20%3D%20bound(input%2C%2099%2C%20101)%3B%0A%60%60%60%0A%0AReturns%20%6099%60%20for%20input%20%600%60.%0A%0A%3Cbr%3E%3C%2Fbr%3E%0AReturns%20%60100%60%20for%20input%20%601%60.%0A%3Cbr%3E%3C%2Fbr%3E%0AReturns%20%60101%60%20for%20input%20%602%60.%0A%3Cbr%3E%3C%2Fbr%3E%0AReturns%20%6099%60%20for%20input%20%603%60.%0A%3Cbr%3E%3C%2Fbr%3E%0AAnd%20so%20on.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./change-prank-_da6GZFN.js"),__vite__mapDeps([371,1])),path:"/reference/forge-std/change-prank",type:"mdx",filePath:"reference/forge-std/change-prank.mdx",content:"%23%23%20%60changePrank%60%0A%0A%23%23%23%20Status%0A%0A%60changePrank%60%20is%20deprecated.%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20changePrank(address%20who)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStops%20the%20active%20prank%20with%20%60stopPrank%60%20and%20passes%20address%20to%20%60startPrank%60.%20%20%0A%0AUseful%20for%20starting%20a%20global%20prank%20in%20the%20%60setUp%60%20function%20and%20deactivating%20it%20in%20certain%20tests.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./change-prank-_da6GZFN.js"),__vite__mapDeps([371,1])),path:"/reference/forge-std/change-prank.html",type:"mdx",filePath:"reference/forge-std/change-prank.mdx",content:"%23%23%20%60changePrank%60%0A%0A%23%23%23%20Status%0A%0A%60changePrank%60%20is%20deprecated.%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20changePrank(address%20who)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStops%20the%20active%20prank%20with%20%60stopPrank%60%20and%20passes%20address%20to%20%60startPrank%60.%20%20%0A%0AUseful%20for%20starting%20a%20global%20prank%20in%20the%20%60setUp%60%20function%20and%20deactivating%20it%20in%20certain%20tests.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./checked_write-CmwUGMSH.js"),__vite__mapDeps([372,1])),path:"/reference/forge-std/checked_write",type:"mdx",filePath:"reference/forge-std/checked_write.mdx",content:"%23%23%20%60checked_write%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20address%20who)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20uint256%20amt)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20bool%20write)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20bytes32%20set)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write_int(StdStorage%20storage%20self%2C%20int256%20val)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20data%20to%20be%20written%20to%20the%20storage%20slot(s).%0A%0AReverts%20with%20a%20message%20if%20unsuccessful.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./checked_write-CmwUGMSH.js"),__vite__mapDeps([372,1])),path:"/reference/forge-std/checked_write.html",type:"mdx",filePath:"reference/forge-std/checked_write.mdx",content:"%23%23%20%60checked_write%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20address%20who)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20uint256%20amt)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20bool%20write)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write(StdStorage%20storage%20self%2C%20bytes32%20set)%20internal%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20checked_write_int(StdStorage%20storage%20self%2C%20int256%20val)%20internal%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20data%20to%20be%20written%20to%20the%20storage%20slot(s).%0A%0AReverts%20with%20a%20message%20if%20unsuccessful.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./compute-create-address-BR8qOURK.js"),__vite__mapDeps([373,1])),path:"/reference/forge-std/compute-create-address",type:"mdx",filePath:"reference/forge-std/compute-create-address.mdx",content:"%23%23%20%60computeCreateAddress%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20computeCreateAddress(address%20deployer%2C%20uint256%20nonce)%20internal%20pure%20returns%20(address)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACompute%20the%20address%20a%20contract%20will%20be%20deployed%20at%20for%20a%20given%20deployer%20address%20and%20nonce.%20Useful%20to%20precalculate%20the%20address%20a%20contract%20**will**%20be%20deployed%20at.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Aaddress%20governanceAddress%20%3D%20computeCreateAddress(0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%2C%201)%3B%0A%0A%2F%2F%20this%20contract%20requires%20a%20governance%20contract%20which%20hasn't%20been%20deployed%20yet%0AContract%20contract%20%3D%20new%20Contract(governanceAddress)%3B%0A%2F%2F%20now%20we%20deploy%20it%0AGovernance%20governance%20%3D%20new%20Governance(contract)%3B%0A%0A%2F%2F%20assuming%20%60contract%60%20has%20a%20%60governance()%60%20accessor%0AassertEq(governanceAddress%2C%20address(governance))%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./compute-create-address-BR8qOURK.js"),__vite__mapDeps([373,1])),path:"/reference/forge-std/compute-create-address.html",type:"mdx",filePath:"reference/forge-std/compute-create-address.mdx",content:"%23%23%20%60computeCreateAddress%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20computeCreateAddress(address%20deployer%2C%20uint256%20nonce)%20internal%20pure%20returns%20(address)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACompute%20the%20address%20a%20contract%20will%20be%20deployed%20at%20for%20a%20given%20deployer%20address%20and%20nonce.%20Useful%20to%20precalculate%20the%20address%20a%20contract%20**will**%20be%20deployed%20at.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Aaddress%20governanceAddress%20%3D%20computeCreateAddress(0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266%2C%201)%3B%0A%0A%2F%2F%20this%20contract%20requires%20a%20governance%20contract%20which%20hasn't%20been%20deployed%20yet%0AContract%20contract%20%3D%20new%20Contract(governanceAddress)%3B%0A%2F%2F%20now%20we%20deploy%20it%0AGovernance%20governance%20%3D%20new%20Governance(contract)%3B%0A%0A%2F%2F%20assuming%20%60contract%60%20has%20a%20%60governance()%60%20accessor%0AassertEq(governanceAddress%2C%20address(governance))%3B%20%2F%2F%20%5BPASS%5D%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./console-log-DoAA0JoU.js"),__vite__mapDeps([374,1])),path:"/reference/forge-std/console-log",type:"mdx",filePath:"reference/forge-std/console-log.mdx",content:"%23%23%20Console%20Logging%0A%0A-%20Similar%20to%20Hardhat's%20console%20functions.%0A-%20You%20can%20use%20it%20in%20calls%20and%20transactions.%20It%20also%20works%20with%20view%20and%20pure%20functions.%0A-%20It%20always%20works%2C%20regardless%20of%20the%20call%20or%20transaction%20failing%20or%20being%20successful.%0A-%20To%20use%20it%20you%20need%20import%20it%3A%0A%20%20%20%20-%20%60import%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%60%0A-%20You%20can%20call%20console.log%20with%20up%20to%204%20parameters%20in%20any%20order%20of%20following%20types%3A%0A%20%20%20%20-%20%60uint%60%0A%20%20%20%20-%20%60string%60%0A%20%20%20%20-%20%60bool%60%0A%20%20%20%20-%20%60address%60%0A-%20There's%20also%20the%20single%20parameter%20API%20for%20the%20types%20above%2C%20and%20additionally%20bytes%2C%20bytes1...%20up%20to%20bytes32%3A%0A%20%20%20%20-%20%60console.logInt(int%20i)%60%0A%20%20%20%20-%20%60console.logUint(uint%20i)%60%0A%20%20%20%20-%20%60console.logString(string%20memory%20s)%60%0A%20%20%20%20-%20%60console.logBool(bool%20b)%60%0A%20%20%20%20-%20%60console.logAddress(address%20a)%60%0A%20%20%20%20-%20%60console.logBytes(bytes%20memory%20b)%60%0A%20%20%20%20-%20%60console.logBytes1(bytes1%20b)%60%0A%20%20%20%20-%20%60console.logBytes2(bytes2%20b)%60%0A%20%20%20%20-%20...%0A%20%20%20%20-%20%60console.logBytes32(bytes32%20b)%60%0A-%20console.log%20implements%20the%20same%20formatting%20options%20that%20can%20be%20found%20in%20Hardhat's%20console.log.%0A%20%20%20%20-%20Example%3A%20%60console.log(%22Changing%20owner%20from%20%25s%20to%20%25s%22%2C%20currentOwner%2C%20newOwner)%60%0A-%20console.log%20is%20implemented%20in%20standard%20Solidity%20and%20it%20is%20compatible%20Anvil%20and%20Hardhat%20Networks.%0A-%20console.log%20calls%20can%20run%20in%20other%20networks%2C%20like%20mainnet%2C%20kovan%2C%20ropsten%2C%20etc.%20They%20do%20nothing%20in%20those%20networks%2C%20but%20do%20spend%20a%20minimal%20amount%20of%20gas.%0A%0A%0A%23%23%23%20%60console.log(format%5B%2C...args%5D)%60%0AThe%20%60console.log()%60%20method%20prints%20a%20formatted%20string%20using%20the%20first%20argument%20as%20a%20printf-like%20format%20string%20which%20can%20contain%20zero%20or%20more%20format%20specifiers.%20Each%20specifier%20is%20replaced%20with%20the%20converted%20value%20from%20the%20corresponding%20argument.%20Supported%20specifiers%20are%3A%0A%0A-%20%60%25s%60%3A%20String%20will%20be%20used%20to%20convert%20all%20values%20to%20a%20human-readable%20string.%20%60uint256%60%2C%20%60int256%60%20and%20%60bytes%60%20values%20are%20converted%20to%20their%20%600x%60%20hex%20encoded%20values.%0A-%20%60%25d%60%3A%20Number%20will%20be%20used%20to%20convert%20all%20values%20to%20a%20human-readable%20string.%20This%20is%20identical%20to%20%60%25s%60.%0A-%20%60%25i%60%3A%20Works%20the%20same%20way%20as%20%60%25d%60.%0A-%20%60%25e%60%3A%20The%20exponential%20representation%20of%20a%20number.%20For%20%60uint256%60%20and%20%60int256%60%20types.%0A-%20%60%25x%60%3A%20The%20hexadecimal%20representation%20of%20a%20number.%20For%20%60uint256%60%20and%20%60int256%60%20types.%0A-%20%60%25o%60%3A%20Object.%20A%20string%20representation%20of%20an%20object%20with%20generic%20JavaScript-styled%20object%20formatting.%20For%20solidity%20types%2C%20this%20basically%20surround%20the%20string%20representation%20of%20the%20value%20in%20single-quotes.%0A-%20%60%25%25%60%3A%20single%20percent%20sign%20('%25').%20This%20does%20not%20consume%20an%20argument.%0A-%20Returns%3A%20%60%3Cstring%3E%60%20The%20formatted%20string%0A%0AIf%20a%20specifier%20does%20not%20have%20a%20corresponding%20argument%2C%20it%20is%20not%20replaced%3A%0A%60%60%60solidity%0Aconsole.log(%22%25s%3A%25s%22%2C%20%22foo%22)%3B%0A%2F%2F%20Returns%3A%20%22foo%3A%25s%22%0A%60%60%60%0A%0AValues%20that%20are%20not%20part%20of%20the%20format%20string%20are%20formatted%20using%20as%20a%20human-readable%20string%20representation.%0A%0AIf%20there%20are%20more%20arguments%20passed%20to%20the%20console.log()%20method%20than%20the%20number%20of%20specifiers%2C%20the%20extra%20arguments%20are%20concatenated%20to%20the%20returned%20string%2C%20separated%20by%20spaces%3A%0A%60%60%60solidity%0Aconsole.log(%22%25s%3A%25s%22%2C%20%22foo%22%2C%20%22bar%22%2C%20%22baz%22)%3B%0A%2F%2F%20Returns%3A%20%22foo%3Abar%20baz%22%0A%60%60%60%0A%0AIf%20only%20one%20argument%20is%20passed%20to%20console.log()%2C%20it%20is%20returned%20as%20it%20is%20without%20any%20formatting%3A%0A%60%60%60solidity%0Aconsole.log(%22%25%25%20%25s%22)%3B%0A%2F%2F%20Returns%3A%20%22%25%25%20%25s%22%0A%60%60%60%0A%0AThe%20String%20format%20specifier%20(%60%25s%60)%20should%20be%20used%20in%20most%20cases%20unless%20specific%20functionality%20is%20needed%20from%20other%20format%20specifiers.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./console-log-DoAA0JoU.js"),__vite__mapDeps([374,1])),path:"/reference/forge-std/console-log.html",type:"mdx",filePath:"reference/forge-std/console-log.mdx",content:"%23%23%20Console%20Logging%0A%0A-%20Similar%20to%20Hardhat's%20console%20functions.%0A-%20You%20can%20use%20it%20in%20calls%20and%20transactions.%20It%20also%20works%20with%20view%20and%20pure%20functions.%0A-%20It%20always%20works%2C%20regardless%20of%20the%20call%20or%20transaction%20failing%20or%20being%20successful.%0A-%20To%20use%20it%20you%20need%20import%20it%3A%0A%20%20%20%20-%20%60import%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%60%0A-%20You%20can%20call%20console.log%20with%20up%20to%204%20parameters%20in%20any%20order%20of%20following%20types%3A%0A%20%20%20%20-%20%60uint%60%0A%20%20%20%20-%20%60string%60%0A%20%20%20%20-%20%60bool%60%0A%20%20%20%20-%20%60address%60%0A-%20There's%20also%20the%20single%20parameter%20API%20for%20the%20types%20above%2C%20and%20additionally%20bytes%2C%20bytes1...%20up%20to%20bytes32%3A%0A%20%20%20%20-%20%60console.logInt(int%20i)%60%0A%20%20%20%20-%20%60console.logUint(uint%20i)%60%0A%20%20%20%20-%20%60console.logString(string%20memory%20s)%60%0A%20%20%20%20-%20%60console.logBool(bool%20b)%60%0A%20%20%20%20-%20%60console.logAddress(address%20a)%60%0A%20%20%20%20-%20%60console.logBytes(bytes%20memory%20b)%60%0A%20%20%20%20-%20%60console.logBytes1(bytes1%20b)%60%0A%20%20%20%20-%20%60console.logBytes2(bytes2%20b)%60%0A%20%20%20%20-%20...%0A%20%20%20%20-%20%60console.logBytes32(bytes32%20b)%60%0A-%20console.log%20implements%20the%20same%20formatting%20options%20that%20can%20be%20found%20in%20Hardhat's%20console.log.%0A%20%20%20%20-%20Example%3A%20%60console.log(%22Changing%20owner%20from%20%25s%20to%20%25s%22%2C%20currentOwner%2C%20newOwner)%60%0A-%20console.log%20is%20implemented%20in%20standard%20Solidity%20and%20it%20is%20compatible%20Anvil%20and%20Hardhat%20Networks.%0A-%20console.log%20calls%20can%20run%20in%20other%20networks%2C%20like%20mainnet%2C%20kovan%2C%20ropsten%2C%20etc.%20They%20do%20nothing%20in%20those%20networks%2C%20but%20do%20spend%20a%20minimal%20amount%20of%20gas.%0A%0A%0A%23%23%23%20%60console.log(format%5B%2C...args%5D)%60%0AThe%20%60console.log()%60%20method%20prints%20a%20formatted%20string%20using%20the%20first%20argument%20as%20a%20printf-like%20format%20string%20which%20can%20contain%20zero%20or%20more%20format%20specifiers.%20Each%20specifier%20is%20replaced%20with%20the%20converted%20value%20from%20the%20corresponding%20argument.%20Supported%20specifiers%20are%3A%0A%0A-%20%60%25s%60%3A%20String%20will%20be%20used%20to%20convert%20all%20values%20to%20a%20human-readable%20string.%20%60uint256%60%2C%20%60int256%60%20and%20%60bytes%60%20values%20are%20converted%20to%20their%20%600x%60%20hex%20encoded%20values.%0A-%20%60%25d%60%3A%20Number%20will%20be%20used%20to%20convert%20all%20values%20to%20a%20human-readable%20string.%20This%20is%20identical%20to%20%60%25s%60.%0A-%20%60%25i%60%3A%20Works%20the%20same%20way%20as%20%60%25d%60.%0A-%20%60%25e%60%3A%20The%20exponential%20representation%20of%20a%20number.%20For%20%60uint256%60%20and%20%60int256%60%20types.%0A-%20%60%25x%60%3A%20The%20hexadecimal%20representation%20of%20a%20number.%20For%20%60uint256%60%20and%20%60int256%60%20types.%0A-%20%60%25o%60%3A%20Object.%20A%20string%20representation%20of%20an%20object%20with%20generic%20JavaScript-styled%20object%20formatting.%20For%20solidity%20types%2C%20this%20basically%20surround%20the%20string%20representation%20of%20the%20value%20in%20single-quotes.%0A-%20%60%25%25%60%3A%20single%20percent%20sign%20('%25').%20This%20does%20not%20consume%20an%20argument.%0A-%20Returns%3A%20%60%3Cstring%3E%60%20The%20formatted%20string%0A%0AIf%20a%20specifier%20does%20not%20have%20a%20corresponding%20argument%2C%20it%20is%20not%20replaced%3A%0A%60%60%60solidity%0Aconsole.log(%22%25s%3A%25s%22%2C%20%22foo%22)%3B%0A%2F%2F%20Returns%3A%20%22foo%3A%25s%22%0A%60%60%60%0A%0AValues%20that%20are%20not%20part%20of%20the%20format%20string%20are%20formatted%20using%20as%20a%20human-readable%20string%20representation.%0A%0AIf%20there%20are%20more%20arguments%20passed%20to%20the%20console.log()%20method%20than%20the%20number%20of%20specifiers%2C%20the%20extra%20arguments%20are%20concatenated%20to%20the%20returned%20string%2C%20separated%20by%20spaces%3A%0A%60%60%60solidity%0Aconsole.log(%22%25s%3A%25s%22%2C%20%22foo%22%2C%20%22bar%22%2C%20%22baz%22)%3B%0A%2F%2F%20Returns%3A%20%22foo%3Abar%20baz%22%0A%60%60%60%0A%0AIf%20only%20one%20argument%20is%20passed%20to%20console.log()%2C%20it%20is%20returned%20as%20it%20is%20without%20any%20formatting%3A%0A%60%60%60solidity%0Aconsole.log(%22%25%25%20%25s%22)%3B%0A%2F%2F%20Returns%3A%20%22%25%25%20%25s%22%0A%60%60%60%0A%0AThe%20String%20format%20specifier%20(%60%25s%60)%20should%20be%20used%20in%20most%20cases%20unless%20specific%20functionality%20is%20needed%20from%20other%20format%20specifiers.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deal-DtpYGkQ-.js"),__vite__mapDeps([375,1])),path:"/reference/forge-std/deal",type:"mdx",filePath:"reference/forge-std/deal.mdx",content:"%23%23%20%60deal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deal(address%20to%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deal(address%20token%2C%20address%20to%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deal(address%20token%2C%20address%20to%2C%20uint256%20give%2C%20bool%20adjust)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20wrapper%20around%20the%20%5B%60deal%60%5D(%2Freference%2Fcheatcodes%2Fdeal.mdx)%20cheatcode%20that%20also%20works%20for%20most%20ERC-20%20tokens.%0A%0AIf%20the%20alternative%20signature%20of%20%60deal%60%20is%20used%2C%20adjusts%20the%20token's%20total%20supply%20after%20setting%20the%20balance.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Adeal(address(dai)%2C%20alice%2C%2010000e18)%3B%0AassertEq(dai.balanceOf(alice)%2C%2010000e18)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deal-DtpYGkQ-.js"),__vite__mapDeps([375,1])),path:"/reference/forge-std/deal.html",type:"mdx",filePath:"reference/forge-std/deal.mdx",content:"%23%23%20%60deal%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deal(address%20to%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deal(address%20token%2C%20address%20to%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deal(address%20token%2C%20address%20to%2C%20uint256%20give%2C%20bool%20adjust)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20wrapper%20around%20the%20%5B%60deal%60%5D(%2Freference%2Fcheatcodes%2Fdeal.mdx)%20cheatcode%20that%20also%20works%20for%20most%20ERC-20%20tokens.%0A%0AIf%20the%20alternative%20signature%20of%20%60deal%60%20is%20used%2C%20adjusts%20the%20token's%20total%20supply%20after%20setting%20the%20balance.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Adeal(address(dai)%2C%20alice%2C%2010000e18)%3B%0AassertEq(dai.balanceOf(alice)%2C%2010000e18)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./delta-D_vvnJ-X.js"),__vite__mapDeps([376,1])),path:"/reference/forge-std/delta",type:"mdx",filePath:"reference/forge-std/delta.mdx",content:"%23%23%20%60delta%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20delta(uint256%20a%2C%20uint256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20delta(int256%20a%2C%20int256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20difference%20between%20two%20numbers%20in%20absolute%20value.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20four%20%3D%20stdMath.delta(-1%2C%203)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./delta-D_vvnJ-X.js"),__vite__mapDeps([376,1])),path:"/reference/forge-std/delta.html",type:"mdx",filePath:"reference/forge-std/delta.mdx",content:"%23%23%20%60delta%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20delta(uint256%20a%2C%20uint256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20delta(int256%20a%2C%20int256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20difference%20between%20two%20numbers%20in%20absolute%20value.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20four%20%3D%20stdMath.delta(-1%2C%203)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deployCode-DMuY2xDB.js"),__vite__mapDeps([377,1])),path:"/reference/forge-std/deployCode",type:"mdx",filePath:"reference/forge-std/deployCode.mdx",content:"%23%23%20%60deployCode%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what%2C%20bytes%20memory%20args)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what%2C%20uint256%20val)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what%2C%20bytes%20memory%20args%2C%20uint256%20val)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADeploys%20a%20contract%20by%20fetching%20the%20contract%20bytecode%20from%20the%20artifacts%20directory.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0AValues%20can%20also%20be%20passed%20by%20using%20the%20%60val%60%20parameter.%20This%20is%20necessary%20if%20you%20need%20to%20send%20ETH%20on%20construction.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20deployment%20%3D%20deployCode(%22MyContract.sol%22%2C%20abi.encode(arg1%2C%20arg2))%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A-%20%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deployCode-DMuY2xDB.js"),__vite__mapDeps([377,1])),path:"/reference/forge-std/deployCode.html",type:"mdx",filePath:"reference/forge-std/deployCode.mdx",content:"%23%23%20%60deployCode%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what%2C%20bytes%20memory%20args)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what%2C%20uint256%20val)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCode(string%20memory%20what%2C%20bytes%20memory%20args%2C%20uint256%20val)%20public%20returns%20(address)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADeploys%20a%20contract%20by%20fetching%20the%20contract%20bytecode%20from%20the%20artifacts%20directory.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0AValues%20can%20also%20be%20passed%20by%20using%20the%20%60val%60%20parameter.%20This%20is%20necessary%20if%20you%20need%20to%20send%20ETH%20on%20construction.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20deployment%20%3D%20deployCode(%22MyContract.sol%22%2C%20abi.encode(arg1%2C%20arg2))%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A-%20%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deployCodeTo-DaIikkpY.js"),__vite__mapDeps([378,1])),path:"/reference/forge-std/deployCodeTo",type:"mdx",filePath:"reference/forge-std/deployCodeTo.mdx",content:"%23%23%20%60deployCodeTo%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deployCodeTo(string%20memory%20what%2C%20address%20where)%20internal%20virtual%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCodeTo(string%20memory%20what%2C%20bytes%20memory%20args%2C%20address%20where)%20internal%20virtual%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCodeTo(string%20memory%20what%2C%20bytes%20memory%20args%2C%20uint256%20value%2C%20address%20where)%20internal%20virtual%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APseudo-deploys%20a%20contract%20to%20an%20arbitrary%20address%20by%20fetching%20the%20contract%20bytecode%20from%20the%20artifacts%20directory.%20This%20can%20be%20used%20to%20recreate%20the%20production%20environment.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0AValues%20can%20also%20be%20passed%20by%20using%20the%20%60value%60%20parameter.%20This%20is%20necessary%20if%20you%20need%20to%20send%20ETH%20on%20construction.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AdeployCodeTo(%22MyContract.sol%22%2C%20abi.encode(arg1%2C%20arg2)%2C%20arbitraryAddr)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A-%20%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./deployCodeTo-DaIikkpY.js"),__vite__mapDeps([378,1])),path:"/reference/forge-std/deployCodeTo.html",type:"mdx",filePath:"reference/forge-std/deployCodeTo.mdx",content:"%23%23%20%60deployCodeTo%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deployCodeTo(string%20memory%20what%2C%20address%20where)%20internal%20virtual%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCodeTo(string%20memory%20what%2C%20bytes%20memory%20args%2C%20address%20where)%20internal%20virtual%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20deployCodeTo(string%20memory%20what%2C%20bytes%20memory%20args%2C%20uint256%20value%2C%20address%20where)%20internal%20virtual%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APseudo-deploys%20a%20contract%20to%20an%20arbitrary%20address%20by%20fetching%20the%20contract%20bytecode%20from%20the%20artifacts%20directory.%20This%20can%20be%20used%20to%20recreate%20the%20production%20environment.%0A%0AThe%20calldata%20parameter%20can%20either%20be%20in%20the%20form%20%60ContractFile.sol%60%20(if%20the%20filename%20and%20contract%20name%20are%20the%20same)%2C%20%60ContractFile.sol%3AContractName%60%2C%20or%20the%20path%20to%20an%20artifact%2C%20relative%20to%20the%20root%20of%20your%20project.%0A%0AValues%20can%20also%20be%20passed%20by%20using%20the%20%60value%60%20parameter.%20This%20is%20necessary%20if%20you%20need%20to%20send%20ETH%20on%20construction.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AdeployCodeTo(%22MyContract.sol%22%2C%20abi.encode(arg1%2C%20arg2)%2C%20arbitraryAddr)%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0AForge%20Standard%20Library%0A%0A-%20%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./depth-mPwod3qr.js"),__vite__mapDeps([379,1])),path:"/reference/forge-std/depth",type:"mdx",filePath:"reference/forge-std/depth.mdx",content:"%23%23%20%60depth%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20depth(StdStorage%20storage%20self%2C%20uint256%20_depth)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20position%20of%20the%20value%20in%20the%20%60tuple%60%20(e.g.%20inside%20a%20%60struct%60).%0A%0ADefault%20value%3A%20%60uint256(0)%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./depth-mPwod3qr.js"),__vite__mapDeps([379,1])),path:"/reference/forge-std/depth.html",type:"mdx",filePath:"reference/forge-std/depth.mdx",content:"%23%23%20%60depth%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20depth(StdStorage%20storage%20self%2C%20uint256%20_depth)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20position%20of%20the%20value%20in%20the%20%60tuple%60%20(e.g.%20inside%20a%20%60struct%60).%0A%0ADefault%20value%3A%20%60uint256(0)%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./derive-remember-key-CPSnlB_F.js"),__vite__mapDeps([380,1])),path:"/reference/forge-std/derive-remember-key",type:"mdx",filePath:"reference/forge-std/derive-remember-key.mdx",content:"%23%23%20%60deriveRememberKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deriveRememberKey(string%20memory%20mnemonic%2C%20uint32%20index)%20internal%20returns%20(address%20who%2C%20uint256%20privateKey)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADerive%20a%20private%20key%20from%20a%20mnemonic%20and%20also%20store%20it%20in%20forge's%20local%20wallet.%20Returns%20the%20address%20and%20private%20key.%0A%0A%23%23%23%20Example%0A%0AGet%20a%20private%20key%20and%20address%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60.%20Use%20them%20to%20sign%20some%20data%20and%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0A%0A(address%20deployer%2C%20uint256%20privateKey)%20%3D%20deriveRememberKey(mnemonic%2C%200)%3B%0A%0Abytes32%20hash%20%3D%20keccak256(%22Signed%20by%20deployer%22)%3B%0A(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(privateKey%2C%20hash)%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0AGet%20an%20address%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60%20to%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0A%0A(address%20deployer%2C%20)%20%3D%20deriveRememberKey(mnemonic%2C%200)%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0ACheatcodes%3A%0A%0A-%20%5BderiveKey%5D(%2Freference%2Fcheatcodes%2Fderive-key.mdx)%0A-%20%5BrememberKey%5D(%2Freference%2Fcheatcodes%2Fremember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./derive-remember-key-CPSnlB_F.js"),__vite__mapDeps([380,1])),path:"/reference/forge-std/derive-remember-key.html",type:"mdx",filePath:"reference/forge-std/derive-remember-key.mdx",content:"%23%23%20%60deriveRememberKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20deriveRememberKey(string%20memory%20mnemonic%2C%20uint32%20index)%20internal%20returns%20(address%20who%2C%20uint256%20privateKey)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ADerive%20a%20private%20key%20from%20a%20mnemonic%20and%20also%20store%20it%20in%20forge's%20local%20wallet.%20Returns%20the%20address%20and%20private%20key.%0A%0A%23%23%23%20Example%0A%0AGet%20a%20private%20key%20and%20address%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60.%20Use%20them%20to%20sign%20some%20data%20and%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0A%0A(address%20deployer%2C%20uint256%20privateKey)%20%3D%20deriveRememberKey(mnemonic%2C%200)%3B%0A%0Abytes32%20hash%20%3D%20keccak256(%22Signed%20by%20deployer%22)%3B%0A(uint8%20v%2C%20bytes32%20r%2C%20bytes32%20s)%20%3D%20vm.sign(privateKey%2C%20hash)%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0AGet%20an%20address%20from%20the%20test%20mnemonic%20at%20path%20%60m%2F44'%2F60'%2F0'%2F0%2F0%60%20to%20start%20broadcasting%20transactions%3A%0A%0A%60%60%60solidity%0Astring%20memory%20mnemonic%20%3D%20%22test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20test%20junk%22%3B%0A%0A(address%20deployer%2C%20)%20%3D%20deriveRememberKey(mnemonic%2C%200)%3B%0A%0Avm.startBroadcast(deployer)%3B%0A...%0Avm.stopBroadcast()%3B%0A%60%60%60%0A%0A%23%23%23%20SEE%20ALSO%0A%0ACheatcodes%3A%0A%0A-%20%5BderiveKey%5D(%2Freference%2Fcheatcodes%2Fderive-key.mdx)%0A-%20%5BrememberKey%5D(%2Freference%2Fcheatcodes%2Fremember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./divisionError-qRevoCSv.js"),__vite__mapDeps([381,1])),path:"/reference/forge-std/divisionError",type:"mdx",filePath:"reference/forge-std/divisionError.mdx",content:"%23%23%20%60divisionError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.divisionError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20a%20division%20fails%2C%20e.g.%20division%20by%20zero.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./divisionError-qRevoCSv.js"),__vite__mapDeps([381,1])),path:"/reference/forge-std/divisionError.html",type:"mdx",filePath:"reference/forge-std/divisionError.mdx",content:"%23%23%20%60divisionError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.divisionError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20a%20division%20fails%2C%20e.g.%20division%20by%20zero.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./enable_packed_slots-BaKsB0MV.js"),__vite__mapDeps([382,1])),path:"/reference/forge-std/enable_packed_slots",type:"mdx",filePath:"reference/forge-std/enable_packed_slots.mdx",content:"%23%23%20%60enable_packed_slots%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20enable_packed_slots(StdStorage%20storage%20self)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AEnables%20the%20usage%20of%20packed%20storage%20slots%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%20Write%20arbitrary%20balances%20even%20on%20gas-optimized%20contracts%20like%20AUSD%0Astdstore%0A%20%20%20%20.enable_packed_slots()%0A%20%20%20%20.target(_tokenAddress)%0A%20%20%20%20.sig(%22balanceOf(address)%22)%0A%20%20%20%20.with_key(_to)%0A%20%20%20%20.checked_write(%0A%20%20%20%20%20%20%20%20_amount%0A%20%20%20%20)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./enable_packed_slots-BaKsB0MV.js"),__vite__mapDeps([382,1])),path:"/reference/forge-std/enable_packed_slots.html",type:"mdx",filePath:"reference/forge-std/enable_packed_slots.mdx",content:"%23%23%20%60enable_packed_slots%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20enable_packed_slots(StdStorage%20storage%20self)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AEnables%20the%20usage%20of%20packed%20storage%20slots%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A%2F%2F%20Write%20arbitrary%20balances%20even%20on%20gas-optimized%20contracts%20like%20AUSD%0Astdstore%0A%20%20%20%20.enable_packed_slots()%0A%20%20%20%20.target(_tokenAddress)%0A%20%20%20%20.sig(%22balanceOf(address)%22)%0A%20%20%20%20.with_key(_to)%0A%20%20%20%20.checked_write(%0A%20%20%20%20%20%20%20%20_amount%0A%20%20%20%20)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./encodeStorageError-BalU0UCD.js"),__vite__mapDeps([383,1])),path:"/reference/forge-std/encodeStorageError",type:"mdx",filePath:"reference/forge-std/encodeStorageError.mdx",content:"%23%23%20%60encodeStorageError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.encodeStorageError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20access%20data%20in%20storage%20that%20is%20corrupted.%20Data%20cannot%20be%20corrupted%20unless%20assembly%20had%20been%20used.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./encodeStorageError-BalU0UCD.js"),__vite__mapDeps([383,1])),path:"/reference/forge-std/encodeStorageError.html",type:"mdx",filePath:"reference/forge-std/encodeStorageError.mdx",content:"%23%23%20%60encodeStorageError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.encodeStorageError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20access%20data%20in%20storage%20that%20is%20corrupted.%20Data%20cannot%20be%20corrupted%20unless%20assembly%20had%20been%20used.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./enumConversionError-Or1emTqL.js"),__vite__mapDeps([384,1])),path:"/reference/forge-std/enumConversionError",type:"mdx",filePath:"reference/forge-std/enumConversionError.mdx",content:"%23%23%20%60enumConversionError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.enumConversionError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20convert%20a%20number%20to%20a%20variant%20of%20an%20enum%2C%20if%20the%20number%20is%20larger%20than%20the%20number%20of%20variants%20in%20the%20enum%20(counting%20from%200).",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./enumConversionError-Or1emTqL.js"),__vite__mapDeps([384,1])),path:"/reference/forge-std/enumConversionError.html",type:"mdx",filePath:"reference/forge-std/enumConversionError.mdx",content:"%23%23%20%60enumConversionError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.enumConversionError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20convert%20a%20number%20to%20a%20variant%20of%20an%20enum%2C%20if%20the%20number%20is%20larger%20than%20the%20number%20of%20variants%20in%20the%20enum%20(counting%20from%200).",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fail-DbtbqpNg.js"),__vite__mapDeps([385,1])),path:"/reference/forge-std/fail",type:"mdx",filePath:"reference/forge-std/fail.mdx",content:"%23%23%20%60fail%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20fail(string%20memory%20err)%20internal%20virtual%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AFail%20a%20test%20with%20a%20message%20if%20a%20certain%20branch%20or%20execution%20point%20is%20hit.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20test()%20external%20%7B%0A%20%20%20%20for(uint256%20place%3B%20place%20%3C%2010%3B%20%2B%2Bi)%7B%0A%20%20%20%20%20%20%20%20if(game.leaderboard(place)%20%3D%3D%20address(this))%20return%3B%0A%20%20%20%20%7D%0A%20%20%20%20fail(%22Not%20in%20the%20top%2010.%22)%3B%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./fail-DbtbqpNg.js"),__vite__mapDeps([385,1])),path:"/reference/forge-std/fail.html",type:"mdx",filePath:"reference/forge-std/fail.mdx",content:"%23%23%20%60fail%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20fail(string%20memory%20err)%20internal%20virtual%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AFail%20a%20test%20with%20a%20message%20if%20a%20certain%20branch%20or%20execution%20point%20is%20hit.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20test()%20external%20%7B%0A%20%20%20%20for(uint256%20place%3B%20place%20%3C%2010%3B%20%2B%2Bi)%7B%0A%20%20%20%20%20%20%20%20if(game.leaderboard(place)%20%3D%3D%20address(this))%20return%3B%0A%20%20%20%20%7D%0A%20%20%20%20fail(%22Not%20in%20the%20top%2010.%22)%3B%0A%7D%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./find-Wj1ISNdD.js"),__vite__mapDeps([386,1])),path:"/reference/forge-std/find",type:"mdx",filePath:"reference/forge-std/find.mdx",content:"%23%23%20%60find%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20find(StdStorage%20storage%20self)%20internal%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AFinds%20an%20arbitrary%20storage%20slot%20given%20%5B%60target%60%5D(%2Freference%2Fforge-std%2Ftarget.mdx)%2C%20%5B%60sig%60%5D(%2Freference%2Fforge-std%2Fsig.mdx)%2C%20%5B%60with_key%60%5D(%2Freference%2Fforge-std%2Fwith_key.mdx)(s)%2C%20and%20%5B%60depth%60%5D(%2Freference%2Fforge-std%2Fdepth.mdx).%0A%0AReverts%20with%20a%20message%20if%20unsuccessful.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./find-Wj1ISNdD.js"),__vite__mapDeps([386,1])),path:"/reference/forge-std/find.html",type:"mdx",filePath:"reference/forge-std/find.mdx",content:"%23%23%20%60find%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20find(StdStorage%20storage%20self)%20internal%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AFinds%20an%20arbitrary%20storage%20slot%20given%20%5B%60target%60%5D(%2Freference%2Fforge-std%2Ftarget.mdx)%2C%20%5B%60sig%60%5D(%2Freference%2Fforge-std%2Fsig.mdx)%2C%20%5B%60with_key%60%5D(%2Freference%2Fforge-std%2Fwith_key.mdx)(s)%2C%20and%20%5B%60depth%60%5D(%2Freference%2Fforge-std%2Fdepth.mdx).%0A%0AReverts%20with%20a%20message%20if%20unsuccessful.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./hoax-CYmQSIgC.js"),__vite__mapDeps([387,1])),path:"/reference/forge-std/hoax",type:"mdx",filePath:"reference/forge-std/hoax.mdx",content:"%23%23%20%60hoax%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who%2C%20address%20origin)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who%2C%20address%20origin%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20up%20a%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%20from%20an%20address%20that%20has%20some%20ether.%0A%0AIf%20the%20balance%20is%20not%20specified%2C%20it%20will%20be%20set%20to%202%5E128%20wei.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./hoax-CYmQSIgC.js"),__vite__mapDeps([387,1])),path:"/reference/forge-std/hoax.html",type:"mdx",filePath:"reference/forge-std/hoax.mdx",content:"%23%23%20%60hoax%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who%2C%20address%20origin)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20hoax(address%20who%2C%20address%20origin%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20up%20a%20%5B%60prank%60%5D(%2Freference%2Fcheatcodes%2Fprank.mdx)%20from%20an%20address%20that%20has%20some%20ether.%0A%0AIf%20the%20balance%20is%20not%20specified%2C%20it%20will%20be%20set%20to%202%5E128%20wei.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./indexOOBError-07HWLdJM.js"),__vite__mapDeps([388,1])),path:"/reference/forge-std/indexOOBError",type:"mdx",filePath:"reference/forge-std/indexOOBError.mdx",content:"%23%23%20%60indexOOBError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.indexOOBError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20access%20an%20element%20of%20an%20array%20that%20is%20out%20of%20bounds.%0A%0AWill%20not%20work%20for%20empty%20arrays%20in%20external%20contracts.%20For%20those%2C%20use%20%60expectRevert%60%20without%20any%20arguments.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./indexOOBError-07HWLdJM.js"),__vite__mapDeps([388,1])),path:"/reference/forge-std/indexOOBError.html",type:"mdx",filePath:"reference/forge-std/indexOOBError.mdx",content:"%23%23%20%60indexOOBError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.indexOOBError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20access%20an%20element%20of%20an%20array%20that%20is%20out%20of%20bounds.%0A%0AWill%20not%20work%20for%20empty%20arrays%20in%20external%20contracts.%20For%20those%2C%20use%20%60expectRevert%60%20without%20any%20arguments.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./make-addr-and-key-PYQAWjvX.js"),__vite__mapDeps([389,1])),path:"/reference/forge-std/make-addr-and-key",type:"mdx",filePath:"reference/forge-std/make-addr-and-key.mdx",content:"%23%23%20%60makeAddrAndKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20makeAddrAndKey(string%20memory%20name)%20internal%20returns(address%20addr%2C%20uint256%20privateKey)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20an%20address%20and%20private%20key%20derived%20from%20the%20provided%20%60name%60.%0A%0AA%20%5B%60label%60%5D(%2Freference%2Fcheatcodes%2Flabel.mdx)%20is%20created%20for%20the%20derived%20address%20with%20the%20provided%20%60name%60%20used%20as%20the%20label%20value.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A(address%20alice%2C%20uint256%20key)%20%3D%20makeAddrAndKey(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%20%2F%2F%200x328809bc894f92807417d2dad6b7c998c1afdac6%0Aemit%20log_uint(key)%3B%20%2F%2F%2070564938991660933374592024341600875602376452319261984317470407481576058979585%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./make-addr-and-key-PYQAWjvX.js"),__vite__mapDeps([389,1])),path:"/reference/forge-std/make-addr-and-key.html",type:"mdx",filePath:"reference/forge-std/make-addr-and-key.mdx",content:"%23%23%20%60makeAddrAndKey%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20makeAddrAndKey(string%20memory%20name)%20internal%20returns(address%20addr%2C%20uint256%20privateKey)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20an%20address%20and%20private%20key%20derived%20from%20the%20provided%20%60name%60.%0A%0AA%20%5B%60label%60%5D(%2Freference%2Fcheatcodes%2Flabel.mdx)%20is%20created%20for%20the%20derived%20address%20with%20the%20provided%20%60name%60%20used%20as%20the%20label%20value.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0A(address%20alice%2C%20uint256%20key)%20%3D%20makeAddrAndKey(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%20%2F%2F%200x328809bc894f92807417d2dad6b7c998c1afdac6%0Aemit%20log_uint(key)%3B%20%2F%2F%2070564938991660933374592024341600875602376452319261984317470407481576058979585%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./make-addr-DZ8Uz83u.js"),__vite__mapDeps([390,1])),path:"/reference/forge-std/make-addr",type:"mdx",filePath:"reference/forge-std/make-addr.mdx",content:"%23%23%20%60makeAddr%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20makeAddr(string%20memory%20name)%20internal%20returns(address%20addr)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20an%20address%20derived%20from%20the%20provided%20%60name%60.%0A%0AA%20%5B%60label%60%5D(%2Freference%2Fcheatcodes%2Flabel.mdx)%20is%20created%20for%20the%20derived%20address%20with%20the%20provided%20%60name%60%20used%20as%20the%20label%20value.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%20%2F%2F%200x328809bc894f92807417d2dad6b7c998c1afdac6%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./make-addr-DZ8Uz83u.js"),__vite__mapDeps([390,1])),path:"/reference/forge-std/make-addr.html",type:"mdx",filePath:"reference/forge-std/make-addr.mdx",content:"%23%23%20%60makeAddr%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20makeAddr(string%20memory%20name)%20internal%20returns(address%20addr)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ACreates%20an%20address%20derived%20from%20the%20provided%20%60name%60.%0A%0AA%20%5B%60label%60%5D(%2Freference%2Fcheatcodes%2Flabel.mdx)%20is%20created%20for%20the%20derived%20address%20with%20the%20provided%20%60name%60%20used%20as%20the%20label%20value.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Aaddress%20alice%20%3D%20makeAddr(%22alice%22)%3B%0Aemit%20log_address(alice)%3B%20%2F%2F%200x328809bc894f92807417d2dad6b7c998c1afdac6%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./memOverflowError-BWDA2rw8.js"),__vite__mapDeps([391,1])),path:"/reference/forge-std/memOverflowError",type:"mdx",filePath:"reference/forge-std/memOverflowError.mdx",content:"%23%23%20%60memOverflowError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.memOverflowError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20allocate%20a%20dynamic%20memory%20array%20with%20more%20than%202%5E64-1%20items.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./memOverflowError-BWDA2rw8.js"),__vite__mapDeps([391,1])),path:"/reference/forge-std/memOverflowError.html",type:"mdx",filePath:"reference/forge-std/memOverflowError.mdx",content:"%23%23%20%60memOverflowError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.memOverflowError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20allocate%20a%20dynamic%20memory%20array%20with%20more%20than%202%5E64-1%20items.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./noGasMetering-BH0X-8pI.js"),__vite__mapDeps([392,1])),path:"/reference/forge-std/noGasMetering",type:"mdx",filePath:"reference/forge-std/noGasMetering.mdx",content:"%23%23%20%60noGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Amodifier%20noGasMetering()%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20function%20modifier%20that%20turns%20off%20gas%20metering%20for%20the%20life%20of%20the%20function.%0A%0ANote%2C%20there%20is%20some%20gas%20associated%20with%20calling%20the%20cheatcode%2C%20so%20you%20will%20see%20some%20gas%20usage%20(albeit%20small)%20when%20using%20this%20modifier.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20addInLoop()%20internal%20returns%20(uint256)%20%7B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20for%20(uint256%20i%3B%20i%20%3C%2010000%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20b%20%2B%20i%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20b%3B%0A%7D%0A%0Afunction%20addInLoopNoGas()%20internal%20noGasMetering%20returns%20(uint256)%20%7B%0A%20%20%20%20return%20addInLoop()%3B%0A%7D%0A%0Afunction%20testFunc()%20external%20%7B%0A%20%20uint256%20gas_start%20%3D%20gasleft()%3B%0A%20%20addInLoop()%3B%0A%20%20uint256%20gas_used%20%3D%20gas_start%20-%20gasleft()%3B%0A%0A%20%20uint256%20gas_start_no_metering%20%3D%20gasleft()%3B%0A%20%20addInLoopNoGas()%3B%0A%20%20uint256%20gas_used_no_metering%20%3D%20gas_start_no_metering%20-%20gasleft()%3B%0A%0A%20%20emit%20log_named_uint(%22Gas%20Metering%22%2C%20gas_used)%3B%0A%20%20emit%20log_named_uint(%22No%20Gas%20Metering%22%2C%20gas_used_no_metering)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60%0A%5BPASS%5D%20testFunc()%20(gas%3A%201887191)%0ALogs%3A%0A%20%20Gas%20Metering%3A%201880082%0A%20%20No%20Gas%20Metering%3A%203024%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./noGasMetering-BH0X-8pI.js"),__vite__mapDeps([392,1])),path:"/reference/forge-std/noGasMetering.html",type:"mdx",filePath:"reference/forge-std/noGasMetering.mdx",content:"%23%23%20%60noGasMetering%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Amodifier%20noGasMetering()%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AA%20function%20modifier%20that%20turns%20off%20gas%20metering%20for%20the%20life%20of%20the%20function.%0A%0ANote%2C%20there%20is%20some%20gas%20associated%20with%20calling%20the%20cheatcode%2C%20so%20you%20will%20see%20some%20gas%20usage%20(albeit%20small)%20when%20using%20this%20modifier.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Afunction%20addInLoop()%20internal%20returns%20(uint256)%20%7B%0A%20%20%20%20uint256%20b%3B%0A%20%20%20%20for%20(uint256%20i%3B%20i%20%3C%2010000%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20b%20%2B%20i%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20b%3B%0A%7D%0A%0Afunction%20addInLoopNoGas()%20internal%20noGasMetering%20returns%20(uint256)%20%7B%0A%20%20%20%20return%20addInLoop()%3B%0A%7D%0A%0Afunction%20testFunc()%20external%20%7B%0A%20%20uint256%20gas_start%20%3D%20gasleft()%3B%0A%20%20addInLoop()%3B%0A%20%20uint256%20gas_used%20%3D%20gas_start%20-%20gasleft()%3B%0A%0A%20%20uint256%20gas_start_no_metering%20%3D%20gasleft()%3B%0A%20%20addInLoopNoGas()%3B%0A%20%20uint256%20gas_used_no_metering%20%3D%20gas_start_no_metering%20-%20gasleft()%3B%0A%0A%20%20emit%20log_named_uint(%22Gas%20Metering%22%2C%20gas_used)%3B%0A%20%20emit%20log_named_uint(%22No%20Gas%20Metering%22%2C%20gas_used_no_metering)%3B%0A%7D%0A%60%60%60%0A%0A%60%60%60%0A%5BPASS%5D%20testFunc()%20(gas%3A%201887191)%0ALogs%3A%0A%20%20Gas%20Metering%3A%201880082%0A%20%20No%20Gas%20Metering%3A%203024%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Cte4KJiu.js"),__vite__mapDeps([393,1])),path:"/reference/forge-std/overview",type:"mdx",filePath:"reference/forge-std/overview.mdx",content:"%23%23%20Forge%20Standard%20Library%20Reference%0A%0AForge%20Standard%20Library%20(Forge%20Std%20for%20short)%20is%20a%20collection%20of%20helpful%20contracts%20that%20make%20writing%20tests%20easier%2C%20faster%2C%20and%20more%20user-friendly.%0A%0AUsing%20Forge%20Std%20is%20the%20preferred%20way%20of%20writing%20tests%20with%20Foundry.%0A%0AWhat's%20included%3A%0A%0A-%20%60Vm.sol%60%3A%20Up-to-date%20%5Bcheatcodes%20interface%5D(%2Freference%2Fcheatcodes%2Foverview%23cheatcodes-interface)%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7BVm%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%20%20%60%60%60%0A%0A-%20%5B%60console.sol%60%5D(%2Freference%2Fforge-std%2Fconsole-log.mdx)%20and%20%60console2.sol%60%3A%20Hardhat-style%20logging%20functionality%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%0A%20%20%60%60%60%0A%0A%20%20**Note%3A**%20%60console2.sol%60%20contains%20patches%20to%20%60console.sol%60%20that%20allow%20Forge%20to%20decode%20traces%20for%20calls%20to%20the%20console%2C%20but%20it%20is%20not%20compatible%20with%20Hardhat.%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7Bconsole2%7D%20from%20%22forge-std%2Fconsole2.sol%22%3B%0A%20%20%60%60%60%0A%0A-%20%60Script.sol%60%3A%20Basic%20utilities%20for%20%5BSolidity%20scripting%5D(%2Fguides%2Fscripting-with-solidity)%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7BScript%7D%20from%20%22forge-std%2FScript.sol%22%3B%0A%20%20%60%60%60%0A%0A-%20%60Test.sol%60%3A%20The%20complete%20Forge%20Std%20experience%20(more%20details%20%5Bbelow%5D(%23forge-stds-test))%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%20%20%60%60%60%0A%0A%23%23%23%20Forge%20Std's%20%60Test%60%0A%0AThe%20%60Test%60%20contract%20in%20%60Test.sol%60%20provides%20all%20the%20essential%20functionality%20you%20need%20to%20get%20started%20writing%20tests.%0A%0ASimply%20import%20%60Test.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20ContractTest%20is%20Test%20%7B%20...%0A%60%60%60%0A%0AWhat's%20included%3A%0A%0A-%20Std%20Libraries%0A%0A%20%20-%20%5BStd%20Logs%5D(%2Freference%2Fforge-std%2Fstd-logs.mdx)%3A%20Expand%20upon%20the%20logging%20events%20from%20the%20DSTest%20library.%0A%20%20-%20%5BStd%20Assertions%5D(%2Freference%2Fforge-std%2Fstd-assertions.mdx)%3A%20Expand%20upon%20the%20assertion%20functions%20from%20the%20DSTest%20library.%0A%20%20-%20%5BStd%20Cheats%5D(%2Freference%2Fforge-std%2Fstd-cheats.mdx)%3A%20Wrappers%20around%20Forge%20cheatcodes%20for%20improved%20safety%20and%20DX.%0A%20%20-%20%5BStd%20Errors%5D(%2Freference%2Fforge-std%2Fstd-errors.mdx)%3A%20Wrappers%20around%20common%20internal%20Solidity%20errors%20and%20reverts.%0A%20%20-%20%5BStd%20Storage%5D(%2Freference%2Fforge-std%2Fstd-storage.mdx)%3A%20Utilities%20for%20storage%20manipulation.%0A%20%20-%20%5BStd%20Math%5D(%2Freference%2Fforge-std%2Fstd-math.mdx)%3A%20Useful%20mathematical%20functions.%0A%20%20-%20%5BScript%20Utils%5D(%2Freference%2Fforge-std%2Fscript-utils.mdx)%3A%20Utility%20functions%20which%20can%20be%20accessed%20in%20tests%20and%20scripts.%0A%20%20-%20%5BConsole%20Logging%5D(%2Freference%2Fforge-std%2Fconsole-log.mdx)%3A%20Console%20logging%20functions.%0A%0A-%20A%20cheatcodes%20instance%20%60vm%60%2C%20from%20which%20you%20invoke%20Forge%20cheatcodes%20(see%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview))%0A%0A%20%20%60%60%60solidity%0A%20%20vm.startPrank(alice)%3B%0A%20%20%60%60%60%0A%0A-%20All%20Hardhat%20%60console%60%20functions%20for%20logging%20(see%20%5BConsole%20Logging%5D(%2Freference%2Fforge-std%2Fconsole-log.mdx))%0A%0A%20%20%60%60%60solidity%0A%20%20console.log(alice.balance)%3B%20%2F%2F%20or%20%60console2%60%0A%20%20%60%60%60%0A%0A-%20All%20Dappsys%20Test%20functions%20for%20asserting%20and%20logging%20(see%20%5BDappsys%20Test%20reference%5D(%2Freference%2Fds-test.md))%0A%0A%20%20%60%60%60solidity%0A%20%20assertEq(dai.balanceOf(alice)%2C%2010000e18)%3B%0A%20%20%60%60%60%0A%0A-%20Utility%20functions%20also%20included%20in%20%60Script.sol%60%20(see%20%5BScript%20Utils%5D(%2Freference%2Fforge-std%2Fscript-utils.mdx))%0A%0A%20%20%60%60%60solidity%0A%20%20%2F%2F%20Compute%20the%20address%20a%20contract%20will%20be%20deployed%20at%20for%20a%20given%20deployer%20address%20and%20nonce%0A%20%20address%20futureContract%20%3D%20computeCreateAddress(alice%2C%201)%3B%0A%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./overview-Cte4KJiu.js"),__vite__mapDeps([393,1])),path:"/reference/forge-std/overview.html",type:"mdx",filePath:"reference/forge-std/overview.mdx",content:"%23%23%20Forge%20Standard%20Library%20Reference%0A%0AForge%20Standard%20Library%20(Forge%20Std%20for%20short)%20is%20a%20collection%20of%20helpful%20contracts%20that%20make%20writing%20tests%20easier%2C%20faster%2C%20and%20more%20user-friendly.%0A%0AUsing%20Forge%20Std%20is%20the%20preferred%20way%20of%20writing%20tests%20with%20Foundry.%0A%0AWhat's%20included%3A%0A%0A-%20%60Vm.sol%60%3A%20Up-to-date%20%5Bcheatcodes%20interface%5D(%2Freference%2Fcheatcodes%2Foverview%23cheatcodes-interface)%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7BVm%7D%20from%20%22forge-std%2FVm.sol%22%3B%0A%20%20%60%60%60%0A%0A-%20%5B%60console.sol%60%5D(%2Freference%2Fforge-std%2Fconsole-log.mdx)%20and%20%60console2.sol%60%3A%20Hardhat-style%20logging%20functionality%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7Bconsole%7D%20from%20%22forge-std%2Fconsole.sol%22%3B%0A%20%20%60%60%60%0A%0A%20%20**Note%3A**%20%60console2.sol%60%20contains%20patches%20to%20%60console.sol%60%20that%20allow%20Forge%20to%20decode%20traces%20for%20calls%20to%20the%20console%2C%20but%20it%20is%20not%20compatible%20with%20Hardhat.%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7Bconsole2%7D%20from%20%22forge-std%2Fconsole2.sol%22%3B%0A%20%20%60%60%60%0A%0A-%20%60Script.sol%60%3A%20Basic%20utilities%20for%20%5BSolidity%20scripting%5D(%2Fguides%2Fscripting-with-solidity)%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7BScript%7D%20from%20%22forge-std%2FScript.sol%22%3B%0A%20%20%60%60%60%0A%0A-%20%60Test.sol%60%3A%20The%20complete%20Forge%20Std%20experience%20(more%20details%20%5Bbelow%5D(%23forge-stds-test))%0A%0A%20%20%60%60%60solidity%0A%20%20import%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%20%20%60%60%60%0A%0A%23%23%23%20Forge%20Std's%20%60Test%60%0A%0AThe%20%60Test%60%20contract%20in%20%60Test.sol%60%20provides%20all%20the%20essential%20functionality%20you%20need%20to%20get%20started%20writing%20tests.%0A%0ASimply%20import%20%60Test.sol%60%20and%20inherit%20from%20%60Test%60%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BTest%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%0Acontract%20ContractTest%20is%20Test%20%7B%20...%0A%60%60%60%0A%0AWhat's%20included%3A%0A%0A-%20Std%20Libraries%0A%0A%20%20-%20%5BStd%20Logs%5D(%2Freference%2Fforge-std%2Fstd-logs.mdx)%3A%20Expand%20upon%20the%20logging%20events%20from%20the%20DSTest%20library.%0A%20%20-%20%5BStd%20Assertions%5D(%2Freference%2Fforge-std%2Fstd-assertions.mdx)%3A%20Expand%20upon%20the%20assertion%20functions%20from%20the%20DSTest%20library.%0A%20%20-%20%5BStd%20Cheats%5D(%2Freference%2Fforge-std%2Fstd-cheats.mdx)%3A%20Wrappers%20around%20Forge%20cheatcodes%20for%20improved%20safety%20and%20DX.%0A%20%20-%20%5BStd%20Errors%5D(%2Freference%2Fforge-std%2Fstd-errors.mdx)%3A%20Wrappers%20around%20common%20internal%20Solidity%20errors%20and%20reverts.%0A%20%20-%20%5BStd%20Storage%5D(%2Freference%2Fforge-std%2Fstd-storage.mdx)%3A%20Utilities%20for%20storage%20manipulation.%0A%20%20-%20%5BStd%20Math%5D(%2Freference%2Fforge-std%2Fstd-math.mdx)%3A%20Useful%20mathematical%20functions.%0A%20%20-%20%5BScript%20Utils%5D(%2Freference%2Fforge-std%2Fscript-utils.mdx)%3A%20Utility%20functions%20which%20can%20be%20accessed%20in%20tests%20and%20scripts.%0A%20%20-%20%5BConsole%20Logging%5D(%2Freference%2Fforge-std%2Fconsole-log.mdx)%3A%20Console%20logging%20functions.%0A%0A-%20A%20cheatcodes%20instance%20%60vm%60%2C%20from%20which%20you%20invoke%20Forge%20cheatcodes%20(see%20%5BCheatcodes%20Reference%5D(%2Freference%2Fcheatcodes%2Foverview))%0A%0A%20%20%60%60%60solidity%0A%20%20vm.startPrank(alice)%3B%0A%20%20%60%60%60%0A%0A-%20All%20Hardhat%20%60console%60%20functions%20for%20logging%20(see%20%5BConsole%20Logging%5D(%2Freference%2Fforge-std%2Fconsole-log.mdx))%0A%0A%20%20%60%60%60solidity%0A%20%20console.log(alice.balance)%3B%20%2F%2F%20or%20%60console2%60%0A%20%20%60%60%60%0A%0A-%20All%20Dappsys%20Test%20functions%20for%20asserting%20and%20logging%20(see%20%5BDappsys%20Test%20reference%5D(%2Freference%2Fds-test.md))%0A%0A%20%20%60%60%60solidity%0A%20%20assertEq(dai.balanceOf(alice)%2C%2010000e18)%3B%0A%20%20%60%60%60%0A%0A-%20Utility%20functions%20also%20included%20in%20%60Script.sol%60%20(see%20%5BScript%20Utils%5D(%2Freference%2Fforge-std%2Fscript-utils.mdx))%0A%0A%20%20%60%60%60solidity%0A%20%20%2F%2F%20Compute%20the%20address%20a%20contract%20will%20be%20deployed%20at%20for%20a%20given%20deployer%20address%20and%20nonce%0A%20%20address%20futureContract%20%3D%20computeCreateAddress(alice%2C%201)%3B%0A%20%20%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./percentDelta-lo0zY_tv.js"),__vite__mapDeps([394,1])),path:"/reference/forge-std/percentDelta",type:"mdx",filePath:"reference/forge-std/percentDelta.mdx",content:"%23%23%20%60percentDelta%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20percentDelta(uint256%20a%2C%20uint256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20percentDelta(int256%20a%2C%20int256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20difference%20between%20two%20numbers%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0AMore%20precisely%2C%20%60percentDelta(a%2C%20b)%60%20computes%20%60abs((a-b)%20%2F%20b)%20*%201e18%60.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20percent150%20%3D%20stdMath.percentDelta(uint256(125)%2C%2050)%3B%0Auint256%20percent60%20%3D%20stdMath.percentDelta(uint256(50)%2C%20125)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./percentDelta-lo0zY_tv.js"),__vite__mapDeps([394,1])),path:"/reference/forge-std/percentDelta.html",type:"mdx",filePath:"reference/forge-std/percentDelta.mdx",content:"%23%23%20%60percentDelta%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20percentDelta(uint256%20a%2C%20uint256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20percentDelta(int256%20a%2C%20int256%20b)%20internal%20pure%20returns%20(uint256)%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReturns%20the%20difference%20between%20two%20numbers%20in%20percentage%2C%20where%20%601e18%60%20is%20100%25.%0AMore%20precisely%2C%20%60percentDelta(a%2C%20b)%60%20computes%20%60abs((a-b)%20%2F%20b)%20*%201e18%60.%0A%0A%23%23%23%20Example%0A%0A%60%60%60solidity%0Auint256%20percent150%20%3D%20stdMath.percentDelta(uint256(125)%2C%2050)%3B%0Auint256%20percent60%20%3D%20stdMath.percentDelta(uint256(50)%2C%20125)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./popError-DCimdZZ7.js"),__vite__mapDeps([395,1])),path:"/reference/forge-std/popError",type:"mdx",filePath:"reference/forge-std/popError.mdx",content:"%23%23%20%60popError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.popError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20pop%20an%20element%20off%20of%20an%20empty%20array.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./popError-DCimdZZ7.js"),__vite__mapDeps([395,1])),path:"/reference/forge-std/popError.html",type:"mdx",filePath:"reference/forge-std/popError.mdx",content:"%23%23%20%60popError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.popError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20pop%20an%20element%20off%20of%20an%20empty%20array.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./read-CYe3Vjje.js"),__vite__mapDeps([396,1])),path:"/reference/forge-std/read",type:"mdx",filePath:"reference/forge-std/read.mdx",content:"%23%23%20%60read%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20read_bytes32(StdStorage%20storage%20self)%20internal%20returns%20(bytes32)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_bool(StdStorage%20storage%20self)%20internal%20returns%20(bool)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_address(StdStorage%20storage%20self)%20internal%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_uint(StdStorage%20storage%20self)%20internal%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_int(StdStorage%20storage%20self)%20internal%20returns%20(int256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReads%20the%20value%20from%20the%20storage%20slot%20as%20%60bytes32%60%2C%20%60bool%60%2C%20%60address%60%2C%20%60uint256%60%2C%20or%20%60int256%60.%0A%0AReverts%20with%20a%20message%20if%20unsuccessful.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./read-CYe3Vjje.js"),__vite__mapDeps([396,1])),path:"/reference/forge-std/read.html",type:"mdx",filePath:"reference/forge-std/read.mdx",content:"%23%23%20%60read%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20read_bytes32(StdStorage%20storage%20self)%20internal%20returns%20(bytes32)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_bool(StdStorage%20storage%20self)%20internal%20returns%20(bool)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_address(StdStorage%20storage%20self)%20internal%20returns%20(address)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_uint(StdStorage%20storage%20self)%20internal%20returns%20(uint256)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20read_int(StdStorage%20storage%20self)%20internal%20returns%20(int256)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AReads%20the%20value%20from%20the%20storage%20slot%20as%20%60bytes32%60%2C%20%60bool%60%2C%20%60address%60%2C%20%60uint256%60%2C%20or%20%60int256%60.%0A%0AReverts%20with%20a%20message%20if%20unsuccessful.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rewind-C5Rj-SCb.js"),__vite__mapDeps([397,1])),path:"/reference/forge-std/rewind",type:"mdx",filePath:"reference/forge-std/rewind.mdx",content:"%23%23%20%60rewind%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20rewind(uint256%20time)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARewinds%20%60block.timestamp%60%20by%20the%20specified%20number%20of%20seconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AassertEq(block.timestamp%2C%203600)%3B%0Arewind(3600)%3B%0AassertEq(block.timestamp%2C%200)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./rewind-C5Rj-SCb.js"),__vite__mapDeps([397,1])),path:"/reference/forge-std/rewind.html",type:"mdx",filePath:"reference/forge-std/rewind.mdx",content:"%23%23%20%60rewind%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20rewind(uint256%20time)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ARewinds%20%60block.timestamp%60%20by%20the%20specified%20number%20of%20seconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AassertEq(block.timestamp%2C%203600)%3B%0Arewind(3600)%3B%0AassertEq(block.timestamp%2C%200)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./script-utils-ByqwCSqu.js"),__vite__mapDeps([398,1])),path:"/reference/forge-std/script-utils",type:"mdx",filePath:"reference/forge-std/script-utils.mdx",content:"%23%23%20Script%20Utils%0A%0A-%20%5B%60computeCreateAddress%60%5D(%2Freference%2Fforge-std%2Fcompute-create-address.mdx)%0A-%20%5B%60deriveRememberKey%60%5D(%2Freference%2Fforge-std%2Fderive-remember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./script-utils-ByqwCSqu.js"),__vite__mapDeps([398,1])),path:"/reference/forge-std/script-utils.html",type:"mdx",filePath:"reference/forge-std/script-utils.mdx",content:"%23%23%20Script%20Utils%0A%0A-%20%5B%60computeCreateAddress%60%5D(%2Freference%2Fforge-std%2Fcompute-create-address.mdx)%0A-%20%5B%60deriveRememberKey%60%5D(%2Freference%2Fforge-std%2Fderive-remember-key.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sig-OcWHcoiN.js"),__vite__mapDeps([399,1])),path:"/reference/forge-std/sig",type:"mdx",filePath:"reference/forge-std/sig.mdx",content:"%23%23%20%60sig%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20sig(StdStorage%20storage%20self%2C%20bytes4%20_sig)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20sig(StdStorage%20storage%20self%2C%20string%20memory%20_sig)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%204-byte%20selector%20of%20the%20function%20to%20static%20call.%0A%0ADefault%20value%3A%20%60hex%2200000000%22%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20slot%20%3D%20stdstore%0A%20%20%20%20.target(addr)%0A%20%20%20%20.sig(addr.fun.selector)%0A%20%20%20%20.with_key(1)%0A%20%20%20%20.find()%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Auint256%20slot%20%3D%20stdstore%0A%20%20%20%20.target(addr)%0A%20%20%20%20.sig(%22fun(uint256)%22)%0A%20%20%20%20.with_key(1)%0A%20%20%20%20.find()%3B%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./sig-OcWHcoiN.js"),__vite__mapDeps([399,1])),path:"/reference/forge-std/sig.html",type:"mdx",filePath:"reference/forge-std/sig.mdx",content:"%23%23%20%60sig%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20sig(StdStorage%20storage%20self%2C%20bytes4%20_sig)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20sig(StdStorage%20storage%20self%2C%20string%20memory%20_sig)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%204-byte%20selector%20of%20the%20function%20to%20static%20call.%0A%0ADefault%20value%3A%20%60hex%2200000000%22%60%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20slot%20%3D%20stdstore%0A%20%20%20%20.target(addr)%0A%20%20%20%20.sig(addr.fun.selector)%0A%20%20%20%20.with_key(1)%0A%20%20%20%20.find()%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Auint256%20slot%20%3D%20stdstore%0A%20%20%20%20.target(addr)%0A%20%20%20%20.sig(%22fun(uint256)%22)%0A%20%20%20%20.with_key(1)%0A%20%20%20%20.find()%3B%0A%60%60%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./skip-Bxr4s6ak.js"),__vite__mapDeps([400,1])),path:"/reference/forge-std/skip",type:"mdx",filePath:"reference/forge-std/skip.mdx",content:"%23%23%20%60skip%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20skip(uint256%20time)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASkips%20forward%20%60block.timestamp%60%20by%20the%20specified%20number%20of%20seconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AassertEq(block.timestamp%2C%200)%3B%0Askip(3600)%3B%0AassertEq(block.timestamp%2C%203600)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./skip-Bxr4s6ak.js"),__vite__mapDeps([400,1])),path:"/reference/forge-std/skip.html",type:"mdx",filePath:"reference/forge-std/skip.mdx",content:"%23%23%20%60skip%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20skip(uint256%20time)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASkips%20forward%20%60block.timestamp%60%20by%20the%20specified%20number%20of%20seconds.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0AassertEq(block.timestamp%2C%200)%3B%0Askip(3600)%3B%0AassertEq(block.timestamp%2C%203600)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./startHoax-CEuBQXDq.js"),__vite__mapDeps([401,1])),path:"/reference/forge-std/startHoax",type:"mdx",filePath:"reference/forge-std/startHoax.mdx",content:"%23%23%20%60startHoax%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who%2C%20address%20origin)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who%2C%20address%20origin%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStart%20a%20%5Bperpetual%20%60prank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%20from%20an%20address%20that%20has%20some%20ether.%0A%0AIf%20the%20balance%20is%20not%20specified%2C%20it%20will%20be%20set%20to%202%5E128%20wei.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./startHoax-CEuBQXDq.js"),__vite__mapDeps([401,1])),path:"/reference/forge-std/startHoax.html",type:"mdx",filePath:"reference/forge-std/startHoax.mdx",content:"%23%23%20%60startHoax%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who%2C%20address%20origin)%20public%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20startHoax(address%20who%2C%20address%20origin%2C%20uint256%20give)%20public%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AStart%20a%20%5Bperpetual%20%60prank%60%5D(%2Freference%2Fcheatcodes%2Fstart-prank.mdx)%20from%20an%20address%20that%20has%20some%20ether.%0A%0AIf%20the%20balance%20is%20not%20specified%2C%20it%20will%20be%20set%20to%202%5E128%20wei.%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-assertions-CCMbXKo-.js"),__vite__mapDeps([402,1])),path:"/reference/forge-std/std-assertions",type:"mdx",filePath:"reference/forge-std/std-assertions.mdx",content:"%23%23%20Std%20Assertions%0A%0A-%20%5B%60fail%60%5D(%2Freference%2Fforge-std%2Ffail.mdx)%0A-%20%5B%60assertTrue%60%5D(%2Freference%2Fforge-std%2FassertTrue.mdx)%0A-%20%5B%60assertFalse%60%5D(%2Freference%2Fforge-std%2FassertFalse.mdx)%0A-%20%5B%60assertEq%60%5D(%2Freference%2Fforge-std%2FassertEq.mdx)%0A-%20%5B%60assertEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertEqDecimal.mdx)%0A-%20%5B%60assertNotEq%60%5D(%2Freference%2Fforge-std%2FassertNotEq.mdx)%0A-%20%5B%60assertNotEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertNotEqDecimal.mdx)%0A-%20%5B%60assertLt%60%5D(%2Freference%2Fforge-std%2FassertLt.mdx)%0A-%20%5B%60assertLtDecimal%60%5D(%2Freference%2Fforge-std%2FassertLtDecimal.mdx)%0A-%20%5B%60assertGt%60%5D(%2Freference%2Fforge-std%2FassertGt.mdx)%0A-%20%5B%60assertGtDecimal%60%5D(%2Freference%2Fforge-std%2FassertGtDecimal.mdx)%0A-%20%5B%60assertLe%60%5D(%2Freference%2Fforge-std%2FassertLe.mdx)%0A-%20%5B%60assertLeDecimal%60%5D(%2Freference%2Fforge-std%2FassertLeDecimal.mdx)%0A-%20%5B%60assertGe%60%5D(%2Freference%2Fforge-std%2FassertGe.mdx)%0A-%20%5B%60assertGeDecimal%60%5D(%2Freference%2Fforge-std%2FassertGeDecimal.mdx)%0A-%20%5B%60assertApproxEqAbs%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbs.mdx)%0A-%20%5B%60assertApproxEqAbsDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbsDecimal.mdx)%0A-%20%5B%60assertApproxEqRel%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRel.mdx)%0A-%20%5B%60assertApproxEqRelDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRelDecimal.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-assertions-CCMbXKo-.js"),__vite__mapDeps([402,1])),path:"/reference/forge-std/std-assertions.html",type:"mdx",filePath:"reference/forge-std/std-assertions.mdx",content:"%23%23%20Std%20Assertions%0A%0A-%20%5B%60fail%60%5D(%2Freference%2Fforge-std%2Ffail.mdx)%0A-%20%5B%60assertTrue%60%5D(%2Freference%2Fforge-std%2FassertTrue.mdx)%0A-%20%5B%60assertFalse%60%5D(%2Freference%2Fforge-std%2FassertFalse.mdx)%0A-%20%5B%60assertEq%60%5D(%2Freference%2Fforge-std%2FassertEq.mdx)%0A-%20%5B%60assertEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertEqDecimal.mdx)%0A-%20%5B%60assertNotEq%60%5D(%2Freference%2Fforge-std%2FassertNotEq.mdx)%0A-%20%5B%60assertNotEqDecimal%60%5D(%2Freference%2Fforge-std%2FassertNotEqDecimal.mdx)%0A-%20%5B%60assertLt%60%5D(%2Freference%2Fforge-std%2FassertLt.mdx)%0A-%20%5B%60assertLtDecimal%60%5D(%2Freference%2Fforge-std%2FassertLtDecimal.mdx)%0A-%20%5B%60assertGt%60%5D(%2Freference%2Fforge-std%2FassertGt.mdx)%0A-%20%5B%60assertGtDecimal%60%5D(%2Freference%2Fforge-std%2FassertGtDecimal.mdx)%0A-%20%5B%60assertLe%60%5D(%2Freference%2Fforge-std%2FassertLe.mdx)%0A-%20%5B%60assertLeDecimal%60%5D(%2Freference%2Fforge-std%2FassertLeDecimal.mdx)%0A-%20%5B%60assertGe%60%5D(%2Freference%2Fforge-std%2FassertGe.mdx)%0A-%20%5B%60assertGeDecimal%60%5D(%2Freference%2Fforge-std%2FassertGeDecimal.mdx)%0A-%20%5B%60assertApproxEqAbs%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbs.mdx)%0A-%20%5B%60assertApproxEqAbsDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqAbsDecimal.mdx)%0A-%20%5B%60assertApproxEqRel%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRel.mdx)%0A-%20%5B%60assertApproxEqRelDecimal%60%5D(%2Freference%2Fforge-std%2FassertApproxEqRelDecimal.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-cheats-45Lw3CJX.js"),__vite__mapDeps([403,1])),path:"/reference/forge-std/std-cheats",type:"mdx",filePath:"reference/forge-std/std-cheats.mdx",content:"%23%23%20Std%20Cheats%0A%0A-%20%5B%60skip%60%5D(%2Freference%2Fforge-std%2Fskip.mdx)%0A-%20%5B%60rewind%60%5D(%2Freference%2Fforge-std%2Frewind.mdx)%0A-%20%5B%60hoax%60%5D(%2Freference%2Fforge-std%2Fhoax.mdx)%0A-%20%5B%60startHoax%60%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%0A-%20%5B%60deal%60%5D(%2Freference%2Fforge-std%2Fdeal.mdx)%0A-%20%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A-%20%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A-%20%5B%60bound%60%5D(%2Freference%2Fforge-std%2Fbound.mdx)%0A-%20%5B%60changePrank%60%5D(%2Freference%2Fforge-std%2Fchange-prank.mdx)%0A-%20%5B%60makeAddr%60%5D(%2Freference%2Fforge-std%2Fmake-addr.mdx)%0A-%20%5B%60makeAddrAndKey%60%5D(%2Freference%2Fforge-std%2Fmake-addr-and-key.mdx)%0A-%20%5B%60noGasMetering%60%5D(%2Freference%2Fforge-std%2FnoGasMetering.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-cheats-45Lw3CJX.js"),__vite__mapDeps([403,1])),path:"/reference/forge-std/std-cheats.html",type:"mdx",filePath:"reference/forge-std/std-cheats.mdx",content:"%23%23%20Std%20Cheats%0A%0A-%20%5B%60skip%60%5D(%2Freference%2Fforge-std%2Fskip.mdx)%0A-%20%5B%60rewind%60%5D(%2Freference%2Fforge-std%2Frewind.mdx)%0A-%20%5B%60hoax%60%5D(%2Freference%2Fforge-std%2Fhoax.mdx)%0A-%20%5B%60startHoax%60%5D(%2Freference%2Fforge-std%2FstartHoax.mdx)%0A-%20%5B%60deal%60%5D(%2Freference%2Fforge-std%2Fdeal.mdx)%0A-%20%5B%60deployCode%60%5D(%2Freference%2Fforge-std%2FdeployCode.mdx)%0A-%20%5B%60deployCodeTo%60%5D(%2Freference%2Fforge-std%2FdeployCodeTo.mdx)%0A-%20%5B%60bound%60%5D(%2Freference%2Fforge-std%2Fbound.mdx)%0A-%20%5B%60changePrank%60%5D(%2Freference%2Fforge-std%2Fchange-prank.mdx)%0A-%20%5B%60makeAddr%60%5D(%2Freference%2Fforge-std%2Fmake-addr.mdx)%0A-%20%5B%60makeAddrAndKey%60%5D(%2Freference%2Fforge-std%2Fmake-addr-and-key.mdx)%0A-%20%5B%60noGasMetering%60%5D(%2Freference%2Fforge-std%2FnoGasMetering.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-errors-BtIrE8Ro.js"),__vite__mapDeps([404,1])),path:"/reference/forge-std/std-errors",type:"mdx",filePath:"reference/forge-std/std-errors.mdx",content:"%23%23%20Std%20Errors%0A%0A-%20%5B%60assertionError%60%5D(%2Freference%2Fforge-std%2FassertionError.mdx)%0A-%20%5B%60arithmeticError%60%5D(%2Freference%2Fforge-std%2FarithmeticError.mdx)%0A-%20%5B%60divisionError%60%5D(%2Freference%2Fforge-std%2FdivisionError.mdx)%0A-%20%5B%60enumConversionError%60%5D(%2Freference%2Fforge-std%2FenumConversionError.mdx)%0A-%20%5B%60encodeStorageError%60%5D(%2Freference%2Fforge-std%2FencodeStorageError.mdx)%0A-%20%5B%60popError%60%5D(%2Freference%2Fforge-std%2FpopError.mdx)%0A-%20%5B%60indexOOBError%60%5D(%2Freference%2Fforge-std%2FindexOOBError.mdx)%0A-%20%5B%60memOverflowError%60%5D(%2Freference%2Fforge-std%2FmemOverflowError.mdx)%0A-%20%5B%60zeroVarError%60%5D(%2Freference%2Fforge-std%2FzeroVarError.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-errors-BtIrE8Ro.js"),__vite__mapDeps([404,1])),path:"/reference/forge-std/std-errors.html",type:"mdx",filePath:"reference/forge-std/std-errors.mdx",content:"%23%23%20Std%20Errors%0A%0A-%20%5B%60assertionError%60%5D(%2Freference%2Fforge-std%2FassertionError.mdx)%0A-%20%5B%60arithmeticError%60%5D(%2Freference%2Fforge-std%2FarithmeticError.mdx)%0A-%20%5B%60divisionError%60%5D(%2Freference%2Fforge-std%2FdivisionError.mdx)%0A-%20%5B%60enumConversionError%60%5D(%2Freference%2Fforge-std%2FenumConversionError.mdx)%0A-%20%5B%60encodeStorageError%60%5D(%2Freference%2Fforge-std%2FencodeStorageError.mdx)%0A-%20%5B%60popError%60%5D(%2Freference%2Fforge-std%2FpopError.mdx)%0A-%20%5B%60indexOOBError%60%5D(%2Freference%2Fforge-std%2FindexOOBError.mdx)%0A-%20%5B%60memOverflowError%60%5D(%2Freference%2Fforge-std%2FmemOverflowError.mdx)%0A-%20%5B%60zeroVarError%60%5D(%2Freference%2Fforge-std%2FzeroVarError.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-logs--Vm_6my0.js"),__vite__mapDeps([405,1])),path:"/reference/forge-std/std-logs",type:"mdx",filePath:"reference/forge-std/std-logs.mdx",content:"%23%23%20Std%20Logs%0A%0AStd%20Logs%20expand%20upon%20the%20logging%20events%20from%20the%20%5B%60DSTest%60%5D(..%2Fds-test.md%23logging)%20library.%0A%0A%23%23%23%20Events%0A%0A%60%60%60solidity%0Aevent%20log_array(uint256%5B%5D%20val)%3B%0Aevent%20log_array(int256%5B%5D%20val)%3B%0Aevent%20log_named_array(string%20key%2C%20uint256%5B%5D%20val)%3B%0Aevent%20log_named_array(string%20key%2C%20int256%5B%5D%20val)%3B%0A%60%60%60%0A%0A%23%23%23%20Usage%0A%0AThis%20section%20provides%20usage%20examples.%0A%0A%23%23%23%23%20log%5C_array%0A%0A%60%60%60solidity%0Aevent%20log_array(%3Ctype%3E%5B%5D%20val)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int256%60%2C%20%60uint256%60%2C%20%60address%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0A%2F%2F%20Assuming%20storage%0A%2F%2F%20uint256%5B%5D%20data%20%3D%20%5B10%2C%2020%2C%2030%2C%2040%2C%2050%5D%3B%20%0A%0Aemit%20log_array(data)%3B%0A%60%60%60%0A%0A%23%23%23%23%20log%5C_named%5C_array%0A%0A%60%60%60solidity%0Aevent%20log_named_array(string%20key%2C%20%3Ctype%3E%5B%5D%20val)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int256%60%2C%20%60uint256%60%2C%20%60address%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0A%2F%2F%20Assuming%20storage%0A%2F%2F%20uint256%5B%5D%20data%20%3D%20%5B10%2C%2020%2C%2030%2C%2040%2C%2050%5D%3B%20%0A%0Aemit%20log_named_array(%22Data%22%2C%20data)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-logs--Vm_6my0.js"),__vite__mapDeps([405,1])),path:"/reference/forge-std/std-logs.html",type:"mdx",filePath:"reference/forge-std/std-logs.mdx",content:"%23%23%20Std%20Logs%0A%0AStd%20Logs%20expand%20upon%20the%20logging%20events%20from%20the%20%5B%60DSTest%60%5D(..%2Fds-test.md%23logging)%20library.%0A%0A%23%23%23%20Events%0A%0A%60%60%60solidity%0Aevent%20log_array(uint256%5B%5D%20val)%3B%0Aevent%20log_array(int256%5B%5D%20val)%3B%0Aevent%20log_named_array(string%20key%2C%20uint256%5B%5D%20val)%3B%0Aevent%20log_named_array(string%20key%2C%20int256%5B%5D%20val)%3B%0A%60%60%60%0A%0A%23%23%23%20Usage%0A%0AThis%20section%20provides%20usage%20examples.%0A%0A%23%23%23%23%20log%5C_array%0A%0A%60%60%60solidity%0Aevent%20log_array(%3Ctype%3E%5B%5D%20val)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int256%60%2C%20%60uint256%60%2C%20%60address%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0A%2F%2F%20Assuming%20storage%0A%2F%2F%20uint256%5B%5D%20data%20%3D%20%5B10%2C%2020%2C%2030%2C%2040%2C%2050%5D%3B%20%0A%0Aemit%20log_array(data)%3B%0A%60%60%60%0A%0A%23%23%23%23%20log%5C_named%5C_array%0A%0A%60%60%60solidity%0Aevent%20log_named_array(string%20key%2C%20%3Ctype%3E%5B%5D%20val)%3B%0A%60%60%60%0A%0AWhere%20%60%3Ctype%3E%60%20can%20be%20%60int256%60%2C%20%60uint256%60%2C%20%60address%60.%0A%0A%23%23%23%23%23%20Example%0A%0A%60%60%60solidity%0A%2F%2F%20Assuming%20storage%0A%2F%2F%20uint256%5B%5D%20data%20%3D%20%5B10%2C%2020%2C%2030%2C%2040%2C%2050%5D%3B%20%0A%0Aemit%20log_named_array(%22Data%22%2C%20data)%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-math-DcvnQroB.js"),__vite__mapDeps([406,1])),path:"/reference/forge-std/std-math",type:"mdx",filePath:"reference/forge-std/std-math.mdx",content:"%23%23%20Std%20Math%0A%0A-%20%5B%60abs%60%5D(%2Freference%2Fforge-std%2Fabs.mdx)%0A-%20%5B%60delta%60%5D(%2Freference%2Fforge-std%2Fdelta.mdx)%0A-%20%5B%60percentDelta%60%5D(%2Freference%2Fforge-std%2FpercentDelta.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-math-DcvnQroB.js"),__vite__mapDeps([406,1])),path:"/reference/forge-std/std-math.html",type:"mdx",filePath:"reference/forge-std/std-math.mdx",content:"%23%23%20Std%20Math%0A%0A-%20%5B%60abs%60%5D(%2Freference%2Fforge-std%2Fabs.mdx)%0A-%20%5B%60delta%60%5D(%2Freference%2Fforge-std%2Fdelta.mdx)%0A-%20%5B%60percentDelta%60%5D(%2Freference%2Fforge-std%2FpercentDelta.mdx)%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-storage-DVT4DlDW.js"),__vite__mapDeps([407,1])),path:"/reference/forge-std/std-storage",type:"mdx",filePath:"reference/forge-std/std-storage.mdx",content:"%23%23%20Std%20Storage%0A%0AStd%20Storage%20is%20a%20library%20that%20makes%20manipulating%20storage%20easy.%0A%0ATo%20use%20Std%20Storage%2C%20import%20the%20following%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BstdStorage%2C%20StdStorage%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%60%60%60%0A%0AAdd%20the%20following%20line%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Ausing%20stdStorage%20for%20StdStorage%3B%0A%60%60%60%0A%0AThen%2C%20access%20Std%20Storage%20via%20the%20%60stdstore%60%20instance.%0A%0A%23%23%23%20Functions%0A%0AQuery%20functions%3A%0A%0A-%20%5B%60target%60%5D(%2Freference%2Fforge-std%2Ftarget.mdx)%3A%20Set%20the%20address%20of%20the%20target%20contract%0A-%20%5B%60sig%60%5D(%2Freference%2Fforge-std%2Fsig.mdx)%3A%20Set%20the%204-byte%20selector%20of%20the%20function%20to%20static%20call%0A-%20%5B%60with_key%60%5D(%2Freference%2Fforge-std%2Fwith_key.mdx)%3A%20Pass%20an%20argument%20to%20the%20function%20(can%20be%20used%20multiple%20times)%0A-%20%5B%60depth%60%5D(%2Freference%2Fforge-std%2Fdepth.mdx)%3A%20Set%20the%20position%20of%20the%20value%20in%20the%20%60tuple%60%20(e.g.%20inside%20a%20%60struct%60)%0A-%20%5B%60enable_packed_slots%60%5D(%2Freference%2Fforge-std%2Fenable_packed_slots.mdx)%3A%20Allow%20the%20use%20of%20packed%20storage%20slots%0A%0ATerminator%20functions%3A%0A%0A-%20%5B%60find%60%5D(%2Freference%2Fforge-std%2Ffind.mdx)%3A%20Return%20the%20slot%20number%0A-%20%5B%60checked_write%60%5D(%2Freference%2Fforge-std%2Fchecked_write.mdx)%3A%20Set%20the%20data%20to%20be%20written%20to%20the%20storage%20slot(s)%0A-%20%5B%60read_%3Ctype%3E%60%5D(%2Freference%2Fforge-std%2Fread.mdx)%3A%20Read%20the%20value%20from%20the%20storage%20slot%20as%20%60%3Ctype%3E%60%0A%0A%23%23%23%20Simple%20Example%0A%0A%60playerToCharacter%60%20tracks%20info%20about%20players'%20characters.%0A%0A%60%60%60solidity%0A%2F%2F%20MetaRPG.sol%0A%0Astruct%20Character%20%7B%0A%20%20%20%20string%20name%3B%0A%20%20%20%20uint256%20level%3B%0A%7D%0A%0Amapping%20(address%20%3D%3E%20Character)%20public%20playerToCharacter%3B%0A%60%60%60%0A%0ALet's%20say%20we%20want%20to%20set%20the%20level%20of%20our%20character%20to%20120.%0A%0A%60%60%60solidity%0A%2F%2F%20MetaRPG.t.sol%0A%0Astdstore%0A%20%20%20%20.target(address(metaRpg))%0A%20%20%20%20.sig(%22playerToCharacter(address)%22)%0A%20%20%20%20.with_key(address(this))%0A%20%20%20%20.depth(1)%0A%20%20%20%20.checked_write(120)%3B%0A%60%60%60%0A%0A%23%23%23%20Packed-Slot%20Example%0A%0A%60balanceOf()%60%20returns%20the%20balance%20of%20a%20user%20in%20a%20gas-optimized%20ERC20%20implementation.%0A%60enable_packed_slots()%60%20also%20works%20with%20%5BERC7201%20Namespaced%20Storage%20Slots%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-7201)%2C%20proxy%20patterns%2C%20and%20packed%20slots%20as%20shown%20in%20the%20example%20below%3A%0A%0A%60%60%60%60solidity%0A%2F%2F%20AgoraDollar.sol%0Acontract%20AgoraDollar%20%7B%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20Erc20AccountData%20struct%0A%20%20%20%20%2F%2F%2F%20%40param%20isFrozen%20A%20boolean%20to%20indicate%20if%20the%20account%20is%20frozen%0A%20%20%20%20%2F%2F%2F%20%40param%20balance%20A%20uint248%20to%20store%20the%20balance%20of%20the%20account%0A%20%20%20%20struct%20Erc20AccountData%20%7B%0A%20%20%20%20%20%20%20%20bool%20isFrozen%3B%0A%20%20%20%20%20%20%20%20uint248%20balance%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20Erc20CoreStorage%20struct%0A%20%20%20%20%2F%2F%2F%20%40param%20accountData%20A%20mapping%20of%20address%20to%20Erc20AccountData%20to%20store%20account%20data%0A%20%20%20%20%2F%2F%2F%20%40custom%3Astorage-location%20erc7201%3AAgoraDollarErc1967Proxy.Erc20CoreStorage%0A%20%20%20%20struct%20Erc20CoreStorage%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%2F%20%40dev%20_account%20The%20account%20whose%20data%20we%20are%20accessing%0A%20%20%20%20%20%20%20%20%2F%2F%2F%20%40dev%20_accountData%20The%20account%20data%20for%20the%20account%0A%20%20%20%20%20%20%20%20mapping(address%20_account%20%3D%3E%20Erc20AccountData%20_accountData)%20accountData%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20%60%60%60ERC20_CORE_STORAGE_SLOT_%60%60%60%20is%20the%20storage%20slot%20for%20the%20Erc20CoreStorage%20struct%0A%20%20%20%20%2F%2F%2F%20%40dev%20keccak256(abi.encode(uint256(keccak256(%22AgoraDollarErc1967Proxy.Erc20CoreStorage%22))%20-%201))%20%26%20~bytes32(uint256(0xff))%0A%20%20%20%20bytes32%20internal%20constant%20ERC20_CORE_STORAGE_SLOT_%20%3D%0A%20%20%20%20%20%20%20%200x455730fed596673e69db1907be2e521374ba893f1a04cc5f5dd931616cd6b700%3B%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20%60%60%60getPointerToErc20CoreStorage%60%60%60%20function%20returns%20a%20pointer%20to%20the%20Erc20CoreStorage%20struct%0A%20%20%20%20%2F%2F%2F%20%40return%20%24%20A%20pointer%20to%20the%20Erc20CoreStorage%20struct%0A%20%20%20%20function%20getPointerToErc20CoreStorage()%20internal%20pure%20returns%20(Erc20CoreStorage%20storage%20%24)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%2F%20%40solidity%20memory-safe-assembly%0A%20%20%20%20%20%20%20%20assembly%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24.slot%20%3A%3D%20ERC20_CORE_STORAGE_SLOT_%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20%60%60%60balanceOf%60%60%60%20function%20returns%20the%20token%20balance%20of%20a%20given%20account%0A%20%20%20%20%2F%2F%2F%20%40param%20_account%20The%20account%20to%20check%20the%20balance%20of%0A%20%20%20%20%2F%2F%2F%20%40return%20The%20balance%20of%20the%20account%0A%20%20%20%20function%20balanceOf(address%20_account)%20external%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20getPointerToErc20CoreStorage().accountData%5B_account%5D.balance%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%60%0A%0ALet's%20say%20we%20want%20a%20function%20to%20set%20the%20balance%20of%20an%20address%20to%20some%20amount%20on%20the%20AUSD%20contract.%0A%0A%60%60%60solidity%0A%2F%2F%20TestAgoraDollar.t.sol%0A%0Afunction%20seedUserWithAusd(address%20_to%2C%20uint248%20_amount)%20internal%20%7B%0A%20%20%20%20stdstore%0A%20%20%20%20%20%20%20%20.enable_packed_slots()%0A%20%20%20%20%20%20%20%20.target(address(Constants.Mainnet.AUSD_ERC20))%20%2F%2F0x00000000eFE302BEAA2b3e6e1b18d08D69a9012a%0A%20%20%20%20%20%20%20%20.sig(%22balanceOf(address)%22)%0A%20%20%20%20%20%20%20%20.with_key(_to)%0A%20%20%20%20%20%20%20%20.checked_write(_amount)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Known%20issues%0A%0A-%20Slot(s)%20may%20not%20be%20found%20if%20the%20%60tuple%60%20contains%20types%20shorter%20than%2032%20bytes%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./std-storage-DVT4DlDW.js"),__vite__mapDeps([407,1])),path:"/reference/forge-std/std-storage.html",type:"mdx",filePath:"reference/forge-std/std-storage.mdx",content:"%23%23%20Std%20Storage%0A%0AStd%20Storage%20is%20a%20library%20that%20makes%20manipulating%20storage%20easy.%0A%0ATo%20use%20Std%20Storage%2C%20import%20the%20following%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Aimport%20%7BstdStorage%2C%20StdStorage%7D%20from%20%22forge-std%2FTest.sol%22%3B%0A%60%60%60%0A%0AAdd%20the%20following%20line%20in%20your%20test%20contract%3A%0A%0A%60%60%60solidity%0Ausing%20stdStorage%20for%20StdStorage%3B%0A%60%60%60%0A%0AThen%2C%20access%20Std%20Storage%20via%20the%20%60stdstore%60%20instance.%0A%0A%23%23%23%20Functions%0A%0AQuery%20functions%3A%0A%0A-%20%5B%60target%60%5D(%2Freference%2Fforge-std%2Ftarget.mdx)%3A%20Set%20the%20address%20of%20the%20target%20contract%0A-%20%5B%60sig%60%5D(%2Freference%2Fforge-std%2Fsig.mdx)%3A%20Set%20the%204-byte%20selector%20of%20the%20function%20to%20static%20call%0A-%20%5B%60with_key%60%5D(%2Freference%2Fforge-std%2Fwith_key.mdx)%3A%20Pass%20an%20argument%20to%20the%20function%20(can%20be%20used%20multiple%20times)%0A-%20%5B%60depth%60%5D(%2Freference%2Fforge-std%2Fdepth.mdx)%3A%20Set%20the%20position%20of%20the%20value%20in%20the%20%60tuple%60%20(e.g.%20inside%20a%20%60struct%60)%0A-%20%5B%60enable_packed_slots%60%5D(%2Freference%2Fforge-std%2Fenable_packed_slots.mdx)%3A%20Allow%20the%20use%20of%20packed%20storage%20slots%0A%0ATerminator%20functions%3A%0A%0A-%20%5B%60find%60%5D(%2Freference%2Fforge-std%2Ffind.mdx)%3A%20Return%20the%20slot%20number%0A-%20%5B%60checked_write%60%5D(%2Freference%2Fforge-std%2Fchecked_write.mdx)%3A%20Set%20the%20data%20to%20be%20written%20to%20the%20storage%20slot(s)%0A-%20%5B%60read_%3Ctype%3E%60%5D(%2Freference%2Fforge-std%2Fread.mdx)%3A%20Read%20the%20value%20from%20the%20storage%20slot%20as%20%60%3Ctype%3E%60%0A%0A%23%23%23%20Simple%20Example%0A%0A%60playerToCharacter%60%20tracks%20info%20about%20players'%20characters.%0A%0A%60%60%60solidity%0A%2F%2F%20MetaRPG.sol%0A%0Astruct%20Character%20%7B%0A%20%20%20%20string%20name%3B%0A%20%20%20%20uint256%20level%3B%0A%7D%0A%0Amapping%20(address%20%3D%3E%20Character)%20public%20playerToCharacter%3B%0A%60%60%60%0A%0ALet's%20say%20we%20want%20to%20set%20the%20level%20of%20our%20character%20to%20120.%0A%0A%60%60%60solidity%0A%2F%2F%20MetaRPG.t.sol%0A%0Astdstore%0A%20%20%20%20.target(address(metaRpg))%0A%20%20%20%20.sig(%22playerToCharacter(address)%22)%0A%20%20%20%20.with_key(address(this))%0A%20%20%20%20.depth(1)%0A%20%20%20%20.checked_write(120)%3B%0A%60%60%60%0A%0A%23%23%23%20Packed-Slot%20Example%0A%0A%60balanceOf()%60%20returns%20the%20balance%20of%20a%20user%20in%20a%20gas-optimized%20ERC20%20implementation.%0A%60enable_packed_slots()%60%20also%20works%20with%20%5BERC7201%20Namespaced%20Storage%20Slots%5D(https%3A%2F%2Feips.ethereum.org%2FEIPS%2Feip-7201)%2C%20proxy%20patterns%2C%20and%20packed%20slots%20as%20shown%20in%20the%20example%20below%3A%0A%0A%60%60%60%60solidity%0A%2F%2F%20AgoraDollar.sol%0Acontract%20AgoraDollar%20%7B%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20Erc20AccountData%20struct%0A%20%20%20%20%2F%2F%2F%20%40param%20isFrozen%20A%20boolean%20to%20indicate%20if%20the%20account%20is%20frozen%0A%20%20%20%20%2F%2F%2F%20%40param%20balance%20A%20uint248%20to%20store%20the%20balance%20of%20the%20account%0A%20%20%20%20struct%20Erc20AccountData%20%7B%0A%20%20%20%20%20%20%20%20bool%20isFrozen%3B%0A%20%20%20%20%20%20%20%20uint248%20balance%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20Erc20CoreStorage%20struct%0A%20%20%20%20%2F%2F%2F%20%40param%20accountData%20A%20mapping%20of%20address%20to%20Erc20AccountData%20to%20store%20account%20data%0A%20%20%20%20%2F%2F%2F%20%40custom%3Astorage-location%20erc7201%3AAgoraDollarErc1967Proxy.Erc20CoreStorage%0A%20%20%20%20struct%20Erc20CoreStorage%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%2F%20%40dev%20_account%20The%20account%20whose%20data%20we%20are%20accessing%0A%20%20%20%20%20%20%20%20%2F%2F%2F%20%40dev%20_accountData%20The%20account%20data%20for%20the%20account%0A%20%20%20%20%20%20%20%20mapping(address%20_account%20%3D%3E%20Erc20AccountData%20_accountData)%20accountData%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20%60%60%60ERC20_CORE_STORAGE_SLOT_%60%60%60%20is%20the%20storage%20slot%20for%20the%20Erc20CoreStorage%20struct%0A%20%20%20%20%2F%2F%2F%20%40dev%20keccak256(abi.encode(uint256(keccak256(%22AgoraDollarErc1967Proxy.Erc20CoreStorage%22))%20-%201))%20%26%20~bytes32(uint256(0xff))%0A%20%20%20%20bytes32%20internal%20constant%20ERC20_CORE_STORAGE_SLOT_%20%3D%0A%20%20%20%20%20%20%20%200x455730fed596673e69db1907be2e521374ba893f1a04cc5f5dd931616cd6b700%3B%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20%60%60%60getPointerToErc20CoreStorage%60%60%60%20function%20returns%20a%20pointer%20to%20the%20Erc20CoreStorage%20struct%0A%20%20%20%20%2F%2F%2F%20%40return%20%24%20A%20pointer%20to%20the%20Erc20CoreStorage%20struct%0A%20%20%20%20function%20getPointerToErc20CoreStorage()%20internal%20pure%20returns%20(Erc20CoreStorage%20storage%20%24)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%2F%20%40solidity%20memory-safe-assembly%0A%20%20%20%20%20%20%20%20assembly%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24.slot%20%3A%3D%20ERC20_CORE_STORAGE_SLOT_%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%2F%20%40notice%20The%20%60%60%60balanceOf%60%60%60%20function%20returns%20the%20token%20balance%20of%20a%20given%20account%0A%20%20%20%20%2F%2F%2F%20%40param%20_account%20The%20account%20to%20check%20the%20balance%20of%0A%20%20%20%20%2F%2F%2F%20%40return%20The%20balance%20of%20the%20account%0A%20%20%20%20function%20balanceOf(address%20_account)%20external%20view%20returns%20(uint256)%20%7B%0A%20%20%20%20%20%20%20%20return%20getPointerToErc20CoreStorage().accountData%5B_account%5D.balance%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%60%0A%0ALet's%20say%20we%20want%20a%20function%20to%20set%20the%20balance%20of%20an%20address%20to%20some%20amount%20on%20the%20AUSD%20contract.%0A%0A%60%60%60solidity%0A%2F%2F%20TestAgoraDollar.t.sol%0A%0Afunction%20seedUserWithAusd(address%20_to%2C%20uint248%20_amount)%20internal%20%7B%0A%20%20%20%20stdstore%0A%20%20%20%20%20%20%20%20.enable_packed_slots()%0A%20%20%20%20%20%20%20%20.target(address(Constants.Mainnet.AUSD_ERC20))%20%2F%2F0x00000000eFE302BEAA2b3e6e1b18d08D69a9012a%0A%20%20%20%20%20%20%20%20.sig(%22balanceOf(address)%22)%0A%20%20%20%20%20%20%20%20.with_key(_to)%0A%20%20%20%20%20%20%20%20.checked_write(_amount)%3B%0A%7D%0A%60%60%60%0A%0A%23%23%23%20Known%20issues%0A%0A-%20Slot(s)%20may%20not%20be%20found%20if%20the%20%60tuple%60%20contains%20types%20shorter%20than%2032%20bytes%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./target-DRDGC7ky.js"),__vite__mapDeps([408,1])),path:"/reference/forge-std/target",type:"mdx",filePath:"reference/forge-std/target.mdx",content:"%23%23%20%60target%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20target(StdStorage%20storage%20self%2C%20address%20_target)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20address%20of%20the%20contract.%0A%0ADefault%20value%3A%20%60address(0)%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./target-DRDGC7ky.js"),__vite__mapDeps([408,1])),path:"/reference/forge-std/target.html",type:"mdx",filePath:"reference/forge-std/target.mdx",content:"%23%23%20%60target%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20target(StdStorage%20storage%20self%2C%20address%20_target)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0ASets%20the%20address%20of%20the%20contract.%0A%0ADefault%20value%3A%20%60address(0)%60",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./with_key-DAdA1pf2.js"),__vite__mapDeps([409,1])),path:"/reference/forge-std/with_key",type:"mdx",filePath:"reference/forge-std/with_key.mdx",content:"%23%23%20%60with_key%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20with_key(StdStorage%20storage%20self%2C%20address%20who)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20with_key(StdStorage%20storage%20self%2C%20uint256%20amt)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20with_key(StdStorage%20storage%20self%2C%20bytes32%20key)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APasses%20an%20argument%20to%20the%20function.%0A%0ACan%20be%20used%20multiple%20times%20to%20pass%20multiple%20arguments.%20The%20order%20matters.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20slot%20%3D%20stdstore%0A%20%20%20%20.target(addr)%0A%20%20%20%20.sig(%22fun(uint256%2Caddress)%22)%0A%20%20%20%20.with_key(1)%0A%20%20%20%20.with_key(address(this))%0A%20%20%20%20.find()%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./with_key-DAdA1pf2.js"),__vite__mapDeps([409,1])),path:"/reference/forge-std/with_key.html",type:"mdx",filePath:"reference/forge-std/with_key.mdx",content:"%23%23%20%60with_key%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0Afunction%20with_key(StdStorage%20storage%20self%2C%20address%20who)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20with_key(StdStorage%20storage%20self%2C%20uint256%20amt)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%60%60%60solidity%0Afunction%20with_key(StdStorage%20storage%20self%2C%20bytes32%20key)%20internal%20returns%20(StdStorage%20storage)%3B%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0APasses%20an%20argument%20to%20the%20function.%0A%0ACan%20be%20used%20multiple%20times%20to%20pass%20multiple%20arguments.%20The%20order%20matters.%0A%0A%23%23%23%20Examples%0A%0A%60%60%60solidity%0Auint256%20slot%20%3D%20stdstore%0A%20%20%20%20.target(addr)%0A%20%20%20%20.sig(%22fun(uint256%2Caddress)%22)%0A%20%20%20%20.with_key(1)%0A%20%20%20%20.with_key(address(this))%0A%20%20%20%20.find()%3B%0A%60%60%60%0A",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./zeroVarError-C8YeAnaX.js"),__vite__mapDeps([410,1])),path:"/reference/forge-std/zeroVarError",type:"mdx",filePath:"reference/forge-std/zeroVarError.mdx",content:"%23%23%20%60zeroVarError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.zeroVarError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20call%20a%20function%20via%20a%20function%20pointer%20that%20has%20not%20been%20initialized.",lastUpdatedAt:1751448055e3},{lazy:()=>f(()=>import("./zeroVarError-C8YeAnaX.js"),__vite__mapDeps([410,1])),path:"/reference/forge-std/zeroVarError.html",type:"mdx",filePath:"reference/forge-std/zeroVarError.mdx",content:"%23%23%20%60zeroVarError%60%0A%0A%23%23%23%20Signature%0A%0A%60%60%60solidity%0AstdError.zeroVarError%0A%60%60%60%0A%0A%23%23%23%20Description%0A%0AThe%20internal%20Solidity%20error%20when%20trying%20to%20call%20a%20function%20via%20a%20function%20pointer%20that%20has%20not%20been%20initialized.",lastUpdatedAt:1751448055e3}];var Ul={background5:"var(--vocs-color_background5)",border:"var(--vocs-color_border)",border2:"var(--vocs-color_border2)"},wp={default:"system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif",mono:'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace'},Sp={default:"var(--vocs-fontFamily_default)",mono:"var(--vocs-fontFamily_mono)"},ts={4:"var(--vocs-space_4)",8:"var(--vocs-space_8)",24:"var(--vocs-space_24)"},sl={horizontalPadding:"var(--vocs-content_horizontalPadding)",verticalPadding:"var(--vocs-content_verticalPadding)",width:"var(--vocs-content_width)"};function Ch(t){var a,s,o="";if(typeof t=="string"||typeof t=="number")o+=t;else if(typeof t=="object")if(Array.isArray(t)){var c=t.length;for(a=0;a<c;a++)t[a]&&(s=Ch(t[a]))&&(o&&(o+=" "),o+=s)}else for(s in t)t[s]&&(o&&(o+=" "),o+=s);return o}function c0(){for(var t,a,s=0,o="",c=arguments.length;s<c;s++)(t=arguments[s])&&(a=Ch(t))&&(o&&(o+=" "),o+=a);return o}function kB(t){var a=t.match(/^var\((.*)\)$/);return a?a[1]:t}function Le(t,a){var s={};{var o=t;for(var c in o){var A=o[c];A!=null&&(s[kB(c)]=A)}}return Object.defineProperty(s,"toString",{value:function(){return Object.keys(this).map(u=>"".concat(u,":").concat(this[u])).join(";")},writable:!1}),s}var TB="var(--vocs_ExternalLink_iconUrl)",OB="vocs_ExternalLink";const RB=b.forwardRef(({className:t,children:a,hideExternalIcon:s,href:o,...c},A)=>{const{basePath:d}=m2(),u=d;return C.jsx("a",{ref:A,className:c0(t,s||typeof a!="string"?void 0:OB),href:o,target:"_blank",rel:"noopener noreferrer",style:Le({[TB]:`url(${u}/.vocs/icons/arrow-diagonal.svg)`}),...c,children:a})});var kp="vocs_Link",Tp="vocs_Link_accent",Op="vocs_Link_styleless",jl=new Map,Lo=new WeakMap,Rp=0,PB=void 0;function IB(t){return t?(Lo.has(t)||(Rp+=1,Lo.set(t,Rp.toString())),Lo.get(t)):"0"}function NB(t){return Object.keys(t).sort().filter(a=>t[a]!==void 0).map(a=>`${a}_${a==="root"?IB(t.root):t[a]}`).toString()}function LB(t){const a=NB(t);let s=jl.get(a);if(!s){const o=new Map;let c;const A=new IntersectionObserver(d=>{d.forEach(u=>{var h;const m=u.isIntersecting&&c.some(y=>u.intersectionRatio>=y);t.trackVisibility&&typeof u.isVisible>"u"&&(u.isVisible=m),(h=o.get(u.target))==null||h.forEach(y=>{y(m,u)})})},t);c=A.thresholds||(Array.isArray(t.threshold)?t.threshold:[t.threshold||0]),s={id:a,observer:A,elements:o},jl.set(a,s)}return s}function zB(t,a,s={},o=PB){if(typeof window.IntersectionObserver>"u"&&o!==void 0){const h=t.getBoundingClientRect();return a(o,{isIntersecting:o,target:t,intersectionRatio:typeof s.threshold=="number"?s.threshold:0,time:0,boundingClientRect:h,intersectionRect:h,rootBounds:h}),()=>{}}const{id:c,observer:A,elements:d}=LB(s),u=d.get(t)||[];return d.has(t)||d.set(t,u),u.push(a),A.observe(t),function(){u.splice(u.indexOf(a),1),u.length===0&&(d.delete(t),A.unobserve(t)),d.size===0&&(A.disconnect(),jl.delete(c))}}function yh({threshold:t,delay:a,trackVisibility:s,rootMargin:o,root:c,triggerOnce:A,skip:d,initialInView:u,fallbackInView:h,onChange:m}={}){var y;const[g,F]=b.useState(null),E=b.useRef(m),[B,v]=b.useState({inView:!!u,entry:void 0});E.current=m,b.useEffect(()=>{if(d||!g)return;let w;return w=zB(g,(O,R)=>{v({inView:O,entry:R}),E.current&&E.current(O,R),R.isIntersecting&&A&&w&&(w(),w=void 0)},{root:c,rootMargin:o,threshold:t,trackVisibility:s,delay:a},h),()=>{w&&w()}},[Array.isArray(t)?t.toString():t,g,c,o,A,d,s,h,a]);const x=(y=B.entry)==null?void 0:y.target,_=b.useRef(void 0);!g&&x&&!A&&!d&&_.current!==x&&(_.current=x,v({inView:!!u,entry:void 0}));const k=[F,B.inView,B.entry];return k.ref=k[0],k.inView=k[1],k.entry=k[2],k}function MB(...t){return a=>{UB(a,...t)}}function UB(t,...a){a.forEach(s=>{typeof s=="function"?s(t):s!=null&&(s.current=t)})}const Oa=b.forwardRef((t,a)=>{const s=()=>{var A;return(A=Dd.find(d=>d.path===t.to))==null?void 0:A.lazy()},{ref:o,inView:c}=yh();return b.useEffect(()=>{c&&s()},[c]),C.jsx(Ma,{ref:MB(a,o),...t})}),ve=b.forwardRef((t,a)=>{const{hideExternalIcon:s,href:o,variant:c="accent"}=t,{pathname:A}=s2();if(o!=null&&o.match(/^(www|https?)/))return C.jsx(RB,{...t,ref:a,className:c0(t.className,kp,c==="accent"&&Tp,c==="styleless"&&Op),hideExternalIcon:s});const[d,u]=(o||"").split("#"),h=`${d||A}${u?`#${u}`:""}`;return C.jsx(Oa,{...t,ref:a,className:c0(t.className,kp,c==="accent"&&Tp,c==="styleless"&&Op),to:h})});var jB="vocs_NotFound",VB="vocs_NotFound_divider",GB="vocs_H1",bh="vocs_Heading",Fh="vocs_Heading_slugTarget";function Ua({level:t,...a}){const s=`h${t}`;return C.jsxs(s,{...a,id:void 0,className:c0(a.className,bh),children:[C.jsx("div",{id:a.id,className:Fh}),a.children]})}function Eh(t){return C.jsx(Ua,{...t,className:c0(t.className,GB),level:1})}var qB="vocs_Paragraph";function Bh(t){return C.jsx("p",{...t,className:c0(t.className,qB)})}function HB(){return C.jsxs("div",{className:jB,children:[C.jsx(Eh,{children:"Page Not Found"}),C.jsx("div",{style:{height:ts[24]}}),C.jsx("hr",{className:VB}),C.jsx("div",{style:{height:ts[24]}}),C.jsx(Bh,{children:"The page you were looking for could not be found."}),C.jsx("div",{style:{height:ts[8]}}),C.jsx(ve,{href:"/",children:"Go to Home Page"})]})}var YB="var(--vocs_Banner_bannerBackgroundColor)",WB="var(--vocs_Banner_bannerHeight)",KB="var(--vocs_Banner_bannerTextColor)",XB="vocs_Banner",JB="vocs_Banner_content",ZB="vocs_Banner_inner",$B="vocs_Banner_closeButton";const QB=Object.getPrototypeOf(ev).constructor;async function ev(t,a){return new QB(String(t))(a)}function tv(t,a){return new Function(String(t))(a)}function Ln(t,a){if(t==null)return{};var s={},o=Object.keys(t),c,A;for(A=0;A<o.length;A++)c=o[A],!(a.indexOf(c)>=0)&&(s[c]=t[c]);return s}var nv=["color"],av=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,nv);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M6.85355 3.14645C7.04882 3.34171 7.04882 3.65829 6.85355 3.85355L3.70711 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H3.70711L6.85355 11.1464C7.04882 11.3417 7.04882 11.6583 6.85355 11.8536C6.65829 12.0488 6.34171 12.0488 6.14645 11.8536L2.14645 7.85355C1.95118 7.65829 1.95118 7.34171 2.14645 7.14645L6.14645 3.14645C6.34171 2.95118 6.65829 2.95118 6.85355 3.14645Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))}),rv=["color"],sv=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,rv);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))}),ov=["color"],iv=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,ov);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M12.8536 2.85355C13.0488 2.65829 13.0488 2.34171 12.8536 2.14645C12.6583 1.95118 12.3417 1.95118 12.1464 2.14645L7.5 6.79289L2.85355 2.14645C2.65829 1.95118 2.34171 1.95118 2.14645 2.14645C1.95118 2.34171 1.95118 2.65829 2.14645 2.85355L6.79289 7.5L2.14645 12.1464C1.95118 12.3417 1.95118 12.6583 2.14645 12.8536C2.34171 13.0488 2.65829 13.0488 2.85355 12.8536L7.5 8.20711L12.1464 12.8536C12.3417 13.0488 12.6583 13.0488 12.8536 12.8536C13.0488 12.6583 13.0488 12.3417 12.8536 12.1464L8.20711 7.5L12.8536 2.85355Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))}),cv=["color"],Av=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,cv);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M3.5 2C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V6H8.5C8.22386 6 8 5.77614 8 5.5V2H3.5ZM9 2.70711L11.2929 5H9V2.70711ZM2 2.5C2 1.67157 2.67157 1 3.5 1H8.5C8.63261 1 8.75979 1.05268 8.85355 1.14645L12.8536 5.14645C12.9473 5.24021 13 5.36739 13 5.5V12.5C13 13.3284 12.3284 14 11.5 14H3.5C2.67157 14 2 13.3284 2 12.5V2.5Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))}),lv=["color"],dv=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,lv);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M1.5 5.25C1.91421 5.25 2.25 4.91421 2.25 4.5C2.25 4.08579 1.91421 3.75 1.5 3.75C1.08579 3.75 0.75 4.08579 0.75 4.5C0.75 4.91421 1.08579 5.25 1.5 5.25ZM4 4.5C4 4.22386 4.22386 4 4.5 4H13.5C13.7761 4 14 4.22386 14 4.5C14 4.77614 13.7761 5 13.5 5H4.5C4.22386 5 4 4.77614 4 4.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H13.5C13.7761 8 14 7.77614 14 7.5C14 7.22386 13.7761 7 13.5 7H4.5ZM4.5 10C4.22386 10 4 10.2239 4 10.5C4 10.7761 4.22386 11 4.5 11H13.5C13.7761 11 14 10.7761 14 10.5C14 10.2239 13.7761 10 13.5 10H4.5ZM2.25 7.5C2.25 7.91421 1.91421 8.25 1.5 8.25C1.08579 8.25 0.75 7.91421 0.75 7.5C0.75 7.08579 1.08579 6.75 1.5 6.75C1.91421 6.75 2.25 7.08579 2.25 7.5ZM1.5 11.25C1.91421 11.25 2.25 10.9142 2.25 10.5C2.25 10.0858 1.91421 9.75 1.5 9.75C1.08579 9.75 0.75 10.0858 0.75 10.5C0.75 10.9142 1.08579 11.25 1.5 11.25Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))}),uv=["color"],xd=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,uv);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))}),fv=["color"],pv=b.forwardRef(function(t,a){var s=t.color,o=s===void 0?"currentColor":s,c=Ln(t,fv);return b.createElement("svg",Object.assign({width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},c,{ref:a}),b.createElement("path",{d:"M12.1464 1.14645C12.3417 0.951184 12.6583 0.951184 12.8535 1.14645L14.8535 3.14645C15.0488 3.34171 15.0488 3.65829 14.8535 3.85355L10.9109 7.79618C10.8349 7.87218 10.7471 7.93543 10.651 7.9835L6.72359 9.94721C6.53109 10.0435 6.29861 10.0057 6.14643 9.85355C5.99425 9.70137 5.95652 9.46889 6.05277 9.27639L8.01648 5.34897C8.06455 5.25283 8.1278 5.16507 8.2038 5.08907L12.1464 1.14645ZM12.5 2.20711L8.91091 5.79618L7.87266 7.87267L8.12731 8.12732L10.2038 7.08907L13.7929 3.5L12.5 2.20711ZM9.99998 2L8.99998 3H4.9C4.47171 3 4.18056 3.00039 3.95552 3.01877C3.73631 3.03668 3.62421 3.06915 3.54601 3.10899C3.35785 3.20487 3.20487 3.35785 3.10899 3.54601C3.06915 3.62421 3.03669 3.73631 3.01878 3.95552C3.00039 4.18056 3 4.47171 3 4.9V11.1C3 11.5283 3.00039 11.8194 3.01878 12.0445C3.03669 12.2637 3.06915 12.3758 3.10899 12.454C3.20487 12.6422 3.35785 12.7951 3.54601 12.891C3.62421 12.9309 3.73631 12.9633 3.95552 12.9812C4.18056 12.9996 4.47171 13 4.9 13H11.1C11.5283 13 11.8194 12.9996 12.0445 12.9812C12.2637 12.9633 12.3758 12.9309 12.454 12.891C12.6422 12.7951 12.7951 12.6422 12.891 12.454C12.9309 12.3758 12.9633 12.2637 12.9812 12.0445C12.9996 11.8194 13 11.5283 13 11.1V6.99998L14 5.99998V11.1V11.1207C14 11.5231 14 11.8553 13.9779 12.1259C13.9549 12.407 13.9057 12.6653 13.782 12.908C13.5903 13.2843 13.2843 13.5903 12.908 13.782C12.6653 13.9057 12.407 13.9549 12.1259 13.9779C11.8553 14 11.5231 14 11.1207 14H11.1H4.9H4.87934C4.47686 14 4.14468 14 3.87409 13.9779C3.59304 13.9549 3.33469 13.9057 3.09202 13.782C2.7157 13.5903 2.40973 13.2843 2.21799 12.908C2.09434 12.6653 2.04506 12.407 2.0221 12.1259C1.99999 11.8553 1.99999 11.5231 2 11.1207V11.1206V11.1V4.9V4.87935V4.87932V4.87931C1.99999 4.47685 1.99999 4.14468 2.0221 3.87409C2.04506 3.59304 2.09434 3.33469 2.21799 3.09202C2.40973 2.71569 2.7157 2.40973 3.09202 2.21799C3.33469 2.09434 3.59304 2.04506 3.87409 2.0221C4.14468 1.99999 4.47685 1.99999 4.87932 2H4.87935H4.9H9.99998Z",fill:o,fillRule:"evenodd",clipRule:"evenodd"}))});function On(t,a){if(typeof t!="object"||t===null)return t;if(Array.isArray(t))return t.map((o,c)=>On(o,c));const s=t.props.children?{...t.props,children:On(t.props.children)}:t.props;return a2.createElement(t.type,{...s,key:a})}function mv({hide:t}){const{banner:a}=m2(),s=b.useMemo(()=>{const o=(a==null?void 0:a.content)??"";if(!o)return null;if(typeof o!="string")return()=>On(o);const{default:c}=tv(o,{...pF,Fragment:b.Fragment});return c},[a]);return s?C.jsx("div",{className:c0(XB),style:Le({[YB]:a==null?void 0:a.backgroundColor,[KB]:a==null?void 0:a.textColor}),children:C.jsxs("div",{className:c0(ZB),children:[C.jsx("div",{className:c0(JB),children:C.jsx(s,{})}),(a==null?void 0:a.dismissable)!=="false"&&C.jsx("button",{className:c0($B),onClick:t,type:"button",children:C.jsx(iv,{width:14,height:14})})]})}):null}var hv="vocs_Content";function vh({children:t,className:a}){return C.jsx("article",{className:c0(a,hv),children:t})}const gv=({children:t})=>t,Cv=({children:t})=>t,_d=({children:t})=>t;function Dh({items:t,pathname:a}){const s=a.replace(/\.html$/,""),o=[];for(const c of t)(c.link&&s.startsWith(c.match||c.link)||c.items&&Dh({items:c.items,pathname:a}).length>0)&&o.push(c.id);return o}function As({items:t,pathname:a}){return b.useMemo(()=>Dh({items:t,pathname:a}),[t,a])}function nn(){const t=b.useContext(xh);if(!t)throw new Error("`usePageData` must be used within `PageDataContext.Provider`.");return t}const xh=b.createContext(void 0);function vi(){const{pathname:t}=s2(),a=m2(),{sidebar:s}=a;if(!s)return{items:[]};if(Array.isArray(s))return{items:s};const o=b.useMemo(()=>{const c=Object.keys(s).filter(A=>t.startsWith(A));return c[c.length-1]},[s,t]);return o?Array.isArray(s[o])?{key:o,items:s[o]}:{...s[o],key:o}:{items:[]}}function an(){const{aiCta:t}=m2(),a=vi(),{frontmatter:s}=nn(),{layout:o,showLogo:c,showAiCta:A,showOutline:d,showSidebar:u,showTopNav:h}=s||{},m=o??"docs";return{layout:m,get showLogo(){return typeof c<"u"?c:!0},get showAiCta(){return typeof A<"u"?A:t===!1?!1:m==="docs"},get showOutline(){return typeof d<"u"?d:m==="docs"},get showSidebar(){return a.items.length===0?!1:typeof u<"u"?u:!(m==="minimal"||m==="landing")},get showTopNav(){return typeof h<"u"?h:!0}}}function h0(t,a,{checkForDefaultPrevented:s=!0}={}){return function(c){if(t==null||t(c),s===!1||!c.defaultPrevented)return a==null?void 0:a(c)}}function Pp(t,a){if(typeof t=="function")return t(a);t!=null&&(t.current=a)}function ls(...t){return a=>{let s=!1;const o=t.map(c=>{const A=Pp(c,a);return!s&&typeof A=="function"&&(s=!0),A});if(s)return()=>{for(let c=0;c<o.length;c++){const A=o[c];typeof A=="function"?A():Pp(t[c],null)}}}}function r2(...t){return b.useCallback(ls(...t),t)}function yv(t,a){const s=b.createContext(a),o=A=>{const{children:d,...u}=A,h=b.useMemo(()=>u,Object.values(u));return C.jsx(s.Provider,{value:h,children:d})};o.displayName=t+"Provider";function c(A){const d=b.useContext(s);if(d)return d;if(a!==void 0)return a;throw new Error(`\`${A}\` must be used within \`${t}\``)}return[o,c]}function ze(t,a=[]){let s=[];function o(A,d){const u=b.createContext(d),h=s.length;s=[...s,d];const m=g=>{var _;const{scope:F,children:E,...B}=g,v=((_=F==null?void 0:F[t])==null?void 0:_[h])||u,x=b.useMemo(()=>B,Object.values(B));return C.jsx(v.Provider,{value:x,children:E})};m.displayName=A+"Provider";function y(g,F){var v;const E=((v=F==null?void 0:F[t])==null?void 0:v[h])||u,B=b.useContext(E);if(B)return B;if(d!==void 0)return d;throw new Error(`\`${g}\` must be used within \`${A}\``)}return[m,y]}const c=()=>{const A=s.map(d=>b.createContext(d));return function(u){const h=(u==null?void 0:u[t])||A;return b.useMemo(()=>({[`__scope${t}`]:{...u,[t]:h}}),[u,h])}};return c.scopeName=t,[o,bv(c,...a)]}function bv(...t){const a=t[0];if(t.length===1)return a;const s=()=>{const o=t.map(c=>({useScope:c(),scopeName:c.scopeName}));return function(A){const d=o.reduce((u,{useScope:h,scopeName:m})=>{const g=h(A)[`__scope${m}`];return{...u,...g}},{});return b.useMemo(()=>({[`__scope${a.scopeName}`]:d}),[d])}};return s.scopeName=a.scopeName,s}var De=globalThis!=null&&globalThis.document?b.useLayoutEffect:()=>{},Fv=bi[" useId ".trim().toString()]||(()=>{}),Ev=0;function Ee(t){const[a,s]=b.useState(Fv());return De(()=>{s(o=>o??String(Ev++))},[t]),t||(a?`radix-${a}`:"")}var Bv=bi[" useInsertionEffect ".trim().toString()]||De;function Qe({prop:t,defaultProp:a,onChange:s=()=>{},caller:o}){const[c,A,d]=vv({defaultProp:a,onChange:s}),u=t!==void 0,h=u?t:c;{const y=b.useRef(t!==void 0);b.useEffect(()=>{const g=y.current;g!==u&&console.warn(`${o} is changing from ${g?"controlled":"uncontrolled"} to ${u?"controlled":"uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`),y.current=u},[u,o])}const m=b.useCallback(y=>{var g;if(u){const F=Dv(y)?y(t):y;F!==t&&((g=d.current)==null||g.call(d,F))}else A(y)},[u,t,A,d]);return[h,m]}function vv({defaultProp:t,onChange:a}){const[s,o]=b.useState(t),c=b.useRef(s),A=b.useRef(a);return Bv(()=>{A.current=a},[a]),b.useEffect(()=>{var d;c.current!==s&&((d=A.current)==null||d.call(A,s),c.current=s)},[s,c]),[s,o,A]}function Dv(t){return typeof t=="function"}var wd=Um();const _h=yi(wd);function Ra(t){const a=xv(t),s=b.forwardRef((o,c)=>{const{children:A,...d}=o,u=b.Children.toArray(A),h=u.find(wv);if(h){const m=h.props.children,y=u.map(g=>g===h?b.Children.count(m)>1?b.Children.only(null):b.isValidElement(m)?m.props.children:null:g);return C.jsx(a,{...d,ref:c,children:b.isValidElement(m)?b.cloneElement(m,void 0,y):null})}return C.jsx(a,{...d,ref:c,children:A})});return s.displayName=`${t}.Slot`,s}function xv(t){const a=b.forwardRef((s,o)=>{const{children:c,...A}=s;if(b.isValidElement(c)){const d=kv(c),u=Sv(A,c.props);return c.type!==b.Fragment&&(u.ref=o?ls(o,d):d),b.cloneElement(c,u)}return b.Children.count(c)>1?b.Children.only(null):null});return a.displayName=`${t}.SlotClone`,a}var _v=Symbol("radix.slottable");function wv(t){return b.isValidElement(t)&&typeof t.type=="function"&&"__radixId"in t.type&&t.type.__radixId===_v}function Sv(t,a){const s={...a};for(const o in a){const c=t[o],A=a[o];/^on[A-Z]/.test(o)?c&&A?s[o]=(...u)=>{const h=A(...u);return c(...u),h}:c&&(s[o]=c):o==="style"?s[o]={...c,...A}:o==="className"&&(s[o]=[c,A].filter(Boolean).join(" "))}return{...t,...s}}function kv(t){var o,c;let a=(o=Object.getOwnPropertyDescriptor(t.props,"ref"))==null?void 0:o.get,s=a&&"isReactWarning"in a&&a.isReactWarning;return s?t.ref:(a=(c=Object.getOwnPropertyDescriptor(t,"ref"))==null?void 0:c.get,s=a&&"isReactWarning"in a&&a.isReactWarning,s?t.props.ref:t.props.ref||t.ref)}var Tv=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","select","span","svg","ul"],T0=Tv.reduce((t,a)=>{const s=Ra(`Primitive.${a}`),o=b.forwardRef((c,A)=>{const{asChild:d,...u}=c,h=d?s:a;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),C.jsx(h,{...u,ref:A})});return o.displayName=`Primitive.${a}`,{...t,[a]:o}},{});function ii(t,a){t&&wd.flushSync(()=>t.dispatchEvent(a))}function L2(t){const a=b.useRef(t);return b.useEffect(()=>{a.current=t}),b.useMemo(()=>(...s)=>{var o;return(o=a.current)==null?void 0:o.call(a,...s)},[])}function Ov(t,a=globalThis==null?void 0:globalThis.document){const s=L2(t);b.useEffect(()=>{const o=c=>{c.key==="Escape"&&s(c)};return a.addEventListener("keydown",o,{capture:!0}),()=>a.removeEventListener("keydown",o,{capture:!0})},[s,a])}var Rv="DismissableLayer",Vl="dismissableLayer.update",Pv="dismissableLayer.pointerDownOutside",Iv="dismissableLayer.focusOutside",Ip,wh=b.createContext({layers:new Set,layersWithOutsidePointerEventsDisabled:new Set,branches:new Set}),ds=b.forwardRef((t,a)=>{const{disableOutsidePointerEvents:s=!1,onEscapeKeyDown:o,onPointerDownOutside:c,onFocusOutside:A,onInteractOutside:d,onDismiss:u,...h}=t,m=b.useContext(wh),[y,g]=b.useState(null),F=(y==null?void 0:y.ownerDocument)??(globalThis==null?void 0:globalThis.document),[,E]=b.useState({}),B=r2(a,L=>g(L)),v=Array.from(m.layers),[x]=[...m.layersWithOutsidePointerEventsDisabled].slice(-1),_=v.indexOf(x),k=y?v.indexOf(y):-1,w=m.layersWithOutsidePointerEventsDisabled.size>0,O=k>=_,R=zv(L=>{const j=L.target,q=[...m.branches].some(r0=>r0.contains(j));!O||q||(c==null||c(L),d==null||d(L),L.defaultPrevented||u==null||u())},F),T=Mv(L=>{const j=L.target;[...m.branches].some(r0=>r0.contains(j))||(A==null||A(L),d==null||d(L),L.defaultPrevented||u==null||u())},F);return Ov(L=>{k===m.layers.size-1&&(o==null||o(L),!L.defaultPrevented&&u&&(L.preventDefault(),u()))},F),b.useEffect(()=>{if(y)return s&&(m.layersWithOutsidePointerEventsDisabled.size===0&&(Ip=F.body.style.pointerEvents,F.body.style.pointerEvents="none"),m.layersWithOutsidePointerEventsDisabled.add(y)),m.layers.add(y),Np(),()=>{s&&m.layersWithOutsidePointerEventsDisabled.size===1&&(F.body.style.pointerEvents=Ip)}},[y,F,s,m]),b.useEffect(()=>()=>{y&&(m.layers.delete(y),m.layersWithOutsidePointerEventsDisabled.delete(y),Np())},[y,m]),b.useEffect(()=>{const L=()=>E({});return document.addEventListener(Vl,L),()=>document.removeEventListener(Vl,L)},[]),C.jsx(T0.div,{...h,ref:B,style:{pointerEvents:w?O?"auto":"none":void 0,...t.style},onFocusCapture:h0(t.onFocusCapture,T.onFocusCapture),onBlurCapture:h0(t.onBlurCapture,T.onBlurCapture),onPointerDownCapture:h0(t.onPointerDownCapture,R.onPointerDownCapture)})});ds.displayName=Rv;var Nv="DismissableLayerBranch",Lv=b.forwardRef((t,a)=>{const s=b.useContext(wh),o=b.useRef(null),c=r2(a,o);return b.useEffect(()=>{const A=o.current;if(A)return s.branches.add(A),()=>{s.branches.delete(A)}},[s.branches]),C.jsx(T0.div,{...t,ref:c})});Lv.displayName=Nv;function zv(t,a=globalThis==null?void 0:globalThis.document){const s=L2(t),o=b.useRef(!1),c=b.useRef(()=>{});return b.useEffect(()=>{const A=u=>{if(u.target&&!o.current){let h=function(){Sh(Pv,s,m,{discrete:!0})};const m={originalEvent:u};u.pointerType==="touch"?(a.removeEventListener("click",c.current),c.current=h,a.addEventListener("click",c.current,{once:!0})):h()}else a.removeEventListener("click",c.current);o.current=!1},d=window.setTimeout(()=>{a.addEventListener("pointerdown",A)},0);return()=>{window.clearTimeout(d),a.removeEventListener("pointerdown",A),a.removeEventListener("click",c.current)}},[a,s]),{onPointerDownCapture:()=>o.current=!0}}function Mv(t,a=globalThis==null?void 0:globalThis.document){const s=L2(t),o=b.useRef(!1);return b.useEffect(()=>{const c=A=>{A.target&&!o.current&&Sh(Iv,s,{originalEvent:A},{discrete:!1})};return a.addEventListener("focusin",c),()=>a.removeEventListener("focusin",c)},[a,s]),{onFocusCapture:()=>o.current=!0,onBlurCapture:()=>o.current=!1}}function Np(){const t=new CustomEvent(Vl);document.dispatchEvent(t)}function Sh(t,a,s,{discrete:o}){const c=s.originalEvent.target,A=new CustomEvent(t,{bubbles:!1,cancelable:!0,detail:s});a&&c.addEventListener(t,a,{once:!0}),o?ii(c,A):c.dispatchEvent(A)}var ol="focusScope.autoFocusOnMount",il="focusScope.autoFocusOnUnmount",Lp={bubbles:!1,cancelable:!0},Uv="FocusScope",Di=b.forwardRef((t,a)=>{const{loop:s=!1,trapped:o=!1,onMountAutoFocus:c,onUnmountAutoFocus:A,...d}=t,[u,h]=b.useState(null),m=L2(c),y=L2(A),g=b.useRef(null),F=r2(a,v=>h(v)),E=b.useRef({paused:!1,pause(){this.paused=!0},resume(){this.paused=!1}}).current;b.useEffect(()=>{if(o){let v=function(w){if(E.paused||!u)return;const O=w.target;u.contains(O)?g.current=O:Zt(g.current,{select:!0})},x=function(w){if(E.paused||!u)return;const O=w.relatedTarget;O!==null&&(u.contains(O)||Zt(g.current,{select:!0}))},_=function(w){if(document.activeElement===document.body)for(const R of w)R.removedNodes.length>0&&Zt(u)};document.addEventListener("focusin",v),document.addEventListener("focusout",x);const k=new MutationObserver(_);return u&&k.observe(u,{childList:!0,subtree:!0}),()=>{document.removeEventListener("focusin",v),document.removeEventListener("focusout",x),k.disconnect()}}},[o,u,E.paused]),b.useEffect(()=>{if(u){Mp.add(E);const v=document.activeElement;if(!u.contains(v)){const _=new CustomEvent(ol,Lp);u.addEventListener(ol,m),u.dispatchEvent(_),_.defaultPrevented||(jv(Yv(kh(u)),{select:!0}),document.activeElement===v&&Zt(u))}return()=>{u.removeEventListener(ol,m),setTimeout(()=>{const _=new CustomEvent(il,Lp);u.addEventListener(il,y),u.dispatchEvent(_),_.defaultPrevented||Zt(v??document.body,{select:!0}),u.removeEventListener(il,y),Mp.remove(E)},0)}}},[u,m,y,E]);const B=b.useCallback(v=>{if(!s&&!o||E.paused)return;const x=v.key==="Tab"&&!v.altKey&&!v.ctrlKey&&!v.metaKey,_=document.activeElement;if(x&&_){const k=v.currentTarget,[w,O]=Vv(k);w&&O?!v.shiftKey&&_===O?(v.preventDefault(),s&&Zt(w,{select:!0})):v.shiftKey&&_===w&&(v.preventDefault(),s&&Zt(O,{select:!0})):_===k&&v.preventDefault()}},[s,o,E.paused]);return C.jsx(T0.div,{tabIndex:-1,...d,ref:F,onKeyDown:B})});Di.displayName=Uv;function jv(t,{select:a=!1}={}){const s=document.activeElement;for(const o of t)if(Zt(o,{select:a}),document.activeElement!==s)return}function Vv(t){const a=kh(t),s=zp(a,t),o=zp(a.reverse(),t);return[s,o]}function kh(t){const a=[],s=document.createTreeWalker(t,NodeFilter.SHOW_ELEMENT,{acceptNode:o=>{const c=o.tagName==="INPUT"&&o.type==="hidden";return o.disabled||o.hidden||c?NodeFilter.FILTER_SKIP:o.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;s.nextNode();)a.push(s.currentNode);return a}function zp(t,a){for(const s of t)if(!Gv(s,{upTo:a}))return s}function Gv(t,{upTo:a}){if(getComputedStyle(t).visibility==="hidden")return!0;for(;t;){if(a!==void 0&&t===a)return!1;if(getComputedStyle(t).display==="none")return!0;t=t.parentElement}return!1}function qv(t){return t instanceof HTMLInputElement&&"select"in t}function Zt(t,{select:a=!1}={}){if(t&&t.focus){const s=document.activeElement;t.focus({preventScroll:!0}),t!==s&&qv(t)&&a&&t.select()}}var Mp=Hv();function Hv(){let t=[];return{add(a){const s=t[0];a!==s&&(s==null||s.pause()),t=Up(t,a),t.unshift(a)},remove(a){var s;t=Up(t,a),(s=t[0])==null||s.resume()}}}function Up(t,a){const s=[...t],o=s.indexOf(a);return o!==-1&&s.splice(o,1),s}function Yv(t){return t.filter(a=>a.tagName!=="A")}var Wv="Portal",xi=b.forwardRef((t,a)=>{var u;const{container:s,...o}=t,[c,A]=b.useState(!1);De(()=>A(!0),[]);const d=s||c&&((u=globalThis==null?void 0:globalThis.document)==null?void 0:u.body);return d?_h.createPortal(C.jsx(T0.div,{...o,ref:a}),d):null});xi.displayName=Wv;function Kv(t,a){return b.useReducer((s,o)=>a[s][o]??s,t)}var z2=t=>{const{present:a,children:s}=t,o=Xv(a),c=typeof s=="function"?s({present:o.isPresent}):b.Children.only(s),A=r2(o.ref,Jv(c));return typeof s=="function"||o.isPresent?b.cloneElement(c,{ref:A}):null};z2.displayName="Presence";function Xv(t){const[a,s]=b.useState(),o=b.useRef(null),c=b.useRef(t),A=b.useRef("none"),d=t?"mounted":"unmounted",[u,h]=Kv(d,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return b.useEffect(()=>{const m=zo(o.current);A.current=u==="mounted"?m:"none"},[u]),De(()=>{const m=o.current,y=c.current;if(y!==t){const F=A.current,E=zo(m);t?h("MOUNT"):E==="none"||(m==null?void 0:m.display)==="none"?h("UNMOUNT"):h(y&&F!==E?"ANIMATION_OUT":"UNMOUNT"),c.current=t}},[t,h]),De(()=>{if(a){let m;const y=a.ownerDocument.defaultView??window,g=E=>{const v=zo(o.current).includes(E.animationName);if(E.target===a&&v&&(h("ANIMATION_END"),!c.current)){const x=a.style.animationFillMode;a.style.animationFillMode="forwards",m=y.setTimeout(()=>{a.style.animationFillMode==="forwards"&&(a.style.animationFillMode=x)})}},F=E=>{E.target===a&&(A.current=zo(o.current))};return a.addEventListener("animationstart",F),a.addEventListener("animationcancel",g),a.addEventListener("animationend",g),()=>{y.clearTimeout(m),a.removeEventListener("animationstart",F),a.removeEventListener("animationcancel",g),a.removeEventListener("animationend",g)}}else h("ANIMATION_END")},[a,h]),{isPresent:["mounted","unmountSuspended"].includes(u),ref:b.useCallback(m=>{o.current=m?getComputedStyle(m):null,s(m)},[])}}function zo(t){return(t==null?void 0:t.animationName)||"none"}function Jv(t){var o,c;let a=(o=Object.getOwnPropertyDescriptor(t.props,"ref"))==null?void 0:o.get,s=a&&"isReactWarning"in a&&a.isReactWarning;return s?t.ref:(a=(c=Object.getOwnPropertyDescriptor(t,"ref"))==null?void 0:c.get,s=a&&"isReactWarning"in a&&a.isReactWarning,s?t.props.ref:t.props.ref||t.ref)}var cl=0;function Sd(){b.useEffect(()=>{const t=document.querySelectorAll("[data-radix-focus-guard]");return document.body.insertAdjacentElement("afterbegin",t[0]??jp()),document.body.insertAdjacentElement("beforeend",t[1]??jp()),cl++,()=>{cl===1&&document.querySelectorAll("[data-radix-focus-guard]").forEach(a=>a.remove()),cl--}},[])}function jp(){const t=document.createElement("span");return t.setAttribute("data-radix-focus-guard",""),t.tabIndex=0,t.style.outline="none",t.style.opacity="0",t.style.position="fixed",t.style.pointerEvents="none",t}var Ke=function(){return Ke=Object.assign||function(a){for(var s,o=1,c=arguments.length;o<c;o++){s=arguments[o];for(var A in s)Object.prototype.hasOwnProperty.call(s,A)&&(a[A]=s[A])}return a},Ke.apply(this,arguments)};function Th(t,a){var s={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&a.indexOf(o)<0&&(s[o]=t[o]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var c=0,o=Object.getOwnPropertySymbols(t);c<o.length;c++)a.indexOf(o[c])<0&&Object.prototype.propertyIsEnumerable.call(t,o[c])&&(s[o[c]]=t[o[c]]);return s}function Zv(t,a,s){if(s||arguments.length===2)for(var o=0,c=a.length,A;o<c;o++)(A||!(o in a))&&(A||(A=Array.prototype.slice.call(a,0,o)),A[o]=a[o]);return t.concat(A||Array.prototype.slice.call(a))}var Qo="right-scroll-bar-position",ei="width-before-scroll-bar",$v="with-scroll-bars-hidden",Qv="--removed-body-scroll-bar-size";function Al(t,a){return typeof t=="function"?t(a):t&&(t.current=a),t}function eD(t,a){var s=b.useState(function(){return{value:t,callback:a,facade:{get current(){return s.value},set current(o){var c=s.value;c!==o&&(s.value=o,s.callback(o,c))}}}})[0];return s.callback=a,s.facade}var tD=typeof window<"u"?b.useLayoutEffect:b.useEffect,Vp=new WeakMap;function nD(t,a){var s=eD(null,function(o){return t.forEach(function(c){return Al(c,o)})});return tD(function(){var o=Vp.get(s);if(o){var c=new Set(o),A=new Set(t),d=s.current;c.forEach(function(u){A.has(u)||Al(u,null)}),A.forEach(function(u){c.has(u)||Al(u,d)})}Vp.set(s,t)},[t]),s}function aD(t){return t}function rD(t,a){a===void 0&&(a=aD);var s=[],o=!1,c={read:function(){if(o)throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");return s.length?s[s.length-1]:t},useMedium:function(A){var d=a(A,o);return s.push(d),function(){s=s.filter(function(u){return u!==d})}},assignSyncMedium:function(A){for(o=!0;s.length;){var d=s;s=[],d.forEach(A)}s={push:function(u){return A(u)},filter:function(){return s}}},assignMedium:function(A){o=!0;var d=[];if(s.length){var u=s;s=[],u.forEach(A),d=s}var h=function(){var y=d;d=[],y.forEach(A)},m=function(){return Promise.resolve().then(h)};m(),s={push:function(y){d.push(y),m()},filter:function(y){return d=d.filter(y),s}}}};return c}function sD(t){t===void 0&&(t={});var a=rD(null);return a.options=Ke({async:!0,ssr:!1},t),a}var Oh=function(t){var a=t.sideCar,s=Th(t,["sideCar"]);if(!a)throw new Error("Sidecar: please provide `sideCar` property to import the right car");var o=a.read();if(!o)throw new Error("Sidecar medium not found");return b.createElement(o,Ke({},s))};Oh.isSideCarExport=!0;function oD(t,a){return t.useMedium(a),Oh}var Rh=sD(),ll=function(){},_i=b.forwardRef(function(t,a){var s=b.useRef(null),o=b.useState({onScrollCapture:ll,onWheelCapture:ll,onTouchMoveCapture:ll}),c=o[0],A=o[1],d=t.forwardProps,u=t.children,h=t.className,m=t.removeScrollBar,y=t.enabled,g=t.shards,F=t.sideCar,E=t.noRelative,B=t.noIsolation,v=t.inert,x=t.allowPinchZoom,_=t.as,k=_===void 0?"div":_,w=t.gapMode,O=Th(t,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noRelative","noIsolation","inert","allowPinchZoom","as","gapMode"]),R=F,T=nD([s,a]),L=Ke(Ke({},O),c);return b.createElement(b.Fragment,null,y&&b.createElement(R,{sideCar:Rh,removeScrollBar:m,shards:g,noRelative:E,noIsolation:B,inert:v,setCallbacks:A,allowPinchZoom:!!x,lockRef:s,gapMode:w}),d?b.cloneElement(b.Children.only(u),Ke(Ke({},L),{ref:T})):b.createElement(k,Ke({},L,{className:h,ref:T}),u))});_i.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1};_i.classNames={fullWidth:ei,zeroRight:Qo};var iD=function(){if(typeof __webpack_nonce__<"u")return __webpack_nonce__};function cD(){if(!document)return null;var t=document.createElement("style");t.type="text/css";var a=iD();return a&&t.setAttribute("nonce",a),t}function AD(t,a){t.styleSheet?t.styleSheet.cssText=a:t.appendChild(document.createTextNode(a))}function lD(t){var a=document.head||document.getElementsByTagName("head")[0];a.appendChild(t)}var dD=function(){var t=0,a=null;return{add:function(s){t==0&&(a=cD())&&(AD(a,s),lD(a)),t++},remove:function(){t--,!t&&a&&(a.parentNode&&a.parentNode.removeChild(a),a=null)}}},uD=function(){var t=dD();return function(a,s){b.useEffect(function(){return t.add(a),function(){t.remove()}},[a&&s])}},Ph=function(){var t=uD(),a=function(s){var o=s.styles,c=s.dynamic;return t(o,c),null};return a},fD={left:0,top:0,right:0,gap:0},dl=function(t){return parseInt(t||"",10)||0},pD=function(t){var a=window.getComputedStyle(document.body),s=a[t==="padding"?"paddingLeft":"marginLeft"],o=a[t==="padding"?"paddingTop":"marginTop"],c=a[t==="padding"?"paddingRight":"marginRight"];return[dl(s),dl(o),dl(c)]},mD=function(t){if(t===void 0&&(t="margin"),typeof window>"u")return fD;var a=pD(t),s=document.documentElement.clientWidth,o=window.innerWidth;return{left:a[0],top:a[1],right:a[2],gap:Math.max(0,o-s+a[2]-a[0])}},hD=Ph(),ka="data-scroll-locked",gD=function(t,a,s,o){var c=t.left,A=t.top,d=t.right,u=t.gap;return s===void 0&&(s="margin"),`
  .`.concat($v,` {
   overflow: hidden `).concat(o,`;
   padding-right: `).concat(u,"px ").concat(o,`;
  }
  body[`).concat(ka,`] {
    overflow: hidden `).concat(o,`;
    overscroll-behavior: contain;
    `).concat([a&&"position: relative ".concat(o,";"),s==="margin"&&`
    padding-left: `.concat(c,`px;
    padding-top: `).concat(A,`px;
    padding-right: `).concat(d,`px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(u,"px ").concat(o,`;
    `),s==="padding"&&"padding-right: ".concat(u,"px ").concat(o,";")].filter(Boolean).join(""),`
  }
  
  .`).concat(Qo,` {
    right: `).concat(u,"px ").concat(o,`;
  }
  
  .`).concat(ei,` {
    margin-right: `).concat(u,"px ").concat(o,`;
  }
  
  .`).concat(Qo," .").concat(Qo,` {
    right: 0 `).concat(o,`;
  }
  
  .`).concat(ei," .").concat(ei,` {
    margin-right: 0 `).concat(o,`;
  }
  
  body[`).concat(ka,`] {
    `).concat(Qv,": ").concat(u,`px;
  }
`)},Gp=function(){var t=parseInt(document.body.getAttribute(ka)||"0",10);return isFinite(t)?t:0},CD=function(){b.useEffect(function(){return document.body.setAttribute(ka,(Gp()+1).toString()),function(){var t=Gp()-1;t<=0?document.body.removeAttribute(ka):document.body.setAttribute(ka,t.toString())}},[])},yD=function(t){var a=t.noRelative,s=t.noImportant,o=t.gapMode,c=o===void 0?"margin":o;CD();var A=b.useMemo(function(){return mD(c)},[c]);return b.createElement(hD,{styles:gD(A,!a,c,s?"":"!important")})},Gl=!1;if(typeof window<"u")try{var Mo=Object.defineProperty({},"passive",{get:function(){return Gl=!0,!0}});window.addEventListener("test",Mo,Mo),window.removeEventListener("test",Mo,Mo)}catch{Gl=!1}var Ba=Gl?{passive:!1}:!1,bD=function(t){return t.tagName==="TEXTAREA"},Ih=function(t,a){if(!(t instanceof Element))return!1;var s=window.getComputedStyle(t);return s[a]!=="hidden"&&!(s.overflowY===s.overflowX&&!bD(t)&&s[a]==="visible")},FD=function(t){return Ih(t,"overflowY")},ED=function(t){return Ih(t,"overflowX")},qp=function(t,a){var s=a.ownerDocument,o=a;do{typeof ShadowRoot<"u"&&o instanceof ShadowRoot&&(o=o.host);var c=Nh(t,o);if(c){var A=Lh(t,o),d=A[1],u=A[2];if(d>u)return!0}o=o.parentNode}while(o&&o!==s.body);return!1},BD=function(t){var a=t.scrollTop,s=t.scrollHeight,o=t.clientHeight;return[a,s,o]},vD=function(t){var a=t.scrollLeft,s=t.scrollWidth,o=t.clientWidth;return[a,s,o]},Nh=function(t,a){return t==="v"?FD(a):ED(a)},Lh=function(t,a){return t==="v"?BD(a):vD(a)},DD=function(t,a){return t==="h"&&a==="rtl"?-1:1},xD=function(t,a,s,o,c){var A=DD(t,window.getComputedStyle(a).direction),d=A*o,u=s.target,h=a.contains(u),m=!1,y=d>0,g=0,F=0;do{if(!u)break;var E=Lh(t,u),B=E[0],v=E[1],x=E[2],_=v-x-A*B;(B||_)&&Nh(t,u)&&(g+=_,F+=B);var k=u.parentNode;u=k&&k.nodeType===Node.DOCUMENT_FRAGMENT_NODE?k.host:k}while(!h&&u!==document.body||h&&(a.contains(u)||a===u));return(y&&Math.abs(g)<1||!y&&Math.abs(F)<1)&&(m=!0),m},Uo=function(t){return"changedTouches"in t?[t.changedTouches[0].clientX,t.changedTouches[0].clientY]:[0,0]},Hp=function(t){return[t.deltaX,t.deltaY]},Yp=function(t){return t&&"current"in t?t.current:t},_D=function(t,a){return t[0]===a[0]&&t[1]===a[1]},wD=function(t){return`
  .block-interactivity-`.concat(t,` {pointer-events: none;}
  .allow-interactivity-`).concat(t,` {pointer-events: all;}
`)},SD=0,va=[];function kD(t){var a=b.useRef([]),s=b.useRef([0,0]),o=b.useRef(),c=b.useState(SD++)[0],A=b.useState(Ph)[0],d=b.useRef(t);b.useEffect(function(){d.current=t},[t]),b.useEffect(function(){if(t.inert){document.body.classList.add("block-interactivity-".concat(c));var v=Zv([t.lockRef.current],(t.shards||[]).map(Yp),!0).filter(Boolean);return v.forEach(function(x){return x.classList.add("allow-interactivity-".concat(c))}),function(){document.body.classList.remove("block-interactivity-".concat(c)),v.forEach(function(x){return x.classList.remove("allow-interactivity-".concat(c))})}}},[t.inert,t.lockRef.current,t.shards]);var u=b.useCallback(function(v,x){if("touches"in v&&v.touches.length===2||v.type==="wheel"&&v.ctrlKey)return!d.current.allowPinchZoom;var _=Uo(v),k=s.current,w="deltaX"in v?v.deltaX:k[0]-_[0],O="deltaY"in v?v.deltaY:k[1]-_[1],R,T=v.target,L=Math.abs(w)>Math.abs(O)?"h":"v";if("touches"in v&&L==="h"&&T.type==="range")return!1;var j=qp(L,T);if(!j)return!0;if(j?R=L:(R=L==="v"?"h":"v",j=qp(L,T)),!j)return!1;if(!o.current&&"changedTouches"in v&&(w||O)&&(o.current=R),!R)return!0;var q=o.current||R;return xD(q,x,v,q==="h"?w:O)},[]),h=b.useCallback(function(v){var x=v;if(!(!va.length||va[va.length-1]!==A)){var _="deltaY"in x?Hp(x):Uo(x),k=a.current.filter(function(R){return R.name===x.type&&(R.target===x.target||x.target===R.shadowParent)&&_D(R.delta,_)})[0];if(k&&k.should){x.cancelable&&x.preventDefault();return}if(!k){var w=(d.current.shards||[]).map(Yp).filter(Boolean).filter(function(R){return R.contains(x.target)}),O=w.length>0?u(x,w[0]):!d.current.noIsolation;O&&x.cancelable&&x.preventDefault()}}},[]),m=b.useCallback(function(v,x,_,k){var w={name:v,delta:x,target:_,should:k,shadowParent:TD(_)};a.current.push(w),setTimeout(function(){a.current=a.current.filter(function(O){return O!==w})},1)},[]),y=b.useCallback(function(v){s.current=Uo(v),o.current=void 0},[]),g=b.useCallback(function(v){m(v.type,Hp(v),v.target,u(v,t.lockRef.current))},[]),F=b.useCallback(function(v){m(v.type,Uo(v),v.target,u(v,t.lockRef.current))},[]);b.useEffect(function(){return va.push(A),t.setCallbacks({onScrollCapture:g,onWheelCapture:g,onTouchMoveCapture:F}),document.addEventListener("wheel",h,Ba),document.addEventListener("touchmove",h,Ba),document.addEventListener("touchstart",y,Ba),function(){va=va.filter(function(v){return v!==A}),document.removeEventListener("wheel",h,Ba),document.removeEventListener("touchmove",h,Ba),document.removeEventListener("touchstart",y,Ba)}},[]);var E=t.removeScrollBar,B=t.inert;return b.createElement(b.Fragment,null,B?b.createElement(A,{styles:wD(c)}):null,E?b.createElement(yD,{noRelative:t.noRelative,gapMode:t.gapMode}):null)}function TD(t){for(var a=null;t!==null;)t instanceof ShadowRoot&&(a=t.host,t=t.host),t=t.parentNode;return a}const OD=oD(Rh,kD);var wi=b.forwardRef(function(t,a){return b.createElement(_i,Ke({},t,{ref:a,sideCar:OD}))});wi.classNames=_i.classNames;var RD=function(t){if(typeof document>"u")return null;var a=Array.isArray(t)?t[0]:t;return a.ownerDocument.body},Da=new WeakMap,jo=new WeakMap,Vo={},ul=0,zh=function(t){return t&&(t.host||zh(t.parentNode))},PD=function(t,a){return a.map(function(s){if(t.contains(s))return s;var o=zh(s);return o&&t.contains(o)?o:(console.error("aria-hidden",s,"in not contained inside",t,". Doing nothing"),null)}).filter(function(s){return!!s})},ID=function(t,a,s,o){var c=PD(a,Array.isArray(t)?t:[t]);Vo[s]||(Vo[s]=new WeakMap);var A=Vo[s],d=[],u=new Set,h=new Set(c),m=function(g){!g||u.has(g)||(u.add(g),m(g.parentNode))};c.forEach(m);var y=function(g){!g||h.has(g)||Array.prototype.forEach.call(g.children,function(F){if(u.has(F))y(F);else try{var E=F.getAttribute(o),B=E!==null&&E!=="false",v=(Da.get(F)||0)+1,x=(A.get(F)||0)+1;Da.set(F,v),A.set(F,x),d.push(F),v===1&&B&&jo.set(F,!0),x===1&&F.setAttribute(s,"true"),B||F.setAttribute(o,"true")}catch(_){console.error("aria-hidden: cannot operate on ",F,_)}})};return y(a),u.clear(),ul++,function(){d.forEach(function(g){var F=Da.get(g)-1,E=A.get(g)-1;Da.set(g,F),A.set(g,E),F||(jo.has(g)||g.removeAttribute(o),jo.delete(g)),E||g.removeAttribute(s)}),ul--,ul||(Da=new WeakMap,Da=new WeakMap,jo=new WeakMap,Vo={})}},kd=function(t,a,s){s===void 0&&(s="data-aria-hidden");var o=Array.from(Array.isArray(t)?t:[t]),c=RD(t);return c?(o.push.apply(o,Array.from(c.querySelectorAll("[aria-live], script"))),ID(o,c,s,"aria-hidden")):function(){return null}},Si="Dialog",[Mh,Vk]=ze(Si),[ND,Me]=Mh(Si),Uh=t=>{const{__scopeDialog:a,children:s,open:o,defaultOpen:c,onOpenChange:A,modal:d=!0}=t,u=b.useRef(null),h=b.useRef(null),[m,y]=Qe({prop:o,defaultProp:c??!1,onChange:A,caller:Si});return C.jsx(ND,{scope:a,triggerRef:u,contentRef:h,contentId:Ee(),titleId:Ee(),descriptionId:Ee(),open:m,onOpenChange:y,onOpenToggle:b.useCallback(()=>y(g=>!g),[y]),modal:d,children:s})};Uh.displayName=Si;var jh="DialogTrigger",Vh=b.forwardRef((t,a)=>{const{__scopeDialog:s,...o}=t,c=Me(jh,s),A=r2(a,c.triggerRef);return C.jsx(T0.button,{type:"button","aria-haspopup":"dialog","aria-expanded":c.open,"aria-controls":c.contentId,"data-state":Rd(c.open),...o,ref:A,onClick:h0(t.onClick,c.onOpenToggle)})});Vh.displayName=jh;var Td="DialogPortal",[LD,Gh]=Mh(Td,{forceMount:void 0}),qh=t=>{const{__scopeDialog:a,forceMount:s,children:o,container:c}=t,A=Me(Td,a);return C.jsx(LD,{scope:a,forceMount:s,children:b.Children.map(o,d=>C.jsx(z2,{present:s||A.open,children:C.jsx(xi,{asChild:!0,container:c,children:d})}))})};qh.displayName=Td;var ci="DialogOverlay",Hh=b.forwardRef((t,a)=>{const s=Gh(ci,t.__scopeDialog),{forceMount:o=s.forceMount,...c}=t,A=Me(ci,t.__scopeDialog);return A.modal?C.jsx(z2,{present:o||A.open,children:C.jsx(MD,{...c,ref:a})}):null});Hh.displayName=ci;var zD=Ra("DialogOverlay.RemoveScroll"),MD=b.forwardRef((t,a)=>{const{__scopeDialog:s,...o}=t,c=Me(ci,s);return C.jsx(wi,{as:zD,allowPinchZoom:!0,shards:[c.contentRef],children:C.jsx(T0.div,{"data-state":Rd(c.open),...o,ref:a,style:{pointerEvents:"auto",...o.style}})})}),Rn="DialogContent",Yh=b.forwardRef((t,a)=>{const s=Gh(Rn,t.__scopeDialog),{forceMount:o=s.forceMount,...c}=t,A=Me(Rn,t.__scopeDialog);return C.jsx(z2,{present:o||A.open,children:A.modal?C.jsx(UD,{...c,ref:a}):C.jsx(jD,{...c,ref:a})})});Yh.displayName=Rn;var UD=b.forwardRef((t,a)=>{const s=Me(Rn,t.__scopeDialog),o=b.useRef(null),c=r2(a,s.contentRef,o);return b.useEffect(()=>{const A=o.current;if(A)return kd(A)},[]),C.jsx(Wh,{...t,ref:c,trapFocus:s.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:h0(t.onCloseAutoFocus,A=>{var d;A.preventDefault(),(d=s.triggerRef.current)==null||d.focus()}),onPointerDownOutside:h0(t.onPointerDownOutside,A=>{const d=A.detail.originalEvent,u=d.button===0&&d.ctrlKey===!0;(d.button===2||u)&&A.preventDefault()}),onFocusOutside:h0(t.onFocusOutside,A=>A.preventDefault())})}),jD=b.forwardRef((t,a)=>{const s=Me(Rn,t.__scopeDialog),o=b.useRef(!1),c=b.useRef(!1);return C.jsx(Wh,{...t,ref:a,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:A=>{var d,u;(d=t.onCloseAutoFocus)==null||d.call(t,A),A.defaultPrevented||(o.current||(u=s.triggerRef.current)==null||u.focus(),A.preventDefault()),o.current=!1,c.current=!1},onInteractOutside:A=>{var h,m;(h=t.onInteractOutside)==null||h.call(t,A),A.defaultPrevented||(o.current=!0,A.detail.originalEvent.type==="pointerdown"&&(c.current=!0));const d=A.target;((m=s.triggerRef.current)==null?void 0:m.contains(d))&&A.preventDefault(),A.detail.originalEvent.type==="focusin"&&c.current&&A.preventDefault()}})}),Wh=b.forwardRef((t,a)=>{const{__scopeDialog:s,trapFocus:o,onOpenAutoFocus:c,onCloseAutoFocus:A,...d}=t,u=Me(Rn,s),h=b.useRef(null),m=r2(a,h);return Sd(),C.jsxs(C.Fragment,{children:[C.jsx(Di,{asChild:!0,loop:!0,trapped:o,onMountAutoFocus:c,onUnmountAutoFocus:A,children:C.jsx(ds,{role:"dialog",id:u.contentId,"aria-describedby":u.descriptionId,"aria-labelledby":u.titleId,"data-state":Rd(u.open),...d,ref:m,onDismiss:()=>u.onOpenChange(!1)})}),C.jsxs(C.Fragment,{children:[C.jsx(qD,{titleId:u.titleId}),C.jsx(YD,{contentRef:h,descriptionId:u.descriptionId})]})]})}),Od="DialogTitle",Kh=b.forwardRef((t,a)=>{const{__scopeDialog:s,...o}=t,c=Me(Od,s);return C.jsx(T0.h2,{id:c.titleId,...o,ref:a})});Kh.displayName=Od;var Xh="DialogDescription",VD=b.forwardRef((t,a)=>{const{__scopeDialog:s,...o}=t,c=Me(Xh,s);return C.jsx(T0.p,{id:c.descriptionId,...o,ref:a})});VD.displayName=Xh;var Jh="DialogClose",GD=b.forwardRef((t,a)=>{const{__scopeDialog:s,...o}=t,c=Me(Jh,s);return C.jsx(T0.button,{type:"button",...o,ref:a,onClick:h0(t.onClick,()=>c.onOpenChange(!1))})});GD.displayName=Jh;function Rd(t){return t?"open":"closed"}var Zh="DialogTitleWarning",[Gk,$h]=yv(Zh,{contentName:Rn,titleName:Od,docsSlug:"dialog"}),qD=({titleId:t})=>{const a=$h(Zh),s=`\`${a.contentName}\` requires a \`${a.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${a.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${a.docsSlug}`;return b.useEffect(()=>{t&&(document.getElementById(t)||console.error(s))},[s,t]),null},HD="DialogDescriptionWarning",YD=({contentRef:t,descriptionId:a})=>{const o=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${$h(HD).contentName}}.`;return b.useEffect(()=>{var A;const c=(A=t.current)==null?void 0:A.getAttribute("aria-describedby");a&&c&&(document.getElementById(a)||console.warn(o))},[o,t,a]),null},Qh=Uh,eg=Vh,WD=qh,KD=Hh,XD=Yh,JD=Kh;const ZD=async()=>JSON.stringify(await(await fetch("/.vocs/search-index-579fd5f2.json")).json());var n2=function(){return n2=Object.assign||function(a){for(var s,o=1,c=arguments.length;o<c;o++){s=arguments[o];for(var A in s)Object.prototype.hasOwnProperty.call(s,A)&&(a[A]=s[A])}return a},n2.apply(this,arguments)};function $D(t,a,s,o){function c(A){return A instanceof s?A:new s(function(d){d(A)})}return new(s||(s=Promise))(function(A,d){function u(y){try{m(o.next(y))}catch(g){d(g)}}function h(y){try{m(o.throw(y))}catch(g){d(g)}}function m(y){y.done?A(y.value):c(y.value).then(u,h)}m((o=o.apply(t,[])).next())})}function QD(t,a){var s={label:0,sent:function(){if(A[0]&1)throw A[1];return A[1]},trys:[],ops:[]},o,c,A,d;return d={next:u(0),throw:u(1),return:u(2)},typeof Symbol=="function"&&(d[Symbol.iterator]=function(){return this}),d;function u(m){return function(y){return h([m,y])}}function h(m){if(o)throw new TypeError("Generator is already executing.");for(;d&&(d=0,m[0]&&(s=0)),s;)try{if(o=1,c&&(A=m[0]&2?c.return:m[0]?c.throw||((A=c.return)&&A.call(c),0):c.next)&&!(A=A.call(c,m[1])).done)return A;switch(c=0,A&&(m=[m[0]&2,A.value]),m[0]){case 0:case 1:A=m;break;case 4:return s.label++,{value:m[1],done:!1};case 5:s.label++,c=m[1],m=[0];continue;case 7:m=s.ops.pop(),s.trys.pop();continue;default:if(A=s.trys,!(A=A.length>0&&A[A.length-1])&&(m[0]===6||m[0]===2)){s=0;continue}if(m[0]===3&&(!A||m[1]>A[0]&&m[1]<A[3])){s.label=m[1];break}if(m[0]===6&&s.label<A[1]){s.label=A[1],A=m;break}if(A&&s.label<A[2]){s.label=A[2],s.ops.push(m);break}A[2]&&s.ops.pop(),s.trys.pop();continue}m=a.call(t,s)}catch(y){m=[6,y],c=0}finally{o=A=0}if(m[0]&5)throw m[1];return{value:m[0]?m[1]:void 0,done:!0}}}function I0(t){var a=typeof Symbol=="function"&&Symbol.iterator,s=a&&t[a],o=0;if(s)return s.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&o>=t.length&&(t=void 0),{value:t&&t[o++],done:!t}}};throw new TypeError(a?"Object is not iterable.":"Symbol.iterator is not defined.")}function C2(t,a){var s=typeof Symbol=="function"&&t[Symbol.iterator];if(!s)return t;var o=s.call(t),c,A=[],d;try{for(;(a===void 0||a-- >0)&&!(c=o.next()).done;)A.push(c.value)}catch(u){d={error:u}}finally{try{c&&!c.done&&(s=o.return)&&s.call(o)}finally{if(d)throw d.error}}return A}var e9="ENTRIES",tg="KEYS",ng="VALUES",O2="",fl=function(){function t(a,s){var o=a._tree,c=Array.from(o.keys());this.set=a,this._type=s,this._path=c.length>0?[{node:o,keys:c}]:[]}return t.prototype.next=function(){var a=this.dive();return this.backtrack(),a},t.prototype.dive=function(){if(this._path.length===0)return{done:!0,value:void 0};var a=xa(this._path),s=a.node,o=a.keys;if(xa(o)===O2)return{done:!1,value:this.result()};var c=s.get(xa(o));return this._path.push({node:c,keys:Array.from(c.keys())}),this.dive()},t.prototype.backtrack=function(){if(this._path.length!==0){var a=xa(this._path).keys;a.pop(),!(a.length>0)&&(this._path.pop(),this.backtrack())}},t.prototype.key=function(){return this.set._prefix+this._path.map(function(a){var s=a.keys;return xa(s)}).filter(function(a){return a!==O2}).join("")},t.prototype.value=function(){return xa(this._path).node.get(O2)},t.prototype.result=function(){switch(this._type){case ng:return this.value();case tg:return this.key();default:return[this.key(),this.value()]}},t.prototype[Symbol.iterator]=function(){return this},t}(),xa=function(t){return t[t.length-1]},t9=function(t,a,s){var o=new Map;if(a===void 0)return o;for(var c=a.length+1,A=c+s,d=new Uint8Array(A*c).fill(s+1),u=0;u<c;++u)d[u]=u;for(var h=1;h<A;++h)d[h*c]=h;return ag(t,a,s,o,d,1,c,""),o},ag=function(t,a,s,o,c,A,d,u){var h,m,y=A*d;try{e:for(var g=I0(t.keys()),F=g.next();!F.done;F=g.next()){var E=F.value;if(E===O2){var B=c[y-1];B<=s&&o.set(u,[t.get(E),B])}else{for(var v=A,x=0;x<E.length;++x,++v){for(var _=E[x],k=d*v,w=k-d,O=c[k],R=Math.max(0,v-s-1),T=Math.min(d-1,v+s),L=R;L<T;++L){var j=_!==a[L],q=c[w+L]+ +j,r0=c[w+L+1]+1,d0=c[k+L]+1,i0=c[k+L+1]=Math.min(q,r0,d0);i0<O&&(O=i0)}if(O>s)continue e}ag(t.get(E),a,s,o,c,v,d,u+E)}}}catch(A0){h={error:A0}}finally{try{F&&!F.done&&(m=g.return)&&m.call(g)}finally{if(h)throw h.error}}},pl=function(){function t(a,s){a===void 0&&(a=new Map),s===void 0&&(s=""),this._size=void 0,this._tree=a,this._prefix=s}return t.prototype.atPrefix=function(a){var s,o;if(!a.startsWith(this._prefix))throw new Error("Mismatched prefix");var c=C2(Ai(this._tree,a.slice(this._prefix.length)),2),A=c[0],d=c[1];if(A===void 0){var u=C2(Pd(d),2),h=u[0],m=u[1];try{for(var y=I0(h.keys()),g=y.next();!g.done;g=y.next()){var F=g.value;if(F!==O2&&F.startsWith(m)){var E=new Map;return E.set(F.slice(m.length),h.get(F)),new t(E,a)}}}catch(B){s={error:B}}finally{try{g&&!g.done&&(o=y.return)&&o.call(y)}finally{if(s)throw s.error}}}return new t(A,a)},t.prototype.clear=function(){this._size=void 0,this._tree.clear()},t.prototype.delete=function(a){return this._size=void 0,n9(this._tree,a)},t.prototype.entries=function(){return new fl(this,e9)},t.prototype.forEach=function(a){var s,o;try{for(var c=I0(this),A=c.next();!A.done;A=c.next()){var d=C2(A.value,2),u=d[0],h=d[1];a(u,h,this)}}catch(m){s={error:m}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}},t.prototype.fuzzyGet=function(a,s){return t9(this._tree,a,s)},t.prototype.get=function(a){var s=ql(this._tree,a);return s!==void 0?s.get(O2):void 0},t.prototype.has=function(a){var s=ql(this._tree,a);return s!==void 0&&s.has(O2)},t.prototype.keys=function(){return new fl(this,tg)},t.prototype.set=function(a,s){if(typeof a!="string")throw new Error("key must be a string");this._size=void 0;var o=ml(this._tree,a);return o.set(O2,s),this},Object.defineProperty(t.prototype,"size",{get:function(){if(this._size)return this._size;this._size=0;for(var a=this.entries();!a.next().done;)this._size+=1;return this._size},enumerable:!1,configurable:!0}),t.prototype.update=function(a,s){if(typeof a!="string")throw new Error("key must be a string");this._size=void 0;var o=ml(this._tree,a);return o.set(O2,s(o.get(O2))),this},t.prototype.fetch=function(a,s){if(typeof a!="string")throw new Error("key must be a string");this._size=void 0;var o=ml(this._tree,a),c=o.get(O2);return c===void 0&&o.set(O2,c=s()),c},t.prototype.values=function(){return new fl(this,ng)},t.prototype[Symbol.iterator]=function(){return this.entries()},t.from=function(a){var s,o,c=new t;try{for(var A=I0(a),d=A.next();!d.done;d=A.next()){var u=C2(d.value,2),h=u[0],m=u[1];c.set(h,m)}}catch(y){s={error:y}}finally{try{d&&!d.done&&(o=A.return)&&o.call(A)}finally{if(s)throw s.error}}return c},t.fromObject=function(a){return t.from(Object.entries(a))},t}(),Ai=function(t,a,s){var o,c;if(s===void 0&&(s=[]),a.length===0||t==null)return[t,s];try{for(var A=I0(t.keys()),d=A.next();!d.done;d=A.next()){var u=d.value;if(u!==O2&&a.startsWith(u))return s.push([t,u]),Ai(t.get(u),a.slice(u.length),s)}}catch(h){o={error:h}}finally{try{d&&!d.done&&(c=A.return)&&c.call(A)}finally{if(o)throw o.error}}return s.push([t,a]),Ai(void 0,"",s)},ql=function(t,a){var s,o;if(a.length===0||t==null)return t;try{for(var c=I0(t.keys()),A=c.next();!A.done;A=c.next()){var d=A.value;if(d!==O2&&a.startsWith(d))return ql(t.get(d),a.slice(d.length))}}catch(u){s={error:u}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}},ml=function(t,a){var s,o,c=a.length;e:for(var A=0;t&&A<c;){try{for(var d=(s=void 0,I0(t.keys())),u=d.next();!u.done;u=d.next()){var h=u.value;if(h!==O2&&a[A]===h[0]){for(var m=Math.min(c-A,h.length),y=1;y<m&&a[A+y]===h[y];)++y;var g=t.get(h);if(y===h.length)t=g;else{var F=new Map;F.set(h.slice(y),g),t.set(a.slice(A,A+y),F),t.delete(h),t=F}A+=y;continue e}}}catch(B){s={error:B}}finally{try{u&&!u.done&&(o=d.return)&&o.call(d)}finally{if(s)throw s.error}}var E=new Map;return t.set(a.slice(A),E),E}return t},n9=function(t,a){var s=C2(Ai(t,a),2),o=s[0],c=s[1];if(o!==void 0){if(o.delete(O2),o.size===0)rg(c);else if(o.size===1){var A=C2(o.entries().next().value,2),d=A[0],u=A[1];sg(c,d,u)}}},rg=function(t){if(t.length!==0){var a=C2(Pd(t),2),s=a[0],o=a[1];if(s.delete(o),s.size===0)rg(t.slice(0,-1));else if(s.size===1){var c=C2(s.entries().next().value,2),A=c[0],d=c[1];A!==O2&&sg(t.slice(0,-1),A,d)}}},sg=function(t,a,s){if(t.length!==0){var o=C2(Pd(t),2),c=o[0],A=o[1];c.set(A+a,s),c.delete(A)}},Pd=function(t){return t[t.length-1]},Xr,Id="or",og="and",a9="and_not",r9=function(){function t(a){if((a==null?void 0:a.fields)==null)throw new Error('MiniSearch: option "fields" must be provided');var s=a.autoVacuum==null||a.autoVacuum===!0?Cl:a.autoVacuum;this._options=n2(n2(n2({},gl),a),{autoVacuum:s,searchOptions:n2(n2({},Wp),a.searchOptions||{}),autoSuggestOptions:n2(n2({},A9),a.autoSuggestOptions||{})}),this._index=new pl,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=Yl,this.addFields(this._options.fields)}return t.prototype.add=function(a){var s,o,c,A,d,u,h=this._options,m=h.extractField,y=h.tokenize,g=h.processTerm,F=h.fields,E=h.idField,B=m(a,E);if(B==null)throw new Error('MiniSearch: document does not have ID field "'.concat(E,'"'));if(this._idToShortId.has(B))throw new Error("MiniSearch: duplicate ID ".concat(B));var v=this.addDocumentId(B);this.saveStoredFields(v,a);try{for(var x=I0(F),_=x.next();!_.done;_=x.next()){var k=_.value,w=m(a,k);if(w!=null){var O=y(w.toString(),k),R=this._fieldIds[k],T=new Set(O).size;this.addFieldLength(v,R,this._documentCount-1,T);try{for(var L=(c=void 0,I0(O)),j=L.next();!j.done;j=L.next()){var q=j.value,r0=g(q,k);if(Array.isArray(r0))try{for(var d0=(d=void 0,I0(r0)),i0=d0.next();!i0.done;i0=d0.next()){var A0=i0.value;this.addTerm(R,v,A0)}}catch(W){d={error:W}}finally{try{i0&&!i0.done&&(u=d0.return)&&u.call(d0)}finally{if(d)throw d.error}}else r0&&this.addTerm(R,v,r0)}}catch(W){c={error:W}}finally{try{j&&!j.done&&(A=L.return)&&A.call(L)}finally{if(c)throw c.error}}}}}catch(W){s={error:W}}finally{try{_&&!_.done&&(o=x.return)&&o.call(x)}finally{if(s)throw s.error}}},t.prototype.addAll=function(a){var s,o;try{for(var c=I0(a),A=c.next();!A.done;A=c.next()){var d=A.value;this.add(d)}}catch(u){s={error:u}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}},t.prototype.addAllAsync=function(a,s){var o=this;s===void 0&&(s={});var c=s.chunkSize,A=c===void 0?10:c,d={chunk:[],promise:Promise.resolve()},u=a.reduce(function(y,g,F){var E=y.chunk,B=y.promise;return E.push(g),(F+1)%A===0?{chunk:[],promise:B.then(function(){return new Promise(function(v){return setTimeout(v,0)})}).then(function(){return o.addAll(E)})}:{chunk:E,promise:B}},d),h=u.chunk,m=u.promise;return m.then(function(){return o.addAll(h)})},t.prototype.remove=function(a){var s,o,c,A,d,u,h=this._options,m=h.tokenize,y=h.processTerm,g=h.extractField,F=h.fields,E=h.idField,B=g(a,E);if(B==null)throw new Error('MiniSearch: document does not have ID field "'.concat(E,'"'));var v=this._idToShortId.get(B);if(v==null)throw new Error("MiniSearch: cannot remove document with ID ".concat(B,": it is not in the index"));try{for(var x=I0(F),_=x.next();!_.done;_=x.next()){var k=_.value,w=g(a,k);if(w!=null){var O=m(w.toString(),k),R=this._fieldIds[k],T=new Set(O).size;this.removeFieldLength(v,R,this._documentCount,T);try{for(var L=(c=void 0,I0(O)),j=L.next();!j.done;j=L.next()){var q=j.value,r0=y(q,k);if(Array.isArray(r0))try{for(var d0=(d=void 0,I0(r0)),i0=d0.next();!i0.done;i0=d0.next()){var A0=i0.value;this.removeTerm(R,v,A0)}}catch(W){d={error:W}}finally{try{i0&&!i0.done&&(u=d0.return)&&u.call(d0)}finally{if(d)throw d.error}}else r0&&this.removeTerm(R,v,r0)}}catch(W){c={error:W}}finally{try{j&&!j.done&&(A=L.return)&&A.call(L)}finally{if(c)throw c.error}}}}}catch(W){s={error:W}}finally{try{_&&!_.done&&(o=x.return)&&o.call(x)}finally{if(s)throw s.error}}this._storedFields.delete(v),this._documentIds.delete(v),this._idToShortId.delete(B),this._fieldLength.delete(v),this._documentCount-=1},t.prototype.removeAll=function(a){var s,o;if(a)try{for(var c=I0(a),A=c.next();!A.done;A=c.next()){var d=A.value;this.remove(d)}}catch(u){s={error:u}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}else{if(arguments.length>0)throw new Error("Expected documents to be present. Omit the argument to remove all documents.");this._index=new pl,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldLength=new Map,this._avgFieldLength=[],this._storedFields=new Map,this._nextId=0}},t.prototype.discard=function(a){var s=this,o=this._idToShortId.get(a);if(o==null)throw new Error("MiniSearch: cannot discard document with ID ".concat(a,": it is not in the index"));this._idToShortId.delete(a),this._documentIds.delete(o),this._storedFields.delete(o),(this._fieldLength.get(o)||[]).forEach(function(c,A){s.removeFieldLength(o,A,s._documentCount,c)}),this._fieldLength.delete(o),this._documentCount-=1,this._dirtCount+=1,this.maybeAutoVacuum()},t.prototype.maybeAutoVacuum=function(){if(this._options.autoVacuum!==!1){var a=this._options.autoVacuum,s=a.minDirtFactor,o=a.minDirtCount,c=a.batchSize,A=a.batchWait;this.conditionalVacuum({batchSize:c,batchWait:A},{minDirtCount:o,minDirtFactor:s})}},t.prototype.discardAll=function(a){var s,o,c=this._options.autoVacuum;try{this._options.autoVacuum=!1;try{for(var A=I0(a),d=A.next();!d.done;d=A.next()){var u=d.value;this.discard(u)}}catch(h){s={error:h}}finally{try{d&&!d.done&&(o=A.return)&&o.call(A)}finally{if(s)throw s.error}}}finally{this._options.autoVacuum=c}this.maybeAutoVacuum()},t.prototype.replace=function(a){var s=this._options,o=s.idField,c=s.extractField,A=c(a,o);this.discard(A),this.add(a)},t.prototype.vacuum=function(a){return a===void 0&&(a={}),this.conditionalVacuum(a)},t.prototype.conditionalVacuum=function(a,s){var o=this;return this._currentVacuum?(this._enqueuedVacuumConditions=this._enqueuedVacuumConditions&&s,this._enqueuedVacuum!=null?this._enqueuedVacuum:(this._enqueuedVacuum=this._currentVacuum.then(function(){var c=o._enqueuedVacuumConditions;return o._enqueuedVacuumConditions=Yl,o.performVacuuming(a,c)}),this._enqueuedVacuum)):this.vacuumConditionsMet(s)===!1?Promise.resolve():(this._currentVacuum=this.performVacuuming(a),this._currentVacuum)},t.prototype.performVacuuming=function(a,s){return $D(this,void 0,void 0,function(){var o,c,A,d,u,h,m,y,g,F,E,B,v,x,_,k,w,O,R,T,L,j,q,r0,d0;return QD(this,function(i0){switch(i0.label){case 0:if(o=this._dirtCount,!this.vacuumConditionsMet(s))return[3,10];c=a.batchSize||Hl.batchSize,A=a.batchWait||Hl.batchWait,d=1,i0.label=1;case 1:i0.trys.push([1,7,8,9]),u=I0(this._index),h=u.next(),i0.label=2;case 2:if(h.done)return[3,6];m=C2(h.value,2),y=m[0],g=m[1];try{for(F=(j=void 0,I0(g)),E=F.next();!E.done;E=F.next()){B=C2(E.value,2),v=B[0],x=B[1];try{for(_=(r0=void 0,I0(x)),k=_.next();!k.done;k=_.next())w=C2(k.value,1),O=w[0],!this._documentIds.has(O)&&(x.size<=1?g.delete(v):x.delete(O))}catch(A0){r0={error:A0}}finally{try{k&&!k.done&&(d0=_.return)&&d0.call(_)}finally{if(r0)throw r0.error}}}}catch(A0){j={error:A0}}finally{try{E&&!E.done&&(q=F.return)&&q.call(F)}finally{if(j)throw j.error}}return this._index.get(y).size===0&&this._index.delete(y),d%c!==0?[3,4]:[4,new Promise(function(A0){return setTimeout(A0,A)})];case 3:i0.sent(),i0.label=4;case 4:d+=1,i0.label=5;case 5:return h=u.next(),[3,2];case 6:return[3,9];case 7:return R=i0.sent(),T={error:R},[3,9];case 8:try{h&&!h.done&&(L=u.return)&&L.call(u)}finally{if(T)throw T.error}return[7];case 9:this._dirtCount-=o,i0.label=10;case 10:return[4,null];case 11:return i0.sent(),this._currentVacuum=this._enqueuedVacuum,this._enqueuedVacuum=null,[2]}})})},t.prototype.vacuumConditionsMet=function(a){if(a==null)return!0;var s=a.minDirtCount,o=a.minDirtFactor;return s=s||Cl.minDirtCount,o=o||Cl.minDirtFactor,this.dirtCount>=s&&this.dirtFactor>=o},Object.defineProperty(t.prototype,"isVacuuming",{get:function(){return this._currentVacuum!=null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dirtCount",{get:function(){return this._dirtCount},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dirtFactor",{get:function(){return this._dirtCount/(1+this._documentCount+this._dirtCount)},enumerable:!1,configurable:!0}),t.prototype.has=function(a){return this._idToShortId.has(a)},t.prototype.getStoredFields=function(a){var s=this._idToShortId.get(a);if(s!=null)return this._storedFields.get(s)},t.prototype.search=function(a,s){var o,c;s===void 0&&(s={});var A=this.executeQuery(a,s),d=[];try{for(var u=I0(A),h=u.next();!h.done;h=u.next()){var m=C2(h.value,2),y=m[0],g=m[1],F=g.score,E=g.terms,B=g.match,v=E.length||1,x={id:this._documentIds.get(y),score:F*v,terms:Object.keys(B),queryTerms:E,match:B};Object.assign(x,this._storedFields.get(y)),(s.filter==null||s.filter(x))&&d.push(x)}}catch(_){o={error:_}}finally{try{h&&!h.done&&(c=u.return)&&c.call(u)}finally{if(o)throw o.error}}return a===t.wildcard&&s.boostDocument==null&&this._options.searchOptions.boostDocument==null||d.sort(Xp),d},t.prototype.autoSuggest=function(a,s){var o,c,A,d;s===void 0&&(s={}),s=n2(n2({},this._options.autoSuggestOptions),s);var u=new Map;try{for(var h=I0(this.search(a,s)),m=h.next();!m.done;m=h.next()){var y=m.value,g=y.score,F=y.terms,E=F.join(" "),B=u.get(E);B!=null?(B.score+=g,B.count+=1):u.set(E,{score:g,terms:F,count:1})}}catch(R){o={error:R}}finally{try{m&&!m.done&&(c=h.return)&&c.call(h)}finally{if(o)throw o.error}}var v=[];try{for(var x=I0(u),_=x.next();!_.done;_=x.next()){var k=C2(_.value,2),B=k[0],w=k[1],g=w.score,F=w.terms,O=w.count;v.push({suggestion:B,terms:F,score:g/O})}}catch(R){A={error:R}}finally{try{_&&!_.done&&(d=x.return)&&d.call(x)}finally{if(A)throw A.error}}return v.sort(Xp),v},Object.defineProperty(t.prototype,"documentCount",{get:function(){return this._documentCount},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"termCount",{get:function(){return this._index.size},enumerable:!1,configurable:!0}),t.loadJSON=function(a,s){if(s==null)throw new Error("MiniSearch: loadJSON should be given the same options used when serializing the index");return this.loadJS(JSON.parse(a),s)},t.getDefault=function(a){if(gl.hasOwnProperty(a))return hl(gl,a);throw new Error('MiniSearch: unknown option "'.concat(a,'"'))},t.loadJS=function(a,s){var o,c,A,d,u,h,m=a.index,y=a.documentCount,g=a.nextId,F=a.documentIds,E=a.fieldIds,B=a.fieldLength,v=a.averageFieldLength,x=a.storedFields,_=a.dirtCount,k=a.serializationVersion;if(k!==1&&k!==2)throw new Error("MiniSearch: cannot deserialize an index created with an incompatible version");var w=new t(s);w._documentCount=y,w._nextId=g,w._documentIds=Go(F),w._idToShortId=new Map,w._fieldIds=E,w._fieldLength=Go(B),w._avgFieldLength=v,w._storedFields=Go(x),w._dirtCount=_||0,w._index=new pl;try{for(var O=I0(w._documentIds),R=O.next();!R.done;R=O.next()){var T=C2(R.value,2),L=T[0],j=T[1];w._idToShortId.set(j,L)}}catch(Z){o={error:Z}}finally{try{R&&!R.done&&(c=O.return)&&c.call(O)}finally{if(o)throw o.error}}try{for(var q=I0(m),r0=q.next();!r0.done;r0=q.next()){var d0=C2(r0.value,2),i0=d0[0],A0=d0[1],W=new Map;try{for(var u0=(u=void 0,I0(Object.keys(A0))),z=u0.next();!z.done;z=u0.next()){var Y=z.value,$=A0[Y];k===1&&($=$.ds),W.set(parseInt(Y,10),Go($))}}catch(Z){u={error:Z}}finally{try{z&&!z.done&&(h=u0.return)&&h.call(u0)}finally{if(u)throw u.error}}w._index.set(i0,W)}}catch(Z){A={error:Z}}finally{try{r0&&!r0.done&&(d=q.return)&&d.call(q)}finally{if(A)throw A.error}}return w},t.prototype.executeQuery=function(a,s){var o=this;if(s===void 0&&(s={}),a===t.wildcard)return this.executeWildcardQuery(s);if(typeof a!="string"){var c=n2(n2(n2({},s),a),{queries:void 0}),A=a.queries.map(function(x){return o.executeQuery(x,c)});return this.combineResults(A,c.combineWith)}var d=this._options,u=d.tokenize,h=d.processTerm,m=d.searchOptions,y=n2(n2({tokenize:u,processTerm:h},m),s),g=y.tokenize,F=y.processTerm,E=g(a).flatMap(function(x){return F(x)}).filter(function(x){return!!x}),B=E.map(c9(y)),v=B.map(function(x){return o.executeQuerySpec(x,y)});return this.combineResults(v,y.combineWith)},t.prototype.executeQuerySpec=function(a,s){var o,c,A,d,u=n2(n2({},this._options.searchOptions),s),h=(u.fields||this._options.fields).reduce(function(Y,$){var Z;return n2(n2({},Y),(Z={},Z[$]=hl(u.boost,$)||1,Z))},{}),m=u.boostDocument,y=u.weights,g=u.maxFuzzy,F=u.bm25,E=n2(n2({},Wp.weights),y),B=E.fuzzy,v=E.prefix,x=this._index.get(a.term),_=this.termResults(a.term,a.term,1,x,h,m,F),k,w;if(a.prefix&&(k=this._index.atPrefix(a.term)),a.fuzzy){var O=a.fuzzy===!0?.2:a.fuzzy,R=O<1?Math.min(g,Math.round(a.term.length*O)):O;R&&(w=this._index.fuzzyGet(a.term,R))}if(k)try{for(var T=I0(k),L=T.next();!L.done;L=T.next()){var j=C2(L.value,2),q=j[0],r0=j[1],d0=q.length-a.term.length;if(d0){w==null||w.delete(q);var i0=v*q.length/(q.length+.3*d0);this.termResults(a.term,q,i0,r0,h,m,F,_)}}}catch(Y){o={error:Y}}finally{try{L&&!L.done&&(c=T.return)&&c.call(T)}finally{if(o)throw o.error}}if(w)try{for(var A0=I0(w.keys()),W=A0.next();!W.done;W=A0.next()){var q=W.value,u0=C2(w.get(q),2),z=u0[0],d0=u0[1];if(d0){var i0=B*q.length/(q.length+d0);this.termResults(a.term,q,i0,z,h,m,F,_)}}}catch(Y){A={error:Y}}finally{try{W&&!W.done&&(d=A0.return)&&d.call(A0)}finally{if(A)throw A.error}}return _},t.prototype.executeWildcardQuery=function(a){var s,o,c=new Map,A=n2(n2({},this._options.searchOptions),a);try{for(var d=I0(this._documentIds),u=d.next();!u.done;u=d.next()){var h=C2(u.value,2),m=h[0],y=h[1],g=A.boostDocument?A.boostDocument(y,"",this._storedFields.get(m)):1;c.set(m,{score:g,terms:[],match:{}})}}catch(F){s={error:F}}finally{try{u&&!u.done&&(o=d.return)&&o.call(d)}finally{if(s)throw s.error}}return c},t.prototype.combineResults=function(a,s){if(s===void 0&&(s=Id),a.length===0)return new Map;var o=s.toLowerCase();return a.reduce(s9[o])||new Map},t.prototype.toJSON=function(){var a,s,o,c,A=[];try{for(var d=I0(this._index),u=d.next();!u.done;u=d.next()){var h=C2(u.value,2),m=h[0],y=h[1],g={};try{for(var F=(o=void 0,I0(y)),E=F.next();!E.done;E=F.next()){var B=C2(E.value,2),v=B[0],x=B[1];g[v]=Object.fromEntries(x)}}catch(_){o={error:_}}finally{try{E&&!E.done&&(c=F.return)&&c.call(F)}finally{if(o)throw o.error}}A.push([m,g])}}catch(_){a={error:_}}finally{try{u&&!u.done&&(s=d.return)&&s.call(d)}finally{if(a)throw a.error}}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:A,serializationVersion:2}},t.prototype.termResults=function(a,s,o,c,A,d,u,h){var m,y,g,F,E;if(h===void 0&&(h=new Map),c==null)return h;try{for(var B=I0(Object.keys(A)),v=B.next();!v.done;v=B.next()){var x=v.value,_=A[x],k=this._fieldIds[x],w=c.get(k);if(w!=null){var O=w.size,R=this._avgFieldLength[k];try{for(var T=(g=void 0,I0(w.keys())),L=T.next();!L.done;L=T.next()){var j=L.value;if(!this._documentIds.has(j)){this.removeTerm(k,j,s),O-=1;continue}var q=d?d(this._documentIds.get(j),s,this._storedFields.get(j)):1;if(q){var r0=w.get(j),d0=this._fieldLength.get(j)[k],i0=i9(r0,O,this._documentCount,d0,R,u),A0=o*_*q*i0,W=h.get(j);if(W){W.score+=A0,l9(W.terms,a);var u0=hl(W.match,s);u0?u0.push(x):W.match[s]=[x]}else h.set(j,{score:A0,terms:[a],match:(E={},E[s]=[x],E)})}}}catch(z){g={error:z}}finally{try{L&&!L.done&&(F=T.return)&&F.call(T)}finally{if(g)throw g.error}}}}}catch(z){m={error:z}}finally{try{v&&!v.done&&(y=B.return)&&y.call(B)}finally{if(m)throw m.error}}return h},t.prototype.addTerm=function(a,s,o){var c=this._index.fetch(o,Jp),A=c.get(a);if(A==null)A=new Map,A.set(s,1),c.set(a,A);else{var d=A.get(s);A.set(s,(d||0)+1)}},t.prototype.removeTerm=function(a,s,o){if(!this._index.has(o)){this.warnDocumentChanged(s,a,o);return}var c=this._index.fetch(o,Jp),A=c.get(a);A==null||A.get(s)==null?this.warnDocumentChanged(s,a,o):A.get(s)<=1?A.size<=1?c.delete(a):A.delete(s):A.set(s,A.get(s)-1),this._index.get(o).size===0&&this._index.delete(o)},t.prototype.warnDocumentChanged=function(a,s,o){var c,A;try{for(var d=I0(Object.keys(this._fieldIds)),u=d.next();!u.done;u=d.next()){var h=u.value;if(this._fieldIds[h]===s){this._options.logger("warn","MiniSearch: document with ID ".concat(this._documentIds.get(a),' has changed before removal: term "').concat(o,'" was not present in field "').concat(h,'". Removing a document after it has changed can corrupt the index!'),"version_conflict");return}}}catch(m){c={error:m}}finally{try{u&&!u.done&&(A=d.return)&&A.call(d)}finally{if(c)throw c.error}}},t.prototype.addDocumentId=function(a){var s=this._nextId;return this._idToShortId.set(a,s),this._documentIds.set(s,a),this._documentCount+=1,this._nextId+=1,s},t.prototype.addFields=function(a){for(var s=0;s<a.length;s++)this._fieldIds[a[s]]=s},t.prototype.addFieldLength=function(a,s,o,c){var A=this._fieldLength.get(a);A==null&&this._fieldLength.set(a,A=[]),A[s]=c;var d=this._avgFieldLength[s]||0,u=d*o+c;this._avgFieldLength[s]=u/(o+1)},t.prototype.removeFieldLength=function(a,s,o,c){if(o===1){this._avgFieldLength[s]=0;return}var A=this._avgFieldLength[s]*o-c;this._avgFieldLength[s]=A/(o-1)},t.prototype.saveStoredFields=function(a,s){var o,c,A=this._options,d=A.storeFields,u=A.extractField;if(!(d==null||d.length===0)){var h=this._storedFields.get(a);h==null&&this._storedFields.set(a,h={});try{for(var m=I0(d),y=m.next();!y.done;y=m.next()){var g=y.value,F=u(s,g);F!==void 0&&(h[g]=F)}}catch(E){o={error:E}}finally{try{y&&!y.done&&(c=m.return)&&c.call(m)}finally{if(o)throw o.error}}}},t.wildcard=Symbol("*"),t}(),hl=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)?t[a]:void 0},s9=(Xr={},Xr[Id]=function(t,a){var s,o;try{for(var c=I0(a.keys()),A=c.next();!A.done;A=c.next()){var d=A.value,u=t.get(d);if(u==null)t.set(d,a.get(d));else{var h=a.get(d),m=h.score,y=h.terms,g=h.match;u.score=u.score+m,u.match=Object.assign(u.match,g),Kp(u.terms,y)}}}catch(F){s={error:F}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}return t},Xr[og]=function(t,a){var s,o,c=new Map;try{for(var A=I0(a.keys()),d=A.next();!d.done;d=A.next()){var u=d.value,h=t.get(u);if(h!=null){var m=a.get(u),y=m.score,g=m.terms,F=m.match;Kp(h.terms,g),c.set(u,{score:h.score+y,terms:h.terms,match:Object.assign(h.match,F)})}}}catch(E){s={error:E}}finally{try{d&&!d.done&&(o=A.return)&&o.call(A)}finally{if(s)throw s.error}}return c},Xr[a9]=function(t,a){var s,o;try{for(var c=I0(a.keys()),A=c.next();!A.done;A=c.next()){var d=A.value;t.delete(d)}}catch(u){s={error:u}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}return t},Xr),o9={k:1.2,b:.7,d:.5},i9=function(t,a,s,o,c,A){var d=A.k,u=A.b,h=A.d,m=Math.log(1+(s-a+.5)/(a+.5));return m*(h+t*(d+1)/(t+d*(1-u+u*o/c)))},c9=function(t){return function(a,s,o){var c=typeof t.fuzzy=="function"?t.fuzzy(a,s,o):t.fuzzy||!1,A=typeof t.prefix=="function"?t.prefix(a,s,o):t.prefix===!0;return{term:a,fuzzy:c,prefix:A}}},gl={idField:"id",extractField:function(t,a){return t[a]},tokenize:function(t){return t.split(d9)},processTerm:function(t){return t.toLowerCase()},fields:void 0,searchOptions:void 0,storeFields:[],logger:function(t,a){typeof(console==null?void 0:console[t])=="function"&&console[t](a)},autoVacuum:!0},Wp={combineWith:Id,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:o9},A9={combineWith:og,prefix:function(t,a,s){return a===s.length-1}},Hl={batchSize:1e3,batchWait:10},Yl={minDirtFactor:.1,minDirtCount:20},Cl=n2(n2({},Hl),Yl),l9=function(t,a){t.includes(a)||t.push(a)},Kp=function(t,a){var s,o;try{for(var c=I0(a),A=c.next();!A.done;A=c.next()){var d=A.value;t.includes(d)||t.push(d)}}catch(u){s={error:u}}finally{try{A&&!A.done&&(o=c.return)&&o.call(c)}finally{if(s)throw s.error}}},Xp=function(t,a){var s=t.score,o=a.score;return o-s},Jp=function(){return new Map},Go=function(t){var a,s,o=new Map;try{for(var c=I0(Object.keys(t)),A=c.next();!A.done;A=c.next()){var d=A.value;o.set(parseInt(d,10),t[d])}}catch(u){a={error:u}}finally{try{A&&!A.done&&(s=c.return)&&s.call(c)}finally{if(a)throw a.error}}return o},d9=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u;let yl;function ig(){const[t,a]=b.useState();return b.useEffect(()=>{(async()=>{yl||(yl=ZD());const s=await yl,o=r9.loadJSON(s,{fields:["title","titles","text"],searchOptions:{boost:{title:4,text:2,titles:1},fuzzy:.2,prefix:!0},storeFields:["href","html","isPage","text","title","titles"]});a(o)})()},[]),b.useEffect(()=>{},[]),t}var u9="vocs_DesktopSearch_search",f9="vocs_DesktopSearch_searchCommand",p9="Label",cg=b.forwardRef((t,a)=>C.jsx(T0.label,{...t,ref:a,onMouseDown:s=>{var c;s.target.closest("button, input, select, textarea")||((c=t.onMouseDown)==null||c.call(t,s),!s.defaultPrevented&&s.detail>1&&s.preventDefault())}}));cg.displayName=p9;var m9=cg,ti={exports:{}};/*!***************************************************
* mark.js v8.11.1
* https://markjs.io/
* Copyright (c) 2014–2018, Julian Kühnel
* Released under the MIT license https://git.io/vwTVl
*****************************************************/var h9=ti.exports,Zp;function g9(){return Zp||(Zp=1,function(t,a){(function(s,o){t.exports=o()})(h9,function(){var s=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(m){return typeof m}:function(m){return m&&typeof Symbol=="function"&&m.constructor===Symbol&&m!==Symbol.prototype?"symbol":typeof m},o=function(m,y){if(!(m instanceof y))throw new TypeError("Cannot call a class as a function")},c=function(){function m(y,g){for(var F=0;F<g.length;F++){var E=g[F];E.enumerable=E.enumerable||!1,E.configurable=!0,"value"in E&&(E.writable=!0),Object.defineProperty(y,E.key,E)}}return function(y,g,F){return g&&m(y.prototype,g),F&&m(y,F),y}}(),A=Object.assign||function(m){for(var y=1;y<arguments.length;y++){var g=arguments[y];for(var F in g)Object.prototype.hasOwnProperty.call(g,F)&&(m[F]=g[F])}return m},d=function(){function m(y){var g=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,F=arguments.length>2&&arguments[2]!==void 0?arguments[2]:[],E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:5e3;o(this,m),this.ctx=y,this.iframes=g,this.exclude=F,this.iframesTimeout=E}return c(m,[{key:"getContexts",value:function(){var g=void 0,F=[];return typeof this.ctx>"u"||!this.ctx?g=[]:NodeList.prototype.isPrototypeOf(this.ctx)?g=Array.prototype.slice.call(this.ctx):Array.isArray(this.ctx)?g=this.ctx:typeof this.ctx=="string"?g=Array.prototype.slice.call(document.querySelectorAll(this.ctx)):g=[this.ctx],g.forEach(function(E){var B=F.filter(function(v){return v.contains(E)}).length>0;F.indexOf(E)===-1&&!B&&F.push(E)}),F}},{key:"getIframeContents",value:function(g,F){var E=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){},B=void 0;try{var v=g.contentWindow;if(B=v.document,!v||!B)throw new Error("iframe inaccessible")}catch{E()}B&&F(B)}},{key:"isIframeBlank",value:function(g){var F="about:blank",E=g.getAttribute("src").trim(),B=g.contentWindow.location.href;return B===F&&E!==F&&E}},{key:"observeIframeLoad",value:function(g,F,E){var B=this,v=!1,x=null,_=function k(){if(!v){v=!0,clearTimeout(x);try{B.isIframeBlank(g)||(g.removeEventListener("load",k),B.getIframeContents(g,F,E))}catch{E()}}};g.addEventListener("load",_),x=setTimeout(_,this.iframesTimeout)}},{key:"onIframeReady",value:function(g,F,E){try{g.contentWindow.document.readyState==="complete"?this.isIframeBlank(g)?this.observeIframeLoad(g,F,E):this.getIframeContents(g,F,E):this.observeIframeLoad(g,F,E)}catch{E()}}},{key:"waitForIframes",value:function(g,F){var E=this,B=0;this.forEachIframe(g,function(){return!0},function(v){B++,E.waitForIframes(v.querySelector("html"),function(){--B||F()})},function(v){v||F()})}},{key:"forEachIframe",value:function(g,F,E){var B=this,v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:function(){},x=g.querySelectorAll("iframe"),_=x.length,k=0;x=Array.prototype.slice.call(x);var w=function(){--_<=0&&v(k)};_||w(),x.forEach(function(O){m.matches(O,B.exclude)?w():B.onIframeReady(O,function(R){F(O)&&(k++,E(R)),w()},w)})}},{key:"createIterator",value:function(g,F,E){return document.createNodeIterator(g,F,E,!1)}},{key:"createInstanceOnIframe",value:function(g){return new m(g.querySelector("html"),this.iframes)}},{key:"compareNodeIframe",value:function(g,F,E){var B=g.compareDocumentPosition(E),v=Node.DOCUMENT_POSITION_PRECEDING;if(B&v)if(F!==null){var x=F.compareDocumentPosition(E),_=Node.DOCUMENT_POSITION_FOLLOWING;if(x&_)return!0}else return!0;return!1}},{key:"getIteratorNode",value:function(g){var F=g.previousNode(),E=void 0;return F===null?E=g.nextNode():E=g.nextNode()&&g.nextNode(),{prevNode:F,node:E}}},{key:"checkIframeFilter",value:function(g,F,E,B){var v=!1,x=!1;return B.forEach(function(_,k){_.val===E&&(v=k,x=_.handled)}),this.compareNodeIframe(g,F,E)?(v===!1&&!x?B.push({val:E,handled:!0}):v!==!1&&!x&&(B[v].handled=!0),!0):(v===!1&&B.push({val:E,handled:!1}),!1)}},{key:"handleOpenIframes",value:function(g,F,E,B){var v=this;g.forEach(function(x){x.handled||v.getIframeContents(x.val,function(_){v.createInstanceOnIframe(_).forEachNode(F,E,B)})})}},{key:"iterateThroughNodes",value:function(g,F,E,B,v){for(var x=this,_=this.createIterator(F,g,B),k=[],w=[],O=void 0,R=void 0,T=function(){var j=x.getIteratorNode(_);return R=j.prevNode,O=j.node,O};T();)this.iframes&&this.forEachIframe(F,function(L){return x.checkIframeFilter(O,R,L,k)},function(L){x.createInstanceOnIframe(L).forEachNode(g,function(j){return w.push(j)},B)}),w.push(O);w.forEach(function(L){E(L)}),this.iframes&&this.handleOpenIframes(k,g,E,B),v()}},{key:"forEachNode",value:function(g,F,E){var B=this,v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:function(){},x=this.getContexts(),_=x.length;_||v(),x.forEach(function(k){var w=function(){B.iterateThroughNodes(g,k,F,E,function(){--_<=0&&v()})};B.iframes?B.waitForIframes(k,w):w()})}}],[{key:"matches",value:function(g,F){var E=typeof F=="string"?[F]:F,B=g.matches||g.matchesSelector||g.msMatchesSelector||g.mozMatchesSelector||g.oMatchesSelector||g.webkitMatchesSelector;if(B){var v=!1;return E.every(function(x){return B.call(g,x)?(v=!0,!1):!0}),v}else return!1}}]),m}(),u=function(){function m(y){o(this,m),this.ctx=y,this.ie=!1;var g=window.navigator.userAgent;(g.indexOf("MSIE")>-1||g.indexOf("Trident")>-1)&&(this.ie=!0)}return c(m,[{key:"log",value:function(g){var F=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"debug",E=this.opt.log;this.opt.debug&&(typeof E>"u"?"undefined":s(E))==="object"&&typeof E[F]=="function"&&E[F]("mark.js: "+g)}},{key:"escapeStr",value:function(g){return g.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}},{key:"createRegExp",value:function(g){return this.opt.wildcards!=="disabled"&&(g=this.setupWildcardsRegExp(g)),g=this.escapeStr(g),Object.keys(this.opt.synonyms).length&&(g=this.createSynonymsRegExp(g)),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(g=this.setupIgnoreJoinersRegExp(g)),this.opt.diacritics&&(g=this.createDiacriticsRegExp(g)),g=this.createMergedBlanksRegExp(g),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(g=this.createJoinersRegExp(g)),this.opt.wildcards!=="disabled"&&(g=this.createWildcardsRegExp(g)),g=this.createAccuracyRegExp(g),g}},{key:"createSynonymsRegExp",value:function(g){var F=this.opt.synonyms,E=this.opt.caseSensitive?"":"i",B=this.opt.ignoreJoiners||this.opt.ignorePunctuation.length?"\0":"";for(var v in F)if(F.hasOwnProperty(v)){var x=F[v],_=this.opt.wildcards!=="disabled"?this.setupWildcardsRegExp(v):this.escapeStr(v),k=this.opt.wildcards!=="disabled"?this.setupWildcardsRegExp(x):this.escapeStr(x);_!==""&&k!==""&&(g=g.replace(new RegExp("("+this.escapeStr(_)+"|"+this.escapeStr(k)+")","gm"+E),B+("("+this.processSynomyms(_)+"|")+(this.processSynomyms(k)+")")+B))}return g}},{key:"processSynomyms",value:function(g){return(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(g=this.setupIgnoreJoinersRegExp(g)),g}},{key:"setupWildcardsRegExp",value:function(g){return g=g.replace(/(?:\\)*\?/g,function(F){return F.charAt(0)==="\\"?"?":""}),g.replace(/(?:\\)*\*/g,function(F){return F.charAt(0)==="\\"?"*":""})}},{key:"createWildcardsRegExp",value:function(g){var F=this.opt.wildcards==="withSpaces";return g.replace(/\u0001/g,F?"[\\S\\s]?":"\\S?").replace(/\u0002/g,F?"[\\S\\s]*?":"\\S*")}},{key:"setupIgnoreJoinersRegExp",value:function(g){return g.replace(/[^(|)\\]/g,function(F,E,B){var v=B.charAt(E+1);return/[(|)\\]/.test(v)||v===""?F:F+"\0"})}},{key:"createJoinersRegExp",value:function(g){var F=[],E=this.opt.ignorePunctuation;return Array.isArray(E)&&E.length&&F.push(this.escapeStr(E.join(""))),this.opt.ignoreJoiners&&F.push("\\u00ad\\u200b\\u200c\\u200d"),F.length?g.split(/\u0000+/).join("["+F.join("")+"]*"):g}},{key:"createDiacriticsRegExp",value:function(g){var F=this.opt.caseSensitive?"":"i",E=this.opt.caseSensitive?["aàáảãạăằắẳẵặâầấẩẫậäåāą","AÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ","cçćč","CÇĆČ","dđď","DĐĎ","eèéẻẽẹêềếểễệëěēę","EÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ","iìíỉĩịîïī","IÌÍỈĨỊÎÏĪ","lł","LŁ","nñňń","NÑŇŃ","oòóỏõọôồốổỗộơởỡớờợöøō","OÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ","rř","RŘ","sšśșş","SŠŚȘŞ","tťțţ","TŤȚŢ","uùúủũụưừứửữựûüůū","UÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ","yýỳỷỹỵÿ","YÝỲỶỸỴŸ","zžżź","ZŽŻŹ"]:["aàáảãạăằắẳẵặâầấẩẫậäåāąAÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ","cçćčCÇĆČ","dđďDĐĎ","eèéẻẽẹêềếểễệëěēęEÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ","iìíỉĩịîïīIÌÍỈĨỊÎÏĪ","lłLŁ","nñňńNÑŇŃ","oòóỏõọôồốổỗộơởỡớờợöøōOÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ","rřRŘ","sšśșşSŠŚȘŞ","tťțţTŤȚŢ","uùúủũụưừứửữựûüůūUÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ","yýỳỷỹỵÿYÝỲỶỸỴŸ","zžżźZŽŻŹ"],B=[];return g.split("").forEach(function(v){E.every(function(x){if(x.indexOf(v)!==-1){if(B.indexOf(x)>-1)return!1;g=g.replace(new RegExp("["+x+"]","gm"+F),"["+x+"]"),B.push(x)}return!0})}),g}},{key:"createMergedBlanksRegExp",value:function(g){return g.replace(/[\s]+/gmi,"[\\s]+")}},{key:"createAccuracyRegExp",value:function(g){var F=this,E="!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~¡¿",B=this.opt.accuracy,v=typeof B=="string"?B:B.value,x=typeof B=="string"?[]:B.limiters,_="";switch(x.forEach(function(k){_+="|"+F.escapeStr(k)}),v){case"partially":default:return"()("+g+")";case"complementary":return _="\\s"+(_||this.escapeStr(E)),"()([^"+_+"]*"+g+"[^"+_+"]*)";case"exactly":return"(^|\\s"+_+")("+g+")(?=$|\\s"+_+")"}}},{key:"getSeparatedKeywords",value:function(g){var F=this,E=[];return g.forEach(function(B){F.opt.separateWordSearch?B.split(" ").forEach(function(v){v.trim()&&E.indexOf(v)===-1&&E.push(v)}):B.trim()&&E.indexOf(B)===-1&&E.push(B)}),{keywords:E.sort(function(B,v){return v.length-B.length}),length:E.length}}},{key:"isNumeric",value:function(g){return Number(parseFloat(g))==g}},{key:"checkRanges",value:function(g){var F=this;if(!Array.isArray(g)||Object.prototype.toString.call(g[0])!=="[object Object]")return this.log("markRanges() will only accept an array of objects"),this.opt.noMatch(g),[];var E=[],B=0;return g.sort(function(v,x){return v.start-x.start}).forEach(function(v){var x=F.callNoMatchOnInvalidRanges(v,B),_=x.start,k=x.end,w=x.valid;w&&(v.start=_,v.length=k-_,E.push(v),B=k)}),E}},{key:"callNoMatchOnInvalidRanges",value:function(g,F){var E=void 0,B=void 0,v=!1;return g&&typeof g.start<"u"?(E=parseInt(g.start,10),B=E+parseInt(g.length,10),this.isNumeric(g.start)&&this.isNumeric(g.length)&&B-F>0&&B-E>0?v=!0:(this.log("Ignoring invalid or overlapping range: "+(""+JSON.stringify(g))),this.opt.noMatch(g))):(this.log("Ignoring invalid range: "+JSON.stringify(g)),this.opt.noMatch(g)),{start:E,end:B,valid:v}}},{key:"checkWhitespaceRanges",value:function(g,F,E){var B=void 0,v=!0,x=E.length,_=F-x,k=parseInt(g.start,10)-_;return k=k>x?x:k,B=k+parseInt(g.length,10),B>x&&(B=x,this.log("End range automatically set to the max value of "+x)),k<0||B-k<0||k>x||B>x?(v=!1,this.log("Invalid range: "+JSON.stringify(g)),this.opt.noMatch(g)):E.substring(k,B).replace(/\s+/g,"")===""&&(v=!1,this.log("Skipping whitespace only range: "+JSON.stringify(g)),this.opt.noMatch(g)),{start:k,end:B,valid:v}}},{key:"getTextNodes",value:function(g){var F=this,E="",B=[];this.iterator.forEachNode(NodeFilter.SHOW_TEXT,function(v){B.push({start:E.length,end:(E+=v.textContent).length,node:v})},function(v){return F.matchesExclude(v.parentNode)?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT},function(){g({value:E,nodes:B})})}},{key:"matchesExclude",value:function(g){return d.matches(g,this.opt.exclude.concat(["script","style","title","head","html"]))}},{key:"wrapRangeInTextNode",value:function(g,F,E){var B=this.opt.element?this.opt.element:"mark",v=g.splitText(F),x=v.splitText(E-F),_=document.createElement(B);return _.setAttribute("data-markjs","true"),this.opt.className&&_.setAttribute("class",this.opt.className),_.textContent=v.textContent,v.parentNode.replaceChild(_,v),x}},{key:"wrapRangeInMappedTextNode",value:function(g,F,E,B,v){var x=this;g.nodes.every(function(_,k){var w=g.nodes[k+1];if(typeof w>"u"||w.start>F){if(!B(_.node))return!1;var O=F-_.start,R=(E>_.end?_.end:E)-_.start,T=g.value.substr(0,_.start),L=g.value.substr(R+_.start);if(_.node=x.wrapRangeInTextNode(_.node,O,R),g.value=T+L,g.nodes.forEach(function(j,q){q>=k&&(g.nodes[q].start>0&&q!==k&&(g.nodes[q].start-=R),g.nodes[q].end-=R)}),E-=R,v(_.node.previousSibling,_.start),E>_.end)F=_.end;else return!1}return!0})}},{key:"wrapMatches",value:function(g,F,E,B,v){var x=this,_=F===0?0:F+1;this.getTextNodes(function(k){k.nodes.forEach(function(w){w=w.node;for(var O=void 0;(O=g.exec(w.textContent))!==null&&O[_]!=="";)if(E(O[_],w)){var R=O.index;if(_!==0)for(var T=1;T<_;T++)R+=O[T].length;w=x.wrapRangeInTextNode(w,R,R+O[_].length),B(w.previousSibling),g.lastIndex=0}}),v()})}},{key:"wrapMatchesAcrossElements",value:function(g,F,E,B,v){var x=this,_=F===0?0:F+1;this.getTextNodes(function(k){for(var w=void 0;(w=g.exec(k.value))!==null&&w[_]!=="";){var O=w.index;if(_!==0)for(var R=1;R<_;R++)O+=w[R].length;var T=O+w[_].length;x.wrapRangeInMappedTextNode(k,O,T,function(L){return E(w[_],L)},function(L,j){g.lastIndex=j,B(L)})}v()})}},{key:"wrapRangeFromIndex",value:function(g,F,E,B){var v=this;this.getTextNodes(function(x){var _=x.value.length;g.forEach(function(k,w){var O=v.checkWhitespaceRanges(k,_,x.value),R=O.start,T=O.end,L=O.valid;L&&v.wrapRangeInMappedTextNode(x,R,T,function(j){return F(j,k,x.value.substring(R,T),w)},function(j){E(j,k)})}),B()})}},{key:"unwrapMatches",value:function(g){for(var F=g.parentNode,E=document.createDocumentFragment();g.firstChild;)E.appendChild(g.removeChild(g.firstChild));F.replaceChild(E,g),this.ie?this.normalizeTextNode(F):F.normalize()}},{key:"normalizeTextNode",value:function(g){if(g){if(g.nodeType===3)for(;g.nextSibling&&g.nextSibling.nodeType===3;)g.nodeValue+=g.nextSibling.nodeValue,g.parentNode.removeChild(g.nextSibling);else this.normalizeTextNode(g.firstChild);this.normalizeTextNode(g.nextSibling)}}},{key:"markRegExp",value:function(g,F){var E=this;this.opt=F,this.log('Searching with expression "'+g+'"');var B=0,v="wrapMatches",x=function(k){B++,E.opt.each(k)};this.opt.acrossElements&&(v="wrapMatchesAcrossElements"),this[v](g,this.opt.ignoreGroups,function(_,k){return E.opt.filter(k,_,B)},x,function(){B===0&&E.opt.noMatch(g),E.opt.done(B)})}},{key:"mark",value:function(g,F){var E=this;this.opt=F;var B=0,v="wrapMatches",x=this.getSeparatedKeywords(typeof g=="string"?[g]:g),_=x.keywords,k=x.length,w=this.opt.caseSensitive?"":"i",O=function R(T){var L=new RegExp(E.createRegExp(T),"gm"+w),j=0;E.log('Searching with expression "'+L+'"'),E[v](L,1,function(q,r0){return E.opt.filter(r0,T,B,j)},function(q){j++,B++,E.opt.each(q)},function(){j===0&&E.opt.noMatch(T),_[k-1]===T?E.opt.done(B):R(_[_.indexOf(T)+1])})};this.opt.acrossElements&&(v="wrapMatchesAcrossElements"),k===0?this.opt.done(B):O(_[0])}},{key:"markRanges",value:function(g,F){var E=this;this.opt=F;var B=0,v=this.checkRanges(g);v&&v.length?(this.log("Starting to mark with the following ranges: "+JSON.stringify(v)),this.wrapRangeFromIndex(v,function(x,_,k,w){return E.opt.filter(x,_,k,w)},function(x,_){B++,E.opt.each(x,_)},function(){E.opt.done(B)})):this.opt.done(B)}},{key:"unmark",value:function(g){var F=this;this.opt=g;var E=this.opt.element?this.opt.element:"*";E+="[data-markjs]",this.opt.className&&(E+="."+this.opt.className),this.log('Removal selector "'+E+'"'),this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT,function(B){F.unwrapMatches(B)},function(B){var v=d.matches(B,E),x=F.matchesExclude(B);return!v||x?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT},this.opt.done)}},{key:"opt",set:function(g){this._opt=A({},{element:"",className:"",exclude:[],iframes:!1,iframesTimeout:5e3,separateWordSearch:!0,diacritics:!0,synonyms:{},accuracy:"partially",acrossElements:!1,caseSensitive:!1,ignoreJoiners:!1,ignoreGroups:0,ignorePunctuation:[],wildcards:"disabled",each:function(){},noMatch:function(){},filter:function(){return!0},done:function(){},debug:!1,log:window.console},g)},get:function(){return this._opt}},{key:"iterator",get:function(){return new d(this.ctx,this.opt.iframes,this.opt.exclude,this.opt.iframesTimeout)}}]),m}();function h(m){var y=this,g=new u(m);return this.mark=function(F,E){return g.mark(F,E),y},this.markRegExp=function(F,E){return g.markRegExp(F,E),y},this.markRanges=function(F,E){return g.markRanges(F,E),y},this.unmark=function(F){return g.unmark(F),y},this}return h})}(ti)),ti.exports}var C9=g9();const y9=yi(C9);function b9(t,a){const[s,o]=b.useState(t);return b.useEffect(()=>{const c=setTimeout(()=>o(t),a);return()=>{clearTimeout(c)}},[t,a]),s}function Wl(t,a){const[s,o]=b.useState();b.useEffect(()=>{const A=F9(t);o(typeof A>"u"||A===null?typeof a=="function"?a():a:A)},[a,t]);const c=b.useCallback(A=>{o(d=>{let u;typeof A=="function"?u=A(d):u=A;try{localStorage.setItem(t,JSON.stringify(u))}catch{}return u})},[t]);return[s,c]}function F9(t){try{const a=localStorage.getItem(t);return typeof a=="string"?JSON.parse(a):void 0}catch{return}}var Ag="vocs_utils_visuallyHidden",E9="vocs_Kbd";function lg(t){return C.jsx("kbd",{...t,className:c0(t.className,E9)})}var B9="vocs_KeyboardShortcut",v9="vocs_KeyboardShortcut_kbdGroup";function wa(t){const{description:a,keys:s}=t;return C.jsxs("span",{className:B9,children:[a,C.jsx("span",{className:v9,children:s.map(o=>C.jsx(lg,{children:o},o))})]})}var D9="vocs_SearchDialog",x9="vocs_SearchDialog_overlay",_9="vocs_SearchDialog_searchBox",w9="vocs_SearchDialog_searchInput",qo="vocs_SearchDialog_searchInputIcon",S9="vocs_SearchDialog_searchInputIconDesktop",k9="vocs_SearchDialog_searchInputIconMobile",T9="vocs_SearchDialog_results",O9="vocs_SearchDialog_result",R9="vocs_SearchDialog_resultSelected",$p="vocs_SearchDialog_resultIcon",P9="vocs_SearchDialog_titles",Qp="vocs_SearchDialog_title",I9="vocs_SearchDialog_titleIcon",N9="vocs_SearchDialog_content",em="vocs_SearchDialog_excerpt",L9="vocs_SearchDialog_searchShortcuts";function dg(t){const{search:a}=m2(),s=yd(),o=b.useRef(null),c=b.useRef(null),[A,d]=Wl("filterText",""),u=b9(A,200),h=ig(),[m,y]=b.useState(-1),[g,F]=b.useState(!1),[E,B]=Wl("showDetailView",!0),v=b.useMemo(()=>h?u?(y(0),h.search(u,a).slice(0,16)):(y(-1),[]):[],[h,a,u]),x=v.length,_=v[m],k=b.useCallback(()=>{var T,L,j;if(!c.current)return;const w=new Set;for(const q of v)for(const r0 in q.match)w.add(r0);const O=new y9(c.current);O.unmark({done(){O==null||O.markRegExp(z9(w))}});const R=c.current.querySelectorAll(`.${em}`);for(const q of R)(T=q.querySelector('mark[data-markjs="true"]'))==null||T.scrollIntoView({block:"center"});(j=(L=c.current)==null?void 0:L.firstElementChild)==null||j.scrollIntoView({block:"start"})},[v]);return b.useEffect(()=>{if(!t.open)return;function w(O){var R;switch(O.key){case"ArrowDown":{O.preventDefault(),y(T=>{var q;let L=T+1;L>=x&&(L=0);const j=(q=c.current)==null?void 0:q.children[L];return j==null||j.scrollIntoView({block:"nearest"}),L}),F(!0);break}case"ArrowUp":{O.preventDefault(),y(T=>{var q;let L=T-1;L<0&&(L=x-1);const j=(q=c.current)==null?void 0:q.children[L];return j==null||j.scrollIntoView({block:"nearest"}),L}),F(!0);break}case"Backspace":{if(!O.metaKey)return;O.preventDefault(),d(""),(R=o.current)==null||R.focus();break}case"Enter":{if(O.target instanceof HTMLButtonElement&&O.target.type!=="submit"||!_)return;O.preventDefault(),s(_.href),t.onClose();break}}}return window.addEventListener("keydown",w),()=>{window.removeEventListener("keydown",w)}},[s,x,d,_,t.open,t.onClose]),b.useEffect(()=>{u!==""&&c.current&&k()},[k,u]),C.jsxs(WD,{children:[C.jsx(KD,{className:x9}),C.jsxs(XD,{onOpenAutoFocus:w=>{o.current&&(w.preventDefault(),o.current.focus()),k()},onCloseAutoFocus:()=>{y(0)},className:D9,"aria-describedby":void 0,children:[C.jsx(JD,{className:Ag,children:"Search"}),C.jsxs("form",{className:_9,children:[C.jsx("button",{"aria-label":"Close search dialog",type:"button",onClick:()=>t.onClose(),className:k9,children:C.jsx(av,{className:qo,height:20,width:20})}),C.jsx(m9,{htmlFor:"search-input",children:C.jsx(xd,{"aria-label":"Search",className:c0(qo,S9),height:20,width:20})}),C.jsx("input",{ref:o,tabIndex:0,className:w9,id:"search-input",onChange:w=>d(w.target.value),placeholder:"Search",type:"search",value:A}),C.jsx("button",{"aria-label":"Toggle detail view",type:"button",onClick:()=>B(w=>!w),children:C.jsx(dv,{className:qo,height:20,width:20})}),C.jsx("button",{"aria-label":"Reset search",type:"button",className:qo,onClick:()=>{var w;d(""),(w=o.current)==null||w.focus()},children:"⌫"})]}),C.jsxs("ul",{className:T9,role:v.length?"listbox":void 0,onMouseMove:()=>F(!1),ref:c,children:[u&&v.length===0&&C.jsxs("li",{children:['No results for "',C.jsx("span",{children:u}),'"']}),v.map((w,O)=>{var R;return C.jsx("li",{role:"option",className:c0(O9,O===m&&R9),"aria-selected":O===m,"aria-label":[...w.titles.filter(T=>!!T),w.title].join(" > "),children:C.jsxs(Ma,{to:w.href,onClick:T=>{T.metaKey||t.onClose()},onMouseEnter:()=>!g&&y(O),onFocus:()=>y(O),children:[C.jsxs("div",{className:P9,children:[w.isPage?C.jsx(Av,{className:$p}):C.jsx("span",{className:$p,children:"#"}),w.titles.filter(T=>!!T).map(T=>C.jsxs("span",{className:Qp,children:[C.jsx("span",{dangerouslySetInnerHTML:{__html:T}}),C.jsx(sv,{className:I9})]},T)),C.jsx("span",{className:Qp,children:C.jsx("span",{dangerouslySetInnerHTML:{__html:w.title}})})]}),E&&((R=w.text)==null?void 0:R.trim())&&C.jsx("div",{className:em,children:C.jsx(vh,{className:N9,children:C.jsx("div",{dangerouslySetInnerHTML:{__html:w.html}})})})]})},w.id)})]}),C.jsxs("div",{className:L9,children:[C.jsx(wa,{description:"Navigate",keys:["↑","↓"]}),C.jsx(wa,{description:"Select",keys:["enter"]}),C.jsx(wa,{description:"Close",keys:["esc"]}),C.jsx(wa,{description:"Reset",keys:["⌘","⌫"]})]})]})]})}function z9(t){return new RegExp([...t].sort((a,s)=>s.length-a.length).map(a=>`(${a.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")})`).join("|"),"gi")}function M9(){ig();const[t,a]=b.useState(!1);return b.useEffect(()=>{function s(o){const c=document.activeElement instanceof HTMLElement&&(["input","select","textarea"].includes(document.activeElement.tagName.toLowerCase())||document.activeElement.isContentEditable);o.key==="/"&&!t&&!c?(o.preventDefault(),a(!0)):o.metaKey===!0&&o.key==="k"&&(o.preventDefault(),a(A=>!A))}return window.addEventListener("keydown",s),()=>{window.removeEventListener("keydown",s)}},[t]),C.jsxs(Qh,{open:t,onOpenChange:a,children:[C.jsx(eg,{asChild:!0,children:C.jsxs("button",{className:u9,type:"button",children:[C.jsx(xd,{style:{marginTop:2}}),"Search...",C.jsx("div",{className:f9,children:C.jsx("div",{style:{background:"currentColor",transform:"rotate(45deg)",width:1.5,borderRadius:2,height:"100%"}})})]})}),C.jsx(dg,{open:t,onClose:()=>a(!1)})]})}var U9="vocs_DesktopTopNav",j9="vocs_DesktopTopNav_withLogo",V9="vocs_DesktopTopNav_content",G9="vocs_DesktopTopNav_curtain",q9="vocs_DesktopTopNav_group",tm="vocs_DesktopTopNav_item",H9="vocs_DesktopTopNav_logo",Y9="vocs_DesktopTopNav_logoWrapper",nm="vocs_DesktopTopNav_section",bl="vocs_Logo",W9="vocs_Logo_logoDark",K9="vocs_Logo_logoLight";function X9({className:t}){const{logoUrl:a}=m2();return a?C.jsx(C.Fragment,{children:typeof a=="string"?C.jsx("img",{alt:"Logo",className:c0(t,bl),src:a}):C.jsxs(C.Fragment,{children:[C.jsx("img",{alt:"Logo",className:c0(t,bl,W9),src:a.dark}),C.jsx("img",{alt:"Logo",className:c0(t,bl,K9),src:a.light})]})}):null}var J9="vocs_NavLogo_logoImage",Z9="vocs_NavLogo_title";function Nd(){const t=m2();return t.logoUrl?C.jsx(X9,{className:J9}):C.jsx("div",{className:Z9,children:t.title})}var $9=b.createContext(void 0);function us(t){const a=b.useContext($9);return t||a||"ltr"}function fs(t){const a=t+"CollectionProvider",[s,o]=ze(a),[c,A]=s(a,{collectionRef:{current:null},itemMap:new Map}),d=v=>{const{scope:x,children:_}=v,k=a2.useRef(null),w=a2.useRef(new Map).current;return C.jsx(c,{scope:x,itemMap:w,collectionRef:k,children:_})};d.displayName=a;const u=t+"CollectionSlot",h=Ra(u),m=a2.forwardRef((v,x)=>{const{scope:_,children:k}=v,w=A(u,_),O=r2(x,w.collectionRef);return C.jsx(h,{ref:O,children:k})});m.displayName=u;const y=t+"CollectionItemSlot",g="data-radix-collection-item",F=Ra(y),E=a2.forwardRef((v,x)=>{const{scope:_,children:k,...w}=v,O=a2.useRef(null),R=r2(x,O),T=A(y,_);return a2.useEffect(()=>(T.itemMap.set(O,{ref:O,...w}),()=>void T.itemMap.delete(O))),C.jsx(F,{[g]:"",ref:R,children:k})});E.displayName=y;function B(v){const x=A(t+"CollectionConsumer",v);return a2.useCallback(()=>{const k=x.collectionRef.current;if(!k)return[];const w=Array.from(k.querySelectorAll(`[${g}]`));return Array.from(x.itemMap.values()).sort((T,L)=>w.indexOf(T.ref.current)-w.indexOf(L.ref.current))},[x.collectionRef,x.itemMap])}return[{Provider:d,Slot:m,ItemSlot:E},B,o]}function Q9(t){const a=b.useRef({value:t,previous:t});return b.useMemo(()=>(a.current.value!==t&&(a.current.previous=a.current.value,a.current.value=t),a.current.previous),[t])}var ex=Object.freeze({position:"absolute",border:0,width:1,height:1,padding:0,margin:-1,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",wordWrap:"normal"}),tx="VisuallyHidden",ug=b.forwardRef((t,a)=>C.jsx(T0.span,{...t,ref:a,style:{...ex,...t.style}}));ug.displayName=tx;var nx=ug,zn="NavigationMenu",[Ld,fg,ax]=fs(zn),[Kl,rx,sx]=fs(zn),[zd,qk]=ze(zn,[ax,sx]),[ox,we]=zd(zn),[ix,cx]=zd(zn),pg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,value:o,onValueChange:c,defaultValue:A,delayDuration:d=200,skipDelayDuration:u=300,orientation:h="horizontal",dir:m,...y}=t,[g,F]=b.useState(null),E=r2(a,q=>F(q)),B=us(m),v=b.useRef(0),x=b.useRef(0),_=b.useRef(0),[k,w]=b.useState(!0),[O,R]=Qe({prop:o,onChange:q=>{const r0=q!=="",d0=u>0;r0?(window.clearTimeout(_.current),d0&&w(!1)):(window.clearTimeout(_.current),_.current=window.setTimeout(()=>w(!0),u)),c==null||c(q)},defaultProp:A??"",caller:zn}),T=b.useCallback(()=>{window.clearTimeout(x.current),x.current=window.setTimeout(()=>R(""),150)},[R]),L=b.useCallback(q=>{window.clearTimeout(x.current),R(q)},[R]),j=b.useCallback(q=>{O===q?window.clearTimeout(x.current):v.current=window.setTimeout(()=>{window.clearTimeout(x.current),R(q)},d)},[O,R,d]);return b.useEffect(()=>()=>{window.clearTimeout(v.current),window.clearTimeout(x.current),window.clearTimeout(_.current)},[]),C.jsx(mg,{scope:s,isRootMenu:!0,value:O,dir:B,orientation:h,rootNavigationMenu:g,onTriggerEnter:q=>{window.clearTimeout(v.current),k?j(q):L(q)},onTriggerLeave:()=>{window.clearTimeout(v.current),T()},onContentEnter:()=>window.clearTimeout(x.current),onContentLeave:T,onItemSelect:q=>{R(r0=>r0===q?"":q)},onItemDismiss:()=>R(""),children:C.jsx(T0.nav,{"aria-label":"Main","data-orientation":h,dir:B,...y,ref:E})})});pg.displayName=zn;var Xl="NavigationMenuSub",Ax=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,value:o,onValueChange:c,defaultValue:A,orientation:d="horizontal",...u}=t,h=we(Xl,s),[m,y]=Qe({prop:o,onChange:c,defaultProp:A??"",caller:Xl});return C.jsx(mg,{scope:s,isRootMenu:!1,value:m,dir:h.dir,orientation:d,rootNavigationMenu:h.rootNavigationMenu,onTriggerEnter:g=>y(g),onItemSelect:g=>y(g),onItemDismiss:()=>y(""),children:C.jsx(T0.div,{"data-orientation":d,...u,ref:a})})});Ax.displayName=Xl;var mg=t=>{const{scope:a,isRootMenu:s,rootNavigationMenu:o,dir:c,orientation:A,children:d,value:u,onItemSelect:h,onItemDismiss:m,onTriggerEnter:y,onTriggerLeave:g,onContentEnter:F,onContentLeave:E}=t,[B,v]=b.useState(null),[x,_]=b.useState(new Map),[k,w]=b.useState(null);return C.jsx(ox,{scope:a,isRootMenu:s,rootNavigationMenu:o,value:u,previousValue:Q9(u),baseId:Ee(),dir:c,orientation:A,viewport:B,onViewportChange:v,indicatorTrack:k,onIndicatorTrackChange:w,onTriggerEnter:L2(y),onTriggerLeave:L2(g),onContentEnter:L2(F),onContentLeave:L2(E),onItemSelect:L2(h),onItemDismiss:L2(m),onViewportContentChange:b.useCallback((O,R)=>{_(T=>(T.set(O,R),new Map(T)))},[]),onViewportContentRemove:b.useCallback(O=>{_(R=>R.has(O)?(R.delete(O),new Map(R)):R)},[]),children:C.jsx(Ld.Provider,{scope:a,children:C.jsx(ix,{scope:a,items:x,children:d})})})},hg="NavigationMenuList",gg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,...o}=t,c=we(hg,s),A=C.jsx(T0.ul,{"data-orientation":c.orientation,...o,ref:a});return C.jsx(T0.div,{style:{position:"relative"},ref:c.onIndicatorTrackChange,children:C.jsx(Ld.Slot,{scope:s,children:c.isRootMenu?C.jsx(Dg,{asChild:!0,children:A}):A})})});gg.displayName=hg;var Cg="NavigationMenuItem",[lx,yg]=zd(Cg),bg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,value:o,...c}=t,A=Ee(),d=o||A||"LEGACY_REACT_AUTO_VALUE",u=b.useRef(null),h=b.useRef(null),m=b.useRef(null),y=b.useRef(()=>{}),g=b.useRef(!1),F=b.useCallback((B="start")=>{if(u.current){y.current();const v=Zl(u.current);v.length&&jd(B==="start"?v:v.reverse())}},[]),E=b.useCallback(()=>{if(u.current){const B=Zl(u.current);B.length&&(y.current=yx(B))}},[]);return C.jsx(lx,{scope:s,value:d,triggerRef:h,contentRef:u,focusProxyRef:m,wasEscapeCloseRef:g,onEntryKeyDown:F,onFocusProxyEnter:F,onRootContentClose:E,onContentFocusOutside:E,children:C.jsx(T0.li,{...c,ref:a})})});bg.displayName=Cg;var Jl="NavigationMenuTrigger",Fg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,disabled:o,...c}=t,A=we(Jl,t.__scopeNavigationMenu),d=yg(Jl,t.__scopeNavigationMenu),u=b.useRef(null),h=r2(u,d.triggerRef,a),m=_g(A.baseId,d.value),y=wg(A.baseId,d.value),g=b.useRef(!1),F=b.useRef(!1),E=d.value===A.value;return C.jsxs(C.Fragment,{children:[C.jsx(Ld.ItemSlot,{scope:s,value:d.value,children:C.jsx(xg,{asChild:!0,children:C.jsx(T0.button,{id:m,disabled:o,"data-disabled":o?"":void 0,"data-state":Vd(E),"aria-expanded":E,"aria-controls":y,...c,ref:h,onPointerEnter:h0(t.onPointerEnter,()=>{F.current=!1,d.wasEscapeCloseRef.current=!1}),onPointerMove:h0(t.onPointerMove,li(()=>{o||F.current||d.wasEscapeCloseRef.current||g.current||(A.onTriggerEnter(d.value),g.current=!0)})),onPointerLeave:h0(t.onPointerLeave,li(()=>{o||(A.onTriggerLeave(),g.current=!1)})),onClick:h0(t.onClick,()=>{A.onItemSelect(d.value),F.current=E}),onKeyDown:h0(t.onKeyDown,B=>{const x={horizontal:"ArrowDown",vertical:A.dir==="rtl"?"ArrowLeft":"ArrowRight"}[A.orientation];E&&B.key===x&&(d.onEntryKeyDown(),B.preventDefault())})})})}),E&&C.jsxs(C.Fragment,{children:[C.jsx(nx,{"aria-hidden":!0,tabIndex:0,ref:d.focusProxyRef,onFocus:B=>{const v=d.contentRef.current,x=B.relatedTarget,_=x===u.current,k=v==null?void 0:v.contains(x);(_||!k)&&d.onFocusProxyEnter(_?"start":"end")}}),A.viewport&&C.jsx("span",{"aria-owns":y})]})]})});Fg.displayName=Jl;var dx="NavigationMenuLink",am="navigationMenu.linkSelect",Eg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,active:o,onSelect:c,...A}=t;return C.jsx(xg,{asChild:!0,children:C.jsx(T0.a,{"data-active":o?"":void 0,"aria-current":o?"page":void 0,...A,ref:a,onClick:h0(t.onClick,d=>{const u=d.target,h=new CustomEvent(am,{bubbles:!0,cancelable:!0});if(u.addEventListener(am,m=>c==null?void 0:c(m),{once:!0}),ii(u,h),!h.defaultPrevented&&!d.metaKey){const m=new CustomEvent(ni,{bubbles:!0,cancelable:!0});ii(u,m)}},{checkForDefaultPrevented:!1})})})});Eg.displayName=dx;var Md="NavigationMenuIndicator",ux=b.forwardRef((t,a)=>{const{forceMount:s,...o}=t,c=we(Md,t.__scopeNavigationMenu),A=!!c.value;return c.indicatorTrack?_h.createPortal(C.jsx(z2,{present:s||A,children:C.jsx(fx,{...o,ref:a})}),c.indicatorTrack):null});ux.displayName=Md;var fx=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,...o}=t,c=we(Md,s),A=fg(s),[d,u]=b.useState(null),[h,m]=b.useState(null),y=c.orientation==="horizontal",g=!!c.value;b.useEffect(()=>{var v;const B=(v=A().find(x=>x.value===c.value))==null?void 0:v.ref.current;B&&u(B)},[A,c.value]);const F=()=>{d&&m({size:y?d.offsetWidth:d.offsetHeight,offset:y?d.offsetLeft:d.offsetTop})};return $l(d,F),$l(c.indicatorTrack,F),h?C.jsx(T0.div,{"aria-hidden":!0,"data-state":g?"visible":"hidden","data-orientation":c.orientation,...o,ref:a,style:{position:"absolute",...y?{left:0,width:h.size+"px",transform:`translateX(${h.offset}px)`}:{top:0,height:h.size+"px",transform:`translateY(${h.offset}px)`},...o.style}}):null}),Pa="NavigationMenuContent",Bg=b.forwardRef((t,a)=>{const{forceMount:s,...o}=t,c=we(Pa,t.__scopeNavigationMenu),A=yg(Pa,t.__scopeNavigationMenu),d=r2(A.contentRef,a),u=A.value===c.value,h={value:A.value,triggerRef:A.triggerRef,focusProxyRef:A.focusProxyRef,wasEscapeCloseRef:A.wasEscapeCloseRef,onContentFocusOutside:A.onContentFocusOutside,onRootContentClose:A.onRootContentClose,...o};return c.viewport?C.jsx(px,{forceMount:s,...h,ref:d}):C.jsx(z2,{present:s||u,children:C.jsx(vg,{"data-state":Vd(u),...h,ref:d,onPointerEnter:h0(t.onPointerEnter,c.onContentEnter),onPointerLeave:h0(t.onPointerLeave,li(c.onContentLeave)),style:{pointerEvents:!u&&c.isRootMenu?"none":void 0,...h.style}})})});Bg.displayName=Pa;var px=b.forwardRef((t,a)=>{const s=we(Pa,t.__scopeNavigationMenu),{onViewportContentChange:o,onViewportContentRemove:c}=s;return De(()=>{o(t.value,{ref:a,...t})},[t,a,o]),De(()=>()=>c(t.value),[t.value,c]),null}),ni="navigationMenu.rootContentDismiss",vg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,value:o,triggerRef:c,focusProxyRef:A,wasEscapeCloseRef:d,onRootContentClose:u,onContentFocusOutside:h,...m}=t,y=we(Pa,s),g=b.useRef(null),F=r2(g,a),E=_g(y.baseId,o),B=wg(y.baseId,o),v=fg(s),x=b.useRef(null),{onItemDismiss:_}=y;b.useEffect(()=>{const w=g.current;if(y.isRootMenu&&w){const O=()=>{var R;_(),u(),w.contains(document.activeElement)&&((R=c.current)==null||R.focus())};return w.addEventListener(ni,O),()=>w.removeEventListener(ni,O)}},[y.isRootMenu,t.value,c,_,u]);const k=b.useMemo(()=>{const O=v().map(r0=>r0.value);y.dir==="rtl"&&O.reverse();const R=O.indexOf(y.value),T=O.indexOf(y.previousValue),L=o===y.value,j=T===O.indexOf(o);if(!L&&!j)return x.current;const q=(()=>{if(R!==T){if(L&&T!==-1)return R>T?"from-end":"from-start";if(j&&R!==-1)return R>T?"to-start":"to-end"}return null})();return x.current=q,q},[y.previousValue,y.value,y.dir,v,o]);return C.jsx(Dg,{asChild:!0,children:C.jsx(ds,{id:B,"aria-labelledby":E,"data-motion":k,"data-orientation":y.orientation,...m,ref:F,disableOutsidePointerEvents:!1,onDismiss:()=>{var O;const w=new Event(ni,{bubbles:!0,cancelable:!0});(O=g.current)==null||O.dispatchEvent(w)},onFocusOutside:h0(t.onFocusOutside,w=>{var R;h();const O=w.target;(R=y.rootNavigationMenu)!=null&&R.contains(O)&&w.preventDefault()}),onPointerDownOutside:h0(t.onPointerDownOutside,w=>{var L;const O=w.target,R=v().some(j=>{var q;return(q=j.ref.current)==null?void 0:q.contains(O)}),T=y.isRootMenu&&((L=y.viewport)==null?void 0:L.contains(O));(R||T||!y.isRootMenu)&&w.preventDefault()}),onKeyDown:h0(t.onKeyDown,w=>{var T;const O=w.altKey||w.ctrlKey||w.metaKey;if(w.key==="Tab"&&!O){const L=Zl(w.currentTarget),j=document.activeElement,q=L.findIndex(i0=>i0===j),d0=w.shiftKey?L.slice(0,q).reverse():L.slice(q+1,L.length);jd(d0)?w.preventDefault():(T=A.current)==null||T.focus()}}),onEscapeKeyDown:h0(t.onEscapeKeyDown,w=>{d.current=!0})})})}),Ud="NavigationMenuViewport",mx=b.forwardRef((t,a)=>{const{forceMount:s,...o}=t,A=!!we(Ud,t.__scopeNavigationMenu).value;return C.jsx(z2,{present:s||A,children:C.jsx(hx,{...o,ref:a})})});mx.displayName=Ud;var hx=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,children:o,...c}=t,A=we(Ud,s),d=r2(a,A.onViewportChange),u=cx(Pa,t.__scopeNavigationMenu),[h,m]=b.useState(null),[y,g]=b.useState(null),F=h?(h==null?void 0:h.width)+"px":void 0,E=h?(h==null?void 0:h.height)+"px":void 0,B=!!A.value,v=B?A.value:A.previousValue;return $l(y,()=>{y&&m({width:y.offsetWidth,height:y.offsetHeight})}),C.jsx(T0.div,{"data-state":Vd(B),"data-orientation":A.orientation,...c,ref:d,style:{pointerEvents:!B&&A.isRootMenu?"none":void 0,"--radix-navigation-menu-viewport-width":F,"--radix-navigation-menu-viewport-height":E,...c.style},onPointerEnter:h0(t.onPointerEnter,A.onContentEnter),onPointerLeave:h0(t.onPointerLeave,li(A.onContentLeave)),children:Array.from(u.items).map(([_,{ref:k,forceMount:w,...O}])=>{const R=v===_;return C.jsx(z2,{present:w||R,children:C.jsx(vg,{...O,ref:ls(k,T=>{R&&T&&g(T)})})},_)})})}),gx="FocusGroup",Dg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,...o}=t,c=we(gx,s);return C.jsx(Kl.Provider,{scope:s,children:C.jsx(Kl.Slot,{scope:s,children:C.jsx(T0.div,{dir:c.dir,...o,ref:a})})})}),rm=["ArrowRight","ArrowLeft","ArrowUp","ArrowDown"],Cx="FocusGroupItem",xg=b.forwardRef((t,a)=>{const{__scopeNavigationMenu:s,...o}=t,c=rx(s),A=we(Cx,s);return C.jsx(Kl.ItemSlot,{scope:s,children:C.jsx(T0.button,{...o,ref:a,onKeyDown:h0(t.onKeyDown,d=>{if(["Home","End",...rm].includes(d.key)){let h=c().map(g=>g.ref.current);if([A.dir==="rtl"?"ArrowRight":"ArrowLeft","ArrowUp","End"].includes(d.key)&&h.reverse(),rm.includes(d.key)){const g=h.indexOf(d.currentTarget);h=h.slice(g+1)}setTimeout(()=>jd(h)),d.preventDefault()}})})})});function Zl(t){const a=[],s=document.createTreeWalker(t,NodeFilter.SHOW_ELEMENT,{acceptNode:o=>{const c=o.tagName==="INPUT"&&o.type==="hidden";return o.disabled||o.hidden||c?NodeFilter.FILTER_SKIP:o.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;s.nextNode();)a.push(s.currentNode);return a}function jd(t){const a=document.activeElement;return t.some(s=>s===a?!0:(s.focus(),document.activeElement!==a))}function yx(t){return t.forEach(a=>{a.dataset.tabindex=a.getAttribute("tabindex")||"",a.setAttribute("tabindex","-1")}),()=>{t.forEach(a=>{const s=a.dataset.tabindex;a.setAttribute("tabindex",s)})}}function $l(t,a){const s=L2(a);De(()=>{let o=0;if(t){const c=new ResizeObserver(()=>{cancelAnimationFrame(o),o=window.requestAnimationFrame(s)});return c.observe(t),()=>{window.cancelAnimationFrame(o),c.unobserve(t)}}},[t,s])}function Vd(t){return t?"open":"closed"}function _g(t,a){return`${t}-trigger-${a}`}function wg(t,a){return`${t}-content-${a}`}function li(t){return a=>a.pointerType==="mouse"?t(a):void 0}var bx=pg,Fx=gg,Ex=bg,Bx=Fg,vx=Eg,Dx=Bg,xx="vocs_NavigationMenu",_x="vocs_NavigationMenu_list",wx="vocs_NavigationMenu_link",Sx="vocs_NavigationMenu_item",kx="var(--vocs_NavigationMenu_chevronDownIcon)",Tx="vocs_NavigationMenu_trigger vocs_NavigationMenu_link",Ox="vocs_NavigationMenu_content";const Sg=t=>C.jsx(bx,{...t,className:c0(t.className,xx)}),kg=t=>C.jsx(Fx,{...t,className:c0(t.className,_x)}),ki=({active:t,children:a,className:s,href:o})=>C.jsx(vx,{asChild:!0,children:C.jsx(ve,{"data-active":t,className:c0(s,wx),href:o,variant:"styleless",children:a})}),Tg=t=>C.jsx(Ex,{...t,className:c0(t.className,Sx)}),Og=({active:t,className:a,...s})=>{const{basePath:o}=m2(),c=o;return C.jsx(Bx,{...s,"data-active":t,className:c0(a,Tx),style:Le({[kx]:`url(${c}/.vocs/icons/chevron-down.svg)`})})},Rg=t=>C.jsx(Dx,{...t,className:c0(t.className,Ox)});Ql.Curtain=Rx;function Ql(){var o;const t=m2(),{showLogo:a,showSidebar:s}=an();return C.jsxs("div",{className:c0(U9,a&&!s&&j9),children:[C.jsx(M9,{}),a&&C.jsx("div",{className:Y9,children:C.jsx("div",{className:H9,children:C.jsx(Oa,{to:"/",style:{alignItems:"center",display:"flex",height:"56px",marginTop:"4px"},children:C.jsx(Nd,{})})})}),C.jsx("div",{className:nm}),C.jsx("div",{className:nm,children:(((o=t.topNav)==null?void 0:o.length)||0)>0&&C.jsx("div",{className:q9,children:C.jsx(Px,{})})})]})}function Rx(){return C.jsx("div",{className:G9})}function Px(){const{topNav:t}=m2();if(!t)return null;const{pathname:a}=s2(),s=As({pathname:a,items:t});return C.jsx(Sg,{delayDuration:0,children:C.jsxs(kg,{children:[t.map((o,c)=>o.element?On(o.element):o.link?C.jsx(ki,{active:s.includes(o.id),className:tm,href:o.link,children:o.text},c):o.items?C.jsxs(Tg,{className:tm,children:[C.jsx(Og,{active:s.includes(o.id),children:o.text}),C.jsx(Rg,{className:V9,children:C.jsx(Ix,{items:o.items})})]},c):null),C.jsx(_d,{})]})})}function Ix({items:t}){const{pathname:a}=s2(),s=As({pathname:a,items:t});return C.jsx("ul",{children:t==null?void 0:t.map((o,c)=>C.jsx(ki,{active:s.includes(o.id),href:o.link,children:o.text},c))})}function Nx(){const t=nn(),a=m2();return b.useMemo(()=>{const{pattern:s="",text:o="Edit page"}=a.editLink??{};let c="";return typeof s=="function"?c="":t.filePath&&(c=s.replace(/:path/g,t.filePath)),{url:c,text:o}},[a.editLink,t.filePath])}function Gd(){const[t,a]=b.useState(!1);return b.useEffect(()=>{a(!0)},[]),t}var Lx="vocs_Footer",zx="vocs_Footer_container",Mx="vocs_Footer_editLink",Ux="vocs_Footer_lastUpdated",jx="vocs_Footer_navigation",sm="vocs_Footer_navigationIcon",Vx="vocs_Footer_navigationIcon_left",Gx="vocs_Footer_navigationIcon_right",om="vocs_Footer_navigationItem",qx="vocs_Footer_navigationItem_left",Hx="vocs_Footer_navigationItem_right",im="vocs_Footer_navigationText",cm="vocs_Footer_navigationTextInner",ed="var(--vocs_Icon_size)",Yx="vocs_Icon";function V2({className:t,label:a,icon:s,size:o,style:c}){return C.jsx("div",{"aria-label":a,className:c0(Yx,t),role:"img",style:{...c,...Le({[ed]:o})},children:C.jsx(s,{height:o,width:o})})}var Wx="vocs_Socials",Kx="vocs_Socials_button",Xx="vocs_Socials_icon";function Jx(){return C.jsxs("svg",{width:"100%",height:"100%",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 127.14 96.36",children:[C.jsx("title",{children:"Discord"}),C.jsx("g",{id:"图层_2","data-name":"图层 2",children:C.jsx("g",{id:"Discord_Logos","data-name":"Discord Logos",children:C.jsx("g",{id:"Discord_Logo_-_Large_-_White","data-name":"Discord Logo - Large - White",children:C.jsx("path",{d:"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z",fill:"currentColor"})})})})]})}function Zx(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 98 96",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"GitHub"}),C.jsx("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z",fill:"currentColor"})]})}function $x(){return C.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 50 50",children:[C.jsx("title",{children:"Telegram"}),C.jsx("path",{d:"M25 2c12.703 0 23 10.297 23 23S37.703 48 25 48 2 37.703 2 25 12.297 2 25 2zm7.934 32.375c.423-1.298 2.405-14.234 2.65-16.783.074-.772-.17-1.285-.648-1.514-.578-.278-1.434-.139-2.427.219-1.362.491-18.774 7.884-19.78 8.312-.954.405-1.856.847-1.856 1.487 0 .45.267.703 1.003.966.766.273 2.695.858 3.834 1.172 1.097.303 2.346.04 3.046-.395.742-.461 9.305-6.191 9.92-6.693.614-.502 1.104.141.602.644-.502.502-6.38 6.207-7.155 6.997-.941.959-.273 1.953.358 2.351.721.454 5.906 3.932 6.687 4.49.781.558 1.573.811 2.298.811.725 0 1.107-.955 1.468-2.064z",fill:"currentColor"})]})}function Qx(){return C.jsxs("svg",{width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Warpcast"}),C.jsx("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M7.92028 31.9901H24.0698C28.4371 31.9901 31.9901 28.4373 31.9901 24.0699V7.92053C31.9901 3.55319 28.4371 0.000137329 24.0698 0.000137329H7.92028C3.55304 0.000137329 0 3.55319 0 7.92053V24.0699C0 28.4373 3.55304 31.9901 7.92028 31.9901ZM19.4134 16.048L20.9908 10.124H25.1383L21.2924 23.2218H17.7062L15.9951 17.1397L14.284 23.2218H10.7055L6.85115 10.124H10.999L12.5915 16.0916L14.1891 10.124H17.8309L19.4134 16.048Z",fill:"currentColor"})]})}function e8(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 1200 1227",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"X"}),C.jsx("path",{d:"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z",fill:"currentColor"})]})}const t8={discord:Jx,github:Zx,telegram:$x,warpcast:Qx,x:e8},n8={discord:"18px",github:"17px",telegram:"17px",warpcast:"17px",x:"16px"};function qd(){const t=m2();return!t.socials||t.socials.length===0?null:C.jsx("div",{className:Wx,children:t.socials.map((a,s)=>C.jsxs(b.Fragment,{children:[s!==0&&C.jsx("div",{style:{width:"1px",marginTop:ts[4],marginBottom:ts[4],backgroundColor:Ul.border}}),C.jsx("a",{className:Kx,href:a.link,target:"_blank",rel:"noopener noreferrer",children:C.jsx(V2,{className:Xx,label:a.label,icon:t8[a.icon],size:n8[a.icon]||"20px"})})]},s))})}function a8(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 72 60",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Arrow Left"}),C.jsx("path",{d:"M0.325684 29.7461C0.325684 30.8203 0.813963 31.8457 1.69286 32.6758L26.8882 57.8223C27.7671 58.6524 28.7437 59.043 29.7691 59.043C31.9175 59.043 33.5777 57.4317 33.5777 55.2344C33.5777 54.209 33.2359 53.1836 32.5035 52.5L25.7652 45.5176L9.26126 30.6738L8.38236 32.7734L21.3706 33.7012H67.4644C69.7593 33.7012 71.3706 32.041 71.3706 29.7461C71.3706 27.4512 69.7593 25.791 67.4644 25.791H21.3706L8.38236 26.7188L9.26126 28.8672L25.7652 13.9746L32.5035 6.99221C33.2359 6.30861 33.5777 5.28322 33.5777 4.25782C33.5777 2.06052 31.9175 0.449219 29.7691 0.449219C28.7437 0.449219 27.7671 0.839814 26.8882 1.66991L1.69286 26.8164C0.813963 27.6465 0.325684 28.6719 0.325684 29.7461Z",fill:"currentColor"})]})}function r8(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 72 60",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Arrow Right"}),C.jsx("path",{d:"M71.3706 29.7461C71.3706 28.6719 70.8824 27.6465 70.0035 26.8164L44.8081 1.66991C43.9292 0.839814 42.9527 0.449219 41.9273 0.449219C39.7789 0.449219 38.1187 2.06052 38.1187 4.25782C38.1187 5.28322 38.4605 6.30861 39.1929 6.99221L45.9312 13.9746L62.4351 28.8672L63.314 26.7188L50.3257 25.791H4.23196C1.93706 25.791 0.325684 27.4512 0.325684 29.7461C0.325684 32.041 1.93706 33.7012 4.23196 33.7012H50.3257L63.314 32.7734L62.4351 30.6738L45.9312 45.5176L39.1929 52.5C38.4605 53.1836 38.1187 54.209 38.1187 55.2344C38.1187 57.4317 39.7789 59.043 41.9273 59.043C42.9527 59.043 43.9292 58.6524 44.8081 57.8223L70.0035 32.6758C70.8824 31.8457 71.3706 30.8203 71.3706 29.7461Z",fill:"currentColor"})]})}function s8(){const{layout:t}=an(),a=Gd(),s=nn(),o=b.useMemo(()=>s.lastUpdatedAt?new Date(s.lastUpdatedAt):void 0,[s.lastUpdatedAt]),c=b.useMemo(()=>o==null?void 0:o.toISOString(),[o]);return C.jsxs("footer",{className:Lx,"data-layout":t,children:[t==="docs"&&C.jsxs(C.Fragment,{children:[C.jsxs("div",{className:zx,children:[C.jsx(o8,{}),a&&s.lastUpdatedAt&&C.jsxs("div",{className:Ux,children:["Last updated:"," ",C.jsx("time",{dateTime:c,children:new Intl.DateTimeFormat(void 0,{dateStyle:"short",timeStyle:"short"}).format(o)})]})]}),C.jsx(i8,{})]}),t!=="docs"&&C.jsx(qd,{}),C.jsx(Cv,{})]})}function o8(){const t=Nx();return t.url?C.jsx("div",{children:C.jsxs(ve,{className:Mx,href:t.url,children:[C.jsx(pv,{})," ",t.text]})}):null}function i8(){const t=Gd(),a=vi(),{pathname:s}=s2(),o=b.useMemo(()=>Pg(a.items||[]).filter(h=>h.link),[a]),c=b.useMemo(()=>o.findIndex(h=>h.link===s),[o,s]),[A,d]=b.useMemo(()=>c<0?[]:c===0?[null,o[c+1]]:c===o.length-1?[o[c-1],null]:[o[c-1],o[c+1]],[c,o]),u=yd();return b.useEffect(()=>{let h=c,m=!1;const y=F=>{if(F.code==="ShiftLeft"&&(m=!0),m){const E=o[h+1],B=o[h-1];F.code==="ArrowRight"&&(E!=null&&E.link)&&(!E.link.match(/^(\.*\/|#)/)?window.open(E.link,"noopener,noreferrer"):u(E.link),h++),F.code==="ArrowLeft"&&(B!=null&&B.link)&&(!B.link.match(/^(\.*\/|#)/)?window.open(B.link,"noopener,noreferrer"):u(B.link),h--)}},g=F=>{F.code==="ShiftLeft"&&(m=!1)};return window.addEventListener("keydown",y),window.addEventListener("keyup",g),()=>{window.removeEventListener("keydown",y),window.removeEventListener("keyup",g)}},[]),t?C.jsxs("div",{className:jx,children:[A?C.jsxs(ve,{className:c0(om,qx),href:A.link,variant:"styleless",children:[C.jsxs("div",{className:im,children:[C.jsx("div",{className:c0(sm,Vx),style:Le({[ed]:"0.75em"}),children:C.jsx(V2,{label:"Previous",icon:a8})}),C.jsx("div",{className:cm,children:A.text})]}),C.jsx(wa,{description:"Previous",keys:["shift","←"]})]}):C.jsx("div",{}),d?C.jsxs(ve,{className:c0(om,Hx),href:d.link,variant:"styleless",children:[C.jsxs("div",{className:im,children:[C.jsx("div",{className:cm,style:{textAlign:"right"},children:d.text}),C.jsx("div",{className:c0(sm,Gx),style:Le({[ed]:"0.75em"}),children:C.jsx(V2,{label:"Next",icon:r8})})]}),C.jsx(wa,{description:"Next",keys:["shift","→"]})]}):C.jsx("div",{})]}):null}function Pg(t){const a=[];for(const s of t)s.link&&a.push(s),s.items&&a.push(...Pg(s.items));return a}var Ti="Collapsible",[c8,Ig]=ze(Ti),[A8,Hd]=c8(Ti),Ng=b.forwardRef((t,a)=>{const{__scopeCollapsible:s,open:o,defaultOpen:c,disabled:A,onOpenChange:d,...u}=t,[h,m]=Qe({prop:o,defaultProp:c??!1,onChange:d,caller:Ti});return C.jsx(A8,{scope:s,disabled:A,contentId:Ee(),open:h,onOpenToggle:b.useCallback(()=>m(y=>!y),[m]),children:C.jsx(T0.div,{"data-state":Wd(h),"data-disabled":A?"":void 0,...u,ref:a})})});Ng.displayName=Ti;var Lg="CollapsibleTrigger",zg=b.forwardRef((t,a)=>{const{__scopeCollapsible:s,...o}=t,c=Hd(Lg,s);return C.jsx(T0.button,{type:"button","aria-controls":c.contentId,"aria-expanded":c.open||!1,"data-state":Wd(c.open),"data-disabled":c.disabled?"":void 0,disabled:c.disabled,...o,ref:a,onClick:h0(t.onClick,c.onOpenToggle)})});zg.displayName=Lg;var Yd="CollapsibleContent",Mg=b.forwardRef((t,a)=>{const{forceMount:s,...o}=t,c=Hd(Yd,t.__scopeCollapsible);return C.jsx(z2,{present:s||c.open,children:({present:A})=>C.jsx(l8,{...o,ref:a,present:A})})});Mg.displayName=Yd;var l8=b.forwardRef((t,a)=>{const{__scopeCollapsible:s,present:o,children:c,...A}=t,d=Hd(Yd,s),[u,h]=b.useState(o),m=b.useRef(null),y=r2(a,m),g=b.useRef(0),F=g.current,E=b.useRef(0),B=E.current,v=d.open||u,x=b.useRef(v),_=b.useRef(void 0);return b.useEffect(()=>{const k=requestAnimationFrame(()=>x.current=!1);return()=>cancelAnimationFrame(k)},[]),De(()=>{const k=m.current;if(k){_.current=_.current||{transitionDuration:k.style.transitionDuration,animationName:k.style.animationName},k.style.transitionDuration="0s",k.style.animationName="none";const w=k.getBoundingClientRect();g.current=w.height,E.current=w.width,x.current||(k.style.transitionDuration=_.current.transitionDuration,k.style.animationName=_.current.animationName),h(o)}},[d.open,o]),C.jsx(T0.div,{"data-state":Wd(d.open),"data-disabled":d.disabled?"":void 0,id:d.contentId,hidden:!v,...A,ref:y,style:{"--radix-collapsible-content-height":F?`${F}px`:void 0,"--radix-collapsible-content-width":B?`${B}px`:void 0,...t.style},children:v&&c})});function Wd(t){return t?"open":"closed"}var d8=Ng,u8=zg,f8=Mg,Ue="Accordion",p8=["Home","End","ArrowDown","ArrowUp","ArrowLeft","ArrowRight"],[Kd,m8,h8]=fs(Ue),[Oi,Hk]=ze(Ue,[h8,Ig]),Xd=Ig(),Ug=a2.forwardRef((t,a)=>{const{type:s,...o}=t,c=o,A=o;return C.jsx(Kd.Provider,{scope:t.__scopeAccordion,children:s==="multiple"?C.jsx(b8,{...A,ref:a}):C.jsx(y8,{...c,ref:a})})});Ug.displayName=Ue;var[jg,g8]=Oi(Ue),[Vg,C8]=Oi(Ue,{collapsible:!1}),y8=a2.forwardRef((t,a)=>{const{value:s,defaultValue:o,onValueChange:c=()=>{},collapsible:A=!1,...d}=t,[u,h]=Qe({prop:s,defaultProp:o??"",onChange:c,caller:Ue});return C.jsx(jg,{scope:t.__scopeAccordion,value:a2.useMemo(()=>u?[u]:[],[u]),onItemOpen:h,onItemClose:a2.useCallback(()=>A&&h(""),[A,h]),children:C.jsx(Vg,{scope:t.__scopeAccordion,collapsible:A,children:C.jsx(Gg,{...d,ref:a})})})}),b8=a2.forwardRef((t,a)=>{const{value:s,defaultValue:o,onValueChange:c=()=>{},...A}=t,[d,u]=Qe({prop:s,defaultProp:o??[],onChange:c,caller:Ue}),h=a2.useCallback(y=>u((g=[])=>[...g,y]),[u]),m=a2.useCallback(y=>u((g=[])=>g.filter(F=>F!==y)),[u]);return C.jsx(jg,{scope:t.__scopeAccordion,value:d,onItemOpen:h,onItemClose:m,children:C.jsx(Vg,{scope:t.__scopeAccordion,collapsible:!0,children:C.jsx(Gg,{...A,ref:a})})})}),[F8,Ri]=Oi(Ue),Gg=a2.forwardRef((t,a)=>{const{__scopeAccordion:s,disabled:o,dir:c,orientation:A="vertical",...d}=t,u=a2.useRef(null),h=r2(u,a),m=m8(s),g=us(c)==="ltr",F=h0(t.onKeyDown,E=>{var j;if(!p8.includes(E.key))return;const B=E.target,v=m().filter(q=>{var r0;return!((r0=q.ref.current)!=null&&r0.disabled)}),x=v.findIndex(q=>q.ref.current===B),_=v.length;if(x===-1)return;E.preventDefault();let k=x;const w=0,O=_-1,R=()=>{k=x+1,k>O&&(k=w)},T=()=>{k=x-1,k<w&&(k=O)};switch(E.key){case"Home":k=w;break;case"End":k=O;break;case"ArrowRight":A==="horizontal"&&(g?R():T());break;case"ArrowDown":A==="vertical"&&R();break;case"ArrowLeft":A==="horizontal"&&(g?T():R());break;case"ArrowUp":A==="vertical"&&T();break}const L=k%_;(j=v[L].ref.current)==null||j.focus()});return C.jsx(F8,{scope:s,disabled:o,direction:c,orientation:A,children:C.jsx(Kd.Slot,{scope:s,children:C.jsx(T0.div,{...d,"data-orientation":A,ref:h,onKeyDown:o?void 0:F})})})}),di="AccordionItem",[E8,Jd]=Oi(di),qg=a2.forwardRef((t,a)=>{const{__scopeAccordion:s,value:o,...c}=t,A=Ri(di,s),d=g8(di,s),u=Xd(s),h=Ee(),m=o&&d.value.includes(o)||!1,y=A.disabled||t.disabled;return C.jsx(E8,{scope:s,open:m,disabled:y,triggerId:h,children:C.jsx(d8,{"data-orientation":A.orientation,"data-state":Xg(m),...u,...c,ref:a,disabled:y,open:m,onOpenChange:g=>{g?d.onItemOpen(o):d.onItemClose(o)}})})});qg.displayName=di;var Hg="AccordionHeader",B8=a2.forwardRef((t,a)=>{const{__scopeAccordion:s,...o}=t,c=Ri(Ue,s),A=Jd(Hg,s);return C.jsx(T0.h3,{"data-orientation":c.orientation,"data-state":Xg(A.open),"data-disabled":A.disabled?"":void 0,...o,ref:a})});B8.displayName=Hg;var td="AccordionTrigger",Yg=a2.forwardRef((t,a)=>{const{__scopeAccordion:s,...o}=t,c=Ri(Ue,s),A=Jd(td,s),d=C8(td,s),u=Xd(s);return C.jsx(Kd.ItemSlot,{scope:s,children:C.jsx(u8,{"aria-disabled":A.open&&!d.collapsible||void 0,"data-orientation":c.orientation,id:A.triggerId,...u,...o,ref:a})})});Yg.displayName=td;var Wg="AccordionContent",Kg=a2.forwardRef((t,a)=>{const{__scopeAccordion:s,...o}=t,c=Ri(Ue,s),A=Jd(Wg,s),d=Xd(s);return C.jsx(f8,{role:"region","aria-labelledby":A.triggerId,"data-orientation":c.orientation,...d,...o,ref:a,style:{"--radix-accordion-content-height":"var(--radix-collapsible-content-height)","--radix-accordion-content-width":"var(--radix-collapsible-content-width)",...t.style}})});Kg.displayName=Wg;function Xg(t){return t?"open":"closed"}var v8=Ug,D8=qg,x8=Yg,_8=Kg,w8="vocs_MobileSearch_searchButton";function S8(){const[t,a]=b.useState(!1);return C.jsxs(Qh,{open:t,onOpenChange:a,children:[C.jsx(eg,{asChild:!0,children:C.jsx("button",{className:w8,type:"button","aria-label":"Search",children:C.jsx(xd,{height:21,width:21})})}),C.jsx(dg,{open:t,onClose:()=>a(!1)})]})}var k8="vocs_MobileTopNav",T8="vocs_MobileTopNav_content",O8="vocs_MobileTopNav_curtain",Am="vocs_MobileTopNav_curtainGroup",Fl="vocs_MobileTopNav_curtainItem",El="vocs_MobileTopNav_group",R8="vocs_MobileTopNav_item",P8="vocs_MobileTopNav_logo",Jg="vocs_MobileTopNav_menuTrigger",I8="vocs_MobileTopNav_menuTitle",N8="vocs_MobileTopNav_navigation_compact",Zg="vocs_MobileTopNav_navigation",L8="vocs_MobileTopNav_navigationContent",Ho="vocs_MobileTopNav_navigationItem",z8="var(--vocs_MobileTopNav_chevronDownIcon)",M8="var(--vocs_MobileTopNav_chevronUpIcon)",U8="vocs_MobileTopNav_trigger",lm="vocs_MobileTopNav_outlineTrigger",j8="vocs_MobileTopNav_outlinePopover",dm="vocs_MobileTopNav_section",V8="vocs_MobileTopNav_separator",G8="vocs_MobileTopNav_sidebarPopover",q8="vocs_MobileTopNav_topNavPopover",H8="vocs_MobileTopNav_topNavPopoverFooter";function Y8(t,a){let s=!1;return()=>{s=!0,setTimeout(()=>{s&&t(),s=!1},a)}}function W8(t){const[a,s]=b.useState(void 0);return De(()=>{if(t){s({width:t.offsetWidth,height:t.offsetHeight});const o=new ResizeObserver(c=>{if(!Array.isArray(c)||!c.length)return;const A=c[0];let d,u;if("borderBoxSize"in A){const h=A.borderBoxSize,m=Array.isArray(h)?h[0]:h;d=m.inlineSize,u=m.blockSize}else d=t.offsetWidth,u=t.offsetHeight;s({width:d,height:u})});return o.observe(t,{box:"border-box"}),()=>o.unobserve(t)}else s(void 0)},[t]),a}const K8=["top","right","bottom","left"],Qt=Math.min,ce=Math.max,ui=Math.round,Yo=Math.floor,Ze=t=>({x:t,y:t}),X8={left:"right",right:"left",bottom:"top",top:"bottom"},J8={start:"end",end:"start"};function nd(t,a,s){return ce(t,Qt(a,s))}function bt(t,a){return typeof t=="function"?t(a):t}function Ft(t){return t.split("-")[0]}function ja(t){return t.split("-")[1]}function Zd(t){return t==="x"?"y":"x"}function $d(t){return t==="y"?"height":"width"}const Z8=new Set(["top","bottom"]);function Xe(t){return Z8.has(Ft(t))?"y":"x"}function Qd(t){return Zd(Xe(t))}function $8(t,a,s){s===void 0&&(s=!1);const o=ja(t),c=Qd(t),A=$d(c);let d=c==="x"?o===(s?"end":"start")?"right":"left":o==="start"?"bottom":"top";return a.reference[A]>a.floating[A]&&(d=fi(d)),[d,fi(d)]}function Q8(t){const a=fi(t);return[ad(t),a,ad(a)]}function ad(t){return t.replace(/start|end/g,a=>J8[a])}const um=["left","right"],fm=["right","left"],e_=["top","bottom"],t_=["bottom","top"];function n_(t,a,s){switch(t){case"top":case"bottom":return s?a?fm:um:a?um:fm;case"left":case"right":return a?e_:t_;default:return[]}}function a_(t,a,s,o){const c=ja(t);let A=n_(Ft(t),s==="start",o);return c&&(A=A.map(d=>d+"-"+c),a&&(A=A.concat(A.map(ad)))),A}function fi(t){return t.replace(/left|right|bottom|top/g,a=>X8[a])}function r_(t){return{top:0,right:0,bottom:0,left:0,...t}}function $g(t){return typeof t!="number"?r_(t):{top:t,right:t,bottom:t,left:t}}function pi(t){const{x:a,y:s,width:o,height:c}=t;return{width:o,height:c,top:s,left:a,right:a+o,bottom:s+c,x:a,y:s}}function pm(t,a,s){let{reference:o,floating:c}=t;const A=Xe(a),d=Qd(a),u=$d(d),h=Ft(a),m=A==="y",y=o.x+o.width/2-c.width/2,g=o.y+o.height/2-c.height/2,F=o[u]/2-c[u]/2;let E;switch(h){case"top":E={x:y,y:o.y-c.height};break;case"bottom":E={x:y,y:o.y+o.height};break;case"right":E={x:o.x+o.width,y:g};break;case"left":E={x:o.x-c.width,y:g};break;default:E={x:o.x,y:o.y}}switch(ja(a)){case"start":E[d]-=F*(s&&m?-1:1);break;case"end":E[d]+=F*(s&&m?-1:1);break}return E}const s_=async(t,a,s)=>{const{placement:o="bottom",strategy:c="absolute",middleware:A=[],platform:d}=s,u=A.filter(Boolean),h=await(d.isRTL==null?void 0:d.isRTL(a));let m=await d.getElementRects({reference:t,floating:a,strategy:c}),{x:y,y:g}=pm(m,o,h),F=o,E={},B=0;for(let v=0;v<u.length;v++){const{name:x,fn:_}=u[v],{x:k,y:w,data:O,reset:R}=await _({x:y,y:g,initialPlacement:o,placement:F,strategy:c,middlewareData:E,rects:m,platform:d,elements:{reference:t,floating:a}});y=k??y,g=w??g,E={...E,[x]:{...E[x],...O}},R&&B<=50&&(B++,typeof R=="object"&&(R.placement&&(F=R.placement),R.rects&&(m=R.rects===!0?await d.getElementRects({reference:t,floating:a,strategy:c}):R.rects),{x:y,y:g}=pm(m,F,h)),v=-1)}return{x:y,y:g,placement:F,strategy:c,middlewareData:E}};async function rs(t,a){var s;a===void 0&&(a={});const{x:o,y:c,platform:A,rects:d,elements:u,strategy:h}=t,{boundary:m="clippingAncestors",rootBoundary:y="viewport",elementContext:g="floating",altBoundary:F=!1,padding:E=0}=bt(a,t),B=$g(E),x=u[F?g==="floating"?"reference":"floating":g],_=pi(await A.getClippingRect({element:(s=await(A.isElement==null?void 0:A.isElement(x)))==null||s?x:x.contextElement||await(A.getDocumentElement==null?void 0:A.getDocumentElement(u.floating)),boundary:m,rootBoundary:y,strategy:h})),k=g==="floating"?{x:o,y:c,width:d.floating.width,height:d.floating.height}:d.reference,w=await(A.getOffsetParent==null?void 0:A.getOffsetParent(u.floating)),O=await(A.isElement==null?void 0:A.isElement(w))?await(A.getScale==null?void 0:A.getScale(w))||{x:1,y:1}:{x:1,y:1},R=pi(A.convertOffsetParentRelativeRectToViewportRelativeRect?await A.convertOffsetParentRelativeRectToViewportRelativeRect({elements:u,rect:k,offsetParent:w,strategy:h}):k);return{top:(_.top-R.top+B.top)/O.y,bottom:(R.bottom-_.bottom+B.bottom)/O.y,left:(_.left-R.left+B.left)/O.x,right:(R.right-_.right+B.right)/O.x}}const o_=t=>({name:"arrow",options:t,async fn(a){const{x:s,y:o,placement:c,rects:A,platform:d,elements:u,middlewareData:h}=a,{element:m,padding:y=0}=bt(t,a)||{};if(m==null)return{};const g=$g(y),F={x:s,y:o},E=Qd(c),B=$d(E),v=await d.getDimensions(m),x=E==="y",_=x?"top":"left",k=x?"bottom":"right",w=x?"clientHeight":"clientWidth",O=A.reference[B]+A.reference[E]-F[E]-A.floating[B],R=F[E]-A.reference[E],T=await(d.getOffsetParent==null?void 0:d.getOffsetParent(m));let L=T?T[w]:0;(!L||!await(d.isElement==null?void 0:d.isElement(T)))&&(L=u.floating[w]||A.floating[B]);const j=O/2-R/2,q=L/2-v[B]/2-1,r0=Qt(g[_],q),d0=Qt(g[k],q),i0=r0,A0=L-v[B]-d0,W=L/2-v[B]/2+j,u0=nd(i0,W,A0),z=!h.arrow&&ja(c)!=null&&W!==u0&&A.reference[B]/2-(W<i0?r0:d0)-v[B]/2<0,Y=z?W<i0?W-i0:W-A0:0;return{[E]:F[E]+Y,data:{[E]:u0,centerOffset:W-u0-Y,...z&&{alignmentOffset:Y}},reset:z}}}),i_=function(t){return t===void 0&&(t={}),{name:"flip",options:t,async fn(a){var s,o;const{placement:c,middlewareData:A,rects:d,initialPlacement:u,platform:h,elements:m}=a,{mainAxis:y=!0,crossAxis:g=!0,fallbackPlacements:F,fallbackStrategy:E="bestFit",fallbackAxisSideDirection:B="none",flipAlignment:v=!0,...x}=bt(t,a);if((s=A.arrow)!=null&&s.alignmentOffset)return{};const _=Ft(c),k=Xe(u),w=Ft(u)===u,O=await(h.isRTL==null?void 0:h.isRTL(m.floating)),R=F||(w||!v?[fi(u)]:Q8(u)),T=B!=="none";!F&&T&&R.push(...a_(u,v,B,O));const L=[u,...R],j=await rs(a,x),q=[];let r0=((o=A.flip)==null?void 0:o.overflows)||[];if(y&&q.push(j[_]),g){const W=$8(c,d,O);q.push(j[W[0]],j[W[1]])}if(r0=[...r0,{placement:c,overflows:q}],!q.every(W=>W<=0)){var d0,i0;const W=(((d0=A.flip)==null?void 0:d0.index)||0)+1,u0=L[W];if(u0&&(!(g==="alignment"?k!==Xe(u0):!1)||r0.every($=>$.overflows[0]>0&&Xe($.placement)===k)))return{data:{index:W,overflows:r0},reset:{placement:u0}};let z=(i0=r0.filter(Y=>Y.overflows[0]<=0).sort((Y,$)=>Y.overflows[1]-$.overflows[1])[0])==null?void 0:i0.placement;if(!z)switch(E){case"bestFit":{var A0;const Y=(A0=r0.filter($=>{if(T){const Z=Xe($.placement);return Z===k||Z==="y"}return!0}).map($=>[$.placement,$.overflows.filter(Z=>Z>0).reduce((Z,P)=>Z+P,0)]).sort(($,Z)=>$[1]-Z[1])[0])==null?void 0:A0[0];Y&&(z=Y);break}case"initialPlacement":z=u;break}if(c!==z)return{reset:{placement:z}}}return{}}}};function mm(t,a){return{top:t.top-a.height,right:t.right-a.width,bottom:t.bottom-a.height,left:t.left-a.width}}function hm(t){return K8.some(a=>t[a]>=0)}const c_=function(t){return t===void 0&&(t={}),{name:"hide",options:t,async fn(a){const{rects:s}=a,{strategy:o="referenceHidden",...c}=bt(t,a);switch(o){case"referenceHidden":{const A=await rs(a,{...c,elementContext:"reference"}),d=mm(A,s.reference);return{data:{referenceHiddenOffsets:d,referenceHidden:hm(d)}}}case"escaped":{const A=await rs(a,{...c,altBoundary:!0}),d=mm(A,s.floating);return{data:{escapedOffsets:d,escaped:hm(d)}}}default:return{}}}}},Qg=new Set(["left","top"]);async function A_(t,a){const{placement:s,platform:o,elements:c}=t,A=await(o.isRTL==null?void 0:o.isRTL(c.floating)),d=Ft(s),u=ja(s),h=Xe(s)==="y",m=Qg.has(d)?-1:1,y=A&&h?-1:1,g=bt(a,t);let{mainAxis:F,crossAxis:E,alignmentAxis:B}=typeof g=="number"?{mainAxis:g,crossAxis:0,alignmentAxis:null}:{mainAxis:g.mainAxis||0,crossAxis:g.crossAxis||0,alignmentAxis:g.alignmentAxis};return u&&typeof B=="number"&&(E=u==="end"?B*-1:B),h?{x:E*y,y:F*m}:{x:F*m,y:E*y}}const l_=function(t){return t===void 0&&(t=0),{name:"offset",options:t,async fn(a){var s,o;const{x:c,y:A,placement:d,middlewareData:u}=a,h=await A_(a,t);return d===((s=u.offset)==null?void 0:s.placement)&&(o=u.arrow)!=null&&o.alignmentOffset?{}:{x:c+h.x,y:A+h.y,data:{...h,placement:d}}}}},d_=function(t){return t===void 0&&(t={}),{name:"shift",options:t,async fn(a){const{x:s,y:o,placement:c}=a,{mainAxis:A=!0,crossAxis:d=!1,limiter:u={fn:x=>{let{x:_,y:k}=x;return{x:_,y:k}}},...h}=bt(t,a),m={x:s,y:o},y=await rs(a,h),g=Xe(Ft(c)),F=Zd(g);let E=m[F],B=m[g];if(A){const x=F==="y"?"top":"left",_=F==="y"?"bottom":"right",k=E+y[x],w=E-y[_];E=nd(k,E,w)}if(d){const x=g==="y"?"top":"left",_=g==="y"?"bottom":"right",k=B+y[x],w=B-y[_];B=nd(k,B,w)}const v=u.fn({...a,[F]:E,[g]:B});return{...v,data:{x:v.x-s,y:v.y-o,enabled:{[F]:A,[g]:d}}}}}},u_=function(t){return t===void 0&&(t={}),{options:t,fn(a){const{x:s,y:o,placement:c,rects:A,middlewareData:d}=a,{offset:u=0,mainAxis:h=!0,crossAxis:m=!0}=bt(t,a),y={x:s,y:o},g=Xe(c),F=Zd(g);let E=y[F],B=y[g];const v=bt(u,a),x=typeof v=="number"?{mainAxis:v,crossAxis:0}:{mainAxis:0,crossAxis:0,...v};if(h){const w=F==="y"?"height":"width",O=A.reference[F]-A.floating[w]+x.mainAxis,R=A.reference[F]+A.reference[w]-x.mainAxis;E<O?E=O:E>R&&(E=R)}if(m){var _,k;const w=F==="y"?"width":"height",O=Qg.has(Ft(c)),R=A.reference[g]-A.floating[w]+(O&&((_=d.offset)==null?void 0:_[g])||0)+(O?0:x.crossAxis),T=A.reference[g]+A.reference[w]+(O?0:((k=d.offset)==null?void 0:k[g])||0)-(O?x.crossAxis:0);B<R?B=R:B>T&&(B=T)}return{[F]:E,[g]:B}}}},f_=function(t){return t===void 0&&(t={}),{name:"size",options:t,async fn(a){var s,o;const{placement:c,rects:A,platform:d,elements:u}=a,{apply:h=()=>{},...m}=bt(t,a),y=await rs(a,m),g=Ft(c),F=ja(c),E=Xe(c)==="y",{width:B,height:v}=A.floating;let x,_;g==="top"||g==="bottom"?(x=g,_=F===(await(d.isRTL==null?void 0:d.isRTL(u.floating))?"start":"end")?"left":"right"):(_=g,x=F==="end"?"top":"bottom");const k=v-y.top-y.bottom,w=B-y.left-y.right,O=Qt(v-y[x],k),R=Qt(B-y[_],w),T=!a.middlewareData.shift;let L=O,j=R;if((s=a.middlewareData.shift)!=null&&s.enabled.x&&(j=w),(o=a.middlewareData.shift)!=null&&o.enabled.y&&(L=k),T&&!F){const r0=ce(y.left,0),d0=ce(y.right,0),i0=ce(y.top,0),A0=ce(y.bottom,0);E?j=B-2*(r0!==0||d0!==0?r0+d0:ce(y.left,y.right)):L=v-2*(i0!==0||A0!==0?i0+A0:ce(y.top,y.bottom))}await h({...a,availableWidth:j,availableHeight:L});const q=await d.getDimensions(u.floating);return B!==q.width||v!==q.height?{reset:{rects:!0}}:{}}}};function Pi(){return typeof window<"u"}function Va(t){return e5(t)?(t.nodeName||"").toLowerCase():"#document"}function Ae(t){var a;return(t==null||(a=t.ownerDocument)==null?void 0:a.defaultView)||window}function et(t){var a;return(a=(e5(t)?t.ownerDocument:t.document)||window.document)==null?void 0:a.documentElement}function e5(t){return Pi()?t instanceof Node||t instanceof Ae(t).Node:!1}function _2(t){return Pi()?t instanceof Element||t instanceof Ae(t).Element:!1}function $e(t){return Pi()?t instanceof HTMLElement||t instanceof Ae(t).HTMLElement:!1}function mi(t){return!Pi()||typeof ShadowRoot>"u"?!1:t instanceof ShadowRoot||t instanceof Ae(t).ShadowRoot}const p_=new Set(["inline","contents"]);function ps(t){const{overflow:a,overflowX:s,overflowY:o,display:c}=xe(t);return/auto|scroll|overlay|hidden|clip/.test(a+o+s)&&!p_.has(c)}const m_=new Set(["table","td","th"]);function h_(t){return m_.has(Va(t))}const g_=[":popover-open",":modal"];function Ii(t){return g_.some(a=>{try{return t.matches(a)}catch{return!1}})}const C_=["transform","translate","scale","rotate","perspective"],y_=["transform","translate","scale","rotate","perspective","filter"],b_=["paint","layout","strict","content"];function e6(t){const a=t6(),s=_2(t)?xe(t):t;return C_.some(o=>s[o]?s[o]!=="none":!1)||(s.containerType?s.containerType!=="normal":!1)||!a&&(s.backdropFilter?s.backdropFilter!=="none":!1)||!a&&(s.filter?s.filter!=="none":!1)||y_.some(o=>(s.willChange||"").includes(o))||b_.some(o=>(s.contain||"").includes(o))}function F_(t){let a=en(t);for(;$e(a)&&!Ia(a);){if(e6(a))return a;if(Ii(a))return null;a=en(a)}return null}function t6(){return typeof CSS>"u"||!CSS.supports?!1:CSS.supports("-webkit-backdrop-filter","none")}const E_=new Set(["html","body","#document"]);function Ia(t){return E_.has(Va(t))}function xe(t){return Ae(t).getComputedStyle(t)}function Ni(t){return _2(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.scrollX,scrollTop:t.scrollY}}function en(t){if(Va(t)==="html")return t;const a=t.assignedSlot||t.parentNode||mi(t)&&t.host||et(t);return mi(a)?a.host:a}function t5(t){const a=en(t);return Ia(a)?t.ownerDocument?t.ownerDocument.body:t.body:$e(a)&&ps(a)?a:t5(a)}function ss(t,a,s){var o;a===void 0&&(a=[]),s===void 0&&(s=!0);const c=t5(t),A=c===((o=t.ownerDocument)==null?void 0:o.body),d=Ae(c);if(A){const u=rd(d);return a.concat(d,d.visualViewport||[],ps(c)?c:[],u&&s?ss(u):[])}return a.concat(c,ss(c,[],s))}function rd(t){return t.parent&&Object.getPrototypeOf(t.parent)?t.frameElement:null}function n5(t){const a=xe(t);let s=parseFloat(a.width)||0,o=parseFloat(a.height)||0;const c=$e(t),A=c?t.offsetWidth:s,d=c?t.offsetHeight:o,u=ui(s)!==A||ui(o)!==d;return u&&(s=A,o=d),{width:s,height:o,$:u}}function n6(t){return _2(t)?t:t.contextElement}function Ta(t){const a=n6(t);if(!$e(a))return Ze(1);const s=a.getBoundingClientRect(),{width:o,height:c,$:A}=n5(a);let d=(A?ui(s.width):s.width)/o,u=(A?ui(s.height):s.height)/c;return(!d||!Number.isFinite(d))&&(d=1),(!u||!Number.isFinite(u))&&(u=1),{x:d,y:u}}const B_=Ze(0);function a5(t){const a=Ae(t);return!t6()||!a.visualViewport?B_:{x:a.visualViewport.offsetLeft,y:a.visualViewport.offsetTop}}function v_(t,a,s){return a===void 0&&(a=!1),!s||a&&s!==Ae(t)?!1:a}function Pn(t,a,s,o){a===void 0&&(a=!1),s===void 0&&(s=!1);const c=t.getBoundingClientRect(),A=n6(t);let d=Ze(1);a&&(o?_2(o)&&(d=Ta(o)):d=Ta(t));const u=v_(A,s,o)?a5(A):Ze(0);let h=(c.left+u.x)/d.x,m=(c.top+u.y)/d.y,y=c.width/d.x,g=c.height/d.y;if(A){const F=Ae(A),E=o&&_2(o)?Ae(o):o;let B=F,v=rd(B);for(;v&&o&&E!==B;){const x=Ta(v),_=v.getBoundingClientRect(),k=xe(v),w=_.left+(v.clientLeft+parseFloat(k.paddingLeft))*x.x,O=_.top+(v.clientTop+parseFloat(k.paddingTop))*x.y;h*=x.x,m*=x.y,y*=x.x,g*=x.y,h+=w,m+=O,B=Ae(v),v=rd(B)}}return pi({width:y,height:g,x:h,y:m})}function a6(t,a){const s=Ni(t).scrollLeft;return a?a.left+s:Pn(et(t)).left+s}function r5(t,a,s){s===void 0&&(s=!1);const o=t.getBoundingClientRect(),c=o.left+a.scrollLeft-(s?0:a6(t,o)),A=o.top+a.scrollTop;return{x:c,y:A}}function D_(t){let{elements:a,rect:s,offsetParent:o,strategy:c}=t;const A=c==="fixed",d=et(o),u=a?Ii(a.floating):!1;if(o===d||u&&A)return s;let h={scrollLeft:0,scrollTop:0},m=Ze(1);const y=Ze(0),g=$e(o);if((g||!g&&!A)&&((Va(o)!=="body"||ps(d))&&(h=Ni(o)),$e(o))){const E=Pn(o);m=Ta(o),y.x=E.x+o.clientLeft,y.y=E.y+o.clientTop}const F=d&&!g&&!A?r5(d,h,!0):Ze(0);return{width:s.width*m.x,height:s.height*m.y,x:s.x*m.x-h.scrollLeft*m.x+y.x+F.x,y:s.y*m.y-h.scrollTop*m.y+y.y+F.y}}function x_(t){return Array.from(t.getClientRects())}function __(t){const a=et(t),s=Ni(t),o=t.ownerDocument.body,c=ce(a.scrollWidth,a.clientWidth,o.scrollWidth,o.clientWidth),A=ce(a.scrollHeight,a.clientHeight,o.scrollHeight,o.clientHeight);let d=-s.scrollLeft+a6(t);const u=-s.scrollTop;return xe(o).direction==="rtl"&&(d+=ce(a.clientWidth,o.clientWidth)-c),{width:c,height:A,x:d,y:u}}function w_(t,a){const s=Ae(t),o=et(t),c=s.visualViewport;let A=o.clientWidth,d=o.clientHeight,u=0,h=0;if(c){A=c.width,d=c.height;const m=t6();(!m||m&&a==="fixed")&&(u=c.offsetLeft,h=c.offsetTop)}return{width:A,height:d,x:u,y:h}}const S_=new Set(["absolute","fixed"]);function k_(t,a){const s=Pn(t,!0,a==="fixed"),o=s.top+t.clientTop,c=s.left+t.clientLeft,A=$e(t)?Ta(t):Ze(1),d=t.clientWidth*A.x,u=t.clientHeight*A.y,h=c*A.x,m=o*A.y;return{width:d,height:u,x:h,y:m}}function gm(t,a,s){let o;if(a==="viewport")o=w_(t,s);else if(a==="document")o=__(et(t));else if(_2(a))o=k_(a,s);else{const c=a5(t);o={x:a.x-c.x,y:a.y-c.y,width:a.width,height:a.height}}return pi(o)}function s5(t,a){const s=en(t);return s===a||!_2(s)||Ia(s)?!1:xe(s).position==="fixed"||s5(s,a)}function T_(t,a){const s=a.get(t);if(s)return s;let o=ss(t,[],!1).filter(u=>_2(u)&&Va(u)!=="body"),c=null;const A=xe(t).position==="fixed";let d=A?en(t):t;for(;_2(d)&&!Ia(d);){const u=xe(d),h=e6(d);!h&&u.position==="fixed"&&(c=null),(A?!h&&!c:!h&&u.position==="static"&&!!c&&S_.has(c.position)||ps(d)&&!h&&s5(t,d))?o=o.filter(y=>y!==d):c=u,d=en(d)}return a.set(t,o),o}function O_(t){let{element:a,boundary:s,rootBoundary:o,strategy:c}=t;const d=[...s==="clippingAncestors"?Ii(a)?[]:T_(a,this._c):[].concat(s),o],u=d[0],h=d.reduce((m,y)=>{const g=gm(a,y,c);return m.top=ce(g.top,m.top),m.right=Qt(g.right,m.right),m.bottom=Qt(g.bottom,m.bottom),m.left=ce(g.left,m.left),m},gm(a,u,c));return{width:h.right-h.left,height:h.bottom-h.top,x:h.left,y:h.top}}function R_(t){const{width:a,height:s}=n5(t);return{width:a,height:s}}function P_(t,a,s){const o=$e(a),c=et(a),A=s==="fixed",d=Pn(t,!0,A,a);let u={scrollLeft:0,scrollTop:0};const h=Ze(0);function m(){h.x=a6(c)}if(o||!o&&!A)if((Va(a)!=="body"||ps(c))&&(u=Ni(a)),o){const E=Pn(a,!0,A,a);h.x=E.x+a.clientLeft,h.y=E.y+a.clientTop}else c&&m();A&&!o&&c&&m();const y=c&&!o&&!A?r5(c,u):Ze(0),g=d.left+u.scrollLeft-h.x-y.x,F=d.top+u.scrollTop-h.y-y.y;return{x:g,y:F,width:d.width,height:d.height}}function Bl(t){return xe(t).position==="static"}function Cm(t,a){if(!$e(t)||xe(t).position==="fixed")return null;if(a)return a(t);let s=t.offsetParent;return et(t)===s&&(s=s.ownerDocument.body),s}function o5(t,a){const s=Ae(t);if(Ii(t))return s;if(!$e(t)){let c=en(t);for(;c&&!Ia(c);){if(_2(c)&&!Bl(c))return c;c=en(c)}return s}let o=Cm(t,a);for(;o&&h_(o)&&Bl(o);)o=Cm(o,a);return o&&Ia(o)&&Bl(o)&&!e6(o)?s:o||F_(t)||s}const I_=async function(t){const a=this.getOffsetParent||o5,s=this.getDimensions,o=await s(t.floating);return{reference:P_(t.reference,await a(t.floating),t.strategy),floating:{x:0,y:0,width:o.width,height:o.height}}};function N_(t){return xe(t).direction==="rtl"}const L_={convertOffsetParentRelativeRectToViewportRelativeRect:D_,getDocumentElement:et,getClippingRect:O_,getOffsetParent:o5,getElementRects:I_,getClientRects:x_,getDimensions:R_,getScale:Ta,isElement:_2,isRTL:N_};function i5(t,a){return t.x===a.x&&t.y===a.y&&t.width===a.width&&t.height===a.height}function z_(t,a){let s=null,o;const c=et(t);function A(){var u;clearTimeout(o),(u=s)==null||u.disconnect(),s=null}function d(u,h){u===void 0&&(u=!1),h===void 0&&(h=1),A();const m=t.getBoundingClientRect(),{left:y,top:g,width:F,height:E}=m;if(u||a(),!F||!E)return;const B=Yo(g),v=Yo(c.clientWidth-(y+F)),x=Yo(c.clientHeight-(g+E)),_=Yo(y),w={rootMargin:-B+"px "+-v+"px "+-x+"px "+-_+"px",threshold:ce(0,Qt(1,h))||1};let O=!0;function R(T){const L=T[0].intersectionRatio;if(L!==h){if(!O)return d();L?d(!1,L):o=setTimeout(()=>{d(!1,1e-7)},1e3)}L===1&&!i5(m,t.getBoundingClientRect())&&d(),O=!1}try{s=new IntersectionObserver(R,{...w,root:c.ownerDocument})}catch{s=new IntersectionObserver(R,w)}s.observe(t)}return d(!0),A}function M_(t,a,s,o){o===void 0&&(o={});const{ancestorScroll:c=!0,ancestorResize:A=!0,elementResize:d=typeof ResizeObserver=="function",layoutShift:u=typeof IntersectionObserver=="function",animationFrame:h=!1}=o,m=n6(t),y=c||A?[...m?ss(m):[],...ss(a)]:[];y.forEach(_=>{c&&_.addEventListener("scroll",s,{passive:!0}),A&&_.addEventListener("resize",s)});const g=m&&u?z_(m,s):null;let F=-1,E=null;d&&(E=new ResizeObserver(_=>{let[k]=_;k&&k.target===m&&E&&(E.unobserve(a),cancelAnimationFrame(F),F=requestAnimationFrame(()=>{var w;(w=E)==null||w.observe(a)})),s()}),m&&!h&&E.observe(m),E.observe(a));let B,v=h?Pn(t):null;h&&x();function x(){const _=Pn(t);v&&!i5(v,_)&&s(),v=_,B=requestAnimationFrame(x)}return s(),()=>{var _;y.forEach(k=>{c&&k.removeEventListener("scroll",s),A&&k.removeEventListener("resize",s)}),g==null||g(),(_=E)==null||_.disconnect(),E=null,h&&cancelAnimationFrame(B)}}const U_=l_,j_=d_,V_=i_,G_=f_,q_=c_,ym=o_,H_=u_,Y_=(t,a,s)=>{const o=new Map,c={platform:L_,...s},A={...c.platform,_c:o};return s_(t,a,{...c,platform:A})};var W_=typeof document<"u",K_=function(){},ai=W_?b.useLayoutEffect:K_;function hi(t,a){if(t===a)return!0;if(typeof t!=typeof a)return!1;if(typeof t=="function"&&t.toString()===a.toString())return!0;let s,o,c;if(t&&a&&typeof t=="object"){if(Array.isArray(t)){if(s=t.length,s!==a.length)return!1;for(o=s;o--!==0;)if(!hi(t[o],a[o]))return!1;return!0}if(c=Object.keys(t),s=c.length,s!==Object.keys(a).length)return!1;for(o=s;o--!==0;)if(!{}.hasOwnProperty.call(a,c[o]))return!1;for(o=s;o--!==0;){const A=c[o];if(!(A==="_owner"&&t.$$typeof)&&!hi(t[A],a[A]))return!1}return!0}return t!==t&&a!==a}function c5(t){return typeof window>"u"?1:(t.ownerDocument.defaultView||window).devicePixelRatio||1}function bm(t,a){const s=c5(t);return Math.round(a*s)/s}function vl(t){const a=b.useRef(t);return ai(()=>{a.current=t}),a}function A5(t){t===void 0&&(t={});const{placement:a="bottom",strategy:s="absolute",middleware:o=[],platform:c,elements:{reference:A,floating:d}={},transform:u=!0,whileElementsMounted:h,open:m}=t,[y,g]=b.useState({x:0,y:0,strategy:s,placement:a,middlewareData:{},isPositioned:!1}),[F,E]=b.useState(o);hi(F,o)||E(o);const[B,v]=b.useState(null),[x,_]=b.useState(null),k=b.useCallback($=>{$!==T.current&&(T.current=$,v($))},[]),w=b.useCallback($=>{$!==L.current&&(L.current=$,_($))},[]),O=A||B,R=d||x,T=b.useRef(null),L=b.useRef(null),j=b.useRef(y),q=h!=null,r0=vl(h),d0=vl(c),i0=vl(m),A0=b.useCallback(()=>{if(!T.current||!L.current)return;const $={placement:a,strategy:s,middleware:F};d0.current&&($.platform=d0.current),Y_(T.current,L.current,$).then(Z=>{const P={...Z,isPositioned:i0.current!==!1};W.current&&!hi(j.current,P)&&(j.current=P,wd.flushSync(()=>{g(P)}))})},[F,a,s,d0,i0]);ai(()=>{m===!1&&j.current.isPositioned&&(j.current.isPositioned=!1,g($=>({...$,isPositioned:!1})))},[m]);const W=b.useRef(!1);ai(()=>(W.current=!0,()=>{W.current=!1}),[]),ai(()=>{if(O&&(T.current=O),R&&(L.current=R),O&&R){if(r0.current)return r0.current(O,R,A0);A0()}},[O,R,A0,r0,q]);const u0=b.useMemo(()=>({reference:T,floating:L,setReference:k,setFloating:w}),[k,w]),z=b.useMemo(()=>({reference:O,floating:R}),[O,R]),Y=b.useMemo(()=>{const $={position:s,left:0,top:0};if(!z.floating)return $;const Z=bm(z.floating,y.x),P=bm(z.floating,y.y);return u?{...$,transform:"translate("+Z+"px, "+P+"px)",...c5(z.floating)>=1.5&&{willChange:"transform"}}:{position:s,left:Z,top:P}},[s,u,z.floating,y.x,y.y]);return b.useMemo(()=>({...y,update:A0,refs:u0,elements:z,floatingStyles:Y}),[y,A0,u0,z,Y])}const X_=t=>{function a(s){return{}.hasOwnProperty.call(s,"current")}return{name:"arrow",options:t,fn(s){const{element:o,padding:c}=typeof t=="function"?t(s):t;return o&&a(o)?o.current!=null?ym({element:o.current,padding:c}).fn(s):{}:o?ym({element:o,padding:c}).fn(s):{}}}},l5=(t,a)=>({...U_(t),options:[t,a]}),d5=(t,a)=>({...j_(t),options:[t,a]}),J_=(t,a)=>({...H_(t),options:[t,a]}),Z_=(t,a)=>({...V_(t),options:[t,a]}),$_=(t,a)=>({...G_(t),options:[t,a]}),Q_=(t,a)=>({...q_(t),options:[t,a]}),u5=(t,a)=>({...X_(t),options:[t,a]});var ew="Arrow",f5=b.forwardRef((t,a)=>{const{children:s,width:o=10,height:c=5,...A}=t;return C.jsx(T0.svg,{...A,ref:a,width:o,height:c,viewBox:"0 0 30 10",preserveAspectRatio:"none",children:t.asChild?s:C.jsx("polygon",{points:"0,0 30,0 15,10"})})});f5.displayName=ew;var tw=f5,r6="Popper",[p5,Li]=ze(r6),[nw,m5]=p5(r6),h5=t=>{const{__scopePopper:a,children:s}=t,[o,c]=b.useState(null);return C.jsx(nw,{scope:a,anchor:o,onAnchorChange:c,children:s})};h5.displayName=r6;var g5="PopperAnchor",C5=b.forwardRef((t,a)=>{const{__scopePopper:s,virtualRef:o,...c}=t,A=m5(g5,s),d=b.useRef(null),u=r2(a,d);return b.useEffect(()=>{A.onAnchorChange((o==null?void 0:o.current)||d.current)}),o?null:C.jsx(T0.div,{...c,ref:u})});C5.displayName=g5;var s6="PopperContent",[aw,rw]=p5(s6),y5=b.forwardRef((t,a)=>{var K0,x0,R0,G0,u2,R2;const{__scopePopper:s,side:o="bottom",sideOffset:c=0,align:A="center",alignOffset:d=0,arrowPadding:u=0,avoidCollisions:h=!0,collisionBoundary:m=[],collisionPadding:y=0,sticky:g="partial",hideWhenDetached:F=!1,updatePositionStrategy:E="optimized",onPlaced:B,...v}=t,x=m5(s6,s),[_,k]=b.useState(null),w=r2(a,Se=>k(Se)),[O,R]=b.useState(null),T=W8(O),L=(T==null?void 0:T.width)??0,j=(T==null?void 0:T.height)??0,q=o+(A!=="center"?"-"+A:""),r0=typeof y=="number"?y:{top:0,right:0,bottom:0,left:0,...y},d0=Array.isArray(m)?m:[m],i0=d0.length>0,A0={padding:r0,boundary:d0.filter(ow),altBoundary:i0},{refs:W,floatingStyles:u0,placement:z,isPositioned:Y,middlewareData:$}=A5({strategy:"fixed",placement:q,whileElementsMounted:(...Se)=>M_(...Se,{animationFrame:E==="always"}),elements:{reference:x.anchor},middleware:[l5({mainAxis:c+j,alignmentAxis:d}),h&&d5({mainAxis:!0,crossAxis:!1,limiter:g==="partial"?J_():void 0,...A0}),h&&Z_({...A0}),$_({...A0,apply:({elements:Se,rects:q2,availableWidth:Ga,availableHeight:qa})=>{const{width:M2,height:Ha}=q2.reference,tt=Se.floating.style;tt.setProperty("--radix-popper-available-width",`${Ga}px`),tt.setProperty("--radix-popper-available-height",`${qa}px`),tt.setProperty("--radix-popper-anchor-width",`${M2}px`),tt.setProperty("--radix-popper-anchor-height",`${Ha}px`)}}),O&&u5({element:O,padding:u}),iw({arrowWidth:L,arrowHeight:j}),F&&Q_({strategy:"referenceHidden",...A0})]}),[Z,P]=E5(z),Q=L2(B);De(()=>{Y&&(Q==null||Q())},[Y,Q]);const e0=(K0=$.arrow)==null?void 0:K0.x,a0=(x0=$.arrow)==null?void 0:x0.y,f0=((R0=$.arrow)==null?void 0:R0.centerOffset)!==0,[B0,g0]=b.useState();return De(()=>{_&&g0(window.getComputedStyle(_).zIndex)},[_]),C.jsx("div",{ref:W.setFloating,"data-radix-popper-content-wrapper":"",style:{...u0,transform:Y?u0.transform:"translate(0, -200%)",minWidth:"max-content",zIndex:B0,"--radix-popper-transform-origin":[(G0=$.transformOrigin)==null?void 0:G0.x,(u2=$.transformOrigin)==null?void 0:u2.y].join(" "),...((R2=$.hide)==null?void 0:R2.referenceHidden)&&{visibility:"hidden",pointerEvents:"none"}},dir:t.dir,children:C.jsx(aw,{scope:s,placedSide:Z,onArrowChange:R,arrowX:e0,arrowY:a0,shouldHideArrow:f0,children:C.jsx(T0.div,{"data-side":Z,"data-align":P,...v,ref:w,style:{...v.style,animation:Y?void 0:"none"}})})})});y5.displayName=s6;var b5="PopperArrow",sw={top:"bottom",right:"left",bottom:"top",left:"right"},F5=b.forwardRef(function(a,s){const{__scopePopper:o,...c}=a,A=rw(b5,o),d=sw[A.placedSide];return C.jsx("span",{ref:A.onArrowChange,style:{position:"absolute",left:A.arrowX,top:A.arrowY,[d]:0,transformOrigin:{top:"",right:"0 0",bottom:"center 0",left:"100% 0"}[A.placedSide],transform:{top:"translateY(100%)",right:"translateY(50%) rotate(90deg) translateX(-50%)",bottom:"rotate(180deg)",left:"translateY(50%) rotate(-90deg) translateX(50%)"}[A.placedSide],visibility:A.shouldHideArrow?"hidden":void 0},children:C.jsx(tw,{...c,ref:s,style:{...c.style,display:"block"}})})});F5.displayName=b5;function ow(t){return t!==null}var iw=t=>({name:"transformOrigin",options:t,fn(a){var x,_,k;const{placement:s,rects:o,middlewareData:c}=a,d=((x=c.arrow)==null?void 0:x.centerOffset)!==0,u=d?0:t.arrowWidth,h=d?0:t.arrowHeight,[m,y]=E5(s),g={start:"0%",center:"50%",end:"100%"}[y],F=(((_=c.arrow)==null?void 0:_.x)??0)+u/2,E=(((k=c.arrow)==null?void 0:k.y)??0)+h/2;let B="",v="";return m==="bottom"?(B=d?g:`${F}px`,v=`${-h}px`):m==="top"?(B=d?g:`${F}px`,v=`${o.floating.height+h}px`):m==="right"?(B=`${-h}px`,v=d?g:`${E}px`):m==="left"&&(B=`${o.floating.width+h}px`,v=d?g:`${E}px`),{data:{x:B,y:v}}}});function E5(t){const[a,s="center"]=t.split("-");return[a,s]}var B5=h5,o6=C5,v5=y5,D5=F5,Dl="rovingFocusGroup.onEntryFocus",cw={bubbles:!1,cancelable:!0},ms="RovingFocusGroup",[sd,x5,Aw]=fs(ms),[lw,zi]=ze(ms,[Aw]),[dw,uw]=lw(ms),_5=b.forwardRef((t,a)=>C.jsx(sd.Provider,{scope:t.__scopeRovingFocusGroup,children:C.jsx(sd.Slot,{scope:t.__scopeRovingFocusGroup,children:C.jsx(fw,{...t,ref:a})})}));_5.displayName=ms;var fw=b.forwardRef((t,a)=>{const{__scopeRovingFocusGroup:s,orientation:o,loop:c=!1,dir:A,currentTabStopId:d,defaultCurrentTabStopId:u,onCurrentTabStopIdChange:h,onEntryFocus:m,preventScrollOnEntryFocus:y=!1,...g}=t,F=b.useRef(null),E=r2(a,F),B=us(A),[v,x]=Qe({prop:d,defaultProp:u??null,onChange:h,caller:ms}),[_,k]=b.useState(!1),w=L2(m),O=x5(s),R=b.useRef(!1),[T,L]=b.useState(0);return b.useEffect(()=>{const j=F.current;if(j)return j.addEventListener(Dl,w),()=>j.removeEventListener(Dl,w)},[w]),C.jsx(dw,{scope:s,orientation:o,dir:B,loop:c,currentTabStopId:v,onItemFocus:b.useCallback(j=>x(j),[x]),onItemShiftTab:b.useCallback(()=>k(!0),[]),onFocusableItemAdd:b.useCallback(()=>L(j=>j+1),[]),onFocusableItemRemove:b.useCallback(()=>L(j=>j-1),[]),children:C.jsx(T0.div,{tabIndex:_||T===0?-1:0,"data-orientation":o,...g,ref:E,style:{outline:"none",...t.style},onMouseDown:h0(t.onMouseDown,()=>{R.current=!0}),onFocus:h0(t.onFocus,j=>{const q=!R.current;if(j.target===j.currentTarget&&q&&!_){const r0=new CustomEvent(Dl,cw);if(j.currentTarget.dispatchEvent(r0),!r0.defaultPrevented){const d0=O().filter(z=>z.focusable),i0=d0.find(z=>z.active),A0=d0.find(z=>z.id===v),u0=[i0,A0,...d0].filter(Boolean).map(z=>z.ref.current);k5(u0,y)}}R.current=!1}),onBlur:h0(t.onBlur,()=>k(!1))})})}),w5="RovingFocusGroupItem",S5=b.forwardRef((t,a)=>{const{__scopeRovingFocusGroup:s,focusable:o=!0,active:c=!1,tabStopId:A,children:d,...u}=t,h=Ee(),m=A||h,y=uw(w5,s),g=y.currentTabStopId===m,F=x5(s),{onFocusableItemAdd:E,onFocusableItemRemove:B,currentTabStopId:v}=y;return b.useEffect(()=>{if(o)return E(),()=>B()},[o,E,B]),C.jsx(sd.ItemSlot,{scope:s,id:m,focusable:o,active:c,children:C.jsx(T0.span,{tabIndex:g?0:-1,"data-orientation":y.orientation,...u,ref:a,onMouseDown:h0(t.onMouseDown,x=>{o?y.onItemFocus(m):x.preventDefault()}),onFocus:h0(t.onFocus,()=>y.onItemFocus(m)),onKeyDown:h0(t.onKeyDown,x=>{if(x.key==="Tab"&&x.shiftKey){y.onItemShiftTab();return}if(x.target!==x.currentTarget)return;const _=hw(x,y.orientation,y.dir);if(_!==void 0){if(x.metaKey||x.ctrlKey||x.altKey||x.shiftKey)return;x.preventDefault();let w=F().filter(O=>O.focusable).map(O=>O.ref.current);if(_==="last")w.reverse();else if(_==="prev"||_==="next"){_==="prev"&&w.reverse();const O=w.indexOf(x.currentTarget);w=y.loop?gw(w,O+1):w.slice(O+1)}setTimeout(()=>k5(w))}}),children:typeof d=="function"?d({isCurrentTabStop:g,hasTabStop:v!=null}):d})})});S5.displayName=w5;var pw={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function mw(t,a){return a!=="rtl"?t:t==="ArrowLeft"?"ArrowRight":t==="ArrowRight"?"ArrowLeft":t}function hw(t,a,s){const o=mw(t.key,s);if(!(a==="vertical"&&["ArrowLeft","ArrowRight"].includes(o))&&!(a==="horizontal"&&["ArrowUp","ArrowDown"].includes(o)))return pw[o]}function k5(t,a=!1){const s=document.activeElement;for(const o of t)if(o===s||(o.focus({preventScroll:a}),document.activeElement!==s))return}function gw(t,a){return t.map((s,o)=>t[(a+o)%t.length])}var T5=_5,O5=S5,od=["Enter"," "],Cw=["ArrowDown","PageUp","Home"],R5=["ArrowUp","PageDown","End"],yw=[...Cw,...R5],bw={ltr:[...od,"ArrowRight"],rtl:[...od,"ArrowLeft"]},Fw={ltr:["ArrowLeft"],rtl:["ArrowRight"]},hs="Menu",[os,Ew,Bw]=fs(hs),[Mn,P5]=ze(hs,[Bw,Li,zi]),Mi=Li(),I5=zi(),[vw,Un]=Mn(hs),[Dw,gs]=Mn(hs),N5=t=>{const{__scopeMenu:a,open:s=!1,children:o,dir:c,onOpenChange:A,modal:d=!0}=t,u=Mi(a),[h,m]=b.useState(null),y=b.useRef(!1),g=L2(A),F=us(c);return b.useEffect(()=>{const E=()=>{y.current=!0,document.addEventListener("pointerdown",B,{capture:!0,once:!0}),document.addEventListener("pointermove",B,{capture:!0,once:!0})},B=()=>y.current=!1;return document.addEventListener("keydown",E,{capture:!0}),()=>{document.removeEventListener("keydown",E,{capture:!0}),document.removeEventListener("pointerdown",B,{capture:!0}),document.removeEventListener("pointermove",B,{capture:!0})}},[]),C.jsx(B5,{...u,children:C.jsx(vw,{scope:a,open:s,onOpenChange:g,content:h,onContentChange:m,children:C.jsx(Dw,{scope:a,onClose:b.useCallback(()=>g(!1),[g]),isUsingKeyboardRef:y,dir:F,modal:d,children:o})})})};N5.displayName=hs;var xw="MenuAnchor",i6=b.forwardRef((t,a)=>{const{__scopeMenu:s,...o}=t,c=Mi(s);return C.jsx(o6,{...c,...o,ref:a})});i6.displayName=xw;var c6="MenuPortal",[_w,L5]=Mn(c6,{forceMount:void 0}),z5=t=>{const{__scopeMenu:a,forceMount:s,children:o,container:c}=t,A=Un(c6,a);return C.jsx(_w,{scope:a,forceMount:s,children:C.jsx(z2,{present:s||A.open,children:C.jsx(xi,{asChild:!0,container:c,children:o})})})};z5.displayName=c6;var Be="MenuContent",[ww,A6]=Mn(Be),M5=b.forwardRef((t,a)=>{const s=L5(Be,t.__scopeMenu),{forceMount:o=s.forceMount,...c}=t,A=Un(Be,t.__scopeMenu),d=gs(Be,t.__scopeMenu);return C.jsx(os.Provider,{scope:t.__scopeMenu,children:C.jsx(z2,{present:o||A.open,children:C.jsx(os.Slot,{scope:t.__scopeMenu,children:d.modal?C.jsx(Sw,{...c,ref:a}):C.jsx(kw,{...c,ref:a})})})})}),Sw=b.forwardRef((t,a)=>{const s=Un(Be,t.__scopeMenu),o=b.useRef(null),c=r2(a,o);return b.useEffect(()=>{const A=o.current;if(A)return kd(A)},[]),C.jsx(l6,{...t,ref:c,trapFocus:s.open,disableOutsidePointerEvents:s.open,disableOutsideScroll:!0,onFocusOutside:h0(t.onFocusOutside,A=>A.preventDefault(),{checkForDefaultPrevented:!1}),onDismiss:()=>s.onOpenChange(!1)})}),kw=b.forwardRef((t,a)=>{const s=Un(Be,t.__scopeMenu);return C.jsx(l6,{...t,ref:a,trapFocus:!1,disableOutsidePointerEvents:!1,disableOutsideScroll:!1,onDismiss:()=>s.onOpenChange(!1)})}),Tw=Ra("MenuContent.ScrollLock"),l6=b.forwardRef((t,a)=>{const{__scopeMenu:s,loop:o=!1,trapFocus:c,onOpenAutoFocus:A,onCloseAutoFocus:d,disableOutsidePointerEvents:u,onEntryFocus:h,onEscapeKeyDown:m,onPointerDownOutside:y,onFocusOutside:g,onInteractOutside:F,onDismiss:E,disableOutsideScroll:B,...v}=t,x=Un(Be,s),_=gs(Be,s),k=Mi(s),w=I5(s),O=Ew(s),[R,T]=b.useState(null),L=b.useRef(null),j=r2(a,L,x.onContentChange),q=b.useRef(0),r0=b.useRef(""),d0=b.useRef(0),i0=b.useRef(null),A0=b.useRef("right"),W=b.useRef(0),u0=B?wi:b.Fragment,z=B?{as:Tw,allowPinchZoom:!0}:void 0,Y=Z=>{var K0,x0;const P=r0.current+Z,Q=O().filter(R0=>!R0.disabled),e0=document.activeElement,a0=(K0=Q.find(R0=>R0.ref.current===e0))==null?void 0:K0.textValue,f0=Q.map(R0=>R0.textValue),B0=Gw(f0,P,a0),g0=(x0=Q.find(R0=>R0.textValue===B0))==null?void 0:x0.ref.current;(function R0(G0){r0.current=G0,window.clearTimeout(q.current),G0!==""&&(q.current=window.setTimeout(()=>R0(""),1e3))})(P),g0&&setTimeout(()=>g0.focus())};b.useEffect(()=>()=>window.clearTimeout(q.current),[]),Sd();const $=b.useCallback(Z=>{var Q,e0;return A0.current===((Q=i0.current)==null?void 0:Q.side)&&Hw(Z,(e0=i0.current)==null?void 0:e0.area)},[]);return C.jsx(ww,{scope:s,searchRef:r0,onItemEnter:b.useCallback(Z=>{$(Z)&&Z.preventDefault()},[$]),onItemLeave:b.useCallback(Z=>{var P;$(Z)||((P=L.current)==null||P.focus(),T(null))},[$]),onTriggerLeave:b.useCallback(Z=>{$(Z)&&Z.preventDefault()},[$]),pointerGraceTimerRef:d0,onPointerGraceIntentChange:b.useCallback(Z=>{i0.current=Z},[]),children:C.jsx(u0,{...z,children:C.jsx(Di,{asChild:!0,trapped:c,onMountAutoFocus:h0(A,Z=>{var P;Z.preventDefault(),(P=L.current)==null||P.focus({preventScroll:!0})}),onUnmountAutoFocus:d,children:C.jsx(ds,{asChild:!0,disableOutsidePointerEvents:u,onEscapeKeyDown:m,onPointerDownOutside:y,onFocusOutside:g,onInteractOutside:F,onDismiss:E,children:C.jsx(T5,{asChild:!0,...w,dir:_.dir,orientation:"vertical",loop:o,currentTabStopId:R,onCurrentTabStopIdChange:T,onEntryFocus:h0(h,Z=>{_.isUsingKeyboardRef.current||Z.preventDefault()}),preventScrollOnEntryFocus:!0,children:C.jsx(v5,{role:"menu","aria-orientation":"vertical","data-state":tC(x.open),"data-radix-menu-content":"",dir:_.dir,...k,...v,ref:j,style:{outline:"none",...v.style},onKeyDown:h0(v.onKeyDown,Z=>{const Q=Z.target.closest("[data-radix-menu-content]")===Z.currentTarget,e0=Z.ctrlKey||Z.altKey||Z.metaKey,a0=Z.key.length===1;Q&&(Z.key==="Tab"&&Z.preventDefault(),!e0&&a0&&Y(Z.key));const f0=L.current;if(Z.target!==f0||!yw.includes(Z.key))return;Z.preventDefault();const g0=O().filter(K0=>!K0.disabled).map(K0=>K0.ref.current);R5.includes(Z.key)&&g0.reverse(),jw(g0)}),onBlur:h0(t.onBlur,Z=>{Z.currentTarget.contains(Z.target)||(window.clearTimeout(q.current),r0.current="")}),onPointerMove:h0(t.onPointerMove,is(Z=>{const P=Z.target,Q=W.current!==Z.clientX;if(Z.currentTarget.contains(P)&&Q){const e0=Z.clientX>W.current?"right":"left";A0.current=e0,W.current=Z.clientX}}))})})})})})})});M5.displayName=Be;var Ow="MenuGroup",d6=b.forwardRef((t,a)=>{const{__scopeMenu:s,...o}=t;return C.jsx(T0.div,{role:"group",...o,ref:a})});d6.displayName=Ow;var Rw="MenuLabel",U5=b.forwardRef((t,a)=>{const{__scopeMenu:s,...o}=t;return C.jsx(T0.div,{...o,ref:a})});U5.displayName=Rw;var gi="MenuItem",Fm="menu.itemSelect",Ui=b.forwardRef((t,a)=>{const{disabled:s=!1,onSelect:o,...c}=t,A=b.useRef(null),d=gs(gi,t.__scopeMenu),u=A6(gi,t.__scopeMenu),h=r2(a,A),m=b.useRef(!1),y=()=>{const g=A.current;if(!s&&g){const F=new CustomEvent(Fm,{bubbles:!0,cancelable:!0});g.addEventListener(Fm,E=>o==null?void 0:o(E),{once:!0}),ii(g,F),F.defaultPrevented?m.current=!1:d.onClose()}};return C.jsx(j5,{...c,ref:h,disabled:s,onClick:h0(t.onClick,y),onPointerDown:g=>{var F;(F=t.onPointerDown)==null||F.call(t,g),m.current=!0},onPointerUp:h0(t.onPointerUp,g=>{var F;m.current||(F=g.currentTarget)==null||F.click()}),onKeyDown:h0(t.onKeyDown,g=>{const F=u.searchRef.current!=="";s||F&&g.key===" "||od.includes(g.key)&&(g.currentTarget.click(),g.preventDefault())})})});Ui.displayName=gi;var j5=b.forwardRef((t,a)=>{const{__scopeMenu:s,disabled:o=!1,textValue:c,...A}=t,d=A6(gi,s),u=I5(s),h=b.useRef(null),m=r2(a,h),[y,g]=b.useState(!1),[F,E]=b.useState("");return b.useEffect(()=>{const B=h.current;B&&E((B.textContent??"").trim())},[A.children]),C.jsx(os.ItemSlot,{scope:s,disabled:o,textValue:c??F,children:C.jsx(O5,{asChild:!0,...u,focusable:!o,children:C.jsx(T0.div,{role:"menuitem","data-highlighted":y?"":void 0,"aria-disabled":o||void 0,"data-disabled":o?"":void 0,...A,ref:m,onPointerMove:h0(t.onPointerMove,is(B=>{o?d.onItemLeave(B):(d.onItemEnter(B),B.defaultPrevented||B.currentTarget.focus({preventScroll:!0}))})),onPointerLeave:h0(t.onPointerLeave,is(B=>d.onItemLeave(B))),onFocus:h0(t.onFocus,()=>g(!0)),onBlur:h0(t.onBlur,()=>g(!1))})})})}),Pw="MenuCheckboxItem",V5=b.forwardRef((t,a)=>{const{checked:s=!1,onCheckedChange:o,...c}=t;return C.jsx(W5,{scope:t.__scopeMenu,checked:s,children:C.jsx(Ui,{role:"menuitemcheckbox","aria-checked":Ci(s)?"mixed":s,...c,ref:a,"data-state":f6(s),onSelect:h0(c.onSelect,()=>o==null?void 0:o(Ci(s)?!0:!s),{checkForDefaultPrevented:!1})})})});V5.displayName=Pw;var G5="MenuRadioGroup",[Iw,Nw]=Mn(G5,{value:void 0,onValueChange:()=>{}}),q5=b.forwardRef((t,a)=>{const{value:s,onValueChange:o,...c}=t,A=L2(o);return C.jsx(Iw,{scope:t.__scopeMenu,value:s,onValueChange:A,children:C.jsx(d6,{...c,ref:a})})});q5.displayName=G5;var H5="MenuRadioItem",Y5=b.forwardRef((t,a)=>{const{value:s,...o}=t,c=Nw(H5,t.__scopeMenu),A=s===c.value;return C.jsx(W5,{scope:t.__scopeMenu,checked:A,children:C.jsx(Ui,{role:"menuitemradio","aria-checked":A,...o,ref:a,"data-state":f6(A),onSelect:h0(o.onSelect,()=>{var d;return(d=c.onValueChange)==null?void 0:d.call(c,s)},{checkForDefaultPrevented:!1})})})});Y5.displayName=H5;var u6="MenuItemIndicator",[W5,Lw]=Mn(u6,{checked:!1}),K5=b.forwardRef((t,a)=>{const{__scopeMenu:s,forceMount:o,...c}=t,A=Lw(u6,s);return C.jsx(z2,{present:o||Ci(A.checked)||A.checked===!0,children:C.jsx(T0.span,{...c,ref:a,"data-state":f6(A.checked)})})});K5.displayName=u6;var zw="MenuSeparator",X5=b.forwardRef((t,a)=>{const{__scopeMenu:s,...o}=t;return C.jsx(T0.div,{role:"separator","aria-orientation":"horizontal",...o,ref:a})});X5.displayName=zw;var Mw="MenuArrow",J5=b.forwardRef((t,a)=>{const{__scopeMenu:s,...o}=t,c=Mi(s);return C.jsx(D5,{...c,...o,ref:a})});J5.displayName=Mw;var Uw="MenuSub",[Yk,Z5]=Mn(Uw),$r="MenuSubTrigger",$5=b.forwardRef((t,a)=>{const s=Un($r,t.__scopeMenu),o=gs($r,t.__scopeMenu),c=Z5($r,t.__scopeMenu),A=A6($r,t.__scopeMenu),d=b.useRef(null),{pointerGraceTimerRef:u,onPointerGraceIntentChange:h}=A,m={__scopeMenu:t.__scopeMenu},y=b.useCallback(()=>{d.current&&window.clearTimeout(d.current),d.current=null},[]);return b.useEffect(()=>y,[y]),b.useEffect(()=>{const g=u.current;return()=>{window.clearTimeout(g),h(null)}},[u,h]),C.jsx(i6,{asChild:!0,...m,children:C.jsx(j5,{id:c.triggerId,"aria-haspopup":"menu","aria-expanded":s.open,"aria-controls":c.contentId,"data-state":tC(s.open),...t,ref:ls(a,c.onTriggerChange),onClick:g=>{var F;(F=t.onClick)==null||F.call(t,g),!(t.disabled||g.defaultPrevented)&&(g.currentTarget.focus(),s.open||s.onOpenChange(!0))},onPointerMove:h0(t.onPointerMove,is(g=>{A.onItemEnter(g),!g.defaultPrevented&&!t.disabled&&!s.open&&!d.current&&(A.onPointerGraceIntentChange(null),d.current=window.setTimeout(()=>{s.onOpenChange(!0),y()},100))})),onPointerLeave:h0(t.onPointerLeave,is(g=>{var E,B;y();const F=(E=s.content)==null?void 0:E.getBoundingClientRect();if(F){const v=(B=s.content)==null?void 0:B.dataset.side,x=v==="right",_=x?-5:5,k=F[x?"left":"right"],w=F[x?"right":"left"];A.onPointerGraceIntentChange({area:[{x:g.clientX+_,y:g.clientY},{x:k,y:F.top},{x:w,y:F.top},{x:w,y:F.bottom},{x:k,y:F.bottom}],side:v}),window.clearTimeout(u.current),u.current=window.setTimeout(()=>A.onPointerGraceIntentChange(null),300)}else{if(A.onTriggerLeave(g),g.defaultPrevented)return;A.onPointerGraceIntentChange(null)}})),onKeyDown:h0(t.onKeyDown,g=>{var E;const F=A.searchRef.current!=="";t.disabled||F&&g.key===" "||bw[o.dir].includes(g.key)&&(s.onOpenChange(!0),(E=s.content)==null||E.focus(),g.preventDefault())})})})});$5.displayName=$r;var Q5="MenuSubContent",eC=b.forwardRef((t,a)=>{const s=L5(Be,t.__scopeMenu),{forceMount:o=s.forceMount,...c}=t,A=Un(Be,t.__scopeMenu),d=gs(Be,t.__scopeMenu),u=Z5(Q5,t.__scopeMenu),h=b.useRef(null),m=r2(a,h);return C.jsx(os.Provider,{scope:t.__scopeMenu,children:C.jsx(z2,{present:o||A.open,children:C.jsx(os.Slot,{scope:t.__scopeMenu,children:C.jsx(l6,{id:u.contentId,"aria-labelledby":u.triggerId,...c,ref:m,align:"start",side:d.dir==="rtl"?"left":"right",disableOutsidePointerEvents:!1,disableOutsideScroll:!1,trapFocus:!1,onOpenAutoFocus:y=>{var g;d.isUsingKeyboardRef.current&&((g=h.current)==null||g.focus()),y.preventDefault()},onCloseAutoFocus:y=>y.preventDefault(),onFocusOutside:h0(t.onFocusOutside,y=>{y.target!==u.trigger&&A.onOpenChange(!1)}),onEscapeKeyDown:h0(t.onEscapeKeyDown,y=>{d.onClose(),y.preventDefault()}),onKeyDown:h0(t.onKeyDown,y=>{var E;const g=y.currentTarget.contains(y.target),F=Fw[d.dir].includes(y.key);g&&F&&(A.onOpenChange(!1),(E=u.trigger)==null||E.focus(),y.preventDefault())})})})})})});eC.displayName=Q5;function tC(t){return t?"open":"closed"}function Ci(t){return t==="indeterminate"}function f6(t){return Ci(t)?"indeterminate":t?"checked":"unchecked"}function jw(t){const a=document.activeElement;for(const s of t)if(s===a||(s.focus(),document.activeElement!==a))return}function Vw(t,a){return t.map((s,o)=>t[(a+o)%t.length])}function Gw(t,a,s){const c=a.length>1&&Array.from(a).every(m=>m===a[0])?a[0]:a,A=s?t.indexOf(s):-1;let d=Vw(t,Math.max(A,0));c.length===1&&(d=d.filter(m=>m!==s));const h=d.find(m=>m.toLowerCase().startsWith(c.toLowerCase()));return h!==s?h:void 0}function qw(t,a){const{x:s,y:o}=t;let c=!1;for(let A=0,d=a.length-1;A<a.length;d=A++){const u=a[A],h=a[d],m=u.x,y=u.y,g=h.x,F=h.y;y>o!=F>o&&s<(g-m)*(o-y)/(F-y)+m&&(c=!c)}return c}function Hw(t,a){if(!a)return!1;const s={x:t.clientX,y:t.clientY};return qw(s,a)}function is(t){return a=>a.pointerType==="mouse"?t(a):void 0}var Yw=N5,Ww=i6,Kw=z5,Xw=M5,Jw=d6,Zw=U5,$w=Ui,Qw=V5,e1=q5,t1=Y5,n1=K5,a1=X5,r1=J5,s1=$5,o1=eC,ji="DropdownMenu",[i1,Wk]=ze(ji,[P5]),G2=P5(),[c1,nC]=i1(ji),aC=t=>{const{__scopeDropdownMenu:a,children:s,dir:o,open:c,defaultOpen:A,onOpenChange:d,modal:u=!0}=t,h=G2(a),m=b.useRef(null),[y,g]=Qe({prop:c,defaultProp:A??!1,onChange:d,caller:ji});return C.jsx(c1,{scope:a,triggerId:Ee(),triggerRef:m,contentId:Ee(),open:y,onOpenChange:g,onOpenToggle:b.useCallback(()=>g(F=>!F),[g]),modal:u,children:C.jsx(Yw,{...h,open:y,onOpenChange:g,dir:o,modal:u,children:s})})};aC.displayName=ji;var rC="DropdownMenuTrigger",sC=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,disabled:o=!1,...c}=t,A=nC(rC,s),d=G2(s);return C.jsx(Ww,{asChild:!0,...d,children:C.jsx(T0.button,{type:"button",id:A.triggerId,"aria-haspopup":"menu","aria-expanded":A.open,"aria-controls":A.open?A.contentId:void 0,"data-state":A.open?"open":"closed","data-disabled":o?"":void 0,disabled:o,...c,ref:ls(a,A.triggerRef),onPointerDown:h0(t.onPointerDown,u=>{!o&&u.button===0&&u.ctrlKey===!1&&(A.onOpenToggle(),A.open||u.preventDefault())}),onKeyDown:h0(t.onKeyDown,u=>{o||(["Enter"," "].includes(u.key)&&A.onOpenToggle(),u.key==="ArrowDown"&&A.onOpenChange(!0),["Enter"," ","ArrowDown"].includes(u.key)&&u.preventDefault())})})})});sC.displayName=rC;var A1="DropdownMenuPortal",oC=t=>{const{__scopeDropdownMenu:a,...s}=t,o=G2(a);return C.jsx(Kw,{...o,...s})};oC.displayName=A1;var iC="DropdownMenuContent",cC=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=nC(iC,s),A=G2(s),d=b.useRef(!1);return C.jsx(Xw,{id:c.contentId,"aria-labelledby":c.triggerId,...A,...o,ref:a,onCloseAutoFocus:h0(t.onCloseAutoFocus,u=>{var h;d.current||(h=c.triggerRef.current)==null||h.focus(),d.current=!1,u.preventDefault()}),onInteractOutside:h0(t.onInteractOutside,u=>{const h=u.detail.originalEvent,m=h.button===0&&h.ctrlKey===!0,y=h.button===2||m;(!c.modal||y)&&(d.current=!0)}),style:{...t.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});cC.displayName=iC;var l1="DropdownMenuGroup",d1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(Jw,{...c,...o,ref:a})});d1.displayName=l1;var u1="DropdownMenuLabel",f1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(Zw,{...c,...o,ref:a})});f1.displayName=u1;var p1="DropdownMenuItem",AC=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx($w,{...c,...o,ref:a})});AC.displayName=p1;var m1="DropdownMenuCheckboxItem",h1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(Qw,{...c,...o,ref:a})});h1.displayName=m1;var g1="DropdownMenuRadioGroup",C1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(e1,{...c,...o,ref:a})});C1.displayName=g1;var y1="DropdownMenuRadioItem",b1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(t1,{...c,...o,ref:a})});b1.displayName=y1;var F1="DropdownMenuItemIndicator",E1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(n1,{...c,...o,ref:a})});E1.displayName=F1;var B1="DropdownMenuSeparator",v1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(a1,{...c,...o,ref:a})});v1.displayName=B1;var D1="DropdownMenuArrow",x1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(r1,{...c,...o,ref:a})});x1.displayName=D1;var _1="DropdownMenuSubTrigger",w1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(s1,{...c,...o,ref:a})});w1.displayName=_1;var S1="DropdownMenuSubContent",k1=b.forwardRef((t,a)=>{const{__scopeDropdownMenu:s,...o}=t,c=G2(s);return C.jsx(o1,{...c,...o,ref:a,style:{...t.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});k1.displayName=S1;var T1=aC,O1=sC,R1=oC,P1=cC,I1=AC,Vi="Popover",[lC,Kk]=ze(Vi,[Li]),Cs=Li(),[N1,rn]=lC(Vi),dC=t=>{const{__scopePopover:a,children:s,open:o,defaultOpen:c,onOpenChange:A,modal:d=!1}=t,u=Cs(a),h=b.useRef(null),[m,y]=b.useState(!1),[g,F]=Qe({prop:o,defaultProp:c??!1,onChange:A,caller:Vi});return C.jsx(B5,{...u,children:C.jsx(N1,{scope:a,contentId:Ee(),triggerRef:h,open:g,onOpenChange:F,onOpenToggle:b.useCallback(()=>F(E=>!E),[F]),hasCustomAnchor:m,onCustomAnchorAdd:b.useCallback(()=>y(!0),[]),onCustomAnchorRemove:b.useCallback(()=>y(!1),[]),modal:d,children:s})})};dC.displayName=Vi;var uC="PopoverAnchor",L1=b.forwardRef((t,a)=>{const{__scopePopover:s,...o}=t,c=rn(uC,s),A=Cs(s),{onCustomAnchorAdd:d,onCustomAnchorRemove:u}=c;return b.useEffect(()=>(d(),()=>u()),[d,u]),C.jsx(o6,{...A,...o,ref:a})});L1.displayName=uC;var fC="PopoverTrigger",pC=b.forwardRef((t,a)=>{const{__scopePopover:s,...o}=t,c=rn(fC,s),A=Cs(s),d=r2(a,c.triggerRef),u=C.jsx(T0.button,{type:"button","aria-haspopup":"dialog","aria-expanded":c.open,"aria-controls":c.contentId,"data-state":yC(c.open),...o,ref:d,onClick:h0(t.onClick,c.onOpenToggle)});return c.hasCustomAnchor?u:C.jsx(o6,{asChild:!0,...A,children:u})});pC.displayName=fC;var p6="PopoverPortal",[z1,M1]=lC(p6,{forceMount:void 0}),mC=t=>{const{__scopePopover:a,forceMount:s,children:o,container:c}=t,A=rn(p6,a);return C.jsx(z1,{scope:a,forceMount:s,children:C.jsx(z2,{present:s||A.open,children:C.jsx(xi,{asChild:!0,container:c,children:o})})})};mC.displayName=p6;var Na="PopoverContent",hC=b.forwardRef((t,a)=>{const s=M1(Na,t.__scopePopover),{forceMount:o=s.forceMount,...c}=t,A=rn(Na,t.__scopePopover);return C.jsx(z2,{present:o||A.open,children:A.modal?C.jsx(j1,{...c,ref:a}):C.jsx(V1,{...c,ref:a})})});hC.displayName=Na;var U1=Ra("PopoverContent.RemoveScroll"),j1=b.forwardRef((t,a)=>{const s=rn(Na,t.__scopePopover),o=b.useRef(null),c=r2(a,o),A=b.useRef(!1);return b.useEffect(()=>{const d=o.current;if(d)return kd(d)},[]),C.jsx(wi,{as:U1,allowPinchZoom:!0,children:C.jsx(gC,{...t,ref:c,trapFocus:s.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:h0(t.onCloseAutoFocus,d=>{var u;d.preventDefault(),A.current||(u=s.triggerRef.current)==null||u.focus()}),onPointerDownOutside:h0(t.onPointerDownOutside,d=>{const u=d.detail.originalEvent,h=u.button===0&&u.ctrlKey===!0,m=u.button===2||h;A.current=m},{checkForDefaultPrevented:!1}),onFocusOutside:h0(t.onFocusOutside,d=>d.preventDefault(),{checkForDefaultPrevented:!1})})})}),V1=b.forwardRef((t,a)=>{const s=rn(Na,t.__scopePopover),o=b.useRef(!1),c=b.useRef(!1);return C.jsx(gC,{...t,ref:a,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:A=>{var d,u;(d=t.onCloseAutoFocus)==null||d.call(t,A),A.defaultPrevented||(o.current||(u=s.triggerRef.current)==null||u.focus(),A.preventDefault()),o.current=!1,c.current=!1},onInteractOutside:A=>{var h,m;(h=t.onInteractOutside)==null||h.call(t,A),A.defaultPrevented||(o.current=!0,A.detail.originalEvent.type==="pointerdown"&&(c.current=!0));const d=A.target;((m=s.triggerRef.current)==null?void 0:m.contains(d))&&A.preventDefault(),A.detail.originalEvent.type==="focusin"&&c.current&&A.preventDefault()}})}),gC=b.forwardRef((t,a)=>{const{__scopePopover:s,trapFocus:o,onOpenAutoFocus:c,onCloseAutoFocus:A,disableOutsidePointerEvents:d,onEscapeKeyDown:u,onPointerDownOutside:h,onFocusOutside:m,onInteractOutside:y,...g}=t,F=rn(Na,s),E=Cs(s);return Sd(),C.jsx(Di,{asChild:!0,loop:!0,trapped:o,onMountAutoFocus:c,onUnmountAutoFocus:A,children:C.jsx(ds,{asChild:!0,disableOutsidePointerEvents:d,onInteractOutside:y,onEscapeKeyDown:u,onPointerDownOutside:h,onFocusOutside:m,onDismiss:()=>F.onOpenChange(!1),children:C.jsx(v5,{"data-state":yC(F.open),role:"dialog",id:F.contentId,...E,...g,ref:a,style:{...g.style,"--radix-popover-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-popover-content-available-width":"var(--radix-popper-available-width)","--radix-popover-content-available-height":"var(--radix-popper-available-height)","--radix-popover-trigger-width":"var(--radix-popper-anchor-width)","--radix-popover-trigger-height":"var(--radix-popper-anchor-height)"}})})})}),CC="PopoverClose",G1=b.forwardRef((t,a)=>{const{__scopePopover:s,...o}=t,c=rn(CC,s);return C.jsx(T0.button,{type:"button",...o,ref:a,onClick:h0(t.onClick,()=>c.onOpenChange(!1))})});G1.displayName=CC;var q1="PopoverArrow",H1=b.forwardRef((t,a)=>{const{__scopePopover:s,...o}=t,c=Cs(s);return C.jsx(D5,{...c,...o,ref:a})});H1.displayName=q1;function yC(t){return t?"open":"closed"}var Y1=dC,W1=pC,K1=mC,X1=hC,Gi="Tabs",[J1,Xk]=ze(Gi,[zi]),bC=zi(),[Z1,m6]=J1(Gi),FC=b.forwardRef((t,a)=>{const{__scopeTabs:s,value:o,onValueChange:c,defaultValue:A,orientation:d="horizontal",dir:u,activationMode:h="automatic",...m}=t,y=us(u),[g,F]=Qe({prop:o,onChange:c,defaultProp:A??"",caller:Gi});return C.jsx(Z1,{scope:s,baseId:Ee(),value:g,onValueChange:F,orientation:d,dir:y,activationMode:h,children:C.jsx(T0.div,{dir:y,"data-orientation":d,...m,ref:a})})});FC.displayName=Gi;var EC="TabsList",BC=b.forwardRef((t,a)=>{const{__scopeTabs:s,loop:o=!0,...c}=t,A=m6(EC,s),d=bC(s);return C.jsx(T5,{asChild:!0,...d,orientation:A.orientation,dir:A.dir,loop:o,children:C.jsx(T0.div,{role:"tablist","aria-orientation":A.orientation,...c,ref:a})})});BC.displayName=EC;var vC="TabsTrigger",DC=b.forwardRef((t,a)=>{const{__scopeTabs:s,value:o,disabled:c=!1,...A}=t,d=m6(vC,s),u=bC(s),h=wC(d.baseId,o),m=SC(d.baseId,o),y=o===d.value;return C.jsx(O5,{asChild:!0,...u,focusable:!c,active:y,children:C.jsx(T0.button,{type:"button",role:"tab","aria-selected":y,"aria-controls":m,"data-state":y?"active":"inactive","data-disabled":c?"":void 0,disabled:c,id:h,...A,ref:a,onMouseDown:h0(t.onMouseDown,g=>{!c&&g.button===0&&g.ctrlKey===!1?d.onValueChange(o):g.preventDefault()}),onKeyDown:h0(t.onKeyDown,g=>{[" ","Enter"].includes(g.key)&&d.onValueChange(o)}),onFocus:h0(t.onFocus,()=>{const g=d.activationMode!=="manual";!y&&!c&&g&&d.onValueChange(o)})})})});DC.displayName=vC;var xC="TabsContent",_C=b.forwardRef((t,a)=>{const{__scopeTabs:s,value:o,forceMount:c,children:A,...d}=t,u=m6(xC,s),h=wC(u.baseId,o),m=SC(u.baseId,o),y=o===u.value,g=b.useRef(y);return b.useEffect(()=>{const F=requestAnimationFrame(()=>g.current=!1);return()=>cancelAnimationFrame(F)},[]),C.jsx(z2,{present:c||y,children:({present:F})=>C.jsx(T0.div,{"data-state":y?"active":"inactive","data-orientation":u.orientation,role:"tabpanel","aria-labelledby":h,hidden:!F,id:m,tabIndex:0,...d,ref:a,style:{...t.style,animationDuration:g.current?"0s":void 0},children:F&&A})})});_C.displayName=xC;function wC(t,a){return`${t}-trigger-${a}`}function SC(t,a){return`${t}-content-${a}`}var $1=FC,Q1=BC,e4=DC,t4=_C,n4="vocs_AiCtaDropdown",Em="vocs_AiCtaDropdown_buttonLeft vocs_AiCtaDropdown_button vocs_Button_button",a4="vocs_AiCtaDropdown_buttonRight vocs_AiCtaDropdown_button vocs_Button_button",r4="vocs_AiCtaDropdown_dropdownMenuContent",s4="vocs_AiCtaDropdown_dropdownMenuItem",xl="vocs_Button_button",Jk="vocs_Button_button_accent";function kC(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Check"}),C.jsx("path",{d:"M7.49991 0.877045C3.84222 0.877045 0.877075 3.84219 0.877075 7.49988C0.877075 11.1575 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 3.84219 11.1576 0.877045 7.49991 0.877045ZM1.82708 7.49988C1.82708 4.36686 4.36689 1.82704 7.49991 1.82704C10.6329 1.82704 13.1727 4.36686 13.1727 7.49988C13.1727 10.6329 10.6329 13.1727 7.49991 13.1727C4.36689 13.1727 1.82708 10.6329 1.82708 7.49988ZM10.1589 5.53774C10.3178 5.31191 10.2636 5.00001 10.0378 4.84109C9.81194 4.68217 9.50004 4.73642 9.34112 4.96225L6.51977 8.97154L5.35681 7.78706C5.16334 7.59002 4.84677 7.58711 4.64973 7.78058C4.45268 7.97404 4.44978 8.29061 4.64325 8.48765L6.22658 10.1003C6.33054 10.2062 6.47617 10.2604 6.62407 10.2483C6.77197 10.2363 6.90686 10.1591 6.99226 10.0377L10.1589 5.53774Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function TC(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Chevron Down"}),C.jsx("path",{d:"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function OC(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Copy"}),C.jsx("path",{d:"M5 2V1H10V2H5ZM4.75 0C4.33579 0 4 0.335786 4 0.75V1H3.5C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H7V13H3.5C3.22386 13 3 12.7761 3 12.5V2.5C3 2.22386 3.22386 2 3.5 2H4V2.25C4 2.66421 4.33579 3 4.75 3H10.25C10.6642 3 11 2.66421 11 2.25V2H11.5C11.7761 2 12 2.22386 12 2.5V7H13V2.5C13 1.67157 12.3284 1 11.5 1H11V0.75C11 0.335786 10.6642 0 10.25 0H4.75ZM9 8.5C9 8.77614 8.77614 9 8.5 9C8.22386 9 8 8.77614 8 8.5C8 8.22386 8.22386 8 8.5 8C8.77614 8 9 8.22386 9 8.5ZM10.5 9C10.7761 9 11 8.77614 11 8.5C11 8.22386 10.7761 8 10.5 8C10.2239 8 10 8.22386 10 8.5C10 8.77614 10.2239 9 10.5 9ZM13 8.5C13 8.77614 12.7761 9 12.5 9C12.2239 9 12 8.77614 12 8.5C12 8.22386 12.2239 8 12.5 8C12.7761 8 13 8.22386 13 8.5ZM14.5 9C14.7761 9 15 8.77614 15 8.5C15 8.22386 14.7761 8 14.5 8C14.2239 8 14 8.22386 14 8.5C14 8.77614 14.2239 9 14.5 9ZM15 10.5C15 10.7761 14.7761 11 14.5 11C14.2239 11 14 10.7761 14 10.5C14 10.2239 14.2239 10 14.5 10C14.7761 10 15 10.2239 15 10.5ZM14.5 13C14.7761 13 15 12.7761 15 12.5C15 12.2239 14.7761 12 14.5 12C14.2239 12 14 12.2239 14 12.5C14 12.7761 14.2239 13 14.5 13ZM14.5 15C14.7761 15 15 14.7761 15 14.5C15 14.2239 14.7761 14 14.5 14C14.2239 14 14 14.2239 14 14.5C14 14.7761 14.2239 15 14.5 15ZM8.5 11C8.77614 11 9 10.7761 9 10.5C9 10.2239 8.77614 10 8.5 10C8.22386 10 8 10.2239 8 10.5C8 10.7761 8.22386 11 8.5 11ZM9 12.5C9 12.7761 8.77614 13 8.5 13C8.22386 13 8 12.7761 8 12.5C8 12.2239 8.22386 12 8.5 12C8.77614 12 9 12.2239 9 12.5ZM8.5 15C8.77614 15 9 14.7761 9 14.5C9 14.2239 8.77614 14 8.5 14C8.22386 14 8 14.2239 8 14.5C8 14.7761 8.22386 15 8.5 15ZM11 14.5C11 14.7761 10.7761 15 10.5 15C10.2239 15 10 14.7761 10 14.5C10 14.2239 10.2239 14 10.5 14C10.7761 14 11 14.2239 11 14.5ZM12.5 15C12.7761 15 13 14.7761 13 14.5C13 14.2239 12.7761 14 12.5 14C12.2239 14 12 14.2239 12 14.5C12 14.7761 12.2239 15 12.5 15Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function o4(){return C.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",children:[C.jsx("title",{children:"OpenAI"}),C.jsx("path",{fill:"currentColor",d:"M22.282 9.821a6 6 0 0 0-.516-4.91a6.05 6.05 0 0 0-6.51-2.9A6.065 6.065 0 0 0 4.981 4.18a6 6 0 0 0-3.998 2.9a6.05 6.05 0 0 0 .743 7.097a5.98 5.98 0 0 0 .51 4.911a6.05 6.05 0 0 0 6.515 2.9A6 6 0 0 0 13.26 24a6.06 6.06 0 0 0 5.772-4.206a6 6 0 0 0 3.997-2.9a6.06 6.06 0 0 0-.747-7.073M13.26 22.43a4.48 4.48 0 0 1-2.876-1.04l.141-.081l4.779-2.758a.8.8 0 0 0 .392-.681v-6.737l2.02 1.168a.07.07 0 0 1 .038.052v5.583a4.504 4.504 0 0 1-4.494 4.494M3.6 18.304a4.47 4.47 0 0 1-.535-3.014l.142.085l4.783 2.759a.77.77 0 0 0 .78 0l5.843-3.369v2.332a.08.08 0 0 1-.033.062L9.74 19.95a4.5 4.5 0 0 1-6.14-1.646M2.34 7.896a4.5 4.5 0 0 1 2.366-1.973V11.6a.77.77 0 0 0 .388.677l5.815 3.354l-2.02 1.168a.08.08 0 0 1-.071 0l-4.83-2.786A4.504 4.504 0 0 1 2.34 7.872zm16.597 3.855l-5.833-3.387L15.119 7.2a.08.08 0 0 1 .071 0l4.83 2.791a4.494 4.494 0 0 1-.676 8.105v-5.678a.79.79 0 0 0-.407-.667m2.01-3.023l-.141-.085l-4.774-2.782a.78.78 0 0 0-.785 0L9.409 9.23V6.897a.07.07 0 0 1 .028-.061l4.83-2.787a4.5 4.5 0 0 1 6.68 4.66zm-12.64 4.135l-2.02-1.164a.08.08 0 0 1-.038-.057V6.075a4.5 4.5 0 0 1 7.375-3.453l-.142.08L8.704 5.46a.8.8 0 0 0-.393.681zm1.097-2.365l2.602-1.5l2.607 1.5v2.999l-2.597 1.5l-2.607-1.5Z"})]})}function i4(){const{content:t}=nn(),{aiCta:a}=m2(),s=s2(),[o,c]=b.useState(!1);b.useEffect(()=>{if(!o)return;const u=setTimeout(()=>c(!1),1e3);return()=>clearTimeout(u)},[o]);const A=b.useCallback(()=>{c(!0),navigator.clipboard.writeText(t??"")},[t]),d=b.useMemo(()=>{const u=window.location.origin+s.pathname;return typeof a=="object"?a.query({location:u}):`Please research and analyze this page: ${u} so I can ask you questions about it. Once you have read it, prompt me with any questions I have. Do not post content from the page in your response. Any of my follow up questions must reference the site I gave you.`},[a,s.pathname]);return C.jsxs("div",{className:n4,children:[o?C.jsxs("div",{className:c0(xl,Em),children:[C.jsx("div",{style:{width:"14px",height:"14px"},children:C.jsx(kC,{})}),"Copied"]}):C.jsxs(ve,{className:c0(xl,Em),href:`https://chatgpt.com?hints=search&q=${encodeURIComponent(d)}`,variant:"styleless",children:[C.jsx("div",{style:{width:"14px",height:"14px"},children:C.jsx(o4,{})}),"Ask in ChatGPT"]}),C.jsxs(T1,{children:[C.jsx(O1,{asChild:!0,children:C.jsx("button",{className:c0(xl,a4),type:"button",children:C.jsx("div",{style:{width:"14px",height:"14px"},children:C.jsx(TC,{})})})}),C.jsx(R1,{children:C.jsx(P1,{align:"end",className:r4,sideOffset:4,children:C.jsxs(I1,{className:s4,onClick:A,children:[C.jsx("div",{style:{width:"14px",height:"14px"},children:C.jsx(OC,{})}),"Copy page for LLMs"]})})})]})]})}var c4="vocs_Outline",A4="vocs_Outline_nav",l4="vocs_Outline_heading",d4="vocs_Outline_items",u4="vocs_Outline_item",f4="vocs_Outline_link";function RC({minLevel:t=2,maxLevel:a=3,highlightActive:s=!0,onClickItem:o,showTitle:c=!0}={}){const{outlineFooter:A}=m2(),{showOutline:d,showAiCta:u}=an(),h=typeof d=="number"?t+d-1:a,m=b.useRef(!0),{pathname:y,hash:g}=s2(),[F,E]=b.useState([]);b.useEffect(()=>{if(typeof window>"u")return;const k=Array.from(document.querySelectorAll(`.${bh}`));E(k)},[y]);const B=b.useMemo(()=>F?F.map(k=>{const w=k.querySelector(`.${Fh}`);if(!w)return null;const O=w.getBoundingClientRect(),R=w.id,T=Number(k.tagName[1]),L=k.textContent,j=window.scrollY+O.top;return T<t||T>h?null:{id:R,level:T,slugTargetElement:w,text:L,topOffset:j}}).filter(Boolean):[],[F,h,t]),[v,x]=b.useState(g.replace("#",""));if(b.useEffect(()=>{if(typeof window>"u")return;const k=new IntersectionObserver(([w])=>{var R;if(!m.current)return;const O=w.target.id;if(w.isIntersecting)x(O);else{if(!(w.target.getBoundingClientRect().top>0))return;const j=B.findIndex(r0=>r0.id===v),q=(R=B[j-1])==null?void 0:R.id;x(q)}},{rootMargin:"0px 0px -95% 0px"});for(const w of B)k.observe(w.slugTargetElement);return()=>k.disconnect()},[v,B]),b.useEffect(()=>{if(typeof window>"u")return;const k=new IntersectionObserver(([w])=>{var R;if(!m.current)return;const O=(R=B[B.length-1])==null?void 0:R.id;w.isIntersecting?x(O):v===O&&x(B[B.length-2].id)});return k.observe(document.querySelector("[data-bottom-observer]")),()=>k.disconnect()},[v,B]),b.useEffect(()=>{if(typeof window>"u")return;const k=Y8(()=>{var w,O,R;if(m.current){if(window.scrollY===0){x((w=B[0])==null?void 0:w.id);return}if(window.scrollY+document.documentElement.clientHeight>=document.documentElement.scrollHeight){x((O=B[B.length-1])==null?void 0:O.id);return}for(let T=0;T<B.length;T++){const L=B[T];if(window.scrollY<L.topOffset){x((R=B[T-1])==null?void 0:R.id);break}}}},100);return window.addEventListener("scroll",k),()=>window.removeEventListener("scroll",k)},[B]),B.length===0)return null;const _=B.filter(k=>k.level===t);return C.jsxs("aside",{className:c4,children:[u&&C.jsx(i4,{}),C.jsxs("nav",{className:A4,children:[c&&C.jsx("h2",{className:l4,children:"On this page"}),C.jsx(PC,{activeId:s?v:null,items:B,onClickItem:()=>{o==null||o(),m.current=!1,setTimeout(()=>{m.current=!0},500)},levelItems:_,setActiveId:x})]}),On(A)]})}function PC({activeId:t,items:a,levelItems:s,onClickItem:o,setActiveId:c}){return C.jsx("ul",{className:d4,children:s.map(({id:A,level:d,text:u})=>{const h=`#${A}`,m=t===A,y=(()=>{var v;const F=a.findIndex(x=>x.id===A)+1,E=(v=a[F])==null?void 0:v.level;if(E<=d)return null;const B=[];for(let x=F;x<a.length;x++){const _=a[x];if(_.level!==E)break;B.push(_)}return B})();return C.jsxs(b.Fragment,{children:[C.jsx("li",{className:u4,children:C.jsx(Ma,{"data-active":m,to:h,onClick:()=>{o==null||o(),c(A)},className:f4,children:u})}),y&&C.jsx(PC,{activeId:t,levelItems:y,items:a,onClickItem:o,setActiveId:c})]},A)})})}var p4="vocs_Popover";Ne.Root=Y1;Ne.Trigger=W1;function Ne({children:t,className:a}){return C.jsx(K1,{children:C.jsx(X1,{className:c0(p4,a),sideOffset:12,children:t})})}var m4="vocs_Sidebar",h4="vocs_Sidebar_backLink",g4="vocs_Sidebar_divider",C4="vocs_Sidebar_navigation",y4="vocs_Sidebar_group",b4="vocs_Sidebar_logo",F4="vocs_Sidebar_logoWrapper",IC="vocs_Sidebar_section",E4="vocs_Sidebar_level",B4="vocs_Sidebar_levelCollapsed",v4="vocs_Sidebar_levelInset",D4="vocs_Sidebar_footer",x4="vocs_Sidebar_footerContent",_4="vocs_Sidebar_footerCurtain",NC="vocs_Sidebar_items",Qr="vocs_Sidebar_item",Wo="vocs_Sidebar_disabledItem",w4="vocs_Sidebar_sectionHeader",S4="vocs_Sidebar_sectionHeaderActive",Bm="vocs_Sidebar_sectionTitle",k4="vocs_Sidebar_sectionTitleLink",T4="vocs_Sidebar_sectionCollapse",O4="vocs_Sidebar_sectionCollapseActive";function R4(){const[t,a]=b.useState(()=>{if(!(typeof window>"u")){if(localStorage.getItem("vocs.theme")){const s=localStorage.getItem("vocs.theme");if(s)return s}return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}});return b.useEffect(()=>{t&&localStorage.setItem("vocs.theme",t),t==="dark"?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")},[t]),{setTheme:a,theme:t,toggle(){a(s=>s==="light"?"dark":"light")}}}var P4="vocs_ThemeToggle",vm="vocs_ThemeToggle_themeToggleButton";function I4(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Moon"}),C.jsx("path",{d:"M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function N4(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",children:[C.jsx("title",{children:"Sun"}),C.jsx("path",{d:"M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function LC(){const{theme:t,setTheme:a}=R4();return!Gd()||!t?null:C.jsxs("div",{className:P4,children:[C.jsx("button",{"data-active":t==="light",type:"button",className:vm,onClick:()=>a("light"),children:C.jsx(V2,{label:"Light Mode",icon:N4,size:"16px"})}),C.jsx("button",{"data-active":t==="dark",type:"button",className:vm,onClick:()=>a("dark"),children:C.jsx(V2,{label:"Dark Mode",icon:I4,size:"16px"})})]})}function zC(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Chevron Right"}),C.jsx("path",{d:"M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function MC(t){var y;const{className:a,onClickItem:s}=t,{theme:o}=m2(),{previousPath:c}=nn(),A=b.useRef(null),d=vi(),[u,h]=b.useState("/");if(b.useEffect(()=>{typeof window>"u"||c&&h(c)},[d.key,d.backLink]),!d)return null;const m=L4(d.items);return C.jsxs("aside",{ref:A,className:c0(m4,a),children:[C.jsxs("div",{children:[C.jsxs("div",{className:F4,children:[C.jsx("div",{className:b4,children:C.jsx(Oa,{to:"/",style:{alignItems:"center",display:"flex",height:"100%"},children:C.jsx(Nd,{})})}),C.jsx("div",{className:g4})]}),C.jsx("nav",{className:C4,children:C.jsxs("div",{className:y4,children:[d.backLink&&C.jsx("section",{className:IC,children:C.jsx("div",{className:NC,children:C.jsxs(Oa,{className:c0(Qr,h4),to:u,children:["←"," ",typeof history<"u"&&((y=history.state)!=null&&y.key)&&u!=="/"?"Back":"Home"]})})}),m.map((g,F)=>C.jsx(jC,{depth:0,item:g,onClick:s,sidebarRef:A},`${g.text}${F}`))]})})]}),C.jsxs("div",{className:D4,children:[C.jsx("div",{className:_4}),C.jsxs("div",{className:x4,children:[C.jsx(qd,{}),o!=null&&o.colorScheme?null:C.jsx(LC,{})]})]})]},d.key)}function L4(t){const a=[];let s=0;for(const o of t){if(o.items){s=a.push(o);continue}a[s]?a[s].items.push(o):a.push({text:"",items:[o]})}return a}function UC(t,a){return t.find(s=>Tn(a,s.link??"")||s.link===a?!0:s.items?UC(s.items,a):!1)}function jC(t){const{depth:a,item:s,onClick:o,sidebarRef:c}=t,A=b.useRef(null),{pathname:d}=s2(),u=BE(s.link||""),h=b.useMemo(()=>s.items?!!UC(s.items,d):!1,[s.items,d]),[m,y]=b.useState(()=>s.link&&u||!s.items||h?!1:!!s.collapsed),g=s.collapsed!==void 0&&s.items!==void 0,F=b.useCallback(v=>{"key"in v&&v.key!=="Enter"||y(x=>!x)},[]),E=b.useCallback(v=>{"key"in v&&v.key!=="Enter"||y(x=>!x)},[]),B=b.useRef(!0);return b.useEffect(()=>{!B.current||(B.current=!1,!Tn(d,s.link??""))||requestAnimationFrame(()=>{var k,w,O;const x=((k=A.current)==null?void 0:k.offsetTop)??0,_=((w=c==null?void 0:c.current)==null?void 0:w.clientHeight)??0;x<_||(O=c==null?void 0:c.current)==null||O.scrollTo({top:x-100})})},[s,d,c]),s.items?C.jsxs("section",{ref:A,className:c0(IC,a===0&&s.text&&E4,a===0&&s.text&&m&&B4),children:[s.text&&C.jsxs("div",{className:w4,...g&&!s.link?{role:"button",tabIndex:0,onClick:F,onKeyDown:F}:{},children:[s.text&&(s.link?C.jsx(ve,{"data-active":!!u,onClick:v=>{o==null||o(v),F(v)},className:c0(a===0?[Bm,k4]:Qr,h&&S4,s.disabled&&Wo),href:s.link,variant:"styleless",children:s.text}):C.jsx("div",{className:c0(a===0?Bm:Qr,s.disabled&&Wo),children:s.text})),g&&C.jsx("div",{role:"button",tabIndex:0,onClick:E,onKeyDown:E,children:C.jsx(V2,{className:c0(T4,m&&O4),label:"toggle section",icon:zC,size:"16px"})})]}),!m&&C.jsx("div",{className:c0(NC,a!==0&&v4),children:s.items&&s.items.length>0&&a<5&&s.items.map((v,x)=>C.jsx(jC,{depth:a+1,item:v,onClick:o,sidebarRef:c},`${v.text}${x}`))})]}):C.jsx(C.Fragment,{children:s.link?C.jsx(ve,{ref:A,"data-active":!!u,onClick:o,className:c0(Qr,s.disabled&&Wo),href:s.link,variant:"styleless",children:s.text}):C.jsx("div",{className:c0(Qr,s.disabled&&Wo),children:s.text})})}function z4(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Chevron Up"}),C.jsx("path",{d:"M3.13523 8.84197C3.3241 9.04343 3.64052 9.05363 3.84197 8.86477L7.5 5.43536L11.158 8.86477C11.3595 9.05363 11.6759 9.04343 11.8648 8.84197C12.0536 8.64051 12.0434 8.32409 11.842 8.13523L7.84197 4.38523C7.64964 4.20492 7.35036 4.20492 7.15803 4.38523L3.15803 8.13523C2.95657 8.32409 2.94637 8.64051 3.13523 8.84197Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function VC(){return C.jsxs("svg",{width:"100%",height:"100%",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 79 48",fill:"none",children:[C.jsx("title",{children:"Menu"}),C.jsx("path",{fill:"currentColor",d:"M19.528 47.232h40.87c1.952 0 3.515-1.562 3.515-3.564a3.5 3.5 0 0 0-3.516-3.516H19.528a3.501 3.501 0 0 0-3.515 3.516c0 2.002 1.562 3.564 3.515 3.564ZM12.057 27.262h55.81a3.501 3.501 0 0 0 3.516-3.516 3.501 3.501 0 0 0-3.515-3.515h-55.81a3.501 3.501 0 0 0-3.516 3.515 3.501 3.501 0 0 0 3.515 3.516ZM4.391 7.34H75.29c2.002 0 3.515-1.563 3.515-3.516 0-2.002-1.513-3.564-3.515-3.564H4.39C2.438.26.876 1.822.876 3.824A3.501 3.501 0 0 0 4.39 7.34Z"})]})}id.Curtain=V4;function id(){const t=m2(),{showLogo:a}=an();return C.jsxs("div",{className:k8,children:[C.jsxs("div",{className:dm,children:[a&&C.jsx("div",{className:El,children:C.jsx("div",{className:P8,children:C.jsx(Oa,{to:"/",style:{alignItems:"center",display:"flex",height:"100%"},children:C.jsx(Nd,{})})})}),t.topNav&&C.jsxs("div",{className:El,children:[C.jsx(M4,{items:t.topNav}),C.jsx(j4,{items:t.topNav})]})]}),C.jsx("div",{className:dm,children:C.jsx("div",{className:El,style:{marginRight:"-8px"},children:C.jsx(S8,{})})})]})}function M4({items:t}){const{pathname:a}=s2(),s=As({pathname:a,items:t});return C.jsx(Sg,{className:Zg,children:C.jsxs(kg,{children:[t.map((o,c)=>o.element?On(o.element):o.link?C.jsx(ki,{active:s==null?void 0:s.includes(o.id),href:o.link,children:o.text},c):C.jsxs(Tg,{className:R8,children:[C.jsx(Og,{active:s==null?void 0:s.includes(o.id),children:o.text}),C.jsx(Rg,{className:T8,children:C.jsx(U4,{items:o.items||[]})})]},c)),C.jsx(_d,{})]})})}function U4({items:t}){const{pathname:a}=s2(),s=As({pathname:a,items:t});return C.jsx("ul",{children:t==null?void 0:t.map((o,c)=>C.jsx(ki,{active:s.includes(o.id),href:o.link,children:o.text},c))})}function j4({items:t}){const[a,s]=b.useState(!1),{showSidebar:o}=an(),{pathname:c}=s2(),A=As({pathname:c,items:t}),d=t.filter(y=>y.id===A[0])[0],{basePath:u,theme:h}=m2(),m=u;return C.jsx("div",{className:c0(Zg,N8),children:C.jsxs(Ne.Root,{modal:!0,open:a,onOpenChange:s,children:[C.jsx(Ne.Trigger,{className:c0(Jg,Ho),children:o||d?C.jsxs(C.Fragment,{children:[(d==null?void 0:d.text)??"Menu",C.jsx(V2,{label:"Menu",icon:TC,size:"16px"})]}):C.jsx(V2,{label:"Menu",icon:VC,size:"16px"})}),C.jsxs(Ne,{className:q8,children:[C.jsxs(v8,{type:"single",collapsible:!0,style:{display:"flex",flexDirection:"column"},children:[t.map((y,g)=>{var F;return y.element?On(y.element):y.link?C.jsx(ve,{"data-active":A.includes(y.id),className:Ho,href:y.link,onClick:()=>s(!1),variant:"styleless",children:y.text},g):C.jsxs(D8,{value:g.toString(),children:[C.jsx(x8,{className:c0(Ho,U8),"data-active":A.includes(y.id),style:Le({[z8]:`url(${m}/.vocs/icons/chevron-down.svg)`,[M8]:`url(${m}/.vocs/icons/chevron-up.svg)`}),children:y.text}),C.jsx(_8,{className:L8,children:(F=y.items)==null?void 0:F.map((E,B)=>C.jsx(ve,{className:Ho,href:E.link,onClick:()=>s(!1),variant:"styleless",children:E.text},B))})]},g)}),C.jsx(_d,{})]}),C.jsxs("div",{className:H8,children:[C.jsx(qd,{}),h!=null&&h.colorScheme?null:C.jsx(LC,{})]})]})]})})}function V4({enableScrollToTop:t}){const{pathname:a}=s2(),{layout:s,showSidebar:o}=an(),{frontmatter:c={}}=nn(),A=vi(),[d,u]=b.useState(!1),[h,m]=b.useState(!1),y=b.useMemo(()=>{if(!A||s==="minimal")return;const E=GC({sidebarItems:A.items,pathname:a});return E==null?void 0:E.text},[s,a,A]),g=b.useMemo(()=>{var E;if(!(typeof window>"u"))return(E=document.querySelector(".vocs_Content h1"))==null?void 0:E.textContent},[]),F=y||c.title||g;return C.jsxs("div",{className:O8,children:[C.jsx("div",{className:Am,children:C.jsx("div",{className:Fl,children:o?C.jsxs(Ne.Root,{modal:!0,open:h,onOpenChange:m,children:[C.jsxs(Ne.Trigger,{className:Jg,children:[C.jsx(V2,{label:"Menu",icon:VC,size:"13px"}),C.jsx("div",{className:I8,children:F})]}),C.jsx(Ne,{className:G8,children:C.jsx(MC,{onClickItem:()=>m(!1)})})]}):F})}),C.jsxs("div",{className:Am,children:[t&&C.jsxs(C.Fragment,{children:[C.jsx("div",{className:Fl,children:C.jsxs("button",{className:lm,onClick:()=>window.scrollTo({behavior:"smooth",top:0}),type:"button",children:["Top",C.jsx(V2,{label:"Scroll to top",icon:z4,size:"16px"})]})}),C.jsx("div",{className:V8})]}),s==="docs"&&C.jsx("div",{className:Fl,children:C.jsxs(Ne.Root,{modal:!0,open:d,onOpenChange:u,children:[C.jsxs(Ne.Trigger,{className:lm,children:["On this page",C.jsx(V2,{label:"On this page",icon:zC,size:"16px"})]}),C.jsx(Ne,{className:j8,children:C.jsx(RC,{onClickItem:()=>u(!1),showTitle:!1})})]})})]})]})}function GC({sidebarItems:t,pathname:a}){const s=a.replace(/(.+)\/$/,"$1");for(const o of t){if((o==null?void 0:o.link)===s)return o;if(o.items){const c=GC({sidebarItems:o.items,pathname:s});if(c)return c}}}var G4="vocs_SkipLink";const qC="vocs-content";function q4(){const{pathname:t}=s2();return C.jsx("a",{className:c0(G4,Ag),href:`${t}#${qC}`,children:"Skip to content"})}var H4="vocs_DocsLayout",Y4="vocs_DocsLayout_content",W4="vocs_DocsLayout_content_withTopNav",K4="vocs_DocsLayout_content_withSidebar",X4="vocs_DocsLayout_gutterLeft",J4="vocs_DocsLayout_gutterTop",Z4="vocs_DocsLayout_gutterTop_offsetLeftGutter",$4="vocs_DocsLayout_gutterTop_sticky",Q4="vocs_DocsLayout_gutterTopCurtain",eS="vocs_DocsLayout_gutterTopCurtain_hidden",tS="vocs_DocsLayout_gutterTopCurtain_withSidebar",nS="vocs_DocsLayout_gutterRight",aS="vocs_DocsLayout_gutterRight_withSidebar",rS="vocs_DocsLayout_sidebar";function cd({children:t}){var E,B;const{banner:a,font:s}=m2(),{frontmatter:o={}}=nn(),{content:c}=o,{layout:A,showOutline:d,showSidebar:u,showTopNav:h}=an(),{ref:m,inView:y}=yh({initialInView:!0,rootMargin:"100px 0px 0px 0px"}),[g,F]=Wl("banner",!0);return C.jsxs("div",{className:H4,"data-layout":A,style:Le({[WB]:g?a==null?void 0:a.height:void 0,[Sp.default]:(E=s==null?void 0:s.default)!=null&&E.google?`${s.default.google}, ${wp.default}`:void 0,[Sp.mono]:(B=s==null?void 0:s.mono)!=null&&B.google?`${s.mono.google}, ${wp.mono}`:void 0}),children:[C.jsx(q4,{}),g&&C.jsx(mv,{hide:()=>F(!1)}),u&&C.jsx("div",{className:X4,children:C.jsx(MC,{className:rS})}),h&&C.jsxs(C.Fragment,{children:[C.jsxs("div",{ref:m,className:c0(J4,u&&Z4,(A==="minimal"||A==="landing")&&$4),children:[C.jsx(Ql,{}),C.jsx(id,{})]}),C.jsxs("div",{className:c0(Q4,u&&tS,(A==="minimal"||A==="landing")&&eS),children:[C.jsx(Ql.Curtain,{}),C.jsx(id.Curtain,{enableScrollToTop:!y})]})]}),d&&C.jsx("div",{className:c0(nS,u&&aS),children:C.jsx(RC,{})}),C.jsxs("div",{id:qC,className:c0(Y4,u&&K4,h&&W4),style:Le({[sl.horizontalPadding]:c==null?void 0:c.horizontalPadding,[sl.width]:c==null?void 0:c.width,[sl.verticalPadding]:c==null?void 0:c.verticalPadding}),children:[C.jsx(vh,{children:t}),C.jsx(s8,{})]}),C.jsx("div",{"data-bottom-observer":!0})]})}const Ad={},HC=a2.createContext(Ad);function sS(t){const a=a2.useContext(HC);return a2.useMemo(function(){return typeof t=="function"?t(a):{...a,...t}},[a,t])}function oS(t){let a;return t.disableParentContext?a=typeof t.components=="function"?t.components(Ad):t.components||Ad:a=sS(t.components),a2.createElement(HC.Provider,{value:a},t.children)}var _l="vocs_Anchor",iS="vocs_Autolink";function cS(t){return t.href?C.jsx(Ma,{...t,className:c0(t.className,iS),to:t.href}):null}function AS(t){const{children:a,href:s}=t,{pathname:o}=s2();return a&&typeof a=="object"&&"props"in a&&a.props["data-autolink-icon"]?C.jsx(cS,{className:c0(t.className,_l),...t}):s!=null&&s.match(/^#/)?C.jsx("a",{className:c0(t.className,_l),...t,href:`${o}${s}`}):C.jsx(ve,{className:c0(t.className,_l),...t,hideExternalIcon:!0})}var YC="vocs_Callout",WC="vocs_Callout_content",KC="vocs_Callout_icon",lS="vocs_Callout_note",dS="vocs_Callout_info",uS="vocs_Callout_warning",fS="vocs_Callout_danger",pS="vocs_Callout_tip",mS="vocs_Callout_success";const hS=Object.freeze(Object.defineProperty({__proto__:null,content:WC,danger:fS,icon:KC,info:dS,note:lS,root:YC,success:mS,tip:pS,warning:uS},Symbol.toStringTag,{value:"Module"}));function Dm(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Exclamation"}),C.jsx("path",{d:"M8.4449 0.608765C8.0183 -0.107015 6.9817 -0.107015 6.55509 0.608766L0.161178 11.3368C-0.275824 12.07 0.252503 13 1.10608 13H13.8939C14.7475 13 15.2758 12.07 14.8388 11.3368L8.4449 0.608765ZM7.4141 1.12073C7.45288 1.05566 7.54712 1.05566 7.5859 1.12073L13.9798 11.8488C14.0196 11.9154 13.9715 12 13.8939 12H1.10608C1.02849 12 0.980454 11.9154 1.02018 11.8488L7.4141 1.12073ZM6.8269 4.48611C6.81221 4.10423 7.11783 3.78663 7.5 3.78663C7.88217 3.78663 8.18778 4.10423 8.1731 4.48612L8.01921 8.48701C8.00848 8.766 7.7792 8.98664 7.5 8.98664C7.2208 8.98664 6.99151 8.766 6.98078 8.48701L6.8269 4.48611ZM8.24989 10.476C8.24989 10.8902 7.9141 11.226 7.49989 11.226C7.08567 11.226 6.74989 10.8902 6.74989 10.476C6.74989 10.0618 7.08567 9.72599 7.49989 9.72599C7.9141 9.72599 8.24989 10.0618 8.24989 10.476Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function xm(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Info"}),C.jsx("path",{d:"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77618 5.99999 8.00003 6.22384 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function gS(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"Lightning Bolt"}),C.jsx("path",{d:"M8.69667 0.0403541C8.90859 0.131038 9.03106 0.354857 8.99316 0.582235L8.0902 6.00001H12.5C12.6893 6.00001 12.8625 6.10701 12.9472 6.27641C13.0319 6.4458 13.0136 6.6485 12.8999 6.80001L6.89997 14.8C6.76167 14.9844 6.51521 15.0503 6.30328 14.9597C6.09135 14.869 5.96888 14.6452 6.00678 14.4178L6.90974 9H2.49999C2.31061 9 2.13748 8.893 2.05278 8.72361C1.96809 8.55422 1.98636 8.35151 2.09999 8.2L8.09997 0.200038C8.23828 0.0156255 8.48474 -0.0503301 8.69667 0.0403541ZM3.49999 8.00001H7.49997C7.64695 8.00001 7.78648 8.06467 7.88148 8.17682C7.97648 8.28896 8.01733 8.43723 7.99317 8.5822L7.33027 12.5596L11.5 7.00001H7.49997C7.353 7.00001 7.21347 6.93534 7.11846 6.8232C7.02346 6.71105 6.98261 6.56279 7.00678 6.41781L7.66968 2.44042L3.49999 8.00001Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function CS({className:t,children:a,type:s}){return C.jsxs("aside",{className:c0(t,YC,hS[s]),children:[C.jsxs("div",{className:KC,children:[s==="note"&&C.jsx(xm,{}),s==="info"&&C.jsx(xm,{}),s==="warning"&&C.jsx(Dm,{}),s==="danger"&&C.jsx(Dm,{}),s==="tip"&&C.jsx(gS,{}),s==="success"&&C.jsx(kC,{})]}),C.jsx("div",{className:WC,children:a})]})}var yS="vocs_Aside";function bS(t){const a=c0(t.className,yS);return"data-callout"in t?C.jsx(CS,{className:a,type:t["data-callout"],children:t.children}):C.jsx("aside",{...t,className:a})}var FS="vocs_Blockquote";function ES(t){return C.jsx("blockquote",{...t,className:c0(t.className,FS)})}var BS="vocs_Code";function vS(t){const a=DS(t.children);return C.jsx("code",{...t,className:c0(t.className,BS),children:a})}function DS(t){return Array.isArray(t)?t.map((a,s)=>{var o,c,A;return a.props&&"data-line"in a.props&&typeof a.props.children=="string"&&a.props.children.trim()===""&&((A=(c=(o=t[s+1])==null?void 0:o.props)==null?void 0:c.className)!=null&&A.includes("twoslash-tag-line"))?null:a}).filter(Boolean):t}var xS="vocs_Details";function _S(t){return C.jsx("details",{...t,className:c0(t.className,xS)})}var wS="vocs_Authors",SS="vocs_Authors_authors",kS="vocs_Authors_link",_m="vocs_Authors_separator";function XC(t){const{frontmatter:a}=nn(),{authors:s=a==null?void 0:a.authors,date:o=a==null?void 0:a.date}=t,c=b.useMemo(()=>{if(s)return Array.isArray(s)?s:s.split(",").map(d=>d.trim())},[s]),A=b.useMemo(()=>o?new Date(o).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}):null,[o]);return C.jsxs("div",{className:wS,children:[A,c&&(A?" by ":"By "),C.jsx("span",{className:SS,children:c==null?void 0:c.map((d,u)=>{const{text:h,url:m}=TS(d);return C.jsxs(b.Fragment,{children:[m?C.jsx("a",{className:kS,href:m,target:"_blank",rel:"noopener noreferrer",children:h}):h,u<c.length-2&&C.jsx("span",{className:_m,children:", "}),u<c.length-1&&C.jsx("span",{className:_m,children:" & "})]},u)})})]})}function TS(t){const a=t.match(/\[(.+)\]\((.+)\)/);return a?{text:a[1],url:a[2]}:{text:t,url:void 0}}const wm=[];var OS="vocs_BlogPosts",RS="vocs_BlogPosts_description",PS="vocs_BlogPosts_divider",IS="vocs_BlogPosts_post",NS="vocs_BlogPosts_readMore",LS="vocs_BlogPosts_title";function zS(){return C.jsx("div",{className:OS,children:wm.map((t,a)=>C.jsxs(b.Fragment,{children:[C.jsx("div",{className:IS,children:C.jsxs(Oa,{to:t.path,children:[C.jsx("h2",{className:LS,children:t.title}),C.jsx(XC,{authors:t.authors,date:t.date}),C.jsxs("p",{className:RS,children:[t.description," ",C.jsx("span",{className:NS,children:"[→]"})]})]})}),a<wm.length-1&&C.jsx("hr",{className:PS})]},a))})}var MS="var(--vocs_Sponsors_columns)",US="var(--vocs_Sponsors_height)",jS="vocs_Sponsors",VS="vocs_Sponsors_title",GS="vocs_Sponsors_row",qS="vocs_Sponsors_column",HS="vocs_Sponsors_sponsor",YS="vocs_Sponsors_image";function WS(){const{sponsors:t}=m2();return C.jsx("div",{className:jS,children:t==null?void 0:t.map((a,s)=>C.jsxs(b.Fragment,{children:[C.jsx("div",{className:VS,children:a.name}),a.items.map((o,c)=>{var A;return C.jsx("div",{className:GS,style:Le({[MS]:o.length.toString(),[US]:`${((A=a.height)==null?void 0:A.toString())??"40"}px`}),children:o.map((d,u)=>C.jsx(ve,{className:c0(qS,d?HS:void 0),href:d==null?void 0:d.link,hideExternalIcon:!0,variant:"styleless",children:(d==null?void 0:d.image)&&C.jsx("img",{className:YS,src:d==null?void 0:d.image,alt:d==null?void 0:d.name})},u))},c)})]},s))})}var KS="var(--vocs_AutolinkIcon_iconUrl)",XS="vocs_AutolinkIcon";function JS(t){const{basePath:a}=m2(),s=a;return C.jsx("div",{...t,className:c0(t.className,XS),style:Le({[KS]:`url(${s}/.vocs/icons/link.svg)`})})}var ZS="vocs_Tabs",$S="vocs_Tabs_list",QS="vocs_Tabs_trigger",e7="vocs_Tabs_content";function t7(t){return C.jsx($1,{...t,className:c0(t.className,ZS)})}function n7(t){return C.jsx(Q1,{...t,className:c0(t.className,$S)})}function a7(t){return C.jsx(e4,{...t,className:c0(t.className,QS)})}function r7(t){return C.jsx(t4,{...t,className:c0(t.className,e7)})}var s7="vocs_CodeGroup";function o7({children:t}){if(!Array.isArray(t))return null;const a=t.map(s=>{const o=s.props["data-title"]?s:s.props.children,{props:c}=o,A=c["data-title"],d=c.children;return{title:A,content:d}});return C.jsxs(t7,{className:s7,defaultValue:a[0].title,children:[C.jsx(n7,{"aria-label":"Code group",children:a.map(({title:s},o)=>C.jsx(a7,{value:s||o.toString(),children:s},s||o.toString()))}),a.map(({title:s,content:o},c)=>{var d,u,h,m;const A=(m=(h=(u=(d=o.props)==null?void 0:d.children)==null?void 0:u.props)==null?void 0:h.className)==null?void 0:m.includes("shiki");return C.jsx(r7,{"data-shiki":A,value:s||c.toString(),children:o},s||c.toString())})]})}var i7="vocs_Div",c7="vocs_Step",JC="vocs_Step_title",A7="vocs_Step_content",l7="vocs_H2";function ZC(t){return C.jsx(Ua,{...t,className:c0(t.className,l7),level:2})}var d7="vocs_H3";function $C(t){return C.jsx(Ua,{...t,className:c0(t.className,d7),level:3})}var u7="vocs_H4";function QC(t){return C.jsx(Ua,{...t,className:c0(t.className,u7),level:4})}var f7="vocs_H5";function ey(t){return C.jsx(Ua,{...t,className:c0(t.className,f7),level:5})}var p7="vocs_H6";function ty(t){return C.jsx(Ua,{...t,className:c0(t.className,p7),level:6})}function m7({children:t,className:a,title:s,titleLevel:o=2}){const c=(()=>{if(o===2)return ZC;if(o===3)return $C;if(o===4)return QC;if(o===5)return ey;if(o===6)return ty;throw new Error("Invalid.")})();return C.jsxs("div",{className:c0(a,c7),children:[typeof s=="string"?C.jsx(c,{className:JC,children:s}):s,C.jsx("div",{className:A7,children:t})]})}var h7="vocs_Steps";function g7({children:t,className:a}){return C.jsx("div",{className:c0(a,h7),children:t})}function C7({children:t}){return Array.isArray(t)?C.jsx(g7,{children:t.map(({props:a},s)=>{const[o,...c]=Array.isArray(a.children)?a.children:[a.children];return C.jsx(m7,{title:b.cloneElement(o,{className:JC}),children:c},s)})}):null}var y7="vocs_Subtitle";function b7({children:t}){return C.jsx("div",{className:y7,children:t})}function F7(t){const{layout:a}=an(),s=c0(t.className,i7);return t.className==="code-group"?C.jsx(o7,{...t,className:s}):"data-authors"in t?C.jsx(XC,{}):"data-blog-posts"in t?C.jsx(zS,{}):"data-sponsors"in t?C.jsx(WS,{}):"data-autolink-icon"in t&&a==="docs"?C.jsx(JS,{...t,className:s}):"data-vocs-steps"in t?C.jsx(C7,{...t,className:s}):t.role==="doc-subtitle"?C.jsx(b7,{...t}):C.jsx("div",{...t,className:s})}var E7="vocs_Figcaption";function B7(t){const a=c0(t.className,E7);return C.jsx("figcaption",{...t,className:a})}var v7="vocs_Figure";function D7(t){const a=c0(t.className,v7);return C.jsx("figure",{...t,className:a})}var x7="vocs_Header";function _7(t){return C.jsx("header",{...t,className:c0(t.className,x7)})}var w7="vocs_HorizontalRule";function S7(t){return C.jsx("hr",{...t,className:c0(t.className,w7)})}var k7="vocs_List",T7="vocs_List_ordered",O7="vocs_List_unordered";function Sm({ordered:t,...a}){const s=t?"ol":"ul";return C.jsx(s,{...a,className:c0(a.className,k7,t?T7:O7)})}var R7="vocs_ListItem";function P7(t){return C.jsx("li",{...t,className:c0(t.className,R7)})}function I7(){const t=b.useRef(null),[a,s]=b.useState(!1);b.useEffect(()=>{if(!a)return;const c=setTimeout(()=>s(!1),1e3);return()=>clearTimeout(c)},[a]);function o(){var d;s(!0);const c=(d=t.current)==null?void 0:d.cloneNode(!0),A=c==null?void 0:c.querySelectorAll("button,.line.diff.remove,.twoslash-popup-info-hover,.twoslash-popup-info,.twoslash-meta-line,.twoslash-tag-line");for(const u of A??[])u.remove();navigator.clipboard.writeText(c==null?void 0:c.textContent)}return{copied:a,copy:o,ref:t}}var N7="vocs_CopyButton",L7="vocs_CopyButton_copied";function z7(){return C.jsxs("svg",{width:"100%",height:"100%",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 68 67",children:[C.jsx("title",{children:"Checkmark"}),C.jsx("path",{fill:"currentColor",d:"M26.175 66.121c1.904 0 3.418-.83 4.492-2.49L66.263 7.332c.83-1.27 1.123-2.295 1.123-3.32 0-2.393-1.563-4.004-4.004-4.004-1.758 0-2.734.586-3.809 2.295L25.98 56.209 8.304 32.381c-1.123-1.514-2.198-2.149-3.809-2.149-2.441 0-4.2 1.71-4.2 4.15 0 1.026.44 2.15 1.27 3.224l19.971 25.927c1.367 1.758 2.734 2.588 4.639 2.588Z"})]})}function M7({copy:t,copied:a}){return C.jsx("button",{className:N7,"data-copied":a,onClick:t,type:"button",children:a?C.jsx(V2,{label:"Copied",size:"14px",className:L7,icon:z7}):C.jsx(V2,{label:"Copy",size:"18px",icon:OC})})}var U7="vocs_CodeBlock";function j7(t){return C.jsx("div",{...t,className:c0(t.className,U7)})}function V7(){return C.jsxs("svg",{width:"100%",height:"100%",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[C.jsx("title",{children:"File"}),C.jsx("path",{d:"M4.2 1H4.17741H4.1774C3.86936 0.999988 3.60368 0.999978 3.38609 1.02067C3.15576 1.04257 2.92825 1.09113 2.71625 1.22104C2.51442 1.34472 2.34473 1.51442 2.22104 1.71625C2.09113 1.92825 2.04257 2.15576 2.02067 2.38609C1.99998 2.60367 1.99999 2.86935 2 3.17738V3.1774V3.2V11.8V11.8226V11.8226C1.99999 12.1307 1.99998 12.3963 2.02067 12.6139C2.04257 12.8442 2.09113 13.0717 2.22104 13.2837C2.34473 13.4856 2.51442 13.6553 2.71625 13.779C2.92825 13.9089 3.15576 13.9574 3.38609 13.9793C3.60368 14 3.86937 14 4.17741 14H4.2H10.8H10.8226C11.1306 14 11.3963 14 11.6139 13.9793C11.8442 13.9574 12.0717 13.9089 12.2837 13.779C12.4856 13.6553 12.6553 13.4856 12.779 13.2837C12.9089 13.0717 12.9574 12.8442 12.9793 12.6139C13 12.3963 13 12.1306 13 11.8226V11.8V3.2V3.17741C13 2.86936 13 2.60368 12.9793 2.38609C12.9574 2.15576 12.9089 1.92825 12.779 1.71625C12.6553 1.51442 12.4856 1.34472 12.2837 1.22104C12.0717 1.09113 11.8442 1.04257 11.6139 1.02067C11.3963 0.999978 11.1306 0.999988 10.8226 1H10.8H4.2ZM3.23875 2.07368C3.26722 2.05623 3.32362 2.03112 3.48075 2.01618C3.64532 2.00053 3.86298 2 4.2 2H10.8C11.137 2 11.3547 2.00053 11.5193 2.01618C11.6764 2.03112 11.7328 2.05623 11.7613 2.07368C11.8285 2.11491 11.8851 2.17147 11.9263 2.23875C11.9438 2.26722 11.9689 2.32362 11.9838 2.48075C11.9995 2.64532 12 2.86298 12 3.2V11.8C12 12.137 11.9995 12.3547 11.9838 12.5193C11.9689 12.6764 11.9438 12.7328 11.9263 12.7613C11.8851 12.8285 11.8285 12.8851 11.7613 12.9263C11.7328 12.9438 11.6764 12.9689 11.5193 12.9838C11.3547 12.9995 11.137 13 10.8 13H4.2C3.86298 13 3.64532 12.9995 3.48075 12.9838C3.32362 12.9689 3.26722 12.9438 3.23875 12.9263C3.17147 12.8851 3.11491 12.8285 3.07368 12.7613C3.05624 12.7328 3.03112 12.6764 3.01618 12.5193C3.00053 12.3547 3 12.137 3 11.8V3.2C3 2.86298 3.00053 2.64532 3.01618 2.48075C3.03112 2.32362 3.05624 2.26722 3.07368 2.23875C3.11491 2.17147 3.17147 2.11491 3.23875 2.07368ZM5 10C4.72386 10 4.5 10.2239 4.5 10.5C4.5 10.7761 4.72386 11 5 11H8C8.27614 11 8.5 10.7761 8.5 10.5C8.5 10.2239 8.27614 10 8 10H5ZM4.5 7.5C4.5 7.22386 4.72386 7 5 7H10C10.2761 7 10.5 7.22386 10.5 7.5C10.5 7.77614 10.2761 8 10 8H5C4.72386 8 4.5 7.77614 4.5 7.5ZM5 4C4.72386 4 4.5 4.22386 4.5 4.5C4.5 4.77614 4.72386 5 5 5H10C10.2761 5 10.5 4.77614 10.5 4.5C10.5 4.22386 10.2761 4 10 4H5Z",fill:"currentColor",fillRule:"evenodd",clipRule:"evenodd"})]})}function G7(){return C.jsxs("svg",{width:"100%",height:"100%",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 79 95",fill:"none",children:[C.jsx("title",{children:"Terminal"}),C.jsx("path",{fill:"currentColor",d:"M38.281 34.033c0-1.074-.39-2.05-1.22-2.88L6.885 1.171C6.152.39 5.175 0 4.053 0 1.758 0 0 1.709 0 4.004c0 1.074.488 2.1 1.172 2.88l27.295 27.15L1.172 61.181C.488 61.962 0 62.939 0 64.062c0 2.295 1.758 4.004 4.053 4.004 1.123 0 2.1-.39 2.832-1.172l30.176-29.98c.83-.83 1.22-1.807 1.22-2.88Z"}),C.jsx("path",{stroke:"currentColor",strokeLinecap:"round",strokeWidth:"8px",d:"M36 75h55"})]})}var q7="vocs_CodeTitle";function H7({children:t,className:a,language:s,...o}){return C.jsxs("div",{...o,className:c0(a,q7),children:[s==="bash"?C.jsx(V2,{label:"Terminal",size:"14px",icon:G7,style:{marginTop:3}}):t.match(/\.(.*)$/)?C.jsx(V2,{label:"File",size:"14px",icon:V7,style:{marginTop:1}}):null,t]})}var Y7="vocs_Pre",W7="vocs_Pre_wrapper";function K7({children:t,className:a,...s}){const{copied:o,copy:c,ref:A}=I7();function d(m){return!m||typeof m!="object"?m:"props"in m?{...m,props:{...m.props,children:Array.isArray(m.props.children)?m.props.children.map(d):d(m.props.children)}}:m}const u=b.useMemo(()=>d(t),[t]);return(m=>a!=null&&a.includes("shiki")?C.jsxs(j7,{children:[s["data-title"]&&C.jsx(H7,{language:s["data-lang"],children:s["data-title"]}),m]}):m)(C.jsx("div",{className:c0(W7),children:C.jsxs("pre",{ref:A,...s,className:c0(a,Y7),children:[C.jsx(M7,{copied:o,copy:c}),u]})}))}var X7="vocs_Footnotes";function J7(t){return C.jsx("section",{...t,className:c0(t.className,X7)})}var km="vocs_Section";function Z7(t){return"data-footnotes"in t?C.jsx(J7,{...t,className:c0(t.className,km)}):C.jsx("section",{...t,className:c0(t.className,km)})}var Tm="vocs_Span";function $7(t,a){if(!t||!a)return!1;const s=a.getRootNode==null?void 0:a.getRootNode();if(t.contains(a))return!0;if(s&&mi(s)){let o=a;for(;o;){if(t===o)return!0;o=o.parentNode||o.host}}return!1}function Ko(t){return(t==null?void 0:t.ownerDocument)||document}function ld(t,a){const s=["mouse","pen"];return s.push("",void 0),s.includes(t)}var Q7=typeof document<"u",ek=function(){},In=Q7?b.useLayoutEffect:ek;const tk={...bi};function Xo(t){const a=b.useRef(t);return In(()=>{a.current=t}),a}const nk=tk.useInsertionEffect,ak=nk||(t=>t());function es(t){const a=b.useRef(()=>{});return ak(()=>{a.current=t}),b.useCallback(function(){for(var s=arguments.length,o=new Array(s),c=0;c<s;c++)o[c]=arguments[c];return a.current==null?void 0:a.current(...o)},[])}const rk="data-floating-ui-focusable",Om="active",Rm="selected",sk={...bi};let Pm=!1,ok=0;const Im=()=>"floating-ui-"+Math.random().toString(36).slice(2,6)+ok++;function ik(){const[t,a]=b.useState(()=>Pm?Im():void 0);return In(()=>{t==null&&a(Im())},[]),b.useEffect(()=>{Pm=!0},[]),t}const ck=sk.useId,ny=ck||ik,Ak=b.forwardRef(function(a,s){const{context:{placement:o,elements:{floating:c},middlewareData:{arrow:A,shift:d}},width:u=14,height:h=7,tipRadius:m=0,strokeWidth:y=0,staticOffset:g,stroke:F,d:E,style:{transform:B,...v}={},...x}=a,_=ny(),[k,w]=b.useState(!1);if(In(()=>{if(!c)return;xe(c).direction==="rtl"&&w(!0)},[c]),!c)return null;const[O,R]=o.split("-"),T=O==="top"||O==="bottom";let L=g;(T&&d!=null&&d.x||!T&&d!=null&&d.y)&&(L=null);const j=y*2,q=j/2,r0=u/2*(m/-8+1),d0=h/2*m/4,i0=!!E,A0=L&&R==="end"?"bottom":"top";let W=L&&R==="end"?"right":"left";L&&k&&(W=R==="end"?"left":"right");const u0=(A==null?void 0:A.x)!=null?L||A.x:"",z=(A==null?void 0:A.y)!=null?L||A.y:"",Y=E||"M0,0"+(" H"+u)+(" L"+(u-r0)+","+(h-d0))+(" Q"+u/2+","+h+" "+r0+","+(h-d0))+" Z",$={top:i0?"rotate(180deg)":"",left:i0?"rotate(90deg)":"rotate(-90deg)",bottom:i0?"":"rotate(180deg)",right:i0?"rotate(-90deg)":"rotate(90deg)"}[O];return C.jsxs("svg",{...x,"aria-hidden":!0,ref:s,width:i0?u:u+j,height:u,viewBox:"0 0 "+u+" "+(h>u?h:u),style:{position:"absolute",pointerEvents:"none",[W]:u0,[A0]:z,[O]:T||i0?"100%":"calc(100% - "+j/2+"px)",transform:[$,B].filter(Z=>!!Z).join(" "),...v},children:[j>0&&C.jsx("path",{clipPath:"url(#"+_+")",fill:"none",stroke:F,strokeWidth:j+(E?0:1),d:Y}),C.jsx("path",{stroke:j&&!E?x.fill:"none",d:Y}),C.jsx("clipPath",{id:_,children:C.jsx("rect",{x:-q,y:q*(i0?-1:1),width:u+j,height:u})})]})});function lk(){const t=new Map;return{emit(a,s){var o;(o=t.get(a))==null||o.forEach(c=>c(s))},on(a,s){t.has(a)||t.set(a,new Set),t.get(a).add(s)},off(a,s){var o;(o=t.get(a))==null||o.delete(s)}}}const dk=b.createContext(null),uk=b.createContext(null),ay=()=>{var t;return((t=b.useContext(dk))==null?void 0:t.id)||null},ry=()=>b.useContext(uk);function fk(t){return"data-floating-ui-"+t}function se(t){t.current!==-1&&(clearTimeout(t.current),t.current=-1)}const Nm=fk("safe-polygon");function wl(t,a,s){if(s&&!ld(s))return 0;if(typeof t=="number")return t;if(typeof t=="function"){const o=t();return typeof o=="number"?o:o==null?void 0:o[a]}return t==null?void 0:t[a]}function Sl(t){return typeof t=="function"?t():t}function pk(t,a){a===void 0&&(a={});const{open:s,onOpenChange:o,dataRef:c,events:A,elements:d}=t,{enabled:u=!0,delay:h=0,handleClose:m=null,mouseOnly:y=!1,restMs:g=0,move:F=!0}=a,E=ry(),B=ay(),v=Xo(m),x=Xo(h),_=Xo(s),k=Xo(g),w=b.useRef(),O=b.useRef(-1),R=b.useRef(),T=b.useRef(-1),L=b.useRef(!0),j=b.useRef(!1),q=b.useRef(()=>{}),r0=b.useRef(!1),d0=es(()=>{var Y;const $=(Y=c.current.openEvent)==null?void 0:Y.type;return($==null?void 0:$.includes("mouse"))&&$!=="mousedown"});b.useEffect(()=>{if(!u)return;function Y($){let{open:Z}=$;Z||(se(O),se(T),L.current=!0,r0.current=!1)}return A.on("openchange",Y),()=>{A.off("openchange",Y)}},[u,A]),b.useEffect(()=>{if(!u||!v.current||!s)return;function Y(Z){d0()&&o(!1,Z,"hover")}const $=Ko(d.floating).documentElement;return $.addEventListener("mouseleave",Y),()=>{$.removeEventListener("mouseleave",Y)}},[d.floating,s,o,u,v,d0]);const i0=b.useCallback(function(Y,$,Z){$===void 0&&($=!0),Z===void 0&&(Z="hover");const P=wl(x.current,"close",w.current);P&&!R.current?(se(O),O.current=window.setTimeout(()=>o(!1,Y,Z),P)):$&&(se(O),o(!1,Y,Z))},[x,o]),A0=es(()=>{q.current(),R.current=void 0}),W=es(()=>{if(j.current){const Y=Ko(d.floating).body;Y.style.pointerEvents="",Y.removeAttribute(Nm),j.current=!1}}),u0=es(()=>c.current.openEvent?["click","mousedown"].includes(c.current.openEvent.type):!1);b.useEffect(()=>{if(!u)return;function Y(e0){if(se(O),L.current=!1,y&&!ld(w.current)||Sl(k.current)>0&&!wl(x.current,"open"))return;const a0=wl(x.current,"open",w.current);a0?O.current=window.setTimeout(()=>{_.current||o(!0,e0,"hover")},a0):s||o(!0,e0,"hover")}function $(e0){if(u0()){W();return}q.current();const a0=Ko(d.floating);if(se(T),r0.current=!1,v.current&&c.current.floatingContext){s||se(O),R.current=v.current({...c.current.floatingContext,tree:E,x:e0.clientX,y:e0.clientY,onClose(){W(),A0(),u0()||i0(e0,!0,"safe-polygon")}});const B0=R.current;a0.addEventListener("mousemove",B0),q.current=()=>{a0.removeEventListener("mousemove",B0)};return}(w.current==="touch"?!$7(d.floating,e0.relatedTarget):!0)&&i0(e0)}function Z(e0){u0()||c.current.floatingContext&&(v.current==null||v.current({...c.current.floatingContext,tree:E,x:e0.clientX,y:e0.clientY,onClose(){W(),A0(),u0()||i0(e0)}})(e0))}function P(){se(O)}function Q(e0){u0()||i0(e0,!1)}if(_2(d.domReference)){const e0=d.domReference,a0=d.floating;return s&&e0.addEventListener("mouseleave",Z),F&&e0.addEventListener("mousemove",Y,{once:!0}),e0.addEventListener("mouseenter",Y),e0.addEventListener("mouseleave",$),a0&&(a0.addEventListener("mouseleave",Z),a0.addEventListener("mouseenter",P),a0.addEventListener("mouseleave",Q)),()=>{s&&e0.removeEventListener("mouseleave",Z),F&&e0.removeEventListener("mousemove",Y),e0.removeEventListener("mouseenter",Y),e0.removeEventListener("mouseleave",$),a0&&(a0.removeEventListener("mouseleave",Z),a0.removeEventListener("mouseenter",P),a0.removeEventListener("mouseleave",Q))}}},[d,u,t,y,F,i0,A0,W,o,s,_,E,x,v,c,u0,k]),In(()=>{var Y;if(u&&s&&(Y=v.current)!=null&&(Y=Y.__options)!=null&&Y.blockPointerEvents&&d0()){j.current=!0;const Z=d.floating;if(_2(d.domReference)&&Z){var $;const P=Ko(d.floating).body;P.setAttribute(Nm,"");const Q=d.domReference,e0=E==null||($=E.nodesRef.current.find(a0=>a0.id===B))==null||($=$.context)==null?void 0:$.elements.floating;return e0&&(e0.style.pointerEvents=""),P.style.pointerEvents="none",Q.style.pointerEvents="auto",Z.style.pointerEvents="auto",()=>{P.style.pointerEvents="",Q.style.pointerEvents="",Z.style.pointerEvents=""}}}},[u,s,B,d,E,v,d0]),In(()=>{s||(w.current=void 0,r0.current=!1,A0(),W())},[s,A0,W]),b.useEffect(()=>()=>{A0(),se(O),se(T),W()},[u,d.domReference,A0,W]);const z=b.useMemo(()=>{function Y($){w.current=$.pointerType}return{onPointerDown:Y,onPointerEnter:Y,onMouseMove($){const{nativeEvent:Z}=$;function P(){!L.current&&!_.current&&o(!0,Z,"hover")}y&&!ld(w.current)||s||Sl(k.current)===0||r0.current&&$.movementX**2+$.movementY**2<2||(se(T),w.current==="touch"?P():(r0.current=!0,T.current=window.setTimeout(P,Sl(k.current))))}}},[y,o,s,_,k]);return b.useMemo(()=>u?{reference:z}:{},[u,z])}function kl(t,a){if(!t||!a)return!1;const s=a.getRootNode==null?void 0:a.getRootNode();if(t.contains(a))return!0;if(s&&mi(s)){let o=a;for(;o;){if(t===o)return!0;o=o.parentNode||o.host}}return!1}function mk(t){return"composedPath"in t?t.composedPath()[0]:t.target}function hk(t){const{open:a=!1,onOpenChange:s,elements:o}=t,c=ny(),A=b.useRef({}),[d]=b.useState(()=>lk()),u=ay()!=null,[h,m]=b.useState(o.reference),y=es((E,B,v)=>{A.current.openEvent=E?B:void 0,d.emit("openchange",{open:E,event:B,reason:v,nested:u}),s==null||s(E,B,v)}),g=b.useMemo(()=>({setPositionReference:m}),[]),F=b.useMemo(()=>({reference:h||o.reference||null,floating:o.floating||null,domReference:o.reference}),[h,o.reference,o.floating]);return b.useMemo(()=>({dataRef:A,open:a,onOpenChange:y,elements:F,events:d,floatingId:c,refs:g}),[a,y,F,d,c,g])}function gk(t){t===void 0&&(t={});const{nodeId:a}=t,s=hk({...t,elements:{reference:null,floating:null,...t.elements}}),o=t.rootContext||s,c=o.elements,[A,d]=b.useState(null),[u,h]=b.useState(null),y=(c==null?void 0:c.domReference)||A,g=b.useRef(null),F=ry();In(()=>{y&&(g.current=y)},[y]);const E=A5({...t,elements:{...c,...u&&{reference:u}}}),B=b.useCallback(w=>{const O=_2(w)?{getBoundingClientRect:()=>w.getBoundingClientRect(),getClientRects:()=>w.getClientRects(),contextElement:w}:w;h(O),E.refs.setReference(O)},[E.refs]),v=b.useCallback(w=>{(_2(w)||w===null)&&(g.current=w,d(w)),(_2(E.refs.reference.current)||E.refs.reference.current===null||w!==null&&!_2(w))&&E.refs.setReference(w)},[E.refs]),x=b.useMemo(()=>({...E.refs,setReference:v,setPositionReference:B,domReference:g}),[E.refs,v,B]),_=b.useMemo(()=>({...E.elements,domReference:y}),[E.elements,y]),k=b.useMemo(()=>({...E,...o,refs:x,elements:_,nodeId:a}),[E,x,_,a,o]);return In(()=>{o.dataRef.current.floatingContext=k;const w=F==null?void 0:F.nodesRef.current.find(O=>O.id===a);w&&(w.context=k)}),b.useMemo(()=>({...E,context:k,refs:x,elements:_}),[E,x,_,k])}function Tl(t,a,s){const o=new Map,c=s==="item";let A=t;if(c&&t){const{[Om]:d,[Rm]:u,...h}=t;A=h}return{...s==="floating"&&{tabIndex:-1,[rk]:""},...A,...a.map(d=>{const u=d?d[s]:null;return typeof u=="function"?t?u(t):null:u}).concat(t).reduce((d,u)=>(u&&Object.entries(u).forEach(h=>{let[m,y]=h;if(!(c&&[Om,Rm].includes(m)))if(m.indexOf("on")===0){if(o.has(m)||o.set(m,[]),typeof y=="function"){var g;(g=o.get(m))==null||g.push(y),d[m]=function(){for(var F,E=arguments.length,B=new Array(E),v=0;v<E;v++)B[v]=arguments[v];return(F=o.get(m))==null?void 0:F.map(x=>x(...B)).find(x=>x!==void 0)}}}else d[m]=y}),d),{})}}function Ck(t){t===void 0&&(t=[]);const a=t.map(u=>u==null?void 0:u.reference),s=t.map(u=>u==null?void 0:u.floating),o=t.map(u=>u==null?void 0:u.item),c=b.useCallback(u=>Tl(u,t,"reference"),a),A=b.useCallback(u=>Tl(u,t,"floating"),s),d=b.useCallback(u=>Tl(u,t,"item"),o);return b.useMemo(()=>({getReferenceProps:c,getFloatingProps:A,getItemProps:d}),[c,A,d])}function sy(t,a,s){return s===void 0&&(s=!0),t.filter(c=>{var A;return c.parentId===a&&(!s||((A=c.context)==null?void 0:A.open))}).flatMap(c=>[c,...sy(t,c.id,s)])}function Lm(t,a){const[s,o]=t;let c=!1;const A=a.length;for(let d=0,u=A-1;d<A;u=d++){const[h,m]=a[d]||[0,0],[y,g]=a[u]||[0,0];m>=o!=g>=o&&s<=(y-h)*(o-m)/(g-m)+h&&(c=!c)}return c}function yk(t,a){return t[0]>=a.x&&t[0]<=a.x+a.width&&t[1]>=a.y&&t[1]<=a.y+a.height}function bk(t){t===void 0&&(t={});const{buffer:a=.5,blockPointerEvents:s=!1,requireIntent:o=!0}=t,c={current:-1};let A=!1,d=null,u=null,h=performance.now();function m(g,F){const E=performance.now(),B=E-h;if(d===null||u===null||B===0)return d=g,u=F,h=E,null;const v=g-d,x=F-u,k=Math.sqrt(v*v+x*x)/B;return d=g,u=F,h=E,k}const y=g=>{let{x:F,y:E,placement:B,elements:v,onClose:x,nodeId:_,tree:k}=g;return function(O){function R(){se(c),x()}if(se(c),!v.domReference||!v.floating||B==null||F==null||E==null)return;const{clientX:T,clientY:L}=O,j=[T,L],q=mk(O),r0=O.type==="mouseleave",d0=kl(v.floating,q),i0=kl(v.domReference,q),A0=v.domReference.getBoundingClientRect(),W=v.floating.getBoundingClientRect(),u0=B.split("-")[0],z=F>W.right-W.width/2,Y=E>W.bottom-W.height/2,$=yk(j,A0),Z=W.width>A0.width,P=W.height>A0.height,Q=(Z?A0:W).left,e0=(Z?A0:W).right,a0=(P?A0:W).top,f0=(P?A0:W).bottom;if(d0&&(A=!0,!r0))return;if(i0&&(A=!1),i0&&!r0){A=!0;return}if(r0&&_2(O.relatedTarget)&&kl(v.floating,O.relatedTarget)||k&&sy(k.nodesRef.current,_).length)return;if(u0==="top"&&E>=A0.bottom-1||u0==="bottom"&&E<=A0.top+1||u0==="left"&&F>=A0.right-1||u0==="right"&&F<=A0.left+1)return R();let B0=[];switch(u0){case"top":B0=[[Q,A0.top+1],[Q,W.bottom-1],[e0,W.bottom-1],[e0,A0.top+1]];break;case"bottom":B0=[[Q,W.top+1],[Q,A0.bottom-1],[e0,A0.bottom-1],[e0,W.top+1]];break;case"left":B0=[[W.right-1,f0],[W.right-1,a0],[A0.left+1,a0],[A0.left+1,f0]];break;case"right":B0=[[A0.right-1,f0],[A0.right-1,a0],[W.left+1,a0],[W.left+1,f0]];break}function g0(K0){let[x0,R0]=K0;switch(u0){case"top":{const G0=[Z?x0+a/2:z?x0+a*4:x0-a*4,R0+a+1],u2=[Z?x0-a/2:z?x0+a*4:x0-a*4,R0+a+1],R2=[[W.left,z||Z?W.bottom-a:W.top],[W.right,z?Z?W.bottom-a:W.top:W.bottom-a]];return[G0,u2,...R2]}case"bottom":{const G0=[Z?x0+a/2:z?x0+a*4:x0-a*4,R0-a],u2=[Z?x0-a/2:z?x0+a*4:x0-a*4,R0-a],R2=[[W.left,z||Z?W.top+a:W.bottom],[W.right,z?Z?W.top+a:W.bottom:W.top+a]];return[G0,u2,...R2]}case"left":{const G0=[x0+a+1,P?R0+a/2:Y?R0+a*4:R0-a*4],u2=[x0+a+1,P?R0-a/2:Y?R0+a*4:R0-a*4];return[...[[Y||P?W.right-a:W.left,W.top],[Y?P?W.right-a:W.left:W.right-a,W.bottom]],G0,u2]}case"right":{const G0=[x0-a,P?R0+a/2:Y?R0+a*4:R0-a*4],u2=[x0-a,P?R0-a/2:Y?R0+a*4:R0-a*4],R2=[[Y||P?W.left+a:W.right,W.top],[Y?P?W.left+a:W.right:W.left+a,W.bottom]];return[G0,u2,...R2]}}}if(!Lm([T,L],B0)){if(A&&!$)return R();if(!r0&&o){const K0=m(O.clientX,O.clientY);if(K0!==null&&K0<.1)return R()}Lm([T,L],g0([F,E]))?!A&&o&&(c.current=window.setTimeout(R,40)):R()}}};return y.__options={blockPointerEvents:s},y}function Fk({children:t,...a}){const[s,o]=t,c=b.useRef(null),[A,d]=b.useState(!1),{context:u,refs:h,floatingStyles:m}=gk({middleware:[u5({element:c}),l5(8),d5()],open:A,onOpenChange:d,placement:"bottom-start"}),y=pk(u,{handleClose:bk()}),{getReferenceProps:g,getFloatingProps:F}=Ck([y]),E=o.props.children,B=s.props.children;return C.jsxs("span",{...a,children:[C.jsx("span",{className:"twoslash-target",ref:h.setReference,...g(),children:E}),A&&C.jsxs("div",{className:"twoslash-popup-info-hover",ref:h.setFloating,style:m,...F(),children:[C.jsx(Ak,{ref:c,context:u,fill:Ul.background5,height:3,stroke:Ul.border2,strokeWidth:1,width:7}),C.jsx("div",{className:"twoslash-popup-scroll-container",children:B})]})]})}function Ek(t){var s;const a=c0(t.className,Tm);return(s=t.className)!=null&&s.includes("twoslash-hover")?C.jsx(Fk,{...t,className:a}):C.jsx("span",{...t,className:c0(t.className,Tm)})}var Bk="vocs_Strong";function vk(t){return C.jsx("strong",{...t,className:c0(t.className,Bk)})}var Dk="vocs_Summary";function xk(t){return C.jsx("summary",{...t,className:c0(t.className,Dk)})}var _k="vocs_Table";function wk(t){return C.jsx("table",{...t,className:c0(t.className,_k)})}var Sk="vocs_TableCell";function kk(t){return C.jsx("td",{...t,className:c0(t.className,Sk)})}var Tk="vocs_TableHeader";function Ok(t){return C.jsx("th",{...t,className:c0(t.className,Tk)})}var Rk="vocs_TableRow";function Pk(t){return C.jsx("tr",{...t,className:c0(t.className,Rk)})}const Ik={a:AS,aside:bS,blockquote:ES,code:vS,details:_S,div:F7,pre:K7,header:_7,figcaption:B7,figure:D7,h1:Eh,h2:ZC,h3:$C,h4:QC,h5:ey,h6:ty,hr:S7,kd:lg,li:P7,ol:t=>C.jsx(Sm,{ordered:!0,...t}),p:Bh,section:Z7,span:Ek,strong:vk,summary:xk,table:wk,td:kk,th:Ok,tr:Pk,ul:t=>C.jsx(Sm,{ordered:!1,...t})};function Nk(){const{pathname:t}=s2(),a=m2(),{ogImageUrl:s}=a;if(!s)return;if(typeof s=="string")return s;const o=b.useMemo(()=>{const c=Object.keys(s).filter(A=>t.startsWith(A));return c[c.length-1]},[s,t]);if(o)return s[o]}function dd(t){const{children:a,content:s,filePath:o,frontmatter:c,lastUpdatedAt:A,path:d}=t,{pathname:u}=s2(),h=b.useRef(void 0);return b.useEffect(()=>{h.current=u}),C.jsxs(C.Fragment,{children:[C.jsx(Lk,{frontmatter:c}),typeof window<"u"&&C.jsx(fh,{}),C.jsx(oS,{components:Ik,children:C.jsx(gv,{frontmatter:c,path:d,children:C.jsx(xh.Provider,{value:{content:s,filePath:o,frontmatter:c,lastUpdatedAt:A,previousPath:h.current},children:a})})})]})}function Lk({frontmatter:t}){var F,E,B,v,x,_;const a=m2(),s=Nk(),{baseUrl:o,font:c,iconUrl:A,logoUrl:d}=a,u=(t==null?void 0:t.description)??a.description,h=(t==null?void 0:t.title)??a.title,m=(()=>{if(a.title&&!h.includes(a.title))return a.titleTemplate})(),y=typeof window<"u"&&window.location.hostname==="localhost",g=m?m.replace("%s",h):h;return C.jsxs(C.Fragment,{children:[g&&C.jsx("title",{children:g}),o&&!0&&!y&&C.jsx("base",{href:o}),u!=="undefined"&&C.jsx("meta",{name:"description",content:u}),A&&typeof A=="string"&&C.jsx("link",{rel:"icon",href:A,type:Ol(A)}),A&&typeof A!="string"&&C.jsx("link",{rel:"icon",href:A.light,type:Ol(A.light)}),A&&typeof A!="string"&&C.jsx("link",{rel:"icon",href:A.dark,type:Ol(A.dark),media:"(prefers-color-scheme: dark)"}),C.jsx("meta",{property:"og:type",content:"website"}),C.jsx("meta",{property:"og:title",content:h||a.title}),o&&C.jsx("meta",{property:"og:url",content:o}),u!=="undefined"&&C.jsx("meta",{property:"og:description",content:u}),s&&C.jsx("meta",{property:"og:image",content:s.replace("%logo",`${o||""}${typeof d=="string"?d:(d==null?void 0:d.dark)||""}`).replace("%title",h||"").replace("%description",(u!=="undefined"?u:"")||"")}),(((F=c==null?void 0:c.default)==null?void 0:F.google)||((E=c==null?void 0:c.mono)==null?void 0:E.google))&&C.jsx("link",{rel:"preconnect",href:"https://fonts.googleapis.com"}),(((B=c==null?void 0:c.default)==null?void 0:B.google)||((v=c==null?void 0:c.mono)==null?void 0:v.google))&&C.jsx("link",{rel:"preconnect",href:"https://fonts.gstatic.com",crossOrigin:""}),((x=c==null?void 0:c.default)==null?void 0:x.google)&&C.jsx("link",{href:`https://fonts.googleapis.com/css2?family=${c.default.google}:wght@300;400;500&display=swap`,rel:"stylesheet"}),((_=c==null?void 0:c.mono)==null?void 0:_.google)&&C.jsx("link",{href:`https://fonts.googleapis.com/css2?family=${c.mono.google}:wght@300;400;500&display=swap`,rel:"stylesheet"}),C.jsx("meta",{name:"twitter:card",content:"summary_large_image"}),s&&C.jsx("meta",{property:"twitter:image",content:s.replace("%logo",`${o||""}${typeof d=="string"?d:(d==null?void 0:d.dark)||""}`).replace("%title",h?encodeURIComponent(h):"").replace("%description",u?encodeURIComponent(u):"")})]})}function Ol(t){if(t.endsWith(".svg"))return"image/svg+xml";if(t.endsWith(".png"))return"image/png";if(t.endsWith(".jpg"))return"image/jpeg";if(t.endsWith(".ico"))return"image/x-icon";if(t.endsWith(".webp"))return"image/webp"}const zk=(()=>{const t=Dd.find(({path:a})=>a==="*");return t?{path:t.path,lazy:async()=>{const{frontmatter:a,...s}=await t.lazy();return{...s,element:C.jsx(dd,{frontmatter:a,path:t.path,children:C.jsx(cd,{children:C.jsx(s.default,{})})})}}}:{path:"*",lazy:void 0,element:C.jsx(dd,{frontmatter:{layout:"minimal"},path:"*",children:C.jsx(cd,{children:C.jsx(HB,{})})})}})(),zm=[...Dd.filter(({path:t})=>t!=="*").map(t=>({path:t.path,lazy:async()=>{const{frontmatter:a,...s}=await t.lazy();return{...s,element:C.jsx(dd,{content:decodeURIComponent(t.content??""),filePath:t.filePath,frontmatter:a,lastUpdatedAt:t.lastUpdatedAt,path:t.path,children:C.jsx(cd,{children:C.jsx(s.default,{})})})}}})),zk];async function Mk(t,a){var o;const s=(o=yt(t,window.location,a))==null?void 0:o.filter(c=>c.route.lazy);s&&(s==null?void 0:s.length)>0&&await Promise.all(s.map(async c=>{const A=await c.route.lazy();Object.assign(c.route,{...A,lazy:void 0})}))}function Uk(){const t=document.querySelectorAll('style[data-vocs-temp-style="true"]');for(const a of t)a.remove()}jk();async function jk(){const t=gh().basePath;await Mk(zm,t),Uk();const a=fB(zm,{basename:t});FF.hydrateRoot(document.getElementById("app"),C.jsx(SB,{children:C.jsx(UE,{router:a})}))}export{r7 as C,ve as L,t7 as R,WS as S,a7 as T,Jk as a,xl as b,c0 as c,X9 as d,n7 as e,a2 as f,C as j,m2 as u};
