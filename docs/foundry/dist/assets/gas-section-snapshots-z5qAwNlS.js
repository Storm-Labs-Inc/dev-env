import{j as e}from"./index-D5UbER3f.js";import o from"./gas-snapshots-Dbbj5z80.js";import{u as a}from"./index-CZxYc6i7.js";const d={description:"Capture granular gas usage measurements for arbitrary code sections using snapshotGas cheatcodes in tests.",title:"Gas Section Snapshots"};function t(n){const s={a:"a",code:"code",div:"div",h1:"h1",header:"header",p:"p",...a(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(s.header,{children:e.jsxs(s.h1,{id:"gas-section-snapshots",children:["Gas Section Snapshots",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#gas-section-snapshots",children:e.jsx(s.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsx(s.p,{children:"Forge can capture gas snapshots over arbitrary sections inside of your test functions. This can be useful to get a granular measurement of how much gas your logic is consuming as both external calls and internal gas usage are measured."}),`
`,e.jsxs(s.p,{children:["Instead of running a command like ",e.jsx(s.code,{children:"forge snapshot"})," or ",e.jsx(s.code,{children:"forge test --gas-report"}),", you use the ",e.jsx(s.code,{children:"snapshotGas"})," ",e.jsx(s.a,{href:"/reference/cheatcodes/gas-snapshots",children:"cheatcodes"})," in your tests to capture gas usage as follows:"]}),`
`,e.jsx(o,{})]})}function h(n={}){const{wrapper:s}={...a(),...n.components};return s?e.jsx(s,{...n,children:e.jsx(t,{...n})}):t(n)}export{h as default,d as frontmatter};
